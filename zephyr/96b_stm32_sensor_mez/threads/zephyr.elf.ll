; ModuleID = 'build/96b_stm32_sensor_mez/threads/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct._sfnode, %struct._wait_q_t }
%struct._sflist = type { %struct._sfnode*, %struct._sfnode* }
%struct._sfnode = type { i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.led = type { %struct.gpio_dt_spec, i8 }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct._sfnode }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct._sfnode] }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct._sfnode }
%struct.arm_mpu_region = type { i32, i8*, %struct._sfnode }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct._sfnode, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct._sfnode, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.printk_data_t = type { i8*, i32, i32 }
%struct.__va_list = type { i8* }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct._sfnode, %struct._sfnode }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236813 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236793 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236783 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236883 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236873 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236863 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236853 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236843 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236833 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236823 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238376 to i8*), void (i8*)* inttoptr (i32 134236803 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink0_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_uart_out_id to i8*), i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@printk_fifo = dso_local global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct._sfnode zeroinitializer, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) } } } } }, section "._k_queue.static.printk_fifo", align 4, !dbg !25
@.str = private unnamed_addr constant [31 x i8] c"Error: %s device is not ready\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Error %d: failed to configure pin %d (LED '%d')\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"mem_ptr != 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@led0 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_19, i8 10, i16 0 }, i8 0 }, align 4, !dbg !395
@led1 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_19, i8 11, i16 0 }, i8 1 }, align 4, !dbg !408
@.str.5 = private unnamed_addr constant [27 x i8] c"Toggled led%d; counter=%d\0A\00", align 1
@_k_thread_obj_blink0_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !385
@_k_thread_stack_blink0_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !380
@.str.6 = private unnamed_addr constant [10 x i8] c"blink0_id\00", align 1
@_k_thread_data_blink0_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink0_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink0_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink0 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink0_id", align 4, !dbg !216
@blink0_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink0_id, align 4, !dbg !368
@_k_thread_obj_blink1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !389
@_k_thread_stack_blink1_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !387
@.str.7 = private unnamed_addr constant [10 x i8] c"blink1_id\00", align 1
@_k_thread_data_blink1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink1 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink1_id", align 4, !dbg !372
@blink1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink1_id, align 4, !dbg !374
@_k_thread_obj_uart_out_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !393
@_k_thread_stack_uart_out_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 64, !dbg !391
@.str.8 = private unnamed_addr constant [12 x i8] c"uart_out_id\00", align 1
@_k_thread_data_uart_out_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_uart_out_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_uart_out_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @uart_out to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_uart_out_id", align 4, !dbg !376
@uart_out_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_uart_out_id, align 4, !dbg !378
@.str.10 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.25 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.27 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !430
@.str.9 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.11 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.12 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.14 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.15 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.16 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.18 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.19 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !441
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !485
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.40 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.41 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.45 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.46 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.47 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.50 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.51 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.48 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.49 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct._sfnode { i32 101384192 } }], align 4, !dbg !514
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !520
@.str.62 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.64 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.65 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.68 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.69 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !649
@.str.6.70 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.71 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !685
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), %struct._sfnode { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.81, i32 0, i32 0), %struct._sfnode { i32 285933600 } }], align 4, !dbg !695
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !700
@.str.80 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.81 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.85 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.86 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !921
@.str.4.82 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !883
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !866
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.82, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !839
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !916
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.87 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !959
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1057
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1046
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1098
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.98 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1164
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1426
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1382
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1327
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.1.101 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1428
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.2.102 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1441
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1347
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.3.105 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1443
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.4.106 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1445
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.5.107 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1447
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1416
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1414
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.6.108 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1449
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1420
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1418
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1374
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.7.109 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1451
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1424
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1422
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1380
@.str.8.99 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.100 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.113 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1453
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1670
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1625
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1672
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.113, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1598
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1600
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.1.118 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1679
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1627
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1704
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.118, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.2.119 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1706
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1629
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1716
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.119, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1615
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1617
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.3.122 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1718
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1631
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1728
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.122, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1621
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1623
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1633
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1641
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1664
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1667
@.str.4.114 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.115 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.116 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.117 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1030
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1696
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1698
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1700
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1702
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1708
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1710
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1712
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1714
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1720
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1722
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1724
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1726
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1730
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1841
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1843
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1839
@lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !1834
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1808
@.str.129 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.130 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.131 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.132 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.133 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.134 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1845
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1325
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.101, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.102, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1345
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.105, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.107, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.108, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1372
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.109, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1378
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1935
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1979
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1982
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1989
@.str.168 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.169 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.170 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.171 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1996
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2209
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2215
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2222
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2227
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.4.182 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.187, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.188, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.189, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.184, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.191, i32 0, i32 0)], align 4, !dbg !2255
@.str.185 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.186 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.187 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.188 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.189 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.190 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.184 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.191 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2369
@.str.8.183 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.194 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.195 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.196 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.197 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.199 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.211 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.212 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.213 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.216 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.217 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.218 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.219 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.222 = private unnamed_addr constant [24 x i8] c"(flags & ~0x3UL) == 0UL\00", align 1
@.str.5.223 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/include/zephyr/sys/sflist.h\00", align 1
@.str.6.224 = private unnamed_addr constant [18 x i8] c"\09flags too large\0A\00", align 1
@.str.7.220 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.221 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct._sfnode zeroinitializer, align 4, !dbg !2382
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2492
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2495
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2497
@.str.231 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.248 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.237 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.255 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.265 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.239 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.260 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.236 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.269 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.270 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.278 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.279 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.280 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.281 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.232 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.233 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.234 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.235 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.238 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.252 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.261 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.262 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2217
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2220
@.str.23.273 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.287 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.288 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.289 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.290 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !2499
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2529
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2534
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2532
@.str.4.291 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.292 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.293 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.297 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.298 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [256 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2540
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @kheap__system_heap, i32 0, i32 0), i32 256 }, %struct._wait_q_t zeroinitializer, %struct._sfnode zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2546
@.str.317 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.318 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.319 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.320 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.321 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.322 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2084
@.str.6.323 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.324 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@.str.335 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2583
@.str.337 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.348 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.339 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.349 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.338 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.340 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.345 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.346 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.347 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.350 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.351 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3256 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3312, !srcloc !3315
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3362, !srcloc !3363
  ret void, !dbg !3364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink0() #1 !dbg !3367 {
  tail call void @blink(%struct.led* noundef nonnull @led0, i32 noundef 100, i32 noundef 0) #26, !dbg !3368
  ret void, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink(%struct.led* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3370 {
  %4 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3375, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i32 %1, metadata !3376, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i32 %2, metadata !3377, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3378, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i32 0, metadata !3381, metadata !DIExpression()), !dbg !3392
  %5 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 0, !dbg !3393
  %6 = load %struct.device*, %struct.device** %5, align 4, !dbg !3393
  %7 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %6) #26, !dbg !3395
  br i1 %7, label %12, label %8, !dbg !3396

8:                                                ; preds = %3
  %9 = load %struct.device*, %struct.device** %5, align 4, !dbg !3397
  %10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !3399
  %11 = load i8*, i8** %10, align 4, !dbg !3399
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i8* noundef %11) #27, !dbg !3400
  br label %43, !dbg !3401

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, !dbg !3402
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %13, metadata !3378, metadata !DIExpression()), !dbg !3392
  %14 = tail call fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef %13) #26, !dbg !3403
  call void @llvm.dbg.value(metadata i32 %14, metadata !3382, metadata !DIExpression()), !dbg !3392
  %15 = icmp eq i32 %14, 0, !dbg !3404
  %16 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 1
  br i1 %15, label %17, label %26, !dbg !3406

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 0, metadata !3381, metadata !DIExpression()), !dbg !3392
  %18 = load %struct.device*, %struct.device** %5, align 4, !dbg !3407
  %19 = load i8, i8* %16, align 4, !dbg !3408
  call fastcc void @gpio_pin_set(%struct.device* noundef %18, i8 noundef zeroext %19, i32 noundef 0) #26, !dbg !3409
  %20 = bitcast %struct.printk_data_t* %4 to i8*, !dbg !3410
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3410
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3383, metadata !DIExpression()), !dbg !3411
  %21 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 0, !dbg !3412
  store i8* null, i8** %21, align 4, !dbg !3412
  %22 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 1, !dbg !3412
  store i32 %2, i32* %22, align 4, !dbg !3412
  %23 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 2, !dbg !3412
  store i32 0, i32* %23, align 4, !dbg !3412
  call void @llvm.dbg.value(metadata i32 12, metadata !3390, metadata !DIExpression()), !dbg !3413
  %24 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3414
  call void @llvm.dbg.value(metadata i8* %24, metadata !3391, metadata !DIExpression()), !dbg !3413
  %25 = icmp eq i8* %24, null, !dbg !3415
  br i1 %25, label %32, label %33, !dbg !3418

26:                                               ; preds = %12
  %27 = load i8, i8* %16, align 4, !dbg !3419
  %28 = zext i8 %27 to i32, !dbg !3421
  %29 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 1, !dbg !3422
  %30 = load i8, i8* %29, align 4, !dbg !3422
  %31 = zext i8 %30 to i32, !dbg !3423
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0), i32 noundef %14, i32 noundef %28, i32 noundef %31) #27, !dbg !3424
  br label %43, !dbg !3425

32:                                               ; preds = %33, %17
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3426
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3426
  unreachable, !dbg !3426

33:                                               ; preds = %17, %33
  %34 = phi i8* [ %41, %33 ], [ %24, %17 ]
  %35 = phi i32 [ %37, %33 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3381, metadata !DIExpression()), !dbg !3392
  %36 = call i8* @memcpy(i8* noundef nonnull %34, i8* noundef nonnull %20, i32 noundef 12) #27, !dbg !3428
  call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), i8* noundef nonnull %34) #27, !dbg !3429
  call fastcc void @k_msleep(i32 noundef %1) #26, !dbg !3431
  %37 = add nuw nsw i32 %35, 1, !dbg !3432
  call void @llvm.dbg.value(metadata i32 %37, metadata !3381, metadata !DIExpression()), !dbg !3392
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3433
  %38 = load %struct.device*, %struct.device** %5, align 4, !dbg !3407
  %39 = load i8, i8* %16, align 4, !dbg !3408
  %40 = and i32 %37, 1, !dbg !3434
  call fastcc void @gpio_pin_set(%struct.device* noundef %38, i8 noundef zeroext %39, i32 noundef %40) #26, !dbg !3409
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3410
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3383, metadata !DIExpression()), !dbg !3411
  store i8* null, i8** %21, align 4, !dbg !3412
  store i32 %2, i32* %22, align 4, !dbg !3412
  store i32 %37, i32* %23, align 4, !dbg !3412
  call void @llvm.dbg.value(metadata i32 12, metadata !3390, metadata !DIExpression()), !dbg !3413
  %41 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3414
  call void @llvm.dbg.value(metadata i8* %41, metadata !3391, metadata !DIExpression()), !dbg !3413
  %42 = icmp eq i8* %41, null, !dbg !3415
  br i1 %42, label %32, label %33, !dbg !3418, !llvm.loop !3435

43:                                               ; preds = %26, %8
  ret void, !dbg !3437
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3443, metadata !DIExpression()), !dbg !3444
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3445, !srcloc !3447
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !3448
  ret i1 %2, !dbg !3449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3450 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !3454, metadata !DIExpression()), !dbg !3456
  call void @llvm.dbg.value(metadata i32 131072, metadata !3455, metadata !DIExpression()), !dbg !3456
  %2 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !3457
  %3 = load %struct.device*, %struct.device** %2, align 4, !dbg !3457
  %4 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !3458
  %5 = load i8, i8* %4, align 4, !dbg !3458
  %6 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !3459
  %7 = load i16, i16* %6, align 2, !dbg !3459
  %8 = zext i16 %7 to i32, !dbg !3460
  %9 = or i32 %8, 131072, !dbg !3461
  %10 = tail call fastcc i32 @gpio_pin_configure(%struct.device* noundef %3, i8 noundef zeroext %5, i32 noundef %9) #26, !dbg !3462
  ret i32 %10, !dbg !3463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3468, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.value(metadata i8 %1, metadata !3469, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.value(metadata i32 %2, metadata !3470, metadata !DIExpression()), !dbg !3475
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3476
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3476
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3476
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3471, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.value(metadata %struct._sfnode* undef, metadata !3473, metadata !DIExpression()), !dbg !3475
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3477
  %8 = load i32, i32* %7, align 4, !dbg !3477
  %9 = zext i8 %1 to i32, !dbg !3477
  %10 = shl nuw i32 1, %9, !dbg !3477
  %11 = and i32 %8, %10, !dbg !3477
  %12 = icmp eq i32 %11, 0, !dbg !3477
  br i1 %12, label %13, label %14, !dbg !3480

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3481
  unreachable, !dbg !3481

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3483
  %16 = bitcast i8** %15 to %struct._sfnode**, !dbg !3483
  %17 = load %struct._sfnode*, %struct._sfnode** %16, align 4, !dbg !3483
  call void @llvm.dbg.value(metadata %struct._sfnode* %17, metadata !3473, metadata !DIExpression()), !dbg !3475
  %18 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %17, i32 0, i32 0, !dbg !3484
  %19 = load i32, i32* %18, align 4, !dbg !3484
  %20 = and i32 %19, %10, !dbg !3486
  %21 = icmp eq i32 %20, 0, !dbg !3486
  %22 = icmp eq i32 %2, 0, !dbg !3487
  %23 = zext i1 %22 to i32, !dbg !3487
  %24 = select i1 %21, i32 %2, i32 %23, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %24, metadata !3470, metadata !DIExpression()), !dbg !3475
  tail call fastcc void @gpio_pin_set_raw(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %24) #26, !dbg !3488
  ret void, !dbg !3489
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3494, metadata !DIExpression()), !dbg !3495
  %2 = icmp sgt i32 %0, 0, !dbg !3496
  %3 = select i1 %2, i32 %0, i32 0, !dbg !3496
  %4 = zext i32 %3 to i64, !dbg !3496
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #26, !dbg !3496
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3497
  tail call fastcc void @k_sleep([1 x i64] %6) #26, !dbg !3497
  ret void, !dbg !3498
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3499 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3504, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i64 %0, metadata !3506, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 1000, metadata !3511, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 10000, metadata !3512, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 1, metadata !3513, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 0, metadata !3514, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 1, metadata !3515, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 0, metadata !3516, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 1, metadata !3517, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8 0, metadata !3518, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i64 0, metadata !3519, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i64 0, metadata !3519, metadata !DIExpression()), !dbg !3523
  %2 = mul i64 %0, 10, !dbg !3525
  ret i64 %2, !dbg !3531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3532 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3541, metadata !DIExpression()), !dbg !3542
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3543, !srcloc !3545
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3546
  ret void, !dbg !3547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set_raw(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3548 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3550, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i8 %1, metadata !3551, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.value(metadata i32 %2, metadata !3552, metadata !DIExpression()), !dbg !3555
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3556
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3556
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3556
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3553, metadata !DIExpression()), !dbg !3555
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3557
  %8 = load i32, i32* %7, align 4, !dbg !3557
  %9 = zext i8 %1 to i32, !dbg !3557
  %10 = shl nuw i32 1, %9, !dbg !3557
  %11 = and i32 %8, %10, !dbg !3557
  %12 = icmp eq i32 %11, 0, !dbg !3557
  br i1 %12, label %13, label %14, !dbg !3560

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3561
  unreachable, !dbg !3561

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !3563
  br i1 %15, label %18, label %16, !dbg !3565

16:                                               ; preds = %14
  %17 = tail call fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3566
  call void @llvm.dbg.value(metadata i32 %17, metadata !3554, metadata !DIExpression()), !dbg !3555
  br label %20, !dbg !3568

18:                                               ; preds = %14
  %19 = tail call fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3569
  call void @llvm.dbg.value(metadata i32 %19, metadata !3554, metadata !DIExpression()), !dbg !3555
  br label %20

20:                                               ; preds = %18, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !3554, metadata !DIExpression()), !dbg !3555
  ret void, !dbg !3571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %1, metadata !3576, metadata !DIExpression()), !dbg !3577
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3578, !srcloc !3580
  %3 = tail call fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3581
  ret i32 %3, !dbg !3582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3585, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.value(metadata i32 %1, metadata !3586, metadata !DIExpression()), !dbg !3587
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3588, !srcloc !3590
  %3 = tail call fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3591
  ret i32 %3, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3595, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i32 %1, metadata !3596, metadata !DIExpression()), !dbg !3598
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3599
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3599
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3599
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3597, metadata !DIExpression()), !dbg !3598
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 4, !dbg !3600
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3600
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3601
  ret i32 %8, !dbg !3602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3605, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %1, metadata !3606, metadata !DIExpression()), !dbg !3608
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3609
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3609
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3609
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3607, metadata !DIExpression()), !dbg !3608
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 3, !dbg !3610
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3610
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3611
  ret i32 %8, !dbg !3612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3615, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i8 %1, metadata !3616, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %2, metadata !3617, metadata !DIExpression()), !dbg !3618
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3619, !srcloc !3621
  %4 = tail call fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !3622
  ret i32 %4, !dbg !3623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3626, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i8 %1, metadata !3627, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %2, metadata !3628, metadata !DIExpression()), !dbg !3632
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3633
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !3633
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !3633
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !3629, metadata !DIExpression()), !dbg !3632
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3634
  %8 = bitcast i8** %7 to %struct._sfnode**, !dbg !3634
  %9 = load %struct._sfnode*, %struct._sfnode** %8, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !3630, metadata !DIExpression()), !dbg !3632
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3635
  %11 = bitcast i8** %10 to %struct._sfnode**, !dbg !3635
  %12 = load %struct._sfnode*, %struct._sfnode** %11, align 4, !dbg !3635
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !3631, metadata !DIExpression()), !dbg !3632
  %13 = and i32 %2, 132120576, !dbg !3636
  %14 = icmp eq i32 %13, 0, !dbg !3636
  br i1 %14, label %16, label %15, !dbg !3639

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !3640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3640
  unreachable, !dbg !3640

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !3642
  %18 = icmp eq i32 %17, 48, !dbg !3642
  br i1 %18, label %19, label %20, !dbg !3645

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i32 0, i32 0)) #27, !dbg !3646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3646
  unreachable, !dbg !3646

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !3648
  %22 = icmp ne i32 %21, 0, !dbg !3648
  %23 = and i32 %2, 131074, !dbg !3648
  %24 = icmp eq i32 %23, 2, !dbg !3648
  br i1 %24, label %25, label %26, !dbg !3648

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.25, i32 0, i32 0)) #27, !dbg !3651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3651
  unreachable, !dbg !3651

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !3653
  %28 = icmp eq i32 %27, 4, !dbg !3653
  br i1 %28, label %29, label %30, !dbg !3653

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3656
  unreachable, !dbg !3656

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !3658
  %32 = icmp eq i32 %31, 0, !dbg !3658
  %33 = or i1 %32, %22, !dbg !3658
  br i1 %33, label %35, label %34, !dbg !3658

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i32 0, i32 0)) #27, !dbg !3661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3661
  unreachable, !dbg !3661

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !3663
  br i1 %36, label %37, label %38, !dbg !3666

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i32 0, i32 0)) #27, !dbg !3667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3667
  unreachable, !dbg !3667

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !3669
  %40 = icmp ne i32 %39, 1048577, !dbg !3669
  %41 = or i1 %40, %32, !dbg !3669
  %42 = xor i32 %2, 786432, !dbg !3669
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %43, metadata !3628, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %43, metadata !3628, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !3632
  %44 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %9, i32 0, i32 0, !dbg !3671
  %45 = load i32, i32* %44, align 4, !dbg !3671
  %46 = zext i8 %1 to i32, !dbg !3671
  %47 = shl nuw i32 1, %46, !dbg !3671
  %48 = and i32 %45, %47, !dbg !3671
  %49 = icmp eq i32 %48, 0, !dbg !3671
  br i1 %49, label %50, label %51, !dbg !3674

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3675
  unreachable, !dbg !3675

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !3677
  %53 = icmp eq i32 %52, 0, !dbg !3679
  br i1 %53, label %58, label %54, !dbg !3680

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3681
  %56 = load i32, i32* %55, align 4, !dbg !3683
  %57 = or i32 %56, %47, !dbg !3683
  store i32 %57, i32* %55, align 4, !dbg !3683
  br label %63, !dbg !3684

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !3685
  %60 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3687
  %61 = load i32, i32* %60, align 4, !dbg !3688
  %62 = and i32 %61, %59, !dbg !3688
  store i32 %62, i32* %60, align 4, !dbg !3688
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %64, metadata !3628, metadata !DIExpression()), !dbg !3632
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !3690
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !3690
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #27, !dbg !3691
  ret i32 %67, !dbg !3692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3695, metadata !DIExpression()), !dbg !3696
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !3697
  ret i1 %2, !dbg !3698
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink1() #1 !dbg !3699 {
  tail call void @blink(%struct.led* noundef nonnull @led1, i32 noundef 1000, i32 noundef 1) #26, !dbg !3700
  ret void, !dbg !3701
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @uart_out() #5 !dbg !3702 {
  br label %1, !dbg !3709

1:                                                ; preds = %0, %1
  %2 = tail call fastcc i8* @k_queue_get() #26, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %2, metadata !3707, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i8* %2, metadata !3704, metadata !DIExpression()), !dbg !3712
  %3 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3713
  %4 = bitcast i8* %3 to i32*, !dbg !3713
  %5 = load i32, i32* %4, align 4, !dbg !3713
  %6 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3714
  %7 = bitcast i8* %6 to i32*, !dbg !3714
  %8 = load i32, i32* %7, align 4, !dbg !3714
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i32 noundef %5, i32 noundef %8) #27, !dbg !3715
  tail call void @k_free(i8* noundef %2) #27, !dbg !3716
  br label %1, !dbg !3709, !llvm.loop !3717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !3719 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), metadata !3724, metadata !DIExpression()), !dbg !3726
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3727, !srcloc !3729
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), [1 x i64] [i64 -1]) #27, !dbg !3730
  ret i8* %1, !dbg !3731
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3734, metadata !DIExpression()), !dbg !3735
  ret i32 0, !dbg !3736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !3737 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3741, metadata !DIExpression()), !dbg !3742
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3743
  ret void, !dbg !3744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #7 !dbg !3745 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3748
  ret i8* %1, !dbg !3749
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3750 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3762, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %0, metadata !3761, metadata !DIExpression()), !dbg !3771
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3772
  ret void, !dbg !3774
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3779, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i8* %1, metadata !3780, metadata !DIExpression()), !dbg !3781
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3782
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3782
  ret i32 %4, !dbg !3783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3784 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3793, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i8* %1, metadata !3794, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i8* %2, metadata !3795, metadata !DIExpression()), !dbg !3797
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3798
  ret void, !dbg !3799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3804, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 %1, metadata !3805, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 0, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = icmp eq i32 %1, 0, !dbg !3808
  br i1 %3, label %13, label %4, !dbg !3811

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3806, metadata !DIExpression()), !dbg !3807
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3812
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3814
  %8 = load i8, i8* %7, align 1, !dbg !3814
  %9 = zext i8 %8 to i32, !dbg !3814
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3812
  %11 = add nuw i32 %5, 1, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %11, metadata !3806, metadata !DIExpression()), !dbg !3807
  %12 = icmp eq i32 %11, %1, !dbg !3808
  br i1 %12, label %13, label %4, !dbg !3811, !llvm.loop !3816

13:                                               ; preds = %4, %2
  ret void, !dbg !3818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3819 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3823, metadata !DIExpression()), !dbg !3825
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3826
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3826
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3824, metadata !DIExpression()), !dbg !3827
  call void @llvm.va_start(i8* nonnull %3), !dbg !3828
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3829
  %5 = load i32, i32* %4, align 4, !dbg !3829
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3829
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3829
  call void @llvm.va_end(i8* nonnull %3), !dbg !3830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3831
  ret void, !dbg !3831
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3832 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %1, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %2, metadata !3838, metadata !DIExpression()), !dbg !3841
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3842
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3842
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3839, metadata !DIExpression()), !dbg !3843
  call void @llvm.va_start(i8* nonnull %5), !dbg !3844
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3845
  %7 = load i32, i32* %6, align 4, !dbg !3845
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3845
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %9, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.va_end(i8* nonnull %5), !dbg !3846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3847
  ret i32 %9, !dbg !3848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3849 {
  %5 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3856, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %0, metadata !3853, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1, metadata !3854, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %2, metadata !3855, metadata !DIExpression()), !dbg !3863
  %6 = bitcast %struct.printk_data_t* %5 to i8*, !dbg !3864
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3864
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %5, metadata !3857, metadata !DIExpression()), !dbg !3865
  %7 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 0, !dbg !3866
  store i8* %0, i8** %7, align 4, !dbg !3866
  %8 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 1, !dbg !3866
  store i32 %1, i32* %8, align 4, !dbg !3866
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 2, !dbg !3866
  store i32 0, i32* %9, align 4, !dbg !3866
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.printk_data_t*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3867
  %10 = load i32, i32* %9, align 4, !dbg !3868
  %11 = load i32, i32* %8, align 4, !dbg !3870
  %12 = icmp slt i32 %10, %11, !dbg !3871
  br i1 %12, label %13, label %15, !dbg !3872

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3873
  store i8 0, i8* %14, align 1, !dbg !3875
  br label %15, !dbg !3876

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3877
  ret i32 %10, !dbg !3878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.printk_data_t* nocapture noundef %1) #9 !dbg !3879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.value(metadata %struct.printk_data_t* %1, metadata !3885, metadata !DIExpression()), !dbg !3886
  %3 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 0, !dbg !3887
  %4 = load i8*, i8** %3, align 4, !dbg !3887
  %5 = icmp eq i8* %4, null, !dbg !3889
  %6 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3890
  br i1 %5, label %12, label %8, !dbg !3891

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 1, !dbg !3892
  %10 = load i32, i32* %9, align 4, !dbg !3892
  %11 = icmp slt i32 %7, %10, !dbg !3893
  br i1 %11, label %15, label %12, !dbg !3894

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2, !dbg !3895
  %14 = add nsw i32 %7, 1, !dbg !3897
  store i32 %14, i32* %13, align 4, !dbg !3897
  br label %25, !dbg !3898

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3899
  %17 = icmp eq i32 %7, %16, !dbg !3901
  br i1 %17, label %18, label %21, !dbg !3902

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3903
  store i32 %19, i32* %6, align 4, !dbg !3903
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3905
  store i8 0, i8* %20, align 1, !dbg !3906
  br label %25, !dbg !3907

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3908
  %23 = add nsw i32 %7, 1, !dbg !3910
  store i32 %23, i32* %6, align 4, !dbg !3910
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3911
  store i8 %22, i8* %24, align 1, !dbg !3912
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3913
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3914 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3919, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %1, metadata !3920, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %2, metadata !3921, metadata !DIExpression()), !dbg !3923
  call void @llvm.dbg.value(metadata i8* %3, metadata !3922, metadata !DIExpression()), !dbg !3923
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3924
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3925
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3926
  unreachable, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3928 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4034
  ret %struct.k_thread* %1, !dbg !4035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4036 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4040, metadata !DIExpression()), !dbg !4041
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4042, !srcloc !4044
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4045
  ret void, !dbg !4046
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !4047 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4048, !srcloc !4050
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4051
  ret %struct.k_thread* %1, !dbg !4052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4064, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %1, metadata !4065, metadata !DIExpression()), !dbg !4068
  %3 = icmp eq i8* %1, null, !dbg !4069
  br i1 %3, label %16, label %4, !dbg !4071

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4072
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4072
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4066, metadata !DIExpression()), !dbg !4068
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4073, !range !4074
  call void @llvm.dbg.value(metadata i32 %7, metadata !4067, metadata !DIExpression()), !dbg !4068
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4075
  br i1 %8, label %10, label %9, !dbg !4078

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.12, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !4079
  unreachable, !dbg !4079

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4081
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !4081
  %13 = icmp eq i32 %12, %7, !dbg !4081
  br i1 %13, label %15, label %14, !dbg !4084

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.14, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4085
  unreachable, !dbg !4085

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4087
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4088
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !4089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !4090 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4094, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i8* %1, metadata !4095, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i8* %1, metadata !4096, metadata !DIExpression()), !dbg !4098
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4099
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4097, metadata !DIExpression()), !dbg !4098
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4100
  %5 = ptrtoint i8* %4 to i32, !dbg !4101
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4101
  %7 = sub i32 %5, %6, !dbg !4101
  %8 = lshr i32 %7, 3, !dbg !4102
  ret i32 %8, !dbg !4103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4108, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i32 %1, metadata !4109, metadata !DIExpression()), !dbg !4110
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4111
  %4 = and i32 %3, 1, !dbg !4112
  %5 = icmp ne i32 %4, 0, !dbg !4111
  ret i1 %5, !dbg !4113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4114 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4118, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %1, metadata !4119, metadata !DIExpression()), !dbg !4120
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4121
  %4 = add i32 %3, %1, !dbg !4122
  ret i32 %4, !dbg !4123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4124 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4126, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.value(metadata i32 %1, metadata !4127, metadata !DIExpression()), !dbg !4128
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4129
  %4 = sub i32 %1, %3, !dbg !4130
  ret i32 %4, !dbg !4131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4132 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4136, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32 %1, metadata !4137, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i1 %2, metadata !4138, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4141
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4142
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4139, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4140, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4141
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4143
  %6 = bitcast i8* %5 to i16*, !dbg !4143
  %7 = load i16, i16* %6, align 2, !dbg !4143
  %8 = and i16 %7, -2, !dbg !4147
  %9 = zext i1 %2 to i16, !dbg !4147
  %10 = or i16 %8, %9, !dbg !4147
  store i16 %10, i16* %6, align 2, !dbg !4143
  ret void, !dbg !4148
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4149 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4153, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 %1, metadata !4154, metadata !DIExpression()), !dbg !4155
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4156
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4158
  br i1 %4, label %7, label %5, !dbg !4159

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4160
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4162
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4163
  br label %7, !dbg !4164

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4165
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4167
  br i1 %9, label %13, label %10, !dbg !4168

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4169
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4171
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4172
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %12, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %13, !dbg !4174

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4154, metadata !DIExpression()), !dbg !4155
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4175
  ret void, !dbg !4176
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4177 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4179, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %1, metadata !4180, metadata !DIExpression()), !dbg !4184
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4185, !range !4186
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %4, metadata !4181, metadata !DIExpression()), !dbg !4188
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4189
  ret void, !dbg !4190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4191 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4195, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %1, metadata !4196, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %2, metadata !4197, metadata !DIExpression()), !dbg !4200
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4201
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4202
  %6 = add i32 %5, %4, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %6, metadata !4198, metadata !DIExpression()), !dbg !4200
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4204
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4205
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4206
  ret void, !dbg !4207
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4208 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4210, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %1, metadata !4211, metadata !DIExpression()), !dbg !4215
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4216, !range !4186
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %4, metadata !4212, metadata !DIExpression()), !dbg !4218
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4219
  ret void, !dbg !4220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4221 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata i32 %1, metadata !4226, metadata !DIExpression()), !dbg !4227
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4228
  %4 = lshr i32 %3, 1, !dbg !4229
  ret i32 %4, !dbg !4230
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #10 !dbg !4231 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4235, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %1, metadata !4236, metadata !DIExpression()), !dbg !4238
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4239
  %4 = add i32 %1, 1, !dbg !4240
  %5 = sub i32 %4, %3, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %5, metadata !4237, metadata !DIExpression()), !dbg !4238
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4242, !range !4243
  %7 = sub nsw i32 31, %6, !dbg !4244
  ret i32 %7, !dbg !4245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4250, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata i32 %1, metadata !4251, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata i32 %2, metadata !4252, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4253, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4259
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4260
  %5 = load i32, i32* %4, align 4, !dbg !4260
  %6 = icmp eq i32 %5, 0, !dbg !4261
  br i1 %6, label %7, label %12, !dbg !4262

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4263
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4265
  %10 = load i32, i32* %9, align 4, !dbg !4266
  %11 = or i32 %10, %8, !dbg !4266
  store i32 %11, i32* %9, align 4, !dbg !4266
  store i32 %1, i32* %4, align 4, !dbg !4267
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4268
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4269
  br label %14, !dbg !4270

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4255, metadata !DIExpression()), !dbg !4271
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4272, !range !4273
  call void @llvm.dbg.value(metadata i32 %13, metadata !4258, metadata !DIExpression()), !dbg !4271
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4274
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4275
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4276
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4277
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4279 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4281, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %1, metadata !4282, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %2, metadata !4283, metadata !DIExpression()), !dbg !4284
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4285
  ret void, !dbg !4286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4287 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4289, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %1, metadata !4290, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %2, metadata !4291, metadata !DIExpression()), !dbg !4292
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4293
  ret void, !dbg !4294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4295 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4297, metadata !DIExpression()), !dbg !4299
  call void @llvm.dbg.value(metadata i32 %1, metadata !4298, metadata !DIExpression()), !dbg !4299
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4300
  ret i32 %3, !dbg !4301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4302 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4306, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %1, metadata !4307, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %2, metadata !4308, metadata !DIExpression()), !dbg !4311
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4312
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4309, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4310, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4311
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4310, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4311
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %5, metadata !4310, metadata !DIExpression()), !dbg !4311
  %6 = bitcast i8* %5 to i16*, !dbg !4314
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4317
  %8 = load i16, i16* %7, align 2, !dbg !4317
  %9 = zext i16 %8 to i32, !dbg !4317
  ret i32 %9, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !4319 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4323, metadata !DIExpression()), !dbg !4324
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4325
  ret %struct.chunk_unit_t* %2, !dbg !4326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #6 !dbg !4327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4331, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %1, metadata !4332, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %2, metadata !4333, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata i32 %3, metadata !4334, metadata !DIExpression()), !dbg !4337
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4338
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4335, metadata !DIExpression()), !dbg !4337
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4336, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4337
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4339
  call void @llvm.dbg.value(metadata i8* %6, metadata !4336, metadata !DIExpression()), !dbg !4337
  %7 = trunc i32 %3 to i16, !dbg !4340
  %8 = bitcast i8* %6 to i16*, !dbg !4343
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4344
  store i16 %7, i16* %9, align 2, !dbg !4345
  ret void, !dbg !4346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !4347 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4351, metadata !DIExpression()), !dbg !4352
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4353
  ret i32 %2, !dbg !4354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4355 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4359, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i32 %1, metadata !4360, metadata !DIExpression()), !dbg !4361
  %3 = add i32 %1, 4, !dbg !4362
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4363
  ret i32 %4, !dbg !4364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !4365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4369, metadata !DIExpression()), !dbg !4370
  %2 = add i32 %0, 7, !dbg !4371
  %3 = lshr i32 %2, 3, !dbg !4372
  ret i32 %3, !dbg !4373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4374 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4378, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %1, metadata !4379, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %2, metadata !4380, metadata !DIExpression()), !dbg !4381
  %4 = shl i32 %2, 1, !dbg !4382
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4383
  ret void, !dbg !4384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4385 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %1, metadata !4388, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %2, metadata !4389, metadata !DIExpression()), !dbg !4390
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4391
  ret void, !dbg !4392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4395, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i32 %1, metadata !4396, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i32 %2, metadata !4397, metadata !DIExpression()), !dbg !4403
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4404
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !4398, metadata !DIExpression()), !dbg !4403
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4405
  %6 = icmp eq i32 %5, %1, !dbg !4406
  br i1 %6, label %7, label %14, !dbg !4407

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4408
  %9 = xor i32 %8, -1, !dbg !4410
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4411
  %11 = load i32, i32* %10, align 4, !dbg !4412
  %12 = and i32 %11, %9, !dbg !4412
  store i32 %12, i32* %10, align 4, !dbg !4412
  %13 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4413
  store i32 0, i32* %13, align 4, !dbg !4414
  br label %17, !dbg !4415

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4416
  call void @llvm.dbg.value(metadata i32 %15, metadata !4399, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.value(metadata i32 %5, metadata !4402, metadata !DIExpression()), !dbg !4417
  %16 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4418
  store i32 %5, i32* %16, align 4, !dbg !4419
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4420
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4421
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4423 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4425, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 %1, metadata !4426, metadata !DIExpression()), !dbg !4427
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4428
  ret i32 %3, !dbg !4429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #7 !dbg !4430 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4434, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.value(metadata i8* %1, metadata !4435, metadata !DIExpression()), !dbg !4441
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4442
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4442
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4436, metadata !DIExpression()), !dbg !4441
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %5, metadata !4437, metadata !DIExpression()), !dbg !4441
  %6 = ptrtoint i8* %1 to i32, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %6, metadata !4438, metadata !DIExpression()), !dbg !4441
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4445
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4445
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4446
  call void @llvm.dbg.value(metadata i32 %9, metadata !4439, metadata !DIExpression()), !dbg !4441
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4447
  %11 = shl i32 %10, 3, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %11, metadata !4440, metadata !DIExpression()), !dbg !4441
  %12 = sub i32 %9, %6, !dbg !4449
  %13 = add i32 %12, %11, !dbg !4450
  ret i32 %13, !dbg !4451
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4452 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4456, metadata !DIExpression()), !dbg !4462
  call void @llvm.dbg.value(metadata i32 %1, metadata !4457, metadata !DIExpression()), !dbg !4462
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4463
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4463
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4458, metadata !DIExpression()), !dbg !4462
  %5 = icmp eq i32 %1, 0, !dbg !4464
  br i1 %5, label %19, label %6, !dbg !4466

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4467
  br i1 %7, label %19, label %8, !dbg !4468

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4469, !range !4074
  call void @llvm.dbg.value(metadata i32 %9, metadata !4460, metadata !DIExpression()), !dbg !4462
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %10, metadata !4461, metadata !DIExpression()), !dbg !4462
  %11 = icmp eq i32 %10, 0, !dbg !4471
  br i1 %11, label %19, label %12, !dbg !4473

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4474
  %14 = icmp ugt i32 %13, %9, !dbg !4476
  br i1 %14, label %15, label %17, !dbg !4477

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4478
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4480
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4481
  br label %17, !dbg !4482

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4483
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4484
  call void @llvm.dbg.value(metadata i8* %18, metadata !4459, metadata !DIExpression()), !dbg !4462
  br label %19, !dbg !4485

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4462
  ret i8* %20, !dbg !4486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4487 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4491, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %1, metadata !4492, metadata !DIExpression()), !dbg !4493
  %3 = lshr i32 %1, 3, !dbg !4494
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4495
  %5 = load i32, i32* %4, align 4, !dbg !4495
  %6 = icmp uge i32 %3, %5, !dbg !4496
  ret i1 %6, !dbg !4497
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4498 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4502, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %1, metadata !4503, metadata !DIExpression()), !dbg !4517
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %3, metadata !4504, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4517
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4519
  %5 = load i32, i32* %4, align 4, !dbg !4519
  %6 = icmp eq i32 %5, 0, !dbg !4520
  br i1 %6, label %19, label %7, !dbg !4521

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4522
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4523
  call void @llvm.dbg.value(metadata i32 %9, metadata !4509, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.value(metadata i32 %8, metadata !4510, metadata !DIExpression()), !dbg !4524
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4525
  %11 = icmp ult i32 %10, %1, !dbg !4527
  br i1 %11, label %13, label %12, !dbg !4528

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4529
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4531
  store i32 %14, i32* %4, align 4, !dbg !4532
  %15 = add nsw i32 %9, -1, !dbg !4533
  call void @llvm.dbg.value(metadata i32 %15, metadata !4509, metadata !DIExpression()), !dbg !4523
  %16 = icmp eq i32 %15, 0, !dbg !4533
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4534
  br i1 %18, label %19, label %7, !dbg !4534, !llvm.loop !4535

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4538
  %21 = load i32, i32* %20, align 4, !dbg !4538
  %22 = add nsw i32 %3, 1, !dbg !4539
  %23 = shl nsw i32 -1, %22, !dbg !4539
  %24 = and i32 %21, %23, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %24, metadata !4512, metadata !DIExpression()), !dbg !4517
  %25 = icmp eq i32 %24, 0, !dbg !4541
  br i1 %25, label %30, label %26, !dbg !4542

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4543, !range !4243
  call void @llvm.dbg.value(metadata i32 %27, metadata !4513, metadata !DIExpression()), !dbg !4544
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4545
  %29 = load i32, i32* %28, align 4, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %29, metadata !4516, metadata !DIExpression()), !dbg !4544
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4546
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4517
  ret i32 %31, !dbg !4547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4548 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4550, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %1, metadata !4551, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %2, metadata !4552, metadata !DIExpression()), !dbg !4556
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %4, metadata !4553, metadata !DIExpression()), !dbg !4556
  %5 = sub i32 %2, %1, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %5, metadata !4554, metadata !DIExpression()), !dbg !4556
  %6 = sub i32 %4, %5, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %6, metadata !4555, metadata !DIExpression()), !dbg !4556
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4560
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4561
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4562
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4563
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4564
  ret void, !dbg !4565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4566 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4570, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 %1, metadata !4571, metadata !DIExpression()), !dbg !4574
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4575
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4572, metadata !DIExpression()), !dbg !4574
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %4, metadata !4573, metadata !DIExpression()), !dbg !4574
  ret i8* %4, !dbg !4577
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4578 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4582, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %1, metadata !4583, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %2, metadata !4584, metadata !DIExpression()), !dbg !4594
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4595
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4595
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4585, metadata !DIExpression()), !dbg !4594
  %6 = sub i32 0, %1, !dbg !4596
  %7 = and i32 %6, %1, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %7, metadata !4587, metadata !DIExpression()), !dbg !4594
  %8 = icmp eq i32 %7, %1, !dbg !4598
  br i1 %8, label %13, label %9, !dbg !4600

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %10, metadata !4583, metadata !DIExpression()), !dbg !4594
  %11 = icmp ult i32 %7, 4, !dbg !4603
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4603
  br label %17, !dbg !4603

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4604
  br i1 %14, label %15, label %17, !dbg !4607

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4608
  br label %61, !dbg !4610

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4594
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4611
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4583, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %19, metadata !4586, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata i32 %18, metadata !4587, metadata !DIExpression()), !dbg !4594
  %21 = add i32 %20, -1, !dbg !4612
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !4612, !range !4243
  %23 = icmp ult i32 %22, 2, !dbg !4612
  br i1 %23, label %25, label %24, !dbg !4615

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4616
  unreachable, !dbg !4616

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !4618
  br i1 %26, label %61, label %27, !dbg !4620

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4621
  br i1 %28, label %61, label %29, !dbg !4622

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !4623
  %31 = add i32 %30, %20, !dbg !4624
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !4625, !range !4074
  call void @llvm.dbg.value(metadata i32 %32, metadata !4588, metadata !DIExpression()), !dbg !4594
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !4626
  call void @llvm.dbg.value(metadata i32 %33, metadata !4589, metadata !DIExpression()), !dbg !4594
  %34 = icmp eq i32 %33, 0, !dbg !4627
  br i1 %34, label %61, label %35, !dbg !4629

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4630
  call void @llvm.dbg.value(metadata i8* %36, metadata !4590, metadata !DIExpression()), !dbg !4594
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !4631
  %38 = ptrtoint i8* %37 to i32, !dbg !4631
  %39 = add i32 %21, %38, !dbg !4631
  %40 = sub i32 0, %20, !dbg !4631
  %41 = and i32 %39, %40, !dbg !4631
  %42 = inttoptr i32 %41 to i8*, !dbg !4632
  %43 = sub i32 0, %18, !dbg !4633
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %44, metadata !4590, metadata !DIExpression()), !dbg !4594
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !4634
  %46 = ptrtoint i8* %45 to i32, !dbg !4634
  %47 = add i32 %46, 7, !dbg !4634
  %48 = and i32 %47, -8, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %48, metadata !4591, metadata !DIExpression()), !dbg !4594
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %49, metadata !4592, metadata !DIExpression()), !dbg !4594
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4636
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !4637
  %52 = sub i32 %48, %51, !dbg !4637
  %53 = ashr exact i32 %52, 3, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %53, metadata !4593, metadata !DIExpression()), !dbg !4594
  %54 = icmp ugt i32 %49, %33, !dbg !4638
  br i1 %54, label %55, label %56, !dbg !4640

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !4641
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4643
  br label %56, !dbg !4644

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4645
  %58 = icmp ugt i32 %57, %53, !dbg !4647
  br i1 %58, label %59, label %60, !dbg !4648

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !4649
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !4651
  br label %60, !dbg !4652

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !4653
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !4594
  ret i8* %62, !dbg !4654
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4655 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4659, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata i8* %1, metadata !4660, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata i32 %2, metadata !4661, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.value(metadata i32 %3, metadata !4662, metadata !DIExpression()), !dbg !4678
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4679
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4679
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4663, metadata !DIExpression()), !dbg !4678
  %7 = icmp eq i8* %1, null, !dbg !4680
  br i1 %7, label %8, label %10, !dbg !4682

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4683
  br label %63, !dbg !4685

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4686
  br i1 %11, label %12, label %13, !dbg !4688

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4689
  br label %63, !dbg !4691

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !4692
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !4692, !range !4243
  %16 = icmp ult i32 %15, 2, !dbg !4692
  br i1 %16, label %18, label %17, !dbg !4695

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4696
  unreachable, !dbg !4696

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4698
  br i1 %19, label %63, label %20, !dbg !4700

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4701, !range !4074
  call void @llvm.dbg.value(metadata i32 %21, metadata !4664, metadata !DIExpression()), !dbg !4678
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4702
  call void @llvm.dbg.value(metadata i32 %22, metadata !4665, metadata !DIExpression()), !dbg !4678
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4703
  %24 = ptrtoint i8* %1 to i32, !dbg !4704
  %25 = ptrtoint i8* %23 to i32, !dbg !4704
  %26 = sub i32 %24, %25, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %26, metadata !4666, metadata !DIExpression()), !dbg !4678
  %27 = add i32 %26, %3, !dbg !4705
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %28, metadata !4667, metadata !DIExpression()), !dbg !4678
  %29 = icmp eq i32 %2, 0, !dbg !4707
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !4708
  br i1 %32, label %33, label %53, !dbg !4708

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4709
  %35 = icmp eq i32 %28, %34, !dbg !4710
  br i1 %35, label %63, label %36, !dbg !4711

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !4712
  br i1 %37, label %38, label %40, !dbg !4713

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !4714
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !4716
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4717
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !4718
  br label %63, !dbg !4719

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4720
  br i1 %41, label %53, label %42, !dbg !4721

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4722
  %44 = add i32 %43, %34, !dbg !4723
  %45 = icmp ult i32 %44, %28, !dbg !4724
  br i1 %45, label %53, label %46, !dbg !4725

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %47, metadata !4668, metadata !DIExpression()), !dbg !4727
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4728
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4729
  %49 = icmp ult i32 %47, %48, !dbg !4731
  br i1 %49, label %50, label %52, !dbg !4732

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !4733
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !4735
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4736
  br label %52, !dbg !4737

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !4738
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4739
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4740
  call void @llvm.dbg.value(metadata i8* %54, metadata !4674, metadata !DIExpression()), !dbg !4678
  %55 = icmp eq i8* %54, null, !dbg !4741
  br i1 %55, label %63, label %56, !dbg !4742

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4743, !range !4186
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !4744
  %59 = sub i32 %58, %26, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %59, metadata !4675, metadata !DIExpression()), !dbg !4746
  %60 = icmp ult i32 %59, %3, !dbg !4747
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !4747
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !4748
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4749
  br label %63, !dbg !4750

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !4678
  ret i8* %64, !dbg !4751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4752 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4756, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i32 %1, metadata !4757, metadata !DIExpression()), !dbg !4758
  %3 = shl i32 %1, 3, !dbg !4759
  %4 = add i32 %3, -4, !dbg !4760
  ret i32 %4, !dbg !4761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4762 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4766, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i8* %1, metadata !4767, metadata !DIExpression()), !dbg !4777
  call void @llvm.dbg.value(metadata i32 %2, metadata !4768, metadata !DIExpression()), !dbg !4777
  %4 = icmp ult i32 %2, 262144, !dbg !4778
  br i1 %4, label %6, label %5, !dbg !4783

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.18, i32 0, i32 0)) #27, !dbg !4784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4784
  unreachable, !dbg !4784

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !4786
  br i1 %7, label %9, label %8, !dbg !4789

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4790
  unreachable, !dbg !4790

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %10, metadata !4768, metadata !DIExpression()), !dbg !4777
  %11 = ptrtoint i8* %1 to i32, !dbg !4793
  %12 = add i32 %11, 7, !dbg !4793
  %13 = and i32 %12, -8, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %13, metadata !4769, metadata !DIExpression()), !dbg !4777
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !4794
  %15 = ptrtoint i8* %14 to i32, !dbg !4794
  %16 = and i32 %15, -8, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %16, metadata !4770, metadata !DIExpression()), !dbg !4777
  %17 = sub i32 %16, %13, !dbg !4795
  %18 = lshr exact i32 %17, 3, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %18, metadata !4771, metadata !DIExpression()), !dbg !4777
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !4797
  %20 = icmp ugt i32 %18, %19, !dbg !4797
  br i1 %20, label %22, label %21, !dbg !4800

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4801
  unreachable, !dbg !4801

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !4803
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !4772, metadata !DIExpression()), !dbg !4777
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4804
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !4805
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !4806
  store i32 %18, i32* %25, align 8, !dbg !4807
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !4808
  store i32 0, i32* %26, align 4, !dbg !4809
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %27, metadata !4773, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4777
  %28 = shl i32 %27, 2, !dbg !4811
  %29 = add i32 %28, 20, !dbg !4812
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %30, metadata !4774, metadata !DIExpression()), !dbg !4777
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !4814
  %32 = add i32 %31, %30, !dbg !4814
  %33 = icmp ugt i32 %32, %18, !dbg !4814
  br i1 %33, label %36, label %34, !dbg !4817

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !4775, metadata !DIExpression()), !dbg !4818
  %35 = icmp slt i32 %27, 0, !dbg !4819
  br i1 %35, label %37, label %39, !dbg !4821

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4822
  unreachable, !dbg !4822

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !4824
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !4825
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4826
  %38 = sub i32 %18, %30, !dbg !4827
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !4828
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !4829
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !4830
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !4831
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !4832
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !4833
  ret void, !dbg !4834

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !4775, metadata !DIExpression()), !dbg !4818
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !4835
  store i32 0, i32* %41, align 4, !dbg !4837
  %42 = add nuw i32 %40, 1, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %42, metadata !4775, metadata !DIExpression()), !dbg !4818
  %43 = icmp eq i32 %40, %27, !dbg !4819
  br i1 %43, label %37, label %39, !dbg !4821, !llvm.loop !4839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4841 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4851, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %1, metadata !4852, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %2, metadata !4853, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %4, metadata !4855, metadata !DIExpression()), !dbg !4982
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4983
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4983
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4856, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i32 0, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i1 undef, metadata !4862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4982
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4985

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4985

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4986
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %30, metadata !4853, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %29, metadata !4860, metadata !DIExpression()), !dbg !4982
  %31 = load i8, i8* %30, align 1, !dbg !4987
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4985

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4987
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %34, metadata !4853, metadata !DIExpression()), !dbg !4982
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %35, metadata !4864, metadata !DIExpression()), !dbg !4989
  %36 = icmp slt i32 %35, 0, !dbg !4990
  %37 = add i32 %29, 1, !dbg !4988
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %36, label %365, label %28, !llvm.loop !4992

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4994
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4869, metadata !DIExpression()), !dbg !4995
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4995
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4914, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4917, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8* %30, metadata !4920, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 -1, metadata !4921, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 -1, metadata !4922, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8* null, metadata !4923, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8* %14, metadata !4924, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8 0, metadata !4925, metadata !DIExpression()), !dbg !4996
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4997
  call void @llvm.dbg.value(metadata i8* %39, metadata !4853, metadata !DIExpression()), !dbg !4982
  %40 = load i24, i24* %15, align 8, !dbg !4998
  %41 = and i24 %40, 256, !dbg !4998
  %42 = icmp eq i24 %41, 0, !dbg !4998
  br i1 %42, label %51, label %43, !dbg !5000

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5001
  call void @llvm.dbg.value(metadata i8* %44, metadata !4854, metadata !DIExpression()), !dbg !4982
  %45 = bitcast i8* %27 to i32*, !dbg !5001
  %46 = load i32, i32* %45, align 4, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %46, metadata !4921, metadata !DIExpression()), !dbg !4996
  %47 = icmp slt i32 %46, 0, !dbg !5003
  br i1 %47, label %48, label %56, !dbg !5005

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5006
  store i24 %49, i24* %15, align 8, !dbg !5006
  %50 = sub nsw i32 0, %46, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %50, metadata !4921, metadata !DIExpression()), !dbg !4996
  br label %56, !dbg !5009

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5010
  %53 = icmp eq i24 %52, 0, !dbg !5010
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5012
  br label %56, !dbg !5012

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5013
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4996
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %58, metadata !4921, metadata !DIExpression()), !dbg !4996
  %60 = and i24 %57, 1024, !dbg !5013
  %61 = icmp eq i24 %60, 0, !dbg !5013
  br i1 %61, label %69, label %62, !dbg !5014

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %63, metadata !4854, metadata !DIExpression()), !dbg !4982
  %64 = bitcast i8* %59 to i32*, !dbg !5015
  %65 = load i32, i32* %64, align 4, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %65, metadata !4926, metadata !DIExpression()), !dbg !5016
  %66 = icmp slt i32 %65, 0, !dbg !5017
  br i1 %66, label %67, label %74, !dbg !5019

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5020
  store i24 %68, i24* %15, align 8, !dbg !5020
  br label %74, !dbg !5022

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5023
  %71 = icmp eq i24 %70, 0, !dbg !5023
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5025
  br label %74, !dbg !5025

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5026
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4996
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4996
  call void @llvm.dbg.value(metadata i8* %77, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %76, metadata !4922, metadata !DIExpression()), !dbg !4996
  store i32 0, i32* %16, align 4, !dbg !5027
  store i32 0, i32* %17, align 8, !dbg !5028
  %78 = lshr i24 %75, 16, !dbg !5026
  call void @llvm.dbg.value(metadata i24 %78, metadata !4929, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4996
  %79 = lshr i24 %75, 11, !dbg !5029
  %80 = and i24 %79, 15, !dbg !5029
  %81 = zext i24 %80 to i32, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %81, metadata !4930, metadata !DIExpression()), !dbg !4996
  %82 = trunc i24 %78 to i3, !dbg !5030
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5030

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5031

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %85, metadata !4854, metadata !DIExpression()), !dbg !4982
  %86 = bitcast i8* %77 to i32*, !dbg !5034
  %87 = load i32, i32* %86, align 4, !dbg !5034
  %88 = sext i32 %87 to i64, !dbg !5034
  store i64 %88, i64* %20, align 8, !dbg !5036
  br label %115, !dbg !5037

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %90, metadata !4854, metadata !DIExpression()), !dbg !4982
  %91 = bitcast i8* %77 to i32*, !dbg !5038
  %92 = load i32, i32* %91, align 4, !dbg !5038
  %93 = sext i32 %92 to i64, !dbg !5038
  store i64 %93, i64* %20, align 8, !dbg !5041
  br label %115, !dbg !5042

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5043
  %96 = add i32 %95, 7, !dbg !5043
  %97 = and i32 %96, -8, !dbg !5043
  %98 = inttoptr i32 %97 to i8*, !dbg !5043
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %99, metadata !4854, metadata !DIExpression()), !dbg !4982
  %100 = inttoptr i32 %97 to i64*, !dbg !5043
  %101 = load i64, i64* %100, align 8, !dbg !5043
  store i64 %101, i64* %20, align 8, !dbg !5044
  br label %115, !dbg !5045

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5046
  %104 = add i32 %103, 7, !dbg !5046
  %105 = and i32 %104, -8, !dbg !5046
  %106 = inttoptr i32 %105 to i8*, !dbg !5046
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %107, metadata !4854, metadata !DIExpression()), !dbg !4982
  %108 = inttoptr i32 %105 to i64*, !dbg !5046
  %109 = load i64, i64* %108, align 8, !dbg !5046
  store i64 %109, i64* %20, align 8, !dbg !5047
  br label %115, !dbg !5048

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %111, metadata !4854, metadata !DIExpression()), !dbg !4982
  %112 = bitcast i8* %77 to i32*, !dbg !5049
  %113 = load i32, i32* %112, align 4, !dbg !5049
  %114 = sext i32 %113 to i64, !dbg !5050
  store i64 %114, i64* %20, align 8, !dbg !5051
  br label %115, !dbg !5052

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5053
  call void @llvm.dbg.value(metadata i8* %117, metadata !4854, metadata !DIExpression()), !dbg !4982
  %118 = trunc i24 %79 to i4, !dbg !5054
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5054

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5055
  %121 = ashr exact i64 %120, 56, !dbg !5055
  store i64 %121, i64* %20, align 8, !dbg !5058
  br label %177, !dbg !5059

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5060
  %124 = ashr exact i64 %123, 48, !dbg !5060
  store i64 %124, i64* %20, align 8, !dbg !5063
  br label %177, !dbg !5064

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5065

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %127, metadata !4854, metadata !DIExpression()), !dbg !4982
  %128 = bitcast i8* %77 to i32*, !dbg !5068
  %129 = load i32, i32* %128, align 4, !dbg !5068
  %130 = zext i32 %129 to i64, !dbg !5068
  store i64 %130, i64* %20, align 8, !dbg !5070
  br label %157, !dbg !5071

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %132, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %132, metadata !4854, metadata !DIExpression()), !dbg !4982
  %133 = bitcast i8* %77 to i32*, !dbg !5072
  %134 = load i32, i32* %133, align 4, !dbg !5072
  %135 = zext i32 %134 to i64, !dbg !5072
  store i64 %135, i64* %20, align 8, !dbg !5072
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5074
  %138 = add i32 %137, 7, !dbg !5074
  %139 = and i32 %138, -8, !dbg !5074
  %140 = inttoptr i32 %139 to i8*, !dbg !5074
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %141, metadata !4854, metadata !DIExpression()), !dbg !4982
  %142 = inttoptr i32 %139 to i64*, !dbg !5074
  %143 = load i64, i64* %142, align 8, !dbg !5074
  store i64 %143, i64* %20, align 8, !dbg !5075
  br label %157, !dbg !5076

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5077
  %146 = add i32 %145, 7, !dbg !5077
  %147 = and i32 %146, -8, !dbg !5077
  %148 = inttoptr i32 %147 to i8*, !dbg !5077
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5077
  call void @llvm.dbg.value(metadata i8* %149, metadata !4854, metadata !DIExpression()), !dbg !4982
  %150 = inttoptr i32 %147 to i64*, !dbg !5077
  %151 = load i64, i64* %150, align 8, !dbg !5077
  store i64 %151, i64* %20, align 8, !dbg !5078
  br label %157, !dbg !5079

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %153, metadata !4854, metadata !DIExpression()), !dbg !4982
  %154 = bitcast i8* %77 to i32*, !dbg !5080
  %155 = load i32, i32* %154, align 4, !dbg !5080
  %156 = zext i32 %155 to i64, !dbg !5081
  store i64 %156, i64* %20, align 8, !dbg !5082
  br label %157, !dbg !5083

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5084
  call void @llvm.dbg.value(metadata i8* %159, metadata !4854, metadata !DIExpression()), !dbg !4982
  %160 = trunc i24 %79 to i4, !dbg !5085
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5085

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5086
  store i64 %162, i64* %20, align 8, !dbg !5089
  br label %177, !dbg !5090

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5091
  store i64 %164, i64* %20, align 8, !dbg !5094
  br label %177, !dbg !5095

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5096
  %167 = add i32 %166, 7, !dbg !5096
  %168 = and i32 %167, -8, !dbg !5096
  %169 = inttoptr i32 %168 to i8*, !dbg !5096
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %170, metadata !4854, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %170, metadata !4854, metadata !DIExpression()), !dbg !4982
  %171 = inttoptr i32 %168 to double*, !dbg !5096
  %172 = load double, double* %171, align 8, !dbg !5096
  store double %172, double* %19, align 8, !dbg !5096
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %174, metadata !4854, metadata !DIExpression()), !dbg !4982
  %175 = bitcast i8* %77 to i8**, !dbg !5100
  %176 = load i8*, i8** %175, align 4, !dbg !5100
  store i8* %176, i8** %18, align 8, !dbg !5103
  br label %177, !dbg !5104

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4996
  call void @llvm.dbg.value(metadata i8* %178, metadata !4854, metadata !DIExpression()), !dbg !4982
  %179 = and i24 %75, 3, !dbg !5105
  %180 = icmp eq i24 %179, 0, !dbg !5105
  br i1 %180, label %185, label %181, !dbg !5105

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %182, metadata !4931, metadata !DIExpression()), !dbg !5107
  %183 = icmp slt i32 %182, 0, !dbg !5108
  %184 = add i32 %182, %29, !dbg !5106
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5110
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5111

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %188, metadata !4935, metadata !DIExpression()), !dbg !5113
  %189 = icmp slt i32 %188, 0, !dbg !5114
  %190 = add i32 %29, 1, !dbg !5112
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %192, metadata !4923, metadata !DIExpression()), !dbg !4996
  %193 = icmp sgt i32 %76, -1, !dbg !5117
  br i1 %193, label %194, label %196, !dbg !5119

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5120
  call void @llvm.dbg.value(metadata i32 %195, metadata !4938, metadata !DIExpression()), !dbg !5122
  br label %241, !dbg !5123

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %197, metadata !4938, metadata !DIExpression()), !dbg !5122
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4923, metadata !DIExpression()), !dbg !4996
  %199 = load i64, i64* %20, align 8, !dbg !5126
  %200 = trunc i64 %199 to i8, !dbg !5127
  store i8 %200, i8* %10, align 1, !dbg !5128
  call void @llvm.dbg.value(metadata i8* %23, metadata !4924, metadata !DIExpression()), !dbg !4996
  br label %245, !dbg !5129

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5130
  %203 = icmp eq i24 %202, 0, !dbg !5130
  %204 = trunc i24 %75 to i8, !dbg !5132
  %205 = shl i8 %204, 1, !dbg !5132
  %206 = and i8 %205, 32, !dbg !5132
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5132
  call void @llvm.dbg.value(metadata i8 %207, metadata !4925, metadata !DIExpression()), !dbg !4996
  %208 = load i64, i64* %20, align 8, !dbg !5133
  call void @llvm.dbg.value(metadata i64 %208, metadata !4861, metadata !DIExpression()), !dbg !4982
  %209 = icmp slt i64 %208, 0, !dbg !5134
  br i1 %209, label %210, label %212, !dbg !5136

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4925, metadata !DIExpression()), !dbg !4996
  %211 = sub nsw i64 0, %208, !dbg !5137
  store i64 %211, i64* %20, align 8, !dbg !5139
  br label %212, !dbg !5140

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4996
  call void @llvm.dbg.value(metadata i8 %213, metadata !4925, metadata !DIExpression()), !dbg !4996
  %214 = load i64, i64* %20, align 8, !dbg !5141
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %215, metadata !4923, metadata !DIExpression()), !dbg !4996
  br label %216, !dbg !5143

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5144
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5145
  call void @llvm.dbg.value(metadata i8* %218, metadata !4923, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8 %217, metadata !4925, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.label(metadata !4981), !dbg !5146
  %219 = icmp sgt i32 %76, -1, !dbg !5147
  br i1 %219, label %222, label %220, !dbg !5148

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5149
  br label %245, !dbg !5148

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5151
  %224 = sub i32 %22, %223, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %224, metadata !4940, metadata !DIExpression()), !dbg !5152
  %225 = load i24, i24* %15, align 8, !dbg !5153
  %226 = and i24 %225, -65, !dbg !5153
  store i24 %226, i24* %15, align 8, !dbg !5153
  %227 = icmp ugt i32 %76, %224, !dbg !5154
  br i1 %227, label %228, label %245, !dbg !5156

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5157
  store i32 %229, i32* %16, align 4, !dbg !5159
  br label %245, !dbg !5160

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5161
  %232 = icmp eq i8* %231, null, !dbg !5163
  br i1 %232, label %245, label %233, !dbg !5164

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5165
  %235 = zext i32 %234 to i64, !dbg !5165
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5167
  call void @llvm.dbg.value(metadata i8* %236, metadata !4923, metadata !DIExpression()), !dbg !4996
  %237 = load i24, i24* %15, align 8, !dbg !5168
  %238 = or i24 %237, 1048576, !dbg !5168
  store i24 %238, i24* %15, align 8, !dbg !5168
  store i8 120, i8* %21, align 1, !dbg !5169
  br label %216, !dbg !5170

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5171
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5174
  br label %363, !dbg !5175

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5176
  call void @llvm.dbg.value(metadata i32 %242, metadata !4938, metadata !DIExpression()), !dbg !5122
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5177
  call void @llvm.dbg.value(metadata i32 -1, metadata !4922, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 %29, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %192, metadata !4923, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8* %243, metadata !4924, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8 0, metadata !4925, metadata !DIExpression()), !dbg !4996
  %244 = icmp eq i8* %192, null, !dbg !5178
  br i1 %244, label %363, label %245, !dbg !5180, !llvm.loop !4992

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5149
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata i32 0, metadata !4944, metadata !DIExpression()), !dbg !4996
  %250 = zext i8 %249 to i32, !dbg !5181
  %251 = icmp eq i8 %249, 0, !dbg !5183
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata i32 undef, metadata !4943, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata i32 undef, metadata !4943, metadata !DIExpression()), !dbg !4996
  %252 = icmp sgt i32 %58, 0, !dbg !5184
  br i1 %252, label %253, label %302, !dbg !5185

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5149
  %255 = icmp eq i24 %254, 0, !dbg !5149
  %256 = ptrtoint i8* %248 to i32, !dbg !5186
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  %257 = ptrtoint i8* %247 to i32, !dbg !5186
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  %258 = xor i1 %251, true, !dbg !5187
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  %259 = sext i1 %258 to i32, !dbg !5187
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  %260 = lshr i24 %246, 19, !dbg !5188
  %261 = and i24 %260, 1, !dbg !5188
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5188
  %263 = zext i24 %262 to i32, !dbg !5188
  %264 = add i32 %257, %259, !dbg !5188
  %265 = add i32 %256, %263, !dbg !5188
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  %266 = and i24 %246, 4194304, !dbg !5189
  %267 = icmp eq i24 %266, 0, !dbg !5189
  %268 = load i32, i32* %16, align 4, !dbg !5191
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4996
  call void @llvm.dbg.value(metadata i32 undef, metadata !4943, metadata !DIExpression()), !dbg !4996
  %269 = load i32, i32* %17, align 8, !dbg !5192
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5192
  call void @llvm.dbg.value(metadata i32 undef, metadata !4943, metadata !DIExpression()), !dbg !4996
  %271 = add i32 %264, %58, !dbg !5192
  %272 = add i32 %265, %268, !dbg !5192
  %273 = add i32 %272, %270, !dbg !5193
  %274 = sub i32 %271, %273, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %274, metadata !4921, metadata !DIExpression()), !dbg !4996
  %275 = and i24 %246, 4, !dbg !5194
  %276 = icmp eq i24 %275, 0, !dbg !5194
  br i1 %276, label %277, label %302, !dbg !5195

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4945, metadata !DIExpression()), !dbg !5196
  %278 = and i24 %246, 64, !dbg !5197
  %279 = icmp eq i24 %278, 0, !dbg !5197
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5198
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5198
  %282 = select i1 %279, i32 32, i32 48, !dbg !5198
  br i1 %280, label %287, label %283, !dbg !5198

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5199
  call void @llvm.dbg.value(metadata i32 %284, metadata !4950, metadata !DIExpression()), !dbg !5200
  %285 = icmp slt i32 %284, 0, !dbg !5201
  %286 = add i32 %29, 1, !dbg !5199
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4996
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %290, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8 undef, metadata !4945, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8 %288, metadata !4925, metadata !DIExpression()), !dbg !4996
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5203
  %292 = add i32 %291, -1, !dbg !5203
  br label %293, !dbg !5203

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5204
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %295, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %294, metadata !4921, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 %294, metadata !4921, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4996
  %296 = icmp sgt i32 %294, 0, !dbg !5205
  br i1 %296, label %297, label %302, !dbg !5203

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5206
  call void @llvm.dbg.value(metadata i32 %298, metadata !4921, metadata !DIExpression()), !dbg !4996
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %299, metadata !4956, metadata !DIExpression()), !dbg !5208
  %300 = icmp slt i32 %299, 0, !dbg !5209
  %301 = add i32 %295, 1, !dbg !5207
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %300, label %361, label %293, !llvm.loop !5211

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4996
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4996
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %305, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %304, metadata !4921, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8 %303, metadata !4925, metadata !DIExpression()), !dbg !4996
  %306 = icmp eq i8 %303, 0, !dbg !5213
  br i1 %306, label %312, label %307, !dbg !5214

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5215
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5216
  call void @llvm.dbg.value(metadata i32 %309, metadata !4959, metadata !DIExpression()), !dbg !5217
  %310 = icmp slt i32 %309, 0, !dbg !5218
  %311 = add i32 %305, 1, !dbg !5216
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %313, metadata !4860, metadata !DIExpression()), !dbg !4982
  %314 = lshr i24 %246, 20, !dbg !5220
  %315 = lshr i24 %246, 19, !dbg !5221
  %316 = or i24 %314, %315, !dbg !5222
  %317 = and i24 %316, 1, !dbg !5222
  %318 = icmp eq i24 %317, 0, !dbg !5222
  br i1 %318, label %323, label %319, !dbg !5223

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5224
  call void @llvm.dbg.value(metadata i32 %320, metadata !4963, metadata !DIExpression()), !dbg !5225
  %321 = icmp slt i32 %320, 0, !dbg !5226
  %322 = add i32 %313, 1, !dbg !5224
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %324, metadata !4860, metadata !DIExpression()), !dbg !4982
  %325 = and i24 %246, 1048576, !dbg !5228
  %326 = icmp eq i24 %325, 0, !dbg !5228
  br i1 %326, label %333, label %327, !dbg !5229

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5230
  %329 = zext i8 %328 to i32, !dbg !5230
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %330, metadata !4969, metadata !DIExpression()), !dbg !5231
  %331 = icmp slt i32 %330, 0, !dbg !5232
  %332 = add i32 %324, 1, !dbg !5230
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %334, metadata !4860, metadata !DIExpression()), !dbg !4982
  %335 = load i32, i32* %16, align 4, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %335, metadata !4944, metadata !DIExpression()), !dbg !4996
  br label %336, !dbg !5235

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5236
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %338, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %337, metadata !4944, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4996
  %339 = icmp sgt i32 %337, 0, !dbg !5237
  br i1 %339, label %340, label %345, !dbg !5235

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %341, metadata !4944, metadata !DIExpression()), !dbg !4996
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %342, metadata !4973, metadata !DIExpression()), !dbg !5240
  %343 = icmp slt i32 %342, 0, !dbg !5241
  %344 = add i32 %338, 1, !dbg !5239
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %343, label %361, label %336, !llvm.loop !5243

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %346, metadata !4976, metadata !DIExpression()), !dbg !5246
  %347 = icmp slt i32 %346, 0, !dbg !5247
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %349, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %304, metadata !4921, metadata !DIExpression()), !dbg !4996
  %350 = icmp sgt i32 %304, 0, !dbg !5249
  br i1 %350, label %351, label %363, !dbg !5250

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5250
  %353 = add i32 %352, %338, !dbg !5250
  br label %354, !dbg !5250

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %355, metadata !4921, metadata !DIExpression()), !dbg !4996
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5251
  call void @llvm.dbg.value(metadata i32 %356, metadata !4978, metadata !DIExpression()), !dbg !5252
  %357 = icmp slt i32 %356, 0, !dbg !5253
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5255
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %359, metadata !4921, metadata !DIExpression()), !dbg !4996
  %360 = icmp sgt i32 %355, 1, !dbg !5249
  br i1 %360, label %354, label %363, !dbg !5250, !llvm.loop !5256

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4993
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4986
  call void @llvm.dbg.value(metadata i32 %364, metadata !4860, metadata !DIExpression()), !dbg !4982
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4993
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4982
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5258
  ret i32 %366, !dbg !5258
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5259 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %1, metadata !5264, metadata !DIExpression()), !dbg !5265
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  store i24 0, i24* %3, align 4, !dbg !5266
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5266
  store i8 0, i8* %4, align 1, !dbg !5266
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5266
  store i32 0, i32* %5, align 4, !dbg !5266
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5266
  store i32 0, i32* %6, align 4, !dbg !5266
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5267
  call void @llvm.dbg.value(metadata i8* %7, metadata !5264, metadata !DIExpression()), !dbg !5265
  %8 = load i8, i8* %7, align 1, !dbg !5268
  %9 = icmp eq i8 %8, 37, !dbg !5270
  br i1 %9, label %10, label %12, !dbg !5271

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %11, metadata !5264, metadata !DIExpression()), !dbg !5265
  store i8 37, i8* %4, align 1, !dbg !5274
  br label %18, !dbg !5275

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %13, metadata !5264, metadata !DIExpression()), !dbg !5265
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %14, metadata !5264, metadata !DIExpression()), !dbg !5265
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5278
  call void @llvm.dbg.value(metadata i8* %15, metadata !5264, metadata !DIExpression()), !dbg !5265
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %16, metadata !5264, metadata !DIExpression()), !dbg !5265
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5280
  call void @llvm.dbg.value(metadata i8* %17, metadata !5264, metadata !DIExpression()), !dbg !5265
  br label %18, !dbg !5281

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5265
  ret i8* %19, !dbg !5282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5283 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5287, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i8* %2, metadata !5289, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i8* %3, metadata !5290, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i32 0, metadata !5291, metadata !DIExpression()), !dbg !5294
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5295

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5296
  call void @llvm.dbg.value(metadata i32 %9, metadata !5291, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.value(metadata i8* %8, metadata !5289, metadata !DIExpression()), !dbg !5294
  %10 = icmp ult i8* %8, %3, !dbg !5297
  br i1 %10, label %11, label %13, !dbg !5298

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5299
  br label %17, !dbg !5298

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5300

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5301
  %16 = icmp eq i8 %15, 0, !dbg !5300
  br i1 %16, label %24, label %17, !dbg !5295

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5299
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5302
  call void @llvm.dbg.value(metadata i8* %19, metadata !5289, metadata !DIExpression()), !dbg !5294
  %20 = zext i8 %18 to i32, !dbg !5303
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5304
  call void @llvm.dbg.value(metadata i32 %21, metadata !5292, metadata !DIExpression()), !dbg !5305
  %22 = icmp slt i32 %21, 0, !dbg !5306
  %23 = add i32 %9, 1, !dbg !5308
  call void @llvm.dbg.value(metadata i32 undef, metadata !5291, metadata !DIExpression()), !dbg !5294
  br i1 %22, label %24, label %7, !llvm.loop !5309

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5294
  ret i32 %25, !dbg !5311
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5312 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5316, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5317, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i8* %2, metadata !5318, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i8* %3, metadata !5319, metadata !DIExpression()), !dbg !5326
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5327
  %6 = load i8, i8* %5, align 1, !dbg !5327
  %7 = zext i8 %6 to i32, !dbg !5328
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5329
  %9 = icmp eq i32 %8, 0, !dbg !5329
  call void @llvm.dbg.value(metadata i1 %9, metadata !5320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5326
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %10, metadata !5321, metadata !DIExpression()), !dbg !5326
  %11 = ptrtoint i8* %3 to i32, !dbg !5331
  %12 = ptrtoint i8* %2 to i32, !dbg !5331
  %13 = sub i32 %11, %12, !dbg !5331
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5332
  call void @llvm.dbg.value(metadata i8* %14, metadata !5323, metadata !DIExpression()), !dbg !5326
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5333

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5326
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5316, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i8* %18, metadata !5323, metadata !DIExpression()), !dbg !5326
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5334
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %25, metadata !5324, metadata !DIExpression()), !dbg !5336
  %26 = icmp ult i32 %25, 10, !dbg !5337
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5338
  %28 = add i32 %27, %25, !dbg !5336
  %29 = trunc i32 %28 to i8, !dbg !5338
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5339
  call void @llvm.dbg.value(metadata i8* %30, metadata !5323, metadata !DIExpression()), !dbg !5326
  store i8 %29, i8* %30, align 1, !dbg !5340
  call void @llvm.dbg.value(metadata i64 %22, metadata !5316, metadata !DIExpression()), !dbg !5326
  %31 = icmp uge i64 %19, %15, !dbg !5341
  %32 = icmp ugt i8* %30, %2, !dbg !5342
  %33 = and i1 %31, %32, !dbg !5342
  br i1 %33, label %17, label %34, !dbg !5343, !llvm.loop !5344

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5346
  %36 = load i24, i24* %35, align 4, !dbg !5346
  %37 = and i24 %36, 32, !dbg !5346
  %38 = icmp eq i24 %37, 0, !dbg !5346
  br i1 %38, label %44, label %39, !dbg !5348

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5349

40:                                               ; preds = %39
  br label %41, !dbg !5351

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5355
  store i24 %43, i24* %35, align 4, !dbg !5355
  br label %44, !dbg !5356

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5356
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5357 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5363, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i8* %1, metadata !5364, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata i32 %2, metadata !5365, metadata !DIExpression()), !dbg !5366
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5367
  %5 = load i24, i24* %4, align 4, !dbg !5367
  %6 = lshr i24 %5, 11, !dbg !5367
  %7 = and i24 %6, 15, !dbg !5367
  %8 = zext i24 %7 to i32, !dbg !5367
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5368

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5369
  store i32 %2, i32* %10, align 4, !dbg !5371
  br label %28, !dbg !5372

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5373
  store i8 %12, i8* %1, align 1, !dbg !5374
  br label %28, !dbg !5375

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5376
  %15 = bitcast i8* %1 to i16*, !dbg !5377
  store i16 %14, i16* %15, align 2, !dbg !5378
  br label %28, !dbg !5379

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5380
  store i32 %2, i32* %17, align 4, !dbg !5381
  br label %28, !dbg !5382

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5383
  %20 = bitcast i8* %1 to i64*, !dbg !5384
  store i64 %19, i64* %20, align 8, !dbg !5385
  br label %28, !dbg !5386

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5387
  %23 = bitcast i8* %1 to i64*, !dbg !5388
  store i64 %22, i64* %23, align 8, !dbg !5389
  br label %28, !dbg !5390

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5391
  store i32 %2, i32* %25, align 4, !dbg !5392
  br label %28, !dbg !5393

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5394
  store i32 %2, i32* %27, align 4, !dbg !5395
  br label %28, !dbg !5396

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5397
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5401, metadata !DIExpression()), !dbg !5402
  %2 = add i32 %0, -65, !dbg !5403
  %3 = icmp ult i32 %2, 26, !dbg !5404
  %4 = zext i1 %3 to i32, !dbg !5404
  ret i32 %4, !dbg !5405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5406 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5410, metadata !DIExpression()), !dbg !5411
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5412

2:                                                ; preds = %1
  br label %4, !dbg !5413

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5415

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5416
  ret i32 %5, !dbg !5417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5418 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5420, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8* %1, metadata !5421, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8 1, metadata !5422, metadata !DIExpression()), !dbg !5423
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5424

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5422, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8* %5, metadata !5421, metadata !DIExpression()), !dbg !5423
  %6 = load i8, i8* %5, align 1, !dbg !5425
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5427

7:                                                ; preds = %4
  br label %11, !dbg !5428

8:                                                ; preds = %4
  br label %11, !dbg !5430

9:                                                ; preds = %4
  br label %11, !dbg !5431

10:                                               ; preds = %4
  br label %11, !dbg !5432

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5433
  %14 = or i24 %13, %12, !dbg !5433
  store i24 %14, i24* %3, align 4, !dbg !5433
  call void @llvm.dbg.value(metadata i8 poison, metadata !5422, metadata !DIExpression()), !dbg !5423
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5421, metadata !DIExpression()), !dbg !5423
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5422, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.value(metadata i8* %15, metadata !5421, metadata !DIExpression()), !dbg !5423
  %17 = load i24, i24* %3, align 4, !dbg !5434
  %18 = and i24 %17, 68, !dbg !5436
  %19 = icmp eq i24 %18, 68, !dbg !5436
  br i1 %19, label %20, label %22, !dbg !5436

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5437
  store i24 %21, i24* %3, align 4, !dbg !5437
  br label %22, !dbg !5439

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5441 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5443, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.value(metadata i8* %1, metadata !5444, metadata !DIExpression()), !dbg !5447
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5448
  %5 = load i24, i24* %4, align 4, !dbg !5449
  %6 = or i24 %5, 128, !dbg !5449
  store i24 %6, i24* %4, align 4, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %1, metadata !5444, metadata !DIExpression()), !dbg !5447
  %7 = load i8, i8* %1, align 1, !dbg !5450
  %8 = icmp eq i8 %7, 42, !dbg !5452
  br i1 %8, label %9, label %12, !dbg !5453

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5454
  store i24 %10, i24* %4, align 4, !dbg !5454
  call void @llvm.dbg.value(metadata i8* %1, metadata !5444, metadata !DIExpression()), !dbg !5447
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5456
  call void @llvm.dbg.value(metadata i8* %11, metadata !5444, metadata !DIExpression()), !dbg !5447
  store i8* %11, i8** %3, align 4, !dbg !5456
  br label %29, !dbg !5457

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5445, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.value(metadata i8** %3, metadata !5444, metadata !DIExpression(DW_OP_deref)), !dbg !5447
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %13, metadata !5446, metadata !DIExpression()), !dbg !5447
  %14 = load i8*, i8** %3, align 4, !dbg !5459
  call void @llvm.dbg.value(metadata i8* %14, metadata !5444, metadata !DIExpression()), !dbg !5447
  %15 = icmp eq i8* %14, %1, !dbg !5461
  br i1 %15, label %29, label %16, !dbg !5462

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5463
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5465
  store i32 %13, i32* %18, align 4, !dbg !5466
  %19 = lshr i32 %13, 31, !dbg !5467
  %20 = lshr i24 %17, 1, !dbg !5468
  %21 = and i24 %20, 1, !dbg !5468
  %22 = zext i24 %21 to i32, !dbg !5468
  %23 = or i32 %19, %22, !dbg !5468
  %24 = trunc i32 %23 to i24, !dbg !5468
  %25 = shl nuw nsw i24 %24, 1, !dbg !5468
  %26 = and i24 %17, -131, !dbg !5468
  %27 = or i24 %26, 128, !dbg !5468
  %28 = or i24 %25, %27, !dbg !5468
  store i24 %28, i24* %4, align 4, !dbg !5468
  br label %29, !dbg !5469

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5447
  ret i8* %30, !dbg !5470
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5471 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5473, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i8* %1, metadata !5474, metadata !DIExpression()), !dbg !5476
  %4 = load i8, i8* %1, align 1, !dbg !5477
  %5 = icmp eq i8 %4, 46, !dbg !5478
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5479
  %7 = load i24, i24* %6, align 4, !dbg !5480
  %8 = select i1 %5, i24 512, i24 0, !dbg !5480
  %9 = and i24 %7, -513, !dbg !5480
  %10 = or i24 %9, %8, !dbg !5480
  store i24 %10, i24* %6, align 4, !dbg !5480
  br i1 %5, label %11, label %32, !dbg !5481

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5474, metadata !DIExpression()), !dbg !5476
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5482
  call void @llvm.dbg.value(metadata i8* %12, metadata !5474, metadata !DIExpression()), !dbg !5476
  store i8* %12, i8** %3, align 4, !dbg !5482
  %13 = load i8, i8* %12, align 1, !dbg !5483
  %14 = icmp eq i8 %13, 42, !dbg !5485
  br i1 %14, label %15, label %18, !dbg !5486

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5487
  store i24 %16, i24* %6, align 4, !dbg !5487
  call void @llvm.dbg.value(metadata i8* %12, metadata !5474, metadata !DIExpression()), !dbg !5476
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %17, metadata !5474, metadata !DIExpression()), !dbg !5476
  store i8* %17, i8** %3, align 4, !dbg !5489
  br label %32, !dbg !5490

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5474, metadata !DIExpression(DW_OP_deref)), !dbg !5476
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %19, metadata !5475, metadata !DIExpression()), !dbg !5476
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5492
  store i32 %19, i32* %20, align 4, !dbg !5493
  %21 = lshr i32 %19, 31, !dbg !5494
  %22 = load i24, i24* %6, align 4, !dbg !5495
  %23 = lshr i24 %22, 1, !dbg !5495
  %24 = and i24 %23, 1, !dbg !5495
  %25 = zext i24 %24 to i32, !dbg !5495
  %26 = or i32 %21, %25, !dbg !5495
  %27 = trunc i32 %26 to i24, !dbg !5495
  %28 = shl nuw nsw i24 %27, 1, !dbg !5495
  %29 = and i24 %22, -3, !dbg !5495
  %30 = or i24 %28, %29, !dbg !5495
  store i24 %30, i24* %6, align 4, !dbg !5495
  %31 = load i8*, i8** %3, align 4, !dbg !5496
  call void @llvm.dbg.value(metadata i8* %31, metadata !5474, metadata !DIExpression()), !dbg !5476
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5476
  ret i8* %33, !dbg !5497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5498 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5500, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %1, metadata !5501, metadata !DIExpression()), !dbg !5502
  %3 = load i8, i8* %1, align 1, !dbg !5503
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5504

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5505
  call void @llvm.dbg.value(metadata i8* %5, metadata !5501, metadata !DIExpression()), !dbg !5502
  %6 = load i8, i8* %5, align 1, !dbg !5508
  %7 = icmp eq i8 %6, 104, !dbg !5509
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5510
  %9 = load i24, i24* %8, align 4, !dbg !5510
  %10 = and i24 %9, -30721, !dbg !5510
  br i1 %7, label %11, label %14, !dbg !5511

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5512
  store i24 %12, i24* %8, align 4, !dbg !5512
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5514
  call void @llvm.dbg.value(metadata i8* %13, metadata !5501, metadata !DIExpression()), !dbg !5502
  br label %56, !dbg !5515

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5516
  store i24 %15, i24* %8, align 4, !dbg !5516
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5518
  call void @llvm.dbg.value(metadata i8* %17, metadata !5501, metadata !DIExpression()), !dbg !5502
  %18 = load i8, i8* %17, align 1, !dbg !5520
  %19 = icmp eq i8 %18, 108, !dbg !5521
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5522
  %21 = load i24, i24* %20, align 4, !dbg !5522
  %22 = and i24 %21, -30721, !dbg !5522
  br i1 %19, label %23, label %26, !dbg !5523

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5524
  store i24 %24, i24* %20, align 4, !dbg !5524
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5526
  call void @llvm.dbg.value(metadata i8* %25, metadata !5501, metadata !DIExpression()), !dbg !5502
  br label %56, !dbg !5527

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5528
  store i24 %27, i24* %20, align 4, !dbg !5528
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5530
  %30 = load i24, i24* %29, align 4, !dbg !5531
  %31 = and i24 %30, -30721, !dbg !5531
  %32 = or i24 %31, 10240, !dbg !5531
  store i24 %32, i24* %29, align 4, !dbg !5531
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5532
  call void @llvm.dbg.value(metadata i8* %33, metadata !5501, metadata !DIExpression()), !dbg !5502
  br label %56, !dbg !5533

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5534
  %36 = load i24, i24* %35, align 4, !dbg !5535
  %37 = and i24 %36, -30721, !dbg !5535
  %38 = or i24 %37, 12288, !dbg !5535
  store i24 %38, i24* %35, align 4, !dbg !5535
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5536
  call void @llvm.dbg.value(metadata i8* %39, metadata !5501, metadata !DIExpression()), !dbg !5502
  br label %56, !dbg !5537

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5538
  %42 = load i24, i24* %41, align 4, !dbg !5539
  %43 = and i24 %42, -30721, !dbg !5539
  %44 = or i24 %43, 14336, !dbg !5539
  store i24 %44, i24* %41, align 4, !dbg !5539
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5540
  call void @llvm.dbg.value(metadata i8* %45, metadata !5501, metadata !DIExpression()), !dbg !5502
  br label %56, !dbg !5541

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5542
  %48 = load i24, i24* %47, align 4, !dbg !5543
  %49 = and i24 %48, -30723, !dbg !5543
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5544
  call void @llvm.dbg.value(metadata i8* %50, metadata !5501, metadata !DIExpression()), !dbg !5502
  %51 = or i24 %49, 16386, !dbg !5545
  store i24 %51, i24* %47, align 4, !dbg !5545
  br label %56, !dbg !5546

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5547
  %54 = load i24, i24* %53, align 4, !dbg !5548
  %55 = and i24 %54, -30721, !dbg !5548
  store i24 %55, i24* %53, align 4, !dbg !5548
  br label %56, !dbg !5549

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5501, metadata !DIExpression()), !dbg !5502
  ret i8* %57, !dbg !5550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5551 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5553, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i8* %1, metadata !5554, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i8 0, metadata !5555, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i8* %1, metadata !5554, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5558
  %3 = load i8, i8* %1, align 1, !dbg !5559
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5560
  store i8 %3, i8* %4, align 1, !dbg !5561
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5562

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5563

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5564
  %9 = load i24, i24* %8, align 4, !dbg !5564
  %10 = and i24 %9, -458753, !dbg !5564
  %11 = or i24 %10, %7, !dbg !5564
  call void @llvm.dbg.label(metadata !5556), !dbg !5565
  %12 = and i24 %9, 30720, !dbg !5566
  %13 = icmp eq i24 %12, 16384, !dbg !5566
  %14 = zext i1 %13 to i24, !dbg !5568
  %15 = or i24 %11, %14, !dbg !5568
  %16 = icmp eq i8 %3, 99, !dbg !5569
  br i1 %16, label %17, label %43, !dbg !5571

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5572
  %19 = icmp ne i24 %18, 0, !dbg !5572
  call void @llvm.dbg.value(metadata i1 %19, metadata !5555, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5558
  br label %43, !dbg !5574

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5575
  %22 = load i24, i24* %21, align 4, !dbg !5576
  %23 = and i24 %22, -458753, !dbg !5576
  %24 = or i24 %23, 262144, !dbg !5576
  call void @llvm.dbg.value(metadata i8 1, metadata !5555, metadata !DIExpression()), !dbg !5558
  br label %43, !dbg !5577

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5580
  %27 = load i24, i24* %26, align 4, !dbg !5581
  %28 = and i24 %27, -458753, !dbg !5581
  %29 = or i24 %28, 196608, !dbg !5581
  %30 = and i24 %27, 30720, !dbg !5582
  %31 = icmp eq i24 %30, 16384, !dbg !5582
  br label %43, !dbg !5584

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5585
  %34 = load i24, i24* %33, align 4, !dbg !5586
  %35 = and i24 %34, -458753, !dbg !5586
  %36 = or i24 %35, 196608, !dbg !5586
  %37 = and i24 %34, 30720, !dbg !5587
  %38 = icmp ne i24 %37, 0, !dbg !5587
  br label %43, !dbg !5589

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5590
  %41 = load i24, i24* %40, align 4, !dbg !5591
  %42 = or i24 %41, 1, !dbg !5591
  br label %43, !dbg !5592

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5593
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5594
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5595
  call void @llvm.dbg.value(metadata i8* %48, metadata !5554, metadata !DIExpression()), !dbg !5558
  call void @llvm.dbg.value(metadata i8 poison, metadata !5555, metadata !DIExpression()), !dbg !5558
  %49 = lshr i24 %44, 1, !dbg !5593
  %50 = and i24 %49, 1, !dbg !5593
  %51 = zext i24 %50 to i32, !dbg !5593
  %52 = or i32 %51, %47, !dbg !5593
  %53 = trunc i32 %52 to i24, !dbg !5593
  %54 = shl nuw nsw i24 %53, 1, !dbg !5593
  %55 = and i24 %44, -3, !dbg !5593
  %56 = or i24 %54, %55, !dbg !5593
  store i24 %56, i24* %46, align 4, !dbg !5593
  ret i8* %48, !dbg !5596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5597 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5602, metadata !DIExpression()), !dbg !5605
  %2 = load i8*, i8** %0, align 4, !dbg !5606
  call void @llvm.dbg.value(metadata i8* %2, metadata !5603, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i32 0, metadata !5604, metadata !DIExpression()), !dbg !5605
  %3 = load i8, i8* %2, align 1, !dbg !5607
  %4 = zext i8 %3 to i32, !dbg !5608
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5609
  %6 = icmp eq i32 %5, 0, !dbg !5610
  br i1 %6, label %19, label %7, !dbg !5610

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5604, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i8* %10, metadata !5603, metadata !DIExpression()), !dbg !5605
  %11 = mul i32 %9, 10, !dbg !5611
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5613
  call void @llvm.dbg.value(metadata i8* %12, metadata !5603, metadata !DIExpression()), !dbg !5605
  %13 = add i32 %11, -48, !dbg !5614
  %14 = add i32 %13, %8, !dbg !5615
  call void @llvm.dbg.value(metadata i32 %14, metadata !5604, metadata !DIExpression()), !dbg !5605
  %15 = load i8, i8* %12, align 1, !dbg !5607
  %16 = zext i8 %15 to i32, !dbg !5608
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5609
  %18 = icmp eq i32 %17, 0, !dbg !5610
  br i1 %18, label %19, label %7, !dbg !5610, !llvm.loop !5616

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5605
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5605
  store i8* %20, i8** %0, align 4, !dbg !5618
  ret i32 %21, !dbg !5619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5622, metadata !DIExpression()), !dbg !5623
  %2 = add i32 %0, -48, !dbg !5624
  %3 = icmp ult i32 %2, 10, !dbg !5625
  %4 = zext i1 %3 to i32, !dbg !5625
  ret i32 %4, !dbg !5626
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5632, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i32 %1, metadata !5633, metadata !DIExpression()), !dbg !5634
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !5635, !srcloc !5637
  ret void, !dbg !5638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5639 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5641, metadata !DIExpression()), !dbg !5649
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5650
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5642, metadata !DIExpression()), !dbg !5651
  call void @llvm.va_start(i8* nonnull %3), !dbg !5652
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5653
  %5 = load i32, i32* %4, align 4, !dbg !5653
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5653
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5653
  call void @llvm.va_end(i8* nonnull %3), !dbg !5654
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5655
  ret void, !dbg !5655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5656 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,256\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6224, !srcloc !6225
  ret void, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6229, metadata !DIExpression()), !dbg !6231
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6232
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6233
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6234, !srcloc !6243
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %3, metadata !6240, metadata !DIExpression()) #25, !dbg !6244
  call void @llvm.dbg.value(metadata i32 undef, metadata !6241, metadata !DIExpression()) #25, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %3, metadata !6230, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata i32 %3, metadata !6245, metadata !DIExpression()) #25, !dbg !6250
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6252, !srcloc !6253
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6254
  ret i32 0, !dbg !6255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6256 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6258
  %2 = or i32 %1, 512, !dbg !6258
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6258
  ret void, !dbg !6259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6260 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6261
  %2 = or i32 %1, 1024, !dbg !6261
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6261
  ret void, !dbg !6262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6263 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6265, metadata !DIExpression()), !dbg !6266
  ret i32 0, !dbg !6267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6317, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6318, metadata !DIExpression()), !dbg !6319
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6320
  ret void, !dbg !6321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6322 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6339, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6340, metadata !DIExpression()), !dbg !6342
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6343
  %4 = load i32, i32* %3, align 4, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %4, metadata !6341, metadata !DIExpression()), !dbg !6342
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6344
  ret void, !dbg !6345
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !6346 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6350, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %0, metadata !6351, metadata !DIExpression()), !dbg !6353
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6354
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6354
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6352, metadata !DIExpression()), !dbg !6355
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6355
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6356
  %5 = bitcast i8* %4 to i32*, !dbg !6356
  %6 = load i32, i32* %5, align 4, !dbg !6356
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6357
  store i32 %6, i32* %7, align 4, !dbg !6358
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6359
  unreachable, !dbg !6360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6364, metadata !DIExpression()), !dbg !6365
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6372, metadata !DIExpression()), !dbg !6373
  %2 = icmp sgt i32 %0, -1, !dbg !6374
  br i1 %2, label %3, label %8, !dbg !6376

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6377, !srcloc !6379
  %4 = and i32 %0, 31, !dbg !6380
  %5 = shl nuw i32 1, %4, !dbg !6381
  %6 = lshr i32 %0, 5, !dbg !6382
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6383
  store volatile i32 %5, i32* %7, align 4, !dbg !6384
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6385, !srcloc !6386
  br label %8, !dbg !6387

8:                                                ; preds = %3, %1
  ret void, !dbg !6388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6391, metadata !DIExpression()), !dbg !6392
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6393
  ret void, !dbg !6394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6397, metadata !DIExpression()), !dbg !6398
  %2 = icmp sgt i32 %0, -1, !dbg !6399
  br i1 %2, label %3, label %8, !dbg !6401

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6402
  %5 = shl nuw i32 1, %4, !dbg !6404
  %6 = lshr i32 %0, 5, !dbg !6405
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6406
  store volatile i32 %5, i32* %7, align 4, !dbg !6407
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6408, !srcloc !6412
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6413, !srcloc !6416
  br label %8, !dbg !6417

8:                                                ; preds = %3, %1
  ret void, !dbg !6418
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6423, metadata !DIExpression()), !dbg !6424
  %2 = lshr i32 %0, 5, !dbg !6425
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6426
  %4 = load volatile i32, i32* %3, align 4, !dbg !6426
  %5 = and i32 %0, 31, !dbg !6427
  %6 = shl nuw i32 1, %5, !dbg !6427
  %7 = and i32 %4, %6, !dbg !6428
  ret i32 %7, !dbg !6429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6434, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %1, metadata !6435, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %2, metadata !6436, metadata !DIExpression()), !dbg !6437
  %4 = add i32 %1, 1, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %4, metadata !6435, metadata !DIExpression()), !dbg !6437
  %5 = icmp ult i32 %4, 16, !dbg !6441
  br i1 %5, label %7, label %6, !dbg !6444

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.41, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !6445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6445
  unreachable, !dbg !6445

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6453, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32 %1, metadata !6454, metadata !DIExpression()), !dbg !6455
  %3 = trunc i32 %1 to i8, !dbg !6456
  %4 = shl i8 %3, 4, !dbg !6456
  %5 = and i32 %0, 15, !dbg !6458
  %6 = add nsw i32 %5, -4, !dbg !6458
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6458
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6458
  %9 = icmp slt i32 %0, 0, !dbg !6458
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6458
  store volatile i8 %4, i8* %10, align 1, !dbg !6456
  ret void, !dbg !6459
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6462, metadata !DIExpression()), !dbg !6463
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6466 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6468
  tail call void @z_arm_int_exit() #27, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: optsize
declare !dbg !6471 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6472 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !6474 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6476
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6477
  tail call void @z_bss_zero() #27, !dbg !6478
  tail call void @z_data_copy() #27, !dbg !6479
  tail call void @z_arm_interrupt_init() #27, !dbg !6480
  tail call void @z_cstart() #29, !dbg !6481
  unreachable, !dbg !6481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6482 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6483
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6484, !srcloc !6487
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6488, !srcloc !6491
  ret void, !dbg !6492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6493 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6494
  %2 = and i32 %1, -15728641, !dbg !6494
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6494
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6495, !srcloc !6502
  call void @llvm.dbg.value(metadata i32 %3, metadata !6500, metadata !DIExpression()) #25, !dbg !6503
  %4 = and i32 %3, -5, !dbg !6504
  call void @llvm.dbg.value(metadata i32 %4, metadata !6505, metadata !DIExpression()) #25, !dbg !6510
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6514, !srcloc !6491
  ret void, !dbg !6516
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6520, metadata !DIExpression()), !dbg !6521
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6522
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6523
  store i32 %0, i32* %3, align 4, !dbg !6524
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6525
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6526
  store i32 %4, i32* %5, align 4, !dbg !6527
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6528
  %7 = or i32 %6, 268435456, !dbg !6528
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6528
  call void @llvm.dbg.value(metadata i32 0, metadata !6529, metadata !DIExpression()) #25, !dbg !6532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6534, !srcloc !6535
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6536
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6537
  %10 = load i32, i32* %9, align 4, !dbg !6537
  ret i32 %10, !dbg !6538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !6539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6651, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6652, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %2, metadata !6653, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6654, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %4, metadata !6655, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %5, metadata !6656, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %6, metadata !6657, metadata !DIExpression()), !dbg !6659
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6660
  call void @llvm.dbg.value(metadata i8* %8, metadata !6658, metadata !DIExpression()), !dbg !6659
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6661
  %10 = bitcast i8* %9 to i32*, !dbg !6661
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6662
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6663
  %12 = bitcast i8* %8 to i32*, !dbg !6664
  store i32 %11, i32* %12, align 4, !dbg !6665
  %13 = ptrtoint i8* %4 to i32, !dbg !6666
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6667
  %15 = bitcast i8* %14 to i32*, !dbg !6667
  store i32 %13, i32* %15, align 4, !dbg !6668
  %16 = ptrtoint i8* %5 to i32, !dbg !6669
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6670
  %18 = bitcast i8* %17 to i32*, !dbg !6670
  store i32 %16, i32* %18, align 4, !dbg !6671
  %19 = ptrtoint i8* %6 to i32, !dbg !6672
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6673
  %21 = bitcast i8* %20 to i32*, !dbg !6673
  store i32 %19, i32* %21, align 4, !dbg !6674
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6675
  %23 = bitcast i8* %22 to i32*, !dbg !6675
  store i32 16777216, i32* %23, align 4, !dbg !6676
  %24 = ptrtoint i8* %8 to i32, !dbg !6677
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6678
  store i32 %24, i32* %25, align 8, !dbg !6679
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6680
  store i32 0, i32* %26, align 4, !dbg !6681
  ret void, !dbg !6682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !6683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6688, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.value(metadata i32 %1, metadata !6689, metadata !DIExpression()), !dbg !6694
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6695
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6690, metadata !DIExpression()), !dbg !6694
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6696
  br i1 %4, label %19, label %5, !dbg !6698

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6693, metadata !DIExpression()), !dbg !6694
  %6 = icmp eq i32 %0, -22, !dbg !6699
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6699
  %8 = load i32, i32* %7, align 4, !dbg !6699
  br i1 %6, label %16, label %9, !dbg !6701

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6699
  %11 = icmp ule i32 %10, %0, !dbg !6699
  %12 = icmp ugt i32 %8, %0, !dbg !6699
  %13 = and i1 %12, %11, !dbg !6699
  %14 = icmp ugt i32 %8, %1, !dbg !6699
  %15 = and i1 %14, %13, !dbg !6699
  br i1 %15, label %18, label %19, !dbg !6699

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6699
  br i1 %17, label %18, label %19, !dbg !6701

18:                                               ; preds = %9, %16
  br label %19, !dbg !6702

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6694
  ret i32 %20, !dbg !6704
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !6705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata i8* %1, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6711, metadata !DIExpression()), !dbg !6712
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6713
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6714
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6715, !srcloc !6716
  unreachable, !dbg !6717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6718 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6736, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 %1, metadata !6737, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 %2, metadata !6738, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6739, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 0, metadata !6740, metadata !DIExpression()), !dbg !6746
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6747
  call void @llvm.dbg.value(metadata i32 %8, metadata !6741, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6746
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6748
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6748
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6749
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6749
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6745, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i32 0, metadata !6751, metadata !DIExpression()) #25, !dbg !6754
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6756, !srcloc !6757
  call void @llvm.dbg.value(metadata i8* %6, metadata !6743, metadata !DIExpression(DW_OP_deref)), !dbg !6746
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6758
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6744, metadata !DIExpression()), !dbg !6746
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6759
  br i1 %11, label %12, label %13, !dbg !6762

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6763
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.47, i32 0, i32 0)) #27, !dbg !6763
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6763
  unreachable, !dbg !6763

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6765
  call void @llvm.dbg.value(metadata i32 %14, metadata !6741, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i8* %5, metadata !6742, metadata !DIExpression(DW_OP_deref)), !dbg !6746
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !6766
  call void @llvm.dbg.value(metadata i32 %15, metadata !6740, metadata !DIExpression()), !dbg !6746
  %16 = load i8, i8* %5, align 1, !dbg !6767, !range !6769
  call void @llvm.dbg.value(metadata i8 %16, metadata !6742, metadata !DIExpression()), !dbg !6746
  %17 = icmp eq i8 %16, 0, !dbg !6767
  br i1 %17, label %18, label %35, !dbg !6770

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6771
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !6772
  %21 = load i8, i8* %6, align 1, !dbg !6773, !range !6769
  call void @llvm.dbg.value(metadata i8 %21, metadata !6743, metadata !DIExpression()), !dbg !6746
  %22 = icmp eq i8 %21, 0, !dbg !6773
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6775
  %24 = load i32, i32* %23, align 4, !dbg !6775
  br i1 %22, label %30, label %25, !dbg !6776

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6777
  %27 = icmp eq i32 %26, 0, !dbg !6780
  br i1 %27, label %28, label %34, !dbg !6781

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6782
  br label %32, !dbg !6784

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6785
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6775
  br label %34, !dbg !6787

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !6787
  br label %35, !dbg !6788

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6788
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6788
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6788
  ret void, !dbg !6788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #6 !dbg !6789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6794, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 %1, metadata !6795, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i32 %2, metadata !6796, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8* %3, metadata !6797, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8 0, metadata !6798, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i8 0, i8* %3, align 1, !dbg !6801
  %5 = icmp ult i32 %2, -16777216, !dbg !6802
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6804
  br i1 %8, label %16, label %9, !dbg !6804

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6805
  %11 = icmp eq i32 %10, 0, !dbg !6805
  br i1 %11, label %12, label %13, !dbg !6807

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i8 1, i8* %3, align 1, !dbg !6810
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6800
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6799, metadata !DIExpression()), !dbg !6800
  br label %16, !dbg !6813

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6800
  ret %struct.__esf* %17, !dbg !6814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6815 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6819, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %1, metadata !6820, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %2, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  store i8 0, i8* %2, align 1, !dbg !6824
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6825

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %5, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %11, !dbg !6828

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %7, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %11, !dbg !6830

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6831
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %11, !dbg !6832

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6833
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %11, !dbg !6834

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6835
  br label %11, !dbg !6836

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6838 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6842, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i8* %1, metadata !6843, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.value(metadata i32 0, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i8 0, i8* %1, align 1, !dbg !6846
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6847
  %4 = and i32 %3, 2, !dbg !6849
  %5 = icmp eq i32 %4, 0, !dbg !6850
  br i1 %5, label %6, label %35, !dbg !6851

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6852
  %8 = icmp sgt i32 %7, -1, !dbg !6854
  br i1 %8, label %9, label %35, !dbg !6855

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6856
  %11 = and i32 %10, 1073741824, !dbg !6858
  %12 = icmp eq i32 %11, 0, !dbg !6859
  br i1 %12, label %34, label %13, !dbg !6860

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6861
  br i1 %14, label %15, label %18, !dbg !6864

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6865
  %17 = load i32, i32* %16, align 4, !dbg !6865
  call void @llvm.dbg.value(metadata i32 %17, metadata !6844, metadata !DIExpression()), !dbg !6845
  br label %35, !dbg !6867

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6868
  %20 = and i32 %19, 255, !dbg !6870
  %21 = icmp eq i32 %20, 0, !dbg !6871
  br i1 %21, label %24, label %22, !dbg !6872

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %23, metadata !6844, metadata !DIExpression()), !dbg !6845
  br label %35, !dbg !6875

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %26 = and i32 %25, 65280, !dbg !6878
  %27 = icmp eq i32 %26, 0, !dbg !6879
  br i1 %27, label %29, label %28, !dbg !6880

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6881
  call void @llvm.dbg.value(metadata i32 0, metadata !6844, metadata !DIExpression()), !dbg !6845
  br label %35, !dbg !6883

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %31 = icmp ult i32 %30, 65536, !dbg !6886
  br i1 %31, label %33, label %32, !dbg !6887

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6888
  call void @llvm.dbg.value(metadata i32 0, metadata !6844, metadata !DIExpression()), !dbg !6845
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.51, i32 0, i32 0)) #27, !dbg !6890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6890
  unreachable, !dbg !6890

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.52, i32 0, i32 0)) #27, !dbg !6895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6895
  unreachable, !dbg !6895

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6845
  call void @llvm.dbg.value(metadata i32 %36, metadata !6844, metadata !DIExpression()), !dbg !6845
  ret i32 %36, !dbg !6900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6901 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6903, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 %1, metadata !6904, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i8* %2, metadata !6905, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 0, metadata !6906, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 -22, metadata !6907, metadata !DIExpression()), !dbg !6916
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6917
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6921
  %7 = and i32 %6, 2, !dbg !6922
  %8 = icmp eq i32 %7, 0, !dbg !6923
  br i1 %8, label %19, label %9, !dbg !6924

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6925
  call void @llvm.dbg.value(metadata i32 %10, metadata !6908, metadata !DIExpression()), !dbg !6926
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6927
  %12 = and i32 %11, 128, !dbg !6929
  %13 = icmp eq i32 %12, 0, !dbg !6930
  br i1 %13, label %19, label %14, !dbg !6931

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6907, metadata !DIExpression()), !dbg !6916
  %15 = icmp eq i32 %1, 0, !dbg !6932
  br i1 %15, label %19, label %16, !dbg !6935

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  %18 = and i32 %17, -129, !dbg !6936
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  br label %19, !dbg !6938

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6916
  call void @llvm.dbg.value(metadata i32 %20, metadata !6907, metadata !DIExpression()), !dbg !6916
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6939
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6943
  %24 = and i32 %23, 16, !dbg !6944
  %25 = icmp eq i32 %24, 0, !dbg !6944
  br i1 %25, label %26, label %30, !dbg !6945

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %28 = and i32 %27, 2, !dbg !6947
  %29 = icmp eq i32 %28, 0, !dbg !6947
  br i1 %29, label %44, label %30, !dbg !6948

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6949
  %32 = and i32 %31, 2048, !dbg !6950
  %33 = icmp eq i32 %32, 0, !dbg !6950
  br i1 %33, label %44, label %34, !dbg !6951

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6952
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6953
  call void @llvm.dbg.value(metadata i32 %36, metadata !6911, metadata !DIExpression()), !dbg !6954
  %37 = icmp eq i32 %36, 0, !dbg !6955
  br i1 %37, label %39, label %38, !dbg !6957

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6958, metadata !DIExpression()) #25, !dbg !6961
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6964, !srcloc !6965
  call void @llvm.dbg.value(metadata i32 2, metadata !6906, metadata !DIExpression()), !dbg !6916
  br label %44, !dbg !6966

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6967
  %41 = and i32 %40, 16, !dbg !6967
  %42 = icmp eq i32 %41, 0, !dbg !6967
  br i1 %42, label %44, label %43, !dbg !6971

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.48, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.49, i32 0, i32 0)) #27, !dbg !6972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6972
  unreachable, !dbg !6972

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6916
  call void @llvm.dbg.value(metadata i32 %45, metadata !6906, metadata !DIExpression()), !dbg !6916
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %47 = and i32 %46, 32, !dbg !6976
  %48 = icmp eq i32 %47, 0, !dbg !6977
  br i1 %48, label %52, label %49, !dbg !6978

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6979
  %51 = and i32 %50, -8193, !dbg !6979
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6979
  br label %52, !dbg !6981

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  %54 = or i32 %53, 255, !dbg !6982
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  store i8 0, i8* %2, align 1, !dbg !6983
  ret i32 %45, !dbg !6984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6985 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6989, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 %0, metadata !6990, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i8* %1, metadata !6991, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 0, metadata !6992, metadata !DIExpression()), !dbg !6996
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6997
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7001
  %6 = and i32 %5, 512, !dbg !7002
  %7 = icmp eq i32 %6, 0, !dbg !7002
  br i1 %7, label %18, label %8, !dbg !7003

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7004
  call void @llvm.dbg.value(metadata i32 %9, metadata !6993, metadata !DIExpression()), !dbg !7005
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  %11 = and i32 %10, 32768, !dbg !7008
  %12 = icmp ne i32 %11, 0, !dbg !7009
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7010
  br i1 %14, label %15, label %18, !dbg !7010

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  %17 = and i32 %16, -32769, !dbg !7011
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7011
  br label %18, !dbg !7015

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7016
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7018
  %21 = and i32 %20, 256, !dbg !7020
  %22 = icmp eq i32 %21, 0, !dbg !7021
  br i1 %22, label %23, label %25, !dbg !7022

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  %27 = or i32 %26, 65280, !dbg !7025
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  store i8 0, i8* %1, align 1, !dbg !7026
  ret void, !dbg !7027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !7028 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7034, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.value(metadata i32 0, metadata !7035, metadata !DIExpression()), !dbg !7036
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7039
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7043
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7045
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7047
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7049
  %8 = or i32 %7, -65536, !dbg !7049
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7049
  ret void, !dbg !7050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !7051 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %0, metadata !7056, metadata !DIExpression()), !dbg !7057
  store i8 0, i8* %0, align 1, !dbg !7058
  ret void, !dbg !7059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7060 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7064, metadata !DIExpression()), !dbg !7067
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7068
  %3 = load i32, i32* %2, align 4, !dbg !7068
  %4 = inttoptr i32 %3 to i16*, !dbg !7069
  call void @llvm.dbg.value(metadata i16* %4, metadata !7065, metadata !DIExpression()), !dbg !7067
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7070
  %6 = or i32 %5, 256, !dbg !7070
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7070
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7071, !srcloc !7074
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7075, !srcloc !7078
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7079
  %8 = load i16, i16* %7, align 2, !dbg !7080
  call void @llvm.dbg.value(metadata i16 %8, metadata !7066, metadata !DIExpression()), !dbg !7067
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7081
  %10 = and i32 %9, -257, !dbg !7081
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7081
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7082, !srcloc !7074
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7084, !srcloc !7078
  %11 = icmp eq i16 %8, -8446, !dbg !7086
  ret i1 %11, !dbg !7088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7089 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7090
  %2 = or i32 %1, 16, !dbg !7090
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7090
  ret void, !dbg !7091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7092 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7095, metadata !DIExpression()), !dbg !7096
  br label %1, !dbg !7097

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7095, metadata !DIExpression()), !dbg !7096
  tail call fastcc void @__NVIC_SetPriority.55(i32 noundef %2) #26, !dbg !7099
  %3 = add nuw nsw i32 %2, 1, !dbg !7102
  call void @llvm.dbg.value(metadata i32 %3, metadata !7095, metadata !DIExpression()), !dbg !7096
  %4 = icmp eq i32 %3, 97, !dbg !7103
  br i1 %4, label %5, label %1, !dbg !7097, !llvm.loop !7104

5:                                                ; preds = %1
  ret void, !dbg !7106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.55(i32 noundef %0) unnamed_addr #15 !dbg !7107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7109, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.value(metadata i32 1, metadata !7110, metadata !DIExpression()), !dbg !7111
  %2 = and i32 %0, 15, !dbg !7112
  %3 = add nsw i32 %2, -4, !dbg !7112
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7112
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7112
  %6 = icmp slt i32 %0, 0, !dbg !7112
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7112
  store volatile i8 16, i8* %7, align 1, !dbg !7113
  ret void, !dbg !7115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7116 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7224, metadata !DIExpression()), !dbg !7225
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7226
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7228
  br i1 %3, label %4, label %12, !dbg !7229

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !7230, !srcloc !7242
  call void @llvm.dbg.value(metadata i32 %5, metadata !7233, metadata !DIExpression()) #25, !dbg !7243
  %6 = icmp eq i32 %5, 0, !dbg !7244
  br i1 %6, label %12, label %7, !dbg !7245

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7246
  %9 = or i32 %8, 268435456, !dbg !7246
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7246
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7248
  %11 = and i32 %10, -32769, !dbg !7248
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7248
  br label %12, !dbg !7249

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !7250
  ret void, !dbg !7251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7252 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !7253
  ret void, !dbg !7254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !629, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i8 0, metadata !630, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i32 64, metadata !632, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i32 undef, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7255
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7256
  %3 = load i32, i32* %2, align 4, !dbg !7256
  call void @llvm.dbg.value(metadata i32 %3, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7255
  %4 = add i32 %3, -64, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %4, metadata !631, metadata !DIExpression()), !dbg !7255
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7259
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7260
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7261
  call void @llvm.dbg.value(metadata i8 1, metadata !630, metadata !DIExpression()), !dbg !7255
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7264 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7265
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7266, !srcloc !7269
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7270, !srcloc !7273
  ret void, !dbg !7274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7275 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !7276, !srcloc !7279
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7280
  ret void, !dbg !7281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7282 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7297, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i8 %1, metadata !7298, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i32 %2, metadata !7299, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i32 %3, metadata !7300, metadata !DIExpression()), !dbg !7301
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7302
  %6 = icmp eq i32 %5, -22, !dbg !7304
  br i1 %6, label %7, label %9, !dbg !7305

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7306
  %8 = zext i8 %1 to i32, !dbg !7306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.65, i32 0, i32 0), i32 noundef %8) #27, !dbg !7306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7306
  unreachable, !dbg !7306

9:                                                ; preds = %4
  ret void, !dbg !7311
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7317, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i8 %1, metadata !7318, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 undef, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.value(metadata i32 undef, metadata !7320, metadata !DIExpression()), !dbg !7322
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7323
  call void @llvm.dbg.value(metadata i8 %3, metadata !7321, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7322
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7324
  call void @llvm.dbg.value(metadata i32 %4, metadata !7321, metadata !DIExpression()), !dbg !7322
  %5 = trunc i32 %4 to i8, !dbg !7325
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7326
  ret i32 %4, !dbg !7327
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7328 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7332, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8 %1, metadata !7333, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8 %2, metadata !7334, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i1 %3, metadata !7335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7338
  %5 = zext i8 %2 to i32, !dbg !7339
  call void @llvm.dbg.value(metadata i32 %5, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 0, metadata !7336, metadata !DIExpression()), !dbg !7338
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 0, metadata !7336, metadata !DIExpression()), !dbg !7338
  %7 = icmp eq i8 %1, 0, !dbg !7340
  br i1 %7, label %29, label %8, !dbg !7343

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7337, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %10, metadata !7336, metadata !DIExpression()), !dbg !7338
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7344
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7347
  %13 = load i32, i32* %12, align 4, !dbg !7347
  %14 = icmp eq i32 %13, 0, !dbg !7348
  br i1 %14, label %25, label %15, !dbg !7349

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7350

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7352
  %18 = icmp eq i32 %17, 0, !dbg !7352
  br i1 %18, label %29, label %19, !dbg !7353

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7354
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7355
  call void @llvm.dbg.value(metadata i32 %21, metadata !7337, metadata !DIExpression()), !dbg !7338
  %22 = icmp eq i32 %21, -22, !dbg !7356
  br i1 %22, label %29, label %23, !dbg !7358

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %24, metadata !7337, metadata !DIExpression()), !dbg !7338
  br label %25, !dbg !7360

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7338
  call void @llvm.dbg.value(metadata i32 %26, metadata !7337, metadata !DIExpression()), !dbg !7338
  %27 = add nuw nsw i32 %10, 1, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %27, metadata !7336, metadata !DIExpression()), !dbg !7338
  %28 = icmp eq i32 %27, %6, !dbg !7340
  br i1 %28, label %29, label %8, !dbg !7343, !llvm.loop !7362

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7338
  ret i32 %30, !dbg !7364
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7365 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7369, metadata !DIExpression()), !dbg !7371
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7372
  %3 = load i32, i32* %2, align 4, !dbg !7372
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7373, !range !4243
  %5 = icmp ult i32 %4, 2, !dbg !7373
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7374
  br i1 %7, label %8, label %15, !dbg !7374

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7375
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7376
  %11 = load i32, i32* %10, align 4, !dbg !7376
  %12 = and i32 %11, %9, !dbg !7377
  %13 = icmp eq i32 %12, 0, !dbg !7378
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7370, metadata !DIExpression()), !dbg !7371
  ret i32 %16, !dbg !7379
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7380 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7384, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7385, metadata !DIExpression()), !dbg !7387
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7388
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7388
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7386, metadata !DIExpression()), !dbg !7389
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7390
  %6 = load i32, i32* %5, align 4, !dbg !7390
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7391
  store i32 %6, i32* %7, align 4, !dbg !7392
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7393
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7394
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7395
  %11 = load i32, i32* %10, align 4, !dbg !7395
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %9, i32 noundef %11) #26, !dbg !7396
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7397
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7398
  ret i32 %12, !dbg !7399
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* nocapture noundef writeonly %0, %struct._sfnode* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #11 !dbg !7400 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !7407, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !7408, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 undef, metadata !7409, metadata !DIExpression()), !dbg !7411
  call void @llvm.dbg.value(metadata i32 %2, metadata !7410, metadata !DIExpression()), !dbg !7411
  %4 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %1, i32 0, i32 0, !dbg !7412
  %5 = load i32, i32* %4, align 4, !dbg !7412
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7413
  %7 = or i32 %6, %5, !dbg !7414
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !7415
  store i32 %7, i32* %8, align 4, !dbg !7416
  ret void, !dbg !7417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7418 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7423, metadata !DIExpression()), !dbg !7424
  %3 = zext i8 %0 to i32, !dbg !7425
  %4 = icmp ugt i8 %0, 7, !dbg !7427
  br i1 %4, label %6, label %5, !dbg !7428

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7429
  br label %6, !dbg !7430

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7424
  ret i32 %7, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7436, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7437, metadata !DIExpression()), !dbg !7438
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7439
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7440
  %4 = load i32, i32* %3, align 4, !dbg !7440
  %5 = and i32 %4, -32, !dbg !7441
  %6 = or i32 %5, %0, !dbg !7442
  %7 = or i32 %6, 16, !dbg !7442
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7443
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7444
  %9 = load i32, i32* %8, align 4, !dbg !7444
  %10 = or i32 %9, 1, !dbg !7445
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7446
  ret void, !dbg !7447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7451, metadata !DIExpression()), !dbg !7452
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7453
  ret void, !dbg !7454
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !7455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7459, metadata !DIExpression()), !dbg !7460
  %2 = icmp ult i32 %0, 33, !dbg !7461
  br i1 %2, label %11, label %3, !dbg !7463

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7464
  br i1 %4, label %11, label %5, !dbg !7466

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7467
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7468, !range !4243
  %8 = mul nsw i32 %7, -2, !dbg !7469
  %9 = add nsw i32 %8, 62, !dbg !7469
  %10 = and i32 %9, 62, !dbg !7470
  br label %11, !dbg !7471

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7460
  ret i32 %12, !dbg !7472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7473 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7477, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i8 %1, metadata !7478, metadata !DIExpression()), !dbg !7479
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7480
  %4 = icmp eq i32 %3, -22, !dbg !7482
  br i1 %4, label %5, label %7, !dbg !7483

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7484
  %6 = zext i8 %1 to i32, !dbg !7484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %6) #27, !dbg !7484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7484
  unreachable, !dbg !7484

7:                                                ; preds = %2
  ret void, !dbg !7489
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7490 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7494, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.value(metadata i8 %1, metadata !7495, metadata !DIExpression()), !dbg !7501
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7502
  call void @llvm.dbg.value(metadata i8 %3, metadata !7496, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7501
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %4, metadata !7496, metadata !DIExpression()), !dbg !7501
  %5 = icmp ne i32 %4, -22, !dbg !7504
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %4, metadata !7497, metadata !DIExpression()), !dbg !7506
  br i1 %7, label %8, label %12, !dbg !7505

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7497, metadata !DIExpression()), !dbg !7506
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7507
  %10 = add i32 %9, 1, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %10, metadata !7497, metadata !DIExpression()), !dbg !7506
  %11 = icmp eq i32 %10, 8, !dbg !7511
  br i1 %11, label %12, label %8, !dbg !7512, !llvm.loop !7513

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7519, metadata !DIExpression()), !dbg !7520
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7521
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7524 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7529
  %2 = icmp ugt i32 %1, 8, !dbg !7531
  br i1 %2, label %3, label %4, !dbg !7532

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.69, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !7533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7533
  unreachable, !dbg !7533

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7538
  call void @llvm.dbg.value(metadata i32 0, metadata !7528, metadata !DIExpression()), !dbg !7539
  %5 = icmp eq i32 %1, 0, !dbg !7540
  br i1 %5, label %13, label %6, !dbg !7543

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7543

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7528, metadata !DIExpression()), !dbg !7539
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7544
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #26, !dbg !7546
  %11 = add nuw i32 %9, 1, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %11, metadata !7528, metadata !DIExpression()), !dbg !7539
  %12 = icmp eq i32 %11, %1, !dbg !7540
  br i1 %12, label %13, label %8, !dbg !7543, !llvm.loop !7548

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7550
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7551
  tail call void @arm_core_mpu_enable() #26, !dbg !7552
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7553
  %16 = and i32 %15, 65280, !dbg !7553
  %17 = icmp eq i32 %16, 2048, !dbg !7553
  br i1 %17, label %19, label %18, !dbg !7556

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.71, i32 0, i32 0)) #27, !dbg !7557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7557
  unreachable, !dbg !7557

19:                                               ; preds = %13
  ret i32 0, !dbg !7559
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7560 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %1, metadata !7568, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %0, metadata !7569, metadata !DIExpression()), !dbg !7570
  %3 = load i8, i8* %1, align 1, !dbg !7571
  %4 = icmp eq i8 %3, 0, !dbg !7572
  br i1 %4, label %13, label %5, !dbg !7573

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7567, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %8, metadata !7568, metadata !DIExpression()), !dbg !7570
  store i8 %6, i8* %7, align 1, !dbg !7574
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7576
  call void @llvm.dbg.value(metadata i8* %9, metadata !7567, metadata !DIExpression()), !dbg !7570
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7577
  call void @llvm.dbg.value(metadata i8* %10, metadata !7568, metadata !DIExpression()), !dbg !7570
  %11 = load i8, i8* %10, align 1, !dbg !7571
  %12 = icmp eq i8 %11, 0, !dbg !7572
  br i1 %12, label %13, label %5, !dbg !7573, !llvm.loop !7578

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7580
  ret i8* %0, !dbg !7581
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7586, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %1, metadata !7587, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %2, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %0, metadata !7589, metadata !DIExpression()), !dbg !7590
  %4 = icmp eq i32 %2, 0, !dbg !7591
  br i1 %4, label %22, label %5, !dbg !7592

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7586, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %7, metadata !7588, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i8* %8, metadata !7587, metadata !DIExpression()), !dbg !7590
  %9 = load i8, i8* %8, align 1, !dbg !7593
  %10 = icmp eq i8 %9, 0, !dbg !7594
  br i1 %10, label %16, label %11, !dbg !7595

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7596
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7598
  call void @llvm.dbg.value(metadata i8* %12, metadata !7587, metadata !DIExpression()), !dbg !7590
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7599
  call void @llvm.dbg.value(metadata i8* %13, metadata !7586, metadata !DIExpression()), !dbg !7590
  %14 = add i32 %7, -1, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %14, metadata !7588, metadata !DIExpression()), !dbg !7590
  %15 = icmp eq i32 %14, 0, !dbg !7591
  br i1 %15, label %22, label %5, !dbg !7592, !llvm.loop !7601

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7586, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.value(metadata i32 %18, metadata !7588, metadata !DIExpression()), !dbg !7590
  store i8 0, i8* %17, align 1, !dbg !7603
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7605
  call void @llvm.dbg.value(metadata i8* %19, metadata !7586, metadata !DIExpression()), !dbg !7590
  %20 = add i32 %18, -1, !dbg !7606
  call void @llvm.dbg.value(metadata i32 %20, metadata !7588, metadata !DIExpression()), !dbg !7590
  %21 = icmp eq i32 %20, 0, !dbg !7607
  br i1 %21, label %22, label %16, !dbg !7608, !llvm.loop !7609

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7611
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7616, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %1, metadata !7617, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %1, metadata !7618, metadata !DIExpression()), !dbg !7619
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7620

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7616, metadata !DIExpression()), !dbg !7619
  %6 = load i8, i8* %5, align 1, !dbg !7621
  %7 = icmp eq i8 %6, %3, !dbg !7622
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7623
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7624
  call void @llvm.dbg.value(metadata i8* %10, metadata !7616, metadata !DIExpression()), !dbg !7619
  br i1 %9, label %11, label %4, !dbg !7623, !llvm.loop !7626

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7628
  ret i8* %12, !dbg !7629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7630 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7632, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %1, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* null, metadata !7634, metadata !DIExpression()), !dbg !7635
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7636

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7635
  call void @llvm.dbg.value(metadata i8* %6, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i8* %5, metadata !7632, metadata !DIExpression()), !dbg !7635
  %7 = load i8, i8* %5, align 1, !dbg !7637
  %8 = icmp eq i8 %7, %3, !dbg !7640
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7641
  call void @llvm.dbg.value(metadata i8* %9, metadata !7634, metadata !DIExpression()), !dbg !7635
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7642
  call void @llvm.dbg.value(metadata i8* %10, metadata !7632, metadata !DIExpression()), !dbg !7635
  %11 = icmp eq i8 %7, 0, !dbg !7643
  br i1 %11, label %12, label %4, !dbg !7643, !llvm.loop !7644

12:                                               ; preds = %4
  ret i8* %9, !dbg !7646
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7651, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i32 0, metadata !7652, metadata !DIExpression()), !dbg !7653
  %2 = load i8, i8* %0, align 1, !dbg !7654
  %3 = icmp eq i8 %2, 0, !dbg !7655
  br i1 %3, label %11, label %4, !dbg !7656

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i8* %6, metadata !7651, metadata !DIExpression()), !dbg !7653
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7657
  call void @llvm.dbg.value(metadata i8* %7, metadata !7651, metadata !DIExpression()), !dbg !7653
  %8 = add i32 %5, 1, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %8, metadata !7652, metadata !DIExpression()), !dbg !7653
  %9 = load i8, i8* %7, align 1, !dbg !7654
  %10 = icmp eq i8 %9, 0, !dbg !7655
  br i1 %10, label %11, label %4, !dbg !7656, !llvm.loop !7660

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7653
  ret i32 %12, !dbg !7662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7667, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %1, metadata !7668, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 0, metadata !7669, metadata !DIExpression()), !dbg !7670
  %3 = load i8, i8* %0, align 1, !dbg !7671
  %4 = icmp ne i8 %3, 0, !dbg !7672
  %5 = icmp ne i32 %1, 0, !dbg !7673
  %6 = and i1 %4, %5, !dbg !7673
  br i1 %6, label %7, label %16, !dbg !7674

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %9, metadata !7667, metadata !DIExpression()), !dbg !7670
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7675
  call void @llvm.dbg.value(metadata i8* %10, metadata !7667, metadata !DIExpression()), !dbg !7670
  %11 = add nuw i32 %8, 1, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %11, metadata !7669, metadata !DIExpression()), !dbg !7670
  %12 = load i8, i8* %10, align 1, !dbg !7671
  %13 = icmp ne i8 %12, 0, !dbg !7672
  %14 = icmp ult i32 %11, %1, !dbg !7673
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7673
  br i1 %15, label %7, label %16, !dbg !7674, !llvm.loop !7678

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7670
  ret i32 %17, !dbg !7680
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7681 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7685, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8* %1, metadata !7686, metadata !DIExpression()), !dbg !7687
  %3 = load i8, i8* %0, align 1, !dbg !7688
  %4 = load i8, i8* %1, align 1, !dbg !7689
  %5 = icmp ne i8 %3, %4, !dbg !7690
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7691
  br i1 %7, label %18, label %8, !dbg !7691

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7686, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8* %10, metadata !7685, metadata !DIExpression()), !dbg !7687
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %11, metadata !7685, metadata !DIExpression()), !dbg !7687
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7694
  call void @llvm.dbg.value(metadata i8* %12, metadata !7686, metadata !DIExpression()), !dbg !7687
  %13 = load i8, i8* %11, align 1, !dbg !7688
  %14 = load i8, i8* %12, align 1, !dbg !7689
  %15 = icmp ne i8 %13, %14, !dbg !7690
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7691
  br i1 %17, label %18, label %8, !dbg !7691, !llvm.loop !7695

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7688
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7689
  %21 = zext i8 %19 to i32, !dbg !7698
  %22 = zext i8 %20 to i32, !dbg !7699
  %23 = sub nsw i32 %21, %22, !dbg !7700
  ret i32 %23, !dbg !7701
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7702 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7706, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %1, metadata !7707, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i32 %2, metadata !7708, metadata !DIExpression()), !dbg !7709
  %4 = icmp eq i32 %2, 0, !dbg !7710
  br i1 %4, label %23, label %5, !dbg !7710

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7708, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %7, metadata !7707, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %8, metadata !7706, metadata !DIExpression()), !dbg !7709
  %9 = load i8, i8* %8, align 1, !dbg !7711
  %10 = load i8, i8* %7, align 1, !dbg !7712
  %11 = icmp ne i8 %9, %10, !dbg !7713
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7714
  br i1 %13, label %19, label %14, !dbg !7714

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7715
  call void @llvm.dbg.value(metadata i8* %15, metadata !7706, metadata !DIExpression()), !dbg !7709
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7717
  call void @llvm.dbg.value(metadata i8* %16, metadata !7707, metadata !DIExpression()), !dbg !7709
  %17 = add i32 %6, -1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %17, metadata !7708, metadata !DIExpression()), !dbg !7709
  %18 = icmp eq i32 %17, 0, !dbg !7710
  br i1 %18, label %23, label %5, !dbg !7710, !llvm.loop !7719

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7722
  %21 = zext i8 %10 to i32, !dbg !7723
  %22 = sub nsw i32 %20, %21, !dbg !7724
  br label %23, !dbg !7725

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7725
  ret i32 %24, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7732, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8* %1, metadata !7733, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8** %2, metadata !7734, metadata !DIExpression()), !dbg !7737
  %4 = icmp eq i8* %0, null, !dbg !7738
  br i1 %4, label %5, label %7, !dbg !7738

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7739
  br label %7, !dbg !7738

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7738
  call void @llvm.dbg.value(metadata i8* %8, metadata !7735, metadata !DIExpression()), !dbg !7737
  %9 = load i8, i8* %8, align 1, !dbg !7740
  %10 = icmp eq i8 %9, 0, !dbg !7740
  br i1 %10, label %33, label %11, !dbg !7741

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7735, metadata !DIExpression()), !dbg !7737
  %14 = zext i8 %12 to i32, !dbg !7740
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7742
  %16 = icmp eq i8* %15, null, !dbg !7741
  br i1 %16, label %21, label %17, !dbg !7743

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7744
  call void @llvm.dbg.value(metadata i8* %18, metadata !7735, metadata !DIExpression()), !dbg !7737
  %19 = load i8, i8* %18, align 1, !dbg !7740
  %20 = icmp eq i8 %19, 0, !dbg !7740
  br i1 %20, label %33, label %11, !dbg !7741, !llvm.loop !7746

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7736, metadata !DIExpression()), !dbg !7737
  %24 = zext i8 %22 to i32, !dbg !7748
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7749
  %26 = icmp eq i8* %25, null, !dbg !7750
  br i1 %26, label %27, label %31, !dbg !7751

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7752
  call void @llvm.dbg.value(metadata i8* %28, metadata !7736, metadata !DIExpression()), !dbg !7737
  %29 = load i8, i8* %28, align 1, !dbg !7748
  %30 = icmp eq i8 %29, 0, !dbg !7748
  br i1 %30, label %33, label %21, !dbg !7754, !llvm.loop !7755

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7757
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7760
  br label %33, !dbg !7761

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7737
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7737
  store i8* %34, i8** %2, align 4, !dbg !7737
  ret i8* %35, !dbg !7762
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7765, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %1, metadata !7766, metadata !DIExpression()), !dbg !7767
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7768
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7769
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7770
  ret i8* %0, !dbg !7771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7772 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %1, metadata !7775, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %2, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %0, metadata !7777, metadata !DIExpression()), !dbg !7779
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %4, metadata !7778, metadata !DIExpression()), !dbg !7779
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7781
  call void @llvm.dbg.value(metadata i8* %5, metadata !7774, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %1, metadata !7775, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %2, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %2, metadata !7776, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7779
  %6 = icmp eq i32 %2, 0, !dbg !7782
  br i1 %6, label %18, label %7, !dbg !7783

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7784
  call void @llvm.dbg.value(metadata i8* %9, metadata !7774, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %10, metadata !7775, metadata !DIExpression()), !dbg !7779
  %12 = load i8, i8* %10, align 1, !dbg !7785
  %13 = icmp eq i8 %12, 0, !dbg !7786
  br i1 %13, label %18, label %14, !dbg !7787

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7788
  call void @llvm.dbg.value(metadata i8* %15, metadata !7775, metadata !DIExpression()), !dbg !7779
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7790
  call void @llvm.dbg.value(metadata i8* %16, metadata !7774, metadata !DIExpression()), !dbg !7779
  store i8 %12, i8* %9, align 1, !dbg !7791
  call void @llvm.dbg.value(metadata i32 %11, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i32 %11, metadata !7776, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7779
  %17 = icmp eq i32 %11, 0, !dbg !7782
  br i1 %17, label %18, label %7, !dbg !7783, !llvm.loop !7792

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7779
  store i8 0, i8* %19, align 1, !dbg !7794
  ret i8* %0, !dbg !7795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7800, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %1, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %2, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %0, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %1, metadata !7804, metadata !DIExpression()), !dbg !7805
  %4 = icmp eq i32 %2, 0, !dbg !7806
  br i1 %4, label %31, label %5, !dbg !7808

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %0, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %2, metadata !7802, metadata !DIExpression()), !dbg !7805
  %6 = add i32 %2, -1, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %6, metadata !7802, metadata !DIExpression()), !dbg !7805
  %7 = icmp eq i32 %6, 0, !dbg !7810
  br i1 %7, label %23, label %8, !dbg !7811

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7812
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7812
  br label %11, !dbg !7812

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %14, metadata !7803, metadata !DIExpression()), !dbg !7805
  %15 = load i8, i8* %14, align 1, !dbg !7813
  %16 = load i8, i8* %13, align 1, !dbg !7814
  %17 = icmp eq i8 %15, %16, !dbg !7815
  br i1 %17, label %18, label %23, !dbg !7812

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7816
  call void @llvm.dbg.value(metadata i8* %19, metadata !7803, metadata !DIExpression()), !dbg !7805
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7818
  call void @llvm.dbg.value(metadata i8* %20, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %12, metadata !7802, metadata !DIExpression()), !dbg !7805
  %21 = add i32 %12, -1, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %21, metadata !7802, metadata !DIExpression()), !dbg !7805
  %22 = icmp eq i32 %21, 0, !dbg !7810
  br i1 %22, label %23, label %11, !dbg !7811, !llvm.loop !7819

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7805
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7805
  %26 = load i8, i8* %24, align 1, !dbg !7821
  %27 = zext i8 %26 to i32, !dbg !7821
  %28 = load i8, i8* %25, align 1, !dbg !7822
  %29 = zext i8 %28 to i32, !dbg !7822
  %30 = sub nsw i32 %27, %29, !dbg !7823
  br label %31, !dbg !7824

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7805
  ret i32 %32, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7826 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7830, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %1, metadata !7831, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %2, metadata !7832, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %0, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %1, metadata !7834, metadata !DIExpression()), !dbg !7835
  %4 = ptrtoint i8* %0 to i32, !dbg !7836
  %5 = ptrtoint i8* %1 to i32, !dbg !7836
  %6 = sub i32 %4, %5, !dbg !7836
  %7 = icmp ult i32 %6, %2, !dbg !7838
  br i1 %7, label %10, label %8, !dbg !7839

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %0, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %2, metadata !7832, metadata !DIExpression()), !dbg !7835
  %9 = icmp eq i32 %2, 0, !dbg !7840
  br i1 %9, label %26, label %17, !dbg !7842

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7832, metadata !DIExpression()), !dbg !7835
  %12 = add i32 %11, -1, !dbg !7843
  call void @llvm.dbg.value(metadata i32 %12, metadata !7832, metadata !DIExpression()), !dbg !7835
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7846
  %14 = load i8, i8* %13, align 1, !dbg !7846
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7847
  store i8 %14, i8* %15, align 1, !dbg !7848
  %16 = icmp eq i32 %12, 0, !dbg !7849
  br i1 %16, label %26, label %10, !dbg !7850, !llvm.loop !7851

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i8* %19, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 %20, metadata !7832, metadata !DIExpression()), !dbg !7835
  %21 = load i8, i8* %18, align 1, !dbg !7853
  store i8 %21, i8* %19, align 1, !dbg !7855
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7856
  call void @llvm.dbg.value(metadata i8* %22, metadata !7833, metadata !DIExpression()), !dbg !7835
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7857
  call void @llvm.dbg.value(metadata i8* %23, metadata !7834, metadata !DIExpression()), !dbg !7835
  %24 = add i32 %20, -1, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %24, metadata !7832, metadata !DIExpression()), !dbg !7835
  %25 = icmp eq i32 %24, 0, !dbg !7840
  br i1 %25, label %26, label %17, !dbg !7842, !llvm.loop !7859

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7862 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7868, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %1, metadata !7869, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7870, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %0, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %1, metadata !7872, metadata !DIExpression()), !dbg !7873
  %4 = icmp eq i32 %2, 0, !dbg !7874
  br i1 %4, label %14, label %5, !dbg !7875

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i8* %7, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %8, metadata !7870, metadata !DIExpression()), !dbg !7873
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7876
  call void @llvm.dbg.value(metadata i8* %9, metadata !7872, metadata !DIExpression()), !dbg !7873
  %10 = load i8, i8* %6, align 1, !dbg !7878
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7879
  call void @llvm.dbg.value(metadata i8* %11, metadata !7871, metadata !DIExpression()), !dbg !7873
  store i8 %10, i8* %7, align 1, !dbg !7880
  %12 = add i32 %8, -1, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %12, metadata !7870, metadata !DIExpression()), !dbg !7873
  %13 = icmp eq i32 %12, 0, !dbg !7874
  br i1 %13, label %14, label %5, !dbg !7875, !llvm.loop !7882

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7884
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7885 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 %1, metadata !7890, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i8* %0, metadata !7892, metadata !DIExpression()), !dbg !7894
  %4 = trunc i32 %1 to i8, !dbg !7895
  call void @llvm.dbg.value(metadata i8 %4, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i8* %0, metadata !7892, metadata !DIExpression()), !dbg !7894
  %5 = icmp eq i32 %2, 0, !dbg !7896
  br i1 %5, label %12, label %6, !dbg !7897

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7891, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i8* %8, metadata !7892, metadata !DIExpression()), !dbg !7894
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7898
  call void @llvm.dbg.value(metadata i8* %9, metadata !7892, metadata !DIExpression()), !dbg !7894
  store i8 %4, i8* %8, align 1, !dbg !7900
  %10 = add i32 %7, -1, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %10, metadata !7891, metadata !DIExpression()), !dbg !7894
  %11 = icmp eq i32 %10, 0, !dbg !7896
  br i1 %11, label %12, label %6, !dbg !7897, !llvm.loop !7902

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7909, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %1, metadata !7910, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i32 %2, metadata !7911, metadata !DIExpression()), !dbg !7915
  %4 = icmp eq i32 %2, 0, !dbg !7916
  br i1 %4, label %17, label %5, !dbg !7917

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7918

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7919
  call void @llvm.dbg.value(metadata i8* %9, metadata !7912, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %8, metadata !7911, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i8* %9, metadata !7912, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7919
  %10 = load i8, i8* %9, align 1, !dbg !7920
  %11 = icmp eq i8 %10, %6, !dbg !7923
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %12, metadata !7912, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %13, metadata !7911, metadata !DIExpression()), !dbg !7915
  br i1 %15, label %16, label %7, !dbg !7924, !llvm.loop !7925

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7927

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7915
  ret i8* %19, !dbg !7928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !7929 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7931, metadata !DIExpression()), !dbg !7932
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7933
  ret void, !dbg !7934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  ret i32 -1, !dbg !7939
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7944, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32* %1, metadata !7945, metadata !DIExpression()), !dbg !7946
  %3 = ptrtoint i32* %1 to i32, !dbg !7947
  %4 = and i32 %3, -2, !dbg !7947
  %5 = icmp eq i32 %4, 2, !dbg !7947
  br i1 %5, label %6, label %9, !dbg !7947

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7948
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7948
  br label %9, !dbg !7949

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7949
  ret i32 %10, !dbg !7950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32* %1, metadata !7954, metadata !DIExpression()), !dbg !7955
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7956
  ret i32 %3, !dbg !7957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7961, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32* %1, metadata !7962, metadata !DIExpression()), !dbg !7963
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7964, !srcloc !7966
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7967
  ret i32 %3, !dbg !7968
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32* %1, metadata !7975, metadata !DIExpression()), !dbg !7978
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %3, metadata !7976, metadata !DIExpression()), !dbg !7978
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7980
  call void @llvm.dbg.value(metadata i32 %4, metadata !7977, metadata !DIExpression()), !dbg !7978
  %5 = icmp ne i32 %3, %4, !dbg !7981
  %6 = sext i1 %5 to i32, !dbg !7982
  ret i32 %6, !dbg !7983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7984 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7988, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %1, metadata !7989, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32 %2, metadata !7990, metadata !DIExpression()), !dbg !7992
  call void @llvm.dbg.value(metadata i32* %3, metadata !7991, metadata !DIExpression()), !dbg !7992
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7993
  ret i32 %5, !dbg !7994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7997, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !7998, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %2, metadata !7999, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32* %3, metadata !8000, metadata !DIExpression()), !dbg !8001
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8002, !srcloc !8004
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8005
  ret i32 %5, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8009, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %1, metadata !8010, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %2, metadata !8011, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32* %3, metadata !8012, metadata !DIExpression()), !dbg !8017
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8018
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8020
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8020
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8020
  br i1 %11, label %33, label %12, !dbg !8020

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8017
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8017
  call void @llvm.dbg.value(metadata i8* %14, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %13, metadata !8013, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %1, metadata !8014, metadata !DIExpression()), !dbg !8017
  br label %15, !dbg !8021

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8023
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8017
  call void @llvm.dbg.value(metadata i8* %17, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %16, metadata !8014, metadata !DIExpression()), !dbg !8017
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8024
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8027
  call void @llvm.dbg.value(metadata i8* %19, metadata !8015, metadata !DIExpression()), !dbg !8017
  %20 = load i8, i8* %17, align 1, !dbg !8028
  %21 = zext i8 %20 to i32, !dbg !8029
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !8024
  %23 = icmp eq i32 %22, -1, !dbg !8030
  br i1 %23, label %30, label %24, !dbg !8031

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %25, metadata !8014, metadata !DIExpression()), !dbg !8017
  %26 = icmp eq i32 %25, 0, !dbg !8033
  br i1 %26, label %27, label %15, !dbg !8034, !llvm.loop !8035

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8037
  call void @llvm.dbg.value(metadata i32 %28, metadata !8013, metadata !DIExpression()), !dbg !8017
  %29 = icmp eq i32 %28, 0, !dbg !8038
  br i1 %29, label %30, label %12, !dbg !8039, !llvm.loop !8040

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8017
  call void @llvm.dbg.value(metadata i32 %31, metadata !8013, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.label(metadata !8016), !dbg !8043
  %32 = sub i32 %2, %31, !dbg !8044
  br label %33, !dbg !8045

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8017
  ret i32 %34, !dbg !8046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8052
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8053
  %3 = icmp eq i32 %2, -1, !dbg !8055
  br i1 %3, label %8, label %4, !dbg !8056

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8057
  %6 = icmp eq i32 %5, -1, !dbg !8058
  %7 = sext i1 %6 to i32, !dbg !8057
  br label %8, !dbg !8059

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8052
  ret i32 %9, !dbg !8060
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8063, metadata !DIExpression()), !dbg !8064
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8065
  ret void, !dbg !8066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8071, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %1, metadata !8072, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8073, metadata !DIExpression()), !dbg !8077
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8078
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8078
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8078
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8074, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %0, metadata !8076, metadata !DIExpression()), !dbg !8077
  %7 = icmp slt i32 %0, %1, !dbg !8079
  br i1 %7, label %8, label %22, !dbg !8082

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8076, metadata !DIExpression()), !dbg !8077
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8083
  %11 = icmp eq i32 %10, 0, !dbg !8083
  br i1 %11, label %19, label %12, !dbg !8086

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8087
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8089
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8089
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8091
  br i1 %15, label %19, label %16, !dbg !8092

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8093
  %18 = load i8*, i8** %17, align 4, !dbg !8093
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !8094
  br label %19, !dbg !8095

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8096
  call void @llvm.dbg.value(metadata i32 %20, metadata !8076, metadata !DIExpression()), !dbg !8077
  %21 = icmp eq i32 %20, %1, !dbg !8079
  br i1 %21, label %22, label %8, !dbg !8082, !llvm.loop !8097

22:                                               ; preds = %19, %3
  ret void, !dbg !8099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8102, metadata !DIExpression()), !dbg !8103
  %2 = shl nuw i32 1, %0, !dbg !8104
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8107
  ret i32 %3, !dbg !8108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8113, metadata !DIExpression()), !dbg !8114
  %2 = shl nuw i32 1, %0, !dbg !8115
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8118
  ret void, !dbg !8119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8123, metadata !DIExpression()), !dbg !8124
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8125
  ret void, !dbg !8126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8129, metadata !DIExpression()), !dbg !8130
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8131
  %3 = and i32 %2, %0, !dbg !8131
  %4 = icmp eq i32 %3, %0, !dbg !8132
  %5 = zext i1 %4 to i32, !dbg !8132
  ret i32 %5, !dbg !8133
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8134 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8136, metadata !DIExpression()), !dbg !8137
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8138
  ret void, !dbg !8139
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8140 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8142, metadata !DIExpression()), !dbg !8143
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8146 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8148, metadata !DIExpression()), !dbg !8149
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8154, metadata !DIExpression()), !dbg !8155
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8156
  ret void, !dbg !8157
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8160, metadata !DIExpression()), !dbg !8161
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8162
  ret void, !dbg !8163
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8164 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8166, metadata !DIExpression()), !dbg !8167
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8168
  ret void, !dbg !8169
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8172, metadata !DIExpression()), !dbg !8173
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8174
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8178, metadata !DIExpression()), !dbg !8179
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8184, metadata !DIExpression()), !dbg !8185
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8190, metadata !DIExpression()), !dbg !8191
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8192
  ret void, !dbg !8193
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8194 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8196, metadata !DIExpression()), !dbg !8197
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8198
  ret i32 0, !dbg !8199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !891, metadata !DIExpression()), !dbg !8200
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !8201
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !8203
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !8205
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !8207
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !8209
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !8211
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !8213
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !8215
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !8217
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !8219
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !8221
  ret void, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8226, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.value(metadata i32 0, metadata !8227, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.value(metadata i32 undef, metadata !8227, metadata !DIExpression()), !dbg !8228
  %2 = lshr i32 6684671, %0, !dbg !8229
  %3 = and i32 %2, 1, !dbg !8229
  %4 = or i32 %3, %0, !dbg !8231
  %5 = icmp eq i32 %4, 0, !dbg !8231
  br i1 %5, label %6, label %7, !dbg !8231

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8232
  unreachable, !dbg !8232

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8237
  %9 = load i32, i32* %8, align 4, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %9, metadata !8227, metadata !DIExpression()), !dbg !8228
  %10 = shl nuw i32 1, %0, !dbg !8238
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #26, !dbg !8239
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !8240
  ret void, !dbg !8241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8244, metadata !DIExpression()), !dbg !8245
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8246
  %3 = or i32 %2, %0, !dbg !8246
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8246
  ret void, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8250, metadata !DIExpression()), !dbg !8251
  %2 = icmp slt i32 %0, 32, !dbg !8252
  br i1 %2, label %3, label %5, !dbg !8254

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8255
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8257
  br label %5, !dbg !8258

5:                                                ; preds = %1, %3
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8262, metadata !DIExpression()), !dbg !8263
  %2 = xor i32 %0, -1, !dbg !8264
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8264
  %4 = and i32 %3, %2, !dbg !8264
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8264
  ret void, !dbg !8265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8270, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 %1, metadata !8271, metadata !DIExpression()), !dbg !8272
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8273

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8274
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8276
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8277
  br label %11, !dbg !8278

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8279
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8280
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8281
  br label %11, !dbg !8282

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8283
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8284
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8285
  br label %11, !dbg !8286

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8287
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8288
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8289
  br label %11, !dbg !8290

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8294, metadata !DIExpression()), !dbg !8295
  %2 = xor i32 %0, -1, !dbg !8296
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8296
  %4 = and i32 %3, %2, !dbg !8296
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8296
  ret void, !dbg !8297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8300, metadata !DIExpression()), !dbg !8301
  %2 = xor i32 %0, -1, !dbg !8302
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8302
  %4 = and i32 %3, %2, !dbg !8302
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8302
  ret void, !dbg !8303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8306, metadata !DIExpression()), !dbg !8307
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8308
  %3 = or i32 %2, %0, !dbg !8308
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8314
  %3 = or i32 %2, %0, !dbg !8314
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8314
  ret void, !dbg !8315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8320, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8321, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %2, metadata !8322, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8323, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8325, metadata !DIExpression()), !dbg !8326
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8327
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8327
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8329
  br i1 %6, label %7, label %9, !dbg !8330

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8331
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8332
  store i8* %2, i8** %8, align 4, !dbg !8333
  br label %9, !dbg !8334

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8326
  ret i32 %10, !dbg !8335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !8336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8338, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8339, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8340, metadata !DIExpression()), !dbg !8341
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8342
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8343
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8344
  store i8* null, i8** %3, align 4, !dbg !8345
  ret void, !dbg !8346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8349, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %1, metadata !8350, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %1, metadata !8351, metadata !DIExpression()), !dbg !8354
  %3 = bitcast i8* %1 to i32*, !dbg !8355
  %4 = load i32, i32* %3, align 4, !dbg !8355
  %5 = add i32 %4, -169, !dbg !8355
  %6 = icmp ult i32 %5, -121, !dbg !8355
  br i1 %6, label %15, label %7, !dbg !8357

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8358
  %9 = inttoptr i32 %8 to i32*, !dbg !8359
  call void @llvm.dbg.value(metadata i32* %9, metadata !8352, metadata !DIExpression()), !dbg !8354
  %10 = load volatile i32, i32* %9, align 4, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %10, metadata !8353, metadata !DIExpression()), !dbg !8354
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8361
  %12 = bitcast i8* %11 to i32*, !dbg !8361
  %13 = load i32, i32* %12, align 4, !dbg !8361
  %14 = or i32 %13, %10, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %14, metadata !8353, metadata !DIExpression()), !dbg !8354
  store volatile i32 %14, i32* %9, align 4, !dbg !8363
  br label %15, !dbg !8364

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8354
  ret i32 %16, !dbg !8365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8368, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i8* %1, metadata !8369, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i8* %1, metadata !8370, metadata !DIExpression()), !dbg !8373
  %3 = bitcast i8* %1 to i32*, !dbg !8374
  %4 = load i32, i32* %3, align 4, !dbg !8374
  %5 = add i32 %4, -169, !dbg !8374
  %6 = icmp ult i32 %5, -121, !dbg !8374
  br i1 %6, label %16, label %7, !dbg !8376

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8377
  %9 = inttoptr i32 %8 to i32*, !dbg !8378
  call void @llvm.dbg.value(metadata i32* %9, metadata !8371, metadata !DIExpression()), !dbg !8373
  %10 = load volatile i32, i32* %9, align 4, !dbg !8379
  call void @llvm.dbg.value(metadata i32 %10, metadata !8372, metadata !DIExpression()), !dbg !8373
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8380
  %12 = bitcast i8* %11 to i32*, !dbg !8380
  %13 = load i32, i32* %12, align 4, !dbg !8380
  %14 = xor i32 %13, -1, !dbg !8381
  %15 = and i32 %10, %14, !dbg !8382
  call void @llvm.dbg.value(metadata i32 %15, metadata !8372, metadata !DIExpression()), !dbg !8373
  store volatile i32 %15, i32* %9, align 4, !dbg !8383
  br label %16, !dbg !8384

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8373
  ret i32 %17, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8388, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i8* %1, metadata !8389, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32* %2, metadata !8390, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i8* %1, metadata !8391, metadata !DIExpression()), !dbg !8396
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8397
  call void @llvm.dbg.value(metadata i32 %4, metadata !8392, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 undef, metadata !8393, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 undef, metadata !8394, metadata !DIExpression()), !dbg !8396
  call void @llvm.dbg.value(metadata i32 %4, metadata !8395, metadata !DIExpression()), !dbg !8396
  %5 = bitcast i8* %1 to i32*, !dbg !8398
  %6 = load i32, i32* %5, align 4, !dbg !8398
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8399

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %8, metadata !8393, metadata !DIExpression()), !dbg !8396
  br label %19, !dbg !8401

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %10, metadata !8394, metadata !DIExpression()), !dbg !8396
  br label %19, !dbg !8404

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8405
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8406
  br label %19, !dbg !8407

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8408
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !8409
  br label %19, !dbg !8410

17:                                               ; preds = %3
  br label %19, !dbg !8411

18:                                               ; preds = %3
  br label %19, !dbg !8412

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8413
  br label %21, !dbg !8414

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8396
  ret i32 %22, !dbg !8414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8417, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8* %1, metadata !8418, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8* %2, metadata !8419, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8* %1, metadata !8420, metadata !DIExpression()), !dbg !8425
  %4 = bitcast i8* %1 to i32*, !dbg !8426
  %5 = load i32, i32* %4, align 4, !dbg !8426
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %6, metadata !8424, metadata !DIExpression()), !dbg !8425
  %7 = icmp slt i32 %6, 0, !dbg !8428
  br i1 %7, label %22, label %8, !dbg !8430

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8420, metadata !DIExpression()), !dbg !8425
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8431
  %10 = bitcast i8* %9 to i32*, !dbg !8431
  %11 = load i32, i32* %10, align 4, !dbg !8431
  %12 = lshr i32 %11, 16, !dbg !8431
  %13 = and i32 %12, 7, !dbg !8431
  %14 = lshr i32 %11, 8, !dbg !8432
  %15 = and i32 %14, 31, !dbg !8432
  %16 = shl i32 %13, %15, !dbg !8433
  call void @llvm.dbg.value(metadata i32 %16, metadata !8423, metadata !DIExpression()), !dbg !8425
  %17 = and i32 %11, 255, !dbg !8434
  %18 = or i32 %17, 1073887232, !dbg !8435
  %19 = inttoptr i32 %18 to i32*, !dbg !8436
  call void @llvm.dbg.value(metadata i32* %19, metadata !8421, metadata !DIExpression()), !dbg !8425
  %20 = load volatile i32, i32* %19, align 4, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %20, metadata !8422, metadata !DIExpression()), !dbg !8425
  %21 = or i32 %16, %20, !dbg !8438
  call void @llvm.dbg.value(metadata i32 %21, metadata !8422, metadata !DIExpression()), !dbg !8425
  store volatile i32 %21, i32* %19, align 4, !dbg !8439
  br label %22, !dbg !8440

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8425
  ret i32 %23, !dbg !8441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8446, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.value(metadata i32 0, metadata !8447, metadata !DIExpression()), !dbg !8448
  %2 = add i32 %0, -1, !dbg !8449
  %3 = icmp ult i32 %2, 6, !dbg !8449
  br i1 %3, label %4, label %7, !dbg !8449

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8449
  %6 = load i32, i32* %5, align 4, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %6, metadata !8447, metadata !DIExpression()), !dbg !8448
  br label %7, !dbg !8450

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8448
  ret i32 %8, !dbg !8451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8456, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %1, metadata !8457, metadata !DIExpression()), !dbg !8458
  %3 = udiv i32 %0, %1, !dbg !8459
  ret i32 %3, !dbg !8460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8465, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 8, metadata !8466, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 84, metadata !8467, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %1, metadata !8468, metadata !DIExpression()), !dbg !8469
  %3 = mul i32 %0, 84, !dbg !8470
  %4 = shl nsw i32 %1, 3, !dbg !8471
  %5 = udiv i32 %3, %4, !dbg !8472
  ret i32 %5, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8476, metadata !DIExpression()), !dbg !8479
  tail call void @config_enable_default_clocks() #27, !dbg !8480
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8481
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8481
  %4 = lshr i32 %3, 4, !dbg !8481
  %5 = and i32 %4, 15, !dbg !8481
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8481
  %7 = load i8, i8* %6, align 1, !dbg !8481
  %8 = zext i8 %7 to i32, !dbg !8481
  %9 = lshr i32 %2, %8, !dbg !8481
  call void @llvm.dbg.value(metadata i32 %9, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8478, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8479
  %10 = icmp ult i32 %9, 84000000, !dbg !8482
  br i1 %10, label %11, label %13, !dbg !8484

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8485
  br label %13, !dbg !8487

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8488
  tail call fastcc void @set_up_plls() #26, !dbg !8489
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8490
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8493
  br label %14, !dbg !8494

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8495
  %16 = icmp eq i32 %15, 8, !dbg !8496
  br i1 %16, label %17, label %14, !dbg !8494, !llvm.loop !8497

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8499
  br i1 %18, label %19, label %21, !dbg !8501

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8502
  br label %21, !dbg !8504

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8505
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8506
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8507
  ret i32 0, !dbg !8508
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8509 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8511
  %2 = and i32 %1, 240, !dbg !8511
  ret i32 %2, !dbg !8512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8513 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8514
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8519
  br label %1, !dbg !8520

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8521
  %3 = icmp eq i32 %2, 1, !dbg !8522
  br i1 %3, label %4, label %1, !dbg !8520, !llvm.loop !8523

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8525
  br label %5, !dbg !8528

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8529
  %7 = icmp eq i32 %6, 1, !dbg !8530
  br i1 %7, label %8, label %5, !dbg !8528, !llvm.loop !8531

8:                                                ; preds = %5
  ret void, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8534 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8535
  %2 = icmp eq i32 %1, 8, !dbg !8537
  br i1 %2, label %3, label %4, !dbg !8538

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8539
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8541
  br label %4, !dbg !8542

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8543
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8544
  %6 = and i32 %5, -196609, !dbg !8544
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8544
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8545
  %8 = and i32 %7, -251658241, !dbg !8545
  %9 = or i32 %8, 134217728, !dbg !8545
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8545
  tail call void @config_pll_sysclock() #27, !dbg !8546
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8547
  br label %10, !dbg !8548

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8549
  %12 = icmp eq i32 %11, 1, !dbg !8550
  br i1 %12, label %13, label %10, !dbg !8548, !llvm.loop !8551

13:                                               ; preds = %10
  ret void, !dbg !8553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8554 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8556, metadata !DIExpression()), !dbg !8557
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8558
  %2 = and i32 %1, -241, !dbg !8558
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8558
  ret void, !dbg !8559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8562, metadata !DIExpression()), !dbg !8563
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8564
  %3 = and i32 %2, -4, !dbg !8564
  %4 = or i32 %3, %0, !dbg !8564
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8564
  ret void, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8567
  %2 = and i32 %1, 12, !dbg !8567
  ret i32 %2, !dbg !8568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8569 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8571, metadata !DIExpression()), !dbg !8572
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8573
  %2 = and i32 %1, -7169, !dbg !8573
  %3 = or i32 %2, 4096, !dbg !8573
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8575 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8577, metadata !DIExpression()), !dbg !8578
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8579
  %2 = and i32 %1, -57345, !dbg !8579
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8579
  ret void, !dbg !8580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8581 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8582
  %2 = icmp eq i32 %1, 1, !dbg !8584
  br i1 %2, label %7, label %3, !dbg !8585

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8586
  br label %4, !dbg !8588

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8589
  %6 = icmp eq i32 %5, 1, !dbg !8590
  br i1 %6, label %7, label %4, !dbg !8588, !llvm.loop !8591

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8593
  br label %8, !dbg !8594

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8595
  %10 = icmp eq i32 %9, 0, !dbg !8596
  br i1 %10, label %11, label %8, !dbg !8594, !llvm.loop !8597

11:                                               ; preds = %8
  ret void, !dbg !8599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8600 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8601
  %2 = and i32 %1, -16777217, !dbg !8601
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8601
  ret void, !dbg !8602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8603 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8604
  %2 = or i32 %1, 16777216, !dbg !8604
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8604
  ret void, !dbg !8605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8606 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8607
  %2 = lshr i32 %1, 25, !dbg !8608
  %3 = and i32 %2, 1, !dbg !8608
  ret i32 %3, !dbg !8609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8610 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8611
  %2 = lshr i32 %1, 1, !dbg !8612
  %3 = and i32 %2, 1, !dbg !8612
  ret i32 %3, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8614 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8615
  %2 = or i32 %1, 1, !dbg !8615
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8615
  ret void, !dbg !8616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8617 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8618
  %2 = and i32 %1, -262145, !dbg !8618
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8618
  ret void, !dbg !8619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8620 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8621
  %2 = or i32 %1, 65536, !dbg !8621
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8623 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8624
  %2 = lshr i32 %1, 17, !dbg !8625
  %3 = and i32 %2, 1, !dbg !8625
  ret i32 %3, !dbg !8626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8628
  %2 = or i32 %1, 1, !dbg !8628
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8628
  ret void, !dbg !8629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8630 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8631
  %2 = lshr i32 %1, 1, !dbg !8632
  %3 = and i32 %2, 1, !dbg !8632
  ret i32 %3, !dbg !8633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8634 {
  ret i32 16000000, !dbg !8636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8640 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8641
  ret void, !dbg !8642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8643 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8647, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i32 8, metadata !8648, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i32 84, metadata !8649, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i32 0, metadata !8650, metadata !DIExpression()), !dbg !8651
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8652
  %2 = and i32 %1, -4227072, !dbg !8652
  %3 = or i32 %2, 4199688, !dbg !8652
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8652
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8653
  %5 = and i32 %4, -196609, !dbg !8653
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8653
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8654
  %7 = and i32 %6, -1879048193, !dbg !8654
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8654
  ret void, !dbg !8655
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8656 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8657
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8659 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8662, metadata !DIExpression()), !dbg !8664
  %2 = bitcast i32* %1 to i8*, !dbg !8665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8665
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8663, metadata !DIExpression()), !dbg !8666
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8667
  %4 = or i32 %3, 268435456, !dbg !8667
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8667
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8668
  %6 = and i32 %5, 268435456, !dbg !8668
  store volatile i32 %6, i32* %1, align 4, !dbg !8669
  %7 = load volatile i32, i32* %1, align 4, !dbg !8670
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8671
  ret void, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8674, metadata !DIExpression()), !dbg !8675
  %2 = tail call fastcc zeroext i1 @device_is_ready.96() #26, !dbg !8676
  br i1 %2, label %3, label %4, !dbg !8678

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8679
  br label %4, !dbg !8680

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8675
  ret i32 %5, !dbg !8681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.96() unnamed_addr #1 !dbg !8682 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8686, metadata !DIExpression()), !dbg !8687
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8688, !srcloc !8690
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.97() #26, !dbg !8691
  ret i1 %1, !dbg !8692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8693 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8694
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = icmp eq i32 %0, 10, !dbg !8701
  br i1 %2, label %3, label %4, !dbg !8703

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8704
  br label %4, !dbg !8706

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8707
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8708
  ret i32 %0, !dbg !8709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8710 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8713, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i8 %0, metadata !8714, metadata !DIExpression()), !dbg !8715
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8716, !srcloc !8718
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8719
  ret void, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8723, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i8 %0, metadata !8724, metadata !DIExpression()), !dbg !8726
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8727
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8725, metadata !DIExpression()), !dbg !8726
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8728
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8728
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !8729
  ret void, !dbg !8730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.97() unnamed_addr #1 !dbg !8731 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8733, metadata !DIExpression()), !dbg !8734
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !8735
  ret i1 %1, !dbg !8736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8737 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8784, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8785, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8786, metadata !DIExpression()), !dbg !8787
  ret void, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8789 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8791, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.value(metadata i8 %1, metadata !8792, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.value(metadata i32 %2, metadata !8793, metadata !DIExpression()), !dbg !8796
  %5 = bitcast i32* %4 to i8*, !dbg !8797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8797
  call void @llvm.dbg.value(metadata i32* %4, metadata !8795, metadata !DIExpression(DW_OP_deref)), !dbg !8796
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %6, metadata !8794, metadata !DIExpression()), !dbg !8796
  %7 = icmp eq i32 %6, 0, !dbg !8799
  br i1 %7, label %8, label %31, !dbg !8801

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8796
  %9 = and i32 %2, 131072, !dbg !8802
  %10 = icmp eq i32 %9, 0, !dbg !8804
  br i1 %10, label %28, label %11, !dbg !8805

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8806
  %13 = icmp eq i32 %12, 0, !dbg !8809
  br i1 %13, label %18, label %14, !dbg !8810

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8811
  %16 = shl nuw i32 1, %15, !dbg !8811
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8813
  br label %25, !dbg !8814

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8815
  %20 = icmp eq i32 %19, 0, !dbg !8817
  %21 = zext i8 %1 to i32, !dbg !8796
  br i1 %20, label %25, label %22, !dbg !8818

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8819
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8821
  br label %25, !dbg !8822

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8823
  %27 = load i32, i32* %4, align 4, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %30, metadata !8795, metadata !DIExpression()), !dbg !8796
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8825
  br label %31, !dbg !8826

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8823
  %30 = load i32, i32* %4, align 4, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %30, metadata !8795, metadata !DIExpression()), !dbg !8796
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8825
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8796
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8827
  ret i32 %6, !dbg !8827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8832, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32* %1, metadata !8833, metadata !DIExpression()), !dbg !8837
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8838
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8838
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8838
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8834, metadata !DIExpression()), !dbg !8837
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8839
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8839
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8839
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8836, metadata !DIExpression()), !dbg !8837
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8840
  store i32 %9, i32* %1, align 4, !dbg !8841
  ret i32 0, !dbg !8842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8845, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %1, metadata !8846, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %2, metadata !8847, metadata !DIExpression()), !dbg !8851
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8852
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8852
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8852
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8848, metadata !DIExpression()), !dbg !8851
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8853
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8853
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8853
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8849, metadata !DIExpression()), !dbg !8851
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %10, metadata !8850, metadata !DIExpression()), !dbg !8851
  %11 = xor i32 %1, -1, !dbg !8855
  %12 = and i32 %10, %11, !dbg !8856
  %13 = and i32 %2, %1, !dbg !8857
  %14 = or i32 %12, %13, !dbg !8858
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8859
  ret i32 0, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8863, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %1, metadata !8864, metadata !DIExpression()), !dbg !8867
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8868
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8868
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8868
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8865, metadata !DIExpression()), !dbg !8867
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8869
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8869
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8869
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8866, metadata !DIExpression()), !dbg !8867
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8870
  store volatile i32 %1, i32* %9, align 4, !dbg !8870
  ret i32 0, !dbg !8871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8874, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %1, metadata !8875, metadata !DIExpression()), !dbg !8878
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8879
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8879
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8879
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8876, metadata !DIExpression()), !dbg !8878
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8880
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8880
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8877, metadata !DIExpression()), !dbg !8878
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8881
  ret i32 0, !dbg !8882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8885, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata i32 %1, metadata !8886, metadata !DIExpression()), !dbg !8889
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8890
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8890
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8890
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8887, metadata !DIExpression()), !dbg !8889
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8891
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8891
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8891
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8888, metadata !DIExpression()), !dbg !8889
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8892
  %10 = load volatile i32, i32* %9, align 4, !dbg !8892
  %11 = xor i32 %10, %1, !dbg !8892
  store volatile i32 %11, i32* %9, align 4, !dbg !8892
  ret i32 0, !dbg !8893
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8896, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i8 %1, metadata !8897, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 %2, metadata !8898, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 %3, metadata !8899, metadata !DIExpression()), !dbg !8906
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8907
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8907
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8907
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8900, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i8* undef, metadata !8901, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8906
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8908

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8909
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8913
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8914
  %12 = load i32, i32* %11, align 4, !dbg !8914
  %13 = icmp eq i32 %10, %12, !dbg !8915
  br i1 %13, label %14, label %29, !dbg !8916

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8917
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8919
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8920
  br label %29, !dbg !8921

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8922
  %17 = load i8*, i8** %16, align 4, !dbg !8922
  call void @llvm.dbg.value(metadata i8* %17, metadata !8901, metadata !DIExpression()), !dbg !8906
  %18 = zext i8 %1 to i32, !dbg !8923
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8925
  %20 = icmp eq i32 %19, 0, !dbg !8926
  br i1 %20, label %21, label %29, !dbg !8927

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8928
  %23 = load i32, i32* %22, align 4, !dbg !8928
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8929
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8930

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8903, metadata !DIExpression()), !dbg !8906
  br label %27, !dbg !8931

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8903, metadata !DIExpression()), !dbg !8906
  br label %27, !dbg !8933

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8903, metadata !DIExpression()), !dbg !8906
  br label %27, !dbg !8934

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8906
  call void @llvm.dbg.value(metadata i32 %28, metadata !8903, metadata !DIExpression()), !dbg !8906
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8935
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8936
  br label %29, !dbg !8936

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8906
  call void @llvm.dbg.value(metadata i32 %30, metadata !8904, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.label(metadata !8905), !dbg !8937
  ret i32 %30, !dbg !8938
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8941, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8942, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i1 %2, metadata !8943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8945
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8946
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8946
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8946
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8944, metadata !DIExpression()), !dbg !8945
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8947
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8948
  ret i32 %8, !dbg !8949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8950 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8956, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8957, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata i1 %2, metadata !8958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8959
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8960
  br i1 %4, label %5, label %6, !dbg !8963

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #27, !dbg !8964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8964
  unreachable, !dbg !8964

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8966
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8966
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8966
  br i1 %9, label %10, label %11, !dbg !8969

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !8970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8970
  unreachable, !dbg !8970

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8972
  br i1 %12, label %18, label %13, !dbg !8974

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8975
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #26, !dbg !8978
  %16 = or i1 %15, %2, !dbg !8979
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8979
  br i1 %2, label %19, label %21, !dbg !8979

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8980

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8981
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #26, !dbg !8984
  br label %21, !dbg !8985

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8959
  ret i32 %22, !dbg !8986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8987 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8991, metadata !DIExpression()), !dbg !8992
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8993
  %3 = icmp eq %struct._snode* %2, null, !dbg !8993
  ret i1 %3, !dbg !8993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8994 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8998, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8999, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9000, metadata !DIExpression()), !dbg !9002
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9003
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9001, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9000, metadata !DIExpression()), !dbg !9002
  %4 = icmp eq %struct._snode* %3, null, !dbg !9005
  br i1 %4, label %15, label %5, !dbg !9003

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9001, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9000, metadata !DIExpression()), !dbg !9002
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9007
  br i1 %6, label %9, label %11, !dbg !9010

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9001, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9000, metadata !DIExpression()), !dbg !9002
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9007
  br i1 %8, label %9, label %11, !dbg !9010, !llvm.loop !9011

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9012
  br label %15, !dbg !9012

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9001, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9000, metadata !DIExpression()), !dbg !9002
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9005
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9001, metadata !DIExpression()), !dbg !9002
  %14 = icmp eq %struct._snode* %13, null, !dbg !9005
  br i1 %14, label %15, label %7, !dbg !9003, !llvm.loop !9011

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9019, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9020, metadata !DIExpression()), !dbg !9021
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9022
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9022
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9022
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9023
  %5 = icmp eq %struct._snode* %4, null, !dbg !9023
  br i1 %5, label %6, label %8, !dbg !9022

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9025
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9025
  br label %8, !dbg !9025

8:                                                ; preds = %6, %2
  ret void, !dbg !9022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9031, metadata !DIExpression()), !dbg !9032
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9033
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9033
  ret %struct._snode* %3, !dbg !9034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9039, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9040, metadata !DIExpression()), !dbg !9041
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9042
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9043
  ret void, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9047, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9048, metadata !DIExpression()), !dbg !9049
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9050
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9051
  ret void, !dbg !9052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9053 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9055, metadata !DIExpression()), !dbg !9056
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9057
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9057
  ret %struct._snode* %3, !dbg !9058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !9059 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9061, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9062, metadata !DIExpression()), !dbg !9063
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9064
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9065
  ret void, !dbg !9066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9067 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9071, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9073, metadata !DIExpression()), !dbg !9074
  %4 = icmp eq %struct._snode* %1, null, !dbg !9075
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9077
  br i1 %4, label %6, label %11, !dbg !9078

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9079
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9081
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9081
  br i1 %8, label %9, label %15, !dbg !9079

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9083
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9083
  br label %15, !dbg !9083

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9085
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9087
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9087
  br i1 %13, label %14, label %15, !dbg !9085

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9089
  br label %15, !dbg !9089

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9078
  ret void, !dbg !9078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #7 !dbg !9091 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  %2 = icmp eq %struct._snode* %0, null, !dbg !9097
  br i1 %2, label %5, label %3, !dbg !9097

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9097
  br label %5, !dbg !9097

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9097
  ret %struct._snode* %6, !dbg !9097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9098 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9100, metadata !DIExpression()), !dbg !9101
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9102
  ret %struct._snode* %2, !dbg !9102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9103 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9105, metadata !DIExpression()), !dbg !9106
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9107
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9107
  ret %struct._snode* %3, !dbg !9108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9111, metadata !DIExpression()), !dbg !9114
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9115, !range !9116
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9114
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9117
  call void @llvm.dbg.value(metadata i32 %3, metadata !9113, metadata !DIExpression()), !dbg !9114
  ret i32 %3, !dbg !9118
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9121, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %1, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i8* %1, metadata !9123, metadata !DIExpression()), !dbg !9124
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9125
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9125
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9126
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9126
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9126
  %8 = shl nuw i32 1, %0, !dbg !9127
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9128
  ret void, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9130 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9136, metadata !DIExpression()), !dbg !9140
  %4 = bitcast i64* %3 to i8*, !dbg !9141
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9141
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9138, metadata !DIExpression()), !dbg !9140
  store i64 70368744177732, i64* %3, align 8, !dbg !9142
  call void @llvm.dbg.value(metadata i64* %3, metadata !9138, metadata !DIExpression(DW_OP_deref)), !dbg !9140
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %5, metadata !9139, metadata !DIExpression()), !dbg !9140
  %6 = icmp eq i32 %5, 0, !dbg !9144
  br i1 %6, label %7, label %8, !dbg !9146

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9147
  br label %8, !dbg !9148

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9149
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8* %0, metadata !9153, metadata !DIExpression()), !dbg !9155
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9154, metadata !DIExpression()), !dbg !9155
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9157
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9157
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !9158
  ret i32 %5, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9162, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32 %1, metadata !9163, metadata !DIExpression()), !dbg !9165
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %3, metadata !9164, metadata !DIExpression()), !dbg !9165
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9167
  ret void, !dbg !9168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9173, metadata !DIExpression()), !dbg !9174
  %2 = sdiv i32 %0, 4, !dbg !9175
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9176
  %6 = add nsw i32 %5, 16, !dbg !9177
  %7 = shl i32 15, %6, !dbg !9178
  %8 = or i32 %7, %2, !dbg !9179
  ret i32 %8, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 %1, metadata !9186, metadata !DIExpression()), !dbg !9187
  %3 = and i32 %1, 255, !dbg !9188
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9188
  %5 = load volatile i32, i32* %4, align 4, !dbg !9188
  %6 = lshr i32 %1, 16, !dbg !9188
  %7 = xor i32 %6, -1, !dbg !9188
  %8 = and i32 %5, %7, !dbg !9188
  call void @llvm.dbg.value(metadata i32 %6, metadata !9189, metadata !DIExpression()) #25, !dbg !9193
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9195, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %9, metadata !9192, metadata !DIExpression()) #25, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %9, metadata !9197, metadata !DIExpression()) #25, !dbg !9202
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9204, !range !4243
  %11 = shl i32 %0, %10, !dbg !9188
  %12 = or i32 %11, %8, !dbg !9188
  store volatile i32 %12, i32* %4, align 4, !dbg !9188
  ret void, !dbg !9205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9206 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9210, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9211, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata i32 %2, metadata !9212, metadata !DIExpression()), !dbg !9215
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9216
  %5 = icmp eq %struct._snode* %4, null, !dbg !9216
  br i1 %5, label %24, label %6, !dbg !9216

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9218
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9214, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9213, metadata !DIExpression()), !dbg !9215
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9219
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9219
  %12 = load i32, i32* %11, align 4, !dbg !9219
  %13 = and i32 %12, %2, !dbg !9223
  %14 = icmp eq i32 %13, 0, !dbg !9223
  br i1 %14, label %22, label %15, !dbg !9224

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9225
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9225
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9225
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9225
  br i1 %19, label %20, label %21, !dbg !9229

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9230
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !9230
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9230
  unreachable, !dbg !9230

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !9232
  br label %22, !dbg !9233

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9213, metadata !DIExpression()), !dbg !9215
  %23 = icmp eq %struct._snode* %8, null, !dbg !9234
  br i1 %23, label %24, label %6, !dbg !9234

24:                                               ; preds = %22, %3
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9238, metadata !DIExpression()), !dbg !9239
  %2 = and i32 %0, 255, !dbg !9240
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9240
  %4 = load volatile i32, i32* %3, align 4, !dbg !9240
  %5 = lshr i32 %0, 16, !dbg !9240
  %6 = and i32 %4, %5, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %5, metadata !9189, metadata !DIExpression()) #25, !dbg !9241
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9243, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %7, metadata !9192, metadata !DIExpression()) #25, !dbg !9241
  call void @llvm.dbg.value(metadata i32 %7, metadata !9197, metadata !DIExpression()) #25, !dbg !9244
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9246, !range !4243
  %9 = lshr i32 %6, %8, !dbg !9247
  ret i32 %9, !dbg !9248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9254, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i32 %1, metadata !9255, metadata !DIExpression()), !dbg !9256
  %3 = shl i32 %1, 16, !dbg !9257
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9257
  store volatile i32 %3, i32* %4, align 4, !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9263, metadata !DIExpression()), !dbg !9264
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9265
  %3 = load volatile i32, i32* %2, align 4, !dbg !9265
  ret i32 %3, !dbg !9266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9267 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9269, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %1, metadata !9270, metadata !DIExpression()), !dbg !9271
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9272
  store volatile i32 %1, i32* %3, align 4, !dbg !9272
  ret void, !dbg !9273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9276, metadata !DIExpression()), !dbg !9277
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9278
  %3 = load volatile i32, i32* %2, align 4, !dbg !9278
  ret i32 %3, !dbg !9279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9284, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32* %1, metadata !9285, metadata !DIExpression()), !dbg !9286
  %3 = and i32 %0, 131072, !dbg !9287
  %4 = icmp eq i32 %3, 0, !dbg !9289
  br i1 %4, label %22, label %5, !dbg !9290

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9291
  %6 = and i32 %0, 2, !dbg !9293
  %7 = icmp eq i32 %6, 0, !dbg !9295
  br i1 %7, label %11, label %8, !dbg !9296

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9297
  %10 = icmp eq i32 %9, 0, !dbg !9297
  br i1 %10, label %33, label %11, !dbg !9300

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9301
  store i32 %12, i32* %1, align 4, !dbg !9301
  %13 = and i32 %0, 16, !dbg !9302
  %14 = icmp eq i32 %13, 0, !dbg !9304
  br i1 %14, label %17, label %15, !dbg !9305

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9306
  br label %31, !dbg !9308

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9309
  %19 = icmp eq i32 %18, 0, !dbg !9311
  br i1 %19, label %33, label %20, !dbg !9312

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9313
  br label %31, !dbg !9315

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9316
  %24 = icmp eq i32 %23, 0, !dbg !9318
  br i1 %24, label %31, label %25, !dbg !9319

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9320
  %27 = icmp eq i32 %26, 0, !dbg !9323
  br i1 %27, label %28, label %31, !dbg !9324

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9325
  br label %33, !dbg !9326

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9286
  ret i32 %34, !dbg !9326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9331, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %1, metadata !9332, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9333, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %3, metadata !9334, metadata !DIExpression()), !dbg !9342
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9343
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9343
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9343
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9335, metadata !DIExpression()), !dbg !9342
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9344
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9344
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9344
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9336, metadata !DIExpression()), !dbg !9342
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %11, metadata !9337, metadata !DIExpression()), !dbg !9342
  %12 = and i32 %2, 48, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %12, metadata !9338, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9339, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9340, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %2, metadata !9341, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9342
  %13 = lshr i32 %2, 6, !dbg !9347
  %14 = and i32 %13, 1, !dbg !9347
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9348
  %15 = lshr i32 %2, 7, !dbg !9349
  %16 = and i32 %15, 3, !dbg !9349
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9350
  %17 = lshr i32 %2, 9, !dbg !9351
  %18 = and i32 %17, 3, !dbg !9351
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9352
  %19 = icmp eq i32 %12, 32, !dbg !9353
  br i1 %19, label %20, label %24, !dbg !9355

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9356
  br i1 %21, label %22, label %23, !dbg !9359

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9360
  br label %24, !dbg !9362

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9363
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9365
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9366
  ret void, !dbg !9367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9370, metadata !DIExpression()), !dbg !9372
  %2 = shl nuw i32 1, %0, !dbg !9373
  call void @llvm.dbg.value(metadata i32 %2, metadata !9371, metadata !DIExpression()), !dbg !9372
  ret i32 %2, !dbg !9374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9375 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9379, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata i32 %1, metadata !9380, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata i32 %2, metadata !9381, metadata !DIExpression()), !dbg !9382
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9383
  %5 = load volatile i32, i32* %4, align 4, !dbg !9383
  %6 = xor i32 %1, -1, !dbg !9383
  %7 = and i32 %5, %6, !dbg !9383
  %8 = mul i32 %2, %1, !dbg !9383
  %9 = or i32 %7, %8, !dbg !9383
  store volatile i32 %9, i32* %4, align 4, !dbg !9383
  ret void, !dbg !9384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9385 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9387, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %1, metadata !9388, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9390
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9391
  %5 = load volatile i32, i32* %4, align 4, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9392
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9394, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9395
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9397, !range !4243
  %8 = shl nuw nsw i32 %7, 1, !dbg !9391
  %9 = shl i32 3, %8, !dbg !9391
  %10 = xor i32 %9, -1, !dbg !9391
  %11 = and i32 %5, %10, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9400
  %12 = shl i32 %2, %8, !dbg !9391
  %13 = or i32 %11, %12, !dbg !9391
  store volatile i32 %13, i32* %4, align 4, !dbg !9391
  ret void, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9408
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9409
  %5 = load volatile i32, i32* %4, align 4, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9410
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9412, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9413
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9415, !range !4243
  %8 = shl nuw nsw i32 %7, 1, !dbg !9409
  %9 = shl i32 3, %8, !dbg !9409
  %10 = xor i32 %9, -1, !dbg !9409
  %11 = and i32 %5, %10, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9418
  %12 = shl i32 %2, %8, !dbg !9409
  %13 = or i32 %11, %12, !dbg !9409
  store volatile i32 %13, i32* %4, align 4, !dbg !9409
  ret void, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9423, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %1, metadata !9424, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %2, metadata !9425, metadata !DIExpression()), !dbg !9426
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9427
  %5 = load volatile i32, i32* %4, align 4, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9428
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9430, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9431
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9433, !range !4243
  %8 = shl nuw nsw i32 %7, 2, !dbg !9427
  %9 = shl i32 15, %8, !dbg !9427
  %10 = xor i32 %9, -1, !dbg !9427
  %11 = and i32 %5, %10, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9436
  %12 = shl i32 %2, %8, !dbg !9427
  %13 = or i32 %11, %12, !dbg !9427
  store volatile i32 %13, i32* %4, align 4, !dbg !9427
  ret void, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9443, metadata !DIExpression()), !dbg !9444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9445
  %5 = load volatile i32, i32* %4, align 4, !dbg !9445
  %6 = lshr i32 %1, 8, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9189, metadata !DIExpression()) #25, !dbg !9446
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9448, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %7, metadata !9192, metadata !DIExpression()) #25, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %7, metadata !9197, metadata !DIExpression()) #25, !dbg !9449
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9451, !range !4243
  %9 = shl nuw nsw i32 %8, 2, !dbg !9445
  %10 = shl i32 15, %9, !dbg !9445
  %11 = xor i32 %10, -1, !dbg !9445
  %12 = and i32 %5, %11, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9189, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %7, metadata !9192, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %7, metadata !9197, metadata !DIExpression()) #25, !dbg !9454
  %13 = shl i32 %2, %9, !dbg !9445
  %14 = or i32 %12, %13, !dbg !9445
  store volatile i32 %14, i32* %4, align 4, !dbg !9445
  ret void, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %1, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9462
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9463
  %5 = load volatile i32, i32* %4, align 4, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9464
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9466, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9467
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9469, !range !4243
  %8 = shl nuw nsw i32 %7, 1, !dbg !9463
  %9 = shl i32 3, %8, !dbg !9463
  %10 = xor i32 %9, -1, !dbg !9463
  %11 = and i32 %5, %10, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %6, metadata !9192, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %6, metadata !9197, metadata !DIExpression()) #25, !dbg !9472
  %12 = shl i32 %2, %8, !dbg !9463
  %13 = or i32 %11, %12, !dbg !9463
  store volatile i32 %13, i32* %4, align 4, !dbg !9463
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9481
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9481
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9481
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9478, metadata !DIExpression()), !dbg !9480
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9482
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9483
  %6 = tail call fastcc zeroext i1 @device_is_ready.111() #26, !dbg !9484
  br i1 %6, label %7, label %11, !dbg !9486

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %8, metadata !9479, metadata !DIExpression()), !dbg !9480
  %9 = icmp slt i32 %8, 0, !dbg !9488
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9490
  br label %11, !dbg !9490

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9480
  ret i32 %12, !dbg !9491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.111() unnamed_addr #1 !dbg !9492 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9496, metadata !DIExpression()), !dbg !9497
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9498, !srcloc !9500
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.112() #26, !dbg !9501
  ret i1 %1, !dbg !9502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9507, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i8 1, metadata !9508, metadata !DIExpression()), !dbg !9512
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9513
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9513
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9513
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9509, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i32 0, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9511, metadata !DIExpression()), !dbg !9512
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9514
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9517
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9518
  call void @llvm.dbg.value(metadata i32 %7, metadata !9510, metadata !DIExpression()), !dbg !9512
  ret i32 %7, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.112() unnamed_addr #1 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9522, metadata !DIExpression()), !dbg !9523
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9524
  ret i1 %1, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9530, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %1, metadata !9531, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %2, metadata !9532, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %3, metadata !9533, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 0, metadata !9534, metadata !DIExpression()), !dbg !9538
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9539
  %5 = icmp eq i32 %3, 17, !dbg !9540
  br i1 %5, label %6, label %14, !dbg !9541

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9542
  call void @llvm.dbg.value(metadata i32 %7, metadata !9535, metadata !DIExpression()), !dbg !9543
  %8 = icmp eq i32 %7, 0, !dbg !9544
  %9 = shl nuw i32 1, %1, !dbg !9546
  br i1 %8, label %12, label %10, !dbg !9547

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9548
  br label %14, !dbg !9550

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9551
  br label %14, !dbg !9554

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9555
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9558, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.value(metadata i8* %1, metadata !9559, metadata !DIExpression()), !dbg !9562
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9563
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9563
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9563
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9560, metadata !DIExpression()), !dbg !9562
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9564
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9564
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9566
  %9 = icmp eq i32 %8, 0, !dbg !9566
  br i1 %9, label %12, label %10, !dbg !9567

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9568
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9570
  br label %12, !dbg !9571

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9572
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9574
  %15 = icmp eq i32 %14, 0, !dbg !9574
  br i1 %15, label %19, label %16, !dbg !9575

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9576
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9577
  store i8 %18, i8* %1, align 1, !dbg !9578
  br label %19, !dbg !9579

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9562
  ret i32 %20, !dbg !9580
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9581 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9583, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i8 %1, metadata !9584, metadata !DIExpression()), !dbg !9587
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9588
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9588
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9588
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9585, metadata !DIExpression()), !dbg !9587
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9589

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9590
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9593
  %10 = icmp eq i32 %9, 0, !dbg !9593
  br i1 %10, label %18, label %11, !dbg !9594

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9595, !srcloc !9602
  call void @llvm.dbg.value(metadata i32 undef, metadata !9598, metadata !DIExpression()) #25, !dbg !9603
  call void @llvm.dbg.value(metadata i32 undef, metadata !9599, metadata !DIExpression()) #25, !dbg !9603
  call void @llvm.dbg.value(metadata i32 undef, metadata !9586, metadata !DIExpression()), !dbg !9587
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9604
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9606
  %15 = icmp eq i32 %14, 0, !dbg !9606
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9595
  br i1 %15, label %17, label %19, !dbg !9607

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9598, metadata !DIExpression()) #25, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %16, metadata !9586, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 undef, metadata !9608, metadata !DIExpression()) #25, !dbg !9611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9613, !srcloc !9614
  br label %18, !dbg !9615

18:                                               ; preds = %17, %7
  br label %7, !dbg !9590, !llvm.loop !9616

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9595
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9618
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %20, metadata !9608, metadata !DIExpression()) #25, !dbg !9620
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9622, !srcloc !9614
  ret void, !dbg !9623
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9626, metadata !DIExpression()), !dbg !9629
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9630
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9630
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9627, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.value(metadata i32 0, metadata !9628, metadata !DIExpression()), !dbg !9629
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9631
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9631
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9633
  %8 = icmp ne i32 %7, 0, !dbg !9633
  %9 = zext i1 %8 to i32, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %9, metadata !9628, metadata !DIExpression()), !dbg !9629
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9635
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9637
  %12 = icmp eq i32 %11, 0, !dbg !9637
  %13 = or i32 %9, 2, !dbg !9638
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %14, metadata !9628, metadata !DIExpression()), !dbg !9629
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9639
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9641
  %17 = icmp eq i32 %16, 0, !dbg !9641
  %18 = or i32 %14, 4, !dbg !9642
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %19, metadata !9628, metadata !DIExpression()), !dbg !9629
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9643
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9645
  %22 = icmp eq i32 %21, 0, !dbg !9645
  %23 = or i32 %19, 8, !dbg !9646
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9646
  call void @llvm.dbg.value(metadata i32 %24, metadata !9628, metadata !DIExpression()), !dbg !9629
  %25 = and i32 %24, 8, !dbg !9647
  %26 = icmp eq i32 %25, 0, !dbg !9647
  br i1 %26, label %29, label %27, !dbg !9649

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9650
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9652
  br label %29, !dbg !9653

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9654
  %31 = icmp eq i32 %30, 0, !dbg !9654
  br i1 %31, label %34, label %32, !dbg !9656

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9657
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9659
  br label %34, !dbg !9660

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9661
  %36 = icmp eq i32 %35, 0, !dbg !9661
  br i1 %36, label %39, label %37, !dbg !9663

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9664
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9666
  br label %39, !dbg !9667

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9668
  %41 = icmp eq i32 %40, 0, !dbg !9668
  br i1 %41, label %44, label %42, !dbg !9670

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9671
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9673
  br label %44, !dbg !9674

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9675
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9676
  ret i32 %24, !dbg !9677
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9678 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9680, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9681, metadata !DIExpression()), !dbg !9689
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9690
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9690
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9690
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9682, metadata !DIExpression()), !dbg !9689
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9691
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9691
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9691
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9683, metadata !DIExpression()), !dbg !9689
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9692
  %10 = load i8, i8* %9, align 4, !dbg !9692
  %11 = zext i8 %10 to i32, !dbg !9693
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %12, metadata !9685, metadata !DIExpression()), !dbg !9689
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9695
  %14 = load i8, i8* %13, align 1, !dbg !9695
  %15 = zext i8 %14 to i32, !dbg !9696
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %16, metadata !9686, metadata !DIExpression()), !dbg !9689
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9698
  %18 = load i8, i8* %17, align 2, !dbg !9698
  %19 = zext i8 %18 to i32, !dbg !9699
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9700
  call void @llvm.dbg.value(metadata i32 %20, metadata !9687, metadata !DIExpression()), !dbg !9689
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9701
  %22 = load i8, i8* %21, align 1, !dbg !9701
  %23 = zext i8 %22 to i32, !dbg !9702
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %24, metadata !9688, metadata !DIExpression()), !dbg !9689
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9704

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9706
  br i1 %26, label %69, label %27, !dbg !9708

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9709

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9710
  br i1 %29, label %65, label %30, !dbg !9710

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9712
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9689
  br i1 %31, label %38, label %34, !dbg !9714

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9715
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9715

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9718
  br i1 %37, label %38, label %69, !dbg !9719

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9720
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9721
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9722
  %41 = icmp eq i32 %12, %40, !dbg !9724
  br i1 %41, label %43, label %42, !dbg !9725

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9726
  br label %43, !dbg !9728

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9729
  %45 = icmp eq i32 %16, %44, !dbg !9731
  br i1 %45, label %47, label %46, !dbg !9732

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9733
  br label %47, !dbg !9735

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9736
  %49 = icmp eq i32 %20, %48, !dbg !9738
  br i1 %49, label %51, label %50, !dbg !9739

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9740
  br label %51, !dbg !9742

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9743
  %53 = icmp eq i32 %24, %52, !dbg !9745
  br i1 %53, label %55, label %54, !dbg !9746

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9747
  br label %55, !dbg !9749

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9750
  %57 = load i32, i32* %56, align 4, !dbg !9750
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9752
  %59 = load i32, i32* %58, align 4, !dbg !9752
  %60 = icmp eq i32 %57, %59, !dbg !9753
  br i1 %60, label %63, label %61, !dbg !9754

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9755
  %62 = load i32, i32* %56, align 4, !dbg !9757
  store i32 %62, i32* %58, align 4, !dbg !9758
  br label %63, !dbg !9759

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9760
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9761
  br label %69, !dbg !9762

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9710
  %67 = and i8 %66, 1, !dbg !9710
  %68 = icmp eq i8 %67, 0, !dbg !9710
  br i1 %68, label %30, label %69, !dbg !9710

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9689
  ret i32 %70, !dbg !9763
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9764 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9766, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9767, metadata !DIExpression()), !dbg !9769
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9770
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9770
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9768, metadata !DIExpression()), !dbg !9769
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9771
  %7 = load i32, i32* %6, align 4, !dbg !9771
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9772
  store i32 %7, i32* %8, align 4, !dbg !9773
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9774, !range !9775
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9776
  %11 = trunc i32 %10 to i8, !dbg !9776
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9777
  store i8 %11, i8* %12, align 4, !dbg !9778
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9779, !range !9780
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9781
  %15 = trunc i32 %14 to i8, !dbg !9781
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9782
  store i8 %15, i8* %16, align 1, !dbg !9783
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9784
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9785, !range !9775
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9786
  %20 = trunc i32 %19 to i8, !dbg !9786
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9787
  store i8 %20, i8* %21, align 2, !dbg !9788
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9789, !range !9790
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9791
  %24 = trunc i32 %23 to i8, !dbg !9791
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9792
  store i8 %24, i8* %25, align 1, !dbg !9793
  ret i32 0, !dbg !9794
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9799, metadata !DIExpression()), !dbg !9801
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9802
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9802
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9802
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9800, metadata !DIExpression()), !dbg !9801
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9803
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9803
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9804
  ret i32 %7, !dbg !9805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9810, metadata !DIExpression()), !dbg !9811
  %2 = icmp eq i32 %0, 1024, !dbg !9812
  %3 = select i1 %2, i32 2, i32 0, !dbg !9812
  %4 = icmp eq i32 %0, 1536, !dbg !9812
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9812
  ret i32 %5, !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9816, metadata !DIExpression()), !dbg !9818
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9819
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9819
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9817, metadata !DIExpression()), !dbg !9818
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9820
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9820
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9821
  ret i32 %7, !dbg !9822
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !9823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9827, metadata !DIExpression()), !dbg !9828
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9829
  %3 = icmp ult i32 %2, 4, !dbg !9829
  br i1 %3, label %4, label %7, !dbg !9829

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9829
  %6 = load i32, i32* %5, align 4, !dbg !9829
  br label %7, !dbg !9829

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9830
  ret i32 %8, !dbg !9832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9833 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9835, metadata !DIExpression()), !dbg !9837
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9838
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9838
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9838
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9836, metadata !DIExpression()), !dbg !9837
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9839
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9839
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9840
  ret i32 %7, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9846, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %1, metadata !9847, metadata !DIExpression()), !dbg !9848
  %3 = icmp eq i32 %0, 4096, !dbg !9849
  %4 = icmp eq i32 %1, 0, !dbg !9849
  %5 = select i1 %4, i32 4, i32 3, !dbg !9849
  %6 = select i1 %4, i32 3, i32 2, !dbg !9849
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9849
  ret i32 %7, !dbg !9850
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9853, metadata !DIExpression()), !dbg !9855
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9856
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9856
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9854, metadata !DIExpression()), !dbg !9855
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9857
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9857
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9858
  ret i32 %7, !dbg !9859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9864, metadata !DIExpression()), !dbg !9865
  %2 = icmp eq i32 %0, 768, !dbg !9866
  %3 = zext i1 %2 to i32, !dbg !9865
  ret i32 %3, !dbg !9868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9874, metadata !DIExpression()), !dbg !9875
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9876
  %3 = load volatile i32, i32* %2, align 4, !dbg !9876
  %4 = and i32 %3, 768, !dbg !9876
  ret i32 %4, !dbg !9877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9878 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9880, metadata !DIExpression()), !dbg !9881
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9882
  %3 = load volatile i32, i32* %2, align 4, !dbg !9882
  %4 = and i32 %3, 4096, !dbg !9882
  ret i32 %4, !dbg !9883
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9884 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9886, metadata !DIExpression()), !dbg !9887
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9888
  %3 = load volatile i32, i32* %2, align 4, !dbg !9888
  %4 = and i32 %3, 12288, !dbg !9888
  ret i32 %4, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9892, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9894
  %3 = load volatile i32, i32* %2, align 4, !dbg !9894
  %4 = and i32 %3, 1536, !dbg !9894
  ret i32 %4, !dbg !9895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9900, metadata !DIExpression()), !dbg !9901
  %2 = icmp eq i32 %0, 2, !dbg !9902
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9902
  %4 = icmp eq i32 %0, 1, !dbg !9902
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9902
  ret i32 %5, !dbg !9903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9908, metadata !DIExpression()), !dbg !9909
  %2 = icmp ult i32 %0, 3, !dbg !9910
  br i1 %2, label %3, label %6, !dbg !9910

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9910
  %5 = load i32, i32* %4, align 4, !dbg !9910
  br label %6, !dbg !9910

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9911
  ret i32 %7, !dbg !9913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %1, metadata !9919, metadata !DIExpression()), !dbg !9920
  %3 = icmp eq i32 %0, 4, !dbg !9921
  %4 = icmp eq i32 %1, 0, !dbg !9921
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9921
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9921
  ret i32 %6, !dbg !9922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9927, metadata !DIExpression()), !dbg !9928
  %2 = icmp eq i32 %0, 1, !dbg !9929
  %3 = select i1 %2, i32 768, i32 0, !dbg !9928
  ret i32 %3, !dbg !9931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9938
  %3 = load volatile i32, i32* %2, align 4, !dbg !9938
  %4 = and i32 %3, -8193, !dbg !9938
  store volatile i32 %4, i32* %2, align 4, !dbg !9938
  ret void, !dbg !9939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9944, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata i32 %1, metadata !9945, metadata !DIExpression()), !dbg !9947
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9948
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9948
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9948
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9946, metadata !DIExpression()), !dbg !9947
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9949
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9949
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9950
  ret void, !dbg !9951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9952 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9954, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 %1, metadata !9955, metadata !DIExpression()), !dbg !9957
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9958
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9958
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9958
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9956, metadata !DIExpression()), !dbg !9957
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9959
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9959
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9964, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.value(metadata i32 %1, metadata !9965, metadata !DIExpression()), !dbg !9967
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9968
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9968
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9968
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9966, metadata !DIExpression()), !dbg !9967
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9969
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9969
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9970
  ret void, !dbg !9971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9972 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9974, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 %1, metadata !9975, metadata !DIExpression()), !dbg !9977
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9978
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9978
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9978
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9976, metadata !DIExpression()), !dbg !9977
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9979
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9979
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9982 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9984, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 %1, metadata !9985, metadata !DIExpression()), !dbg !9989
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9990
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9990
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9986, metadata !DIExpression()), !dbg !9989
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9991
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9991
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9991
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9987, metadata !DIExpression()), !dbg !9989
  %10 = bitcast i32* %3 to i8*, !dbg !9992
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9992
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9993
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9993
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9997
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9997
  %15 = load i8*, i8** %14, align 4, !dbg !9997
  call void @llvm.dbg.value(metadata i32* %3, metadata !9988, metadata !DIExpression(DW_OP_deref)), !dbg !9989
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9998
  %17 = icmp slt i32 %16, 0, !dbg !9999
  br i1 %17, label %28, label %18, !dbg !10000

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10001
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10001
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !10002
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10003
  %22 = load i32, i32* %3, align 4, !dbg !10004
  call void @llvm.dbg.value(metadata i32 %22, metadata !9988, metadata !DIExpression()), !dbg !9989
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !10005
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10006
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !10006
  %25 = load volatile i32, i32* %24, align 4, !dbg !10006
  %26 = icmp ugt i32 %25, 16, !dbg !10006
  br i1 %26, label %28, label %27, !dbg !10009

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.116, i32 0, i32 0), i32 noundef 190) #27, !dbg !10010
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.117, i32 0, i32 0)) #27, !dbg !10010
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.116, i32 0, i32 0), i32 noundef 190) #27, !dbg !10010
  unreachable, !dbg !10010

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10012
  ret void, !dbg !10012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10017
  %3 = load volatile i32, i32* %2, align 4, !dbg !10017
  %4 = or i32 %3, 8192, !dbg !10017
  store volatile i32 %4, i32* %2, align 4, !dbg !10017
  ret void, !dbg !10018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10021, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.value(metadata i8* %1, metadata !10022, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.value(metadata i32* %2, metadata !10023, metadata !DIExpression()), !dbg !10025
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10026
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10026
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10026
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10024, metadata !DIExpression()), !dbg !10025
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10027
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10027
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10029
  br i1 %9, label %12, label %10, !dbg !10030

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10031
  br label %12, !dbg !10032

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10025
  ret i32 %13, !dbg !10033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10038, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32 0, metadata !10039, metadata !DIExpression()), !dbg !10040
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10041
  %3 = load volatile i32, i32* %2, align 4, !dbg !10041
  %4 = and i32 %3, -32769, !dbg !10041
  store volatile i32 %4, i32* %2, align 4, !dbg !10041
  ret void, !dbg !10042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10043 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10047, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %1, metadata !10048, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 0, metadata !10049, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.value(metadata i32 %2, metadata !10050, metadata !DIExpression()), !dbg !10051
  %4 = zext i32 %1 to i64, !dbg !10052
  %5 = mul nuw nsw i64 %4, 25, !dbg !10052
  %6 = zext i32 %2 to i64, !dbg !10052
  %7 = shl nuw nsw i64 %6, 2, !dbg !10052
  %8 = udiv i64 %5, %7, !dbg !10052
  %9 = trunc i64 %8 to i32, !dbg !10052
  %10 = udiv i32 %9, 100, !dbg !10052
  %11 = shl nuw nsw i32 %10, 4, !dbg !10052
  %12 = mul i32 %10, -100, !dbg !10052
  %13 = add i32 %12, %9, !dbg !10052
  %14 = shl i32 %13, 4, !dbg !10052
  %15 = add i32 %14, 50, !dbg !10052
  %16 = udiv i32 %15, 100, !dbg !10052
  %17 = and i32 %16, 240, !dbg !10052
  %18 = add nuw nsw i32 %17, %11, !dbg !10052
  %19 = and i32 %16, 15, !dbg !10052
  %20 = and i32 %18, 65520, !dbg !10055
  %21 = or i32 %20, %19, !dbg !10055
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10056
  store volatile i32 %21, i32* %22, align 4, !dbg !10057
  ret void, !dbg !10058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10061, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %1, metadata !10062, metadata !DIExpression()), !dbg !10063
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10064
  %4 = load volatile i32, i32* %3, align 4, !dbg !10064
  %5 = and i32 %4, -769, !dbg !10064
  %6 = or i32 %5, %1, !dbg !10064
  store volatile i32 %6, i32* %3, align 4, !dbg !10064
  ret void, !dbg !10065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10066 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %1, metadata !10069, metadata !DIExpression()), !dbg !10070
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10071
  %4 = load volatile i32, i32* %3, align 4, !dbg !10071
  %5 = and i32 %4, -4097, !dbg !10071
  %6 = or i32 %5, %1, !dbg !10071
  store volatile i32 %6, i32* %3, align 4, !dbg !10071
  ret void, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10073 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10075, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.value(metadata i32 %1, metadata !10076, metadata !DIExpression()), !dbg !10077
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10078
  %4 = load volatile i32, i32* %3, align 4, !dbg !10078
  %5 = and i32 %4, -12289, !dbg !10078
  %6 = or i32 %5, %1, !dbg !10078
  store volatile i32 %6, i32* %3, align 4, !dbg !10078
  ret void, !dbg !10079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10082, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata i32 %1, metadata !10083, metadata !DIExpression()), !dbg !10084
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10085
  %4 = load volatile i32, i32* %3, align 4, !dbg !10085
  %5 = and i32 %4, -1537, !dbg !10085
  %6 = or i32 %5, %1, !dbg !10085
  store volatile i32 %6, i32* %3, align 4, !dbg !10085
  ret void, !dbg !10086
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10087 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10089, metadata !DIExpression()), !dbg !10090
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10091
  %3 = load volatile i32, i32* %2, align 4, !dbg !10091
  %4 = lshr i32 %3, 3, !dbg !10092
  %5 = and i32 %4, 1, !dbg !10092
  ret i32 %5, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10094 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10096, metadata !DIExpression()), !dbg !10097
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10098
  %3 = load volatile i32, i32* %2, align 4, !dbg !10098
  %4 = and i32 %3, 1, !dbg !10098
  ret i32 %4, !dbg !10099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10102, metadata !DIExpression()), !dbg !10103
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10104
  %3 = load volatile i32, i32* %2, align 4, !dbg !10104
  %4 = lshr i32 %3, 1, !dbg !10105
  %5 = and i32 %4, 1, !dbg !10105
  ret i32 %5, !dbg !10106
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10107 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10109, metadata !DIExpression()), !dbg !10110
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10111
  %3 = load volatile i32, i32* %2, align 4, !dbg !10111
  %4 = lshr i32 %3, 8, !dbg !10112
  %5 = and i32 %4, 1, !dbg !10112
  ret i32 %5, !dbg !10113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10114 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10116, metadata !DIExpression()), !dbg !10117
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10118
  store volatile i32 -257, i32* %2, align 4, !dbg !10118
  ret void, !dbg !10119
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10120 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10122, metadata !DIExpression()), !dbg !10124
  %3 = bitcast i32* %2 to i8*, !dbg !10125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10125
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10123, metadata !DIExpression()), !dbg !10126
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10127
  %5 = load volatile i32, i32* %4, align 4, !dbg !10127
  store volatile i32 %5, i32* %2, align 4, !dbg !10128
  %6 = load volatile i32, i32* %2, align 4, !dbg !10129
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10130
  %8 = load volatile i32, i32* %7, align 4, !dbg !10130
  store volatile i32 %8, i32* %2, align 4, !dbg !10131
  %9 = load volatile i32, i32* %2, align 4, !dbg !10132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10133
  ret void, !dbg !10133
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10134 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10136, metadata !DIExpression()), !dbg !10138
  %3 = bitcast i32* %2 to i8*, !dbg !10139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10139
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10137, metadata !DIExpression()), !dbg !10140
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10141
  %5 = load volatile i32, i32* %4, align 4, !dbg !10141
  store volatile i32 %5, i32* %2, align 4, !dbg !10142
  %6 = load volatile i32, i32* %2, align 4, !dbg !10143
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10144
  %8 = load volatile i32, i32* %7, align 4, !dbg !10144
  store volatile i32 %8, i32* %2, align 4, !dbg !10145
  %9 = load volatile i32, i32* %2, align 4, !dbg !10146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10147
  ret void, !dbg !10147
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10148 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10150, metadata !DIExpression()), !dbg !10152
  %3 = bitcast i32* %2 to i8*, !dbg !10153
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10153
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10151, metadata !DIExpression()), !dbg !10154
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10155
  %5 = load volatile i32, i32* %4, align 4, !dbg !10155
  store volatile i32 %5, i32* %2, align 4, !dbg !10156
  %6 = load volatile i32, i32* %2, align 4, !dbg !10157
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10158
  %8 = load volatile i32, i32* %7, align 4, !dbg !10158
  store volatile i32 %8, i32* %2, align 4, !dbg !10159
  %9 = load volatile i32, i32* %2, align 4, !dbg !10160
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10161
  ret void, !dbg !10161
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10162 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10164, metadata !DIExpression()), !dbg !10166
  %3 = bitcast i32* %2 to i8*, !dbg !10167
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10167
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10165, metadata !DIExpression()), !dbg !10168
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10169
  %5 = load volatile i32, i32* %4, align 4, !dbg !10169
  store volatile i32 %5, i32* %2, align 4, !dbg !10170
  %6 = load volatile i32, i32* %2, align 4, !dbg !10171
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10172
  %8 = load volatile i32, i32* %7, align 4, !dbg !10172
  store volatile i32 %8, i32* %2, align 4, !dbg !10173
  %9 = load volatile i32, i32* %2, align 4, !dbg !10174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10175
  ret void, !dbg !10175
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10178, metadata !DIExpression()), !dbg !10179
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10180
  %3 = load volatile i32, i32* %2, align 4, !dbg !10180
  %4 = lshr i32 %3, 7, !dbg !10181
  %5 = and i32 %4, 1, !dbg !10181
  ret i32 %5, !dbg !10182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10183 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10187, metadata !DIExpression()), !dbg !10189
  call void @llvm.dbg.value(metadata i8 %1, metadata !10188, metadata !DIExpression()), !dbg !10189
  %3 = zext i8 %1 to i32, !dbg !10190
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10191
  store volatile i32 %3, i32* %4, align 4, !dbg !10192
  ret void, !dbg !10193
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10194 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10196, metadata !DIExpression()), !dbg !10197
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10198
  %3 = load volatile i32, i32* %2, align 4, !dbg !10198
  %4 = lshr i32 %3, 5, !dbg !10199
  %5 = and i32 %4, 1, !dbg !10199
  ret i32 %5, !dbg !10200
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10201 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10207
  %3 = load volatile i32, i32* %2, align 4, !dbg !10207
  %4 = trunc i32 %3 to i8, !dbg !10208
  ret i8 %4, !dbg !10209
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10212, metadata !DIExpression()), !dbg !10218
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10219
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10219
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10213, metadata !DIExpression()), !dbg !10218
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10220
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10220
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10220
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10214, metadata !DIExpression()), !dbg !10218
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10221
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10222
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10222
  %10 = tail call fastcc zeroext i1 @device_is_ready.124(%struct.device* noundef %9) #26, !dbg !10224
  br i1 %10, label %11, label %49, !dbg !10225

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10226
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10227
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10227
  %15 = load i8*, i8** %14, align 4, !dbg !10227
  %16 = tail call fastcc i32 @clock_control_on.125(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %16, metadata !10217, metadata !DIExpression()), !dbg !10218
  %17 = icmp eq i32 %16, 0, !dbg !10229
  br i1 %17, label %18, label %49, !dbg !10231

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10232
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10232
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10233
  call void @llvm.dbg.value(metadata i32 %21, metadata !10217, metadata !DIExpression()), !dbg !10218
  %22 = icmp slt i32 %21, 0, !dbg !10234
  br i1 %22, label %49, label %23, !dbg !10236

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10237
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10237
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10238
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10239
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10240
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10241
  %28 = load i32, i32* %27, align 4, !dbg !10241
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10243

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 4096, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31, !dbg !10244

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10247
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10247
  call void @llvm.dbg.value(metadata i32 %33, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 %32, metadata !10215, metadata !DIExpression()), !dbg !10218
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10248
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10249
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10250
  %36 = load i8, i8* %35, align 4, !dbg !10250, !range !6769
  %37 = icmp eq i8 %36, 0, !dbg !10250
  br i1 %37, label %39, label %38, !dbg !10252

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10253
  br label %39, !dbg !10255

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10256
  %41 = load i32, i32* %40, align 4, !dbg !10256
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10257
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10258
  %43 = load i8, i8* %42, align 4, !dbg !10258, !range !6769
  %44 = icmp eq i8 %43, 0, !dbg !10258
  br i1 %44, label %47, label %45, !dbg !10260

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10261
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10263
  br label %47, !dbg !10264

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10265
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10266
  br label %49, !dbg !10267

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10218
  ret i32 %50, !dbg !10268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10277
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10278
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10278
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10274, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10275, metadata !DIExpression()), !dbg !10277
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10279
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.124(%struct.device* noundef %0) unnamed_addr #1 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10286, metadata !DIExpression()), !dbg !10287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10288, !srcloc !10290
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) #26, !dbg !10291
  ret i1 %2, !dbg !10292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.125(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i8* %1, metadata !10296, metadata !DIExpression()), !dbg !10298
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10299
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10299
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10299
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10297, metadata !DIExpression()), !dbg !10298
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10300
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10300
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10301
  ret i32 %8, !dbg !10302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10303 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10307, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i8 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10310, metadata !DIExpression(DW_OP_deref)), !dbg !10311
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %4, metadata !10309, metadata !DIExpression()), !dbg !10311
  %5 = icmp slt i32 %4, 0, !dbg !10314
  br i1 %5, label %9, label %6, !dbg !10316

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10317
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10310, metadata !DIExpression()), !dbg !10311
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10318
  br label %9, !dbg !10319

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10320
  ret i32 %10, !dbg !10320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.value(metadata i32 12, metadata !10324, metadata !DIExpression()), !dbg !10327
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10328

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10329, metadata !DIExpression()) #25, !dbg !10335
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10338, !srcloc !10339
  call void @llvm.dbg.value(metadata i32 %4, metadata !10334, metadata !DIExpression()) #25, !dbg !10335
  %5 = or i32 %4, 12, !dbg !10340
  call void @llvm.dbg.value(metadata i32 %5, metadata !10325, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %5, metadata !10342, metadata !DIExpression()) #25, !dbg !10349
  call void @llvm.dbg.value(metadata i32* %2, metadata !10347, metadata !DIExpression()) #25, !dbg !10349
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10351, !srcloc !10352
  call void @llvm.dbg.value(metadata i32 %6, metadata !10348, metadata !DIExpression()) #25, !dbg !10349
  %7 = icmp eq i32 %6, 0, !dbg !10328
  br i1 %7, label %8, label %3, !dbg !10340, !llvm.loop !10353

8:                                                ; preds = %3
  ret void, !dbg !10354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10355 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10357, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %1, metadata !10358, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10359, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 0, metadata !10360, metadata !DIExpression()), !dbg !10361
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10362
  %5 = load volatile i32, i32* %4, align 4, !dbg !10362
  %6 = and i32 %5, -5633, !dbg !10362
  %7 = or i32 %2, %1, !dbg !10362
  %8 = or i32 %7, %6, !dbg !10362
  store volatile i32 %8, i32* %4, align 4, !dbg !10362
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10363
  %10 = load volatile i32, i32* %9, align 4, !dbg !10363
  %11 = and i32 %10, -12289, !dbg !10363
  store volatile i32 %11, i32* %9, align 4, !dbg !10363
  ret void, !dbg !10364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10365 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10367, metadata !DIExpression()), !dbg !10368
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10369
  %3 = load volatile i32, i32* %2, align 4, !dbg !10369
  %4 = or i32 %3, 8, !dbg !10369
  store volatile i32 %4, i32* %2, align 4, !dbg !10369
  ret void, !dbg !10370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10375, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10376, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.value(metadata i32 0, metadata !10377, metadata !DIExpression()), !dbg !10378
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10379
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10379
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10380
  %5 = load i8, i8* %4, align 4, !dbg !10380
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10381
  ret i32 %6, !dbg !10382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) unnamed_addr #1 !dbg !10383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10385, metadata !DIExpression()), !dbg !10386
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10387
  ret i1 %2, !dbg !10388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  tail call fastcc void @__NVIC_SetPriority.128() #26, !dbg !10393
  store i32 8399, i32* @last_load, align 4, !dbg !10394
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10395
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10396
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10397
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10398
  %3 = or i32 %2, 7, !dbg !10398
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10398
  ret i32 0, !dbg !10399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.128() unnamed_addr #15 !dbg !10400 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 1, metadata !10403, metadata !DIExpression()), !dbg !10404
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10405
  ret void, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10409 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10411, metadata !DIExpression()), !dbg !10413
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10414
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10415
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10416
  %5 = add i32 %4, %3, !dbg !10416
  store i32 %5, i32* @cycle_count, align 4, !dbg !10416
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10417
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10418
  %7 = sub i32 %5, %6, !dbg !10421
  %8 = udiv i32 %7, 8400, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %8, metadata !10412, metadata !DIExpression()), !dbg !10413
  %9 = mul nuw i32 %8, 8400, !dbg !10423
  %10 = add i32 %9, %6, !dbg !10424
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10424
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10425
  tail call void @z_arm_int_exit() #27, !dbg !10426
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10428 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %1, metadata !10430, metadata !DIExpression()), !dbg !10434
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %2, metadata !10431, metadata !DIExpression()), !dbg !10434
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %3, metadata !10432, metadata !DIExpression()), !dbg !10434
  %4 = and i32 %2, 65536, !dbg !10437
  %5 = icmp ne i32 %4, 0, !dbg !10437
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10439
  %8 = load i32, i32* @last_load, align 4, !dbg !10434
  br i1 %7, label %9, label %13, !dbg !10439

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10440
  %11 = add i32 %10, %8, !dbg !10440
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10440
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10442
  br label %13, !dbg !10443

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10444
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10445
  %16 = add i32 %14, %15, !dbg !10446
  ret i32 %16, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10452, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i1 %1, metadata !10453, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10465
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10466
  br i1 %4, label %5, label %8, !dbg !10466

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10468
  %7 = and i32 %6, -2, !dbg !10468
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10468
  store i32 -16777216, i32* @last_load, align 4, !dbg !10470
  br label %60, !dbg !10471

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %9, metadata !10457, metadata !DIExpression()), !dbg !10465
  br i1 %3, label %18, label %10, !dbg !10473

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10473
  call void @llvm.dbg.value(metadata i32 undef, metadata !10452, metadata !DIExpression()), !dbg !10465
  %12 = icmp slt i32 %11, 1, !dbg !10474
  br i1 %12, label %18, label %13, !dbg !10474

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10474
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10474
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10474
  %17 = add nuw nsw i32 %16, 8399, !dbg !10474
  br label %18, !dbg !10474

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10452, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10475, metadata !DIExpression()) #25, !dbg !10482
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10484, !srcloc !10490
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10488, metadata !DIExpression()) #25, !dbg !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10482
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10492
  br i1 %21, label %23, label %22, !dbg !10495

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.132, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10496
  unreachable, !dbg !10496

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %24, metadata !10487, metadata !DIExpression()) #25, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %24, metadata !10481, metadata !DIExpression()) #25, !dbg !10482
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %24, metadata !10458, metadata !DIExpression()), !dbg !10465
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %25, metadata !10463, metadata !DIExpression()), !dbg !10465
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %26, metadata !10455, metadata !DIExpression()), !dbg !10465
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10501
  %28 = add i32 %27, %25, !dbg !10501
  store i32 %28, i32* @cycle_count, align 4, !dbg !10501
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10502
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10503
  %30 = sub i32 %28, %29, !dbg !10504
  call void @llvm.dbg.value(metadata i32 %30, metadata !10464, metadata !DIExpression()), !dbg !10465
  %31 = icmp slt i32 %30, 0, !dbg !10505
  br i1 %31, label %41, label %32, !dbg !10507

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10454, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata i32 undef, metadata !10454, metadata !DIExpression()), !dbg !10465
  %33 = add nuw i32 %19, %30, !dbg !10508
  %34 = urem i32 %33, 8400, !dbg !10510
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10454, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10465
  %35 = sub nuw nsw i32 %19, %34, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %35, metadata !10454, metadata !DIExpression()), !dbg !10465
  %36 = icmp ugt i32 %35, 1024, !dbg !10512
  br i1 %36, label %37, label %39, !dbg !10512

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10454, metadata !DIExpression()), !dbg !10465
  %38 = icmp ugt i32 %35, 16766400, !dbg !10513
  br i1 %38, label %41, label %39, !dbg !10515

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10516
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %43, metadata !10456, metadata !DIExpression()), !dbg !10465
  %44 = add nsw i32 %42, -1, !dbg !10518
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10519
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10520
  %45 = icmp ult i32 %26, %43, !dbg !10521
  br i1 %45, label %46, label %51, !dbg !10523

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10524
  %48 = add i32 %26, %9, !dbg !10526
  %49 = sub i32 %48, %43, !dbg !10527
  %50 = add i32 %49, %47, !dbg !10524
  br label %55, !dbg !10528

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10529
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10531
  %54 = add i32 %52, %53, !dbg !10531
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10532
  store i32 %56, i32* @cycle_count, align 4, !dbg !10532
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #25, !dbg !10539
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10538, metadata !DIExpression()) #25, !dbg !10539
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10541
  br i1 %57, label %59, label %58, !dbg !10544

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.134, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10545
  unreachable, !dbg !10545

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10533, metadata !DIExpression()) #25, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %24, metadata !10547, metadata !DIExpression()) #25, !dbg !10550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !10552, !srcloc !10553
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10554
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10475, metadata !DIExpression()) #25, !dbg !10559
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10561, !srcloc !10490
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10563
  call void @llvm.dbg.value(metadata i32 undef, metadata !10488, metadata !DIExpression()) #25, !dbg !10563
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10559
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10564
  br i1 %2, label %4, label %3, !dbg !10565

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.132, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10566
  unreachable, !dbg !10566

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10563
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10559
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10567
  call void @llvm.dbg.value(metadata i32 undef, metadata !10557, metadata !DIExpression()), !dbg !10568
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10569
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10570
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10571
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10568
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #25, !dbg !10572
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10538, metadata !DIExpression()) #25, !dbg !10572
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10574
  br i1 %8, label %10, label %9, !dbg !10575

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.134, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10576
  unreachable, !dbg !10576

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10577
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10558, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10568
  %12 = sub i32 %11, %7, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %12, metadata !10558, metadata !DIExpression()), !dbg !10568
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %13, metadata !10487, metadata !DIExpression()) #25, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %13, metadata !10481, metadata !DIExpression()) #25, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %13, metadata !10557, metadata !DIExpression()), !dbg !10568
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #25, !dbg !10572
  call void @llvm.dbg.value(metadata i32 undef, metadata !10547, metadata !DIExpression()) #25, !dbg !10579
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !10581, !srcloc !10553
  %14 = udiv i32 %12, 8400, !dbg !10582
  ret i32 %14, !dbg !10583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10584 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10475, metadata !DIExpression()) #25, !dbg !10588
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10590, !srcloc !10490
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10592
  call void @llvm.dbg.value(metadata i32 undef, metadata !10488, metadata !DIExpression()) #25, !dbg !10592
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10588
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10593
  br i1 %2, label %4, label %3, !dbg !10594

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.132, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 148) #27, !dbg !10595
  unreachable, !dbg !10595

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10487, metadata !DIExpression()) #25, !dbg !10592
  call void @llvm.dbg.value(metadata i32 undef, metadata !10481, metadata !DIExpression()) #25, !dbg !10588
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10596
  call void @llvm.dbg.value(metadata i32 undef, metadata !10586, metadata !DIExpression()), !dbg !10597
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10598
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10587, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10597
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #25, !dbg !10600
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10538, metadata !DIExpression()) #25, !dbg !10600
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10602
  br i1 %7, label %9, label %8, !dbg !10603

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.134, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.131, i32 0, i32 0), i32 noundef 194) #27, !dbg !10604
  unreachable, !dbg !10604

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10605
  call void @llvm.dbg.value(metadata i32 %10, metadata !10587, metadata !DIExpression()), !dbg !10597
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %11, metadata !10487, metadata !DIExpression()) #25, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %11, metadata !10481, metadata !DIExpression()) #25, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %11, metadata !10586, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 undef, metadata !10533, metadata !DIExpression()) #25, !dbg !10600
  call void @llvm.dbg.value(metadata i32 undef, metadata !10547, metadata !DIExpression()) #25, !dbg !10606
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !10608, !srcloc !10553
  ret i32 %10, !dbg !10609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10610 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10611
  %2 = icmp eq i32 %1, -16777216, !dbg !10613
  br i1 %2, label %3, label %6, !dbg !10614

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10615
  %5 = or i32 %4, 1, !dbg !10615
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10615
  br label %6, !dbg !10617

6:                                                ; preds = %3, %0
  ret void, !dbg !10618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10619 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10620
  %2 = and i32 %1, -2, !dbg !10620
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10620
  ret void, !dbg !10621
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10622 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10648, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i8 %1, metadata !10649, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10650, metadata !DIExpression()), !dbg !10651
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10652
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10652
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10651
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10653
  %8 = load i8, i8* %6, align 4, !dbg !10654
  %9 = zext i8 %8 to i32, !dbg !10655
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10655
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10656
  br i1 %11, label %18, label %24, !dbg !10657

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10651
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10653
  %14 = load i8, i8* %6, align 4, !dbg !10654
  %15 = zext i8 %14 to i32, !dbg !10655
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10655
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10656
  br i1 %17, label %18, label %24, !dbg !10657, !llvm.loop !10658

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10660
  %21 = load i8, i8* %20, align 1, !dbg !10660
  %22 = icmp eq i8 %21, %1, !dbg !10663
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10664
  br i1 %22, label %24, label %12, !dbg !10665

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10651
  ret i32 %25, !dbg !10666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10667 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10678, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i8 %1, metadata !10679, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 %2, metadata !10680, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 0, metadata !10683, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 0, metadata !10684, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i8 0, metadata !10685, metadata !DIExpression()), !dbg !10695
  %4 = icmp eq i8 %1, 0, !dbg !10696
  br i1 %4, label %35, label %5, !dbg !10697

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10696
  br label %9, !dbg !10697

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10685, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %29, metadata !10683, metadata !DIExpression()), !dbg !10694
  %8 = icmp eq i32 %34, %6, !dbg !10696
  br i1 %8, label %35, label %9, !dbg !10697, !llvm.loop !10698

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10685, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %11, metadata !10683, metadata !DIExpression()), !dbg !10694
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10700
  %13 = load i32, i32* %12, align 4, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %13, metadata !10682, metadata !DIExpression()), !dbg !10694
  %14 = and i32 %13, 31, !dbg !10701
  %15 = icmp ult i32 %14, 16, !dbg !10702
  br i1 %15, label %16, label %20, !dbg !10703

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10704
  %18 = load i32, i32* %17, align 4, !dbg !10704
  %19 = or i32 %18, 32, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %19, metadata !10683, metadata !DIExpression()), !dbg !10694
  br label %28, !dbg !10707

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10708

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10709
  %23 = load i32, i32* %22, align 4, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %23, metadata !10687, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10710
  %24 = lshr i32 %23, 7, !dbg !10711
  %25 = and i32 %24, 16, !dbg !10711
  %26 = or i32 %25, %23, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %26, metadata !10683, metadata !DIExpression()), !dbg !10694
  br label %28, !dbg !10712

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10694
  call void @llvm.dbg.value(metadata i32 %29, metadata !10683, metadata !DIExpression()), !dbg !10694
  %30 = lshr i32 %13, 5, !dbg !10713
  %31 = and i32 %30, 255, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %31, metadata !10681, metadata !DIExpression()), !dbg !10694
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %32, metadata !10684, metadata !DIExpression()), !dbg !10694
  %33 = icmp slt i32 %32, 0, !dbg !10715
  %34 = add nuw nsw i32 %10, 1, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %34, metadata !10685, metadata !DIExpression()), !dbg !10695
  br i1 %33, label %35, label %7, !dbg !10718

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10724, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %1, metadata !10725, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %2, metadata !10726, metadata !DIExpression()), !dbg !10728
  %4 = icmp ugt i32 %0, 175, !dbg !10729
  br i1 %4, label %16, label %5, !dbg !10731

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10732
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10733
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10733
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10727, metadata !DIExpression()), !dbg !10728
  %9 = add nsw i32 %6, -8, !dbg !10734
  %10 = icmp ult i32 %9, 3, !dbg !10734
  br i1 %10, label %16, label %11, !dbg !10736

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %8) #26, !dbg !10737
  br i1 %12, label %13, label %16, !dbg !10738

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10739
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10740
  br label %16, !dbg !10741

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10728
  ret i32 %17, !dbg !10742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.139(%struct.device* noundef %0) unnamed_addr #1 !dbg !10743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10747, metadata !DIExpression()), !dbg !10748
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10749, !srcloc !10751
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #26, !dbg !10752
  ret i1 %2, !dbg !10753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10756, metadata !DIExpression()), !dbg !10757
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10758
  ret i1 %2, !dbg !10759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10760 {
  ret void, !dbg !10761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10762 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10764, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 0, metadata !10765, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 2, metadata !10766, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 0, metadata !10767, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 2, metadata !10768, metadata !DIExpression()), !dbg !10769
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10770
  %2 = and i32 %1, 12, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %2, metadata !10764, metadata !DIExpression()), !dbg !10769
  %3 = icmp eq i32 %2, 8, !dbg !10772
  br i1 %3, label %4, label %18, !dbg !10772

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %5, metadata !10767, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10769
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10775
  %7 = and i32 %6, 63, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %7, metadata !10768, metadata !DIExpression()), !dbg !10769
  %8 = udiv i32 16000000, %7, !dbg !10777
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10777
  %10 = lshr i32 %9, 6, !dbg !10777
  %11 = and i32 %10, 511, !dbg !10777
  %12 = mul i32 %11, %8, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %12, metadata !10765, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 %12, metadata !10765, metadata !DIExpression()), !dbg !10769
  call void @llvm.dbg.value(metadata i32 %12, metadata !10765, metadata !DIExpression()), !dbg !10769
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10779
  %14 = lshr i32 %13, 15, !dbg !10780
  %15 = and i32 %14, 6, !dbg !10780
  %16 = add nuw nsw i32 %15, 2, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %16, metadata !10766, metadata !DIExpression()), !dbg !10769
  %17 = udiv i32 %12, %16, !dbg !10781
  br label %18, !dbg !10782

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10783
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10784
  %21 = lshr i32 %20, 4, !dbg !10785
  %22 = and i32 %21, 15, !dbg !10785
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10786
  %24 = load i8, i8* %23, align 1, !dbg !10786
  %25 = zext i8 %24 to i32, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %25, metadata !10764, metadata !DIExpression()), !dbg !10769
  %26 = lshr i32 %19, %25, !dbg !10787
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10789 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10831, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10832, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10833, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10835, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10836, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10837, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10838, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10839, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 0, metadata !10840, metadata !DIExpression()), !dbg !10845
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !10846
  %4 = load i32, i32* %3, align 4, !dbg !10846
  %5 = and i32 %4, 1, !dbg !10848
  %6 = icmp eq i32 %5, 0, !dbg !10849
  br i1 %6, label %17, label %7, !dbg !10850

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10851
  %9 = and i32 %8, -100663297, !dbg !10851
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10851
  %11 = load i32, i32* %10, align 4, !dbg !10851
  %12 = or i32 %9, %11, !dbg !10851
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10851
  %13 = load i32, i32* %10, align 4, !dbg !10853
  %14 = icmp eq i32 %13, 0, !dbg !10855
  %15 = zext i1 %14 to i32, !dbg !10856
  %16 = load i32, i32* %3, align 4, !dbg !10857
  br label %17, !dbg !10856

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !10857
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !10845
  call void @llvm.dbg.value(metadata i32 %19, metadata !10839, metadata !DIExpression()), !dbg !10845
  %20 = and i32 %18, 2, !dbg !10859
  %21 = icmp eq i32 %20, 0, !dbg !10860
  br i1 %21, label %32, label %22, !dbg !10861

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10862
  %24 = and i32 %23, -402653185, !dbg !10862
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10862
  %26 = load i32, i32* %25, align 4, !dbg !10862
  %27 = or i32 %24, %26, !dbg !10862
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10862
  %28 = load i32, i32* %25, align 4, !dbg !10864
  %29 = icmp eq i32 %28, 0, !dbg !10866
  %30 = select i1 %29, i32 1, i32 %19, !dbg !10867
  %31 = load i32, i32* %3, align 4, !dbg !10868
  br label %32, !dbg !10867

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !10868
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !10845
  call void @llvm.dbg.value(metadata i32 %34, metadata !10839, metadata !DIExpression()), !dbg !10845
  %35 = and i32 %33, 4, !dbg !10870
  %36 = icmp eq i32 %35, 0, !dbg !10871
  br i1 %36, label %49, label %37, !dbg !10872

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10873
  %39 = and i32 %38, -3145729, !dbg !10873
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10873
  %41 = load i32, i32* %40, align 4, !dbg !10873
  %42 = or i32 %39, %41, !dbg !10873
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10873
  %43 = load i32, i32* %40, align 4, !dbg !10875
  %44 = icmp eq i32 %43, 1048576, !dbg !10877
  %45 = select i1 %44, i32 1, i32 %34, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %45, metadata !10839, metadata !DIExpression()), !dbg !10845
  %46 = icmp eq i32 %43, 0, !dbg !10879
  %47 = zext i1 %46 to i32, !dbg !10881
  %48 = load i32, i32* %3, align 4, !dbg !10882
  br label %49, !dbg !10881

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !10882
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !10845
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !10845
  call void @llvm.dbg.value(metadata i32 %52, metadata !10840, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 %51, metadata !10839, metadata !DIExpression()), !dbg !10845
  %53 = and i32 %50, 8, !dbg !10884
  %54 = icmp eq i32 %53, 0, !dbg !10885
  br i1 %54, label %67, label %55, !dbg !10886

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10887
  %57 = and i32 %56, -12582913, !dbg !10887
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10887
  %59 = load i32, i32* %58, align 4, !dbg !10887
  %60 = or i32 %57, %59, !dbg !10887
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10887
  %61 = load i32, i32* %58, align 4, !dbg !10889
  %62 = icmp eq i32 %61, 4194304, !dbg !10891
  %63 = select i1 %62, i32 1, i32 %51, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %63, metadata !10839, metadata !DIExpression()), !dbg !10845
  %64 = icmp eq i32 %61, 0, !dbg !10893
  %65 = select i1 %64, i32 1, i32 %52, !dbg !10895
  %66 = load i32, i32* %3, align 4, !dbg !10896
  br label %67, !dbg !10895

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !10896
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !10845
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !10845
  call void @llvm.dbg.value(metadata i32 %70, metadata !10840, metadata !DIExpression()), !dbg !10845
  call void @llvm.dbg.value(metadata i32 %69, metadata !10839, metadata !DIExpression()), !dbg !10845
  %71 = and i32 %68, 32, !dbg !10897
  %72 = icmp eq i32 %71, 0, !dbg !10898
  br i1 %72, label %131, label %73, !dbg !10899

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !10900
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !10900
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10841, metadata !DIExpression()), !dbg !10900
  store volatile i32 0, i32* %2, align 4, !dbg !10900
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10900
  %76 = or i32 %75, 268435456, !dbg !10900
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10900
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10900
  %78 = and i32 %77, 268435456, !dbg !10900
  store volatile i32 %78, i32* %2, align 4, !dbg !10900
  %79 = load volatile i32, i32* %2, align 4, !dbg !10900
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !10901
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10902
  %81 = or i32 %80, 256, !dbg !10902
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10902
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %82, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %83, !dbg !10904

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10905
  %85 = and i32 %84, 256, !dbg !10906
  %86 = icmp eq i32 %85, 0, !dbg !10907
  br i1 %86, label %87, label %91, !dbg !10904

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #27, !dbg !10908
  %89 = sub i32 %88, %82, !dbg !10911
  %90 = icmp ugt i32 %89, 2, !dbg !10912
  br i1 %90, label %439, label %83, !dbg !10913, !llvm.loop !10914

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10916
  %93 = and i32 %92, 768, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %93, metadata !10833, metadata !DIExpression()), !dbg !10845
  %94 = icmp eq i32 %93, 0, !dbg !10918
  br i1 %94, label %116, label %95, !dbg !10920

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10921
  %97 = load i32, i32* %96, align 4, !dbg !10921
  %98 = and i32 %97, 768, !dbg !10922
  %99 = icmp eq i32 %93, %98, !dbg !10923
  br i1 %99, label %116, label %100, !dbg !10924

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10925
  %102 = and i32 %101, -769, !dbg !10927
  call void @llvm.dbg.value(metadata i32 %102, metadata !10833, metadata !DIExpression()), !dbg !10845
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10928
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10929
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10930
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10931
  %104 = and i32 %103, 1, !dbg !10931
  %105 = icmp eq i32 %104, 0, !dbg !10931
  br i1 %105, label %116, label %106, !dbg !10933

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #27, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %107, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %108, !dbg !10936

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10937
  %110 = and i32 %109, 2, !dbg !10938
  %111 = icmp eq i32 %110, 0, !dbg !10938
  br i1 %111, label %112, label %116, !dbg !10936

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #27, !dbg !10939
  %114 = sub i32 %113, %107, !dbg !10942
  %115 = icmp ugt i32 %114, 5000, !dbg !10943
  br i1 %115, label %439, label %108, !dbg !10944, !llvm.loop !10945

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10947
  %118 = load i32, i32* %117, align 4, !dbg !10947
  %119 = and i32 %118, 768, !dbg !10947
  %120 = icmp eq i32 %119, 768, !dbg !10947
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10947
  %122 = and i32 %121, -2031617, !dbg !10947
  %123 = and i32 %118, 268434687, !dbg !10947
  %124 = select i1 %120, i32 %123, i32 0, !dbg !10947
  %125 = or i32 %122, %124, !dbg !10947
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10947
  %126 = load i32, i32* %117, align 4, !dbg !10947
  %127 = and i32 %126, 4095, !dbg !10947
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10947
  %129 = or i32 %128, %127, !dbg !10947
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10947
  %130 = load i32, i32* %3, align 4, !dbg !10949
  br label %131, !dbg !10951

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !10949
  %133 = and i32 %132, 16, !dbg !10952
  %134 = icmp eq i32 %133, 0, !dbg !10953
  br i1 %134, label %140, label %135, !dbg !10954

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !10955
  %137 = load i8, i8* %136, align 4, !dbg !10955
  %138 = zext i8 %137 to i32, !dbg !10955
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !10955
  %139 = load i32, i32* %3, align 4, !dbg !10957
  br label %140, !dbg !10959

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !10957
  %142 = and i32 %141, 128, !dbg !10960
  %143 = icmp eq i32 %142, 0, !dbg !10961
  br i1 %143, label %151, label %144, !dbg !10962

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10963
  %146 = and i32 %145, -12582913, !dbg !10963
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !10963
  %148 = load i32, i32* %147, align 4, !dbg !10963
  %149 = or i32 %146, %148, !dbg !10963
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10963
  %150 = load i32, i32* %3, align 4, !dbg !10965
  br label %151, !dbg !10967

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !10965
  %153 = and i32 %152, 64, !dbg !10968
  %154 = icmp eq i32 %153, 0, !dbg !10969
  br i1 %154, label %162, label %155, !dbg !10970

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10971
  %157 = and i32 %156, -67108865, !dbg !10971
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !10971
  %159 = load i32, i32* %158, align 4, !dbg !10971
  %160 = or i32 %157, %159, !dbg !10971
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10971
  %161 = load i32, i32* %3, align 4, !dbg !10973
  br label %162, !dbg !10975

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !10973
  %164 = and i32 %163, 256, !dbg !10976
  %165 = icmp eq i32 %164, 0, !dbg !10977
  br i1 %165, label %176, label %166, !dbg !10978

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10979
  %168 = and i32 %167, -134217729, !dbg !10979
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10979
  %170 = load i32, i32* %169, align 4, !dbg !10979
  %171 = or i32 %168, %170, !dbg !10979
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10979
  %172 = load i32, i32* %169, align 4, !dbg !10981
  %173 = icmp eq i32 %172, 134217728, !dbg !10983
  %174 = select i1 %173, i32 1, i32 %70, !dbg !10984
  %175 = load i32, i32* %3, align 4, !dbg !10985
  br label %176, !dbg !10984

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !10985
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !10845
  call void @llvm.dbg.value(metadata i32 %178, metadata !10840, metadata !DIExpression()), !dbg !10845
  %179 = and i32 %177, 512, !dbg !10987
  %180 = icmp eq i32 %179, 0, !dbg !10988
  br i1 %180, label %188, label %181, !dbg !10989

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10990
  %183 = and i32 %182, -268435457, !dbg !10990
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !10990
  %185 = load i32, i32* %184, align 4, !dbg !10990
  %186 = or i32 %183, %185, !dbg !10990
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10990
  %187 = load i32, i32* %3, align 4, !dbg !10992
  br label %188, !dbg !10994

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !10992
  %190 = and i32 %189, 1024, !dbg !10995
  %191 = icmp eq i32 %190, 0, !dbg !10996
  br i1 %191, label %204, label %192, !dbg !10997

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10998
  %194 = and i32 %193, -536870913, !dbg !10998
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10998
  %196 = load i32, i32* %195, align 4, !dbg !10998
  %197 = or i32 %194, %196, !dbg !10998
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10998
  %198 = load i32, i32* %195, align 4, !dbg !11000
  %199 = icmp eq i32 %198, 536870912, !dbg !11002
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %69, metadata !10839, metadata !DIExpression()), !dbg !10845
  br i1 %201, label %209, label %202, !dbg !11003

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11004
  br label %206, !dbg !11003

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !10839, metadata !DIExpression()), !dbg !10845
  %205 = icmp eq i32 %69, 1, !dbg !11006
  br i1 %205, label %209, label %206, !dbg !11007

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11004
  %208 = icmp eq i32 %207, 2048, !dbg !11008
  br i1 %208, label %209, label %356, !dbg !11009

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11010
  %210 = tail call i32 @HAL_GetTick() #27, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %210, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %211, !dbg !11013

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11014
  %213 = and i32 %212, 134217728, !dbg !11014
  %214 = icmp eq i32 %213, 0, !dbg !11014
  br i1 %214, label %219, label %215, !dbg !11013

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !11015
  %217 = sub i32 %216, %210, !dbg !11018
  %218 = icmp ugt i32 %217, 2, !dbg !11019
  br i1 %218, label %439, label %211, !dbg !11020, !llvm.loop !11021

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11023
  %221 = and i32 %220, 1, !dbg !11025
  %222 = icmp eq i32 %221, 0, !dbg !11026
  br i1 %222, label %227, label %223, !dbg !11027

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11028
  %225 = load i32, i32* %224, align 4, !dbg !11028
  %226 = icmp eq i32 %225, 0, !dbg !11029
  br i1 %226, label %234, label %227, !dbg !11030

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11031
  %229 = icmp eq i32 %228, 0, !dbg !11032
  br i1 %229, label %252, label %230, !dbg !11033

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11034
  %232 = load i32, i32* %231, align 4, !dbg !11034
  %233 = icmp eq i32 %232, 0, !dbg !11035
  br i1 %233, label %234, label %252, !dbg !11036

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11037
  %236 = and i32 %235, 196608, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %236, metadata !10834, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10845
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11040
  %238 = and i32 %237, 251658240, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %238, metadata !10835, metadata !DIExpression()), !dbg !10845
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11042
  %240 = load i32, i32* %239, align 4, !dbg !11042
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11042
  %242 = load i32, i32* %241, align 4, !dbg !11042
  %243 = shl i32 %242, 6, !dbg !11042
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11042
  %245 = load i32, i32* %244, align 4, !dbg !11042
  %246 = shl i32 %245, 28, !dbg !11042
  %247 = or i32 %240, %236, !dbg !11042
  %248 = or i32 %247, %238, !dbg !11042
  %249 = or i32 %248, %243, !dbg !11042
  %250 = or i32 %249, %246, !dbg !11042
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11042
  %251 = load i32, i32* %3, align 4, !dbg !11043
  br label %252, !dbg !11045

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11043
  %254 = and i32 %253, 4, !dbg !11046
  %255 = icmp eq i32 %254, 0, !dbg !11047
  br i1 %255, label %260, label %256, !dbg !11048

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11049
  %258 = load i32, i32* %257, align 4, !dbg !11049
  %259 = icmp eq i32 %258, 1048576, !dbg !11050
  br i1 %259, label %267, label %260, !dbg !11051

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11052
  %262 = icmp eq i32 %261, 0, !dbg !11053
  br i1 %262, label %291, label %263, !dbg !11054

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11055
  %265 = load i32, i32* %264, align 4, !dbg !11055
  %266 = icmp eq i32 %265, 4194304, !dbg !11056
  br i1 %266, label %267, label %291, !dbg !11057

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11058
  %269 = and i32 %268, 196608, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %269, metadata !10834, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10845
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11061
  %271 = and i32 %270, 1879048192, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %271, metadata !10836, metadata !DIExpression()), !dbg !10845
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11063
  %273 = load i32, i32* %272, align 4, !dbg !11063
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11063
  %275 = load i32, i32* %274, align 4, !dbg !11063
  %276 = shl i32 %275, 6, !dbg !11063
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11063
  %278 = load i32, i32* %277, align 4, !dbg !11063
  %279 = shl i32 %278, 24, !dbg !11063
  %280 = or i32 %273, %269, !dbg !11063
  %281 = or i32 %280, %271, !dbg !11063
  %282 = or i32 %281, %276, !dbg !11063
  %283 = or i32 %282, %279, !dbg !11063
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11063
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11064
  %285 = and i32 %284, -32, !dbg !11064
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11064
  %287 = load i32, i32* %286, align 4, !dbg !11064
  %288 = add i32 %287, -1, !dbg !11064
  %289 = or i32 %288, %285, !dbg !11064
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11064
  %290 = load i32, i32* %3, align 4, !dbg !11065
  br label %291, !dbg !11067

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11065
  %293 = and i32 %292, 1024, !dbg !11068
  %294 = icmp eq i32 %293, 0, !dbg !11069
  br i1 %294, label %321, label %295, !dbg !11070

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11071
  %297 = load i32, i32* %296, align 4, !dbg !11071
  %298 = icmp eq i32 %297, 536870912, !dbg !11072
  br i1 %298, label %299, label %321, !dbg !11073

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %300, metadata !10835, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10845
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11076
  %302 = and i32 %301, 1879048192, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %302, metadata !10836, metadata !DIExpression()), !dbg !10845
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11078
  %304 = load i32, i32* %303, align 4, !dbg !11078
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11078
  %306 = load i32, i32* %305, align 4, !dbg !11078
  %307 = shl i32 %306, 6, !dbg !11078
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11078
  %309 = load i32, i32* %308, align 4, !dbg !11078
  %310 = shl i32 %309, 15, !dbg !11078
  %311 = add i32 %310, -65536, !dbg !11078
  %312 = and i32 %311, -65536, !dbg !11078
  %313 = shl i32 %300, 9, !dbg !11078
  %314 = and i32 %313, 100663296, !dbg !11078
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11078
  %316 = or i32 %302, %304, !dbg !11078
  %317 = or i32 %316, %315, !dbg !11078
  %318 = or i32 %317, %307, !dbg !11078
  %319 = or i32 %318, %312, !dbg !11078
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11078
  %320 = load i32, i32* %3, align 4, !dbg !11079
  br label %321, !dbg !11081

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11079
  %323 = and i32 %322, 2048, !dbg !11082
  %324 = icmp eq i32 %323, 0, !dbg !11083
  br i1 %324, label %346, label %325, !dbg !11084

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11085
  %327 = load i32, i32* %326, align 4, !dbg !11085
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11085
  %329 = load i32, i32* %328, align 4, !dbg !11085
  %330 = shl i32 %329, 6, !dbg !11085
  %331 = or i32 %330, %327, !dbg !11085
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11085
  %333 = load i32, i32* %332, align 4, !dbg !11085
  %334 = shl i32 %333, 15, !dbg !11085
  %335 = add i32 %334, -65536, !dbg !11085
  %336 = and i32 %335, -65536, !dbg !11085
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11085
  %338 = load i32, i32* %337, align 4, !dbg !11085
  %339 = shl i32 %338, 24, !dbg !11085
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11085
  %341 = load i32, i32* %340, align 4, !dbg !11085
  %342 = shl i32 %341, 28, !dbg !11085
  %343 = or i32 %331, %339, !dbg !11085
  %344 = or i32 %343, %336, !dbg !11085
  %345 = or i32 %344, %342, !dbg !11085
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11085
  br label %346, !dbg !11087

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11088
  %347 = tail call i32 @HAL_GetTick() #27, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %347, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %348, !dbg !11090

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11091
  %350 = and i32 %349, 134217728, !dbg !11092
  %351 = icmp eq i32 %350, 0, !dbg !11092
  br i1 %351, label %352, label %356, !dbg !11090

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #27, !dbg !11093
  %354 = sub i32 %353, %347, !dbg !11096
  %355 = icmp ugt i32 %354, 2, !dbg !11097
  br i1 %355, label %439, label %348, !dbg !11098, !llvm.loop !11099

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11101
  br i1 %357, label %358, label %439, !dbg !11103

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11104
  %359 = tail call i32 @HAL_GetTick() #27, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %359, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %360, !dbg !11107

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11108
  %362 = and i32 %361, 536870912, !dbg !11108
  %363 = icmp eq i32 %362, 0, !dbg !11108
  br i1 %363, label %368, label %364, !dbg !11107

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #27, !dbg !11109
  %366 = sub i32 %365, %359, !dbg !11112
  %367 = icmp ugt i32 %366, 2, !dbg !11113
  br i1 %367, label %439, label %360, !dbg !11114, !llvm.loop !11115

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11117
  %370 = and i32 %369, 4, !dbg !11119
  %371 = icmp eq i32 %370, 0, !dbg !11120
  br i1 %371, label %376, label %372, !dbg !11121

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11122
  %374 = load i32, i32* %373, align 4, !dbg !11122
  %375 = icmp eq i32 %374, 0, !dbg !11123
  br i1 %375, label %383, label %376, !dbg !11124

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11125
  %378 = icmp eq i32 %377, 0, !dbg !11126
  br i1 %378, label %405, label %379, !dbg !11127

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11128
  %381 = load i32, i32* %380, align 4, !dbg !11128
  %382 = icmp eq i32 %381, 0, !dbg !11129
  br i1 %382, label %383, label %405, !dbg !11130

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11131
  %385 = and i32 %384, 196608, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %385, metadata !10837, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10845
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11134
  %387 = load i32, i32* %386, align 4, !dbg !11134
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11134
  %389 = load i32, i32* %388, align 4, !dbg !11134
  %390 = shl i32 %389, 6, !dbg !11134
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11134
  %392 = load i32, i32* %391, align 4, !dbg !11134
  %393 = shl i32 %392, 24, !dbg !11134
  %394 = or i32 %385, %387, !dbg !11134
  %395 = or i32 %394, %390, !dbg !11134
  %396 = or i32 %395, %393, !dbg !11134
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11134
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11135
  %398 = and i32 %397, -7937, !dbg !11135
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11135
  %400 = load i32, i32* %399, align 4, !dbg !11135
  %401 = shl i32 %400, 8, !dbg !11135
  %402 = add i32 %401, -256, !dbg !11135
  %403 = or i32 %402, %398, !dbg !11135
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11135
  %404 = load i32, i32* %3, align 4, !dbg !11136
  br label %405, !dbg !11138

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11136
  %407 = and i32 %406, 256, !dbg !11139
  %408 = icmp eq i32 %407, 0, !dbg !11140
  br i1 %408, label %429, label %409, !dbg !11141

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11142
  %411 = load i32, i32* %410, align 4, !dbg !11142
  %412 = icmp eq i32 %411, 134217728, !dbg !11143
  br i1 %412, label %413, label %429, !dbg !11144

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11145
  %415 = and i32 %414, 251658240, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %415, metadata !10838, metadata !DIExpression()), !dbg !10845
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11148
  %417 = load i32, i32* %416, align 4, !dbg !11148
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11148
  %419 = load i32, i32* %418, align 4, !dbg !11148
  %420 = shl i32 %419, 6, !dbg !11148
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11148
  %422 = load i32, i32* %421, align 4, !dbg !11148
  %423 = shl i32 %422, 15, !dbg !11148
  %424 = add i32 %423, -65536, !dbg !11148
  %425 = and i32 %424, -65536, !dbg !11148
  %426 = or i32 %415, %417, !dbg !11148
  %427 = or i32 %426, %420, !dbg !11148
  %428 = or i32 %427, %425, !dbg !11148
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11148
  br label %429, !dbg !11149

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11150
  %430 = tail call i32 @HAL_GetTick() #27, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %430, metadata !10832, metadata !DIExpression()), !dbg !10845
  br label %431, !dbg !11152

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %433 = and i32 %432, 536870912, !dbg !11154
  %434 = icmp eq i32 %433, 0, !dbg !11154
  br i1 %434, label %435, label %439, !dbg !11152

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #27, !dbg !11155
  %437 = sub i32 %436, %430, !dbg !11158
  %438 = icmp ugt i32 %437, 2, !dbg !11159
  br i1 %438, label %439, label %431, !dbg !11160, !llvm.loop !11161

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !10845
  ret i32 %440, !dbg !11163
}

; Function Attrs: optsize
declare !dbg !11164 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11170, metadata !DIExpression()), !dbg !11172
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11173
  store i32 2047, i32* %2, align 4, !dbg !11174
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11175
  %4 = and i32 %3, 63, !dbg !11176
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11177
  store i32 %4, i32* %5, align 4, !dbg !11178
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11179
  %7 = lshr i32 %6, 6, !dbg !11180
  %8 = and i32 %7, 511, !dbg !11180
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11181
  store i32 %8, i32* %9, align 4, !dbg !11182
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11183
  %11 = lshr i32 %10, 15, !dbg !11184
  %12 = and i32 %11, 6, !dbg !11184
  %13 = add nuw nsw i32 %12, 2, !dbg !11184
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11185
  store i32 %13, i32* %14, align 4, !dbg !11186
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11187
  %16 = lshr i32 %15, 24, !dbg !11188
  %17 = and i32 %16, 15, !dbg !11188
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11189
  store i32 %17, i32* %18, align 4, !dbg !11190
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11191
  %20 = lshr i32 %19, 28, !dbg !11192
  %21 = and i32 %20, 7, !dbg !11192
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11193
  store i32 %21, i32* %22, align 4, !dbg !11194
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11195
  %24 = and i32 %23, 63, !dbg !11196
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11197
  store i32 %24, i32* %25, align 4, !dbg !11198
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11199
  %27 = lshr i32 %26, 6, !dbg !11200
  %28 = and i32 %27, 511, !dbg !11200
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11201
  store i32 %28, i32* %29, align 4, !dbg !11202
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11203
  %31 = lshr i32 %30, 15, !dbg !11204
  %32 = and i32 %31, 6, !dbg !11204
  %33 = add nuw nsw i32 %32, 2, !dbg !11204
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11205
  store i32 %33, i32* %34, align 4, !dbg !11206
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11207
  %36 = lshr i32 %35, 24, !dbg !11208
  %37 = and i32 %36, 15, !dbg !11208
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11209
  store i32 %37, i32* %38, align 4, !dbg !11210
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11211
  %40 = and i32 %39, 31, !dbg !11212
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11213
  store i32 %40, i32* %41, align 4, !dbg !11214
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11215
  %43 = lshr i32 %42, 8, !dbg !11216
  %44 = and i32 %43, 31, !dbg !11216
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11217
  store i32 %44, i32* %45, align 4, !dbg !11218
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11219
  %47 = and i32 %46, 3145728, !dbg !11219
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11220
  store i32 %47, i32* %48, align 4, !dbg !11221
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11222
  %50 = and i32 %49, 12582912, !dbg !11222
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11223
  store i32 %50, i32* %51, align 4, !dbg !11224
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11225
  %53 = and i32 %52, 100663296, !dbg !11225
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11226
  store i32 %53, i32* %54, align 4, !dbg !11227
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11228
  %56 = and i32 %55, 402653184, !dbg !11228
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11229
  store i32 %56, i32* %57, align 4, !dbg !11230
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11231
  %59 = and i32 %58, 2031616, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %59, metadata !11171, metadata !DIExpression()), !dbg !11172
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11233
  %61 = and i32 %60, 768, !dbg !11234
  %62 = or i32 %61, %59, !dbg !11235
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11236
  store i32 %62, i32* %63, align 4, !dbg !11237
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11238
  %65 = and i32 %64, 67108864, !dbg !11238
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11239
  store i32 %65, i32* %66, align 4, !dbg !11240
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11241
  %68 = and i32 %67, 12582912, !dbg !11241
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11242
  store i32 %68, i32* %69, align 4, !dbg !11243
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11244
  %71 = and i32 %70, 134217728, !dbg !11244
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11245
  store i32 %71, i32* %72, align 4, !dbg !11246
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11247
  %74 = and i32 %73, 268435456, !dbg !11247
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11248
  store i32 %74, i32* %75, align 4, !dbg !11249
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11250
  %77 = and i32 %76, 536870912, !dbg !11250
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11251
  store i32 %77, i32* %78, align 4, !dbg !11252
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11253
  %80 = lshr i32 %79, 24, !dbg !11255
  %81 = trunc i32 %80 to i8, !dbg !11255
  %82 = and i8 %81, 1, !dbg !11255
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11256
  store i8 %82, i8* %83, align 4, !dbg !11258
  ret void, !dbg !11259
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !11260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11262, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11263, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11264, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11266, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11267, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 0, metadata !11268, metadata !DIExpression()), !dbg !11269
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11270

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %3, metadata !11266, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %3, metadata !11266, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11269
  %4 = lshr i32 %3, 20, !dbg !11274
  %5 = and i32 %4, 15, !dbg !11274
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11274

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11275
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11279
  %9 = and i32 %8, 63, !dbg !11279
  %10 = udiv i32 16000000, %9, !dbg !11279
  call void @llvm.dbg.value(metadata i32 %10, metadata !11265, metadata !DIExpression()), !dbg !11269
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11280
  %12 = lshr i32 %11, 24, !dbg !11281
  %13 = and i32 %12, 15, !dbg !11281
  call void @llvm.dbg.value(metadata i32 %13, metadata !11263, metadata !DIExpression()), !dbg !11269
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11282
  %15 = lshr i32 %14, 6, !dbg !11283
  %16 = and i32 %15, 511, !dbg !11283
  %17 = mul i32 %16, %10, !dbg !11284
  %18 = udiv i32 %17, %13, !dbg !11285
  call void @llvm.dbg.value(metadata i32 %18, metadata !11264, metadata !DIExpression()), !dbg !11269
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11286
  %20 = lshr i32 %19, 8, !dbg !11287
  %21 = and i32 %20, 31, !dbg !11287
  %22 = add nuw nsw i32 %21, 1, !dbg !11288
  call void @llvm.dbg.value(metadata i32 %22, metadata !11263, metadata !DIExpression()), !dbg !11269
  %23 = udiv i32 %18, %22, !dbg !11289
  call void @llvm.dbg.value(metadata i32 %23, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11290

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11291
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11294
  %27 = and i32 %26, 63, !dbg !11294
  %28 = udiv i32 16000000, %27, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %28, metadata !11265, metadata !DIExpression()), !dbg !11269
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11295
  %30 = lshr i32 %29, 24, !dbg !11296
  %31 = and i32 %30, 15, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %31, metadata !11263, metadata !DIExpression()), !dbg !11269
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11297
  %33 = lshr i32 %32, 6, !dbg !11298
  %34 = and i32 %33, 511, !dbg !11298
  %35 = mul i32 %34, %28, !dbg !11299
  %36 = udiv i32 %35, %31, !dbg !11300
  call void @llvm.dbg.value(metadata i32 %36, metadata !11264, metadata !DIExpression()), !dbg !11269
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11301
  %38 = and i32 %37, 31, !dbg !11302
  %39 = add nuw nsw i32 %38, 1, !dbg !11303
  call void @llvm.dbg.value(metadata i32 %39, metadata !11263, metadata !DIExpression()), !dbg !11269
  %40 = udiv i32 %36, %39, !dbg !11304
  call void @llvm.dbg.value(metadata i32 %40, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11305

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11306
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11309
  %44 = and i32 %43, 63, !dbg !11309
  %45 = udiv i32 16000000, %44, !dbg !11309
  call void @llvm.dbg.value(metadata i32 %45, metadata !11265, metadata !DIExpression()), !dbg !11269
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11310
  %47 = lshr i32 %46, 28, !dbg !11311
  %48 = and i32 %47, 7, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %48, metadata !11263, metadata !DIExpression()), !dbg !11269
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11312
  %50 = lshr i32 %49, 6, !dbg !11313
  %51 = and i32 %50, 511, !dbg !11313
  %52 = mul i32 %51, %45, !dbg !11314
  %53 = udiv i32 %52, %48, !dbg !11315
  call void @llvm.dbg.value(metadata i32 %53, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11316

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11317

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11319
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %58, metadata !11267, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11269
  %59 = lshr i32 %58, 25, !dbg !11324
  %60 = and i32 %59, 3, !dbg !11324
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11324

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11325
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11329
  %64 = and i32 %63, 63, !dbg !11329
  %65 = udiv i32 16000000, %64, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %65, metadata !11265, metadata !DIExpression()), !dbg !11269
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11330
  %67 = lshr i32 %66, 6, !dbg !11331
  %68 = and i32 %67, 511, !dbg !11331
  %69 = mul i32 %68, %65, !dbg !11332
  call void @llvm.dbg.value(metadata i32 %69, metadata !11268, metadata !DIExpression()), !dbg !11269
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11333
  %71 = lshr i32 %70, 28, !dbg !11334
  %72 = and i32 %71, 7, !dbg !11334
  %73 = udiv i32 %69, %72, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %73, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11336

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11337
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11340
  %77 = and i32 %76, 63, !dbg !11340
  %78 = udiv i32 16000000, %77, !dbg !11340
  call void @llvm.dbg.value(metadata i32 %78, metadata !11265, metadata !DIExpression()), !dbg !11269
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11341
  %80 = lshr i32 %79, 6, !dbg !11342
  %81 = and i32 %80, 511, !dbg !11342
  %82 = mul i32 %81, %78, !dbg !11343
  call void @llvm.dbg.value(metadata i32 %82, metadata !11268, metadata !DIExpression()), !dbg !11269
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11344
  %84 = lshr i32 %83, 28, !dbg !11345
  %85 = and i32 %84, 7, !dbg !11345
  %86 = udiv i32 %82, %85, !dbg !11346
  call void @llvm.dbg.value(metadata i32 %86, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11347

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11348
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %91, metadata !11267, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11269
  %92 = lshr i32 %91, 27, !dbg !11353
  %93 = and i32 %92, 3, !dbg !11353
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11353

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11354
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11358
  %97 = and i32 %96, 63, !dbg !11358
  %98 = udiv i32 16000000, %97, !dbg !11358
  call void @llvm.dbg.value(metadata i32 %98, metadata !11265, metadata !DIExpression()), !dbg !11269
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11359
  %100 = lshr i32 %99, 6, !dbg !11360
  %101 = and i32 %100, 511, !dbg !11360
  %102 = mul i32 %101, %98, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %102, metadata !11268, metadata !DIExpression()), !dbg !11269
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11362
  %104 = lshr i32 %103, 28, !dbg !11363
  %105 = and i32 %104, 7, !dbg !11363
  %106 = udiv i32 %102, %105, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %106, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11365

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 undef, metadata !11265, metadata !DIExpression()), !dbg !11269
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11369
  %110 = and i32 %109, 63, !dbg !11369
  %111 = udiv i32 16000000, %110, !dbg !11369
  call void @llvm.dbg.value(metadata i32 %111, metadata !11265, metadata !DIExpression()), !dbg !11269
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11370
  %113 = lshr i32 %112, 6, !dbg !11371
  %114 = and i32 %113, 511, !dbg !11371
  %115 = mul i32 %114, %111, !dbg !11372
  call void @llvm.dbg.value(metadata i32 %115, metadata !11268, metadata !DIExpression()), !dbg !11269
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11373
  %117 = lshr i32 %116, 28, !dbg !11374
  %118 = and i32 %117, 7, !dbg !11374
  %119 = udiv i32 %115, %118, !dbg !11375
  call void @llvm.dbg.value(metadata i32 %119, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123, !dbg !11376

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11377
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11264, metadata !DIExpression()), !dbg !11269
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11269
  call void @llvm.dbg.value(metadata i32 %124, metadata !11264, metadata !DIExpression()), !dbg !11269
  ret i32 %124, !dbg !11380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !11381 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11385, metadata !DIExpression()), !dbg !11386
  %2 = icmp eq i8 %0, 1, !dbg !11387
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11389
  %4 = and i32 %3, -9, !dbg !11390
  %5 = select i1 %2, i32 8, i32 0, !dbg !11390
  %6 = or i32 %4, %5, !dbg !11390
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11389
  ret void, !dbg !11391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11397, metadata !DIExpression()), !dbg !11399
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11400
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %2, metadata !11398, metadata !DIExpression()), !dbg !11399
  br label %3, !dbg !11402

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11403
  %5 = and i32 %4, 134217728, !dbg !11403
  %6 = icmp eq i32 %5, 0, !dbg !11403
  br i1 %6, label %11, label %7, !dbg !11402

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !11404
  %9 = sub i32 %8, %2, !dbg !11407
  %10 = icmp ugt i32 %9, 2, !dbg !11408
  br i1 %10, label %41, label %3, !dbg !11409, !llvm.loop !11410

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11412
  %13 = load i32, i32* %12, align 4, !dbg !11412
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11412
  %15 = load i32, i32* %14, align 4, !dbg !11412
  %16 = shl i32 %15, 6, !dbg !11412
  %17 = or i32 %16, %13, !dbg !11412
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11412
  %19 = load i32, i32* %18, align 4, !dbg !11412
  %20 = shl i32 %19, 15, !dbg !11412
  %21 = add i32 %20, -65536, !dbg !11412
  %22 = and i32 %21, -65536, !dbg !11412
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11412
  %24 = load i32, i32* %23, align 4, !dbg !11412
  %25 = shl i32 %24, 24, !dbg !11412
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11412
  %27 = load i32, i32* %26, align 4, !dbg !11412
  %28 = shl i32 %27, 28, !dbg !11412
  %29 = or i32 %17, %25, !dbg !11412
  %30 = or i32 %29, %22, !dbg !11412
  %31 = or i32 %30, %28, !dbg !11412
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11412
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11413
  %32 = tail call i32 @HAL_GetTick() #27, !dbg !11414
  call void @llvm.dbg.value(metadata i32 %32, metadata !11398, metadata !DIExpression()), !dbg !11399
  br label %33, !dbg !11415

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11416
  %35 = and i32 %34, 134217728, !dbg !11417
  %36 = icmp eq i32 %35, 0, !dbg !11417
  br i1 %36, label %37, label %41, !dbg !11415

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #27, !dbg !11418
  %39 = sub i32 %38, %32, !dbg !11421
  %40 = icmp ugt i32 %39, 2, !dbg !11422
  br i1 %40, label %41, label %33, !dbg !11423, !llvm.loop !11424

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11399
  ret i32 %42, !dbg !11426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11427 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11432
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %1, metadata !11431, metadata !DIExpression()), !dbg !11434
  br label %2, !dbg !11435

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11436
  %4 = and i32 %3, 134217728, !dbg !11436
  %5 = icmp eq i32 %4, 0, !dbg !11437
  br i1 %5, label %10, label %6, !dbg !11435

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !11438
  %8 = sub i32 %7, %1, !dbg !11441
  %9 = icmp ugt i32 %8, 2, !dbg !11442
  br i1 %9, label %10, label %2, !dbg !11443, !llvm.loop !11444

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11434
  ret i32 %11, !dbg !11446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11447 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11454
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11455
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !11456
  call void @llvm.dbg.value(metadata i32 %2, metadata !11453, metadata !DIExpression()), !dbg !11454
  br label %3, !dbg !11457

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11458
  %5 = and i32 %4, 536870912, !dbg !11458
  %6 = icmp eq i32 %5, 0, !dbg !11458
  br i1 %6, label %11, label %7, !dbg !11457

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !11459
  %9 = sub i32 %8, %2, !dbg !11462
  %10 = icmp ugt i32 %9, 2, !dbg !11463
  br i1 %10, label %37, label %3, !dbg !11464, !llvm.loop !11465

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11467
  %13 = load i32, i32* %12, align 4, !dbg !11467
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11467
  %15 = load i32, i32* %14, align 4, !dbg !11467
  %16 = shl i32 %15, 6, !dbg !11467
  %17 = or i32 %16, %13, !dbg !11467
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11467
  %19 = load i32, i32* %18, align 4, !dbg !11467
  %20 = shl i32 %19, 15, !dbg !11467
  %21 = add i32 %20, -65536, !dbg !11467
  %22 = and i32 %21, -65536, !dbg !11467
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11467
  %24 = load i32, i32* %23, align 4, !dbg !11467
  %25 = shl i32 %24, 24, !dbg !11467
  %26 = or i32 %17, %25, !dbg !11467
  %27 = or i32 %26, %22, !dbg !11467
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11467
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11468
  %28 = tail call i32 @HAL_GetTick() #27, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %28, metadata !11453, metadata !DIExpression()), !dbg !11454
  br label %29, !dbg !11470

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11471
  %31 = and i32 %30, 536870912, !dbg !11472
  %32 = icmp eq i32 %31, 0, !dbg !11472
  br i1 %32, label %33, label %37, !dbg !11470

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #27, !dbg !11473
  %35 = sub i32 %34, %28, !dbg !11476
  %36 = icmp ugt i32 %35, 2, !dbg !11477
  br i1 %36, label %37, label %29, !dbg !11478, !llvm.loop !11479

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11454
  ret i32 %38, !dbg !11481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11482 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11485
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11486
  call void @llvm.dbg.value(metadata i32 %1, metadata !11484, metadata !DIExpression()), !dbg !11487
  br label %2, !dbg !11488

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11489
  %4 = and i32 %3, 536870912, !dbg !11489
  %5 = icmp eq i32 %4, 0, !dbg !11489
  br i1 %5, label %10, label %6, !dbg !11488

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !11490
  %8 = sub i32 %7, %1, !dbg !11493
  %9 = icmp ugt i32 %8, 2, !dbg !11494
  br i1 %9, label %10, label %2, !dbg !11495, !llvm.loop !11496

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11487
  ret i32 %11, !dbg !11498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11499 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11501, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !11502, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !11503, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !11504, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 0, metadata !11505, metadata !DIExpression()), !dbg !11506
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11507
  %2 = lshr i32 %1, 2, !dbg !11508
  %3 = and i32 %2, 3, !dbg !11508
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11508

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11509
  %6 = and i32 %5, 63, !dbg !11512
  call void @llvm.dbg.value(metadata i32 %6, metadata !11501, metadata !DIExpression()), !dbg !11506
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11513
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11515
  %9 = lshr i32 %8, 6, !dbg !11515
  %10 = and i32 %9, 511, !dbg !11515
  %11 = zext i32 %10 to i64, !dbg !11515
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11515
  %13 = zext i32 %6 to i64, !dbg !11515
  %14 = udiv i64 %12, %13, !dbg !11515
  %15 = trunc i64 %14 to i32, !dbg !11515
  call void @llvm.dbg.value(metadata i32 %15, metadata !11502, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %15, metadata !11502, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %15, metadata !11502, metadata !DIExpression()), !dbg !11506
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11516
  %17 = lshr i32 %16, 15, !dbg !11517
  %18 = and i32 %17, 6, !dbg !11517
  %19 = add nuw nsw i32 %18, 2, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %19, metadata !11503, metadata !DIExpression()), !dbg !11506
  %20 = udiv i32 %15, %19, !dbg !11518
  call void @llvm.dbg.value(metadata i32 %20, metadata !11505, metadata !DIExpression()), !dbg !11506
  br label %38, !dbg !11519

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11520
  %23 = and i32 %22, 63, !dbg !11522
  call void @llvm.dbg.value(metadata i32 %23, metadata !11501, metadata !DIExpression()), !dbg !11506
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11523
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11525
  %26 = lshr i32 %25, 6, !dbg !11525
  %27 = and i32 %26, 511, !dbg !11525
  %28 = zext i32 %27 to i64, !dbg !11525
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11525
  %30 = zext i32 %23 to i64, !dbg !11525
  %31 = udiv i64 %29, %30, !dbg !11525
  %32 = trunc i64 %31 to i32, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %32, metadata !11502, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %32, metadata !11502, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.value(metadata i32 %32, metadata !11502, metadata !DIExpression()), !dbg !11506
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11526
  %34 = lshr i32 %33, 28, !dbg !11527
  %35 = and i32 %34, 7, !dbg !11527
  call void @llvm.dbg.value(metadata i32 %35, metadata !11504, metadata !DIExpression()), !dbg !11506
  %36 = udiv i32 %32, %35, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %36, metadata !11505, metadata !DIExpression()), !dbg !11506
  br label %38, !dbg !11529

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11530
  call void @llvm.dbg.value(metadata i32 %39, metadata !11505, metadata !DIExpression()), !dbg !11506
  ret i32 %39, !dbg !11531
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11532 {
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %1, metadata !11534, metadata !DIExpression()), !dbg !11536
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11537
  %3 = or i32 %2, 1, !dbg !11537
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11537
  br label %4, !dbg !11538

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11539
  %6 = and i32 %5, 2, !dbg !11539
  %7 = icmp eq i32 %6, 0, !dbg !11540
  br i1 %7, label %8, label %12, !dbg !11538

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #27, !dbg !11541
  %10 = sub i32 %9, %1, !dbg !11544
  %11 = icmp ugt i32 %10, 2, !dbg !11545
  br i1 %11, label %89, label %4, !dbg !11546, !llvm.loop !11547

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11549
  %14 = or i32 %13, 128, !dbg !11549
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11549
  %15 = tail call i32 @HAL_GetTick() #27, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %15, metadata !11534, metadata !DIExpression()), !dbg !11536
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11551
  br label %16, !dbg !11552

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11553
  %18 = and i32 %17, 12, !dbg !11553
  %19 = icmp eq i32 %18, 0, !dbg !11554
  %20 = tail call i32 @HAL_GetTick() #27, !dbg !11536
  br i1 %19, label %24, label %21, !dbg !11552

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11555
  %23 = icmp ugt i32 %22, 5000, !dbg !11558
  br i1 %23, label %89, label %16, !dbg !11559, !llvm.loop !11560

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11534, metadata !DIExpression()), !dbg !11536
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11562
  %26 = and i32 %25, -851969, !dbg !11562
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11562
  br label %27, !dbg !11563

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11564
  %29 = and i32 %28, 131072, !dbg !11564
  %30 = icmp eq i32 %29, 0, !dbg !11565
  %31 = tail call i32 @HAL_GetTick() #27, !dbg !11536
  br i1 %30, label %35, label %32, !dbg !11563

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11566
  %34 = icmp ugt i32 %33, 100, !dbg !11569
  br i1 %34, label %89, label %27, !dbg !11570, !llvm.loop !11571

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11534, metadata !DIExpression()), !dbg !11536
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11573
  %37 = and i32 %36, -16777217, !dbg !11573
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11573
  br label %38, !dbg !11574

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11575
  %40 = and i32 %39, 33554432, !dbg !11575
  %41 = icmp eq i32 %40, 0, !dbg !11576
  %42 = tail call i32 @HAL_GetTick() #27, !dbg !11536
  br i1 %41, label %46, label %43, !dbg !11574

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11577
  %45 = icmp ugt i32 %44, 2, !dbg !11580
  br i1 %45, label %89, label %38, !dbg !11581, !llvm.loop !11582

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11534, metadata !DIExpression()), !dbg !11536
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11584
  %48 = and i32 %47, -67108865, !dbg !11584
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11584
  br label %49, !dbg !11585

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11586
  %51 = and i32 %50, 134217728, !dbg !11586
  %52 = icmp eq i32 %51, 0, !dbg !11587
  %53 = tail call i32 @HAL_GetTick() #27, !dbg !11536
  br i1 %52, label %57, label %54, !dbg !11585

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11588
  %56 = icmp ugt i32 %55, 2, !dbg !11591
  br i1 %56, label %89, label %49, !dbg !11592, !llvm.loop !11593

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11534, metadata !DIExpression()), !dbg !11536
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11595
  %59 = and i32 %58, -268435457, !dbg !11595
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11595
  br label %60, !dbg !11596

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11597
  %62 = and i32 %61, 536870912, !dbg !11597
  %63 = icmp eq i32 %62, 0, !dbg !11598
  br i1 %63, label %68, label %64, !dbg !11596

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #27, !dbg !11599
  %66 = sub i32 %65, %53, !dbg !11602
  %67 = icmp ugt i32 %66, 2, !dbg !11603
  br i1 %67, label %89, label %60, !dbg !11604, !llvm.loop !11605

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11607
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11608
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11609
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11610
  %70 = and i32 %69, -7937, !dbg !11610
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11610
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11611
  %72 = and i32 %71, -8193, !dbg !11611
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11611
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11612
  %74 = and i32 %73, -16385, !dbg !11612
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11612
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11613
  %76 = or i32 %75, 10420224, !dbg !11613
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11613
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11614
  %78 = or i32 %77, 2097152, !dbg !11614
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11614
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11615
  %80 = or i32 %79, 4194304, !dbg !11615
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11615
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11616
  %82 = and i32 %81, -2, !dbg !11616
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11616
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11617
  %84 = or i32 %83, 16777216, !dbg !11617
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11617
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11618
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11619
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #27, !dbg !11621
  %87 = icmp ne i32 %86, 0, !dbg !11622
  %88 = zext i1 %87 to i32, !dbg !11623
  br label %89, !dbg !11623

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11536
  ret i32 %90, !dbg !11624
}

; Function Attrs: optsize
declare !dbg !11625 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11628 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11654, metadata !DIExpression()), !dbg !11665
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11666
  br i1 %3, label %337, label %4, !dbg !11668

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11669
  %6 = load i32, i32* %5, align 4, !dbg !11669
  %7 = and i32 %6, 1, !dbg !11671
  %8 = icmp eq i32 %7, 0, !dbg !11672
  br i1 %8, label %74, label %9, !dbg !11673

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11674
  %11 = and i32 %10, 12, !dbg !11674
  %12 = icmp eq i32 %11, 4, !dbg !11677
  br i1 %12, label %29, label %13, !dbg !11678

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11679
  %15 = and i32 %14, 12, !dbg !11679
  %16 = icmp eq i32 %15, 8, !dbg !11680
  br i1 %16, label %17, label %21, !dbg !11681

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11682
  %19 = and i32 %18, 4194304, !dbg !11683
  %20 = icmp eq i32 %19, 0, !dbg !11684
  br i1 %20, label %21, label %29, !dbg !11685

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11686
  %23 = and i32 %22, 12, !dbg !11686
  %24 = icmp eq i32 %23, 12, !dbg !11687
  br i1 %24, label %25, label %37, !dbg !11688

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11689
  %27 = and i32 %26, 4194304, !dbg !11690
  %28 = icmp eq i32 %27, 0, !dbg !11691
  br i1 %28, label %37, label %29, !dbg !11692

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11693
  %31 = and i32 %30, 131072, !dbg !11693
  %32 = icmp eq i32 %31, 0, !dbg !11693
  br i1 %32, label %74, label %33, !dbg !11696

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11697
  %35 = load i32, i32* %34, align 4, !dbg !11697
  %36 = icmp eq i32 %35, 0, !dbg !11698
  br i1 %36, label %337, label %74, !dbg !11699

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11700
  %39 = load i32, i32* %38, align 4, !dbg !11700
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !11704

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11705
  %42 = or i32 %41, 65536, !dbg !11705
  br label %53, !dbg !11705

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11707
  %45 = or i32 %44, 262144, !dbg !11707
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11707
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11707
  %47 = or i32 %46, 65536, !dbg !11707
  br label %53, !dbg !11707

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11710
  %50 = and i32 %49, -65537, !dbg !11710
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11710
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11710
  %52 = and i32 %51, -262145, !dbg !11710
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11712
  %55 = load i32, i32* %38, align 4, !dbg !11713
  %56 = icmp eq i32 %55, 0, !dbg !11715
  %57 = tail call i32 @HAL_GetTick() #27, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %57, metadata !11655, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 %57, metadata !11655, metadata !DIExpression()), !dbg !11665
  br i1 %56, label %66, label %58, !dbg !11717

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11718
  %60 = and i32 %59, 131072, !dbg !11720
  %61 = icmp eq i32 %60, 0, !dbg !11720
  br i1 %61, label %62, label %74, !dbg !11721

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !11722
  %64 = sub i32 %63, %57, !dbg !11725
  %65 = icmp ugt i32 %64, 100, !dbg !11726
  br i1 %65, label %337, label %58, !dbg !11727, !llvm.loop !11728

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11730
  %68 = and i32 %67, 131072, !dbg !11730
  %69 = icmp eq i32 %68, 0, !dbg !11730
  br i1 %69, label %74, label %70, !dbg !11732

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #27, !dbg !11733
  %72 = sub i32 %71, %57, !dbg !11736
  %73 = icmp ugt i32 %72, 100, !dbg !11737
  br i1 %73, label %337, label %66, !dbg !11738, !llvm.loop !11739

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !11741
  %76 = and i32 %75, 2, !dbg !11743
  %77 = icmp eq i32 %76, 0, !dbg !11744
  br i1 %77, label %137, label %78, !dbg !11745

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11746
  %80 = and i32 %79, 12, !dbg !11746
  %81 = icmp eq i32 %80, 0, !dbg !11749
  br i1 %81, label %98, label %82, !dbg !11750

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11751
  %84 = and i32 %83, 12, !dbg !11751
  %85 = icmp eq i32 %84, 8, !dbg !11752
  br i1 %85, label %86, label %90, !dbg !11753

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11754
  %88 = and i32 %87, 4194304, !dbg !11755
  %89 = icmp eq i32 %88, 0, !dbg !11756
  br i1 %89, label %98, label %90, !dbg !11757

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11758
  %92 = and i32 %91, 12, !dbg !11758
  %93 = icmp eq i32 %92, 12, !dbg !11759
  br i1 %93, label %94, label %106, !dbg !11760

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11761
  %96 = and i32 %95, 4194304, !dbg !11762
  %97 = icmp eq i32 %96, 0, !dbg !11763
  br i1 %97, label %98, label %106, !dbg !11764

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11765
  %100 = and i32 %99, 2, !dbg !11765
  %101 = icmp eq i32 %100, 0, !dbg !11765
  br i1 %101, label %130, label %102, !dbg !11768

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11769
  %104 = load i32, i32* %103, align 4, !dbg !11769
  %105 = icmp eq i32 %104, 1, !dbg !11770
  br i1 %105, label %130, label %337, !dbg !11771

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11772
  %108 = load i32, i32* %107, align 4, !dbg !11772
  %109 = icmp eq i32 %108, 0, !dbg !11775
  br i1 %109, label %120, label %110, !dbg !11776

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11777
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !11779
  call void @llvm.dbg.value(metadata i32 %111, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %112, !dbg !11780

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  %114 = and i32 %113, 2, !dbg !11782
  %115 = icmp eq i32 %114, 0, !dbg !11782
  br i1 %115, label %116, label %130, !dbg !11780

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #27, !dbg !11783
  %118 = sub i32 %117, %111, !dbg !11786
  %119 = icmp ugt i32 %118, 2, !dbg !11787
  br i1 %119, label %337, label %112, !dbg !11788, !llvm.loop !11789

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11791
  %121 = tail call i32 @HAL_GetTick() #27, !dbg !11793
  call void @llvm.dbg.value(metadata i32 %121, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %122, !dbg !11794

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11795
  %124 = and i32 %123, 2, !dbg !11795
  %125 = icmp eq i32 %124, 0, !dbg !11795
  br i1 %125, label %137, label %126, !dbg !11794

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #27, !dbg !11796
  %128 = sub i32 %127, %121, !dbg !11799
  %129 = icmp ugt i32 %128, 2, !dbg !11800
  br i1 %129, label %337, label %122, !dbg !11801, !llvm.loop !11802

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11804
  %132 = and i32 %131, -249, !dbg !11804
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11804
  %134 = load i32, i32* %133, align 4, !dbg !11804
  %135 = shl i32 %134, 3, !dbg !11804
  %136 = or i32 %135, %132, !dbg !11804
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11804
  br label %137, !dbg !11805

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !11805
  %139 = and i32 %138, 8, !dbg !11807
  %140 = icmp eq i32 %139, 0, !dbg !11808
  br i1 %140, label %165, label %141, !dbg !11809

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11810
  %143 = load i32, i32* %142, align 4, !dbg !11810
  %144 = icmp eq i32 %143, 0, !dbg !11813
  br i1 %144, label %155, label %145, !dbg !11814

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11815
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !11817
  call void @llvm.dbg.value(metadata i32 %146, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %147, !dbg !11818

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11819
  %149 = and i32 %148, 2, !dbg !11820
  %150 = icmp eq i32 %149, 0, !dbg !11820
  br i1 %150, label %151, label %165, !dbg !11818

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #27, !dbg !11821
  %153 = sub i32 %152, %146, !dbg !11824
  %154 = icmp ugt i32 %153, 2, !dbg !11825
  br i1 %154, label %337, label %147, !dbg !11826, !llvm.loop !11827

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11829
  %156 = tail call i32 @HAL_GetTick() #27, !dbg !11831
  call void @llvm.dbg.value(metadata i32 %156, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %157, !dbg !11832

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11833
  %159 = and i32 %158, 2, !dbg !11833
  %160 = icmp eq i32 %159, 0, !dbg !11833
  br i1 %160, label %165, label %161, !dbg !11832

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #27, !dbg !11834
  %163 = sub i32 %162, %156, !dbg !11837
  %164 = icmp ugt i32 %163, 2, !dbg !11838
  br i1 %164, label %337, label %157, !dbg !11839, !llvm.loop !11840

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !11842
  %167 = and i32 %166, 4, !dbg !11843
  %168 = icmp eq i32 %167, 0, !dbg !11844
  br i1 %168, label %237, label %169, !dbg !11845

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !11657, metadata !DIExpression()), !dbg !11846
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11847
  %171 = and i32 %170, 268435456, !dbg !11847
  %172 = icmp eq i32 %171, 0, !dbg !11847
  br i1 %172, label %173, label %180, !dbg !11848

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !11849
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !11849
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11661, metadata !DIExpression()), !dbg !11849
  store volatile i32 0, i32* %2, align 4, !dbg !11849
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11849
  %176 = or i32 %175, 268435456, !dbg !11849
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11849
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11849
  %178 = and i32 %177, 268435456, !dbg !11849
  store volatile i32 %178, i32* %2, align 4, !dbg !11849
  %179 = load volatile i32, i32* %2, align 4, !dbg !11849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !11850
  call void @llvm.dbg.value(metadata i32 1, metadata !11657, metadata !DIExpression()), !dbg !11846
  br label %180, !dbg !11851

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !11657, metadata !DIExpression()), !dbg !11846
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11852
  %182 = and i32 %181, 256, !dbg !11852
  %183 = icmp eq i32 %182, 0, !dbg !11852
  br i1 %183, label %184, label %196, !dbg !11854

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11855
  %186 = or i32 %185, 256, !dbg !11855
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11855
  %187 = tail call i32 @HAL_GetTick() #27, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %187, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %188, !dbg !11858

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11859
  %190 = and i32 %189, 256, !dbg !11859
  %191 = icmp eq i32 %190, 0, !dbg !11859
  br i1 %191, label %192, label %196, !dbg !11858

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #27, !dbg !11860
  %194 = sub i32 %193, %187, !dbg !11863
  %195 = icmp ugt i32 %194, 2, !dbg !11864
  br i1 %195, label %337, label %188, !dbg !11865, !llvm.loop !11866

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11868
  %198 = load i32, i32* %197, align 4, !dbg !11868
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !11871

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11872
  %201 = or i32 %200, 1, !dbg !11872
  br label %212, !dbg !11872

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11874
  %204 = or i32 %203, 4, !dbg !11874
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11874
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11874
  %206 = or i32 %205, 1, !dbg !11874
  br label %212, !dbg !11874

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11877
  %209 = and i32 %208, -2, !dbg !11877
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11877
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11877
  %211 = and i32 %210, -5, !dbg !11877
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11879
  %214 = load i32, i32* %197, align 4, !dbg !11880
  %215 = icmp eq i32 %214, 0, !dbg !11882
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %216, metadata !11655, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 %216, metadata !11655, metadata !DIExpression()), !dbg !11665
  br i1 %215, label %225, label %217, !dbg !11884

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11885
  %219 = and i32 %218, 2, !dbg !11887
  %220 = icmp eq i32 %219, 0, !dbg !11887
  br i1 %220, label %221, label %233, !dbg !11888

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #27, !dbg !11889
  %223 = sub i32 %222, %216, !dbg !11892
  %224 = icmp ugt i32 %223, 5000, !dbg !11893
  br i1 %224, label %337, label %217, !dbg !11894, !llvm.loop !11895

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11897
  %227 = and i32 %226, 2, !dbg !11897
  %228 = icmp eq i32 %227, 0, !dbg !11897
  br i1 %228, label %233, label %229, !dbg !11899

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !11900
  %231 = sub i32 %230, %216, !dbg !11903
  %232 = icmp ugt i32 %231, 5000, !dbg !11904
  br i1 %232, label %337, label %225, !dbg !11905, !llvm.loop !11906

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !11908

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11909
  %236 = and i32 %235, -268435457, !dbg !11909
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11909
  br label %237, !dbg !11912

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11913
  %239 = load i32, i32* %238, align 4, !dbg !11913
  %240 = icmp eq i32 %239, 0, !dbg !11915
  br i1 %240, label %336, label %241, !dbg !11916

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11917
  %243 = and i32 %242, 12, !dbg !11917
  %244 = icmp eq i32 %243, 8, !dbg !11920
  br i1 %244, label %297, label %245, !dbg !11921

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !11922
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11925
  %247 = tail call i32 @HAL_GetTick() #27, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %247, metadata !11655, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 %247, metadata !11655, metadata !DIExpression()), !dbg !11665
  br i1 %246, label %248, label %289, !dbg !11926

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11927
  %250 = and i32 %249, 33554432, !dbg !11927
  %251 = icmp eq i32 %250, 0, !dbg !11927
  br i1 %251, label %256, label %252, !dbg !11929

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #27, !dbg !11930
  %254 = sub i32 %253, %247, !dbg !11933
  %255 = icmp ugt i32 %254, 2, !dbg !11934
  br i1 %255, label %337, label %248, !dbg !11935, !llvm.loop !11936

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11938
  %258 = load i32, i32* %257, align 4, !dbg !11938
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11938
  %260 = load i32, i32* %259, align 4, !dbg !11938
  %261 = or i32 %260, %258, !dbg !11938
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11938
  %263 = load i32, i32* %262, align 4, !dbg !11938
  %264 = shl i32 %263, 6, !dbg !11938
  %265 = or i32 %261, %264, !dbg !11938
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11938
  %267 = load i32, i32* %266, align 4, !dbg !11938
  %268 = shl i32 %267, 15, !dbg !11938
  %269 = add i32 %268, -65536, !dbg !11938
  %270 = and i32 %269, -65536, !dbg !11938
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11938
  %272 = load i32, i32* %271, align 4, !dbg !11938
  %273 = shl i32 %272, 24, !dbg !11938
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11938
  %275 = load i32, i32* %274, align 4, !dbg !11938
  %276 = shl i32 %275, 28, !dbg !11938
  %277 = or i32 %265, %273, !dbg !11938
  %278 = or i32 %277, %270, !dbg !11938
  %279 = or i32 %278, %276, !dbg !11938
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11938
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11939
  %280 = tail call i32 @HAL_GetTick() #27, !dbg !11940
  call void @llvm.dbg.value(metadata i32 %280, metadata !11655, metadata !DIExpression()), !dbg !11665
  br label %281, !dbg !11941

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11942
  %283 = and i32 %282, 33554432, !dbg !11943
  %284 = icmp eq i32 %283, 0, !dbg !11943
  br i1 %284, label %285, label %336, !dbg !11941

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #27, !dbg !11944
  %287 = sub i32 %286, %280, !dbg !11947
  %288 = icmp ugt i32 %287, 2, !dbg !11948
  br i1 %288, label %337, label %281, !dbg !11949, !llvm.loop !11950

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11952
  %291 = and i32 %290, 33554432, !dbg !11952
  %292 = icmp eq i32 %291, 0, !dbg !11952
  br i1 %292, label %336, label %293, !dbg !11954

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #27, !dbg !11955
  %295 = sub i32 %294, %247, !dbg !11958
  %296 = icmp ugt i32 %295, 2, !dbg !11959
  br i1 %296, label %337, label %289, !dbg !11960, !llvm.loop !11961

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !11963
  br i1 %298, label %337, label %299, !dbg !11966

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %300, metadata !11656, metadata !DIExpression()), !dbg !11665
  %301 = and i32 %300, 4194304, !dbg !11969
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11971
  %303 = load i32, i32* %302, align 4, !dbg !11971
  %304 = icmp eq i32 %301, %303, !dbg !11972
  br i1 %304, label %305, label %337, !dbg !11973

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !11974
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11975
  %308 = load i32, i32* %307, align 4, !dbg !11975
  %309 = icmp eq i32 %306, %308, !dbg !11976
  br i1 %309, label %310, label %337, !dbg !11977

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !11978
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11979
  %313 = load i32, i32* %312, align 4, !dbg !11979
  %314 = shl i32 %313, 6, !dbg !11980
  %315 = icmp eq i32 %311, %314, !dbg !11981
  br i1 %315, label %316, label %337, !dbg !11982

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !11983
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11984
  %319 = load i32, i32* %318, align 4, !dbg !11984
  %320 = shl i32 %319, 15, !dbg !11985
  %321 = add i32 %320, -65536, !dbg !11985
  %322 = and i32 %321, -65536, !dbg !11985
  %323 = icmp eq i32 %317, %322, !dbg !11986
  br i1 %323, label %324, label %337, !dbg !11987

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !11988
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11989
  %327 = load i32, i32* %326, align 4, !dbg !11989
  %328 = shl i32 %327, 24, !dbg !11990
  %329 = icmp eq i32 %325, %328, !dbg !11991
  br i1 %329, label %330, label %337, !dbg !11992

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !11993
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11994
  %333 = load i32, i32* %332, align 4, !dbg !11994
  %334 = shl i32 %333, 28, !dbg !11995
  %335 = icmp eq i32 %331, %334, !dbg !11996
  br i1 %335, label %336, label %337, !dbg !11997

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !11998

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !11665
  ret i32 %338, !dbg !11999
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !12000 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12006
  store i32 15, i32* %2, align 4, !dbg !12007
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12008
  %4 = and i32 %3, 262144, !dbg !12010
  %5 = icmp eq i32 %4, 0, !dbg !12011
  br i1 %5, label %8, label %6, !dbg !12012

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12013
  store i32 327680, i32* %7, align 4, !dbg !12015
  br label %15, !dbg !12016

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  %10 = and i32 %9, 65536, !dbg !12019
  %11 = icmp eq i32 %10, 0, !dbg !12020
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12021
  br i1 %11, label %14, label %13, !dbg !12022

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12023
  br label %15, !dbg !12025

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12026
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12028
  %17 = and i32 %16, 1, !dbg !12030
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12031
  store i32 %17, i32* %18, align 4, !dbg !12033
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12034
  %20 = lshr i32 %19, 3, !dbg !12035
  %21 = and i32 %20, 31, !dbg !12035
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12036
  store i32 %21, i32* %22, align 4, !dbg !12037
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12038
  %24 = and i32 %23, 4, !dbg !12040
  %25 = icmp eq i32 %24, 0, !dbg !12041
  br i1 %25, label %28, label %26, !dbg !12042

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12043
  store i32 5, i32* %27, align 4, !dbg !12045
  br label %35, !dbg !12046

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12047
  %30 = and i32 %29, 1, !dbg !12049
  %31 = icmp eq i32 %30, 0, !dbg !12050
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12051
  br i1 %31, label %34, label %33, !dbg !12052

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12053
  br label %35, !dbg !12055

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12056
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12058
  %37 = and i32 %36, 1, !dbg !12060
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12061
  store i32 %37, i32* %38, align 4, !dbg !12063
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12064
  %40 = and i32 %39, 16777216, !dbg !12066
  %41 = icmp eq i32 %40, 0, !dbg !12067
  %42 = select i1 %41, i32 1, i32 2, !dbg !12068
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12069
  store i32 %42, i32* %43, align 4, !dbg !12071
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12072
  %45 = and i32 %44, 4194304, !dbg !12073
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12074
  store i32 %45, i32* %46, align 4, !dbg !12075
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12076
  %48 = and i32 %47, 63, !dbg !12077
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12078
  store i32 %48, i32* %49, align 4, !dbg !12079
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12080
  %51 = lshr i32 %50, 6, !dbg !12081
  %52 = and i32 %51, 511, !dbg !12081
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12082
  store i32 %52, i32* %53, align 4, !dbg !12083
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12084
  %55 = shl i32 %54, 1, !dbg !12085
  %56 = and i32 %55, 393216, !dbg !12085
  %57 = add nuw nsw i32 %56, 131072, !dbg !12085
  %58 = lshr exact i32 %57, 16, !dbg !12086
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12087
  store i32 %58, i32* %59, align 4, !dbg !12088
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12089
  %61 = lshr i32 %60, 24, !dbg !12090
  %62 = and i32 %61, 15, !dbg !12090
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12091
  store i32 %62, i32* %63, align 4, !dbg !12092
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12093
  %65 = lshr i32 %64, 28, !dbg !12094
  %66 = and i32 %65, 7, !dbg !12094
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12095
  store i32 %66, i32* %67, align 4, !dbg !12096
  ret void, !dbg !12097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12101, metadata !DIExpression()), !dbg !12102
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12103
  ret void, !dbg !12104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12108, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.value(metadata i32 1000, metadata !12109, metadata !DIExpression()), !dbg !12110
  %2 = udiv i32 %0, 1000, !dbg !12111
  %3 = add nsw i32 %2, -1, !dbg !12112
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12113
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12114
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12115
  ret void, !dbg !12116
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12117 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12119, metadata !DIExpression()), !dbg !12121
  %3 = bitcast i32* %2 to i8*, !dbg !12122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12122
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12120, metadata !DIExpression()), !dbg !12123
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12124
  store volatile i32 %4, i32* %2, align 4, !dbg !12123
  %5 = load volatile i32, i32* %2, align 4, !dbg !12125
  %6 = icmp eq i32 %0, -1, !dbg !12126
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12119, metadata !DIExpression()), !dbg !12121
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %8, metadata !12119, metadata !DIExpression()), !dbg !12121
  br label %9, !dbg !12128

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12119, metadata !DIExpression()), !dbg !12121
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12129
  call void @llvm.dbg.value(metadata i32 undef, metadata !12119, metadata !DIExpression()), !dbg !12121
  %12 = shl i32 %11, 15, !dbg !12121
  %13 = ashr i32 %12, 31, !dbg !12121
  %14 = add i32 %13, %10, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %14, metadata !12119, metadata !DIExpression()), !dbg !12121
  %15 = icmp eq i32 %14, 0, !dbg !12128
  br i1 %15, label %16, label %9, !dbg !12128

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12132
  ret void, !dbg !12132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !12133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12135, metadata !DIExpression()), !dbg !12136
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12137
  ret void, !dbg !12138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12144, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata i32 0, metadata !12147, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata i32 0, metadata !12148, metadata !DIExpression()), !dbg !12149
  %2 = icmp eq i32 %0, 0, !dbg !12150
  br i1 %2, label %72, label %3, !dbg !12152

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12153
  %5 = icmp eq i32 %4, 49152, !dbg !12156
  br i1 %5, label %6, label %21, !dbg !12157

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12158
  %8 = select i1 %7, i32 0, i32 5, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %8, metadata !12147, metadata !DIExpression()), !dbg !12149
  %9 = add i32 %0, -120000001, !dbg !12162
  %10 = icmp ult i32 %9, 30000000, !dbg !12162
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12162
  call void @llvm.dbg.value(metadata i32 %11, metadata !12147, metadata !DIExpression()), !dbg !12149
  %12 = icmp ult i32 %9, -30000000, !dbg !12164
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %13, metadata !12147, metadata !DIExpression()), !dbg !12149
  %14 = icmp ugt i32 %0, 60000000, !dbg !12166
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12168
  br i1 %16, label %21, label %17, !dbg !12168

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12169
  %19 = and i1 %18, %15, !dbg !12172
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12172
  br label %21, !dbg !12172

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12149
  call void @llvm.dbg.value(metadata i32 %22, metadata !12147, metadata !DIExpression()), !dbg !12149
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12173
  %24 = icmp eq i32 %23, 32768, !dbg !12175
  br i1 %24, label %25, label %45, !dbg !12176

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12177
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12180
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12180
  call void @llvm.dbg.value(metadata i32 %29, metadata !12147, metadata !DIExpression()), !dbg !12149
  %30 = icmp ugt i32 %0, 12000000, !dbg !12181
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12183
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %33, metadata !12147, metadata !DIExpression()), !dbg !12149
  %34 = icmp ugt i32 %0, 90000000, !dbg !12184
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12186
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %37, metadata !12147, metadata !DIExpression()), !dbg !12149
  %38 = icmp ugt i32 %0, 60000000, !dbg !12187
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12189
  br i1 %40, label %45, label %41, !dbg !12189

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12190
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12193
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12193
  br label %45, !dbg !12193

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12194
  call void @llvm.dbg.value(metadata i32 %46, metadata !12147, metadata !DIExpression()), !dbg !12149
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12195
  %48 = icmp eq i32 %47, 16384, !dbg !12197
  br i1 %48, label %49, label %61, !dbg !12198

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12199
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12202
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %53, metadata !12147, metadata !DIExpression()), !dbg !12149
  %54 = icmp ugt i32 %0, 60000000, !dbg !12203
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12205
  br i1 %56, label %61, label %57, !dbg !12205

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12206
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12209
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12209
  br label %61, !dbg !12209

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12194
  call void @llvm.dbg.value(metadata i32 %62, metadata !12147, metadata !DIExpression()), !dbg !12149
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !12210
  call void @llvm.dbg.value(metadata i32 2, metadata !12145, metadata !DIExpression()), !dbg !12149
  br label %63, !dbg !12211

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12194
  call void @llvm.dbg.value(metadata i32 %64, metadata !12145, metadata !DIExpression()), !dbg !12149
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12212
  call void @llvm.dbg.value(metadata i32 %65, metadata !12146, metadata !DIExpression()), !dbg !12149
  %66 = add nsw i32 %64, -1, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %66, metadata !12145, metadata !DIExpression()), !dbg !12149
  %67 = icmp ne i32 %65, %62, !dbg !12215
  %68 = icmp ne i32 %66, 0, !dbg !12216
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12216
  br i1 %69, label %63, label %70, !dbg !12217, !llvm.loop !12218

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12220
  call void @llvm.dbg.value(metadata i32 %73, metadata !12148, metadata !DIExpression()), !dbg !12149
  ret i32 %73, !dbg !12221
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12222 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12224
  %2 = and i32 %1, 49152, !dbg !12224
  ret i32 %2, !dbg !12225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12228, metadata !DIExpression()), !dbg !12229
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12230
  %3 = and i32 %2, -16, !dbg !12230
  %4 = or i32 %3, %0, !dbg !12230
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12230
  ret void, !dbg !12231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12232 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12233
  %2 = and i32 %1, 15, !dbg !12233
  ret i32 %2, !dbg !12234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12235 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12253, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12254, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 0, metadata !12255, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 0, metadata !12256, metadata !DIExpression()), !dbg !12257
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12258
  %4 = icmp eq i32 %3, 0, !dbg !12260
  br i1 %4, label %5, label %21, !dbg !12261

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12262
  call void @llvm.dbg.value(metadata i32 %6, metadata !12256, metadata !DIExpression()), !dbg !12257
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.149() #26, !dbg !12264
  %8 = icmp eq i32 %7, 1, !dbg !12266
  br i1 %8, label %13, label %9, !dbg !12267

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.150() #26, !dbg !12268
  br label %10, !dbg !12270

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.149() #26, !dbg !12271
  %12 = icmp eq i32 %11, 1, !dbg !12272
  br i1 %12, label %13, label %10, !dbg !12270, !llvm.loop !12273

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12275
  %15 = load i32, i32* %14, align 4, !dbg !12275
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12276
  %17 = load i32, i32* %16, align 4, !dbg !12276
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12277
  %19 = load i32, i32* %18, align 4, !dbg !12277
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.151(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12278
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %20, metadata !12255, metadata !DIExpression()), !dbg !12257
  br label %21, !dbg !12280

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12281
  call void @llvm.dbg.value(metadata i32 %22, metadata !12255, metadata !DIExpression()), !dbg !12257
  ret i32 %22, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12283 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12287, metadata !DIExpression()), !dbg !12288
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.153() #26, !dbg !12289
  %2 = icmp ne i32 %1, 0, !dbg !12291
  call void @llvm.dbg.value(metadata i1 %2, metadata !12287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12288
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !12292
  %4 = icmp ne i32 %3, 0, !dbg !12294
  call void @llvm.dbg.value(metadata i1 undef, metadata !12287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12288
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12295
  %6 = icmp ne i32 %5, 0, !dbg !12297
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12298
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12298
  %9 = zext i1 %8 to i32, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %9, metadata !12287, metadata !DIExpression()), !dbg !12288
  ret i32 %9, !dbg !12299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #7 !dbg !12300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12304, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12305, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.value(metadata i32 0, metadata !12306, metadata !DIExpression()), !dbg !12307
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12308
  %4 = load i32, i32* %3, align 4, !dbg !12308
  %5 = and i32 %4, 63, !dbg !12309
  %6 = udiv i32 %0, %5, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %6, metadata !12306, metadata !DIExpression()), !dbg !12307
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12311
  %8 = load i32, i32* %7, align 4, !dbg !12311
  %9 = and i32 %8, 511, !dbg !12312
  %10 = mul i32 %9, %6, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %10, metadata !12306, metadata !DIExpression()), !dbg !12307
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12314
  %12 = load i32, i32* %11, align 4, !dbg !12314
  %13 = lshr i32 %12, 15, !dbg !12315
  %14 = and i32 %13, 131070, !dbg !12315
  %15 = add nuw nsw i32 %14, 2, !dbg !12315
  %16 = udiv i32 %10, %15, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %16, metadata !12306, metadata !DIExpression()), !dbg !12307
  ret i32 %16, !dbg !12317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.149() unnamed_addr #16 !dbg !12318 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12319
  %2 = lshr i32 %1, 1, !dbg !12320
  %3 = and i32 %2, 1, !dbg !12320
  ret i32 %3, !dbg !12321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.150() unnamed_addr #15 !dbg !12322 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12323
  %2 = or i32 %1, 1, !dbg !12323
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12323
  ret void, !dbg !12324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.151(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12327, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %1, metadata !12328, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %2, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 %3, metadata !12330, metadata !DIExpression()), !dbg !12331
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12332
  %6 = and i32 %5, -4227072, !dbg !12332
  %7 = or i32 %1, %0, !dbg !12332
  %8 = shl i32 %2, 6, !dbg !12332
  %9 = or i32 %7, %8, !dbg !12332
  %10 = or i32 %9, %6, !dbg !12332
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12332
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12333
  %12 = and i32 %11, -196609, !dbg !12333
  %13 = or i32 %12, %3, !dbg !12333
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12333
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12334
  %15 = and i32 %14, -1879048193, !dbg !12334
  %16 = or i32 %15, %3, !dbg !12334
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12334
  ret void, !dbg !12335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12340, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12341, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata i32 0, metadata !12342, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata i32 0, metadata !12343, metadata !DIExpression()), !dbg !12344
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12345
  %4 = load i32, i32* %3, align 4, !dbg !12345
  %5 = lshr i32 %4, 4, !dbg !12345
  %6 = and i32 %5, 15, !dbg !12345
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12345
  %8 = load i8, i8* %7, align 1, !dbg !12345
  %9 = zext i8 %8 to i32, !dbg !12345
  %10 = lshr i32 %0, %9, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %10, metadata !12343, metadata !DIExpression()), !dbg !12344
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12346
  %12 = icmp ult i32 %11, %10, !dbg !12348
  br i1 %12, label %13, label %16, !dbg !12349

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12350
  call void @llvm.dbg.value(metadata i32 %14, metadata !12342, metadata !DIExpression()), !dbg !12344
  %15 = icmp eq i32 %14, 0, !dbg !12352
  br i1 %15, label %16, label %30, !dbg !12354

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.152() #26, !dbg !12355
  br label %17, !dbg !12357

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.153() #26, !dbg !12358
  %19 = icmp eq i32 %18, 1, !dbg !12359
  br i1 %19, label %20, label %17, !dbg !12357, !llvm.loop !12360

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12362
  tail call fastcc void @LL_RCC_SetAHBPrescaler.154(i32 noundef %21) #26, !dbg !12363
  tail call fastcc void @LL_RCC_SetSysClkSource.155() #26, !dbg !12364
  br label %22, !dbg !12365

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.156() #26, !dbg !12366
  %24 = icmp eq i32 %23, 8, !dbg !12367
  br i1 %24, label %25, label %22, !dbg !12365, !llvm.loop !12368

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12370
  %27 = load i32, i32* %26, align 4, !dbg !12370
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.157(i32 noundef %27) #26, !dbg !12371
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12372
  %29 = load i32, i32* %28, align 4, !dbg !12372
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.158(i32 noundef %29) #26, !dbg !12373
  br label %30, !dbg !12374

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12375
  %33 = icmp ugt i32 %32, %10, !dbg !12377
  br i1 %33, label %34, label %36, !dbg !12378

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %35, metadata !12342, metadata !DIExpression()), !dbg !12344
  br label %36, !dbg !12381

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12344
  call void @llvm.dbg.value(metadata i32 %37, metadata !12342, metadata !DIExpression()), !dbg !12344
  %38 = icmp eq i32 %37, 0, !dbg !12382
  br i1 %38, label %39, label %40, !dbg !12384

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !12385
  br label %40, !dbg !12387

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.152() unnamed_addr #15 !dbg !12389 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12390
  %2 = or i32 %1, 16777216, !dbg !12390
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12390
  ret void, !dbg !12391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.153() unnamed_addr #16 !dbg !12392 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12393
  %2 = lshr i32 %1, 25, !dbg !12394
  %3 = and i32 %2, 1, !dbg !12394
  ret i32 %3, !dbg !12395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.154(i32 noundef %0) unnamed_addr #15 !dbg !12396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12398, metadata !DIExpression()), !dbg !12399
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12400
  %3 = and i32 %2, -241, !dbg !12400
  %4 = or i32 %3, %0, !dbg !12400
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12400
  ret void, !dbg !12401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.155() unnamed_addr #15 !dbg !12402 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12404, metadata !DIExpression()), !dbg !12405
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12406
  %2 = and i32 %1, -4, !dbg !12406
  %3 = or i32 %2, 2, !dbg !12406
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12406
  ret void, !dbg !12407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.156() unnamed_addr #16 !dbg !12408 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12409
  %2 = and i32 %1, 12, !dbg !12409
  ret i32 %2, !dbg !12410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.157(i32 noundef %0) unnamed_addr #15 !dbg !12411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12413, metadata !DIExpression()), !dbg !12414
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12415
  %3 = and i32 %2, -7169, !dbg !12415
  %4 = or i32 %3, %0, !dbg !12415
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12415
  ret void, !dbg !12416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.158(i32 noundef %0) unnamed_addr #15 !dbg !12417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12419, metadata !DIExpression()), !dbg !12420
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12421
  %3 = and i32 %2, -57345, !dbg !12421
  %4 = or i32 %3, %0, !dbg !12421
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12421
  ret void, !dbg !12422
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !12423 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12424
  %2 = lshr i32 %1, 29, !dbg !12425
  %3 = and i32 %2, 1, !dbg !12425
  ret i32 %3, !dbg !12426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12427 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12428
  %2 = lshr i32 %1, 27, !dbg !12429
  %3 = and i32 %2, 1, !dbg !12429
  ret i32 %3, !dbg !12430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12435, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata i32 %1, metadata !12436, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12437, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12438, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata i32 0, metadata !12439, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata i32 0, metadata !12440, metadata !DIExpression()), !dbg !12441
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12442
  %6 = icmp eq i32 %5, 0, !dbg !12444
  br i1 %6, label %7, label %27, !dbg !12445

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !12446
  call void @llvm.dbg.value(metadata i32 %8, metadata !12440, metadata !DIExpression()), !dbg !12441
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.159() #26, !dbg !12448
  %10 = icmp eq i32 %9, 1, !dbg !12450
  br i1 %10, label %19, label %11, !dbg !12451

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12452
  br i1 %12, label %13, label %14, !dbg !12455

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !12456
  br label %15, !dbg !12458

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.160() #26, !dbg !12459
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.161() #26, !dbg !12461
  br label %16, !dbg !12462

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.159() #26, !dbg !12463
  %18 = icmp eq i32 %17, 1, !dbg !12464
  br i1 %18, label %19, label %16, !dbg !12462, !llvm.loop !12465

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12467
  %21 = load i32, i32* %20, align 4, !dbg !12467
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12468
  %23 = load i32, i32* %22, align 4, !dbg !12468
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12469
  %25 = load i32, i32* %24, align 4, !dbg !12469
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.151(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !12470
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !12471
  call void @llvm.dbg.value(metadata i32 %26, metadata !12439, metadata !DIExpression()), !dbg !12441
  br label %27, !dbg !12472

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12473
  call void @llvm.dbg.value(metadata i32 %28, metadata !12439, metadata !DIExpression()), !dbg !12441
  ret i32 %28, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.159() unnamed_addr #16 !dbg !12475 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12476
  %2 = lshr i32 %1, 17, !dbg !12477
  %3 = and i32 %2, 1, !dbg !12477
  ret i32 %3, !dbg !12478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12479 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12480
  %2 = or i32 %1, 262144, !dbg !12480
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12480
  ret void, !dbg !12481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.160() unnamed_addr #15 !dbg !12482 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12483
  %2 = and i32 %1, -262145, !dbg !12483
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12483
  ret void, !dbg !12484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.161() unnamed_addr #15 !dbg !12485 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12486
  %2 = or i32 %1, 65536, !dbg !12486
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12486
  ret void, !dbg !12487
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12488 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12491, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !12491, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !12491, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12507
  ret void, !dbg !12508
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12509 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12513, metadata !DIExpression()), !dbg !12515
  %2 = icmp eq i8* %0, null, !dbg !12516
  br i1 %2, label %29, label %3, !dbg !12518

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12519
  %5 = icmp eq i8 %4, 0, !dbg !12520
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12521
  br i1 %6, label %29, label %8, !dbg !12521

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12514, metadata !DIExpression()), !dbg !12515
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12522

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12514, metadata !DIExpression()), !dbg !12515
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !12524
  br i1 %10, label %11, label %15, !dbg !12529

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12530
  %13 = load i8*, i8** %12, align 4, !dbg !12530
  %14 = icmp eq i8* %13, %0, !dbg !12531
  br i1 %14, label %29, label %15, !dbg !12532

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12533
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12514, metadata !DIExpression()), !dbg !12515
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12534
  br i1 %17, label %7, label %8, !dbg !12535, !llvm.loop !12536

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12514, metadata !DIExpression()), !dbg !12515
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !12538
  br i1 %20, label %21, label %26, !dbg !12542

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12543
  %23 = load i8*, i8** %22, align 4, !dbg !12543
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !12544
  %25 = icmp eq i32 %24, 0, !dbg !12545
  br i1 %25, label %29, label %26, !dbg !12546

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12547
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12514, metadata !DIExpression()), !dbg !12515
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12548
  br i1 %28, label %29, label %18, !dbg !12522, !llvm.loop !12549

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12515
  ret %struct.device* %30, !dbg !12551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #7 !dbg !12552 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12556, metadata !DIExpression()), !dbg !12557
  %2 = icmp eq %struct.device* %0, null, !dbg !12558
  br i1 %2, label %14, label %3, !dbg !12560

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12561
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12561
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12562
  %7 = load i8, i8* %6, align 1, !dbg !12562
  %8 = and i8 %7, 1, !dbg !12562
  %9 = icmp eq i8 %8, 0, !dbg !12562
  br i1 %9, label %14, label %10, !dbg !12563

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12564
  %12 = load i8, i8* %11, align 1, !dbg !12564
  %13 = icmp eq i8 %12, 0, !dbg !12565
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12557
  ret i1 %15, !dbg !12566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !12567 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12572, metadata !DIExpression()), !dbg !12573
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12574
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12576 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12584, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12585, metadata !DIExpression()), !dbg !12589
  call void @llvm.dbg.value(metadata i8* %2, metadata !12586, metadata !DIExpression()), !dbg !12589
  %5 = bitcast i32* %4 to i8*, !dbg !12590
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12590
  call void @llvm.dbg.value(metadata i32 0, metadata !12587, metadata !DIExpression()), !dbg !12589
  store i32 0, i32* %4, align 4, !dbg !12591
  call void @llvm.dbg.value(metadata i32* %4, metadata !12587, metadata !DIExpression(DW_OP_deref)), !dbg !12589
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12592
  call void @llvm.dbg.value(metadata i16* %6, metadata !12588, metadata !DIExpression()), !dbg !12589
  %7 = load i32, i32* %4, align 4, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %7, metadata !12587, metadata !DIExpression()), !dbg !12589
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12594
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12595
  ret i32 %8, !dbg !12596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12597 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12601, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata i32* %1, metadata !12602, metadata !DIExpression()), !dbg !12607
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12608
  %4 = load i16*, i16** %3, align 4, !dbg !12608
  call void @llvm.dbg.value(metadata i16* %4, metadata !12603, metadata !DIExpression()), !dbg !12607
  %5 = icmp eq i16* %4, null, !dbg !12609
  br i1 %5, label %14, label %6, !dbg !12610

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12611
  call void @llvm.dbg.value(metadata i32 %7, metadata !12604, metadata !DIExpression()), !dbg !12611
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12612
  %9 = load i16, i16* %8, align 2, !dbg !12612
  %10 = add i16 %9, -32767, !dbg !12613
  %11 = icmp ult i16 %10, 2, !dbg !12613
  %12 = add i32 %7, 1, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %12, metadata !12604, metadata !DIExpression()), !dbg !12611
  br i1 %11, label %13, label %6, !dbg !12613, !llvm.loop !12616

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12619
  br label %14, !dbg !12620

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12622 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12626, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 %1, metadata !12627, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12628, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i8* %3, metadata !12629, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 0, metadata !12630, metadata !DIExpression()), !dbg !12638
  %5 = icmp eq i32 %1, 0, !dbg !12639
  br i1 %5, label %16, label %8, !dbg !12640

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12630, metadata !DIExpression()), !dbg !12638
  %7 = icmp eq i32 %15, %1, !dbg !12639
  br i1 %7, label %16, label %8, !dbg !12640, !llvm.loop !12641

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12630, metadata !DIExpression()), !dbg !12638
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12643
  %11 = load i16, i16* %10, align 2, !dbg !12643
  call void @llvm.dbg.value(metadata i16 %11, metadata !12632, metadata !DIExpression()), !dbg !12644
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12645
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12635, metadata !DIExpression()), !dbg !12644
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %13, metadata !12636, metadata !DIExpression()), !dbg !12644
  %14 = icmp slt i32 %13, 0, !dbg !12647
  %15 = add nuw i32 %9, 1, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %15, metadata !12630, metadata !DIExpression()), !dbg !12638
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12651 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12655, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12656, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12657, metadata !DIExpression()), !dbg !12658
  %2 = sext i16 %0 to i32, !dbg !12659
  %3 = icmp slt i16 %0, 1, !dbg !12661
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12662
  %6 = add nsw i32 %2, -1, !dbg !12662
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12662
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12662
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12656, metadata !DIExpression()), !dbg !12658
  ret %struct.device* %8, !dbg !12663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12664 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12666, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12667, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %2, metadata !12668, metadata !DIExpression()), !dbg !12671
  %5 = bitcast i32* %4 to i8*, !dbg !12672
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12672
  call void @llvm.dbg.value(metadata i32 0, metadata !12669, metadata !DIExpression()), !dbg !12671
  store i32 0, i32* %4, align 4, !dbg !12673
  call void @llvm.dbg.value(metadata i32* %4, metadata !12669, metadata !DIExpression(DW_OP_deref)), !dbg !12671
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12674
  call void @llvm.dbg.value(metadata i16* %6, metadata !12670, metadata !DIExpression()), !dbg !12671
  %7 = load i32, i32* %4, align 4, !dbg !12675
  call void @llvm.dbg.value(metadata i32 %7, metadata !12669, metadata !DIExpression()), !dbg !12671
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12676
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12677
  ret i32 %8, !dbg !12678
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12681, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32* %1, metadata !12682, metadata !DIExpression()), !dbg !12686
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12687
  %4 = load i16*, i16** %3, align 4, !dbg !12687
  call void @llvm.dbg.value(metadata i16* %4, metadata !12683, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32 0, metadata !12684, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i32 0, metadata !12685, metadata !DIExpression()), !dbg !12686
  %5 = icmp eq i16* %4, null, !dbg !12688
  br i1 %5, label %22, label %6, !dbg !12690

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12684, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata i16* %8, metadata !12683, metadata !DIExpression()), !dbg !12686
  %9 = load i16, i16* %8, align 2, !dbg !12691
  %10 = icmp eq i16 %9, -32768, !dbg !12695
  call void @llvm.dbg.value(metadata i32 undef, metadata !12684, metadata !DIExpression()), !dbg !12686
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12696
  call void @llvm.dbg.value(metadata i16* %11, metadata !12683, metadata !DIExpression()), !dbg !12686
  %12 = zext i1 %10 to i32, !dbg !12697
  %13 = add i32 %7, %12, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %13, metadata !12684, metadata !DIExpression()), !dbg !12686
  %14 = icmp eq i32 %13, 2, !dbg !12698
  br i1 %14, label %15, label %6, !dbg !12699

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12686
  call void @llvm.dbg.value(metadata i32 %16, metadata !12685, metadata !DIExpression()), !dbg !12686
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12700
  %18 = load i16, i16* %17, align 2, !dbg !12700
  %19 = icmp eq i16 %18, 32767, !dbg !12701
  %20 = add i32 %16, 1, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %20, metadata !12685, metadata !DIExpression()), !dbg !12686
  br i1 %19, label %21, label %15, !dbg !12704, !llvm.loop !12705

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12707
  br label %22, !dbg !12708

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12709
  call void @llvm.dbg.value(metadata i16* %23, metadata !12683, metadata !DIExpression()), !dbg !12686
  ret i16* %23, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #7 !dbg !12711 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12714
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12715
  ret i32* %2, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12717 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12867, metadata !DIExpression()), !dbg !12870
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12868, metadata !DIExpression()), !dbg !12870
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12869, metadata !DIExpression()), !dbg !12870
  ret void, !dbg !12871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12876, metadata !DIExpression()), !dbg !12878
  call void @llvm.dbg.value(metadata i32 %1, metadata !12877, metadata !DIExpression()), !dbg !12878
  ret void, !dbg !12879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12880 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12884, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 %1, metadata !12885, metadata !DIExpression()), !dbg !12886
  ret void, !dbg !12887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12892, metadata !DIExpression()), !dbg !12894
  call void @llvm.dbg.value(metadata i8* %1, metadata !12893, metadata !DIExpression()), !dbg !12894
  ret i32 -134, !dbg !12895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12900, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.value(metadata i8* %1, metadata !12901, metadata !DIExpression()), !dbg !12902
  ret i32 -134, !dbg !12903
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12907, metadata !DIExpression()), !dbg !12908
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12909, !srcloc !12915
  call void @llvm.dbg.value(metadata i32 undef, metadata !12912, metadata !DIExpression()) #25, !dbg !12916
  call void @llvm.dbg.value(metadata i32 undef, metadata !12913, metadata !DIExpression()) #25, !dbg !12916
  br label %3, !dbg !12917

3:                                                ; preds = %3, %1
  br label %3, !dbg !12918, !llvm.loop !12921
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12928, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12929, metadata !DIExpression()), !dbg !12930
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12931
  unreachable, !dbg !12931
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12934, metadata !DIExpression()), !dbg !12935
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12936
  unreachable, !dbg !12936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12939, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12940, metadata !DIExpression()), !dbg !12943
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12944, !srcloc !12915
  call void @llvm.dbg.value(metadata i32 undef, metadata !12912, metadata !DIExpression()) #25, !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12913, metadata !DIExpression()) #25, !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12941, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12942, metadata !DIExpression()), !dbg !12943
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !12947
  %4 = icmp eq i32 %0, 4, !dbg !12948
  br i1 %4, label %5, label %6, !dbg !12953

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.170, i32 0, i32 0), i32 noundef 148) #27, !dbg !12954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.171, i32 0, i32 0)) #27, !dbg !12954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.170, i32 0, i32 0), i32 noundef 148) #27, !dbg !12954
  unreachable, !dbg !12954

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %7, metadata !12912, metadata !DIExpression()) #25, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %7, metadata !12941, metadata !DIExpression()), !dbg !12943
  %8 = tail call fastcc %struct.k_thread* @k_current_get.172() #28, !dbg !12956
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12942, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i32 undef, metadata !12957, metadata !DIExpression()) #25, !dbg !12960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !12962, !srcloc !12963
  tail call fastcc void @k_thread_abort.173(%struct.k_thread* noundef %8) #26, !dbg !12964
  ret void, !dbg !12967
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.172() unnamed_addr #10 !dbg !12968 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.174() #28, !dbg !12972
  ret %struct.k_thread* %1, !dbg !12973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.173(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12978, metadata !DIExpression()), !dbg !12979
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12980, !srcloc !12982
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.174() unnamed_addr #10 !dbg !12985 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12986, !srcloc !12988
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12989
  ret %struct.k_thread* %1, !dbg !12990
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12991 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12995, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %1, metadata !12996, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.value(metadata i32 %2, metadata !12997, metadata !DIExpression()), !dbg !12998
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12999
  ret void, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13001 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13005, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i8* %1, metadata !13006, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 %2, metadata !13007, metadata !DIExpression()), !dbg !13008
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13011 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13012
  ret void, !dbg !13013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13016, metadata !DIExpression()), !dbg !13017
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13018
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13019
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13020
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13021
  %4 = trunc i32 %0 to i8, !dbg !13022
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13023
  store i8 %4, i8* %5, align 4, !dbg !13024
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13025
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13026
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13027
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13028
  store i8* %8, i8** %9, align 4, !dbg !13029
  ret void, !dbg !13030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13033, metadata !DIExpression()), !dbg !13039
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13034, metadata !DIExpression()), !dbg !13039
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13035, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i8* null, metadata !13038, metadata !DIExpression()), !dbg !13039
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13042
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13043
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13044
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13045
  ret void, !dbg !13046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13047 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13051, metadata !DIExpression()), !dbg !13052
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13053
  ret i8* %2, !dbg !13054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13060, metadata !DIExpression()), !dbg !13061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13062
  %3 = load i8, i8* %2, align 1, !dbg !13063
  %4 = and i8 %3, -5, !dbg !13063
  store i8 %4, i8* %2, align 1, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !13065 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13068
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13069
  %3 = ptrtoint i8* %2 to i32, !dbg !13078
  %4 = add i32 %3, 2048, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %4, metadata !13073, metadata !DIExpression()) #25, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %4, metadata !13081, metadata !DIExpression()) #25, !dbg !13084
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13086, !srcloc !13087
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13088
  %6 = or i32 %5, 512, !dbg !13088
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13088
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -2, i32 noundef 255) #27, !dbg !13089
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -5, i32 noundef 0) #27, !dbg !13092
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -12, i32 noundef 0) #27, !dbg !13093
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -11, i32 noundef 0) #27, !dbg !13094
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -10, i32 noundef 0) #27, !dbg !13095
  tail call fastcc void @__NVIC_SetPriority.181(i32 noundef -4, i32 noundef 0) #27, !dbg !13096
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13097
  %8 = or i32 %7, 458752, !dbg !13097
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13097
  tail call void @z_arm_fault_init() #27, !dbg !13098
  tail call void @z_arm_cpu_idle_init() #27, !dbg !13099
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13100
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13103
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !13104
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !13105
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13106
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13106
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13067, metadata !DIExpression()), !dbg !13107
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13108
  call void @z_device_state_init() #27, !dbg !13109
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13110
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13111
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13112
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !13113
  unreachable, !dbg !13113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2233, metadata !DIExpression()), !dbg !13114
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13115
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13115
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2234, metadata !DIExpression()), !dbg !13114
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2234, metadata !DIExpression()), !dbg !13114
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13116
  br i1 %7, label %8, label %35, !dbg !13117

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2234, metadata !DIExpression()), !dbg !13114
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13118
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13118
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2244, metadata !DIExpression()), !dbg !13119
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13120
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13120
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %14, metadata !2248, metadata !DIExpression()), !dbg !13119
  %15 = icmp eq %struct.device* %11, null, !dbg !13122
  br i1 %15, label %32, label %16, !dbg !13124

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13125
  br i1 %17, label %26, label %18, !dbg !13128

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13129
  call void @llvm.dbg.value(metadata i32 %19, metadata !2248, metadata !DIExpression()), !dbg !13119
  %20 = icmp ult i32 %19, 255, !dbg !13131
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %21, metadata !2248, metadata !DIExpression()), !dbg !13119
  %22 = trunc i32 %21 to i8, !dbg !13132
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13133
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13133
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13134
  store i8 %22, i8* %25, align 1, !dbg !13135
  br label %26, !dbg !13136

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13137
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13137
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13138
  %30 = load i8, i8* %29, align 1, !dbg !13139
  %31 = or i8 %30, 1, !dbg !13139
  store i8 %31, i8* %29, align 1, !dbg !13139
  br label %32, !dbg !13140

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2234, metadata !DIExpression()), !dbg !13114
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13116
  br i1 %34, label %8, label %35, !dbg !13117, !llvm.loop !13142

35:                                               ; preds = %32, %1
  ret void, !dbg !13144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.181(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13147, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata i32 %1, metadata !13148, metadata !DIExpression()), !dbg !13149
  %3 = trunc i32 %1 to i8, !dbg !13150
  %4 = shl i8 %3, 4, !dbg !13150
  %5 = and i32 %0, 15, !dbg !13153
  %6 = add nsw i32 %5, -4, !dbg !13154
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13155
  store volatile i8 %4, i8* %7, align 1, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: optsize
declare !dbg !13158 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13162, metadata !DIExpression()), !dbg !13163
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13164
  store i8 1, i8* %2, align 1, !dbg !13165
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13166
  store i8 1, i8* %3, align 4, !dbg !13167
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13168
  store i32 0, i32* %4, align 4, !dbg !13169
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13170
  store i32 0, i32* %5, align 4, !dbg !13171
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !13172
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13173
  ret void, !dbg !13174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13175 {
  tail call void @z_sched_init() #27, !dbg !13180
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13181
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.182, i32 0, i32 0)) #27, !dbg !13182
  call void @llvm.dbg.value(metadata i8* %1, metadata !13179, metadata !DIExpression()), !dbg !13183
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13184
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !13185
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13186
  ret i8* %1, !dbg !13187
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !13188 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13192, metadata !DIExpression()), !dbg !13193
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !13194
  unreachable, !dbg !13195
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13196 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13198, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i8* %1, metadata !13199, metadata !DIExpression()), !dbg !13201
  call void @llvm.dbg.value(metadata i8* %2, metadata !13200, metadata !DIExpression()), !dbg !13201
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13202
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13203
  tail call void @boot_banner() #27, !dbg !13204
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13205
  tail call void @z_init_static_threads() #27, !dbg !13206
  tail call void @main() #27, !dbg !13207
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13208
  %5 = and i8 %4, -2, !dbg !13208
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13208
  ret void, !dbg !13209
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13210 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13220, metadata !DIExpression()), !dbg !13222
  call void @llvm.dbg.value(metadata i8* %1, metadata !13221, metadata !DIExpression()), !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13224 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13226, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata i8* %1, metadata !13227, metadata !DIExpression()), !dbg !13228
  ret void, !dbg !13229
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13230 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13231, !srcloc !13238
  call void @llvm.dbg.value(metadata i32 %1, metadata !13234, metadata !DIExpression()) #25, !dbg !13239
  %2 = icmp ne i32 %1, 0, !dbg !13240
  ret i1 %2, !dbg !13241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13242 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13244
  %3 = load i8, i8* %2, align 4, !dbg !13245
  %4 = or i8 %3, 1, !dbg !13245
  store i8 %4, i8* %2, align 4, !dbg !13245
  ret void, !dbg !13246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13247 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13248
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13249
  %3 = load i8, i8* %2, align 4, !dbg !13250
  %4 = and i8 %3, -2, !dbg !13250
  store i8 %4, i8* %2, align 4, !dbg !13250
  ret void, !dbg !13251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #7 !dbg !13252 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13253
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13254
  %3 = load i8, i8* %2, align 4, !dbg !13254
  %4 = and i8 %3, 1, !dbg !13255
  %5 = icmp ne i8 %4, 0, !dbg !13256
  ret i1 %5, !dbg !13257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13262, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.value(metadata i8* %1, metadata !13263, metadata !DIExpression()), !dbg !13264
  ret i32 -88, !dbg !13265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13266 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13270, metadata !DIExpression()), !dbg !13271
  ret i8* null, !dbg !13272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !13273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13277, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i8* %1, metadata !13278, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i32 %2, metadata !13279, metadata !DIExpression()), !dbg !13280
  ret i32 -88, !dbg !13281
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2373, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i8* %1, metadata !2374, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 %2, metadata !2375, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 0, metadata !2376, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i8 undef, metadata !2378, metadata !DIExpression()), !dbg !13282
  %4 = icmp eq i8* %1, null, !dbg !13283
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13285
  br i1 %6, label %46, label %7, !dbg !13285

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13286
  %9 = load i8, i8* %8, align 1, !dbg !13286
  call void @llvm.dbg.value(metadata i8 %9, metadata !2378, metadata !DIExpression()), !dbg !13282
  %10 = add i32 %2, -1, !dbg !13287
  call void @llvm.dbg.value(metadata i32 %10, metadata !2375, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i8 0, metadata !2379, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %9, metadata !2378, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 0, metadata !2376, metadata !DIExpression()), !dbg !13282
  %11 = icmp eq i8 %9, 0, !dbg !13289
  br i1 %11, label %12, label %15, !dbg !13291

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13292
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13293
  store i8 0, i8* %14, align 1, !dbg !13294
  br label %46, !dbg !13295

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2379, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.value(metadata i8 %17, metadata !2378, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 %18, metadata !2376, metadata !DIExpression()), !dbg !13282
  %19 = zext i8 %17 to i32, !dbg !13296
  %20 = zext i8 %16 to i32, !dbg !13297
  %21 = shl nuw i32 1, %20, !dbg !13297
  call void @llvm.dbg.value(metadata i32 %21, metadata !2377, metadata !DIExpression()), !dbg !13282
  %22 = and i32 %21, %19, !dbg !13299
  %23 = icmp eq i32 %22, 0, !dbg !13301
  br i1 %23, label %42, label %24, !dbg !13302

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13303
  %26 = sub i32 %10, %18, !dbg !13304
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13305
  %28 = load i8*, i8** %27, align 4, !dbg !13305
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13306
  %30 = load i32, i32* %29, align 4, !dbg !13306
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13307
  %32 = add i32 %31, %18, !dbg !13308
  call void @llvm.dbg.value(metadata i32 %32, metadata !2376, metadata !DIExpression()), !dbg !13282
  %33 = trunc i32 %21 to i8, !dbg !13309
  %34 = xor i8 %33, -1, !dbg !13309
  %35 = and i8 %17, %34, !dbg !13309
  call void @llvm.dbg.value(metadata i8 %35, metadata !2378, metadata !DIExpression()), !dbg !13282
  %36 = icmp eq i8 %35, 0, !dbg !13310
  br i1 %36, label %12, label %37, !dbg !13312

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13313
  %39 = sub i32 %10, %32, !dbg !13315
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.183, i32 0, i32 0), i32 noundef 1) #26, !dbg !13316
  %41 = add i32 %40, %32, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %41, metadata !2376, metadata !DIExpression()), !dbg !13282
  br label %42, !dbg !13318

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13282
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13282
  call void @llvm.dbg.value(metadata i8 %44, metadata !2378, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 %43, metadata !2376, metadata !DIExpression()), !dbg !13282
  %45 = add i8 %16, 1, !dbg !13319
  call void @llvm.dbg.value(metadata i8 %45, metadata !2379, metadata !DIExpression()), !dbg !13288
  br label %15, !dbg !13291

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.184, i32 0, i32 0), %3 ], !dbg !13282
  ret i8* %47, !dbg !13320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13321 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13325, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 %1, metadata !13326, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i8* %2, metadata !13327, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 %3, metadata !13328, metadata !DIExpression()), !dbg !13330
  %5 = icmp ult i32 %1, %3, !dbg !13331
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13331
  call void @llvm.dbg.value(metadata i32 %6, metadata !13329, metadata !DIExpression()), !dbg !13330
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !13332
  ret i32 %6, !dbg !13333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13334 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13338, metadata !DIExpression()), !dbg !13339
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !13340
  ret void, !dbg !13341
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13351, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13352, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 %2, metadata !13353, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13354, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i8* %4, metadata !13355, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i8* %5, metadata !13356, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i8* %6, metadata !13357, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 %7, metadata !13358, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 %8, metadata !13359, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i8* undef, metadata !13360, metadata !DIExpression()), !dbg !13362
  %11 = icmp eq i32 %7, 15, !dbg !13363
  br i1 %11, label %12, label %15, !dbg !13363

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13363
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !13363
  br i1 %14, label %19, label %18, !dbg !13363

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13363
  %17 = icmp ult i32 %16, 31, !dbg !13363
  br i1 %17, label %19, label %18, !dbg !13363

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 536) #27, !dbg !13367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.197, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !13367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 536) #27, !dbg !13367
  unreachable, !dbg !13367

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13369
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #26, !dbg !13370
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13371
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !13372
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !13373
  call void @llvm.dbg.value(metadata i8* %22, metadata !13361, metadata !DIExpression()), !dbg !13362
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !13374
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13375
  store i8* null, i8** %23, align 4, !dbg !13376
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13377
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13377
  br i1 %25, label %29, label %26, !dbg !13379

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !13380
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !13380
  br label %29, !dbg !13381

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !13362
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13382
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !13384
  ret i8* %22, !dbg !13385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13386 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13390, metadata !DIExpression()), !dbg !13391
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13392
  ret i1 %2, !dbg !13393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !13394 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13399, metadata !DIExpression()), !dbg !13400
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13401
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !13402
  ret void, !dbg !13403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !13404 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13409, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %1, metadata !13410, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %2, metadata !13411, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %3, metadata !13412, metadata !DIExpression()), !dbg !13413
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13414
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13415
  %6 = trunc i32 %3 to i8, !dbg !13416
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13417
  store i8 %6, i8* %7, align 4, !dbg !13418
  %8 = trunc i32 %2 to i8, !dbg !13419
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13420
  store i8 %8, i8* %9, align 1, !dbg !13421
  %10 = trunc i32 %1 to i8, !dbg !13422
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13423
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13423
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13423
  store i8 %10, i8* %13, align 2, !dbg !13424
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13425
  store i8 0, i8* %14, align 1, !dbg !13426
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !13427
  ret void, !dbg !13428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !13429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13433, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13434, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 %2, metadata !13435, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 0, metadata !13440, metadata !DIExpression()), !dbg !13441
  %4 = add i32 %2, 7, !dbg !13442
  %5 = and i32 %4, -8, !dbg !13442
  %6 = add i32 %5, 64, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %6, metadata !13436, metadata !DIExpression()), !dbg !13441
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.198(%struct.z_thread_stack_element* noundef %1) #26, !dbg !13444
  call void @llvm.dbg.value(metadata i8* %7, metadata !13439, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 %5, metadata !13437, metadata !DIExpression()), !dbg !13441
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13445
  call void @llvm.dbg.value(metadata i8* %8, metadata !13438, metadata !DIExpression()), !dbg !13441
  call void @llvm.dbg.value(metadata i32 0, metadata !13440, metadata !DIExpression()), !dbg !13441
  %9 = ptrtoint i8* %7 to i32, !dbg !13446
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13447
  store i32 %9, i32* %10, align 4, !dbg !13448
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13449
  store i32 %5, i32* %11, align 4, !dbg !13450
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13451
  store i32 0, i32* %12, align 4, !dbg !13452
  call void @llvm.dbg.value(metadata i8* %8, metadata !13438, metadata !DIExpression()), !dbg !13441
  ret i8* %8, !dbg !13453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.198(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13454 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13458, metadata !DIExpression()), !dbg !13459
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13460
  ret i8* %2, !dbg !13461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13462 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13467, metadata !DIExpression()), !dbg !13468
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13469
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13470
  ret void, !dbg !13471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13472 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13476
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !13477
  ret void, !dbg !13478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13479 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13483, metadata !DIExpression()), !dbg !13484
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13485
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13486
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13487
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13488
  ret void, !dbg !13489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13490 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13495, metadata !DIExpression()), !dbg !13496
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13497
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13498
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13499
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13500
  ret void, !dbg !13501
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13502 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13519, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13510, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13511, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i32 %2, metadata !13512, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13513, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i8* %4, metadata !13514, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i8* %5, metadata !13515, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i8* %6, metadata !13516, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i32 %7, metadata !13517, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i32 %8, metadata !13518, metadata !DIExpression()), !dbg !13520
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13521, !srcloc !13238
  call void @llvm.dbg.value(metadata i32 %11, metadata !13234, metadata !DIExpression()) #25, !dbg !13526
  %12 = icmp eq i32 %11, 0, !dbg !13527
  br i1 %12, label %14, label %13, !dbg !13528

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.199, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 647) #27, !dbg !13529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0)) #27, !dbg !13529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 647) #27, !dbg !13529
  unreachable, !dbg !13529

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13519, metadata !DIExpression()), !dbg !13520
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !13531
  %17 = icmp eq i64 %15, -1, !dbg !13532
  br i1 %17, label %19, label %18, !dbg !13534

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !13535
  br label %19, !dbg !13537

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13539 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13544, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13543, metadata !DIExpression()), !dbg !13545
  %4 = icmp eq i64 %3, 0, !dbg !13546
  br i1 %4, label %5, label %6, !dbg !13548

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13549
  br label %7, !dbg !13551

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13552
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13559, metadata !DIExpression()), !dbg !13560
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13561, !srcloc !13563
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13566 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13569, metadata !DIExpression()), !dbg !13570
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13568, metadata !DIExpression()), !dbg !13570
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13571
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !13572
  ret void, !dbg !13573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13574 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13576, metadata !DIExpression()), !dbg !13595
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13596

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 750) #27, !dbg !13600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !13600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 750) #27, !dbg !13600
  unreachable, !dbg !13600

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13576, metadata !DIExpression()), !dbg !13595
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13603
  br i1 %4, label %6, label %5, !dbg !13604

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !13605
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13593, metadata !DIExpression()), !dbg !13606
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !13607

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13611
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13611
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13613
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13613
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13614
  %12 = load i32, i32* %11, align 4, !dbg !13614
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13615
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13615
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13616
  %16 = load i8*, i8** %15, align 4, !dbg !13616
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13617
  %18 = load i8*, i8** %17, align 4, !dbg !13617
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13618
  %20 = load i8*, i8** %19, align 4, !dbg !13618
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13619
  %22 = load i32, i32* %21, align 4, !dbg !13619
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13620
  %24 = load i32, i32* %23, align 4, !dbg !13620
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !13621
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13622
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !13623
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !13624
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !13624
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13625
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !13576, metadata !DIExpression()), !dbg !13595
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13626
  br i1 %30, label %1, label %2, !dbg !13596, !llvm.loop !13627

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 781) #27, !dbg !13629
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !13629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.196, i32 0, i32 0), i32 noundef 781) #27, !dbg !13629
  unreachable, !dbg !13629

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !13593, metadata !DIExpression()), !dbg !13606
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13632
  br i1 %34, label %36, label %35, !dbg !13633

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !13634
  ret void, !dbg !13635

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !13636
  %38 = load i32, i32* %37, align 4, !dbg !13636
  %39 = icmp eq i32 %38, -1, !dbg !13639
  br i1 %39, label %48, label %40, !dbg !13640

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !13641
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !13641
  %43 = icmp sgt i32 %38, 0, !dbg !13643
  %44 = select i1 %43, i32 %38, i32 0, !dbg !13643
  %45 = zext i32 %44 to i64, !dbg !13643
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.202(i64 noundef %45) #26, !dbg !13643
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !13644
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !13644
  br label %48, !dbg !13645

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !13646
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !13593, metadata !DIExpression()), !dbg !13606
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13647
  br i1 %50, label %31, label %32, !dbg !13607, !llvm.loop !13648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.202(i64 noundef %0) unnamed_addr #4 !dbg !13650 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13652, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata i64 %0, metadata !13654, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 1000, metadata !13657, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i32 10000, metadata !13658, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 1, metadata !13659, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 0, metadata !13660, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 1, metadata !13661, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 0, metadata !13662, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 1, metadata !13663, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i8 0, metadata !13664, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i64 0, metadata !13665, metadata !DIExpression()), !dbg !13669
  %2 = mul i64 %0, 10, !dbg !13671
  ret i64 %2, !dbg !13677
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !13678 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13680, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i8* %1, metadata !13681, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i8* %2, metadata !13682, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.value(metadata i8* %3, metadata !13683, metadata !DIExpression()), !dbg !13684
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13685
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13686
  %7 = load i8, i8* %6, align 4, !dbg !13687
  %8 = or i8 %7, 4, !dbg !13687
  store i8 %8, i8* %6, align 4, !dbg !13687
  tail call void @z_thread_essential_clear() #26, !dbg !13688
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13689
  unreachable, !dbg !13689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct._sfnode* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13695, metadata !DIExpression()), !dbg !13697
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13698
  %3 = load i32, i32* %2, align 4, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %3, metadata !13696, metadata !DIExpression()), !dbg !13697
  %4 = icmp eq i32 %3, 0, !dbg !13699
  br i1 %4, label %10, label %5, !dbg !13701

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13702
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13705
  %8 = zext i8 %7 to i32, !dbg !13706
  %9 = icmp eq i32 %6, %8, !dbg !13707
  br i1 %9, label %11, label %10, !dbg !13708

10:                                               ; preds = %5, %1
  br label %11, !dbg !13709

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13697
  ret i1 %12, !dbg !13710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct._sfnode* nocapture noundef %0) local_unnamed_addr #9 !dbg !13711 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13713, metadata !DIExpression()), !dbg !13714
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13715
  %3 = load i32, i32* %2, align 4, !dbg !13715
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13717
  %5 = zext i8 %4 to i32, !dbg !13718
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13719
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13720
  %8 = or i32 %7, %5, !dbg !13721
  %9 = icmp eq i32 %3, %8, !dbg !13722
  br i1 %9, label %10, label %11, !dbg !13723

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13724
  br label %11, !dbg !13725

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct._sfnode* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13727 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13731, metadata !DIExpression()), !dbg !13732
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13733
  %3 = zext i8 %2 to i32, !dbg !13734
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13735
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13736
  %6 = or i32 %5, %3, !dbg !13737
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13738
  store i32 %6, i32* %7, align 4, !dbg !13739
  ret void, !dbg !13740
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()), !dbg !13746
  ret i32 -134, !dbg !13747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13752, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 %1, metadata !13753, metadata !DIExpression()), !dbg !13754
  ret i32 -134, !dbg !13755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13763, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13764, metadata !DIExpression()), !dbg !13765
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13766
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13768
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13765
  ret i32 %6, !dbg !13769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13770 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13774, metadata !DIExpression()), !dbg !13775
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13776
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13775
  ret i32 %3, !dbg !13778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13779 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13781
  ret void, !dbg !13782
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !13783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13785, metadata !DIExpression()), !dbg !13788
  call void @llvm.dbg.value(metadata i8* %1, metadata !13786, metadata !DIExpression()), !dbg !13788
  call void @llvm.dbg.value(metadata i8* %2, metadata !13787, metadata !DIExpression()), !dbg !13788
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13789
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13789
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13789
  %7 = load i8, i8* %6, align 2, !dbg !13789
  %8 = icmp sgt i8 %7, -1, !dbg !13789
  br i1 %8, label %10, label %9, !dbg !13792

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.213, i32 0, i32 0), i32 noundef 39) #27, !dbg !13793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.213, i32 0, i32 0), i32 noundef 39) #27, !dbg !13793
  unreachable, !dbg !13793

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13795, !srcloc !13802
  call void @llvm.dbg.value(metadata i32 undef, metadata !13798, metadata !DIExpression()) #25, !dbg !13803
  call void @llvm.dbg.value(metadata i32 undef, metadata !13799, metadata !DIExpression()) #25, !dbg !13803
  tail call fastcc void @k_cpu_idle() #26, !dbg !13804
  br label %10, !dbg !13805, !llvm.loop !13806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13808 {
  tail call void @arch_cpu_idle() #27, !dbg !13809
  ret void, !dbg !13810
}

; Function Attrs: optsize
declare !dbg !13811 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct._sfnode* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13812 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13816, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i1 %1, metadata !13817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13822
  %3 = icmp eq %struct._sfnode* %0, null, !dbg !13823
  br i1 %3, label %13, label %4, !dbg !13824

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef nonnull %0) #26, !dbg !13825
  %6 = icmp eq i8 %5, 0, !dbg !13826
  br i1 %6, label %13, label %7, !dbg !13827

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13819, metadata !DIExpression()), !dbg !13828
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 1, !dbg !13829
  %9 = bitcast %struct._sfnode* %8 to i8**, !dbg !13829
  %10 = load i8*, i8** %9, align 4, !dbg !13829
  call void @llvm.dbg.value(metadata i8* %10, metadata !13818, metadata !DIExpression()), !dbg !13822
  br i1 %1, label %11, label %15, !dbg !13830

11:                                               ; preds = %7
  %12 = bitcast %struct._sfnode* %0 to i8*, !dbg !13831
  tail call void @k_free(i8* noundef nonnull %12) #27, !dbg !13832
  br label %15, !dbg !13835

13:                                               ; preds = %4, %2
  %14 = bitcast %struct._sfnode* %0 to i8*, !dbg !13836
  call void @llvm.dbg.value(metadata i8* %14, metadata !13818, metadata !DIExpression()), !dbg !13822
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13838
  call void @llvm.dbg.value(metadata i8* %16, metadata !13818, metadata !DIExpression()), !dbg !13822
  ret i8* %16, !dbg !13839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13840 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13844, metadata !DIExpression()), !dbg !13845
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13846
  %3 = load i32, i32* %2, align 4, !dbg !13846
  %4 = trunc i32 %3 to i8, !dbg !13847
  %5 = and i8 %4, 3, !dbg !13847
  ret i8 %5, !dbg !13848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #6 !dbg !13849 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13872, metadata !DIExpression()), !dbg !13873
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13874
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #26, !dbg !13875
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, i32 0, !dbg !13876
  store i32 0, i32* %3, align 4, !dbg !13876
  %4 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13877
  tail call fastcc void @z_waitq_init.214(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !13878
  ret void, !dbg !13879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13880 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13885, metadata !DIExpression()), !dbg !13886
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13887
  store %struct._sfnode* null, %struct._sfnode** %2, align 4, !dbg !13888
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13889
  store %struct._sfnode* null, %struct._sfnode** %3, align 4, !dbg !13890
  ret void, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.214(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13899
  tail call fastcc void @sys_dlist_init.215(%struct._dnode* noundef %2) #26, !dbg !13900
  ret void, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.215(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13907, metadata !DIExpression()), !dbg !13908
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13909
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13910
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13911
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13912
  ret void, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13914 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13916, metadata !DIExpression()), !dbg !14002
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14003
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !14004, metadata !DIExpression()) #25, !dbg !14011
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14013, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #25, !dbg !14020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #25, !dbg !14020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #25, !dbg !14011
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %2) #27, !dbg !14021
  br i1 %4, label %6, label %5, !dbg !14024

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.219, i32 0, i32 0), %struct._sfnode* noundef nonnull %2) #27, !dbg !14025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14025
  unreachable, !dbg !14025

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #25, !dbg !14020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #25, !dbg !14011
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %2) #27, !dbg !14027
  call void @llvm.dbg.value(metadata i32 undef, metadata !13917, metadata !DIExpression()), !dbg !14002
  %7 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14028
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %7) #27, !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13922, metadata !DIExpression()), !dbg !14002
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14030
  br i1 %9, label %11, label %10, !dbg !14032

10:                                               ; preds = %6
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %8, i8* noundef null) #26, !dbg !14033
  br label %11, !dbg !14035

11:                                               ; preds = %10, %6
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14013
  call void @llvm.dbg.value(metadata i32 %12, metadata !14016, metadata !DIExpression()) #25, !dbg !14020
  call void @llvm.dbg.value(metadata i32 %12, metadata !14010, metadata !DIExpression()) #25, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %12, metadata !13917, metadata !DIExpression()), !dbg !14002
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14036
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %2, [1 x i32] %13) #27, !dbg !14036
  ret void, !dbg !14037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !14038 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14042, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i8* %1, metadata !14043, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14045, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i32 0, metadata !14051, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* %1, metadata !14052, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14055, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.value(metadata i32 0, metadata !14060, metadata !DIExpression()), !dbg !14061
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !14063
  store i32 0, i32* %3, align 4, !dbg !14064
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !14065
  store i8* %1, i8** %4, align 4, !dbg !14066
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14067
  ret void, !dbg !14068
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14069 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14073, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %1, metadata !14074, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %2, metadata !14075, metadata !DIExpression()), !dbg !14076
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !14079 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14083, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i8* %1, metadata !14084, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i8* %2, metadata !14085, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i1 %3, metadata !14086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i1 %4, metadata !14087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14094
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !14004, metadata !DIExpression()) #25, !dbg !14095
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14097, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #25, !dbg !14099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #25, !dbg !14099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #25, !dbg !14095
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !14100
  br i1 %8, label %10, label %9, !dbg !14101

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.219, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !14102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14102
  unreachable, !dbg !14102

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %7, 0, !dbg !14097
  call void @llvm.dbg.value(metadata i32 %11, metadata !14016, metadata !DIExpression()) #25, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %11, metadata !14010, metadata !DIExpression()) #25, !dbg !14095
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %6) #27, !dbg !14103
  call void @llvm.dbg.value(metadata i32 %11, metadata !14089, metadata !DIExpression()), !dbg !14093
  br i1 %4, label %12, label %16, !dbg !14104

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14105
  %14 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %13) #26, !dbg !14108
  %15 = bitcast %struct._sfnode* %14 to i8*, !dbg !14108
  call void @llvm.dbg.value(metadata i8* %15, metadata !14084, metadata !DIExpression()), !dbg !14093
  br label %16, !dbg !14109

16:                                               ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ %1, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !14084, metadata !DIExpression()), !dbg !14093
  %18 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14110
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %18) #27, !dbg !14111
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14088, metadata !DIExpression()), !dbg !14093
  %20 = icmp eq %struct.k_thread* %19, null, !dbg !14112
  br i1 %20, label %23, label %21, !dbg !14114

21:                                               ; preds = %16
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %19, i8* noundef %2) #26, !dbg !14115
  %22 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !14117
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %22) #27, !dbg !14117
  br label %42, !dbg !14118

23:                                               ; preds = %16
  br i1 %3, label %24, label %35, !dbg !14119

24:                                               ; preds = %23
  %25 = tail call fastcc i8* @z_thread_malloc() #26, !dbg !14120
  call void @llvm.dbg.value(metadata i8* %25, metadata !14090, metadata !DIExpression()), !dbg !14121
  %26 = icmp eq i8* %25, null, !dbg !14122
  br i1 %26, label %27, label %31, !dbg !14124

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14125, metadata !DIExpression()) #25, !dbg !14131
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !14130, metadata !DIExpression()) #25, !dbg !14131
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !14134
  br i1 %28, label %30, label %29, !dbg !14137

29:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.221, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !14138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14138
  unreachable, !dbg !14138

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %11, metadata !14125, metadata !DIExpression()) #25, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %11, metadata !14140, metadata !DIExpression()) #25, !dbg !14143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !14145, !srcloc !14146
  call void @llvm.dbg.value(metadata i8* %25, metadata !14085, metadata !DIExpression()), !dbg !14093
  br label %42

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8* %25, metadata !14090, metadata !DIExpression()), !dbg !14121
  %32 = getelementptr inbounds i8, i8* %25, i32 4, !dbg !14147
  %33 = bitcast i8* %32 to i8**, !dbg !14147
  store i8* %2, i8** %33, align 4, !dbg !14148
  %34 = bitcast i8* %25 to %struct._sfnode*, !dbg !14149
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef nonnull %34, i8 noundef zeroext 1) #26, !dbg !14150
  call void @llvm.dbg.value(metadata i8* %25, metadata !14085, metadata !DIExpression()), !dbg !14093
  br label %37

35:                                               ; preds = %23
  %36 = bitcast i8* %2 to %struct._sfnode*, !dbg !14151
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef %36, i8 noundef zeroext 0) #26, !dbg !14153
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %struct._sfnode* [ %34, %31 ], [ %36, %35 ], !dbg !14154
  call void @llvm.dbg.value(metadata i8* undef, metadata !14085, metadata !DIExpression()), !dbg !14093
  %39 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14155
  %40 = bitcast i8* %17 to %struct._sfnode*, !dbg !14156
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %39, %struct._sfnode* noundef %40, %struct._sfnode* noundef %38) #26, !dbg !14157
  %41 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !14158
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %41) #27, !dbg !14158
  br label %42, !dbg !14159

42:                                               ; preds = %30, %37, %21
  %43 = phi i32 [ 0, %21 ], [ 0, %37 ], [ -12, %30 ], !dbg !14093
  ret i32 %43, !dbg !14160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14161 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14165, metadata !DIExpression()), !dbg !14166
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14167
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !14167
  ret %struct._sfnode* %3, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !14169 {
  call void @llvm.dbg.value(metadata i32 8, metadata !14172, metadata !DIExpression()), !dbg !14173
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #27, !dbg !14174
  ret i8* %1, !dbg !14175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_sfnode_init(%struct._sfnode* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !14176 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14180, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i8 %1, metadata !14181, metadata !DIExpression()), !dbg !14182
  %3 = zext i8 %1 to i32, !dbg !14183
  %4 = and i32 %3, 252, !dbg !14183
  %5 = icmp eq i32 %4, 0, !dbg !14183
  br i1 %5, label %7, label %6, !dbg !14186

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.223, i32 0, i32 0), i32 noundef 290) #27, !dbg !14187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.224, i32 0, i32 0)) #27, !dbg !14187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.223, i32 0, i32 0), i32 noundef 290) #27, !dbg !14187
  unreachable, !dbg !14187

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !14189
  store i32 %3, i32* %8, align 4, !dbg !14190
  ret void, !dbg !14191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !14192 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14196, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14197, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !14198, metadata !DIExpression()), !dbg !14199
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !14200
  br i1 %4, label %5, label %6, !dbg !14202

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !14203
  br label %11, !dbg !14203

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef nonnull %1) #26, !dbg !14205
  %8 = icmp eq %struct._sfnode* %7, null, !dbg !14205
  br i1 %8, label %9, label %10, !dbg !14200

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !14207
  br label %11, !dbg !14207

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef nonnull %7) #26, !dbg !14209
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %2) #26, !dbg !14209
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !14211 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14215, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14216, metadata !DIExpression()), !dbg !14217
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14218
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef %3) #26, !dbg !14218
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !14218
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14219
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !14219
  br i1 %5, label %6, label %8, !dbg !14218

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14221
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !14221
  br label %8, !dbg !14221

8:                                                ; preds = %6, %2
  ret void, !dbg !14218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14223 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14227, metadata !DIExpression()), !dbg !14228
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !14229
  %3 = load i32, i32* %2, align 4, !dbg !14229
  %4 = and i32 %3, -4, !dbg !14230
  %5 = inttoptr i32 %4 to %struct._sfnode*, !dbg !14231
  ret %struct._sfnode* %5, !dbg !14232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !14233 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14235, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14236, metadata !DIExpression()), !dbg !14237
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef null) #26, !dbg !14238
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14239
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !14239
  br i1 %4, label %5, label %6, !dbg !14238

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !14241
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !14241
  br label %7, !dbg !14241

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %3, %struct._sfnode* noundef %1) #26, !dbg !14243
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !14243
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct._sfnode* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14249, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14250, metadata !DIExpression()), !dbg !14252
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef %0) #26, !dbg !14253
  call void @llvm.dbg.value(metadata i8 %3, metadata !14251, metadata !DIExpression()), !dbg !14252
  %4 = zext i8 %3 to i32, !dbg !14254
  %5 = ptrtoint %struct._sfnode* %1 to i32, !dbg !14255
  %6 = or i32 %4, %5, !dbg !14256
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !14257
  store i32 %6, i32* %7, align 4, !dbg !14258
  ret void, !dbg !14259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !14260 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14262, metadata !DIExpression()), !dbg !14264
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14263, metadata !DIExpression()), !dbg !14264
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14265
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !14266
  ret void, !dbg !14267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !14268 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14270, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14271, metadata !DIExpression()), !dbg !14272
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14273
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !14274
  ret void, !dbg !14275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14276 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14278, metadata !DIExpression()), !dbg !14279
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14280
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !14280
  ret %struct._sfnode* %3, !dbg !14281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14282 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14286, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i8* %1, metadata !14287, metadata !DIExpression()), !dbg !14288
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #26, !dbg !14289
  ret void, !dbg !14290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14291 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14293, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i8* %1, metadata !14294, metadata !DIExpression()), !dbg !14295
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !14296
  ret void, !dbg !14297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14302, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata i8* %1, metadata !14303, metadata !DIExpression()), !dbg !14305
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #26, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %3, metadata !14304, metadata !DIExpression()), !dbg !14305
  ret i32 %3, !dbg !14307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14310, metadata !DIExpression()), !dbg !14313
  call void @llvm.dbg.value(metadata i8* %1, metadata !14311, metadata !DIExpression()), !dbg !14313
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #26, !dbg !14314
  call void @llvm.dbg.value(metadata i32 %3, metadata !14312, metadata !DIExpression()), !dbg !14313
  ret i32 %3, !dbg !14315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14320, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8* %1, metadata !14321, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8* %2, metadata !14322, metadata !DIExpression()), !dbg !14325
  %4 = icmp eq i8* %1, null, !dbg !14326
  %5 = icmp eq i8* %2, null, !dbg !14326
  %6 = or i1 %4, %5, !dbg !14326
  br i1 %6, label %32, label %7, !dbg !14326

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14328
  call void @llvm.dbg.value(metadata %struct._sfnode* %8, metadata !14004, metadata !DIExpression()) #25, !dbg !14329
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14331, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #25, !dbg !14333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #25, !dbg !14333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #25, !dbg !14329
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %8) #27, !dbg !14334
  br i1 %10, label %12, label %11, !dbg !14335

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.219, i32 0, i32 0), %struct._sfnode* noundef nonnull %8) #27, !dbg !14336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14336
  unreachable, !dbg !14336

12:                                               ; preds = %7
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %13, metadata !14016, metadata !DIExpression()) #25, !dbg !14333
  call void @llvm.dbg.value(metadata i32 %13, metadata !14010, metadata !DIExpression()) #25, !dbg !14329
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %8) #27, !dbg !14337
  call void @llvm.dbg.value(metadata i32 %13, metadata !14323, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14324, metadata !DIExpression()), !dbg !14325
  %14 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14338
  %15 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !14341
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14324, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14324, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8* %1, metadata !14321, metadata !DIExpression()), !dbg !14325
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14342
  br i1 %16, label %27, label %17, !dbg !14343

17:                                               ; preds = %12, %17
  %18 = phi %struct.k_thread* [ %22, %17 ], [ %15, %12 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %12 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14324, metadata !DIExpression()), !dbg !14325
  call void @llvm.dbg.value(metadata i8* %19, metadata !14321, metadata !DIExpression()), !dbg !14325
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %18, i8* noundef nonnull %19) #26, !dbg !14344
  %20 = bitcast i8* %19 to i8**, !dbg !14346
  %21 = load i8*, i8** %20, align 4, !dbg !14347
  call void @llvm.dbg.value(metadata i8* %21, metadata !14321, metadata !DIExpression()), !dbg !14325
  %22 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !14348
  call void @llvm.dbg.value(metadata %struct.k_thread* %22, metadata !14324, metadata !DIExpression()), !dbg !14325
  %23 = icmp ne i8* %21, null, !dbg !14349
  %24 = icmp ne %struct.k_thread* %22, null, !dbg !14342
  %25 = select i1 %23, i1 %24, i1 false, !dbg !14342
  br i1 %25, label %17, label %26, !dbg !14343, !llvm.loop !14350

26:                                               ; preds = %17
  br i1 %23, label %27, label %30, !dbg !14352

27:                                               ; preds = %12, %26
  %28 = phi i8* [ %21, %26 ], [ %1, %12 ]
  %29 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14353
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %29, i8* noundef nonnull %28, i8* noundef %2) #26, !dbg !14356
  br label %30, !dbg !14357

30:                                               ; preds = %26, %27
  %31 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !14358
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %8, [1 x i32] %31) #27, !dbg !14358
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i32 [ 0, %30 ], [ -22, %3 ], !dbg !14325
  ret i32 %33, !dbg !14359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #9 !dbg !14360 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14364, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8* %1, metadata !14365, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i8* %2, metadata !14366, metadata !DIExpression()), !dbg !14367
  %4 = icmp ne i8* %1, null, !dbg !14368
  %5 = icmp ne i8* %2, null, !dbg !14368
  %6 = and i1 %4, %5, !dbg !14368
  br i1 %6, label %7, label %15, !dbg !14368

7:                                                ; preds = %3
  %8 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14370
  %9 = icmp eq %struct._sfnode* %8, null, !dbg !14370
  %10 = bitcast i8* %1 to %struct._sfnode*, !dbg !14373
  br i1 %9, label %11, label %12, !dbg !14374

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %10) #26, !dbg !14375
  br label %13, !dbg !14375

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %10) #26, !dbg !14377
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct._sfnode*, !dbg !14374
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %14) #26, !dbg !14374
  br label %15, !dbg !14374

15:                                               ; preds = %13, %3
  ret void, !dbg !14379
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14380 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14396, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14397, metadata !DIExpression()), !dbg !14399
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.227(%struct._slist* noundef %1) #26, !dbg !14400
  br i1 %3, label %13, label %4, !dbg !14402

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14403
  %6 = load i8*, i8** %5, align 4, !dbg !14403
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14404
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14404
  %9 = load i8*, i8** %8, align 4, !dbg !14404
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #26, !dbg !14405
  call void @llvm.dbg.value(metadata i32 %10, metadata !14398, metadata !DIExpression()), !dbg !14399
  %11 = icmp eq i32 %10, 0, !dbg !14406
  br i1 %11, label %12, label %13, !dbg !14408

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #26, !dbg !14409
  br label %13, !dbg !14410

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14399
  ret i32 %14, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.227(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.228(%struct._slist* noundef %0) #26, !dbg !14418
  %3 = icmp eq %struct._snode* %2, null, !dbg !14418
  ret i1 %3, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14423, metadata !DIExpression()), !dbg !14424
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14425
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14426
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14427
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14428
  ret void, !dbg !14429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.228(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14434, metadata !DIExpression()), !dbg !14435
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14436
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14436
  ret %struct._snode* %3, !dbg !14437
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14438 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14447, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14446, metadata !DIExpression()), !dbg !14454
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14455
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !14004, metadata !DIExpression()) #25, !dbg !14456
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14458, !srcloc !14019
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()) #25, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14017, metadata !DIExpression()) #25, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #25, !dbg !14456
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !14461
  br i1 %5, label %7, label %6, !dbg !14462

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.219, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !14463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 148) #27, !dbg !14463
  unreachable, !dbg !14463

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %8, metadata !14016, metadata !DIExpression()) #25, !dbg !14460
  call void @llvm.dbg.value(metadata i32 %8, metadata !14010, metadata !DIExpression()) #25, !dbg !14456
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %8, metadata !14448, metadata !DIExpression()), !dbg !14454
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14465
  %10 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %9) #26, !dbg !14465
  br i1 %10, label %17, label %11, !dbg !14466, !prof !14467

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* noundef %9) #26, !dbg !14468
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !14450, metadata !DIExpression()), !dbg !14469
  %13 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %12, i1 noundef zeroext true) #26, !dbg !14470
  call void @llvm.dbg.value(metadata i8* %13, metadata !14449, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14125, metadata !DIExpression()) #25, !dbg !14471
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !14130, metadata !DIExpression()) #25, !dbg !14471
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !14473
  br i1 %14, label %16, label %15, !dbg !14474

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.221, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !14475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14475
  unreachable, !dbg !14475

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %8, metadata !14125, metadata !DIExpression()) #25, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %8, metadata !14140, metadata !DIExpression()) #25, !dbg !14476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14478, !srcloc !14146
  br label %33

17:                                               ; preds = %7
  %18 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %18, metadata !14447, metadata !DIExpression()), !dbg !14454
  %19 = icmp eq i64 %18, 0, !dbg !14479
  br i1 %19, label %20, label %24, !dbg !14481

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14125, metadata !DIExpression()) #25, !dbg !14482
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !14130, metadata !DIExpression()) #25, !dbg !14482
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !14485
  br i1 %21, label %23, label %22, !dbg !14486

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.221, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !14487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.218, i32 0, i32 0), i32 noundef 194) #27, !dbg !14487
  unreachable, !dbg !14487

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %8, metadata !14125, metadata !DIExpression()) #25, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %8, metadata !14140, metadata !DIExpression()) #25, !dbg !14488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14490, !srcloc !14146
  br label %33, !dbg !14491

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14492
  %26 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !14493
  %27 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %3, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] %1) #27, !dbg !14493
  call void @llvm.dbg.value(metadata i32 %27, metadata !14453, metadata !DIExpression()), !dbg !14454
  %28 = icmp eq i32 %27, 0, !dbg !14494
  br i1 %28, label %29, label %33, !dbg !14495

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14496
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !14497
  %32 = load i8*, i8** %31, align 4, !dbg !14497
  br label %33, !dbg !14495

33:                                               ; preds = %29, %24, %23, %16
  %34 = phi i8* [ %13, %16 ], [ null, %23 ], [ %32, %29 ], [ null, %24 ], !dbg !14454
  ret i8* %34, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14503, metadata !DIExpression()), !dbg !14504
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14505
  %3 = icmp eq %struct._sfnode* %2, null, !dbg !14505
  ret i1 %3, !dbg !14505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #9 !dbg !14506 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14508, metadata !DIExpression()), !dbg !14510
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14511
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !14509, metadata !DIExpression()), !dbg !14510
  %3 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !14511
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %3) #26, !dbg !14511
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14512
  %5 = icmp eq %struct._sfnode* %4, %2, !dbg !14512
  br i1 %5, label %6, label %8, !dbg !14511

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14514
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !14514
  br label %8, !dbg !14514

8:                                                ; preds = %6, %1
  ret %struct._sfnode* %2, !dbg !14511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14516 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14520, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i8* %1, metadata !14521, metadata !DIExpression()), !dbg !14523
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14524
  %4 = bitcast i8* %1 to %struct._sfnode*, !dbg !14525
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct._sfnode* noundef %4) #26, !dbg !14526
  call void @llvm.dbg.value(metadata i1 %5, metadata !14522, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14523
  ret i1 %5, !dbg !14527
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #14 !dbg !14528 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14532, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14533, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !14534, metadata !DIExpression()), !dbg !14536
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14537
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !14534, metadata !DIExpression()), !dbg !14536
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !14539
  br i1 %4, label %15, label %5, !dbg !14537

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !14534, metadata !DIExpression()), !dbg !14536
  %6 = icmp eq %struct._sfnode* %3, %1, !dbg !14541
  br i1 %6, label %9, label %11, !dbg !14544

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !14534, metadata !DIExpression()), !dbg !14536
  %8 = icmp eq %struct._sfnode* %13, %1, !dbg !14541
  br i1 %8, label %9, label %11, !dbg !14544, !llvm.loop !14545

9:                                                ; preds = %7, %5
  %10 = phi %struct._sfnode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct._sfnode* noundef %10, %struct._sfnode* noundef %1) #26, !dbg !14546
  br label %15, !dbg !14546

11:                                               ; preds = %5, %7
  %12 = phi %struct._sfnode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !14535, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !14534, metadata !DIExpression()), !dbg !14536
  %13 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %12) #26, !dbg !14539
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !14535, metadata !DIExpression()), !dbg !14536
  %14 = icmp eq %struct._sfnode* %13, null, !dbg !14539
  br i1 %14, label %15, label %7, !dbg !14537, !llvm.loop !14545

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !14549 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14551, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !14552, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !14553, metadata !DIExpression()), !dbg !14554
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !14555
  %5 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !14557
  br i1 %4, label %6, label %11, !dbg !14558

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %5) #26, !dbg !14559
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14561
  %8 = icmp eq %struct._sfnode* %7, %2, !dbg !14561
  br i1 %8, label %9, label %15, !dbg !14559

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !14563
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %10) #26, !dbg !14563
  br label %15, !dbg !14563

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %5) #26, !dbg !14565
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !14567
  %13 = icmp eq %struct._sfnode* %12, %2, !dbg !14567
  br i1 %13, label %14, label %15, !dbg !14565

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %1) #26, !dbg !14569
  br label %15, !dbg !14569

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef null) #26, !dbg !14558
  ret void, !dbg !14558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef readonly %0) unnamed_addr #7 !dbg !14571 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14573, metadata !DIExpression()), !dbg !14574
  %2 = icmp eq %struct._sfnode* %0, null, !dbg !14575
  br i1 %2, label %5, label %3, !dbg !14575

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* noundef nonnull %0) #26, !dbg !14575
  br label %5, !dbg !14575

5:                                                ; preds = %1, %3
  %6 = phi %struct._sfnode* [ %4, %3 ], [ null, %1 ], !dbg !14575
  ret %struct._sfnode* %6, !dbg !14575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14576 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14578, metadata !DIExpression()), !dbg !14579
  %2 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %0) #26, !dbg !14580
  ret %struct._sfnode* %2, !dbg !14580
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14583, metadata !DIExpression()), !dbg !14586
  call void @llvm.dbg.value(metadata i8* %1, metadata !14584, metadata !DIExpression()), !dbg !14586
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14587
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %3) #26, !dbg !14587
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !14585, metadata !DIExpression()), !dbg !14586
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !14589
  br i1 %5, label %14, label %6, !dbg !14587

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct._sfnode*
  br label %8, !dbg !14587

8:                                                ; preds = %6, %11
  %9 = phi %struct._sfnode* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !14585, metadata !DIExpression()), !dbg !14586
  %10 = icmp eq %struct._sfnode* %9, %7, !dbg !14591
  br i1 %10, label %15, label %11, !dbg !14594

11:                                               ; preds = %8
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %9) #26, !dbg !14589
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !14585, metadata !DIExpression()), !dbg !14586
  %13 = icmp eq %struct._sfnode* %12, null, !dbg !14589
  br i1 %13, label %14, label %8, !dbg !14587, !llvm.loop !14595

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #26, !dbg !14597
  br label %15, !dbg !14598

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14599
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14604, metadata !DIExpression()), !dbg !14606
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14607
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %2) #26, !dbg !14608
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !14609
  call void @llvm.dbg.value(metadata i8* %4, metadata !14605, metadata !DIExpression()), !dbg !14606
  ret i8* %4, !dbg !14610
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14613, metadata !DIExpression()), !dbg !14615
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14616
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #26, !dbg !14617
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !14618
  call void @llvm.dbg.value(metadata i8* %4, metadata !14614, metadata !DIExpression()), !dbg !14615
  ret i8* %4, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14625, metadata !DIExpression()), !dbg !14628
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14629
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14629
  %5 = load i8, i8* %4, align 2, !dbg !14629
  call void @llvm.dbg.value(metadata i8 %5, metadata !14626, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14628
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14630
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14630
  %8 = load i8, i8* %7, align 2, !dbg !14630
  call void @llvm.dbg.value(metadata i8 %8, metadata !14627, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14628
  %9 = icmp eq i8 %8, %5, !dbg !14631
  %10 = sext i8 %5 to i32, !dbg !14633
  %11 = sext i8 %8 to i32, !dbg !14633
  %12 = sub nsw i32 %11, %10, !dbg !14633
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14633
  ret i32 %13, !dbg !14634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14635 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14639, metadata !DIExpression()), !dbg !14640
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14641
  %3 = icmp eq i32 %2, 0, !dbg !14643
  br i1 %3, label %8, label %4, !dbg !14644

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !14645
  %6 = add i32 %5, %2, !dbg !14647
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14648
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14649
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !14650
  br label %8, !dbg !14651

8:                                                ; preds = %4, %1
  ret void, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #7 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14657, metadata !DIExpression()), !dbg !14659
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14660
  call void @llvm.dbg.value(metadata i32 %1, metadata !14658, metadata !DIExpression()), !dbg !14659
  ret i32 %1, !dbg !14661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14666, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 %1, metadata !14667, metadata !DIExpression()), !dbg !14675
  call void @llvm.dbg.value(metadata i32 0, metadata !14668, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !14684
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14686, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !14684
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14694
  br i1 %4, label %6, label %5, !dbg !14697

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !14698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !14698
  unreachable, !dbg !14698

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !14684
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14668, metadata !DIExpression()), !dbg !14676
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14701
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14704
  %8 = icmp sgt i32 %0, 0, !dbg !14705
  %9 = icmp sgt i32 %7, 2, !dbg !14707
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14707
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14707
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14708
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14709
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !14717
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !14717
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14719
  br i1 %12, label %14, label %13, !dbg !14722

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14723
  unreachable, !dbg !14723

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14686
  call void @llvm.dbg.value(metadata i32 %15, metadata !14689, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 %15, metadata !14683, metadata !DIExpression()) #25, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %15, metadata !14674, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !14728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14730, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !14668, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14668, metadata !DIExpression()), !dbg !14676
  ret void, !dbg !14732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14735, metadata !DIExpression()), !dbg !14736
  call void @llvm.dbg.value(metadata i32 %0, metadata !14737, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14752
  call void @llvm.dbg.value(metadata i32 1000, metadata !14740, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 10000, metadata !14741, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i8 1, metadata !14742, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i1 true, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14752
  call void @llvm.dbg.value(metadata i1 true, metadata !14744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14752
  call void @llvm.dbg.value(metadata i8 0, metadata !14745, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i1 true, metadata !14746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14752
  call void @llvm.dbg.value(metadata i1 false, metadata !14747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14752
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !14752
  %2 = mul i32 %0, 10, !dbg !14754
  ret i32 %2, !dbg !14760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14763, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !14766
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14768, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !14766
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14771
  br i1 %3, label %5, label %4, !dbg !14772

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !14773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !14773
  unreachable, !dbg !14773

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %6, metadata !14689, metadata !DIExpression()) #25, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %6, metadata !14683, metadata !DIExpression()) #25, !dbg !14766
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14774
  call void @llvm.dbg.value(metadata i32 %6, metadata !14764, metadata !DIExpression()), !dbg !14765
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14775
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14777
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14778
  br i1 %9, label %10, label %14, !dbg !14779

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !14782
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !14782
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14784
  br i1 %11, label %13, label %12, !dbg !14785

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14786
  unreachable, !dbg !14786

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !14782
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !14787
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14789, !srcloc !14731
  br label %33, !dbg !14790

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14791
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !14792
  %16 = icmp eq i32 %15, 0, !dbg !14792
  br i1 %16, label %27, label %17, !dbg !14794

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !14795
  br i1 %18, label %19, label %27, !dbg !14796

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14797
  %21 = icmp sgt i32 %20, %0, !dbg !14800
  br i1 %21, label %25, label %22, !dbg !14801

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14802
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %24, metadata !14764, metadata !DIExpression()), !dbg !14765
  br label %28, !dbg !14804

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14805
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14805
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14807
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14765
  call void @llvm.dbg.value(metadata i32 %29, metadata !14764, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !14809
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14811
  br i1 %30, label %32, label %31, !dbg !14812

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14813
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14813
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !14813
  unreachable, !dbg !14813

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14711, metadata !DIExpression()) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32 %29, metadata !14725, metadata !DIExpression()) #25, !dbg !14814
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !14816, !srcloc !14731
  br label %33, !dbg !14817

33:                                               ; preds = %32, %13
  ret void, !dbg !14817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14818 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14822, metadata !DIExpression()), !dbg !14824
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14825
  %3 = icmp eq i32 %2, 0, !dbg !14825
  br i1 %3, label %16, label %4, !dbg !14826

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14827
  br i1 %5, label %16, label %6, !dbg !14828

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14829
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14829
  %9 = load i8, i8* %8, align 2, !dbg !14829
  %10 = sext i8 %9 to i32, !dbg !14830
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14831
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14832
  br i1 %12, label %16, label %13, !dbg !14833

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14834
  %15 = xor i1 %14, true, !dbg !14835
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14824
  call void @llvm.dbg.value(metadata i1 %17, metadata !14823, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14824
  ret i1 %17, !dbg !14836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14837 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14841, metadata !DIExpression()), !dbg !14843
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14842, metadata !DIExpression()), !dbg !14843
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14845
  br i1 %3, label %5, label %4, !dbg !14847

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14848
  br label %5, !dbg !14850

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14841, metadata !DIExpression()), !dbg !14843
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14851
  ret i32 %6, !dbg !14852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14855, metadata !DIExpression()), !dbg !14857
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14858
  %3 = load i8, i8* %2, align 1, !dbg !14858
  call void @llvm.dbg.value(metadata i8 %3, metadata !14856, metadata !DIExpression()), !dbg !14857
  %4 = and i8 %3, 31, !dbg !14859
  %5 = icmp ne i8 %4, 0, !dbg !14860
  ret i1 %5, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14864, metadata !DIExpression()), !dbg !14865
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14866
  br i1 %2, label %3, label %7, !dbg !14868

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()) #25, !dbg !14872
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14875
  %5 = load i8, i8* %4, align 1, !dbg !14876
  %6 = and i8 %5, 127, !dbg !14876
  store i8 %6, i8* %4, align 1, !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()) #25, !dbg !14880
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14884
  br label %7, !dbg !14885

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #25, !dbg !14889
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14891
  %9 = load i8, i8* %8, align 1, !dbg !14892
  %10 = or i8 %9, -128, !dbg !14892
  store i8 %10, i8* %8, align 1, !dbg !14892
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()) #25, !dbg !14896
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14900, metadata !DIExpression()) #25, !dbg !14908
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #25, !dbg !14908
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14910
  br i1 %11, label %12, label %13, !dbg !14913

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !14914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !14914
  unreachable, !dbg !14914

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14916
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14907, metadata !DIExpression()) #25, !dbg !14908
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14918
  br i1 %15, label %26, label %16, !dbg !14916

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14907, metadata !DIExpression()) #25, !dbg !14908
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14920
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14907, metadata !DIExpression()) #25, !dbg !14908
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !14921
  %20 = icmp sgt i32 %19, 0, !dbg !14924
  br i1 %20, label %21, label %23, !dbg !14925

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14926
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !14928
  br label %28, !dbg !14929

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !14918
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14907, metadata !DIExpression()) #25, !dbg !14908
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14918
  br i1 %25, label %26, label %16, !dbg !14916, !llvm.loop !14930

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14932
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !14933
  br label %28, !dbg !14934

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14935
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14936
  %31 = zext i1 %30 to i32, !dbg !14936
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !14937
  ret void, !dbg !14938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14941, metadata !DIExpression()), !dbg !14942
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !14943
  ret i1 %2, !dbg !14944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14945 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14947, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14948, metadata !DIExpression()), !dbg !14949
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !14950
  br i1 %3, label %4, label %5, !dbg !14953

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14954
  unreachable, !dbg !14954

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14956
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !14957
  ret void, !dbg !14958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14959 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()), !dbg !14962
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14963
  ret i1 %2, !dbg !14964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14969, metadata !DIExpression()), !dbg !14970
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14971
  br i1 %2, label %6, label %3, !dbg !14971

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14972
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14972
  br label %6, !dbg !14971

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14971
  ret %struct._dnode* %7, !dbg !14973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14979, metadata !DIExpression()), !dbg !14982
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14983
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14980, metadata !DIExpression()), !dbg !14982
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14984
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14985
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14986
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14987
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14988
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14989
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14990
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14996, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14997, metadata !DIExpression()), !dbg !14998
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14999
  br i1 %3, label %6, label %4, !dbg !15000

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15001
  br label %6, !dbg !15000

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15000
  ret %struct._dnode* %7, !dbg !15002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15007, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15008, metadata !DIExpression()), !dbg !15010
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15011
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15011
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15009, metadata !DIExpression()), !dbg !15010
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15012
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15013
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15014
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15015
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15016
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15017
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15018
  ret void, !dbg !15019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15022, metadata !DIExpression()), !dbg !15024
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15032, metadata !DIExpression()) #25, !dbg !15034
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15035
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15036
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15037, metadata !DIExpression()) #25, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %0, metadata !15042, metadata !DIExpression()) #25, !dbg !15043
  %6 = icmp eq i32 %0, 0, !dbg !15046
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15048
  br i1 %6, label %8, label %18, !dbg !15049

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15050
  br i1 %9, label %10, label %11, !dbg !15053

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 137) #27, !dbg !15054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !15054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 137) #27, !dbg !15054
  unreachable, !dbg !15054

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #27, !dbg !15056
  br i1 %12, label %18, label %13, !dbg !15058

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15059
  br i1 %14, label %18, label %15, !dbg !15061

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #27, !dbg !15062
  %17 = icmp eq i32 %16, 0, !dbg !15062
  br i1 %17, label %21, label %18, !dbg !15064

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15065
  br i1 %19, label %21, label %20, !dbg !15068

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15069
  br label %21, !dbg !15071

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15048
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15048
  ret void, !dbg !15072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #7 !dbg !15073 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15077, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15078, metadata !DIExpression()), !dbg !15080
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15081
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15079, metadata !DIExpression()), !dbg !15080
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15078, metadata !DIExpression()), !dbg !15080
  ret %struct.k_thread* %3, !dbg !15082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15085, metadata !DIExpression()), !dbg !15086
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15087
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15088
  %4 = xor i1 %3, true, !dbg !15089
  ret i1 %4, !dbg !15090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15093, metadata !DIExpression()), !dbg !15094
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15095
  %3 = load i16, i16* %2, align 2, !dbg !15095
  %4 = icmp ult i16 %3, 128, !dbg !15096
  %5 = zext i1 %4 to i32, !dbg !15096
  ret i32 %5, !dbg !15097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15098 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15104, metadata !DIExpression()), !dbg !15105
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15106
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15107
  %4 = xor i1 %3, true, !dbg !15108
  ret i1 %4, !dbg !15109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15110 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15116, metadata !DIExpression()), !dbg !15117
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15118
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15118
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15119
  ret i1 %4, !dbg !15120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !15121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15123, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15124, metadata !DIExpression()), !dbg !15125
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15126
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15126
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15127
  br i1 %5, label %9, label %6, !dbg !15128

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15129
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15129
  br label %9, !dbg !15128

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15128
  ret %struct._dnode* %10, !dbg !15130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !15131 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15135, metadata !DIExpression()), !dbg !15136
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15137
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15137
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15138
  ret i1 %4, !dbg !15139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15140 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15144, metadata !DIExpression()), !dbg !15147
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15148
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15148
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15145, metadata !DIExpression()), !dbg !15147
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15149
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15149
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15146, metadata !DIExpression()), !dbg !15147
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15150
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15151
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15152
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15153
  tail call fastcc void @sys_dnode_init.240(%struct._dnode* noundef %0) #26, !dbg !15154
  ret void, !dbg !15155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.240(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !15156 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15158, metadata !DIExpression()), !dbg !15159
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15160
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15161
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15162
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15163
  ret void, !dbg !15164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !15165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15169, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.value(metadata i32 %1, metadata !15170, metadata !DIExpression()), !dbg !15171
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15172
  %4 = load i8, i8* %3, align 1, !dbg !15172
  %5 = zext i8 %4 to i32, !dbg !15173
  %6 = and i32 %5, %1, !dbg !15174
  %7 = icmp ne i32 %6, 0, !dbg !15175
  ret i1 %7, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15181, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 %1, metadata !15182, metadata !DIExpression()), !dbg !15183
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15184
  ret i1 %3, !dbg !15185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15188, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %1, metadata !15189, metadata !DIExpression()), !dbg !15190
  %3 = icmp slt i32 %0, %1, !dbg !15191
  ret i1 %3, !dbg !15192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15195, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata i32 0, metadata !15196, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15203, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15201
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15206
  br i1 %3, label %5, label %4, !dbg !15207

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15208
  unreachable, !dbg !15208

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15201
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15209
  call void @llvm.dbg.value(metadata i32 undef, metadata !15198, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !15196, metadata !DIExpression()), !dbg !15200
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15215
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15215
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15217
  br i1 %6, label %8, label %7, !dbg !15218

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15219
  unreachable, !dbg !15219

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %9, metadata !14689, metadata !DIExpression()) #25, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %9, metadata !14683, metadata !DIExpression()) #25, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %9, metadata !15198, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15222, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15196, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !15196, metadata !DIExpression()), !dbg !15200
  ret void, !dbg !15223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15226, metadata !DIExpression()), !dbg !15227
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15228
  br i1 %2, label %27, label %3, !dbg !15230

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15231
  br i1 %4, label %5, label %27, !dbg !15232

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #25, !dbg !15233
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15236
  %7 = load i8, i8* %6, align 1, !dbg !15237
  %8 = or i8 %7, -128, !dbg !15237
  store i8 %8, i8* %6, align 1, !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()) #25, !dbg !15238
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14900, metadata !DIExpression()) #25, !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #25, !dbg !15240
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !15242
  br i1 %9, label %10, label %11, !dbg !15243

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !15244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !15244
  unreachable, !dbg !15244

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15245
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14907, metadata !DIExpression()) #25, !dbg !15240
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15246
  br i1 %13, label %24, label %14, !dbg !15245

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14907, metadata !DIExpression()) #25, !dbg !15240
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15247
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14907, metadata !DIExpression()) #25, !dbg !15240
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !15248
  %18 = icmp sgt i32 %17, 0, !dbg !15249
  br i1 %18, label %19, label %21, !dbg !15250

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15251
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !15252
  br label %26, !dbg !15253

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !15246
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14907, metadata !DIExpression()) #25, !dbg !15240
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15246
  br i1 %23, label %24, label %14, !dbg !15245, !llvm.loop !15254

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15256
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !15257
  br label %26, !dbg !15258

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15259
  br label %27, !dbg !15260

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15262 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15264, metadata !DIExpression()), !dbg !15265
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15266
  br i1 %2, label %6, label %3, !dbg !15267

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15268
  %5 = xor i1 %4, true, !dbg !15267
  br label %6, !dbg !15267

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15272, metadata !DIExpression()), !dbg !15276
  call void @llvm.dbg.value(metadata i32 0, metadata !15273, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15278
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15280, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15282
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15282
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15278
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15283
  br i1 %3, label %5, label %4, !dbg !15284

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15285
  unreachable, !dbg !15285

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15282
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15278
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15286
  call void @llvm.dbg.value(metadata i32 undef, metadata !15275, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15273, metadata !DIExpression()), !dbg !15277
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15287
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15290
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15290
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15292
  br i1 %6, label %8, label %7, !dbg !15293

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15294
  unreachable, !dbg !15294

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15280
  call void @llvm.dbg.value(metadata i32 %9, metadata !14689, metadata !DIExpression()) #25, !dbg !15282
  call void @llvm.dbg.value(metadata i32 %9, metadata !14683, metadata !DIExpression()) #25, !dbg !15278
  call void @llvm.dbg.value(metadata i32 %9, metadata !15275, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15297, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15273, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15273, metadata !DIExpression()), !dbg !15277
  ret void, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15304
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15306, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15304
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15309
  br i1 %3, label %5, label %4, !dbg !15310

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15311
  unreachable, !dbg !15311

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15306
  call void @llvm.dbg.value(metadata i32 %6, metadata !14689, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %6, metadata !14683, metadata !DIExpression()) #25, !dbg !15304
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %6, metadata !15302, metadata !DIExpression()), !dbg !15303
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15313
  br i1 %7, label %8, label %12, !dbg !15315

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15316
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15316
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15319
  br i1 %9, label %11, label %10, !dbg !15320

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15321
  unreachable, !dbg !15321

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !15322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15324, !srcloc !14731
  br label %14, !dbg !15325

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.245(%struct.k_thread* noundef %0) #26, !dbg !15326
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15327
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15328
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !15328
  br label %14, !dbg !15329

14:                                               ; preds = %12, %11
  ret void, !dbg !15329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()), !dbg !15333
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15334
  %3 = load i8, i8* %2, align 1, !dbg !15334
  %4 = and i8 %3, 4, !dbg !15335
  %5 = icmp eq i8 %4, 0, !dbg !15336
  ret i1 %5, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.245(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15340, metadata !DIExpression()), !dbg !15341
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15342
  %3 = load i8, i8* %2, align 1, !dbg !15343
  %4 = and i8 %3, -5, !dbg !15343
  store i8 %4, i8* %2, align 1, !dbg !15343
  ret void, !dbg !15344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct._sfnode* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15345 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15348, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15347, metadata !DIExpression()), !dbg !15349
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15350
  br i1 %4, label %5, label %12, !dbg !15352

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15353
  br i1 %6, label %7, label %12, !dbg !15354

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15360, metadata !DIExpression()) #25, !dbg !15361
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15364, metadata !DIExpression()) #25, !dbg !15369
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15371
  br i1 %8, label %10, label %9, !dbg !15374

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15375
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15375
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15375
  unreachable, !dbg !15375

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15355, metadata !DIExpression()) #25, !dbg !15361
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15377
  br label %16, !dbg !15378

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15379
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14716, metadata !DIExpression()) #25, !dbg !15379
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15382
  br i1 %13, label %15, label %14, !dbg !15383

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15384
  unreachable, !dbg !15384

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14711, metadata !DIExpression()) #25, !dbg !15379
  call void @llvm.dbg.value(metadata i32 %3, metadata !14725, metadata !DIExpression()) #25, !dbg !15385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15387, !srcloc !14731
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata i32 %0, metadata !15395, metadata !DIExpression()), !dbg !15400
  %2 = icmp eq i32 %0, 0, !dbg !15402
  br i1 %2, label %3, label %6, !dbg !15403

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15404, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %4, metadata !15407, metadata !DIExpression()) #25, !dbg !15412
  %5 = icmp eq i32 %4, 0, !dbg !15413
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15394
  ret i1 %7, !dbg !15414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #7 !dbg !15415 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15417, metadata !DIExpression()), !dbg !15419
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15420
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15421
  ret i1 %3, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15425, metadata !DIExpression()), !dbg !15427
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()), !dbg !15427
  ret i32 %2, !dbg !15429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15432, metadata !DIExpression()), !dbg !15436
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15437
  call void @llvm.dbg.value(metadata i32 0, metadata !15433, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15439
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15441, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15439
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15444
  br i1 %4, label %6, label %5, !dbg !15445

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15446
  unreachable, !dbg !15446

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %7, metadata !14689, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %7, metadata !14683, metadata !DIExpression()) #25, !dbg !15439
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %7, metadata !15435, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()), !dbg !15438
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15448
  br i1 %8, label %9, label %13, !dbg !15452

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()) #25, !dbg !15453
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15456
  %11 = load i8, i8* %10, align 1, !dbg !15457
  %12 = and i8 %11, 127, !dbg !15457
  store i8 %12, i8* %10, align 1, !dbg !15457
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()) #25, !dbg !15458
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15460
  br label %13, !dbg !15461

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15462
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15463
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15464
  %16 = zext i1 %15 to i32, !dbg !15464
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15466
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15468
  br i1 %17, label %19, label %18, !dbg !15469

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15470
  unreachable, !dbg !15470

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14711, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %7, metadata !14725, metadata !DIExpression()) #25, !dbg !15471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !15473, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15433, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()), !dbg !15438
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15474
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15476
  br i1 %21, label %22, label %23, !dbg !15477

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15478
  br label %23, !dbg !15480

23:                                               ; preds = %22, %19
  ret void, !dbg !15481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15484, metadata !DIExpression()), !dbg !15485
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15486
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15487
  ret i32 %3, !dbg !15488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15491, metadata !DIExpression()), !dbg !15492
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15493
  %3 = load i8, i8* %2, align 1, !dbg !15494
  %4 = or i8 %3, 16, !dbg !15494
  store i8 %4, i8* %2, align 1, !dbg !15494
  ret void, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15496 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15497, !srcloc !14692
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %2, metadata !14689, metadata !DIExpression()) #25, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15499
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15500
  ret void, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15504, metadata !DIExpression()), !dbg !15505
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15506
  br i1 %2, label %3, label %5, !dbg !15508

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15509
  br label %6, !dbg !15511

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14725, metadata !DIExpression()) #25, !dbg !15512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15515, !srcloc !14731
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15519, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15522
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15524, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15522
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15527
  br i1 %3, label %5, label %4, !dbg !15528

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15529
  unreachable, !dbg !15529

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %6, metadata !14689, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %6, metadata !14683, metadata !DIExpression()) #25, !dbg !15522
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15530
  call void @llvm.dbg.value(metadata i32 %6, metadata !15520, metadata !DIExpression()), !dbg !15521
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15531
  br i1 %7, label %12, label %8, !dbg !15533

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15534
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15534
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15537
  br i1 %9, label %11, label %10, !dbg !15538

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15539
  unreachable, !dbg !15539

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !15540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15542, !srcloc !14731
  br label %14, !dbg !15543

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15544
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15545
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15546
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !15546
  br label %14, !dbg !15547

14:                                               ; preds = %12, %11
  ret void, !dbg !15547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15550, metadata !DIExpression()), !dbg !15551
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15552
  %3 = load i8, i8* %2, align 1, !dbg !15552
  %4 = and i8 %3, 16, !dbg !15553
  %5 = icmp ne i8 %4, 0, !dbg !15554
  ret i1 %5, !dbg !15555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15558, metadata !DIExpression()), !dbg !15559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15560
  %3 = load i8, i8* %2, align 1, !dbg !15561
  %4 = and i8 %3, -17, !dbg !15561
  store i8 %4, i8* %2, align 1, !dbg !15561
  ret void, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15563 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15573, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15572, metadata !DIExpression()), !dbg !15577
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15578
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15578
  br i1 %5, label %9, label %6, !dbg !15578

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !15578
  br i1 %7, label %9, label %8, !dbg !15581

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 773) #27, !dbg !15582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 773) #27, !dbg !15582
  unreachable, !dbg !15582

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15574, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15585
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15587, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15589
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15589
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15585
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15590
  br i1 %11, label %13, label %12, !dbg !15591

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15592
  unreachable, !dbg !15592

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15589
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15585
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15576, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15584
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15597
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15597
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15599
  br i1 %14, label %16, label %15, !dbg !15600

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15601
  unreachable, !dbg !15601

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15587
  call void @llvm.dbg.value(metadata i32 %17, metadata !14689, metadata !DIExpression()) #25, !dbg !15589
  call void @llvm.dbg.value(metadata i32 %17, metadata !14683, metadata !DIExpression()) #25, !dbg !15585
  call void @llvm.dbg.value(metadata i32 %17, metadata !15576, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !15604, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15574, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15584
  ret void, !dbg !15605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !15606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()), !dbg !15609
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15610
  %3 = load i8, i8* %2, align 1, !dbg !15610
  %4 = and i8 %3, 1, !dbg !15611
  %5 = icmp ne i8 %4, 0, !dbg !15612
  ret i1 %5, !dbg !15613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15614 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15618, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15616, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15617, metadata !DIExpression()), !dbg !15619
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !15620
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15621
  ret void, !dbg !15622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15628, metadata !DIExpression()), !dbg !15629
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15630
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15631
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15632
  br i1 %3, label %24, label %4, !dbg !15634

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15635
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15637
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15638
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14900, metadata !DIExpression()) #25, !dbg !15639
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #25, !dbg !15639
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !15641
  br i1 %7, label %8, label %9, !dbg !15642

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !15643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !15643
  unreachable, !dbg !15643

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !15644
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14907, metadata !DIExpression()) #25, !dbg !15639
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15645
  br i1 %11, label %22, label %12, !dbg !15644

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14907, metadata !DIExpression()) #25, !dbg !15639
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15646
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14907, metadata !DIExpression()) #25, !dbg !15639
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !15647
  %16 = icmp sgt i32 %15, 0, !dbg !15648
  br i1 %16, label %17, label %19, !dbg !15649

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15650
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15651
  br label %24, !dbg !15652

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !15645
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14907, metadata !DIExpression()) #25, !dbg !15639
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15645
  br i1 %21, label %22, label %12, !dbg !15644, !llvm.loop !15653

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15655
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !15656
  br label %24, !dbg !15657

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15659 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15664, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15663, metadata !DIExpression()), !dbg !15665
  %4 = icmp eq i64 %3, -1, !dbg !15666
  br i1 %4, label %6, label %5, !dbg !15668

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15669
  br label %6, !dbg !15671

6:                                                ; preds = %5, %2
  ret void, !dbg !15672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15673 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15676, metadata !DIExpression()), !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15675, metadata !DIExpression()), !dbg !15677
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15678
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15679
  ret void, !dbg !15680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15681 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15683, metadata !DIExpression()), !dbg !15691
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15692
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15684, metadata !DIExpression()), !dbg !15691
  call void @llvm.dbg.value(metadata i32 0, metadata !15685, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15694
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15696, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15694
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15699
  br i1 %5, label %7, label %6, !dbg !15700

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15701
  unreachable, !dbg !15701

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15694
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15702
  call void @llvm.dbg.value(metadata i32 undef, metadata !15687, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15685, metadata !DIExpression()), !dbg !15693
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15703
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15704
  %10 = load i8, i8* %9, align 1, !dbg !15704
  %11 = and i8 %10, 40, !dbg !15705
  %12 = icmp eq i8 %11, 0, !dbg !15705
  call void @llvm.dbg.value(metadata i1 %12, metadata !15688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15706
  br i1 %12, label %13, label %20, !dbg !15707

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15708
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15708
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15708
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15712
  br i1 %17, label %19, label %18, !dbg !15713

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15714
  br label %19, !dbg !15716

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.245(%struct.k_thread* noundef nonnull %3) #26, !dbg !15717
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15718
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15719
  br label %20, !dbg !15720

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15721
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15721
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15723
  br i1 %21, label %23, label %22, !dbg !15724

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15725
  unreachable, !dbg !15725

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %24, metadata !14689, metadata !DIExpression()) #25, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %24, metadata !14683, metadata !DIExpression()) #25, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %24, metadata !15687, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15721
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !15728, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15685, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15685, metadata !DIExpression()), !dbg !15693
  ret void, !dbg !15729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15732, metadata !DIExpression()), !dbg !15733
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !15734
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15735
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15736
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15737
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15738
  ret void, !dbg !15739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15744, metadata !DIExpression()), !dbg !15745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15746
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15746
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15746
  br i1 %4, label %5, label %6, !dbg !15749

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 726) #27, !dbg !15750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 726) #27, !dbg !15750
  unreachable, !dbg !15750

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15753 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15755, metadata !DIExpression()), !dbg !15756
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15757
  %3 = load i8, i8* %2, align 1, !dbg !15758
  %4 = and i8 %3, -3, !dbg !15758
  store i8 %4, i8* %2, align 1, !dbg !15758
  ret void, !dbg !15759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15762, metadata !DIExpression()), !dbg !15763
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15764
  br i1 %2, label %3, label %7, !dbg !15766

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()) #25, !dbg !15767
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15770
  %5 = load i8, i8* %4, align 1, !dbg !15771
  %6 = and i8 %5, 127, !dbg !15771
  store i8 %6, i8* %4, align 1, !dbg !15771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()) #25, !dbg !15772
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15774
  br label %7, !dbg !15775

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15776
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15777
  %10 = zext i1 %9 to i32, !dbg !15777
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15778
  ret void, !dbg !15779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15782, metadata !DIExpression()), !dbg !15783
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15784
  %3 = load i8, i8* %2, align 1, !dbg !15785
  %4 = or i8 %3, 2, !dbg !15785
  store i8 %4, i8* %2, align 1, !dbg !15785
  ret void, !dbg !15786
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #23 !dbg !15787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15789, metadata !DIExpression()), !dbg !15793
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15795
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15797, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15795
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15800
  br i1 %3, label %5, label %4, !dbg !15801

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15802
  unreachable, !dbg !15802

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15795
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15803
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15794
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15807
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15809
  br i1 %6, label %8, label %7, !dbg !15810

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15811
  unreachable, !dbg !15811

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15797
  call void @llvm.dbg.value(metadata i32 %9, metadata !14689, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %9, metadata !14683, metadata !DIExpression()) #25, !dbg !15795
  call void @llvm.dbg.value(metadata i32 %9, metadata !15792, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15812
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15814, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15794
  ret void, !dbg !15815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15816 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15822, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 %0, metadata !15820, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15821, metadata !DIExpression()), !dbg !15827
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15828
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15829
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15830
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15831
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %6, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 0, metadata !15824, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15834
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15836, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15834
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15839
  br i1 %8, label %10, label %9, !dbg !15840

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15841
  unreachable, !dbg !15841

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15834
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15842
  call void @llvm.dbg.value(metadata i32 undef, metadata !15826, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()), !dbg !15833
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15843
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15847
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15848
  br i1 %13, label %14, label %15, !dbg !15849

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15850
  br label %15, !dbg !15852

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15853
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15853
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15855
  br i1 %16, label %18, label %17, !dbg !15856

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15857
  unreachable, !dbg !15857

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %19, metadata !14689, metadata !DIExpression()) #25, !dbg !15838
  call void @llvm.dbg.value(metadata i32 %19, metadata !14683, metadata !DIExpression()) #25, !dbg !15834
  call void @llvm.dbg.value(metadata i32 %19, metadata !15826, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !15860, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15824, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15824, metadata !DIExpression()), !dbg !15833
  ret i32 %6, !dbg !15861
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15862 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata i64 undef, metadata !15869, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15866, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15868, metadata !DIExpression()), !dbg !15870
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15871
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15872
  %6 = icmp eq %struct._sfnode* %0, @sched_spinlock, !dbg !15873
  br i1 %6, label %7, label %8, !dbg !15876

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 846) #27, !dbg !15877
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 846) #27, !dbg !15877
  unreachable, !dbg !15877

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15879
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15881, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15879
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15884
  br i1 %10, label %12, label %11, !dbg !15885

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15886
  unreachable, !dbg !15886

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15879
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15887
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15888
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15889
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15364, metadata !DIExpression()) #25, !dbg !15890
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15892
  br i1 %14, label %16, label %15, !dbg !15893

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15894
  unreachable, !dbg !15894

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !15895
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15360, metadata !DIExpression()) #25, !dbg !15895
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15364, metadata !DIExpression()) #25, !dbg !15897
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15899
  br i1 %17, label %19, label %18, !dbg !15900

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !15901
  unreachable, !dbg !15901

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15355, metadata !DIExpression()) #25, !dbg !15895
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !15902
  ret i32 %21, !dbg !15903
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15904 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15908, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15909, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 0, metadata !15910, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15915
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15917, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15915
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15920
  br i1 %3, label %5, label %4, !dbg !15921

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15922
  unreachable, !dbg !15922

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15915
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15912, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15909, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15914
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15909, metadata !DIExpression()), !dbg !15913
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15927
  br i1 %8, label %10, label %9, !dbg !15929

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15930
  br label %10, !dbg !15932

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15933
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15933
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15935
  br i1 %11, label %13, label %12, !dbg !15936

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15937
  unreachable, !dbg !15937

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15917
  call void @llvm.dbg.value(metadata i32 %14, metadata !14689, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %14, metadata !14683, metadata !DIExpression()) #25, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %14, metadata !15912, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15938
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15940, !srcloc !14731
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15909, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15914
  ret %struct.k_thread* %7, !dbg !15941
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15942 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15944, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 0, metadata !15946, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15951
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15953, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15951
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15956
  br i1 %3, label %5, label %4, !dbg !15957

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15958
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15958
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15958
  unreachable, !dbg !15958

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15951
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15959
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15946, metadata !DIExpression()), !dbg !15950
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15960
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15945, metadata !DIExpression()), !dbg !15949
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15963
  br i1 %8, label %11, label %9, !dbg !15965

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15966
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15968
  br label %11, !dbg !15969

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15970
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15970
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15972
  br i1 %12, label %14, label %13, !dbg !15973

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !15974
  unreachable, !dbg !15974

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %15, metadata !14689, metadata !DIExpression()) #25, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %15, metadata !14683, metadata !DIExpression()) #25, !dbg !15951
  call void @llvm.dbg.value(metadata i32 %15, metadata !15948, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !15975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15977, !srcloc !14731
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15945, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15946, metadata !DIExpression()), !dbg !15950
  ret %struct.k_thread* %7, !dbg !15978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15981, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15789, metadata !DIExpression()) #25, !dbg !15983
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()) #25, !dbg !15985
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !15986
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15988, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15986
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15991
  br i1 %3, label %5, label %4, !dbg !15992

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15993
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !15993
  unreachable, !dbg !15993

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !15986
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #25, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()) #25, !dbg !15985
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15995
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15996
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !15996
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15998
  br i1 %6, label %8, label %7, !dbg !15999

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16000
  unreachable, !dbg !16000

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %9, metadata !14689, metadata !DIExpression()) #25, !dbg !15990
  call void @llvm.dbg.value(metadata i32 %9, metadata !14683, metadata !DIExpression()) #25, !dbg !15986
  call void @llvm.dbg.value(metadata i32 %9, metadata !15792, metadata !DIExpression()) #25, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !15996
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !16001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16003, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !15790, metadata !DIExpression()) #25, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()) #25, !dbg !15985
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16004
  ret void, !dbg !16005
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata i32 %1, metadata !16009, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata i8 0, metadata !16010, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata i32 0, metadata !16011, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16016
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16018, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16016
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16021
  br i1 %4, label %6, label %5, !dbg !16022

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16023
  unreachable, !dbg !16023

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16020
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16016
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16024
  call void @llvm.dbg.value(metadata i32 undef, metadata !16013, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata i8 poison, metadata !16010, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16011, metadata !DIExpression()), !dbg !16015
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16025
  call void @llvm.dbg.value(metadata i1 %9, metadata !16010, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16014
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16028

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()) #25, !dbg !16029
  %14 = load i8, i8* %7, align 1, !dbg !16035
  %15 = and i8 %14, 127, !dbg !16035
  store i8 %15, i8* %7, align 1, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()) #25, !dbg !16036
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16038
  store i8 %12, i8* %11, align 2, !dbg !16039
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #25, !dbg !16040
  %16 = load i8, i8* %7, align 1, !dbg !16042
  %17 = or i8 %16, -128, !dbg !16042
  store i8 %17, i8* %7, align 1, !dbg !16042
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14893, metadata !DIExpression()) #25, !dbg !16043
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14900, metadata !DIExpression()) #25, !dbg !16045
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14906, metadata !DIExpression()) #25, !dbg !16045
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16047
  br i1 %18, label %19, label %20, !dbg !16048

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !16049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !16049
  unreachable, !dbg !16049

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16050
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14907, metadata !DIExpression()) #25, !dbg !16045
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16051
  br i1 %22, label %32, label %23, !dbg !16050

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14907, metadata !DIExpression()) #25, !dbg !16045
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16052
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14907, metadata !DIExpression()) #25, !dbg !16045
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !16053
  %27 = icmp sgt i32 %26, 0, !dbg !16054
  br i1 %27, label %28, label %29, !dbg !16055

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !16056
  br label %33, !dbg !16057

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !16051
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14907, metadata !DIExpression()) #25, !dbg !16045
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16051
  br i1 %31, label %32, label %23, !dbg !16050, !llvm.loop !16058

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !16060
  br label %33, !dbg !16061

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16062
  br label %35, !dbg !16063

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16064
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16066
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16068
  br i1 %36, label %38, label %37, !dbg !16069

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  unreachable, !dbg !16070

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16018
  call void @llvm.dbg.value(metadata i32 %39, metadata !14689, metadata !DIExpression()) #25, !dbg !16020
  call void @llvm.dbg.value(metadata i32 %39, metadata !14683, metadata !DIExpression()) #25, !dbg !16016
  call void @llvm.dbg.value(metadata i32 %39, metadata !16013, metadata !DIExpression()), !dbg !16015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !16071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !16073, !srcloc !14731
  call void @llvm.dbg.value(metadata i8 poison, metadata !16010, metadata !DIExpression()), !dbg !16014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16011, metadata !DIExpression()), !dbg !16015
  ret i1 %9, !dbg !16074
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16079, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.value(metadata i32 %1, metadata !16080, metadata !DIExpression()), !dbg !16082
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16083
  call void @llvm.dbg.value(metadata i1 %3, metadata !16081, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16082
  br i1 %3, label %4, label %12, !dbg !16084

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16086
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16087
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16087
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16087
  %9 = load i8, i8* %8, align 1, !dbg !16087
  %10 = icmp eq i8 %9, 0, !dbg !16088
  br i1 %10, label %11, label %12, !dbg !16089

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16090
  br label %12, !dbg !16092

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16094 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16096, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16100
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16102, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16100
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16105
  br i1 %2, label %4, label %3, !dbg !16106

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16107
  unreachable, !dbg !16107

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16100
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16098, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16096, metadata !DIExpression()), !dbg !16099
  tail call fastcc void @z_sched_lock() #26, !dbg !16109
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16112
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16112
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16114
  br i1 %5, label %7, label %6, !dbg !16115

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16116
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16116
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16116
  unreachable, !dbg !16116

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16102
  call void @llvm.dbg.value(metadata i32 %8, metadata !14689, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %8, metadata !14683, metadata !DIExpression()) #25, !dbg !16100
  call void @llvm.dbg.value(metadata i32 %8, metadata !16098, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !16117
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16119, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !16096, metadata !DIExpression()), !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16096, metadata !DIExpression()), !dbg !16099
  ret void, !dbg !16120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16121 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16122, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %1, metadata !15407, metadata !DIExpression()) #25, !dbg !16127
  %2 = icmp eq i32 %1, 0, !dbg !16128
  br i1 %2, label %4, label %3, !dbg !16129

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.261, i32 0, i32 0), i32 noundef 253) #27, !dbg !16130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.261, i32 0, i32 0), i32 noundef 253) #27, !dbg !16130
  unreachable, !dbg !16130

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16132
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16132
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16132
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16132
  %9 = load i8, i8* %8, align 1, !dbg !16132
  %10 = icmp eq i8 %9, 1, !dbg !16132
  br i1 %10, label %11, label %12, !dbg !16135

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.261, i32 0, i32 0), i32 noundef 254) #27, !dbg !16136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.261, i32 0, i32 0), i32 noundef 254) #27, !dbg !16136
  unreachable, !dbg !16136

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16138
  store i8 %13, i8* %8, align 1, !dbg !16138
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16139, !srcloc !16141
  ret void, !dbg !16142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16143 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16145, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16149
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16151, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16149
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16154
  br i1 %2, label %4, label %3, !dbg !16155

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16156
  unreachable, !dbg !16156

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16149
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16147, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16145, metadata !DIExpression()), !dbg !16148
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16158
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16158
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16158
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16158
  %9 = load i8, i8* %8, align 1, !dbg !16158
  %10 = icmp eq i8 %9, 0, !dbg !16158
  br i1 %10, label %11, label %12, !dbg !16163

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 999) #27, !dbg !16164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 999) #27, !dbg !16164
  unreachable, !dbg !16164

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16166, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %13, metadata !15407, metadata !DIExpression()) #25, !dbg !16171
  %14 = icmp eq i32 %13, 0, !dbg !16172
  br i1 %14, label %16, label %15, !dbg !16173

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1000) #27, !dbg !16174
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16174
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1000) #27, !dbg !16174
  unreachable, !dbg !16174

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16176
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16177
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16177
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16177
  %21 = load i8, i8* %20, align 1, !dbg !16178
  %22 = add i8 %21, 1, !dbg !16178
  store i8 %22, i8* %20, align 1, !dbg !16178
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16179
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16180
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16180
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16182
  br i1 %23, label %25, label %24, !dbg !16183

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16184
  unreachable, !dbg !16184

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %26, metadata !14689, metadata !DIExpression()) #25, !dbg !16153
  call void @llvm.dbg.value(metadata i32 %26, metadata !14683, metadata !DIExpression()) #25, !dbg !16149
  call void @llvm.dbg.value(metadata i32 %26, metadata !16147, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16180
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !16185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !16187, !srcloc !14731
  call void @llvm.dbg.value(metadata i32 1, metadata !16145, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16145, metadata !DIExpression()), !dbg !16148
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16188
  ret void, !dbg !16189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #7 !dbg !16190 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16191
  ret %struct.k_thread* %1, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16197, metadata !DIExpression()), !dbg !16202
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16198, metadata !DIExpression()), !dbg !16202
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16203
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16199, metadata !DIExpression()), !dbg !16202
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16204
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16200, metadata !DIExpression()), !dbg !16202
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16205
  call void @llvm.dbg.value(metadata i32 %5, metadata !16201, metadata !DIExpression()), !dbg !16202
  %6 = icmp sgt i32 %5, 0, !dbg !16206
  br i1 %6, label %17, label %7, !dbg !16208

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16209
  br i1 %8, label %17, label %9, !dbg !16211

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16212
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16212
  %12 = load i32, i32* %11, align 8, !dbg !16212
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16214
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16214
  %15 = load i32, i32* %14, align 8, !dbg !16214
  %16 = icmp ult i32 %12, %15, !dbg !16215
  br label %17, !dbg !16216

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16217
  ret i1 %18, !dbg !16218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16219 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16236, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16237, metadata !DIExpression()), !dbg !16251
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !16252
  br i1 %4, label %5, label %6, !dbg !16255

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1179) #27, !dbg !16256
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1179) #27, !dbg !16256
  unreachable, !dbg !16256

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16258
  %8 = load i32, i32* %7, align 4, !dbg !16259
  %9 = add nsw i32 %8, 1, !dbg !16259
  store i32 %9, i32* %7, align 4, !dbg !16259
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16260
  store i32 %8, i32* %10, align 8, !dbg !16261
  %11 = load i32, i32* %7, align 4, !dbg !16262
  %12 = icmp eq i32 %11, 0, !dbg !16263
  br i1 %12, label %13, label %35, !dbg !16264

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16265
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !16265
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16239, metadata !DIExpression()), !dbg !16265
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16265
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16265
  %17 = load i32, i32* %16, align 4, !dbg !16265
  %18 = shl i32 %17, 2, !dbg !16265
  %19 = alloca i8, i32 %18, align 8, !dbg !16265
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16265
  store i8* %19, i8** %20, align 4, !dbg !16265
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16265
  %22 = alloca i8, i32 %17, align 8, !dbg !16265
  store i8* %22, i8** %21, align 4, !dbg !16265
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16265
  store i32 -1, i32* %23, align 4, !dbg !16265
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16266
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16248, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16238, metadata !DIExpression()), !dbg !16251
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16268
  br i1 %25, label %26, label %27, !dbg !16265

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !16268
  br label %35, !dbg !16269

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16238, metadata !DIExpression()), !dbg !16251
  %29 = load i32, i32* %7, align 4, !dbg !16270
  %30 = add nsw i32 %29, 1, !dbg !16270
  store i32 %30, i32* %7, align 4, !dbg !16270
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16272
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16272
  store i32 %29, i32* %32, align 8, !dbg !16273
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16266
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16248, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16238, metadata !DIExpression()), !dbg !16251
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16268
  br i1 %34, label %26, label %27, !dbg !16265, !llvm.loop !16274

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16276
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16277
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !16278
  ret void, !dbg !16279
}

; Function Attrs: optsize
declare !dbg !16280 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16285 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16288 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16290, metadata !DIExpression()), !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16291, metadata !DIExpression()), !dbg !16292
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !16293
  br i1 %3, label %4, label %5, !dbg !16296

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1200) #27, !dbg !16297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1200) #27, !dbg !16297
  unreachable, !dbg !16297

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16299
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16300
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !16301
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16302
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16302
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16304
  br i1 %10, label %11, label %13, !dbg !16305

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16306
  store i32 0, i32* %12, align 4, !dbg !16308
  br label %13, !dbg !16309

13:                                               ; preds = %11, %5
  ret void, !dbg !16310
}

; Function Attrs: optsize
declare !dbg !16311 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16312 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16316, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16317, metadata !DIExpression()), !dbg !16319
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16320
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16321
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16318, metadata !DIExpression()), !dbg !16319
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16317, metadata !DIExpression()), !dbg !16319
  ret %struct.k_thread* %4, !dbg !16322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16323 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16327, metadata !DIExpression()), !dbg !16328
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16329
  ret %struct.rbnode* %2, !dbg !16330
}

; Function Attrs: optsize
declare !dbg !16331 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16334 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16346, metadata !DIExpression()), !dbg !16350
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16351
  %3 = load i32, i32* %2, align 4, !dbg !16351
  %4 = icmp eq i32 %3, 0, !dbg !16353
  br i1 %4, label %10, label %5, !dbg !16354

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16347, metadata !DIExpression()), !dbg !16350
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16355, !range !4243
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16356
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16348, metadata !DIExpression()), !dbg !16350
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16357
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16349, metadata !DIExpression()), !dbg !16350
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16347, metadata !DIExpression()), !dbg !16350
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16350
  ret %struct.k_thread* %11, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16359 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16363, metadata !DIExpression()), !dbg !16366
  call void @llvm.dbg.value(metadata i32 0, metadata !16364, metadata !DIExpression()), !dbg !16366
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16367
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16365, metadata !DIExpression()), !dbg !16366
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16368
  br i1 %3, label %8, label %4, !dbg !16369

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16370
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16372
  call void @llvm.dbg.value(metadata i32 1, metadata !16364, metadata !DIExpression()), !dbg !16366
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16367
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16365, metadata !DIExpression()), !dbg !16366
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16368
  br i1 %7, label %8, label %4, !dbg !16369, !llvm.loop !16373

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16366
  ret i32 %9, !dbg !16375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #7 !dbg !16376 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16378, metadata !DIExpression()), !dbg !16379
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16380
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16381
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16382
  ret %struct.k_thread* %4, !dbg !16383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !16384 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16393, metadata !DIExpression()), !dbg !16394
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16395
  tail call fastcc void @sys_dlist_init.266(%struct._dnode* noundef nonnull %2) #26, !dbg !16396
  ret void, !dbg !16397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.266(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !16398 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16402, metadata !DIExpression()), !dbg !16403
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16404
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16405
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16406
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16407
  ret void, !dbg !16408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16409 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16410
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16411
  ret void, !dbg !16412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !16413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16418, metadata !DIExpression()), !dbg !16419
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16420
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16420
  %4 = load i8, i8* %3, align 2, !dbg !16420
  %5 = sext i8 %4 to i32, !dbg !16421
  ret i32 %5, !dbg !16422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16427, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i32 %1, metadata !16428, metadata !DIExpression()), !dbg !16430
  %3 = add i32 %1, 16, !dbg !16431
  %4 = icmp ult i32 %3, 31, !dbg !16431
  br i1 %4, label %6, label %5, !dbg !16431

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1331) #27, !dbg !16435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.270, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !16435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1331) #27, !dbg !16435
  unreachable, !dbg !16435

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16437, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %7, metadata !15407, metadata !DIExpression()) #25, !dbg !16442
  %8 = icmp eq i32 %7, 0, !dbg !16443
  br i1 %8, label %10, label %9, !dbg !16444

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1332) #27, !dbg !16445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1332) #27, !dbg !16445
  unreachable, !dbg !16445

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16429, metadata !DIExpression()), !dbg !16430
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16447
  ret void, !dbg !16448
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16449 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16450
  br i1 %1, label %8, label %2, !dbg !16451

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !16452
  br i1 %3, label %8, label %4, !dbg !16453

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16454
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16455
  %7 = xor i1 %6, true, !dbg !16453
  br label %8, !dbg !16453

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #7 !dbg !16457 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16458, !range !6769
  %2 = icmp eq i8 %1, 0, !dbg !16458
  ret i1 %2, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16460 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16463, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %1, metadata !15407, metadata !DIExpression()) #25, !dbg !16468
  %2 = icmp eq i32 %1, 0, !dbg !16469
  br i1 %2, label %4, label %3, !dbg !16470

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1392) #27, !dbg !16471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1392) #27, !dbg !16471
  unreachable, !dbg !16471

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16473
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16475, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16473
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16478
  br i1 %6, label %8, label %7, !dbg !16479

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16480
  unreachable, !dbg !16480

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16473
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16481
  call void @llvm.dbg.value(metadata i32 undef, metadata !16462, metadata !DIExpression()), !dbg !16482
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16483
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14869, metadata !DIExpression()) #25, !dbg !16486
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16488
  %11 = load i8, i8* %10, align 1, !dbg !16489
  %12 = and i8 %11, 127, !dbg !16489
  store i8 %12, i8* %10, align 1, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14877, metadata !DIExpression()) #25, !dbg !16490
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !16492
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16493
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14886, metadata !DIExpression()) #25, !dbg !16494
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16496
  %15 = load i8, i8* %14, align 1, !dbg !16497
  %16 = or i8 %15, -128, !dbg !16497
  store i8 %16, i8* %14, align 1, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14893, metadata !DIExpression()) #25, !dbg !16498
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14900, metadata !DIExpression()) #25, !dbg !16500
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14906, metadata !DIExpression()) #25, !dbg !16500
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !16502
  br i1 %17, label %18, label %19, !dbg !16503

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !16504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 186) #27, !dbg !16504
  unreachable, !dbg !16504

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16505
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14907, metadata !DIExpression()) #25, !dbg !16500
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16506
  br i1 %21, label %32, label %22, !dbg !16505

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14907, metadata !DIExpression()) #25, !dbg !16500
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14907, metadata !DIExpression()) #25, !dbg !16500
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !16508
  %26 = icmp sgt i32 %25, 0, !dbg !16509
  br i1 %26, label %27, label %29, !dbg !16510

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16511
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !16512
  br label %34, !dbg !16513

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !16506
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14907, metadata !DIExpression()) #25, !dbg !16500
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16506
  br i1 %31, label %32, label %22, !dbg !16505, !llvm.loop !16514

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16516
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !16517
  br label %34, !dbg !16518

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16519
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16520
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15360, metadata !DIExpression()) #25, !dbg !16520
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15364, metadata !DIExpression()) #25, !dbg !16522
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16524
  br i1 %35, label %37, label %36, !dbg !16525

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16526
  unreachable, !dbg !16526

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16475
  call void @llvm.dbg.value(metadata i32 %38, metadata !14689, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %38, metadata !14683, metadata !DIExpression()) #25, !dbg !16473
  call void @llvm.dbg.value(metadata i32 %38, metadata !16462, metadata !DIExpression()), !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16520
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !16527
  ret void, !dbg !16528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16529 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16533, metadata !DIExpression()), !dbg !16536
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16537, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %3, metadata !15407, metadata !DIExpression()) #25, !dbg !16542
  %4 = icmp eq i32 %3, 0, !dbg !16543
  br i1 %4, label %6, label %5, !dbg !16544

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1463) #27, !dbg !16545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1463) #27, !dbg !16545
  unreachable, !dbg !16545

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16547
  br i1 %7, label %8, label %10, !dbg !16549

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16550
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !16552
  br label %15, !dbg !16553

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16534, metadata !DIExpression()), !dbg !16536
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16554
  %12 = sext i32 %11 to i64, !dbg !16554
  call void @llvm.dbg.value(metadata i64 %12, metadata !16534, metadata !DIExpression()), !dbg !16536
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !16555
  %14 = trunc i64 %13 to i32, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %14, metadata !16535, metadata !DIExpression()), !dbg !16536
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16536
  ret i32 %16, !dbg !16556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16561, metadata !DIExpression()), !dbg !16562
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16563, !srcloc !16565
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16566
  ret void, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16572, metadata !DIExpression()), !dbg !16576
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16577, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %2, metadata !15407, metadata !DIExpression()) #25, !dbg !16582
  %3 = icmp eq i32 %2, 0, !dbg !16583
  br i1 %3, label %5, label %4, !dbg !16584

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1420) #27, !dbg !16585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1420) #27, !dbg !16585
  unreachable, !dbg !16585

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16587
  br i1 %6, label %7, label %8, !dbg !16589

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !16590
  br label %43, !dbg !16592

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16574, metadata !DIExpression()), !dbg !16576
  %9 = icmp sgt i64 %0, -3, !dbg !16593
  br i1 %9, label %10, label %14, !dbg !16595

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !16596
  %12 = trunc i64 %0 to i32, !dbg !16598
  %13 = add i32 %11, %12, !dbg !16598
  call void @llvm.dbg.value(metadata i32 %13, metadata !16573, metadata !DIExpression()), !dbg !16576
  br label %17, !dbg !16599

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16600
  %16 = sub i32 -2, %15, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %16, metadata !16573, metadata !DIExpression()), !dbg !16576
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16602
  call void @llvm.dbg.value(metadata i32 %18, metadata !16573, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16603
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16605, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16603
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16608
  br i1 %20, label %22, label %21, !dbg !16609

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16610
  unreachable, !dbg !16610

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16603
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16611
  call void @llvm.dbg.value(metadata i32 undef, metadata !16575, metadata !DIExpression()), !dbg !16576
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16612
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16613
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !16614
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16615
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16616
  tail call fastcc void @z_add_thread_timeout.249(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !16616
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16617
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !16618
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16619
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15360, metadata !DIExpression()) #25, !dbg !16619
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15364, metadata !DIExpression()) #25, !dbg !16621
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16623
  br i1 %27, label %29, label %28, !dbg !16624

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16625
  unreachable, !dbg !16625

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %30, metadata !14689, metadata !DIExpression()) #25, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %30, metadata !14683, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %30, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16619
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !16626
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16627
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !16627
  br i1 %33, label %34, label %35, !dbg !16630

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1448) #27, !dbg !16631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.239, i32 0, i32 0)) #27, !dbg !16631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1448) #27, !dbg !16631
  unreachable, !dbg !16631

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16633
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !16634
  %38 = zext i32 %37 to i64, !dbg !16634
  %39 = sub nsw i64 %36, %38, !dbg !16635
  call void @llvm.dbg.value(metadata i64 %39, metadata !16572, metadata !DIExpression()), !dbg !16576
  %40 = icmp sgt i64 %39, 0, !dbg !16636
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16636
  %42 = trunc i64 %41 to i32, !dbg !16636
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16576
  ret i32 %44, !dbg !16637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16638 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16640, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.value(metadata i64 %0, metadata !14737, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i32 10000, metadata !14740, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i32 1000, metadata !14741, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i8 1, metadata !14742, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i1 false, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16642
  call void @llvm.dbg.value(metadata i1 false, metadata !14744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16642
  call void @llvm.dbg.value(metadata i8 0, metadata !14745, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i1 false, metadata !14746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16642
  call void @llvm.dbg.value(metadata i1 true, metadata !14747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16642
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i64 %0, metadata !14737, metadata !DIExpression()), !dbg !16642
  %2 = udiv i64 %0, 10, !dbg !16644
  ret i64 %2, !dbg !16648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16649 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16650, !srcloc !16652
  tail call void @z_impl_k_yield() #26, !dbg !16653
  ret void, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16659, metadata !DIExpression()), !dbg !16661
  %2 = sext i32 %0 to i64, !dbg !16662
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16663
  call void @llvm.dbg.value(metadata i64 %3, metadata !16660, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16661
  %4 = shl i64 %3, 32, !dbg !16664
  %5 = ashr exact i64 %4, 32, !dbg !16664
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16665
  call void @llvm.dbg.value(metadata i32 %6, metadata !16660, metadata !DIExpression()), !dbg !16661
  %7 = sext i32 %6 to i64, !dbg !16666
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16667
  %9 = trunc i64 %8 to i32, !dbg !16667
  ret i32 %9, !dbg !16668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16669 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16671, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i64 %0, metadata !14737, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14740, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i32 10000, metadata !14741, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i8 1, metadata !14742, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i1 false, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16673
  call void @llvm.dbg.value(metadata i1 true, metadata !14744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16673
  call void @llvm.dbg.value(metadata i8 0, metadata !14745, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i1 false, metadata !14746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16673
  call void @llvm.dbg.value(metadata i1 true, metadata !14747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16673
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16673
  %2 = add i64 %0, 99, !dbg !16675
  call void @llvm.dbg.value(metadata i64 %2, metadata !14737, metadata !DIExpression()), !dbg !16673
  %3 = udiv i64 %2, 100, !dbg !16676
  ret i64 %3, !dbg !16677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16678 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16680, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata i64 %0, metadata !14737, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i32 10000, metadata !14740, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14741, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i8 1, metadata !14742, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i1 false, metadata !14743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16682
  call void @llvm.dbg.value(metadata i1 false, metadata !14744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16682
  call void @llvm.dbg.value(metadata i8 0, metadata !14745, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i1 true, metadata !14746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16682
  call void @llvm.dbg.value(metadata i1 false, metadata !14747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16682
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i64 0, metadata !14748, metadata !DIExpression()), !dbg !16682
  %2 = mul i64 %0, 100, !dbg !16684
  ret i64 %2, !dbg !16686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16689, metadata !DIExpression()), !dbg !16690
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16691
  br i1 %2, label %14, label %3, !dbg !16693

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16694
  %5 = icmp slt i32 %4, 0, !dbg !16696
  br i1 %5, label %6, label %10, !dbg !16697

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16698
  %8 = load i8, i8* %7, align 1, !dbg !16698
  %9 = icmp eq i8 %8, 16, !dbg !16701
  br i1 %9, label %10, label %14, !dbg !16702

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16703
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16704
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16705, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %11, metadata !15407, metadata !DIExpression()) #25, !dbg !16709
  %12 = icmp eq i32 %11, 0, !dbg !16710
  br i1 %12, label %13, label %14, !dbg !16711

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16712
  br label %14, !dbg !16714

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16718, metadata !DIExpression()), !dbg !16719
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16720
  %3 = load i8, i8* %2, align 1, !dbg !16720
  %4 = and i8 %3, 2, !dbg !16721
  %5 = icmp ne i8 %4, 0, !dbg !16722
  ret i1 %5, !dbg !16723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #7 !dbg !16724 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16728, metadata !DIExpression()), !dbg !16730
  ret %struct.k_thread* %1, !dbg !16731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16732 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16733, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %1, metadata !15407, metadata !DIExpression()) #25, !dbg !16736
  %2 = icmp eq i32 %1, 0, !dbg !16737
  br i1 %2, label %3, label %8, !dbg !16738

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16739
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16740
  %6 = icmp ne i32 %5, 0, !dbg !16738
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16744, metadata !DIExpression()), !dbg !16746
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16747
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16749, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16747
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16752
  br i1 %3, label %5, label %4, !dbg !16753

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16754
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16754
  unreachable, !dbg !16754

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16749
  call void @llvm.dbg.value(metadata i32 %6, metadata !14689, metadata !DIExpression()) #25, !dbg !16751
  call void @llvm.dbg.value(metadata i32 %6, metadata !14683, metadata !DIExpression()) #25, !dbg !16747
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %6, metadata !16745, metadata !DIExpression()), !dbg !16746
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16756
  %8 = load i8, i8* %7, align 4, !dbg !16756
  %9 = and i8 %8, 1, !dbg !16758
  %10 = icmp eq i8 %9, 0, !dbg !16759
  br i1 %10, label %15, label %11, !dbg !16760

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16761
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16764
  br i1 %12, label %14, label %13, !dbg !16765

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16766
  unreachable, !dbg !16766

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !16767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16769, !srcloc !14731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.279, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !16770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16770
  unreachable, !dbg !16770

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16774
  %17 = load i8, i8* %16, align 1, !dbg !16774
  %18 = and i8 %17, 8, !dbg !16776
  %19 = icmp eq i8 %18, 0, !dbg !16777
  br i1 %19, label %24, label %20, !dbg !16778

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16779
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16779
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16782
  br i1 %21, label %23, label %22, !dbg !16783

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16784
  unreachable, !dbg !16784

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !16779
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !16785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16787, !srcloc !14731
  br label %39, !dbg !16788

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16789
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16790
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16792
  br i1 %26, label %27, label %35, !dbg !16793

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16794, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %28, metadata !15407, metadata !DIExpression()) #25, !dbg !16797
  %29 = icmp eq i32 %28, 0, !dbg !16798
  br i1 %29, label %30, label %35, !dbg !16799

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15360, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15364, metadata !DIExpression()) #25, !dbg !16803
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16805
  br i1 %31, label %33, label %32, !dbg !16806

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16807
  unreachable, !dbg !16807

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15355, metadata !DIExpression()) #25, !dbg !16800
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !16808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.280, i32 0, i32 0)) #27, !dbg !16809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16809
  unreachable, !dbg !16809

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16813
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16813
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16815
  br i1 %36, label %38, label %37, !dbg !16816

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16817
  unreachable, !dbg !16817

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14711, metadata !DIExpression()) #25, !dbg !16813
  call void @llvm.dbg.value(metadata i32 %6, metadata !14725, metadata !DIExpression()) #25, !dbg !16818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16820, !srcloc !14731
  br label %39, !dbg !16821

39:                                               ; preds = %38, %23
  ret void, !dbg !16821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()), !dbg !16825
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16826
  %3 = load i8, i8* %2, align 1, !dbg !16826
  %4 = and i8 %3, 8, !dbg !16828
  %5 = icmp eq i8 %4, 0, !dbg !16829
  br i1 %5, label %6, label %20, !dbg !16830

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16831
  %8 = or i8 %7, 8, !dbg !16831
  store i8 %8, i8* %2, align 1, !dbg !16831
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16833
  br i1 %9, label %10, label %12, !dbg !16835

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()) #25, !dbg !16836
  %11 = and i8 %8, 95, !dbg !16839
  store i8 %11, i8* %2, align 1, !dbg !16839
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()) #25, !dbg !16840
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !16842
  br label %12, !dbg !16843

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16844
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16844
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16846
  br i1 %15, label %17, label %16, !dbg !16847

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16848
  br label %17, !dbg !16850

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16851
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16852
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !16853
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16854
  br label %20, !dbg !16855

20:                                               ; preds = %17, %1
  ret void, !dbg !16856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16861, metadata !DIExpression()), !dbg !16863
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16864
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16862, metadata !DIExpression()), !dbg !16863
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16865
  br i1 %3, label %10, label %4, !dbg !16866

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16867
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16870, metadata !DIExpression()), !dbg !16876
  call void @llvm.dbg.value(metadata i32 0, metadata !16875, metadata !DIExpression()), !dbg !16876
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16878
  store i32 0, i32* %7, align 4, !dbg !16879
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16880
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16864
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16862, metadata !DIExpression()), !dbg !16863
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16865
  br i1 %9, label %10, label %4, !dbg !16866, !llvm.loop !16881

10:                                               ; preds = %4, %1
  ret void, !dbg !16883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16884 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16889, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16888, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16893
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16895, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16897
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16897
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16893
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16898
  br i1 %4, label %6, label %5, !dbg !16899

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16900
  unreachable, !dbg !16900

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16895
  call void @llvm.dbg.value(metadata i32 %7, metadata !14689, metadata !DIExpression()) #25, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %7, metadata !14683, metadata !DIExpression()) #25, !dbg !16893
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16901
  call void @llvm.dbg.value(metadata i32 %7, metadata !16890, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata i32 0, metadata !16891, metadata !DIExpression()), !dbg !16892
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16902
  %9 = load i8, i8* %8, align 1, !dbg !16902
  %10 = and i8 %9, 8, !dbg !16904
  %11 = icmp eq i8 %10, 0, !dbg !16905
  br i1 %11, label %12, label %35, !dbg !16906

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16889, metadata !DIExpression()), !dbg !16892
  %14 = icmp eq i64 %13, 0, !dbg !16907
  br i1 %14, label %35, label %15, !dbg !16909

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16910
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16912
  br i1 %17, label %35, label %18, !dbg !16913

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16914
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16914
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16915
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16916
  br i1 %22, label %35, label %23, !dbg !16917

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16918, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %24, metadata !15407, metadata !DIExpression()) #25, !dbg !16924
  %25 = icmp eq i32 %24, 0, !dbg !16925
  br i1 %25, label %27, label %26, !dbg !16926

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.281, i32 0, i32 0)) #27, !dbg !16927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.237, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16927
  unreachable, !dbg !16927

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16929
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16930
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #26, !dbg !16931
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16932
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !15355, metadata !DIExpression()) #25, !dbg !16934
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15360, metadata !DIExpression()) #25, !dbg !16934
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !15364, metadata !DIExpression()) #25, !dbg !16936
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16938
  br i1 %31, label %33, label %32, !dbg !16939

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 225) #27, !dbg !16940
  unreachable, !dbg !16940

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15355, metadata !DIExpression()) #25, !dbg !16934
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !16941
  call void @llvm.dbg.value(metadata i32 %34, metadata !16891, metadata !DIExpression()), !dbg !16892
  br label %40, !dbg !16942

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16943
  call void @llvm.dbg.value(metadata i32 %36, metadata !16891, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !16944
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !16944
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16946
  br i1 %37, label %39, label %38, !dbg !16947

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !16948
  unreachable, !dbg !16948

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14711, metadata !DIExpression()) #25, !dbg !16944
  call void @llvm.dbg.value(metadata i32 %7, metadata !14725, metadata !DIExpression()) #25, !dbg !16949
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !16951, !srcloc !14731
  br label %40, !dbg !16952

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16892
  ret i32 %41, !dbg !16953
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16954 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16958, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 %1, metadata !16959, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i8* %2, metadata !16960, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i8 0, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14677, metadata !DIExpression()) #25, !dbg !16968
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16970, !srcloc !14692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14690, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16968
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16973
  br i1 %5, label %7, label %6, !dbg !16974

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.234, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 148) #27, !dbg !16975
  unreachable, !dbg !16975

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14683, metadata !DIExpression()) #25, !dbg !16968
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16976
  call void @llvm.dbg.value(metadata i32 undef, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i8 poison, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !16977
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16961, metadata !DIExpression()), !dbg !16966
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16980
  br i1 %10, label %15, label %11, !dbg !16982

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16983, metadata !DIExpression()), !dbg !16990
  call void @llvm.dbg.value(metadata i32 %1, metadata !16988, metadata !DIExpression()), !dbg !16990
  call void @llvm.dbg.value(metadata i8* %2, metadata !16989, metadata !DIExpression()), !dbg !16990
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16870, metadata !DIExpression()), !dbg !16993
  call void @llvm.dbg.value(metadata i32 %1, metadata !16875, metadata !DIExpression()), !dbg !16993
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !16995
  store i32 %1, i32* %12, align 4, !dbg !16996
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16997
  store i8* %2, i8** %13, align 4, !dbg !16998
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16999
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !17000
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !17001
  call void @llvm.dbg.value(metadata i8 1, metadata !16962, metadata !DIExpression()), !dbg !16966
  br label %15, !dbg !17002

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14716, metadata !DIExpression()) #25, !dbg !17003
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !17005
  br i1 %16, label %18, label %17, !dbg !17006

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !17007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.235, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !17007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.233, i32 0, i32 0), i32 noundef 194) #27, !dbg !17007
  unreachable, !dbg !17007

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16966
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16970
  call void @llvm.dbg.value(metadata i32 %20, metadata !14689, metadata !DIExpression()) #25, !dbg !16972
  call void @llvm.dbg.value(metadata i32 %20, metadata !14683, metadata !DIExpression()) #25, !dbg !16968
  call void @llvm.dbg.value(metadata i32 %20, metadata !16965, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14711, metadata !DIExpression()) #25, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14725, metadata !DIExpression()) #25, !dbg !17008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !17010, !srcloc !14731
  call void @llvm.dbg.value(metadata i8 poison, metadata !16962, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16967
  ret i1 %19, !dbg !17011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17012 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17017, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i64 undef, metadata !17019, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !17016, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i8** %4, metadata !17020, metadata !DIExpression()), !dbg !17022
  %6 = tail call i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %6, metadata !17021, metadata !DIExpression()), !dbg !17022
  %7 = icmp eq i8** %4, null, !dbg !17024
  br i1 %7, label %12, label %8, !dbg !17026

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17027
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17029
  %11 = load i8*, i8** %10, align 4, !dbg !17029
  store i8* %11, i8** %4, align 4, !dbg !17030
  br label %12, !dbg !17031

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17033 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17035
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17036
  ret void, !dbg !17037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17038 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17048, metadata !DIExpression()), !dbg !17065
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17046, metadata !DIExpression()), !dbg !17065
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17047, metadata !DIExpression()), !dbg !17065
  %5 = icmp eq i64 %4, -1, !dbg !17066
  br i1 %5, label %63, label %6, !dbg !17068

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17069
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* noundef %7) #26, !dbg !17069
  br i1 %8, label %9, label %10, !dbg !17072

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.289, i32 0, i32 0), i32 noundef 99) #27, !dbg !17073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.290, i32 0, i32 0)) #27, !dbg !17073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.289, i32 0, i32 0), i32 noundef 99) #27, !dbg !17073
  unreachable, !dbg !17073

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17075
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17076
  call void @llvm.dbg.value(metadata i32 0, metadata !17049, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17085
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17087, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17085
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17095
  br i1 %13, label %15, label %14, !dbg !17098

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17099
  unreachable, !dbg !17099

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17087
  call void @llvm.dbg.value(metadata i32 %16, metadata !17090, metadata !DIExpression()) #25, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %16, metadata !17084, metadata !DIExpression()) #25, !dbg !17085
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17101
  call void @llvm.dbg.value(metadata i32 %16, metadata !17055, metadata !DIExpression()), !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !17049, metadata !DIExpression()), !dbg !17077
  %17 = icmp slt i64 %4, -1, !dbg !17102
  br i1 %17, label %18, label %24, !dbg !17103

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17104
  %20 = add i64 %4, %19, !dbg !17105
  %21 = sub i64 -2, %20, !dbg !17105
  call void @llvm.dbg.value(metadata i64 %21, metadata !17059, metadata !DIExpression()), !dbg !17106
  %22 = icmp sgt i64 %21, 1, !dbg !17107
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17107
  br label %29, !dbg !17108

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17109
  %26 = tail call fastcc i32 @elapsed.294() #26, !dbg !17111
  %27 = sext i32 %26 to i64, !dbg !17111
  %28 = add nsw i64 %25, %27, !dbg !17112
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17113
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17114
  store i64 %30, i64* %31, align 8, !dbg !17115
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !17116
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17056, metadata !DIExpression()), !dbg !17118
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17119
  br i1 %33, label %48, label %34, !dbg !17119

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17120
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17056, metadata !DIExpression()), !dbg !17118
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17124
  %38 = load i64, i64* %37, align 8, !dbg !17124
  %39 = icmp slt i64 %35, %38, !dbg !17125
  br i1 %39, label %40, label %44, !dbg !17126

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17124
  %42 = sub nsw i64 %38, %35, !dbg !17127
  store i64 %42, i64* %41, align 8, !dbg !17127
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17129
  tail call fastcc void @sys_dlist_insert.295(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !17130
  br label %49, !dbg !17131

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17132
  store i64 %45, i64* %31, align 8, !dbg !17132
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !17133
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17056, metadata !DIExpression()), !dbg !17118
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17119
  br i1 %47, label %48, label %34, !dbg !17119, !llvm.loop !17134

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.296(%struct._dnode* noundef nonnull %7) #26, !dbg !17136
  br label %49, !dbg !17139

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !17140
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17141
  br i1 %51, label %52, label %59, !dbg !17142

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %53, metadata !17062, metadata !DIExpression()), !dbg !17144
  %54 = icmp ne i32 %53, 0, !dbg !17145
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17147
  br i1 %57, label %59, label %58, !dbg !17147

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !17148
  br label %59, !dbg !17150

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17157
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17157
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17159
  br i1 %60, label %62, label %61, !dbg !17162

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17163
  unreachable, !dbg !17163

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17151, metadata !DIExpression()) #25, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %16, metadata !17165, metadata !DIExpression()) #25, !dbg !17168
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !17170, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 undef, metadata !17049, metadata !DIExpression()), !dbg !17077
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !17173 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17179, metadata !DIExpression()), !dbg !17180
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17181
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17181
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17182
  ret i1 %4, !dbg !17183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.294() unnamed_addr #1 !dbg !17184 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17187
  %2 = icmp eq i32 %1, 0, !dbg !17188
  br i1 %2, label %3, label %5, !dbg !17187

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17189
  br label %5, !dbg !17187

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17187
  ret i32 %6, !dbg !17190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #7 !dbg !17191 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.301() #26, !dbg !17197
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17195, metadata !DIExpression()), !dbg !17198
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17199
  ret %struct._timeout* %2, !dbg !17200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.295(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17201 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17205, metadata !DIExpression()), !dbg !17209
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17206, metadata !DIExpression()), !dbg !17209
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17210
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17210
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17207, metadata !DIExpression()), !dbg !17209
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17211
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17212
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17213
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17214
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17215
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17216
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17217
  ret void, !dbg !17218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #7 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17223, metadata !DIExpression()), !dbg !17225
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17226
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.299(%struct._dnode* noundef %2) #26, !dbg !17227
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17224, metadata !DIExpression()), !dbg !17225
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17228
  ret %struct._timeout* %4, !dbg !17229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.296(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17230 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17235, metadata !DIExpression()), !dbg !17238
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17236, metadata !DIExpression()), !dbg !17238
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17239
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17237, metadata !DIExpression()), !dbg !17238
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17240
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17241
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17242
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17243
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17244
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17245
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17246
  ret void, !dbg !17247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17248 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17253
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17250, metadata !DIExpression()), !dbg !17254
  %2 = tail call fastcc i32 @elapsed.294() #26, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %2, metadata !17251, metadata !DIExpression()), !dbg !17254
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17256
  br i1 %3, label %14, label %4, !dbg !17258

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17259
  %6 = load i64, i64* %5, align 8, !dbg !17259
  %7 = sext i32 %2 to i64, !dbg !17260
  %8 = sub nsw i64 %6, %7, !dbg !17261
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17262
  br i1 %9, label %14, label %10, !dbg !17263

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17264
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17264
  %13 = trunc i64 %12 to i32, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %13, metadata !17252, metadata !DIExpression()), !dbg !17254
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17266
  call void @llvm.dbg.value(metadata i32 %15, metadata !17252, metadata !DIExpression()), !dbg !17254
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17267
  %17 = icmp ne i32 %16, 0, !dbg !17269
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17270
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %20, metadata !17252, metadata !DIExpression()), !dbg !17254
  ret i32 %20, !dbg !17271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.299(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !17272 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17277, metadata !DIExpression()), !dbg !17278
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17279
  br i1 %2, label %5, label %3, !dbg !17280

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.300(%struct._dnode* noundef nonnull %0) #26, !dbg !17281
  br label %5, !dbg !17280

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17280
  ret %struct._dnode* %6, !dbg !17282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.300(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !17283 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17285, metadata !DIExpression()), !dbg !17287
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17286, metadata !DIExpression()), !dbg !17287
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17288
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17289
  br i1 %3, label %7, label %4, !dbg !17290

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17291
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17291
  br label %7, !dbg !17290

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17290
  ret %struct._dnode* %8, !dbg !17292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.301() unnamed_addr #7 !dbg !17293 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17297, metadata !DIExpression()), !dbg !17298
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.302() #26, !dbg !17299
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17299
  ret %struct._dnode* %3, !dbg !17300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.302() unnamed_addr #7 !dbg !17301 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17305, metadata !DIExpression()), !dbg !17306
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17307
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17308
  ret i1 %2, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17314, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata i32 -22, metadata !17315, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata i32 0, metadata !17316, metadata !DIExpression()), !dbg !17320
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17321
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17323, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17321
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17326
  br i1 %3, label %5, label %4, !dbg !17327

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17328
  unreachable, !dbg !17328

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17321
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17329
  call void @llvm.dbg.value(metadata i32 undef, metadata !17318, metadata !DIExpression()), !dbg !17320
  call void @llvm.dbg.value(metadata i32 -22, metadata !17315, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !17316, metadata !DIExpression()), !dbg !17320
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17315, metadata !DIExpression()), !dbg !17319
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* noundef %6) #26, !dbg !17330
  br i1 %7, label %8, label %9, !dbg !17334

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17335
  call void @llvm.dbg.value(metadata i32 0, metadata !17315, metadata !DIExpression()), !dbg !17319
  br label %9, !dbg !17337

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17319
  call void @llvm.dbg.value(metadata i32 %10, metadata !17315, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17338
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17338
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17340
  br i1 %11, label %13, label %12, !dbg !17341

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17342
  unreachable, !dbg !17342

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17323
  call void @llvm.dbg.value(metadata i32 %14, metadata !17090, metadata !DIExpression()) #25, !dbg !17325
  call void @llvm.dbg.value(metadata i32 %14, metadata !17084, metadata !DIExpression()) #25, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %14, metadata !17318, metadata !DIExpression()), !dbg !17320
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17338
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17345, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 %10, metadata !17315, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.value(metadata i32 undef, metadata !17316, metadata !DIExpression()), !dbg !17320
  ret i32 %10, !dbg !17346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17347 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17349, metadata !DIExpression()), !dbg !17350
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17351
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17353
  br i1 %3, label %10, label %4, !dbg !17354

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17355
  %6 = load i64, i64* %5, align 8, !dbg !17355
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17357
  %8 = load i64, i64* %7, align 8, !dbg !17358
  %9 = add nsw i64 %8, %6, !dbg !17358
  store i64 %9, i64* %7, align 8, !dbg !17358
  br label %10, !dbg !17359

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17360
  tail call fastcc void @sys_dlist_remove.305(%struct._dnode* noundef %11) #26, !dbg !17361
  ret void, !dbg !17362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.305(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17363 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17367, metadata !DIExpression()), !dbg !17370
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17371
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17371
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17368, metadata !DIExpression()), !dbg !17370
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17372
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17372
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17369, metadata !DIExpression()), !dbg !17370
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17373
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17374
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17375
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17376
  tail call fastcc void @sys_dnode_init.306(%struct._dnode* noundef %0) #26, !dbg !17377
  ret void, !dbg !17378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.306(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !17379 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17381, metadata !DIExpression()), !dbg !17382
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17383
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17385
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17386
  ret void, !dbg !17387
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17388 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17394, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i64 0, metadata !17395, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 0, metadata !17396, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17401
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17403, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17401
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17406
  br i1 %3, label %5, label %4, !dbg !17407

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17408
  unreachable, !dbg !17408

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17401
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17409
  call void @llvm.dbg.value(metadata i32 undef, metadata !17398, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i64 0, metadata !17395, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17396, metadata !DIExpression()), !dbg !17400
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17410
  call void @llvm.dbg.value(metadata i64 %6, metadata !17395, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17413
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17413
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17415
  br i1 %7, label %9, label %8, !dbg !17416

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17417
  unreachable, !dbg !17417

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17403
  call void @llvm.dbg.value(metadata i32 %10, metadata !17090, metadata !DIExpression()) #25, !dbg !17405
  call void @llvm.dbg.value(metadata i32 %10, metadata !17084, metadata !DIExpression()) #25, !dbg !17401
  call void @llvm.dbg.value(metadata i32 %10, metadata !17398, metadata !DIExpression()), !dbg !17400
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17413
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !17420, !srcloc !17171
  call void @llvm.dbg.value(metadata i64 %6, metadata !17395, metadata !DIExpression()), !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !17396, metadata !DIExpression()), !dbg !17400
  ret i64 %6, !dbg !17421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17422 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17424, metadata !DIExpression()), !dbg !17428
  call void @llvm.dbg.value(metadata i64 0, metadata !17425, metadata !DIExpression()), !dbg !17428
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.307(%struct._timeout* noundef %0) #26, !dbg !17429
  br i1 %2, label %21, label %3, !dbg !17431

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17432
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17426, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata i64 0, metadata !17425, metadata !DIExpression()), !dbg !17428
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17434
  br i1 %5, label %16, label %6, !dbg !17436

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17426, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata i64 %8, metadata !17425, metadata !DIExpression()), !dbg !17428
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17437
  %10 = load i64, i64* %9, align 8, !dbg !17437
  %11 = add nsw i64 %10, %8, !dbg !17439
  call void @llvm.dbg.value(metadata i64 %11, metadata !17425, metadata !DIExpression()), !dbg !17428
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17440
  br i1 %12, label %16, label %13, !dbg !17442

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17443
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17426, metadata !DIExpression()), !dbg !17433
  call void @llvm.dbg.value(metadata i64 %11, metadata !17425, metadata !DIExpression()), !dbg !17428
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17434
  br i1 %15, label %16, label %6, !dbg !17436, !llvm.loop !17444

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17428
  call void @llvm.dbg.value(metadata i64 %17, metadata !17425, metadata !DIExpression()), !dbg !17428
  %18 = tail call fastcc i32 @elapsed.294() #26, !dbg !17446
  %19 = sext i32 %18 to i64, !dbg !17446
  %20 = sub nsw i64 %17, %19, !dbg !17447
  br label %21, !dbg !17448

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17428
  ret i64 %22, !dbg !17449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.307(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !17450 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17454, metadata !DIExpression()), !dbg !17455
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17456
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.286(%struct._dnode* noundef %2) #26, !dbg !17457
  %4 = xor i1 %3, true, !dbg !17458
  ret i1 %4, !dbg !17459
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17460 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17462, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.value(metadata i64 0, metadata !17463, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.value(metadata i32 0, metadata !17464, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17469
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17471, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17469
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17474
  br i1 %3, label %5, label %4, !dbg !17475

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17476
  unreachable, !dbg !17476

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17469
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17477
  call void @llvm.dbg.value(metadata i32 undef, metadata !17466, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata i64 0, metadata !17463, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()), !dbg !17468
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17478
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17481
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17482
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17482
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17484
  br i1 %8, label %10, label %9, !dbg !17485

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17486
  unreachable, !dbg !17486

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %11, metadata !17090, metadata !DIExpression()) #25, !dbg !17473
  call void @llvm.dbg.value(metadata i32 %11, metadata !17084, metadata !DIExpression()) #25, !dbg !17469
  call void @llvm.dbg.value(metadata i32 %11, metadata !17466, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17467
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17482
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !17489, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()), !dbg !17468
  %12 = add i64 %7, %6, !dbg !17490
  ret i64 %12, !dbg !17491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17492 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17494, metadata !DIExpression()), !dbg !17498
  call void @llvm.dbg.value(metadata i32 0, metadata !17495, metadata !DIExpression()), !dbg !17499
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17500
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17502, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17500
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17505
  br i1 %2, label %4, label %3, !dbg !17506

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17507
  unreachable, !dbg !17507

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17504
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17500
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17508
  call void @llvm.dbg.value(metadata i32 undef, metadata !17497, metadata !DIExpression()), !dbg !17499
  call void @llvm.dbg.value(metadata i32 -1, metadata !17494, metadata !DIExpression()), !dbg !17498
  call void @llvm.dbg.value(metadata i32 undef, metadata !17495, metadata !DIExpression()), !dbg !17499
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !17509
  call void @llvm.dbg.value(metadata i32 %5, metadata !17494, metadata !DIExpression()), !dbg !17498
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17512
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17512
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17514
  br i1 %6, label %8, label %7, !dbg !17515

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17516
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17516
  unreachable, !dbg !17516

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17502
  call void @llvm.dbg.value(metadata i32 %9, metadata !17090, metadata !DIExpression()) #25, !dbg !17504
  call void @llvm.dbg.value(metadata i32 %9, metadata !17084, metadata !DIExpression()) #25, !dbg !17500
  call void @llvm.dbg.value(metadata i32 %9, metadata !17497, metadata !DIExpression()), !dbg !17499
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17512
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17517
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17519, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 %5, metadata !17494, metadata !DIExpression()), !dbg !17498
  call void @llvm.dbg.value(metadata i32 undef, metadata !17495, metadata !DIExpression()), !dbg !17499
  ret i32 %5, !dbg !17520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17523, metadata !DIExpression()), !dbg !17533
  call void @llvm.dbg.value(metadata i1 %1, metadata !17524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17533
  call void @llvm.dbg.value(metadata i32 0, metadata !17525, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17535
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17537, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17535
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17540
  br i1 %4, label %6, label %5, !dbg !17541

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17542
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17542
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17542
  unreachable, !dbg !17542

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17539
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17535
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17527, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !17525, metadata !DIExpression()), !dbg !17534
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !17544
  call void @llvm.dbg.value(metadata i32 %7, metadata !17528, metadata !DIExpression()), !dbg !17545
  call void @llvm.dbg.value(metadata i1 undef, metadata !17531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17545
  %8 = icmp slt i32 %7, 2, !dbg !17546
  call void @llvm.dbg.value(metadata i1 %8, metadata !17532, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17545
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17547
  call void @llvm.dbg.value(metadata i1 %9, metadata !17531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17545
  br i1 %10, label %14, label %11, !dbg !17547

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17549
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17549
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !17551
  br label %14, !dbg !17552

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17553
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17553
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17555
  br i1 %15, label %17, label %16, !dbg !17556

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17557
  unreachable, !dbg !17557

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17537
  call void @llvm.dbg.value(metadata i32 %18, metadata !17090, metadata !DIExpression()) #25, !dbg !17539
  call void @llvm.dbg.value(metadata i32 %18, metadata !17084, metadata !DIExpression()) #25, !dbg !17535
  call void @llvm.dbg.value(metadata i32 %18, metadata !17527, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17553
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !17560, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 1, metadata !17525, metadata !DIExpression()), !dbg !17534
  call void @llvm.dbg.value(metadata i32 undef, metadata !17525, metadata !DIExpression()), !dbg !17534
  ret void, !dbg !17561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17566, metadata !DIExpression()), !dbg !17571
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17572
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17573
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17575, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17573
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17578
  br i1 %3, label %5, label %4, !dbg !17579

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17580
  unreachable, !dbg !17580

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17577
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17573
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17581
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17571
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17571
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17571
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !17582
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17583
  br i1 %7, label %37, label %8, !dbg !17584

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17571
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17585
  %14 = load i64, i64* %13, align 8, !dbg !17585
  %15 = sext i32 %11 to i64, !dbg !17586
  %16 = icmp sgt i64 %14, %15, !dbg !17587
  br i1 %16, label %35, label %17, !dbg !17588

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17568, metadata !DIExpression()), !dbg !17589
  %18 = trunc i64 %14 to i32, !dbg !17590
  call void @llvm.dbg.value(metadata i32 %18, metadata !17570, metadata !DIExpression()), !dbg !17589
  %19 = sext i32 %18 to i64, !dbg !17591
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17592
  %21 = add i64 %20, %19, !dbg !17592
  store i64 %21, i64* @curr_tick, align 8, !dbg !17592
  store i64 0, i64* %13, align 8, !dbg !17593
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !17594
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17595
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17597
  br i1 %22, label %24, label %23, !dbg !17598

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17599
  unreachable, !dbg !17599

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17151, metadata !DIExpression()) #25, !dbg !17595
  call void @llvm.dbg.value(metadata i32 %12, metadata !17165, metadata !DIExpression()) #25, !dbg !17600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17602, !srcloc !17171
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17603
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17603
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !17604
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17605
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17607, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17605
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17610
  br i1 %28, label %30, label %29, !dbg !17611

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17612
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17612
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17612
  unreachable, !dbg !17612

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17609
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17605
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17613
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17571
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17614
  %32 = sub nsw i32 %31, %18, !dbg !17614
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17571
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17571
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !17582
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17583
  br i1 %34, label %37, label %8, !dbg !17584, !llvm.loop !17615

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17617
  store i64 %36, i64* %13, align 8, !dbg !17617
  br label %41, !dbg !17620

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17571
  %40 = sext i32 %39 to i64, !dbg !17621
  br label %41, !dbg !17621

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17621
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17622
  %45 = add i64 %44, %42, !dbg !17622
  store i64 %45, i64* @curr_tick, align 8, !dbg !17622
  store i32 0, i32* @announce_remaining, align 4, !dbg !17623
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !17624
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !17625
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17626
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17626
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17628
  br i1 %47, label %49, label %48, !dbg !17629

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17630
  unreachable, !dbg !17630

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17571
  call void @llvm.dbg.value(metadata i32 %50, metadata !17151, metadata !DIExpression()) #25, !dbg !17626
  call void @llvm.dbg.value(metadata i32 %50, metadata !17165, metadata !DIExpression()) #25, !dbg !17631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !17633, !srcloc !17171
  ret void, !dbg !17634
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17635 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17639, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 0, metadata !17640, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17078, metadata !DIExpression()) #25, !dbg !17645
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17647, !srcloc !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17645
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17650
  br i1 %2, label %4, label %3, !dbg !17651

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.293, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 148) #27, !dbg !17652
  unreachable, !dbg !17652

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 undef, metadata !17084, metadata !DIExpression()) #25, !dbg !17645
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17653
  call void @llvm.dbg.value(metadata i32 undef, metadata !17642, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata i64 0, metadata !17639, metadata !DIExpression()), !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17640, metadata !DIExpression()), !dbg !17644
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17654
  %6 = tail call fastcc i32 @elapsed.294() #26, !dbg !17657
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17658
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !17156, metadata !DIExpression()) #25, !dbg !17658
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17660
  br i1 %7, label %9, label %8, !dbg !17661

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !17662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.292, i32 0, i32 0), i32 noundef 194) #27, !dbg !17662
  unreachable, !dbg !17662

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17647
  call void @llvm.dbg.value(metadata i32 %10, metadata !17090, metadata !DIExpression()) #25, !dbg !17649
  call void @llvm.dbg.value(metadata i32 %10, metadata !17084, metadata !DIExpression()) #25, !dbg !17645
  call void @llvm.dbg.value(metadata i32 %10, metadata !17642, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17643
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17643
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()) #25, !dbg !17658
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !17665, !srcloc !17171
  call void @llvm.dbg.value(metadata i32 undef, metadata !17640, metadata !DIExpression()), !dbg !17644
  %11 = sext i32 %6 to i64, !dbg !17657
  %12 = add i64 %5, %11, !dbg !17666
  ret i64 %12, !dbg !17667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17668 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17669
  %2 = trunc i64 %1 to i32, !dbg !17670
  ret i32 %2, !dbg !17671
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17672 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17673
  ret i64 %1, !dbg !17674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17677, metadata !DIExpression()), !dbg !17684
  %2 = icmp eq i32 %0, 0, !dbg !17685
  br i1 %2, label %10, label %3, !dbg !17687

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17688
  call void @llvm.dbg.value(metadata i32 %4, metadata !17678, metadata !DIExpression()), !dbg !17684
  %5 = mul i32 %0, 84, !dbg !17689
  call void @llvm.dbg.value(metadata i32 %5, metadata !17679, metadata !DIExpression()), !dbg !17684
  br label %6, !dbg !17690

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17691
  call void @llvm.dbg.value(metadata i32 %7, metadata !17680, metadata !DIExpression()), !dbg !17692
  %8 = sub i32 %7, %4, !dbg !17693
  %9 = icmp ult i32 %8, %5, !dbg !17695
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17697 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17698
  ret i32 %1, !dbg !17699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17700 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17702
  ret i32 %1, !dbg !17703
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17704 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17708, metadata !DIExpression()), !dbg !17710
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17711

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17712
  br label %14, !dbg !17716

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17709, metadata !DIExpression()), !dbg !17710
  %6 = icmp slt i64 %2, -1, !dbg !17717
  br i1 %6, label %7, label %9, !dbg !17720

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17721
  br label %14, !dbg !17722

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17724
  %11 = icmp ugt i64 %2, 1, !dbg !17725
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17725
  %13 = add nsw i64 %10, %12, !dbg !17726
  br label %14, !dbg !17727

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17728
  ret i64 %15, !dbg !17729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17730 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17732, metadata !DIExpression()), !dbg !17736
  %2 = icmp eq i8* %0, null, !dbg !17737
  br i1 %2, label %7, label %3, !dbg !17739

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17733, metadata !DIExpression()), !dbg !17736
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17740
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17740
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17733, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i8* %4, metadata !17732, metadata !DIExpression()), !dbg !17736
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17742
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !17743
  br label %7, !dbg !17744

7:                                                ; preds = %3, %1
  ret void, !dbg !17745
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17750, metadata !DIExpression()), !dbg !17753
  call void @llvm.dbg.value(metadata i32 %1, metadata !17751, metadata !DIExpression()), !dbg !17753
  %3 = icmp ugt i32 %0, 3, !dbg !17754
  %4 = and i32 %0, 3, !dbg !17754
  %5 = icmp eq i32 %4, 0, !dbg !17754
  %6 = and i1 %3, %5, !dbg !17754
  br i1 %6, label %8, label %7, !dbg !17754

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 68) #27, !dbg !17757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.320, i32 0, i32 0)) #27, !dbg !17757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 68) #27, !dbg !17757
  unreachable, !dbg !17757

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !17759, !range !4243
  %10 = icmp ult i32 %9, 2, !dbg !17759
  br i1 %10, label %12, label %11, !dbg !17762

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 71) #27, !dbg !17763
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.322, i32 0, i32 0)) #27, !dbg !17763
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 71) #27, !dbg !17763
  unreachable, !dbg !17763

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !17765
  call void @llvm.dbg.value(metadata i8* %13, metadata !17752, metadata !DIExpression()), !dbg !17753
  ret i8* %13, !dbg !17766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17767 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17771, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 %1, metadata !17772, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 %2, metadata !17773, metadata !DIExpression()), !dbg !17777
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17773, metadata !DIExpression(DW_OP_deref)), !dbg !17777
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !17778
  br i1 %5, label %21, label %6, !dbg !17780

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17781
  call void @llvm.dbg.value(metadata i32 %7, metadata !17776, metadata !DIExpression()), !dbg !17777
  %8 = load i32, i32* %4, align 4, !dbg !17782
  call void @llvm.dbg.value(metadata i32 %8, metadata !17773, metadata !DIExpression()), !dbg !17777
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !17783
  call void @llvm.dbg.value(metadata i8* %9, metadata !17774, metadata !DIExpression()), !dbg !17777
  %10 = icmp eq i8* %9, null, !dbg !17784
  br i1 %10, label %21, label %11, !dbg !17786

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17787
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17775, metadata !DIExpression()), !dbg !17777
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17788
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17789
  call void @llvm.dbg.value(metadata i8* %13, metadata !17775, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i8* %13, metadata !17774, metadata !DIExpression()), !dbg !17777
  %14 = icmp eq i32 %1, 0, !dbg !17790
  br i1 %14, label %21, label %15, !dbg !17790

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !17790
  %17 = add i32 %1, -1, !dbg !17790
  %18 = and i32 %17, %16, !dbg !17790
  %19 = icmp eq i32 %18, 0, !dbg !17790
  br i1 %19, label %21, label %20, !dbg !17793

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 38) #27, !dbg !17794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.324, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #27, !dbg !17794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 38) #27, !dbg !17794
  unreachable, !dbg !17794

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !17777
  ret i8* %22, !dbg !17796
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17802, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.value(metadata i32 4, metadata !17803, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.value(metadata i32* %1, metadata !17804, metadata !DIExpression()), !dbg !17805
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17806
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17806
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17806
  store i32 %5, i32* %1, align 4, !dbg !17806
  ret i1 %4, !dbg !17807
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !17808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17810, metadata !DIExpression()), !dbg !17812
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !17813
  call void @llvm.dbg.value(metadata i8* %2, metadata !17811, metadata !DIExpression()), !dbg !17812
  ret i8* %2, !dbg !17814
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17815 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !17817, metadata !DIExpression()), !dbg !17821
  call void @llvm.dbg.value(metadata i32 %1, metadata !17818, metadata !DIExpression()), !dbg !17821
  %4 = bitcast i32* %3 to i8*, !dbg !17822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17822
  call void @llvm.dbg.value(metadata i32* %3, metadata !17820, metadata !DIExpression(DW_OP_deref)), !dbg !17821
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !17823
  br i1 %5, label %12, label %6, !dbg !17825

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !17826
  call void @llvm.dbg.value(metadata i32 %7, metadata !17820, metadata !DIExpression()), !dbg !17821
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !17827
  call void @llvm.dbg.value(metadata i8* %8, metadata !17819, metadata !DIExpression()), !dbg !17821
  %9 = icmp eq i8* %8, null, !dbg !17828
  br i1 %9, label %12, label %10, !dbg !17830

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !17820, metadata !DIExpression()), !dbg !17821
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !17831
  br label %12, !dbg !17833

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !17821
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17834
  ret i8* %13, !dbg !17834
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !17835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17837, metadata !DIExpression()), !dbg !17840
  call void @llvm.dbg.value(metadata i32 %1, metadata !17838, metadata !DIExpression()), !dbg !17840
  call void @llvm.dbg.value(metadata i32* %2, metadata !17839, metadata !DIExpression()), !dbg !17840
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17841
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17841
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17841
  store i32 %6, i32* %2, align 4, !dbg !17841
  ret i1 %5, !dbg !17842
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !17843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17917, metadata !DIExpression()), !dbg !17918
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !17919
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !17920
  ret void, !dbg !17921
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17924, metadata !DIExpression()), !dbg !17928
  call void @llvm.dbg.value(metadata i32 %1, metadata !17925, metadata !DIExpression()), !dbg !17928
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17929
  br i1 %3, label %9, label %4, !dbg !17931

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17932
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17934
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17934
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17927, metadata !DIExpression()), !dbg !17928
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17935
  br i1 %8, label %12, label %9, !dbg !17937

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !17938
  call void @llvm.dbg.value(metadata i8* %11, metadata !17926, metadata !DIExpression()), !dbg !17928
  br label %12, !dbg !17940

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !17941
  call void @llvm.dbg.value(metadata i8* %13, metadata !17926, metadata !DIExpression()), !dbg !17928
  ret i8* %13, !dbg !17942
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !17943 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !17945, !srcloc !17948
  ret void, !dbg !17949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17950 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.335, i32 0, i32 0)) #27, !dbg !17952
  ret void, !dbg !17953
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17954 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17956, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17957, metadata !DIExpression()), !dbg !17979
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !17980

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 24) #27, !dbg !17984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.340, i32 0, i32 0)) #27, !dbg !17984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 24) #27, !dbg !17984
  unreachable, !dbg !17984

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17957, metadata !DIExpression()), !dbg !17979
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17987
  br i1 %5, label %7, label %6, !dbg !17988

6:                                                ; preds = %3
  ret i32 0, !dbg !17989

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17990
  %9 = load i8*, i8** %8, align 4, !dbg !17990
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17993
  %11 = load i32, i32* %10, align 4, !dbg !17993
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !17994
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17995
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !17957, metadata !DIExpression()), !dbg !17979
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17996
  br i1 %13, label %2, label %3, !dbg !17980, !llvm.loop !17997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17999 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18003, metadata !DIExpression()), !dbg !18006
  call void @llvm.dbg.value(metadata i8* %1, metadata !18004, metadata !DIExpression()), !dbg !18006
  call void @llvm.dbg.value(metadata i32 %2, metadata !18005, metadata !DIExpression()), !dbg !18006
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18007
  tail call fastcc void @z_waitq_init.341(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18008
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18009
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18010
  ret void, !dbg !18011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.341(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !18012 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18017, metadata !DIExpression()), !dbg !18018
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18019
  tail call fastcc void @sys_dlist_init.342(%struct._dnode* noundef %2) #26, !dbg !18020
  ret void, !dbg !18021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.342(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !18022 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18027, metadata !DIExpression()), !dbg !18028
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18029
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18030
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18031
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18032
  ret void, !dbg !18033
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18034 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18045, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18042, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 %1, metadata !18043, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 %2, metadata !18044, metadata !DIExpression()), !dbg !18055
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18056
  call void @llvm.dbg.value(metadata i64 %6, metadata !18047, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i8* null, metadata !18048, metadata !DIExpression()), !dbg !18055
  %7 = icmp eq i64 %5, -1, !dbg !18057
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18057
  call void @llvm.dbg.value(metadata i64 %8, metadata !18047, metadata !DIExpression()), !dbg !18055
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18058
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !18059, metadata !DIExpression()) #25, !dbg !18066
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18068, !srcloc !18074
  call void @llvm.dbg.value(metadata i32 undef, metadata !18071, metadata !DIExpression()) #25, !dbg !18075
  call void @llvm.dbg.value(metadata i32 undef, metadata !18072, metadata !DIExpression()) #25, !dbg !18075
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()) #25, !dbg !18066
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !18076
  br i1 %11, label %13, label %12, !dbg !18079

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.347, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !18080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18080
  unreachable, !dbg !18080

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18071, metadata !DIExpression()) #25, !dbg !18075
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()) #25, !dbg !18066
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18055
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18083, !srcloc !18092
  call void @llvm.dbg.value(metadata i32 %14, metadata !18086, metadata !DIExpression()) #25, !dbg !18093
  %15 = icmp eq i32 %14, 0, !dbg !18094
  %16 = icmp eq i64 %5, 0, !dbg !18095
  %17 = select i1 %15, i1 true, i1 %16, !dbg !18095
  br i1 %17, label %18, label %25, !dbg !18095

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18048, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i8 0, metadata !18054, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18055
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !18096
  call void @llvm.dbg.value(metadata i8* %20, metadata !18048, metadata !DIExpression()), !dbg !18055
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !18098
  call void @llvm.dbg.value(metadata i64 %21, metadata !18046, metadata !DIExpression()), !dbg !18055
  %22 = icmp eq i8* %20, null, !dbg !18099
  br i1 %22, label %23, label %43, !dbg !18101

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18055
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !18101

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 76) #27, !dbg !18102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.349, i32 0, i32 0)) #27, !dbg !18102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.339, i32 0, i32 0), i32 noundef 76) #27, !dbg !18102
  unreachable, !dbg !18102

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18054, metadata !DIExpression()), !dbg !18055
  %29 = sub nsw i64 %8, %27, !dbg !18104
  %30 = icmp slt i64 %29, 1, !dbg !18105
  br i1 %30, label %43, label %31, !dbg !18106

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !18055
  call void @llvm.dbg.value(metadata i8 undef, metadata !18054, metadata !DIExpression()), !dbg !18055
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !18107
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !18107
  %35 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #27, !dbg !18107
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !18059, metadata !DIExpression()) #25, !dbg !18108
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18110, !srcloc !18074
  call void @llvm.dbg.value(metadata i32 undef, metadata !18071, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 undef, metadata !18072, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()) #25, !dbg !18108
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !18113
  br i1 %37, label %39, label %38, !dbg !18114

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.347, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !18115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18115
  unreachable, !dbg !18115

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !18054, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18071, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()) #25, !dbg !18108
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !18116
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i8* null, metadata !18048, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18049, metadata !DIExpression()), !dbg !18055
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !18096
  call void @llvm.dbg.value(metadata i8* %40, metadata !18048, metadata !DIExpression()), !dbg !18055
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !18098
  call void @llvm.dbg.value(metadata i64 %41, metadata !18046, metadata !DIExpression()), !dbg !18055
  %42 = icmp eq i8* %40, null, !dbg !18099
  br i1 %42, label %26, label %43, !dbg !18101, !llvm.loop !18117

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !18096
  call void @llvm.dbg.value(metadata i8* %45, metadata !18048, metadata !DIExpression()), !dbg !18055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18120, metadata !DIExpression()) #25, !dbg !18126
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !18125, metadata !DIExpression()) #25, !dbg !18126
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !18128
  br i1 %46, label %48, label %47, !dbg !18131

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 194) #27, !dbg !18132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.351, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !18132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 194) #27, !dbg !18132
  unreachable, !dbg !18132

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !18055
  call void @llvm.dbg.value(metadata i32 %49, metadata !18120, metadata !DIExpression()) #25, !dbg !18126
  call void @llvm.dbg.value(metadata i32 %49, metadata !18134, metadata !DIExpression()) #25, !dbg !18137
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !18139, !srcloc !18140
  ret i8* %45, !dbg !18141
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18142 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18148, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18146, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 %1, metadata !18147, metadata !DIExpression()), !dbg !18150
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18151
  call void @llvm.dbg.value(metadata i8* %4, metadata !18149, metadata !DIExpression()), !dbg !18150
  ret i8* %4, !dbg !18152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18153 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18157, metadata !DIExpression()), !dbg !18160
  call void @llvm.dbg.value(metadata i8* %1, metadata !18158, metadata !DIExpression()), !dbg !18160
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18161
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !18059, metadata !DIExpression()) #25, !dbg !18162
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18164, !srcloc !18074
  call void @llvm.dbg.value(metadata i32 undef, metadata !18071, metadata !DIExpression()) #25, !dbg !18166
  call void @llvm.dbg.value(metadata i32 undef, metadata !18072, metadata !DIExpression()) #25, !dbg !18166
  call void @llvm.dbg.value(metadata i32 undef, metadata !18065, metadata !DIExpression()) #25, !dbg !18162
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !18167
  br i1 %5, label %7, label %6, !dbg !18168

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.347, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !18169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 148) #27, !dbg !18169
  unreachable, !dbg !18169

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !18164
  call void @llvm.dbg.value(metadata i32 %8, metadata !18071, metadata !DIExpression()) #25, !dbg !18166
  call void @llvm.dbg.value(metadata i32 %8, metadata !18065, metadata !DIExpression()) #25, !dbg !18162
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !18170
  call void @llvm.dbg.value(metadata i32 %8, metadata !18159, metadata !DIExpression()), !dbg !18160
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18171
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !18172
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18173
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #27, !dbg !18175
  %12 = icmp eq i32 %11, 0, !dbg !18176
  br i1 %12, label %15, label %13, !dbg !18177

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !18178
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %3, [1 x i32] %14) #27, !dbg !18178
  br label %19, !dbg !18180

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !18120, metadata !DIExpression()) #25, !dbg !18181
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !18125, metadata !DIExpression()) #25, !dbg !18181
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !18184
  br i1 %16, label %18, label %17, !dbg !18185

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.337, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 194) #27, !dbg !18186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.351, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !18186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.346, i32 0, i32 0), i32 noundef 194) #27, !dbg !18186
  unreachable, !dbg !18186

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !18120, metadata !DIExpression()) #25, !dbg !18181
  call void @llvm.dbg.value(metadata i32 %8, metadata !18134, metadata !DIExpression()) #25, !dbg !18187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18189, !srcloc !18140
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !18190
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!923, !2, !2616, !27, !432, !2618, !2620, !2653, !2691, !2693, !443, !487, !2695, !2706, !2752, !2754, !2782, !2810, !2853, !2924, !2969, !516, !651, !2997, !687, !697, !722, !961, !3002, !1100, !1166, !1455, !1732, !3043, !1847, !1937, !3045, !3108, !3175, !1991, !3178, !1998, !2364, !3196, !3198, !2384, !3239, !2501, !2542, !3242, !3244, !2585}
!llvm.ident = !{!3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246, !3246}
!llvm.module.flags = !{!3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "printk_fifo", scope: !27, file: !218, line: 37, type: !410, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !112, globals: !215, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!29 = !{!30, !101, !107}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !102, line: 506, baseType: !32, size: 32, elements: !103)
!102 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!105 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!106 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !102, line: 512, baseType: !32, size: 32, elements: !108)
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!110 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!111 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!112 = !{!113, !117, !118, !119, !202, !207, !167, !107, !101, !212, !156, !213}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !114, line: 46, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !116)
!116 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!118 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !122)
!122 = !{!123, !157, !163, !168, !172, !173, !174, !178, !198}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !121, file: !102, line: 524, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!118, !127, !154, !155}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !131)
!130 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!131 = !{!132, !136, !137, !138, !147, !148}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !130, line: 380, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !129, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !129, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !129, file: !130, line: 386, baseType: !139, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !141)
!141 = !{!142, !145}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !140, file: !130, line: 359, baseType: !143, size: 8)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !140, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!146 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !129, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !130, line: 43, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !153)
!153 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !102, line: 237, baseType: !143)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !102, line: 257, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !121, file: !102, line: 530, baseType: !158, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DISubroutineType(types: !160)
!160 = !{!118, !127, !161}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !102, line: 229, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !121, file: !102, line: 532, baseType: !164, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!118, !127, !167, !162}
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !102, line: 216, baseType: !156)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !121, file: !102, line: 535, baseType: !169, size: 32, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!118, !127, !167}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !121, file: !102, line: 537, baseType: !169, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !121, file: !102, line: 539, baseType: !169, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !121, file: !102, line: 541, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!118, !127, !154, !101, !107}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !121, file: !102, line: 544, baseType: !179, size: 32, offset: 224)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!118, !127, !182, !146}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !184)
!184 = !{!185, !192, !197}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !183, file: !102, line: 482, baseType: !186, size: 32)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !188, file: !187, line: 30, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !183, file: !102, line: 485, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !127, !182, !167}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !183, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !121, file: !102, line: 547, baseType: !199, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!156, !127}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !204, file: !102, line: 434, baseType: !167, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !209, file: !102, line: 447, baseType: !167, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !214)
!214 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!215 = !{!25, !216, !368, !372, !374, !376, !378, !380, !385, !387, !389, !391, !393, !395, !408}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "_k_thread_data_blink0_id", scope: !27, file: !218, line: 111, type: !219, isLocal: false, isDefinition: true, align: 32)
!218 = !DIFile(filename: "zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !342, !350, !351, !356, !357, !358, !359, !360, !361, !363, !367}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !219, file: !220, line: 621, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !294, !307, !308, !309, !310, !318, !337}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !224, file: !225, line: 247, baseType: !228, size: 384)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !229)
!229 = !{!230, !258, !266, !267, !268, !281, !282, !283}
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 60, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 60, size: 64, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !231, file: !225, line: 61, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !237)
!237 = !{!238, !244}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 38, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 38, size: 32, elements: !240)
!240 = !{!241, !243}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !239, file: !235, line: 39, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !235, line: 40, baseType: !242, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 42, baseType: !245, size: 32, offset: 32)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 42, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !245, file: !235, line: 43, baseType: !242, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !235, line: 44, baseType: !242, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !231, file: !225, line: 62, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !250, file: !251, line: 50, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 64, elements: !256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !228, file: !225, line: 68, baseType: !259, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !262)
!261 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !262, file: !261, line: 232, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !236)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !228, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !228, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 90, baseType: !269, size: 16, offset: 112)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 90, size: 16, elements: !270)
!270 = !{!271, !278}
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !225, line: 91, baseType: !272, size: 16)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !225, line: 91, size: 16, elements: !273)
!273 = !{!274, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !272, file: !225, line: 96, baseType: !275, size: 8)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !276)
!276 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !272, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !269, file: !225, line: 100, baseType: !279, size: 16)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !280)
!280 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !228, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !228, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !228, file: !225, line: 131, baseType: !284, size: 192, offset: 192)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !285)
!285 = !{!286, !287, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !284, file: !261, line: 245, baseType: !234, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !284, file: !261, line: 246, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !284, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !224, file: !225, line: 250, baseType: !295, size: 288, offset: 384)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !295, file: !296, line: 26, baseType: !156, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !295, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !295, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !295, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !295, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !295, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !295, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !295, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !295, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !224, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !224, file: !225, line: 256, baseType: !260, size: 64, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !224, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !224, file: !225, line: 300, baseType: !311, size: 96, offset: 800)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !312)
!312 = !{!313, !314, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !311, file: !225, line: 153, baseType: !22, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !311, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !316, line: 214, baseType: !32)
!316 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !311, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !224, file: !225, line: 325, baseType: !319, size: 32, offset: 896)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !321)
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !320, file: !220, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !320, file: !220, line: 5075, baseType: !260, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !320, file: !220, line: 5076, baseType: !333, size: 32, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !333, file: !334, line: 52, baseType: !22, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !224, file: !225, line: 343, baseType: !338, size: 64, offset: 928)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !338, file: !296, line: 63, baseType: !156, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !338, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !219, file: !220, line: 622, baseType: !343, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !348)
!347 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !347, line: 48, baseType: !135, size: 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !219, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !219, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !345, line: 46, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !117, !117, !117}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !219, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !219, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !219, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !219, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !219, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !219, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !118)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !219, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{null}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !219, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "blink0_id", scope: !27, file: !218, line: 111, type: !370, isLocal: false, isDefinition: true)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !223)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_k_thread_data_blink1_id", scope: !27, file: !218, line: 113, type: !219, isLocal: false, isDefinition: true, align: 32)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "blink1_id", scope: !27, file: !218, line: 113, type: !370, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "_k_thread_data_uart_out_id", scope: !27, file: !218, line: 115, type: !219, isLocal: false, isDefinition: true, align: 32)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "uart_out_id", scope: !27, file: !218, line: 115, type: !370, isLocal: false, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink0_id", scope: !27, file: !218, line: 111, type: !382, isLocal: false, isDefinition: true, align: 512)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 8704, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 1088)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink0_id", scope: !27, file: !218, line: 111, type: !224, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink1_id", scope: !27, file: !218, line: 113, type: !382, isLocal: false, isDefinition: true, align: 512)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink1_id", scope: !27, file: !218, line: 113, type: !224, isLocal: false, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "_k_thread_stack_uart_out_id", scope: !27, file: !218, line: 115, type: !382, isLocal: false, isDefinition: true, align: 512)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "_k_thread_obj_uart_out_id", scope: !27, file: !218, line: 115, type: !224, isLocal: false, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "led0", scope: !27, file: !218, line: 44, type: !397, isLocal: true, isDefinition: true)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led", file: !218, line: 39, size: 96, elements: !399)
!399 = !{!400, !407}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !398, file: !218, line: 40, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !102, line: 271, size: 64, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !401, file: !102, line: 273, baseType: !127, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !401, file: !102, line: 275, baseType: !154, size: 8, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !401, file: !102, line: 277, baseType: !406, size: 16, offset: 48)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !102, line: 249, baseType: !279)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !398, file: !218, line: 41, baseType: !143, size: 8, offset: 64)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "led1", scope: !27, file: !218, line: 49, type: !397, isLocal: true, isDefinition: true)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !410, file: !220, line: 2209, baseType: !413, size: 160)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !414)
!414 = !{!415, !428, !429}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !413, file: !220, line: 1710, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !418)
!417 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !419)
!419 = !{!420, !427}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !418, file: !417, line: 42, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !423, file: !417, line: 36, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !417, line: 32, baseType: !156)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !418, file: !417, line: 43, baseType: !421, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !413, file: !220, line: 1711, baseType: !333, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !413, file: !220, line: 1712, baseType: !260, size: 64, offset: 96)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "_char_out", scope: !432, file: !437, line: 54, type: !438, isLocal: false, isDefinition: true)
!432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !436, splitDebugInlining: false, nameTableKind: None)
!433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!434 = !{!30}
!435 = !{!117, !118}
!436 = !{!430}
!437 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!439 = !DISubroutineType(types: !440)
!440 = !{!118, !118}
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !443, file: !460, line: 56, type: !461, isLocal: true, isDefinition: true, align: 32)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !445, globals: !459, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 407, baseType: !449)
!448 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 398, size: 224, elements: !450)
!450 = !{!451, !453, !454, !455, !456, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !449, file: !448, line: 400, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !449, file: !448, line: 401, baseType: !452, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !449, file: !448, line: 402, baseType: !452, size: 32, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !449, file: !448, line: 403, baseType: !452, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !449, file: !448, line: 404, baseType: !452, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !449, file: !448, line: 405, baseType: !452, size: 32, offset: 160)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !449, file: !448, line: 406, baseType: !452, size: 32, offset: 192)
!459 = !{!441}
!460 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !462, file: !463, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!118, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !130, line: 380, baseType: !133, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !130, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !130, line: 359, baseType: !143, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !463, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !487, file: !490, line: 71, type: !491, isLocal: true, isDefinition: true, align: 32)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !489, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!489 = !{!485}
!490 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !493)
!493 = !{!494, !513}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !492, file: !463, line: 60, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DISubroutineType(types: !497)
!497 = !{!118, !498}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !501)
!501 = !{!502, !503, !504, !505, !511, !512}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !130, line: 380, baseType: !133, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !500, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !500, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !500, file: !130, line: 386, baseType: !506, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !507, file: !130, line: 359, baseType: !143, size: 8)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !507, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !500, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !500, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !492, file: !463, line: 65, baseType: !498, size: 32, offset: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "static_regions", scope: !516, file: !523, line: 62, type: !647, isLocal: true, isDefinition: true)
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !518, globals: !519, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!518 = !{!315, !118, !156, !117}
!519 = !{!520, !514}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !522, file: !523, line: 198, type: !633, isLocal: true, isDefinition: true)
!522 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 175, type: !524, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !628)
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DISubroutineType(types: !525)
!525 = !{null, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !528)
!528 = !{!529, !587, !599, !600, !601, !602, !608, !623}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !527, file: !225, line: 247, baseType: !530, size: 384)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !531)
!531 = !{!532, !556, !563, !564, !565, !574, !575, !576}
!532 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 60, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 60, size: 64, elements: !534)
!534 = !{!535, !550}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !533, file: !225, line: 61, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !538)
!538 = !{!539, !545}
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 38, baseType: !540, size: 32)
!540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 38, size: 32, elements: !541)
!541 = !{!542, !544}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !540, file: !235, line: 39, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !540, file: !235, line: 40, baseType: !543, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 42, baseType: !546, size: 32, offset: 32)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 42, size: 32, elements: !547)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !546, file: !235, line: 43, baseType: !543, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !546, file: !235, line: 44, baseType: !543, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !533, file: !225, line: 62, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !551, file: !251, line: 50, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, elements: !256)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !530, file: !225, line: 68, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !559, file: !261, line: 232, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !537)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !530, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !530, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!565 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 90, baseType: !566, size: 16, offset: 112)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 90, size: 16, elements: !567)
!567 = !{!568, !573}
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !225, line: 91, baseType: !569, size: 16)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !225, line: 91, size: 16, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !569, file: !225, line: 96, baseType: !275, size: 8)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !569, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !566, file: !225, line: 100, baseType: !279, size: 16)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !530, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !530, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !530, file: !225, line: 131, baseType: !577, size: 192, offset: 192)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !578)
!578 = !{!579, !580, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !577, file: !261, line: 245, baseType: !536, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !577, file: !261, line: 246, baseType: !581, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !577, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !527, file: !225, line: 250, baseType: !588, size: 288, offset: 384)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !588, file: !296, line: 26, baseType: !156, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !588, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !588, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !588, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !588, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !588, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !588, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !588, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !588, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !527, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !527, file: !225, line: 256, baseType: !558, size: 64, offset: 704)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !527, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !527, file: !225, line: 300, baseType: !603, size: 96, offset: 800)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !603, file: !225, line: 153, baseType: !22, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !603, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !603, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !527, file: !225, line: 325, baseType: !609, size: 32, offset: 896)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !611)
!611 = !{!612, !618, !619}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !610, file: !220, line: 5074, baseType: !613, size: 96)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !614)
!614 = !{!615, !616, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !613, file: !324, line: 57, baseType: !327, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !613, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !613, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !220, line: 5075, baseType: !558, size: 64, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !610, file: !220, line: 5076, baseType: !620, size: 32, offset: 160)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !620, file: !334, line: 52, baseType: !22, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !527, file: !225, line: 343, baseType: !624, size: 64, offset: 928)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !624, file: !296, line: 63, baseType: !156, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !624, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!628 = !{!629, !630, !631, !632}
!629 = !DILocalVariable(name: "thread", arg: 1, scope: !522, file: !523, line: 175, type: !526)
!630 = !DILocalVariable(name: "region_num", scope: !522, file: !523, line: 200, type: !143)
!631 = !DILocalVariable(name: "guard_start", scope: !522, file: !523, line: 265, type: !22)
!632 = !DILocalVariable(name: "guard_size", scope: !522, file: !523, line: 266, type: !315)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 96, elements: !645)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !636)
!635 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !638, !639}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !634, file: !635, line: 53, baseType: !22, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !634, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !634, file: !635, line: 55, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !642)
!641 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !643)
!643 = !{!644}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !642, file: !641, line: 150, baseType: !156, size: 32)
!645 = !{!646}
!646 = !DISubrange(count: 1)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 96, elements: !645)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !651, file: !684, line: 39, type: !143, isLocal: true, isDefinition: true)
!651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !653, globals: !683, splitDebugInlining: false, nameTableKind: None)
!652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!653 = !{!654, !117, !118, !671, !143}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !656, line: 1226, baseType: !657)
!656 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 1213, size: 352, elements: !658)
!658 = !{!659, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !657, file: !656, line: 1215, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !657, file: !656, line: 1216, baseType: !452, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !657, file: !656, line: 1217, baseType: !452, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !657, file: !656, line: 1218, baseType: !452, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !657, file: !656, line: 1219, baseType: !452, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !657, file: !656, line: 1220, baseType: !452, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !657, file: !656, line: 1221, baseType: !452, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !657, file: !656, line: 1222, baseType: !452, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !657, file: !656, line: 1223, baseType: !452, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !657, file: !656, line: 1224, baseType: !452, size: 32, offset: 288)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !657, file: !656, line: 1225, baseType: !452, size: 32, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{!676, !677, !678}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !673, file: !674, line: 29, baseType: !156, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !673, file: !674, line: 37, baseType: !679, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !680, file: !641, line: 143, baseType: !156, size: 32)
!683 = !{!649}
!684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !687, file: !694, line: 21, type: !438, isLocal: true, isDefinition: true)
!687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !689, globals: !693, splitDebugInlining: false, nameTableKind: None)
!688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!689 = !{!690, !118, !117}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !692, line: 22, baseType: !118)
!692 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = !{!685}
!694 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !697, file: !702, line: 13, type: !719, isLocal: true, isDefinition: true)
!697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !699, splitDebugInlining: false, nameTableKind: None)
!698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!699 = !{!700, !695}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "mpu_config", scope: !697, file: !702, line: 37, type: !703, isLocal: false, isDefinition: true)
!702 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !674, line: 41, size: 64, elements: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !704, file: !674, line: 43, baseType: !156, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !704, file: !674, line: 45, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !711)
!711 = !{!712, !713, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !710, file: !674, line: 29, baseType: !156, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !710, file: !674, line: 37, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !716, file: !641, line: 143, baseType: !156, size: 32)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 192, elements: !256)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !835, line: 72, type: !918, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !821, globals: !832, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !448, line: 65, baseType: !118, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!755 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!756 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!757 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!758 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!759 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!760 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!780 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!781 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!784 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!785 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!786 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!787 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!788 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!789 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!790 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!791 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!792 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!793 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!794 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!795 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!796 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!797 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!798 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!799 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!800 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!801 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!802 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!803 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!804 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!805 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!806 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!807 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!808 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!809 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!810 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!811 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!812 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!813 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!814 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!815 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!816 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!817 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!818 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!819 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!820 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!821 = !{!315, !118, !117, !822}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !448, line: 392, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 384, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !824, file: !448, line: 386, baseType: !452, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !824, file: !448, line: 387, baseType: !452, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !824, file: !448, line: 388, baseType: !452, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !824, file: !448, line: 389, baseType: !452, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !824, file: !448, line: 390, baseType: !452, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !824, file: !448, line: 391, baseType: !452, size: 32, offset: 160)
!832 = !{!833, !839, !855, !866, !883, !720, !885, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !722, file: !835, line: 424, type: !836, isLocal: false, isDefinition: true, align: 16)
!835 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 4)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !722, file: !835, line: 424, type: !841, isLocal: false, isDefinition: true, align: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !130, line: 380, baseType: !133, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !130, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !130, line: 359, baseType: !143, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !722, file: !835, line: 424, type: !857, isLocal: true, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !859)
!859 = !{!860, !865}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !463, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!118, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !463, line: 65, baseType: !864, size: 32, offset: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !835, line: 423, type: !868, isLocal: true, isDefinition: true)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !835, line: 107, size: 1472, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !868, file: !835, line: 109, baseType: !871, size: 1472)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !872, size: 1472, elements: !881)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !835, line: 101, size: 64, elements: !873)
!873 = !{!874, !880}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !872, file: !835, line: 102, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !876, line: 63, baseType: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !118, !117}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !872, file: !835, line: 103, baseType: !117, size: 32, offset: 32)
!881 = !{!882}
!882 = !DISubrange(count: 23)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !722, file: !835, line: 424, type: !849, isLocal: true, isDefinition: true, align: 8)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !887, file: !835, line: 493, type: !892, isLocal: true, isDefinition: true, align: 32)
!887 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !835, file: !835, line: 460, type: !888, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !890)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !864}
!890 = !{!891}
!891 = !DILocalVariable(name: "dev", arg: 1, scope: !887, file: !835, line: 460, type: !864)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !893)
!893 = !{!894, !895, !896, !897}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !892, file: !10, line: 55, baseType: !362, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !892, file: !10, line: 57, baseType: !362, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !892, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !892, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !887, file: !835, line: 497, type: !892, isLocal: true, isDefinition: true, align: 32)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !887, file: !835, line: 507, type: !892, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !887, file: !835, line: 512, type: !892, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !887, file: !835, line: 516, type: !892, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !887, file: !835, line: 523, type: !892, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !887, file: !835, line: 527, type: !892, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !887, file: !835, line: 581, type: !892, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !887, file: !835, line: 586, type: !892, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !887, file: !835, line: 591, type: !892, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !887, file: !835, line: 595, type: !892, isLocal: true, isDefinition: true, align: 32)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 736, elements: !881)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !448, line: 163, baseType: !725)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !923, file: !928, line: 25, type: !956, isLocal: false, isDefinition: true, align: 16)
!923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !925, splitDebugInlining: false, nameTableKind: None)
!924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!925 = !{!926, !921, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954}
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !923, file: !928, line: 20, type: !929, isLocal: false, isDefinition: true, align: 16)
!928 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 240, elements: !930)
!930 = !{!931}
!931 = !DISubrange(count: 15)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !923, file: !928, line: 32, type: !836, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !923, file: !928, line: 39, type: !836, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !923, file: !928, line: 46, type: !836, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !923, file: !928, line: 53, type: !836, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !923, file: !928, line: 60, type: !836, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !923, file: !928, line: 67, type: !836, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !923, file: !928, line: 74, type: !836, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !923, file: !928, line: 81, type: !836, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !923, file: !928, line: 88, type: !836, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !923, file: !928, line: 95, type: !836, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !923, file: !928, line: 102, type: !836, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !923, file: !928, line: 109, type: !836, isLocal: false, isDefinition: true, align: 16)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 48, elements: !957)
!957 = !{!958}
!958 = !DISubrange(count: 3)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !961, file: !1026, line: 398, type: !1059, isLocal: true, isDefinition: true)
!961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !963, retainedTypes: !976, globals: !1023, splitDebugInlining: false, nameTableKind: None)
!962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!963 = !{!964, !30, !969}
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !965, line: 197, baseType: !32, size: 32, elements: !966)
!965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !{!967, !968}
!967 = !DIEnumerator(name: "SUCCESS", value: 0)
!968 = !DIEnumerator(name: "ERROR", value: 1)
!969 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !970, line: 44, baseType: !32, size: 32, elements: !971)
!970 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!971 = !{!972, !973, !974, !975}
!972 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!973 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!974 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!975 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!976 = !{!117, !118, !156, !977, !1016, !1022}
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 586, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 550, size: 1216, elements: !980)
!980 = !{!981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !979, file: !448, line: 552, baseType: !452, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !979, file: !448, line: 553, baseType: !452, size: 32, offset: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !979, file: !448, line: 554, baseType: !452, size: 32, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !979, file: !448, line: 555, baseType: !452, size: 32, offset: 96)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !979, file: !448, line: 556, baseType: !452, size: 32, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !979, file: !448, line: 557, baseType: !452, size: 32, offset: 160)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !979, file: !448, line: 558, baseType: !452, size: 32, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !979, file: !448, line: 559, baseType: !156, size: 32, offset: 224)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !979, file: !448, line: 560, baseType: !452, size: 32, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !979, file: !448, line: 561, baseType: !452, size: 32, offset: 288)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !979, file: !448, line: 562, baseType: !992, size: 64, offset: 320)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !979, file: !448, line: 563, baseType: !452, size: 32, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !979, file: !448, line: 564, baseType: !452, size: 32, offset: 416)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !979, file: !448, line: 565, baseType: !452, size: 32, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !979, file: !448, line: 566, baseType: !156, size: 32, offset: 480)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !979, file: !448, line: 567, baseType: !452, size: 32, offset: 512)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !979, file: !448, line: 568, baseType: !452, size: 32, offset: 544)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !979, file: !448, line: 569, baseType: !992, size: 64, offset: 576)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !979, file: !448, line: 570, baseType: !452, size: 32, offset: 640)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !979, file: !448, line: 571, baseType: !452, size: 32, offset: 672)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !979, file: !448, line: 572, baseType: !452, size: 32, offset: 704)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !979, file: !448, line: 573, baseType: !156, size: 32, offset: 736)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !979, file: !448, line: 574, baseType: !452, size: 32, offset: 768)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !979, file: !448, line: 575, baseType: !452, size: 32, offset: 800)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !979, file: !448, line: 576, baseType: !992, size: 64, offset: 832)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !979, file: !448, line: 577, baseType: !452, size: 32, offset: 896)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !979, file: !448, line: 578, baseType: !452, size: 32, offset: 928)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !979, file: !448, line: 579, baseType: !992, size: 64, offset: 960)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !979, file: !448, line: 580, baseType: !452, size: 32, offset: 1024)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !979, file: !448, line: 581, baseType: !452, size: 32, offset: 1056)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !979, file: !448, line: 582, baseType: !452, size: 32, offset: 1088)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !979, file: !448, line: 583, baseType: !452, size: 32, offset: 1120)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !979, file: !448, line: 584, baseType: !452, size: 32, offset: 1152)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !979, file: !448, line: 585, baseType: !452, size: 32, offset: 1184)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1018, line: 343, size: 64, elements: !1019)
!1018 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1017, file: !1018, line: 344, baseType: !156, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1017, file: !1018, line: 345, baseType: !156, size: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1023 = !{!1024, !1030, !1046, !1057, !959}
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !961, file: !1026, line: 752, type: !1027, isLocal: false, isDefinition: true, align: 16)
!1026 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 800, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 50)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !961, file: !1026, line: 752, type: !1032, isLocal: false, isDefinition: true, align: 32)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038, !1044, !1045}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1033, file: !130, line: 380, baseType: !133, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1033, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1033, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1033, file: !130, line: 386, baseType: !1039, size: 32, offset: 96)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1040, file: !130, line: 359, baseType: !143, size: 8)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1040, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1033, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1033, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !961, file: !1026, line: 752, type: !1048, isLocal: true, isDefinition: true, align: 32)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1050)
!1050 = !{!1051, !1056}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1049, file: !463, line: 60, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!118, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1049, file: !463, line: 65, baseType: !1055, size: 32, offset: 32)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !961, file: !1026, line: 752, type: !1040, isLocal: true, isDefinition: true, align: 8)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !970, line: 100, size: 224, elements: !1060)
!1060 = !{!1061, !1067, !1068, !1077, !1082, !1087, !1093}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1059, file: !970, line: 101, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !970, line: 76, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!118, !1055, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !970, line: 56, baseType: !117)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1059, file: !970, line: 102, baseType: !1062, size: 32, offset: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1059, file: !970, line: 103, baseType: !1069, size: 32, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !970, line: 83, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!118, !1055, !1066, !1073, !117}
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !970, line: 72, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !1055, !1066, !117}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1059, file: !970, line: 104, baseType: !1078, size: 32, offset: 96)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !970, line: 79, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!118, !1055, !1066, !1022}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1059, file: !970, line: 105, baseType: !1083, size: 32, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !970, line: 88, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!969, !1055, !1066}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1059, file: !970, line: 106, baseType: !1088, size: 32, offset: 160)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !970, line: 92, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!118, !1055, !1066, !1092}
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !970, line: 64, baseType: !117)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1059, file: !970, line: 107, baseType: !1094, size: 32, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !970, line: 96, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!118, !1055, !1066, !117}
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1100, file: !1157, line: 603, type: !1159, isLocal: true, isDefinition: true, align: 32)
!1100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1101, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !1102, globals: !1154, splitDebugInlining: false, nameTableKind: None)
!1101 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1102 = !{!117, !118, !1103}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1106, line: 336, size: 160, elements: !1107)
!1106 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1107 = !{!1108, !1128, !1132, !1136, !1149}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1105, file: !1106, line: 365, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!118, !1112, !1127}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1125, !1126}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1114, file: !130, line: 380, baseType: !133, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1114, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1114, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1114, file: !130, line: 386, baseType: !1120, size: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1122)
!1122 = !{!1123, !1124}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1121, file: !130, line: 359, baseType: !143, size: 8)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1121, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1114, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1114, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1105, file: !1106, line: 366, baseType: !1129, size: 32, offset: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !1112, !144}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1105, file: !1106, line: 374, baseType: !1133, size: 32, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!118, !1112}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1105, file: !1106, line: 377, baseType: !1137, size: 32, offset: 96)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!118, !1112, !1140}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1106, line: 122, size: 64, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1142, file: !1106, line: 123, baseType: !156, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1142, file: !1106, line: 124, baseType: !143, size: 8, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1142, file: !1106, line: 125, baseType: !143, size: 8, offset: 40)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1142, file: !1106, line: 126, baseType: !143, size: 8, offset: 48)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1142, file: !1106, line: 127, baseType: !143, size: 8, offset: 56)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1105, file: !1106, line: 379, baseType: !1150, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!118, !1112, !1153}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1154 = !{!1098, !1155}
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1100, file: !1157, line: 38, type: !1158, isLocal: true, isDefinition: true)
!1157 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1160, file: !463, line: 60, baseType: !1133, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1160, file: !463, line: 65, baseType: !1112, size: 32, offset: 32)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1166, file: !1321, line: 762, type: !1430, isLocal: true, isDefinition: true)
!1166 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1167, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1168, retainedTypes: !1175, globals: !1318, splitDebugInlining: false, nameTableKind: None)
!1167 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1168 = !{!30, !101, !107, !1169, !969}
!1169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !876, line: 43, baseType: !32, size: 32, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174}
!1171 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1172 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1173 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1174 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1175 = !{!117, !118, !1176, !1240, !1245, !167, !107, !101, !1250, !1251, !156, !1265, !1221, !1277, !1278, !1279}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1179)
!1179 = !{!1180, !1199, !1203, !1207, !1211, !1212, !1213, !1217, !1236}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1178, file: !102, line: 524, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!118, !1184, !154, !155}
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1191, !1197, !1198}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1186, file: !130, line: 380, baseType: !133, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1186, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1186, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1186, file: !130, line: 386, baseType: !1192, size: 32, offset: 96)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1194)
!1194 = !{!1195, !1196}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1193, file: !130, line: 359, baseType: !143, size: 8)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1193, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1186, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1186, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1178, file: !102, line: 530, baseType: !1200, size: 32, offset: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!118, !1184, !161}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1178, file: !102, line: 532, baseType: !1204, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!118, !1184, !167, !162}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1178, file: !102, line: 535, baseType: !1208, size: 32, offset: 96)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!118, !1184, !167}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1178, file: !102, line: 537, baseType: !1208, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1178, file: !102, line: 539, baseType: !1208, size: 32, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1178, file: !102, line: 541, baseType: !1214, size: 32, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!118, !1184, !154, !101, !107}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1178, file: !102, line: 544, baseType: !1218, size: 32, offset: 224)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!118, !1184, !1221, !146}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1223)
!1223 = !{!1224, !1230, !1235}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1222, file: !102, line: 482, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1227)
!1227 = !{!1228}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1226, file: !187, line: 30, baseType: !1229, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1222, file: !102, line: 485, baseType: !1231, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1232)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{null, !1184, !1221, !167}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1222, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1178, file: !102, line: 547, baseType: !1237, size: 32, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!156, !1184}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1243)
!1243 = !{!1244}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1242, file: !102, line: 434, baseType: !167, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1248)
!1248 = !{!1249}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1247, file: !102, line: 447, baseType: !167, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 469, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 458, size: 320, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1253, file: !448, line: 460, baseType: !452, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1253, file: !448, line: 461, baseType: !452, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1253, file: !448, line: 462, baseType: !452, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1253, file: !448, line: 463, baseType: !452, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1253, file: !448, line: 464, baseType: !452, size: 32, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1253, file: !448, line: 465, baseType: !452, size: 32, offset: 160)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1253, file: !448, line: 466, baseType: !452, size: 32, offset: 192)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1253, file: !448, line: 467, baseType: !452, size: 32, offset: 224)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1253, file: !448, line: 468, baseType: !1264, size: 64, offset: 256)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 64, elements: !256)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !448, line: 484, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 475, size: 384, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1273, !1274, !1275, !1276}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1267, file: !448, line: 477, baseType: !452, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1267, file: !448, line: 478, baseType: !452, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1267, file: !448, line: 479, baseType: !1272, size: 128, offset: 64)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 128, elements: !837)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1267, file: !448, line: 480, baseType: !992, size: 64, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1267, file: !448, line: 481, baseType: !452, size: 32, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1267, file: !448, line: 482, baseType: !992, size: 64, offset: 288)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1267, file: !448, line: 483, baseType: !452, size: 32, offset: 352)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !970, line: 100, size: 224, elements: !1282)
!1282 = !{!1283, !1288, !1289, !1298, !1303, !1308, !1313}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1281, file: !970, line: 101, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !970, line: 76, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!118, !1184, !1066}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1281, file: !970, line: 102, baseType: !1284, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1281, file: !970, line: 103, baseType: !1290, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !970, line: 83, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!118, !1184, !1066, !1294, !117}
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !970, line: 72, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{null, !1184, !1066, !117}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1281, file: !970, line: 104, baseType: !1299, size: 32, offset: 96)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !970, line: 79, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!118, !1184, !1066, !1022}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1281, file: !970, line: 105, baseType: !1304, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !970, line: 88, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!969, !1184, !1066}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1281, file: !970, line: 106, baseType: !1309, size: 32, offset: 160)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !970, line: 92, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!118, !1184, !1066, !1092}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1281, file: !970, line: 107, baseType: !1314, size: 32, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !970, line: 96, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!118, !1184, !1066, !117}
!1318 = !{!1319, !1325, !1327, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1164, !1426, !1428, !1441, !1443, !1445, !1447, !1449, !1451}
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1166, file: !1321, line: 762, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1321 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 80, elements: !1323)
!1323 = !{!1324}
!1324 = !DISubrange(count: 5)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1166, file: !1321, line: 762, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1166, file: !1321, line: 762, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1331)
!1331 = !{!1332, !1336}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1330, file: !463, line: 60, baseType: !1333, size: 32)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!118, !1184}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1330, file: !463, line: 65, baseType: !1184, size: 32, offset: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1166, file: !1321, line: 766, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1166, file: !1321, line: 766, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1166, file: !1321, line: 766, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1166, file: !1321, line: 770, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1166, file: !1321, line: 770, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1166, file: !1321, line: 770, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1166, file: !1321, line: 774, type: !1351, isLocal: false, isDefinition: true, align: 16)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 144, elements: !1352)
!1352 = !{!1353}
!1353 = !DISubrange(count: 9)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1166, file: !1321, line: 774, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1166, file: !1321, line: 774, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1166, file: !1321, line: 778, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1166, file: !1321, line: 778, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1166, file: !1321, line: 778, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1166, file: !1321, line: 782, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1166, file: !1321, line: 782, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1166, file: !1321, line: 782, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1166, file: !1321, line: 786, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1166, file: !1321, line: 786, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1166, file: !1321, line: 786, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1166, file: !1321, line: 790, type: !1322, isLocal: false, isDefinition: true, align: 16)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1166, file: !1321, line: 790, type: !1185, isLocal: false, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1166, file: !1321, line: 790, type: !1329, isLocal: true, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1166, file: !1321, line: 762, type: !1384, isLocal: true, isDefinition: true)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1385, line: 237, size: 128, elements: !1386)
!1385 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1386 = !{!1387, !1388, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1384, file: !1385, line: 239, baseType: !1247, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1384, file: !1385, line: 241, baseType: !1184, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1384, file: !1385, line: 243, baseType: !1390, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !1392)
!1392 = !{!1393, !1395}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1391, file: !187, line: 36, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1391, file: !187, line: 37, baseType: !1394, size: 32, offset: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1166, file: !1321, line: 762, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1166, file: !1321, line: 766, type: !1384, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1166, file: !1321, line: 766, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1166, file: !1321, line: 770, type: !1384, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1166, file: !1321, line: 770, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1166, file: !1321, line: 774, type: !1384, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1166, file: !1321, line: 774, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1166, file: !1321, line: 778, type: !1384, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1166, file: !1321, line: 778, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1166, file: !1321, line: 782, type: !1384, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1166, file: !1321, line: 782, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1166, file: !1321, line: 786, type: !1384, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1166, file: !1321, line: 786, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1166, file: !1321, line: 790, type: !1384, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1166, file: !1321, line: 790, type: !1193, isLocal: true, isDefinition: true, align: 8)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1166, file: !1321, line: 656, type: !1177, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1166, file: !1321, line: 766, type: !1430, isLocal: true, isDefinition: true)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1385, line: 224, size: 160, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1431, file: !1385, line: 226, baseType: !1242, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1431, file: !1385, line: 228, baseType: !1022, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1431, file: !1385, line: 230, baseType: !118, size: 32, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1431, file: !1385, line: 231, baseType: !1437, size: 64, offset: 96)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1018, line: 343, size: 64, elements: !1438)
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1437, file: !1018, line: 344, baseType: !156, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1437, file: !1018, line: 345, baseType: !156, size: 32, offset: 32)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1166, file: !1321, line: 770, type: !1430, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1166, file: !1321, line: 774, type: !1430, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1166, file: !1321, line: 778, type: !1430, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1166, file: !1321, line: 782, type: !1430, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1166, file: !1321, line: 786, type: !1430, isLocal: true, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1166, file: !1321, line: 790, type: !1430, isLocal: true, isDefinition: true)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1455, file: !1594, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1457, retainedTypes: !1490, globals: !1591, splitDebugInlining: false, nameTableKind: None)
!1456 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1457 = !{!30, !1458, !1465, !1472, !1479, !1485, !969}
!1458 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1106, line: 47, baseType: !32, size: 32, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464}
!1460 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1461 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1462 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1463 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1464 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1465 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1106, line: 75, baseType: !32, size: 32, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1471}
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1469 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1471 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1472 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1106, line: 92, baseType: !32, size: 32, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478}
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1476 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1478 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1106, line: 84, baseType: !32, size: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484}
!1481 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1482 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1483 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1484 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1106, line: 107, baseType: !32, size: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489}
!1487 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1488 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1489 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1490 = !{!117, !118, !1491, !144, !143, !1540, !156, !1066, !1551, !279, !213, !1590}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1106, line: 336, size: 160, elements: !1494)
!1494 = !{!1495, !1514, !1518, !1522, !1535}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1493, file: !1106, line: 365, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!118, !1499, !1127}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1512, !1513}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1501, file: !130, line: 380, baseType: !133, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1501, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1501, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1501, file: !130, line: 386, baseType: !1507, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1508, file: !130, line: 359, baseType: !143, size: 8)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1508, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1501, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1501, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1493, file: !1106, line: 366, baseType: !1515, size: 32, offset: 32)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{null, !1499, !144}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1493, file: !1106, line: 374, baseType: !1519, size: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!118, !1499}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1493, file: !1106, line: 377, baseType: !1523, size: 32, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!118, !1499, !1526}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1106, line: 122, size: 64, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533, !1534}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1528, file: !1106, line: 123, baseType: !156, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1528, file: !1106, line: 124, baseType: !143, size: 8, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1528, file: !1106, line: 125, baseType: !143, size: 8, offset: 40)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1528, file: !1106, line: 126, baseType: !143, size: 8, offset: 48)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1528, file: !1106, line: 127, baseType: !143, size: 8, offset: 56)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1493, file: !1106, line: 379, baseType: !1536, size: 32, offset: 128)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!118, !1499, !1539}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !448, line: 783, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 774, size: 224, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1542, file: !448, line: 776, baseType: !452, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1542, file: !448, line: 777, baseType: !452, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1542, file: !448, line: 778, baseType: !452, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1542, file: !448, line: 779, baseType: !452, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1542, file: !448, line: 780, baseType: !452, size: 32, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1542, file: !448, line: 781, baseType: !452, size: 32, offset: 160)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1542, file: !448, line: 782, baseType: !452, size: 32, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !970, line: 100, size: 224, elements: !1554)
!1554 = !{!1555, !1560, !1561, !1570, !1575, !1580, !1585}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1553, file: !970, line: 101, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !970, line: 76, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!118, !1499, !1066}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1553, file: !970, line: 102, baseType: !1556, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1553, file: !970, line: 103, baseType: !1562, size: 32, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !970, line: 83, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!118, !1499, !1066, !1566, !117}
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !970, line: 72, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1499, !1066, !117}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1553, file: !970, line: 104, baseType: !1571, size: 32, offset: 96)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !970, line: 79, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!118, !1499, !1066, !1022}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1553, file: !970, line: 105, baseType: !1576, size: 32, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !970, line: 88, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!969, !1499, !1066}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1553, file: !970, line: 106, baseType: !1581, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !970, line: 92, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!118, !1499, !1066, !1092}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1553, file: !970, line: 107, baseType: !1586, size: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !970, line: 96, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!118, !1499, !1066, !117}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!1591 = !{!1592, !1598, !1600, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1629, !1631, !1453, !1633, !1641, !1664, !1667, !1670, !1672, !1679, !1696, !1698, !1700, !1702, !1704, !1706, !1708, !1710, !1712, !1714, !1716, !1718, !1720, !1722, !1724, !1726, !1728}
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1595, isLocal: false, isDefinition: true, align: 16)
!1594 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !1596)
!1596 = !{!1597}
!1597 = !DISubrange(count: 8)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1500, isLocal: false, isDefinition: true, align: 32)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1602, isLocal: true, isDefinition: true, align: 32)
!1602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1603, file: !463, line: 60, baseType: !1519, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1603, file: !463, line: 65, baseType: !1499, size: 32, offset: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1595, isLocal: false, isDefinition: true, align: 16)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1500, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1602, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1595, isLocal: false, isDefinition: true, align: 16)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1500, isLocal: false, isDefinition: true, align: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1602, isLocal: true, isDefinition: true, align: 32)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1595, isLocal: false, isDefinition: true, align: 16)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1500, isLocal: false, isDefinition: true, align: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1602, isLocal: true, isDefinition: true, align: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1508, isLocal: true, isDefinition: true, align: 8)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1508, isLocal: true, isDefinition: true, align: 8)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1508, isLocal: true, isDefinition: true, align: 8)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1508, isLocal: true, isDefinition: true, align: 8)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1455, file: !1594, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 64, elements: !645)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1018, line: 343, size: 64, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1637, file: !1018, line: 344, baseType: !156, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1637, file: !1018, line: 345, baseType: !156, size: 32, offset: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !1646)
!1645 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1646 = !{!1647, !1663}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1644, file: !1645, line: 69, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !1651)
!1651 = !{!1652, !1661, !1662}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1650, file: !1645, line: 52, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !1657)
!1656 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1657, file: !1656, line: 34, baseType: !156, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1657, file: !1656, line: 36, baseType: !156, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1650, file: !1645, line: 54, baseType: !143, size: 8, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1650, file: !1645, line: 56, baseType: !143, size: 8, offset: 40)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1644, file: !1645, line: 71, baseType: !143, size: 8, offset: 32)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 64, elements: !645)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1455, file: !1594, line: 1914, type: !1669, isLocal: true, isDefinition: true)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1654, size: 128, elements: !256)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1455, file: !1594, line: 1539, type: !1492, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1455, file: !1594, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1675, line: 74, size: 64, elements: !1676)
!1675 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1674, file: !1675, line: 76, baseType: !156, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1674, file: !1675, line: 78, baseType: !1499, size: 32, offset: 32)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1455, file: !1594, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1675, line: 22, size: 224, elements: !1683)
!1683 = !{!1684, !1685, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1682, file: !1675, line: 24, baseType: !1540, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1682, file: !1675, line: 26, baseType: !1686, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1682, file: !1675, line: 28, baseType: !315, size: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1682, file: !1675, line: 30, baseType: !146, size: 8, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1682, file: !1675, line: 32, baseType: !118, size: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1682, file: !1675, line: 34, baseType: !146, size: 8, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1682, file: !1675, line: 36, baseType: !146, size: 8, offset: 168)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1682, file: !1675, line: 38, baseType: !146, size: 8, offset: 176)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1682, file: !1675, line: 40, baseType: !146, size: 8, offset: 184)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1682, file: !1675, line: 41, baseType: !1695, size: 32, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1455, file: !1594, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1455, file: !1594, line: 1914, type: !1669, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1455, file: !1594, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1455, file: !1594, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1455, file: !1594, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1455, file: !1594, line: 1914, type: !1669, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1455, file: !1594, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1455, file: !1594, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1455, file: !1594, line: 1914, type: !1635, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1666, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1455, file: !1594, line: 1914, type: !1669, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1455, file: !1594, line: 1914, type: !1674, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1732, file: !1810, line: 65, type: !452, isLocal: true, isDefinition: true)
!1732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1734, retainedTypes: !1735, globals: !1807, splitDebugInlining: false, nameTableKind: None)
!1733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1734 = !{!725}
!1735 = !{!113, !1736, !362, !143, !156, !1744, !1775}
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1738, file: !656, line: 766, baseType: !452, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1738, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1738, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1738, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1747)
!1747 = !{!1748, !1750, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1765, !1770, !1774}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1746, file: !656, line: 413, baseType: !1749, size: 256)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !1596)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1746, file: !656, line: 414, baseType: !1751, size: 768, offset: 256)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !1752)
!1752 = !{!1753}
!1753 = !DISubrange(count: 24)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1746, file: !656, line: 415, baseType: !1749, size: 256, offset: 1024)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1746, file: !656, line: 416, baseType: !1751, size: 768, offset: 1280)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1746, file: !656, line: 417, baseType: !1749, size: 256, offset: 2048)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1746, file: !656, line: 418, baseType: !1751, size: 768, offset: 2304)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1746, file: !656, line: 419, baseType: !1749, size: 256, offset: 3072)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1746, file: !656, line: 420, baseType: !1751, size: 768, offset: 3328)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1746, file: !656, line: 421, baseType: !1749, size: 256, offset: 4096)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1746, file: !656, line: 422, baseType: !1762, size: 1792, offset: 4352)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1792, elements: !1763)
!1763 = !{!1764}
!1764 = !DISubrange(count: 56)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1746, file: !656, line: 423, baseType: !1766, size: 1920, offset: 6144)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 1920, elements: !1768)
!1767 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1768 = !{!1769}
!1769 = !DISubrange(count: 240)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1746, file: !656, line: 424, baseType: !1771, size: 20608, offset: 8064)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 20608, elements: !1772)
!1772 = !{!1773}
!1773 = !DISubrange(count: 644)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1746, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1777)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1798, !1799, !1800, !1802, !1804, !1806}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1777, file: !656, line: 447, baseType: !660, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1777, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1777, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1777, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1777, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1777, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1777, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!1786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 96, elements: !1787)
!1787 = !{!1788}
!1788 = !DISubrange(count: 12)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1777, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1777, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1777, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1777, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1777, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1777, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1777, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1777, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 64, elements: !256)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1777, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1777, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1777, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 128, elements: !837)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1777, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 160, elements: !1323)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1777, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !1323)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1777, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1807 = !{!1808, !1834, !1839, !1841, !1843, !1730}
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1732, file: !1810, line: 285, type: !1811, isLocal: true, isDefinition: true, align: 32)
!1810 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1813)
!1813 = !{!1814, !1833}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1812, file: !463, line: 60, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!118, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825, !1831, !1832}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1820, file: !130, line: 380, baseType: !133, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1820, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1820, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1820, file: !130, line: 386, baseType: !1826, size: 32, offset: 96)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1827, file: !130, line: 359, baseType: !143, size: 8)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1827, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1820, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1820, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1812, file: !463, line: 65, baseType: !1818, size: 32, offset: 32)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "lock", scope: !1732, file: !1810, line: 34, type: !1836, isLocal: true, isDefinition: true)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !1837)
!1837 = !{!1838}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1836, file: !334, line: 52, baseType: !22, size: 32)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "last_load", scope: !1732, file: !1810, line: 36, type: !156, isLocal: true, isDefinition: true)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1732, file: !1810, line: 48, type: !156, isLocal: true, isDefinition: true)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1732, file: !1810, line: 54, type: !156, isLocal: true, isDefinition: true)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1847, file: !1929, line: 22, type: !1931, isLocal: true, isDefinition: true)
!1847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1849, retainedTypes: !1850, globals: !1926, splitDebugInlining: false, nameTableKind: None)
!1848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1849 = !{!101, !107}
!1850 = !{!1851, !1915, !1920, !167, !107, !101, !1925, !117}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1854)
!1854 = !{!1855, !1874, !1878, !1882, !1886, !1887, !1888, !1892, !1911}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1853, file: !102, line: 524, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!118, !1859, !154, !155}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1872, !1873}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1861, file: !130, line: 380, baseType: !133, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1861, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1861, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1861, file: !130, line: 386, baseType: !1867, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1869)
!1869 = !{!1870, !1871}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1868, file: !130, line: 359, baseType: !143, size: 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1868, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1861, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1861, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1853, file: !102, line: 530, baseType: !1875, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!118, !1859, !161}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1853, file: !102, line: 532, baseType: !1879, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!118, !1859, !167, !162}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1853, file: !102, line: 535, baseType: !1883, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!118, !1859, !167}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1853, file: !102, line: 537, baseType: !1883, size: 32, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1853, file: !102, line: 539, baseType: !1883, size: 32, offset: 160)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1853, file: !102, line: 541, baseType: !1889, size: 32, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!118, !1859, !154, !101, !107}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1853, file: !102, line: 544, baseType: !1893, size: 32, offset: 224)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!118, !1859, !1896, !146}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1898)
!1898 = !{!1899, !1905, !1910}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1897, file: !102, line: 482, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1901, file: !187, line: 30, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1897, file: !102, line: 485, baseType: !1906, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{null, !1859, !1896, !167}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1897, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1853, file: !102, line: 547, baseType: !1912, size: 32, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!156, !1859}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1917, file: !102, line: 434, baseType: !167, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1923)
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1922, file: !102, line: 447, baseType: !167, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1926 = !{!1927, !1845}
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1928 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1847, file: !1929, line: 37, type: !1930, isLocal: true, isDefinition: true)
!1929 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 352, elements: !1933)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1933 = !{!1934}
!1934 = !DISubrange(count: 11)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1937, file: !1981, line: 139, type: !1988, isLocal: false, isDefinition: true)
!1937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1939, globals: !1978, splitDebugInlining: false, nameTableKind: None)
!1938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 586, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 550, size: 1216, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1942, file: !448, line: 552, baseType: !452, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1942, file: !448, line: 553, baseType: !452, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1942, file: !448, line: 554, baseType: !452, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1942, file: !448, line: 555, baseType: !452, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1942, file: !448, line: 556, baseType: !452, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1942, file: !448, line: 557, baseType: !452, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1942, file: !448, line: 558, baseType: !452, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1942, file: !448, line: 559, baseType: !156, size: 32, offset: 224)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1942, file: !448, line: 560, baseType: !452, size: 32, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1942, file: !448, line: 561, baseType: !452, size: 32, offset: 288)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1942, file: !448, line: 562, baseType: !992, size: 64, offset: 320)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1942, file: !448, line: 563, baseType: !452, size: 32, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1942, file: !448, line: 564, baseType: !452, size: 32, offset: 416)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1942, file: !448, line: 565, baseType: !452, size: 32, offset: 448)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1942, file: !448, line: 566, baseType: !156, size: 32, offset: 480)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1942, file: !448, line: 567, baseType: !452, size: 32, offset: 512)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1942, file: !448, line: 568, baseType: !452, size: 32, offset: 544)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1942, file: !448, line: 569, baseType: !992, size: 64, offset: 576)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1942, file: !448, line: 570, baseType: !452, size: 32, offset: 640)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1942, file: !448, line: 571, baseType: !452, size: 32, offset: 672)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1942, file: !448, line: 572, baseType: !452, size: 32, offset: 704)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1942, file: !448, line: 573, baseType: !156, size: 32, offset: 736)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1942, file: !448, line: 574, baseType: !452, size: 32, offset: 768)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1942, file: !448, line: 575, baseType: !452, size: 32, offset: 800)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1942, file: !448, line: 576, baseType: !992, size: 64, offset: 832)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1942, file: !448, line: 577, baseType: !452, size: 32, offset: 896)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1942, file: !448, line: 578, baseType: !452, size: 32, offset: 928)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1942, file: !448, line: 579, baseType: !992, size: 64, offset: 960)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1942, file: !448, line: 580, baseType: !452, size: 32, offset: 1024)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1942, file: !448, line: 581, baseType: !452, size: 32, offset: 1056)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1942, file: !448, line: 582, baseType: !452, size: 32, offset: 1088)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1942, file: !448, line: 583, baseType: !452, size: 32, offset: 1120)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1942, file: !448, line: 584, baseType: !452, size: 32, offset: 1152)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1942, file: !448, line: 585, baseType: !452, size: 32, offset: 1184)
!1978 = !{!1979, !1982, !1935}
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1937, file: !1981, line: 137, type: !156, isLocal: false, isDefinition: true)
!1981 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1937, file: !1981, line: 138, type: !1984, isLocal: false, isDefinition: true)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 128, elements: !1986)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!1986 = !{!1987}
!1987 = !DISubrange(count: 16)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 64, elements: !1596)
!1989 = !DIGlobalVariableExpression(var: !1990, expr: !DIExpression())
!1990 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1991, file: !1994, line: 23, type: !1995, isLocal: false, isDefinition: true)
!1991 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1992, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !1993, splitDebugInlining: false, nameTableKind: None)
!1992 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!1993 = !{!1989}
!1994 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1998, file: !2002, line: 86, type: !2252, isLocal: false, isDefinition: true, align: 512)
!1998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2000, retainedTypes: !2009, globals: !2083, splitDebugInlining: false, nameTableKind: None)
!1999 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2000 = !{!2001, !30, !725}
!2001 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2002, line: 63, baseType: !32, size: 32, elements: !2003)
!2002 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2003 = !{!2004, !2005, !2006, !2007, !2008}
!2004 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2005 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2006 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2007 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2008 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2009 = !{!315, !117, !118, !2010, !1277, !156, !2041, !362, !143, !2066}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2013, line: 51, size: 64, elements: !2014)
!2013 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2014 = !{!2015, !2036}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2012, file: !2013, line: 52, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2013, line: 38, baseType: !2017)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!118, !2020, !2035, !279}
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2022)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2033, !2034}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2022, file: !130, line: 380, baseType: !133, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2022, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2022, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2022, file: !130, line: 386, baseType: !2028, size: 32, offset: 96)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !2030)
!2030 = !{!2031, !2032}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2029, file: !130, line: 359, baseType: !143, size: 8)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2029, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2022, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2022, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2012, file: !2013, line: 53, baseType: !2037, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2013, line: 47, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!118, !2020, !2035, !279, !156}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2043, file: !656, line: 447, baseType: !660, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2043, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2043, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2043, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2043, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2043, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2043, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2043, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2043, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2043, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2043, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2043, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2043, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2043, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2043, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2043, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2043, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2043, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2043, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2043, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2043, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2068, file: !656, line: 413, baseType: !1749, size: 256)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2068, file: !656, line: 414, baseType: !1751, size: 768, offset: 256)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2068, file: !656, line: 415, baseType: !1749, size: 256, offset: 1024)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2068, file: !656, line: 416, baseType: !1751, size: 768, offset: 1280)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2068, file: !656, line: 417, baseType: !1749, size: 256, offset: 2048)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2068, file: !656, line: 418, baseType: !1751, size: 768, offset: 2304)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2068, file: !656, line: 419, baseType: !1749, size: 256, offset: 3072)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2068, file: !656, line: 420, baseType: !1751, size: 768, offset: 3328)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2068, file: !656, line: 421, baseType: !1749, size: 256, offset: 4096)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2068, file: !656, line: 422, baseType: !1762, size: 1792, offset: 4352)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2068, file: !656, line: 423, baseType: !1766, size: 1920, offset: 6144)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2068, file: !656, line: 424, baseType: !1771, size: 20608, offset: 8064)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2068, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2083 = !{!2084, !2209, !2215, !2217, !1996, !2220, !2222, !2227}
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "_kernel", scope: !1998, file: !2002, line: 40, type: !2086, isLocal: false, isDefinition: true)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !261, line: 158, size: 288, elements: !2087)
!2087 = !{!2088, !2204}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2086, file: !261, line: 159, baseType: !2089, size: 192)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2090, size: 192, elements: !645)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !261, line: 100, size: 192, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2197, !2198, !2199, !2200}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2090, file: !261, line: 102, baseType: !156, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2090, file: !261, line: 105, baseType: !1277, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2090, file: !261, line: 108, baseType: !2095, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2097)
!2097 = !{!2098, !2156, !2168, !2169, !2170, !2171, !2177, !2192}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2096, file: !225, line: 247, baseType: !2099, size: 384)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2100)
!2100 = !{!2101, !2125, !2132, !2133, !2134, !2143, !2144, !2145}
!2101 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !225, line: 60, baseType: !2102, size: 64)
!2102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !225, line: 60, size: 64, elements: !2103)
!2103 = !{!2104, !2119}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2102, file: !225, line: 61, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2107)
!2107 = !{!2108, !2114}
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !235, line: 38, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !235, line: 38, size: 32, elements: !2110)
!2110 = !{!2111, !2113}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2109, file: !235, line: 39, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2109, file: !235, line: 40, baseType: !2112, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !235, line: 42, baseType: !2115, size: 32, offset: 32)
!2115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !235, line: 42, size: 32, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2115, file: !235, line: 43, baseType: !2112, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2115, file: !235, line: 44, baseType: !2112, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2102, file: !225, line: 62, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2121)
!2121 = !{!2122}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2120, file: !251, line: 50, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 64, elements: !256)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2099, file: !225, line: 68, baseType: !2126, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2129)
!2129 = !{!2130}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2128, file: !261, line: 232, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2106)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2099, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2099, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2134 = !DIDerivedType(tag: DW_TAG_member, scope: !2099, file: !225, line: 90, baseType: !2135, size: 16, offset: 112)
!2135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2099, file: !225, line: 90, size: 16, elements: !2136)
!2136 = !{!2137, !2142}
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2135, file: !225, line: 91, baseType: !2138, size: 16)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2135, file: !225, line: 91, size: 16, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2138, file: !225, line: 96, baseType: !275, size: 8)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2138, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2135, file: !225, line: 100, baseType: !279, size: 16)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2099, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2099, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2099, file: !225, line: 131, baseType: !2146, size: 192, offset: 192)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2147)
!2147 = !{!2148, !2149, !2155}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2146, file: !261, line: 245, baseType: !2105, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2146, file: !261, line: 246, baseType: !2150, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2151)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !2154}
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2146, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2096, file: !225, line: 250, baseType: !2157, size: 288, offset: 384)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2158)
!2158 = !{!2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2157, file: !296, line: 26, baseType: !156, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2157, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2157, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2157, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2157, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2157, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2157, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2157, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2157, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2096, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2096, file: !225, line: 256, baseType: !2127, size: 64, offset: 704)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2096, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2096, file: !225, line: 300, baseType: !2172, size: 96, offset: 800)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2173)
!2173 = !{!2174, !2175, !2176}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2172, file: !225, line: 153, baseType: !22, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2172, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2172, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2096, file: !225, line: 325, baseType: !2178, size: 32, offset: 896)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2180)
!2180 = !{!2181, !2187, !2188}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2179, file: !220, line: 5074, baseType: !2182, size: 96)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2183)
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2182, file: !324, line: 57, baseType: !327, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2182, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2182, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2179, file: !220, line: 5075, baseType: !2127, size: 64, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2179, file: !220, line: 5076, baseType: !2189, size: 32, offset: 160)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2190)
!2190 = !{!2191}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2189, file: !334, line: 52, baseType: !22, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2096, file: !225, line: 343, baseType: !2193, size: 64, offset: 928)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2193, file: !296, line: 63, baseType: !156, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2193, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2090, file: !261, line: 111, baseType: !2095, size: 32, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2090, file: !261, line: 124, baseType: !118, size: 32, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2090, file: !261, line: 127, baseType: !143, size: 8, offset: 160)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2090, file: !261, line: 153, baseType: !2201, offset: 168)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2202, line: 33, elements: !2203)
!2202 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2203 = !{}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2086, file: !261, line: 170, baseType: !2205, size: 96, offset: 192)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2205, file: !261, line: 86, baseType: !2095, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2205, file: !261, line: 90, baseType: !2131, size: 64, offset: 32)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1998, file: !2002, line: 43, type: !2211, isLocal: false, isDefinition: true, align: 512)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 8704, elements: !383)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !2213)
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2212, file: !347, line: 48, baseType: !135, size: 8)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1998, file: !2002, line: 44, type: !2096, isLocal: false, isDefinition: true)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1998, file: !2002, line: 48, type: !2219, isLocal: false, isDefinition: true)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2096, size: 1024, elements: !645)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1998, file: !2002, line: 217, type: !146, isLocal: false, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1998, file: !2002, line: 50, type: !2224, isLocal: true, isDefinition: true, align: 512)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 3072, elements: !2225)
!2225 = !{!646, !2226}
!2226 = !DISubrange(count: 384)
!2227 = !DIGlobalVariableExpression(var: !2228, expr: !DIExpression())
!2228 = distinct !DIGlobalVariable(name: "levels", scope: !2229, file: !2002, line: 232, type: !2249, isLocal: true, isDefinition: true)
!2229 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2002, file: !2002, line: 230, type: !2230, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !2232)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{null, !2001}
!2232 = !{!2233, !2234, !2244, !2248}
!2233 = !DILocalVariable(name: "level", arg: 1, scope: !2229, file: !2002, line: 230, type: !2001)
!2234 = !DILocalVariable(name: "entry", scope: !2229, file: !2002, line: 244, type: !2235)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2238)
!2238 = !{!2239, !2243}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2237, file: !463, line: 60, baseType: !2240, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!118, !2020}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2237, file: !463, line: 65, baseType: !2020, size: 32, offset: 32)
!2244 = !DILocalVariable(name: "dev", scope: !2245, file: !2002, line: 247, type: !2020)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !2002, line: 246, column: 64)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !2002, line: 246, column: 2)
!2247 = distinct !DILexicalBlock(scope: !2229, file: !2002, line: 246, column: 2)
!2248 = !DILocalVariable(name: "rc", scope: !2245, file: !2002, line: 248, type: !118)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2235, size: 192, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 6)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 16896, elements: !2253)
!2253 = !{!646, !2254}
!2254 = !DISubrange(count: 2112)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "states_str", scope: !2257, file: !2258, line: 276, type: !2381, isLocal: true, isDefinition: true)
!2257 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2258, file: !2258, line: 271, type: !2259, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2372)
!2258 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!133, !2261, !1277, !315}
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2262)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2264)
!2264 = !{!2265, !2323, !2335, !2336, !2337, !2338, !2344, !2359}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2263, file: !225, line: 247, baseType: !2266, size: 384)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2267)
!2267 = !{!2268, !2292, !2299, !2300, !2301, !2310, !2311, !2312}
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2266, file: !225, line: 60, baseType: !2269, size: 64)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2266, file: !225, line: 60, size: 64, elements: !2270)
!2270 = !{!2271, !2286}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2269, file: !225, line: 61, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2274)
!2274 = !{!2275, !2281}
!2275 = !DIDerivedType(tag: DW_TAG_member, scope: !2273, file: !235, line: 38, baseType: !2276, size: 32)
!2276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2273, file: !235, line: 38, size: 32, elements: !2277)
!2277 = !{!2278, !2280}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2276, file: !235, line: 39, baseType: !2279, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2276, file: !235, line: 40, baseType: !2279, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2273, file: !235, line: 42, baseType: !2282, size: 32, offset: 32)
!2282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2273, file: !235, line: 42, size: 32, elements: !2283)
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2282, file: !235, line: 43, baseType: !2279, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2282, file: !235, line: 44, baseType: !2279, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2269, file: !225, line: 62, baseType: !2287, size: 64)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2288)
!2288 = !{!2289}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2287, file: !251, line: 50, baseType: !2290, size: 64)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2291, size: 64, elements: !256)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2266, file: !225, line: 68, baseType: !2293, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2295)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2296)
!2296 = !{!2297}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2295, file: !261, line: 232, baseType: !2298, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2273)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2266, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2266, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2301 = !DIDerivedType(tag: DW_TAG_member, scope: !2266, file: !225, line: 90, baseType: !2302, size: 16, offset: 112)
!2302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2266, file: !225, line: 90, size: 16, elements: !2303)
!2303 = !{!2304, !2309}
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2302, file: !225, line: 91, baseType: !2305, size: 16)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2302, file: !225, line: 91, size: 16, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2305, file: !225, line: 96, baseType: !275, size: 8)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2305, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2302, file: !225, line: 100, baseType: !279, size: 16)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2266, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2266, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2266, file: !225, line: 131, baseType: !2313, size: 192, offset: 192)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2314)
!2314 = !{!2315, !2316, !2322}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2313, file: !261, line: 245, baseType: !2272, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2313, file: !261, line: 246, baseType: !2317, size: 32, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{null, !2321}
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2313, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2263, file: !225, line: 250, baseType: !2324, size: 288, offset: 384)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2324, file: !296, line: 26, baseType: !156, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2324, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2324, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2324, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2324, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2324, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2324, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2324, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2324, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2263, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2263, file: !225, line: 256, baseType: !2294, size: 64, offset: 704)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2263, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2263, file: !225, line: 300, baseType: !2339, size: 96, offset: 800)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2340)
!2340 = !{!2341, !2342, !2343}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2339, file: !225, line: 153, baseType: !22, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2339, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2339, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2263, file: !225, line: 325, baseType: !2345, size: 32, offset: 896)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2347)
!2347 = !{!2348, !2354, !2355}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2346, file: !220, line: 5074, baseType: !2349, size: 96)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2350)
!2350 = !{!2351, !2352, !2353}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2349, file: !324, line: 57, baseType: !327, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2349, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2349, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2346, file: !220, line: 5075, baseType: !2294, size: 64, offset: 96)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2346, file: !220, line: 5076, baseType: !2356, size: 32, offset: 160)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2357)
!2357 = !{!2358}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2356, file: !334, line: 52, baseType: !22, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2263, file: !225, line: 343, baseType: !2360, size: 64, offset: 928)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2361)
!2361 = !{!2362, !2363}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2360, file: !296, line: 63, baseType: !156, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2360, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2366, globals: !2368, splitDebugInlining: false, nameTableKind: None)
!2365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2366 = !{!117, !133, !113, !143, !22, !118, !2367, !24, !315, !1277, !156, !213}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2368 = !{!2255, !2369}
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "states_sz", scope: !2257, file: !2258, line: 279, type: !2371, isLocal: true, isDefinition: true)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 256, elements: !1596)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378, !2379}
!2373 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2257, file: !2258, line: 271, type: !2261)
!2374 = !DILocalVariable(name: "buf", arg: 2, scope: !2257, file: !2258, line: 271, type: !1277)
!2375 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2257, file: !2258, line: 271, type: !315)
!2376 = !DILocalVariable(name: "off", scope: !2257, file: !2258, line: 273, type: !315)
!2377 = !DILocalVariable(name: "bit", scope: !2257, file: !2258, line: 274, type: !143)
!2378 = !DILocalVariable(name: "thread_state", scope: !2257, file: !2258, line: 275, type: !143)
!2379 = !DILocalVariable(name: "index", scope: !2380, file: !2258, line: 293, type: !143)
!2380 = distinct !DILexicalBlock(scope: !2257, file: !2258, line: 293, column: 2)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !1596)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2384, file: !2494, line: 56, type: !2481, isLocal: false, isDefinition: true)
!2384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2386, globals: !2491, splitDebugInlining: false, nameTableKind: None)
!2385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2386 = !{!2387, !1277, !117, !2489, !2035, !113, !362, !118, !156, !213, !2490}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2389)
!2389 = !{!2390, !2448, !2460, !2461, !2462, !2463, !2469, !2484}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2388, file: !225, line: 247, baseType: !2391, size: 384)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2392)
!2392 = !{!2393, !2417, !2424, !2425, !2426, !2435, !2436, !2437}
!2393 = !DIDerivedType(tag: DW_TAG_member, scope: !2391, file: !225, line: 60, baseType: !2394, size: 64)
!2394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2391, file: !225, line: 60, size: 64, elements: !2395)
!2395 = !{!2396, !2411}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2394, file: !225, line: 61, baseType: !2397, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2399)
!2399 = !{!2400, !2406}
!2400 = !DIDerivedType(tag: DW_TAG_member, scope: !2398, file: !235, line: 38, baseType: !2401, size: 32)
!2401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !235, line: 38, size: 32, elements: !2402)
!2402 = !{!2403, !2405}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2401, file: !235, line: 39, baseType: !2404, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2401, file: !235, line: 40, baseType: !2404, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !2398, file: !235, line: 42, baseType: !2407, size: 32, offset: 32)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !235, line: 42, size: 32, elements: !2408)
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2407, file: !235, line: 43, baseType: !2404, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2407, file: !235, line: 44, baseType: !2404, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2394, file: !225, line: 62, baseType: !2412, size: 64)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2413)
!2413 = !{!2414}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2412, file: !251, line: 50, baseType: !2415, size: 64)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2416, size: 64, elements: !256)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2391, file: !225, line: 68, baseType: !2418, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2421)
!2421 = !{!2422}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2420, file: !261, line: 232, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2398)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2391, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2391, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2426 = !DIDerivedType(tag: DW_TAG_member, scope: !2391, file: !225, line: 90, baseType: !2427, size: 16, offset: 112)
!2427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2391, file: !225, line: 90, size: 16, elements: !2428)
!2428 = !{!2429, !2434}
!2429 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !225, line: 91, baseType: !2430, size: 16)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2427, file: !225, line: 91, size: 16, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2430, file: !225, line: 96, baseType: !275, size: 8)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2430, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2427, file: !225, line: 100, baseType: !279, size: 16)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2391, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2391, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2391, file: !225, line: 131, baseType: !2438, size: 192, offset: 192)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2439)
!2439 = !{!2440, !2441, !2447}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2438, file: !261, line: 245, baseType: !2397, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2438, file: !261, line: 246, baseType: !2442, size: 32, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2443)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !2446}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2438, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2388, file: !225, line: 250, baseType: !2449, size: 288, offset: 384)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2450)
!2450 = !{!2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2449, file: !296, line: 26, baseType: !156, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2449, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2449, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2449, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2449, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2449, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2449, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2449, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2449, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2388, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2388, file: !225, line: 256, baseType: !2419, size: 64, offset: 704)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2388, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2388, file: !225, line: 300, baseType: !2464, size: 96, offset: 800)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2465)
!2465 = !{!2466, !2467, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2464, file: !225, line: 153, baseType: !22, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2464, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2464, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2388, file: !225, line: 325, baseType: !2470, size: 32, offset: 896)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2472)
!2472 = !{!2473, !2479, !2480}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2471, file: !220, line: 5074, baseType: !2474, size: 96)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2475)
!2475 = !{!2476, !2477, !2478}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2474, file: !324, line: 57, baseType: !327, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2474, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2474, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2471, file: !220, line: 5075, baseType: !2419, size: 64, offset: 96)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2471, file: !220, line: 5076, baseType: !2481, size: 32, offset: 160)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2482)
!2482 = !{!2483}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2481, file: !334, line: 52, baseType: !22, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2388, file: !225, line: 343, baseType: !2485, size: 64, offset: 928)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2486)
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2485, file: !296, line: 63, baseType: !156, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2485, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2491 = !{!2382, !2492, !2495, !2497}
!2492 = !DIGlobalVariableExpression(var: !2493, expr: !DIExpression())
!2493 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2384, file: !2494, line: 404, type: !118, isLocal: true, isDefinition: true)
!2494 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2495 = !DIGlobalVariableExpression(var: !2496, expr: !DIExpression())
!2496 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2384, file: !2494, line: 405, type: !118, isLocal: true, isDefinition: true)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "pending_current", scope: !2384, file: !2494, line: 425, type: !2387, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2501, file: !2531, line: 19, type: !2537, isLocal: true, isDefinition: true)
!2501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2503, globals: !2528, splitDebugInlining: false, nameTableKind: None)
!2502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2503 = !{!113, !117, !362, !156, !213, !118, !2504, !1277, !115}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2506)
!2506 = !{!2507, !2522, !2527}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2505, file: !261, line: 245, baseType: !2508, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2509)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2510)
!2510 = !{!2511, !2517}
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2509, file: !235, line: 38, baseType: !2512, size: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2509, file: !235, line: 38, size: 32, elements: !2513)
!2513 = !{!2514, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2512, file: !235, line: 39, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2512, file: !235, line: 40, baseType: !2515, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2509, file: !235, line: 42, baseType: !2518, size: 32, offset: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2509, file: !235, line: 42, size: 32, elements: !2519)
!2519 = !{!2520, !2521}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2518, file: !235, line: 43, baseType: !2515, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2518, file: !235, line: 44, baseType: !2515, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2505, file: !261, line: 246, baseType: !2523, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2524)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2504}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2505, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2528 = !{!2529, !2499, !2532, !2534}
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2501, file: !2531, line: 15, type: !213, isLocal: true, isDefinition: true)
!2531 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2501, file: !2531, line: 25, type: !118, isLocal: true, isDefinition: true)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2501, file: !2531, line: 17, type: !2536, isLocal: true, isDefinition: true)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2509)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2538)
!2538 = !{!2539}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2537, file: !334, line: 52, baseType: !22, size: 32)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2542, file: !2548, line: 61, type: !2580, isLocal: false, isDefinition: true, align: 64)
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2544, globals: !2545, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2544 = !{!117, !118, !22}
!2545 = !{!2546, !2540}
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2542, file: !2548, line: 61, type: !2549, isLocal: false, isDefinition: true, align: 32)
!2548 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2550)
!2550 = !{!2551, !2557, !2576}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2549, file: !220, line: 5074, baseType: !2552, size: 96)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2553)
!2553 = !{!2554, !2555, !2556}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2552, file: !324, line: 57, baseType: !327, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2552, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2552, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2549, file: !220, line: 5075, baseType: !2558, size: 64, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2560)
!2560 = !{!2561}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2559, file: !261, line: 232, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2564)
!2564 = !{!2565, !2571}
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !235, line: 38, baseType: !2566, size: 32)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !235, line: 38, size: 32, elements: !2567)
!2567 = !{!2568, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2566, file: !235, line: 39, baseType: !2569, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2566, file: !235, line: 40, baseType: !2569, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !235, line: 42, baseType: !2572, size: 32, offset: 32)
!2572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !235, line: 42, size: 32, elements: !2573)
!2573 = !{!2574, !2575}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2572, file: !235, line: 43, baseType: !2569, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2572, file: !235, line: 44, baseType: !2569, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2549, file: !220, line: 5076, baseType: !2577, size: 32, offset: 160)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2577, file: !334, line: 52, baseType: !22, size: 32)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2048, elements: !2581)
!2581 = !{!2582}
!2582 = !DISubrange(count: 256)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2585, file: !2604, line: 55, type: !2605, isLocal: true, isDefinition: true, align: 32)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2587, globals: !2603, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2587 = !{!117, !113, !118, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2591)
!2591 = !{!2592, !2598}
!2592 = !DIDerivedType(tag: DW_TAG_member, scope: !2590, file: !235, line: 38, baseType: !2593, size: 32)
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2590, file: !235, line: 38, size: 32, elements: !2594)
!2594 = !{!2595, !2597}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2593, file: !235, line: 39, baseType: !2596, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2593, file: !235, line: 40, baseType: !2596, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, scope: !2590, file: !235, line: 42, baseType: !2599, size: 32, offset: 32)
!2599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2590, file: !235, line: 42, size: 32, elements: !2600)
!2600 = !{!2601, !2602}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2599, file: !235, line: 43, baseType: !2596, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2599, file: !235, line: 44, baseType: !2596, size: 32)
!2603 = !{!2583}
!2604 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2607)
!2607 = !{!2608, !2615}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2606, file: !463, line: 60, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!118, !2612}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2614)
!2614 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !463, line: 48, flags: DIFlagFwdDecl)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2606, file: !463, line: 65, baseType: !2612, size: 32, offset: 32)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2622, retainedTypes: !2630, splitDebugInlining: false, nameTableKind: None)
!2621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2622 = !{!30, !2623}
!2623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2624, line: 54, baseType: !32, size: 32, elements: !2625)
!2624 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2625 = !{!2626, !2627, !2628, !2629}
!2626 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2627 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2628 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2629 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2630 = !{!117, !315, !2035, !24, !2631, !22, !2637, !118, !1022, !2652}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2624, line: 58, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2624, line: 58, size: 64, elements: !2634)
!2634 = !{!2635}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2633, file: !2624, line: 58, baseType: !2636, size: 64)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1596)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2624, line: 68, size: 128, elements: !2639)
!2639 = !{!2640, !2643, !2644, !2645}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2638, file: !2624, line: 69, baseType: !2641, size: 64)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2642, size: 64, elements: !256)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2624, line: 61, baseType: !156)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2638, file: !2624, line: 70, baseType: !2642, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2638, file: !2624, line: 71, baseType: !156, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2638, file: !2624, line: 77, baseType: !2646, offset: 128)
!2646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2647, elements: !2650)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2624, line: 64, size: 32, elements: !2648)
!2648 = !{!2649}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2647, file: !2624, line: 65, baseType: !2642, size: 32)
!2650 = !{!2651}
!2651 = !DISubrange(count: 0)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2655, retainedTypes: !2675, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2655 = !{!2656, !2664}
!2656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2657, line: 69, baseType: !32, size: 32, elements: !2658)
!2657 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = !{!2659, !2660, !2661, !2662, !2663}
!2659 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2660 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2661 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2662 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2663 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2657, line: 56, baseType: !32, size: 32, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!2666 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2667 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2668 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2669 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2670 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2671 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2672 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2673 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2674 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2675 = !{!118, !2656, !2664, !2676, !276, !153, !2678, !2679, !144, !280, !133, !315, !117, !22, !32, !2681, !2682, !2683, !2684, !2685, !116, !2686, !2677, !2687, !2688, !2689, !2690}
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2657, line: 31, baseType: !2677)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !116)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !316, line: 329, baseType: !32)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2657, line: 32, baseType: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !214)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!2684 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !316, line: 145, baseType: !118)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2696, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2697, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2696 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2697 = !{!2698, !30}
!2698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2699, line: 27, baseType: !32, size: 32, elements: !2700)
!2699 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2700 = !{!2701, !2702, !2703, !2704, !2705}
!2701 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2702 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2703 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2704 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2705 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2708, retainedTypes: !2709, splitDebugInlining: false, nameTableKind: None)
!2707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2708 = !{!725, !2698, !30}
!2709 = !{!920, !2710, !117, !118, !362, !156, !143, !2727}
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2712, file: !656, line: 413, baseType: !1749, size: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2712, file: !656, line: 414, baseType: !1751, size: 768, offset: 256)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2712, file: !656, line: 415, baseType: !1749, size: 256, offset: 1024)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2712, file: !656, line: 416, baseType: !1751, size: 768, offset: 1280)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2712, file: !656, line: 417, baseType: !1749, size: 256, offset: 2048)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2712, file: !656, line: 418, baseType: !1751, size: 768, offset: 2304)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2712, file: !656, line: 419, baseType: !1749, size: 256, offset: 3072)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2712, file: !656, line: 420, baseType: !1751, size: 768, offset: 3328)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2712, file: !656, line: 421, baseType: !1749, size: 256, offset: 4096)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2712, file: !656, line: 422, baseType: !1762, size: 1792, offset: 4352)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2712, file: !656, line: 423, baseType: !1766, size: 1920, offset: 6144)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2712, file: !656, line: 424, baseType: !1771, size: 20608, offset: 8064)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2712, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2729, file: !656, line: 447, baseType: !660, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2729, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2729, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2729, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2729, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2729, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2729, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2729, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2729, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2729, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2729, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2729, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2729, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2729, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2729, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2729, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2729, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2729, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2729, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2729, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2729, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2756 = !{!117, !118, !22, !2757}
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2759, file: !656, line: 447, baseType: !660, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2759, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2759, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2759, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2759, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2759, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2759, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2759, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2759, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2759, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2759, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2759, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2759, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2759, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2759, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2759, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2759, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2759, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2759, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2759, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2759, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2784, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2784 = !{!2785, !117, !118}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2787, file: !656, line: 447, baseType: !660, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2787, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2787, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2787, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2787, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2787, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2787, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2787, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2787, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2787, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2787, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2787, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2787, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2787, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2787, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2787, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2787, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2787, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2787, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2787, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2787, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2812, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2812 = !{!2813, !156, !117, !118}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2815, line: 98, size: 256, elements: !2816)
!2815 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2816 = !{!2817, !2822, !2827, !2832, !2837, !2842, !2847, !2852}
!2817 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 99, baseType: !2818, size: 32)
!2818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 99, size: 32, elements: !2819)
!2819 = !{!2820, !2821}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2818, file: !2815, line: 99, baseType: !156, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2818, file: !2815, line: 99, baseType: !156, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 100, baseType: !2823, size: 32, offset: 32)
!2823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 100, size: 32, elements: !2824)
!2824 = !{!2825, !2826}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2823, file: !2815, line: 100, baseType: !156, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2823, file: !2815, line: 100, baseType: !156, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 101, baseType: !2828, size: 32, offset: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 101, size: 32, elements: !2829)
!2829 = !{!2830, !2831}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2828, file: !2815, line: 101, baseType: !156, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2828, file: !2815, line: 101, baseType: !156, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 102, baseType: !2833, size: 32, offset: 96)
!2833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 102, size: 32, elements: !2834)
!2834 = !{!2835, !2836}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2833, file: !2815, line: 102, baseType: !156, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2833, file: !2815, line: 102, baseType: !156, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 103, baseType: !2838, size: 32, offset: 128)
!2838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 103, size: 32, elements: !2839)
!2839 = !{!2840, !2841}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2838, file: !2815, line: 103, baseType: !156, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2838, file: !2815, line: 103, baseType: !156, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 104, baseType: !2843, size: 32, offset: 160)
!2843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 104, size: 32, elements: !2844)
!2844 = !{!2845, !2846}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2843, file: !2815, line: 104, baseType: !156, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2843, file: !2815, line: 104, baseType: !156, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2815, line: 105, baseType: !2848, size: 32, offset: 192)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2815, line: 105, size: 32, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2848, file: !2815, line: 105, baseType: !156, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2848, file: !2815, line: 105, baseType: !156, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2814, file: !2815, line: 106, baseType: !156, size: 32, offset: 224)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2697, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2855 = !{!2856, !117, !118, !2881, !2652, !156}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2858, file: !656, line: 447, baseType: !660, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2858, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2858, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2858, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2858, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2858, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2858, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2858, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2858, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2858, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2858, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2858, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2858, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2858, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2858, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2858, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2858, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2858, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2858, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2858, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2858, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2815, line: 141, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2815, line: 97, size: 256, elements: !2884)
!2884 = !{!2885}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2883, file: !2815, line: 107, baseType: !2886, size: 256)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2815, line: 98, size: 256, elements: !2887)
!2887 = !{!2888, !2893, !2898, !2903, !2908, !2913, !2918, !2923}
!2888 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 99, baseType: !2889, size: 32)
!2889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 99, size: 32, elements: !2890)
!2890 = !{!2891, !2892}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2889, file: !2815, line: 99, baseType: !156, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2889, file: !2815, line: 99, baseType: !156, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 100, baseType: !2894, size: 32, offset: 32)
!2894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 100, size: 32, elements: !2895)
!2895 = !{!2896, !2897}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2894, file: !2815, line: 100, baseType: !156, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2894, file: !2815, line: 100, baseType: !156, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 101, baseType: !2899, size: 32, offset: 64)
!2899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 101, size: 32, elements: !2900)
!2900 = !{!2901, !2902}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2899, file: !2815, line: 101, baseType: !156, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2899, file: !2815, line: 101, baseType: !156, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 102, baseType: !2904, size: 32, offset: 96)
!2904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 102, size: 32, elements: !2905)
!2905 = !{!2906, !2907}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2904, file: !2815, line: 102, baseType: !156, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2904, file: !2815, line: 102, baseType: !156, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 103, baseType: !2909, size: 32, offset: 128)
!2909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 103, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2909, file: !2815, line: 103, baseType: !156, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2909, file: !2815, line: 103, baseType: !156, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 104, baseType: !2914, size: 32, offset: 160)
!2914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 104, size: 32, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2914, file: !2815, line: 104, baseType: !156, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2914, file: !2815, line: 104, baseType: !156, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, scope: !2886, file: !2815, line: 105, baseType: !2919, size: 32, offset: 192)
!2919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2886, file: !2815, line: 105, size: 32, elements: !2920)
!2920 = !{!2921, !2922}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2919, file: !2815, line: 105, baseType: !156, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2919, file: !2815, line: 105, baseType: !156, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2886, file: !2815, line: 106, baseType: !156, size: 32, offset: 224)
!2924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1734, retainedTypes: !2926, splitDebugInlining: false, nameTableKind: None)
!2925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2926 = !{!920, !362, !143, !156, !2927, !2944}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2929, file: !656, line: 413, baseType: !1749, size: 256)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2929, file: !656, line: 414, baseType: !1751, size: 768, offset: 256)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2929, file: !656, line: 415, baseType: !1749, size: 256, offset: 1024)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2929, file: !656, line: 416, baseType: !1751, size: 768, offset: 1280)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2929, file: !656, line: 417, baseType: !1749, size: 256, offset: 2048)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2929, file: !656, line: 418, baseType: !1751, size: 768, offset: 2304)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2929, file: !656, line: 419, baseType: !1749, size: 256, offset: 3072)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2929, file: !656, line: 420, baseType: !1751, size: 768, offset: 3328)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2929, file: !656, line: 421, baseType: !1749, size: 256, offset: 4096)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2929, file: !656, line: 422, baseType: !1762, size: 1792, offset: 4352)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2929, file: !656, line: 423, baseType: !1766, size: 1920, offset: 6144)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2929, file: !656, line: 424, baseType: !1771, size: 20608, offset: 8064)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2929, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2946, file: !656, line: 447, baseType: !660, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2946, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2946, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2946, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2946, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2946, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2946, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2946, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2946, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2946, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2946, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2946, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2946, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2946, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2946, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2946, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2946, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2946, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2946, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2946, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2946, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2971, splitDebugInlining: false, nameTableKind: None)
!2970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2971 = !{!2972, !117, !118}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2974, file: !656, line: 447, baseType: !660, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2974, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2974, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2974, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2974, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2974, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2974, file: !656, line: 453, baseType: !1786, size: 96, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2974, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2974, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2974, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2974, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2974, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2974, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2974, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2974, file: !656, line: 461, baseType: !1797, size: 64, offset: 512)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2974, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2974, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2974, file: !656, line: 464, baseType: !1801, size: 128, offset: 640)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2974, file: !656, line: 465, baseType: !1803, size: 160, offset: 768)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2974, file: !656, line: 466, baseType: !1805, size: 160, offset: 928)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2974, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2999, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!2999 = !{!135, !1277, !315, !1127, !3000, !144, !117}
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!3002 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3003, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3004, splitDebugInlining: false, nameTableKind: None)
!3003 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3004 = !{!3005}
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 586, baseType: !3007)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 550, size: 1216, elements: !3008)
!3008 = !{!3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3007, file: !448, line: 552, baseType: !452, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3007, file: !448, line: 553, baseType: !452, size: 32, offset: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3007, file: !448, line: 554, baseType: !452, size: 32, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3007, file: !448, line: 555, baseType: !452, size: 32, offset: 96)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3007, file: !448, line: 556, baseType: !452, size: 32, offset: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3007, file: !448, line: 557, baseType: !452, size: 32, offset: 160)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3007, file: !448, line: 558, baseType: !452, size: 32, offset: 192)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3007, file: !448, line: 559, baseType: !156, size: 32, offset: 224)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3007, file: !448, line: 560, baseType: !452, size: 32, offset: 256)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3007, file: !448, line: 561, baseType: !452, size: 32, offset: 288)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3007, file: !448, line: 562, baseType: !992, size: 64, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3007, file: !448, line: 563, baseType: !452, size: 32, offset: 384)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3007, file: !448, line: 564, baseType: !452, size: 32, offset: 416)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3007, file: !448, line: 565, baseType: !452, size: 32, offset: 448)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3007, file: !448, line: 566, baseType: !156, size: 32, offset: 480)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3007, file: !448, line: 567, baseType: !452, size: 32, offset: 512)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3007, file: !448, line: 568, baseType: !452, size: 32, offset: 544)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3007, file: !448, line: 569, baseType: !992, size: 64, offset: 576)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3007, file: !448, line: 570, baseType: !452, size: 32, offset: 640)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3007, file: !448, line: 571, baseType: !452, size: 32, offset: 672)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3007, file: !448, line: 572, baseType: !452, size: 32, offset: 704)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3007, file: !448, line: 573, baseType: !156, size: 32, offset: 736)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3007, file: !448, line: 574, baseType: !452, size: 32, offset: 768)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3007, file: !448, line: 575, baseType: !452, size: 32, offset: 800)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3007, file: !448, line: 576, baseType: !992, size: 64, offset: 832)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3007, file: !448, line: 577, baseType: !452, size: 32, offset: 896)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3007, file: !448, line: 578, baseType: !452, size: 32, offset: 928)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3007, file: !448, line: 579, baseType: !992, size: 64, offset: 960)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3007, file: !448, line: 580, baseType: !452, size: 32, offset: 1024)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3007, file: !448, line: 581, baseType: !452, size: 32, offset: 1056)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3007, file: !448, line: 582, baseType: !452, size: 32, offset: 1088)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3007, file: !448, line: 583, baseType: !452, size: 32, offset: 1120)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3007, file: !448, line: 584, baseType: !452, size: 32, offset: 1152)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3007, file: !448, line: 585, baseType: !452, size: 32, offset: 1184)
!3043 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3044, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3044 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3045 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3046, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3047, retainedTypes: !3063, splitDebugInlining: false, nameTableKind: None)
!3046 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3047 = !{!3048, !3055, !3059}
!3048 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3049, line: 38, baseType: !32, size: 32, elements: !3050)
!3049 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3050 = !{!3051, !3052, !3053, !3054}
!3051 = !DIEnumerator(name: "HAL_OK", value: 0)
!3052 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3053 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3054 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !965, line: 184, baseType: !32, size: 32, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIEnumerator(name: "RESET", value: 0)
!3058 = !DIEnumerator(name: "SET", value: 1)
!3059 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !965, line: 190, baseType: !32, size: 32, elements: !3060)
!3060 = !{!3061, !3062}
!3061 = !DIEnumerator(name: "DISABLE", value: 0)
!3062 = !DIEnumerator(name: "ENABLE", value: 1)
!3063 = !{!3064, !156, !3102, !1590, !143, !213, !117}
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 586, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 550, size: 1216, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3066, file: !448, line: 552, baseType: !452, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3066, file: !448, line: 553, baseType: !452, size: 32, offset: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3066, file: !448, line: 554, baseType: !452, size: 32, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3066, file: !448, line: 555, baseType: !452, size: 32, offset: 96)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3066, file: !448, line: 556, baseType: !452, size: 32, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3066, file: !448, line: 557, baseType: !452, size: 32, offset: 160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3066, file: !448, line: 558, baseType: !452, size: 32, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3066, file: !448, line: 559, baseType: !156, size: 32, offset: 224)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3066, file: !448, line: 560, baseType: !452, size: 32, offset: 256)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3066, file: !448, line: 561, baseType: !452, size: 32, offset: 288)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3066, file: !448, line: 562, baseType: !992, size: 64, offset: 320)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3066, file: !448, line: 563, baseType: !452, size: 32, offset: 384)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3066, file: !448, line: 564, baseType: !452, size: 32, offset: 416)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3066, file: !448, line: 565, baseType: !452, size: 32, offset: 448)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3066, file: !448, line: 566, baseType: !156, size: 32, offset: 480)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3066, file: !448, line: 567, baseType: !452, size: 32, offset: 512)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3066, file: !448, line: 568, baseType: !452, size: 32, offset: 544)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3066, file: !448, line: 569, baseType: !992, size: 64, offset: 576)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3066, file: !448, line: 570, baseType: !452, size: 32, offset: 640)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3066, file: !448, line: 571, baseType: !452, size: 32, offset: 672)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3066, file: !448, line: 572, baseType: !452, size: 32, offset: 704)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3066, file: !448, line: 573, baseType: !156, size: 32, offset: 736)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3066, file: !448, line: 574, baseType: !452, size: 32, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3066, file: !448, line: 575, baseType: !452, size: 32, offset: 800)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3066, file: !448, line: 576, baseType: !992, size: 64, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3066, file: !448, line: 577, baseType: !452, size: 32, offset: 896)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3066, file: !448, line: 578, baseType: !452, size: 32, offset: 928)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3066, file: !448, line: 579, baseType: !992, size: 64, offset: 960)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3066, file: !448, line: 580, baseType: !452, size: 32, offset: 1024)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3066, file: !448, line: 581, baseType: !452, size: 32, offset: 1056)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3066, file: !448, line: 582, baseType: !452, size: 32, offset: 1088)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3066, file: !448, line: 583, baseType: !452, size: 32, offset: 1120)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3066, file: !448, line: 584, baseType: !452, size: 32, offset: 1152)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3066, file: !448, line: 585, baseType: !452, size: 32, offset: 1184)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 544, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 540, size: 64, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3104, file: !448, line: 542, baseType: !452, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3104, file: !448, line: 543, baseType: !452, size: 32, offset: 32)
!3108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3110, retainedTypes: !3111, splitDebugInlining: false, nameTableKind: None)
!3109 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3110 = !{!964}
!3111 = !{!3112, !156, !3120, !3126, !3137}
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3114, file: !656, line: 766, baseType: !452, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3114, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3114, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3114, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 544, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 540, size: 64, elements: !3123)
!3123 = !{!3124, !3125}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3122, file: !448, line: 542, baseType: !452, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3122, file: !448, line: 543, baseType: !452, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 407, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 398, size: 224, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135, !3136}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3128, file: !448, line: 400, baseType: !452, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3128, file: !448, line: 401, baseType: !452, size: 32, offset: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3128, file: !448, line: 402, baseType: !452, size: 32, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3128, file: !448, line: 403, baseType: !452, size: 32, offset: 96)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3128, file: !448, line: 404, baseType: !452, size: 32, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3128, file: !448, line: 405, baseType: !452, size: 32, offset: 160)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3128, file: !448, line: 406, baseType: !452, size: 32, offset: 192)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 586, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 550, size: 1216, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3139, file: !448, line: 552, baseType: !452, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3139, file: !448, line: 553, baseType: !452, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3139, file: !448, line: 554, baseType: !452, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3139, file: !448, line: 555, baseType: !452, size: 32, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3139, file: !448, line: 556, baseType: !452, size: 32, offset: 128)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3139, file: !448, line: 557, baseType: !452, size: 32, offset: 160)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3139, file: !448, line: 558, baseType: !452, size: 32, offset: 192)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3139, file: !448, line: 559, baseType: !156, size: 32, offset: 224)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3139, file: !448, line: 560, baseType: !452, size: 32, offset: 256)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3139, file: !448, line: 561, baseType: !452, size: 32, offset: 288)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3139, file: !448, line: 562, baseType: !992, size: 64, offset: 320)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3139, file: !448, line: 563, baseType: !452, size: 32, offset: 384)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3139, file: !448, line: 564, baseType: !452, size: 32, offset: 416)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3139, file: !448, line: 565, baseType: !452, size: 32, offset: 448)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3139, file: !448, line: 566, baseType: !156, size: 32, offset: 480)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3139, file: !448, line: 567, baseType: !452, size: 32, offset: 512)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3139, file: !448, line: 568, baseType: !452, size: 32, offset: 544)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3139, file: !448, line: 569, baseType: !992, size: 64, offset: 576)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3139, file: !448, line: 570, baseType: !452, size: 32, offset: 640)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3139, file: !448, line: 571, baseType: !452, size: 32, offset: 672)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3139, file: !448, line: 572, baseType: !452, size: 32, offset: 704)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3139, file: !448, line: 573, baseType: !156, size: 32, offset: 736)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3139, file: !448, line: 574, baseType: !452, size: 32, offset: 768)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3139, file: !448, line: 575, baseType: !452, size: 32, offset: 800)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3139, file: !448, line: 576, baseType: !992, size: 64, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3139, file: !448, line: 577, baseType: !452, size: 32, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3139, file: !448, line: 578, baseType: !452, size: 32, offset: 928)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3139, file: !448, line: 579, baseType: !992, size: 64, offset: 960)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3139, file: !448, line: 580, baseType: !452, size: 32, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3139, file: !448, line: 581, baseType: !452, size: 32, offset: 1056)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3139, file: !448, line: 582, baseType: !452, size: 32, offset: 1088)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3139, file: !448, line: 583, baseType: !452, size: 32, offset: 1120)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3139, file: !448, line: 584, baseType: !452, size: 32, offset: 1152)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3139, file: !448, line: 585, baseType: !452, size: 32, offset: 1184)
!3175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3177, splitDebugInlining: false, nameTableKind: None)
!3176 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3177 = !{!117, !315}
!3178 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3179, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3180, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3179 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3180 = !{!3181, !3188, !2698, !30}
!3181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3182, line: 14, baseType: !32, size: 32, elements: !3183)
!3182 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3183 = !{!3184, !3185, !3186, !3187}
!3184 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3185 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3186 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3187 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3182, line: 42, baseType: !32, size: 32, elements: !3189)
!3189 = !{!3190, !3191, !3192, !3193, !3194, !3195}
!3190 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3191 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3192 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3193 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3194 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3195 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3196 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3197, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3197 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3200, retainedTypes: !3211, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3200 = !{!3201, !30}
!3201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !220, line: 5323, baseType: !32, size: 32, elements: !3202)
!3202 = !{!3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210}
!3203 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3204 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3205 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3206 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3207 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3208 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3209 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3210 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3211 = !{!117, !143, !3212, !1277, !3222, !146, !3223, !118, !3224, !426}
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 32)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3214, line: 25, size: 64, elements: !3215)
!3214 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3215 = !{!3216, !3221}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3213, file: !3214, line: 26, baseType: !3217, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !3218)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !3219)
!3219 = !{!3220}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3218, file: !417, line: 36, baseType: !426, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3213, file: !3214, line: 27, baseType: !117, size: 32, offset: 32)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3226)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3227)
!3227 = !{!3228, !3234}
!3228 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !235, line: 38, baseType: !3229, size: 32)
!3229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !235, line: 38, size: 32, elements: !3230)
!3230 = !{!3231, !3233}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3229, file: !235, line: 39, baseType: !3232, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3229, file: !235, line: 40, baseType: !3232, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !235, line: 42, baseType: !3235, size: 32, offset: 32)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !235, line: 42, size: 32, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3235, file: !235, line: 43, baseType: !3232, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3235, file: !235, line: 44, baseType: !3232, size: 32)
!3239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3241, splitDebugInlining: false, nameTableKind: None)
!3240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3241 = !{!22, !117, !118}
!3242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3243, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3243 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3245, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3245 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3246 = !{!"Ubuntu clang version 14.0.6"}
!3247 = !{i32 7, !"Dwarf Version", i32 4}
!3248 = !{i32 2, !"Debug Info Version", i32 3}
!3249 = !{i32 1, !"wchar_size", i32 4}
!3250 = !{i32 1, !"min_enum_size", i32 4}
!3251 = !{i32 1, !"branch-target-enforcement", i32 0}
!3252 = !{i32 1, !"sign-return-address", i32 0}
!3253 = !{i32 1, !"sign-return-address-all", i32 0}
!3254 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3255 = !{i32 7, !"frame-pointer", i32 2}
!3256 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3257, file: !3257, line: 26, type: !365, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !2203)
!3257 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3258 = !DILocation(line: 28, column: 1, scope: !3256)
!3259 = !{i64 2155374487, i64 2155374507, i64 2155374570}
!3260 = !DILocation(line: 29, column: 1, scope: !3256)
!3261 = !{i64 2155374902, i64 2155374922, i64 2155374985}
!3262 = !DILocation(line: 30, column: 1, scope: !3256)
!3263 = !{i64 2155375321, i64 2155375341, i64 2155375404}
!3264 = !DILocation(line: 31, column: 1, scope: !3256)
!3265 = !{i64 2155375740, i64 2155375760, i64 2155375823}
!3266 = !DILocation(line: 33, column: 1, scope: !3256)
!3267 = !{i64 2155376032, i64 2155376052, i64 2155376115}
!3268 = !DILocation(line: 35, column: 1, scope: !3256)
!3269 = !{i64 2155376357, i64 2155376377, i64 2155376440}
!3270 = !DILocation(line: 50, column: 1, scope: !3256)
!3271 = !{i64 2155376784, i64 2155376804, i64 2155376867}
!3272 = !DILocation(line: 54, column: 1, scope: !3256)
!3273 = !{i64 2155377223, i64 2155377243, i64 2155377306}
!3274 = !DILocation(line: 61, column: 1, scope: !3256)
!3275 = !{i64 2155377540, i64 2155377560, i64 2155377623}
!3276 = !DILocation(line: 63, column: 1, scope: !3256)
!3277 = !{i64 2155377920, i64 2155377940, i64 2155378003}
!3278 = !DILocation(line: 64, column: 1, scope: !3256)
!3279 = !{i64 2155378442, i64 2155378462, i64 2155378525}
!3280 = !DILocation(line: 65, column: 1, scope: !3256)
!3281 = !{i64 2155378940, i64 2155378960, i64 2155379023}
!3282 = !DILocation(line: 66, column: 1, scope: !3256)
!3283 = !{i64 2155379422, i64 2155379442, i64 2155379505}
!3284 = !DILocation(line: 67, column: 1, scope: !3256)
!3285 = !{i64 2155379929, i64 2155379949, i64 2155380012}
!3286 = !DILocation(line: 68, column: 1, scope: !3256)
!3287 = !{i64 2155380417, i64 2155380437, i64 2155380500}
!3288 = !DILocation(line: 70, column: 1, scope: !3256)
!3289 = !{i64 2155380885, i64 2155380905, i64 2155380968}
!3290 = !DILocation(line: 71, column: 1, scope: !3256)
!3291 = !{i64 2155381327, i64 2155381347, i64 2155381410}
!3292 = !DILocation(line: 72, column: 1, scope: !3256)
!3293 = !{i64 2155381785, i64 2155381805, i64 2155381868}
!3294 = !DILocation(line: 79, column: 1, scope: !3256)
!3295 = !{i64 2155382239, i64 2155382259, i64 2155382322}
!3296 = !DILocation(line: 80, column: 1, scope: !3256)
!3297 = !{i64 2155382750, i64 2155382770, i64 2155382833}
!3298 = !DILocation(line: 82, column: 1, scope: !3256)
!3299 = !{i64 2155383241, i64 2155383261, i64 2155383324}
!3300 = !DILocation(line: 97, column: 1, scope: !3256)
!3301 = !{i64 2155383578, i64 2155383598, i64 2155383661}
!3302 = !DILocation(line: 99, column: 1, scope: !3256)
!3303 = !{i64 2155383796, i64 2155383816, i64 2155383879}
!3304 = !DILocation(line: 102, column: 1, scope: !3256)
!3305 = !{i64 2155388114, i64 2155388134, i64 2155388197}
!3306 = !DILocation(line: 105, column: 1, scope: !3256)
!3307 = !{i64 2155388354, i64 2155388374, i64 2155388437}
!3308 = !DILocation(line: 115, column: 1, scope: !3256)
!3309 = !{i64 2155388693, i64 2155388713, i64 2155388776}
!3310 = !DILocation(line: 118, column: 1, scope: !3256)
!3311 = !{i64 2155389037, i64 2155389057, i64 2155389120}
!3312 = !DILocation(line: 32, column: 1, scope: !3313)
!3313 = !DILexicalBlockFile(scope: !3256, file: !3314, discriminator: 0)
!3314 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3315 = !{i64 2155389393, i64 2155389413, i64 2155389476}
!3316 = !DILocation(line: 33, column: 1, scope: !3313)
!3317 = !{i64 2155389905, i64 2155389925, i64 2155389988}
!3318 = !DILocation(line: 53, column: 1, scope: !3313)
!3319 = !{i64 2155390413, i64 2155390433, i64 2155390496}
!3320 = !DILocation(line: 54, column: 1, scope: !3313)
!3321 = !{i64 2155390831, i64 2155390851, i64 2155390914}
!3322 = !DILocation(line: 55, column: 1, scope: !3313)
!3323 = !{i64 2155391249, i64 2155391269, i64 2155391332}
!3324 = !DILocation(line: 56, column: 1, scope: !3313)
!3325 = !{i64 2155391667, i64 2155391687, i64 2155391750}
!3326 = !DILocation(line: 57, column: 1, scope: !3313)
!3327 = !{i64 2155392085, i64 2155392105, i64 2155392168}
!3328 = !DILocation(line: 58, column: 1, scope: !3313)
!3329 = !{i64 2155392503, i64 2155392523, i64 2155392586}
!3330 = !DILocation(line: 59, column: 1, scope: !3313)
!3331 = !{i64 2155392921, i64 2155392941, i64 2155393004}
!3332 = !DILocation(line: 60, column: 1, scope: !3313)
!3333 = !{i64 2155393345, i64 2155393365, i64 2155393428}
!3334 = !DILocation(line: 61, column: 1, scope: !3313)
!3335 = !{i64 2155393662, i64 2155393682, i64 2155393745}
!3336 = !DILocation(line: 70, column: 1, scope: !3313)
!3337 = !{i64 2155393891, i64 2155393911, i64 2155393974}
!3338 = !DILocation(line: 72, column: 1, scope: !3313)
!3339 = !{i64 2155394223, i64 2155394243, i64 2155394306}
!3340 = !DILocation(line: 73, column: 1, scope: !3313)
!3341 = !{i64 2155394673, i64 2155394693, i64 2155394756}
!3342 = !DILocation(line: 74, column: 1, scope: !3313)
!3343 = !{i64 2155395123, i64 2155395143, i64 2155395206}
!3344 = !DILocation(line: 75, column: 1, scope: !3313)
!3345 = !{i64 2155395573, i64 2155395593, i64 2155395656}
!3346 = !DILocation(line: 76, column: 1, scope: !3313)
!3347 = !{i64 2155396023, i64 2155396043, i64 2155396106}
!3348 = !DILocation(line: 77, column: 1, scope: !3313)
!3349 = !{i64 2155396473, i64 2155396493, i64 2155396556}
!3350 = !DILocation(line: 78, column: 1, scope: !3313)
!3351 = !{i64 2155396923, i64 2155396943, i64 2155397006}
!3352 = !DILocation(line: 79, column: 1, scope: !3313)
!3353 = !{i64 2155397373, i64 2155397393, i64 2155397456}
!3354 = !DILocation(line: 80, column: 1, scope: !3313)
!3355 = !{i64 2155401887, i64 2155401907, i64 2155401970}
!3356 = !DILocation(line: 84, column: 1, scope: !3313)
!3357 = !{i64 2155402219, i64 2155402239, i64 2155402302}
!3358 = !DILocation(line: 91, column: 1, scope: !3313)
!3359 = !{i64 2155402616, i64 2155402636, i64 2155402699}
!3360 = !DILocation(line: 93, column: 1, scope: !3313)
!3361 = !{i64 2155402983, i64 2155403003, i64 2155403066}
!3362 = !DILocation(line: 106, column: 1, scope: !3313)
!3363 = !{i64 2155403253, i64 2155403273, i64 2155403336}
!3364 = !DILocation(line: 11, column: 1, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !3256, file: !3366, discriminator: 0)
!3366 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3367 = distinct !DISubprogram(name: "blink0", scope: !218, file: !218, line: 90, type: !365, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2203)
!3368 = !DILocation(line: 92, column: 2, scope: !3367)
!3369 = !DILocation(line: 93, column: 1, scope: !3367)
!3370 = distinct !DISubprogram(name: "blink", scope: !218, file: !218, line: 54, type: !3371, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3374)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{null, !3373, !156, !156}
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!3374 = !{!3375, !3376, !3377, !3378, !3381, !3382, !3383, !3390, !3391}
!3375 = !DILocalVariable(name: "led", arg: 1, scope: !3370, file: !218, line: 54, type: !3373)
!3376 = !DILocalVariable(name: "sleep_ms", arg: 2, scope: !3370, file: !218, line: 54, type: !156)
!3377 = !DILocalVariable(name: "id", arg: 3, scope: !3370, file: !218, line: 54, type: !156)
!3378 = !DILocalVariable(name: "spec", scope: !3370, file: !218, line: 56, type: !3379)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!3381 = !DILocalVariable(name: "cnt", scope: !3370, file: !218, line: 57, type: !118)
!3382 = !DILocalVariable(name: "ret", scope: !3370, file: !218, line: 58, type: !118)
!3383 = !DILocalVariable(name: "tx_data", scope: !3384, file: !218, line: 75, type: !3385)
!3384 = distinct !DILexicalBlock(scope: !3370, file: !218, line: 72, column: 12)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "printk_data_t", file: !218, line: 31, size: 96, elements: !3386)
!3386 = !{!3387, !3388, !3389}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reserved", scope: !3385, file: !218, line: 32, baseType: !117, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3385, file: !218, line: 33, baseType: !156, size: 32, offset: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3385, file: !218, line: 34, baseType: !156, size: 32, offset: 64)
!3390 = !DILocalVariable(name: "size", scope: !3384, file: !218, line: 77, type: !315)
!3391 = !DILocalVariable(name: "mem_ptr", scope: !3384, file: !218, line: 78, type: !1277)
!3392 = !DILocation(line: 0, scope: !3370)
!3393 = !DILocation(line: 60, column: 29, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3370, file: !218, line: 60, column: 6)
!3395 = !DILocation(line: 60, column: 7, scope: !3394)
!3396 = !DILocation(line: 60, column: 6, scope: !3370)
!3397 = !DILocation(line: 61, column: 51, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3394, file: !218, line: 60, column: 36)
!3399 = !DILocation(line: 61, column: 57, scope: !3398)
!3400 = !DILocation(line: 61, column: 3, scope: !3398)
!3401 = !DILocation(line: 62, column: 3, scope: !3398)
!3402 = !DILocation(line: 56, column: 42, scope: !3370)
!3403 = !DILocation(line: 65, column: 8, scope: !3370)
!3404 = !DILocation(line: 66, column: 10, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3370, file: !218, line: 66, column: 6)
!3406 = !DILocation(line: 66, column: 6, scope: !3370)
!3407 = !DILocation(line: 73, column: 22, scope: !3384)
!3408 = !DILocation(line: 73, column: 34, scope: !3384)
!3409 = !DILocation(line: 73, column: 3, scope: !3384)
!3410 = !DILocation(line: 75, column: 3, scope: !3384)
!3411 = !DILocation(line: 75, column: 24, scope: !3384)
!3412 = !DILocation(line: 75, column: 34, scope: !3384)
!3413 = !DILocation(line: 0, scope: !3384)
!3414 = !DILocation(line: 78, column: 19, scope: !3384)
!3415 = !DILocation(line: 79, column: 3, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !218, line: 79, column: 3)
!3417 = distinct !DILexicalBlock(scope: !3384, file: !218, line: 79, column: 3)
!3418 = !DILocation(line: 79, column: 3, scope: !3417)
!3419 = !DILocation(line: 68, column: 15, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3405, file: !218, line: 66, column: 16)
!3421 = !DILocation(line: 68, column: 9, scope: !3420)
!3422 = !DILocation(line: 68, column: 25, scope: !3420)
!3423 = !DILocation(line: 68, column: 20, scope: !3420)
!3424 = !DILocation(line: 67, column: 3, scope: !3420)
!3425 = !DILocation(line: 69, column: 3, scope: !3420)
!3426 = !DILocation(line: 79, column: 3, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3416, file: !218, line: 79, column: 3)
!3428 = !DILocation(line: 81, column: 3, scope: !3384)
!3429 = !DILocation(line: 83, column: 3, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3384, file: !218, line: 83, column: 3)
!3431 = !DILocation(line: 85, column: 3, scope: !3384)
!3432 = !DILocation(line: 86, column: 6, scope: !3384)
!3433 = !DILocation(line: 87, column: 2, scope: !3370)
!3434 = !DILocation(line: 73, column: 43, scope: !3384)
!3435 = distinct !{!3435, !3436, !3433}
!3436 = !DILocation(line: 72, column: 2, scope: !3370)
!3437 = !DILocation(line: 88, column: 1, scope: !3370)
!3438 = distinct !DISubprogram(name: "device_is_ready", scope: !3439, file: !3439, line: 47, type: !3440, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3442)
!3439 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!146, !127}
!3442 = !{!3443}
!3443 = !DILocalVariable(name: "dev", arg: 1, scope: !3438, file: !3439, line: 47, type: !127)
!3444 = !DILocation(line: 0, scope: !3438)
!3445 = !DILocation(line: 55, column: 2, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3438, file: !3439, line: 55, column: 2)
!3447 = !{i64 2155269014}
!3448 = !DILocation(line: 56, column: 9, scope: !3438)
!3449 = !DILocation(line: 56, column: 2, scope: !3438)
!3450 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !102, file: !102, line: 731, type: !3451, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3453)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!118, !3379, !155}
!3453 = !{!3454, !3455}
!3454 = !DILocalVariable(name: "spec", arg: 1, scope: !3450, file: !102, line: 731, type: !3379)
!3455 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3450, file: !102, line: 732, type: !155)
!3456 = !DILocation(line: 0, scope: !3450)
!3457 = !DILocation(line: 734, column: 34, scope: !3450)
!3458 = !DILocation(line: 735, column: 13, scope: !3450)
!3459 = !DILocation(line: 736, column: 13, scope: !3450)
!3460 = !DILocation(line: 736, column: 7, scope: !3450)
!3461 = !DILocation(line: 736, column: 22, scope: !3450)
!3462 = !DILocation(line: 734, column: 9, scope: !3450)
!3463 = !DILocation(line: 734, column: 2, scope: !3450)
!3464 = distinct !DISubprogram(name: "gpio_pin_set", scope: !102, file: !102, line: 1287, type: !3465, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3467)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!118, !127, !154, !118}
!3467 = !{!3468, !3469, !3470, !3471, !3473}
!3468 = !DILocalVariable(name: "port", arg: 1, scope: !3464, file: !102, line: 1287, type: !127)
!3469 = !DILocalVariable(name: "pin", arg: 2, scope: !3464, file: !102, line: 1287, type: !154)
!3470 = !DILocalVariable(name: "value", arg: 3, scope: !3464, file: !102, line: 1288, type: !118)
!3471 = !DILocalVariable(name: "cfg", scope: !3464, file: !102, line: 1290, type: !3472)
!3472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!3473 = !DILocalVariable(name: "data", scope: !3464, file: !102, line: 1292, type: !3474)
!3474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3475 = !DILocation(line: 0, scope: !3464)
!3476 = !DILocation(line: 1291, column: 44, scope: !3464)
!3477 = !DILocation(line: 1295, column: 2, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !102, line: 1295, column: 2)
!3479 = distinct !DILexicalBlock(scope: !3464, file: !102, line: 1295, column: 2)
!3480 = !DILocation(line: 1295, column: 2, scope: !3479)
!3481 = !DILocation(line: 1295, column: 2, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !102, line: 1295, column: 2)
!3483 = !DILocation(line: 1293, column: 43, scope: !3464)
!3484 = !DILocation(line: 1298, column: 12, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3464, file: !102, line: 1298, column: 6)
!3486 = !DILocation(line: 1298, column: 19, scope: !3485)
!3487 = !DILocation(line: 1298, column: 6, scope: !3464)
!3488 = !DILocation(line: 1302, column: 9, scope: !3464)
!3489 = !DILocation(line: 1302, column: 2, scope: !3464)
!3490 = distinct !DISubprogram(name: "k_msleep", scope: !220, file: !220, line: 439, type: !3491, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3493)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!362, !362}
!3493 = !{!3494}
!3494 = !DILocalVariable(name: "ms", arg: 1, scope: !3490, file: !220, line: 439, type: !362)
!3495 = !DILocation(line: 0, scope: !3490)
!3496 = !DILocation(line: 441, column: 17, scope: !3490)
!3497 = !DILocation(line: 441, column: 9, scope: !3490)
!3498 = !DILocation(line: 441, column: 2, scope: !3490)
!3499 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3500, file: !3500, line: 403, type: !3501, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3503)
!3500 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!213, !213}
!3503 = !{!3504}
!3504 = !DILocalVariable(name: "t", arg: 1, scope: !3499, file: !3500, line: 403, type: !213)
!3505 = !DILocation(line: 0, scope: !3499)
!3506 = !DILocalVariable(name: "t", arg: 1, scope: !3507, file: !3500, line: 102, type: !213)
!3507 = distinct !DISubprogram(name: "z_tmcvt", scope: !3500, file: !3500, line: 102, type: !3508, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3510)
!3508 = !DISubroutineType(types: !3509)
!3509 = !{!213, !213, !156, !156, !146, !146, !146, !146}
!3510 = !{!3506, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520}
!3511 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3507, file: !3500, line: 102, type: !156)
!3512 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3507, file: !3500, line: 103, type: !156)
!3513 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3507, file: !3500, line: 103, type: !146)
!3514 = !DILocalVariable(name: "result32", arg: 5, scope: !3507, file: !3500, line: 104, type: !146)
!3515 = !DILocalVariable(name: "round_up", arg: 6, scope: !3507, file: !3500, line: 104, type: !146)
!3516 = !DILocalVariable(name: "round_off", arg: 7, scope: !3507, file: !3500, line: 105, type: !146)
!3517 = !DILocalVariable(name: "mul_ratio", scope: !3507, file: !3500, line: 107, type: !146)
!3518 = !DILocalVariable(name: "div_ratio", scope: !3507, file: !3500, line: 109, type: !146)
!3519 = !DILocalVariable(name: "off", scope: !3507, file: !3500, line: 116, type: !213)
!3520 = !DILocalVariable(name: "rdivisor", scope: !3521, file: !3500, line: 119, type: !156)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !3500, line: 118, column: 18)
!3522 = distinct !DILexicalBlock(scope: !3507, file: !3500, line: 118, column: 6)
!3523 = !DILocation(line: 0, scope: !3507, inlinedAt: !3524)
!3524 = distinct !DILocation(line: 406, column: 9, scope: !3499)
!3525 = !DILocation(line: 145, column: 13, scope: !3526, inlinedAt: !3524)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !3500, line: 144, column: 10)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !3500, line: 142, column: 7)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !3500, line: 141, column: 24)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3500, line: 141, column: 13)
!3530 = distinct !DILexicalBlock(scope: !3507, file: !3500, line: 134, column: 6)
!3531 = !DILocation(line: 406, column: 2, scope: !3499)
!3532 = distinct !DISubprogram(name: "k_sleep", scope: !3533, file: !3533, line: 91, type: !3534, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3540)
!3533 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!362, !3536}
!3536 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !3537)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !3538)
!3538 = !{!3539}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3537, file: !114, line: 66, baseType: !113, size: 64)
!3540 = !{!3541}
!3541 = !DILocalVariable(name: "timeout", arg: 1, scope: !3532, file: !3533, line: 91, type: !3536)
!3542 = !DILocation(line: 0, scope: !3532)
!3543 = !DILocation(line: 99, column: 2, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3532, file: !3533, line: 99, column: 2)
!3545 = !{i64 2155065602}
!3546 = !DILocation(line: 100, column: 9, scope: !3532)
!3547 = !DILocation(line: 100, column: 2, scope: !3532)
!3548 = distinct !DISubprogram(name: "gpio_pin_set_raw", scope: !102, file: !102, line: 1247, type: !3465, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3549)
!3549 = !{!3550, !3551, !3552, !3553, !3554}
!3550 = !DILocalVariable(name: "port", arg: 1, scope: !3548, file: !102, line: 1247, type: !127)
!3551 = !DILocalVariable(name: "pin", arg: 2, scope: !3548, file: !102, line: 1247, type: !154)
!3552 = !DILocalVariable(name: "value", arg: 3, scope: !3548, file: !102, line: 1248, type: !118)
!3553 = !DILocalVariable(name: "cfg", scope: !3548, file: !102, line: 1250, type: !3472)
!3554 = !DILocalVariable(name: "ret", scope: !3548, file: !102, line: 1252, type: !118)
!3555 = !DILocation(line: 0, scope: !3548)
!3556 = !DILocation(line: 1251, column: 44, scope: !3548)
!3557 = !DILocation(line: 1254, column: 2, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !102, line: 1254, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3548, file: !102, line: 1254, column: 2)
!3560 = !DILocation(line: 1254, column: 2, scope: !3559)
!3561 = !DILocation(line: 1254, column: 2, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3558, file: !102, line: 1254, column: 2)
!3563 = !DILocation(line: 1257, column: 12, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3548, file: !102, line: 1257, column: 6)
!3565 = !DILocation(line: 1257, column: 6, scope: !3548)
!3566 = !DILocation(line: 1258, column: 9, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3564, file: !102, line: 1257, column: 18)
!3568 = !DILocation(line: 1259, column: 2, scope: !3567)
!3569 = !DILocation(line: 1260, column: 9, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3564, file: !102, line: 1259, column: 9)
!3571 = !DILocation(line: 1263, column: 2, scope: !3548)
!3572 = distinct !DISubprogram(name: "gpio_port_set_bits_raw", scope: !3573, file: !3573, line: 174, type: !170, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3574)
!3573 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!3574 = !{!3575, !3576}
!3575 = !DILocalVariable(name: "port", arg: 1, scope: !3572, file: !3573, line: 174, type: !127)
!3576 = !DILocalVariable(name: "pins", arg: 2, scope: !3572, file: !3573, line: 174, type: !167)
!3577 = !DILocation(line: 0, scope: !3572)
!3578 = !DILocation(line: 183, column: 2, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3572, file: !3573, line: 183, column: 2)
!3580 = !{i64 2155380123}
!3581 = !DILocation(line: 184, column: 9, scope: !3572)
!3582 = !DILocation(line: 184, column: 2, scope: !3572)
!3583 = distinct !DISubprogram(name: "gpio_port_clear_bits_raw", scope: !3573, file: !3573, line: 198, type: !170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3584)
!3584 = !{!3585, !3586}
!3585 = !DILocalVariable(name: "port", arg: 1, scope: !3583, file: !3573, line: 198, type: !127)
!3586 = !DILocalVariable(name: "pins", arg: 2, scope: !3583, file: !3573, line: 198, type: !167)
!3587 = !DILocation(line: 0, scope: !3583)
!3588 = !DILocation(line: 207, column: 2, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3583, file: !3573, line: 207, column: 2)
!3590 = !{i64 2155380191}
!3591 = !DILocation(line: 208, column: 9, scope: !3583)
!3592 = !DILocation(line: 208, column: 2, scope: !3583)
!3593 = distinct !DISubprogram(name: "z_impl_gpio_port_clear_bits_raw", scope: !102, file: !102, line: 1060, type: !170, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3594)
!3594 = !{!3595, !3596, !3597}
!3595 = !DILocalVariable(name: "port", arg: 1, scope: !3593, file: !102, line: 1060, type: !127)
!3596 = !DILocalVariable(name: "pins", arg: 2, scope: !3593, file: !102, line: 1061, type: !167)
!3597 = !DILocalVariable(name: "api", scope: !3593, file: !102, line: 1063, type: !119)
!3598 = !DILocation(line: 0, scope: !3593)
!3599 = !DILocation(line: 1064, column: 41, scope: !3593)
!3600 = !DILocation(line: 1066, column: 14, scope: !3593)
!3601 = !DILocation(line: 1066, column: 9, scope: !3593)
!3602 = !DILocation(line: 1066, column: 2, scope: !3593)
!3603 = distinct !DISubprogram(name: "z_impl_gpio_port_set_bits_raw", scope: !102, file: !102, line: 1022, type: !170, scopeLine: 1024, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3604)
!3604 = !{!3605, !3606, !3607}
!3605 = !DILocalVariable(name: "port", arg: 1, scope: !3603, file: !102, line: 1022, type: !127)
!3606 = !DILocalVariable(name: "pins", arg: 2, scope: !3603, file: !102, line: 1023, type: !167)
!3607 = !DILocalVariable(name: "api", scope: !3603, file: !102, line: 1025, type: !119)
!3608 = !DILocation(line: 0, scope: !3603)
!3609 = !DILocation(line: 1026, column: 41, scope: !3603)
!3610 = !DILocation(line: 1028, column: 14, scope: !3603)
!3611 = !DILocation(line: 1028, column: 9, scope: !3603)
!3612 = !DILocation(line: 1028, column: 2, scope: !3603)
!3613 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3573, file: !3573, line: 49, type: !125, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3614)
!3614 = !{!3615, !3616, !3617}
!3615 = !DILocalVariable(name: "port", arg: 1, scope: !3613, file: !3573, line: 49, type: !127)
!3616 = !DILocalVariable(name: "pin", arg: 2, scope: !3613, file: !3573, line: 49, type: !154)
!3617 = !DILocalVariable(name: "flags", arg: 3, scope: !3613, file: !3573, line: 49, type: !155)
!3618 = !DILocation(line: 0, scope: !3613)
!3619 = !DILocation(line: 59, column: 2, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3613, file: !3573, line: 59, column: 2)
!3621 = !{i64 2155379783}
!3622 = !DILocation(line: 60, column: 9, scope: !3613)
!3623 = !DILocation(line: 60, column: 2, scope: !3613)
!3624 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !102, file: !102, line: 667, type: !125, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3625)
!3625 = !{!3626, !3627, !3628, !3629, !3630, !3631}
!3626 = !DILocalVariable(name: "port", arg: 1, scope: !3624, file: !102, line: 667, type: !127)
!3627 = !DILocalVariable(name: "pin", arg: 2, scope: !3624, file: !102, line: 668, type: !154)
!3628 = !DILocalVariable(name: "flags", arg: 3, scope: !3624, file: !102, line: 669, type: !155)
!3629 = !DILocalVariable(name: "api", scope: !3624, file: !102, line: 671, type: !119)
!3630 = !DILocalVariable(name: "cfg", scope: !3624, file: !102, line: 673, type: !3472)
!3631 = !DILocalVariable(name: "data", scope: !3624, file: !102, line: 675, type: !212)
!3632 = !DILocation(line: 0, scope: !3624)
!3633 = !DILocation(line: 672, column: 41, scope: !3624)
!3634 = !DILocation(line: 674, column: 44, scope: !3624)
!3635 = !DILocation(line: 676, column: 36, scope: !3624)
!3636 = !DILocation(line: 678, column: 2, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !102, line: 678, column: 2)
!3638 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 678, column: 2)
!3639 = !DILocation(line: 678, column: 2, scope: !3638)
!3640 = !DILocation(line: 678, column: 2, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3637, file: !102, line: 678, column: 2)
!3642 = !DILocation(line: 681, column: 2, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !102, line: 681, column: 2)
!3644 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 681, column: 2)
!3645 = !DILocation(line: 681, column: 2, scope: !3644)
!3646 = !DILocation(line: 681, column: 2, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3643, file: !102, line: 681, column: 2)
!3648 = !DILocation(line: 685, column: 2, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !102, line: 685, column: 2)
!3650 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 685, column: 2)
!3651 = !DILocation(line: 685, column: 2, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !102, line: 685, column: 2)
!3653 = !DILocation(line: 689, column: 2, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !102, line: 689, column: 2)
!3655 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 689, column: 2)
!3656 = !DILocation(line: 689, column: 2, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3654, file: !102, line: 689, column: 2)
!3658 = !DILocation(line: 692, column: 2, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !102, line: 692, column: 2)
!3660 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 692, column: 2)
!3661 = !DILocation(line: 692, column: 2, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3659, file: !102, line: 692, column: 2)
!3663 = !DILocation(line: 696, column: 2, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !102, line: 696, column: 2)
!3665 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 696, column: 2)
!3666 = !DILocation(line: 696, column: 2, scope: !3665)
!3667 = !DILocation(line: 696, column: 2, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3664, file: !102, line: 696, column: 2)
!3669 = !DILocation(line: 701, column: 6, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 700, column: 6)
!3671 = !DILocation(line: 708, column: 2, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !102, line: 708, column: 2)
!3673 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 708, column: 2)
!3674 = !DILocation(line: 708, column: 2, scope: !3673)
!3675 = !DILocation(line: 708, column: 2, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3672, file: !102, line: 708, column: 2)
!3677 = !DILocation(line: 711, column: 13, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3624, file: !102, line: 711, column: 6)
!3679 = !DILocation(line: 711, column: 32, scope: !3678)
!3680 = !DILocation(line: 711, column: 6, scope: !3624)
!3681 = !DILocation(line: 712, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3678, file: !102, line: 711, column: 38)
!3683 = !DILocation(line: 712, column: 16, scope: !3682)
!3684 = !DILocation(line: 713, column: 2, scope: !3682)
!3685 = !DILocation(line: 714, column: 19, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3678, file: !102, line: 713, column: 9)
!3687 = !DILocation(line: 714, column: 9, scope: !3686)
!3688 = !DILocation(line: 714, column: 16, scope: !3686)
!3689 = !DILocation(line: 706, column: 8, scope: !3624)
!3690 = !DILocation(line: 717, column: 14, scope: !3624)
!3691 = !DILocation(line: 717, column: 9, scope: !3624)
!3692 = !DILocation(line: 717, column: 2, scope: !3624)
!3693 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !3440, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3694)
!3694 = !{!3695}
!3695 = !DILocalVariable(name: "dev", arg: 1, scope: !3693, file: !130, line: 730, type: !127)
!3696 = !DILocation(line: 0, scope: !3693)
!3697 = !DILocation(line: 732, column: 9, scope: !3693)
!3698 = !DILocation(line: 732, column: 2, scope: !3693)
!3699 = distinct !DISubprogram(name: "blink1", scope: !218, file: !218, line: 95, type: !365, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2203)
!3700 = !DILocation(line: 97, column: 2, scope: !3699)
!3701 = !DILocation(line: 98, column: 1, scope: !3699)
!3702 = distinct !DISubprogram(name: "uart_out", scope: !218, file: !218, line: 100, type: !365, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3703)
!3703 = !{!3704, !3707}
!3704 = !DILocalVariable(name: "rx_data", scope: !3705, file: !218, line: 103, type: !3706)
!3705 = distinct !DILexicalBlock(scope: !3702, file: !218, line: 102, column: 12)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 32)
!3707 = !DILocalVariable(name: "ret", scope: !3708, file: !218, line: 103, type: !117)
!3708 = distinct !DILexicalBlock(scope: !3705, file: !218, line: 103, column: 35)
!3709 = !DILocation(line: 102, column: 2, scope: !3702)
!3710 = !DILocation(line: 103, column: 35, scope: !3708)
!3711 = !DILocation(line: 0, scope: !3708)
!3712 = !DILocation(line: 0, scope: !3705)
!3713 = !DILocation(line: 106, column: 19, scope: !3705)
!3714 = !DILocation(line: 106, column: 33, scope: !3705)
!3715 = !DILocation(line: 105, column: 3, scope: !3705)
!3716 = !DILocation(line: 107, column: 3, scope: !3705)
!3717 = distinct !{!3717, !3709, !3718}
!3718 = !DILocation(line: 108, column: 2, scope: !3702)
!3719 = distinct !DISubprogram(name: "k_queue_get", scope: !3533, file: !3533, line: 649, type: !3720, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3723)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!117, !3722, !3536}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 32)
!3723 = !{!3724, !3725}
!3724 = !DILocalVariable(name: "queue", arg: 1, scope: !3719, file: !3533, line: 649, type: !3722)
!3725 = !DILocalVariable(name: "timeout", arg: 2, scope: !3719, file: !3533, line: 649, type: !3536)
!3726 = !DILocation(line: 0, scope: !3719)
!3727 = !DILocation(line: 658, column: 2, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3719, file: !3533, line: 658, column: 2)
!3729 = !{i64 2155067846}
!3730 = !DILocation(line: 659, column: 9, scope: !3719)
!3731 = !DILocation(line: 659, column: 2, scope: !3719)
!3732 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !437, file: !437, line: 45, type: !439, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3733)
!3733 = !{!3734}
!3734 = !DILocalVariable(name: "c", arg: 1, scope: !3732, file: !437, line: 45, type: !118)
!3735 = !DILocation(line: 0, scope: !3732)
!3736 = !DILocation(line: 50, column: 2, scope: !3732)
!3737 = distinct !DISubprogram(name: "__printk_hook_install", scope: !437, file: !437, line: 63, type: !3738, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3740)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{null, !438}
!3740 = !{!3741}
!3741 = !DILocalVariable(name: "fn", arg: 1, scope: !3737, file: !437, line: 63, type: !438)
!3742 = !DILocation(line: 0, scope: !3737)
!3743 = !DILocation(line: 65, column: 12, scope: !3737)
!3744 = !DILocation(line: 66, column: 1, scope: !3737)
!3745 = distinct !DISubprogram(name: "__printk_get_hook", scope: !437, file: !437, line: 76, type: !3746, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !2203)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!117}
!3748 = !DILocation(line: 78, column: 9, scope: !3745)
!3749 = !DILocation(line: 78, column: 2, scope: !3745)
!3750 = distinct !DISubprogram(name: "vprintk", scope: !437, file: !437, line: 113, type: !3751, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3760)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !133, !3753}
!3753 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3754, line: 99, baseType: !3755)
!3754 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3754, line: 40, baseType: !3756)
!3756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !437, baseType: !3757)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3758)
!3758 = !{!3759}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3757, file: !437, line: 79, baseType: !117, size: 32)
!3760 = !{!3761, !3762, !3763}
!3761 = !DILocalVariable(name: "fmt", arg: 1, scope: !3750, file: !437, line: 113, type: !133)
!3762 = !DILocalVariable(name: "ap", arg: 2, scope: !3750, file: !437, line: 113, type: !3753)
!3763 = !DILocalVariable(name: "ctx", scope: !3764, file: !437, line: 121, type: !3766)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !437, line: 120, column: 27)
!3765 = distinct !DILexicalBlock(scope: !3750, file: !437, line: 120, column: 6)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !437, line: 81, size: 32, elements: !3767)
!3767 = !{!3768, !3769}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3766, file: !437, line: 85, baseType: !32, size: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3766, file: !437, line: 86, baseType: !3770, offset: 32)
!3770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2650)
!3771 = !DILocation(line: 0, scope: !3750)
!3772 = !DILocation(line: 148, column: 3, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3765, file: !437, line: 138, column: 9)
!3774 = !DILocation(line: 155, column: 1, scope: !3750)
!3775 = distinct !DISubprogram(name: "char_out", scope: !437, file: !437, line: 107, type: !3776, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3778)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!118, !118, !117}
!3778 = !{!3779, !3780}
!3779 = !DILocalVariable(name: "c", arg: 1, scope: !3775, file: !437, line: 107, type: !118)
!3780 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3775, file: !437, line: 107, type: !117)
!3781 = !DILocation(line: 0, scope: !3775)
!3782 = !DILocation(line: 110, column: 9, scope: !3775)
!3783 = !DILocation(line: 110, column: 2, scope: !3775)
!3784 = distinct !DISubprogram(name: "cbvprintf", scope: !3785, file: !3785, line: 739, type: !3786, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3792)
!3785 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!118, !3788, !117, !133, !3753}
!3788 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3785, line: 297, baseType: !3789)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 32)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!118, null}
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DILocalVariable(name: "out", arg: 1, scope: !3784, file: !3785, line: 739, type: !3788)
!3794 = !DILocalVariable(name: "ctx", arg: 2, scope: !3784, file: !3785, line: 739, type: !117)
!3795 = !DILocalVariable(name: "format", arg: 3, scope: !3784, file: !3785, line: 739, type: !133)
!3796 = !DILocalVariable(name: "ap", arg: 4, scope: !3784, file: !3785, line: 739, type: !3753)
!3797 = !DILocation(line: 0, scope: !3784)
!3798 = !DILocation(line: 741, column: 9, scope: !3784)
!3799 = !DILocation(line: 741, column: 2, scope: !3784)
!3800 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !437, file: !437, line: 157, type: !3801, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3803)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !1277, !315}
!3803 = !{!3804, !3805, !3806}
!3804 = !DILocalVariable(name: "c", arg: 1, scope: !3800, file: !437, line: 157, type: !1277)
!3805 = !DILocalVariable(name: "n", arg: 2, scope: !3800, file: !437, line: 157, type: !315)
!3806 = !DILocalVariable(name: "i", scope: !3800, file: !437, line: 159, type: !315)
!3807 = !DILocation(line: 0, scope: !3800)
!3808 = !DILocation(line: 164, column: 16, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !437, line: 164, column: 2)
!3810 = distinct !DILexicalBlock(scope: !3800, file: !437, line: 164, column: 2)
!3811 = !DILocation(line: 164, column: 2, scope: !3810)
!3812 = !DILocation(line: 165, column: 3, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3809, file: !437, line: 164, column: 26)
!3814 = !DILocation(line: 165, column: 13, scope: !3813)
!3815 = !DILocation(line: 164, column: 22, scope: !3809)
!3816 = distinct !{!3816, !3811, !3817}
!3817 = !DILocation(line: 166, column: 2, scope: !3810)
!3818 = !DILocation(line: 171, column: 1, scope: !3800)
!3819 = distinct !DISubprogram(name: "printk", scope: !437, file: !437, line: 203, type: !3820, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3822)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{null, !133, null}
!3822 = !{!3823, !3824}
!3823 = !DILocalVariable(name: "fmt", arg: 1, scope: !3819, file: !437, line: 203, type: !133)
!3824 = !DILocalVariable(name: "ap", scope: !3819, file: !437, line: 205, type: !3753)
!3825 = !DILocation(line: 0, scope: !3819)
!3826 = !DILocation(line: 205, column: 2, scope: !3819)
!3827 = !DILocation(line: 205, column: 10, scope: !3819)
!3828 = !DILocation(line: 207, column: 2, scope: !3819)
!3829 = !DILocation(line: 209, column: 2, scope: !3819)
!3830 = !DILocation(line: 211, column: 2, scope: !3819)
!3831 = !DILocation(line: 212, column: 1, scope: !3819)
!3832 = distinct !DISubprogram(name: "snprintk", scope: !437, file: !437, line: 239, type: !3833, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3835)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!118, !1277, !315, !133, null}
!3835 = !{!3836, !3837, !3838, !3839, !3840}
!3836 = !DILocalVariable(name: "str", arg: 1, scope: !3832, file: !437, line: 239, type: !1277)
!3837 = !DILocalVariable(name: "size", arg: 2, scope: !3832, file: !437, line: 239, type: !315)
!3838 = !DILocalVariable(name: "fmt", arg: 3, scope: !3832, file: !437, line: 239, type: !133)
!3839 = !DILocalVariable(name: "ap", scope: !3832, file: !437, line: 241, type: !3753)
!3840 = !DILocalVariable(name: "ret", scope: !3832, file: !437, line: 242, type: !118)
!3841 = !DILocation(line: 0, scope: !3832)
!3842 = !DILocation(line: 241, column: 2, scope: !3832)
!3843 = !DILocation(line: 241, column: 10, scope: !3832)
!3844 = !DILocation(line: 244, column: 2, scope: !3832)
!3845 = !DILocation(line: 245, column: 8, scope: !3832)
!3846 = !DILocation(line: 246, column: 2, scope: !3832)
!3847 = !DILocation(line: 249, column: 1, scope: !3832)
!3848 = !DILocation(line: 248, column: 2, scope: !3832)
!3849 = distinct !DISubprogram(name: "vsnprintk", scope: !437, file: !437, line: 251, type: !3850, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!118, !1277, !315, !133, !3753}
!3852 = !{!3853, !3854, !3855, !3856, !3857}
!3853 = !DILocalVariable(name: "str", arg: 1, scope: !3849, file: !437, line: 251, type: !1277)
!3854 = !DILocalVariable(name: "size", arg: 2, scope: !3849, file: !437, line: 251, type: !315)
!3855 = !DILocalVariable(name: "fmt", arg: 3, scope: !3849, file: !437, line: 251, type: !133)
!3856 = !DILocalVariable(name: "ap", arg: 4, scope: !3849, file: !437, line: 251, type: !3753)
!3857 = !DILocalVariable(name: "ctx", scope: !3849, file: !437, line: 253, type: !3858)
!3858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !437, line: 217, size: 96, elements: !3859)
!3859 = !{!3860, !3861, !3862}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3858, file: !437, line: 218, baseType: !1277, size: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3858, file: !437, line: 219, baseType: !118, size: 32, offset: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3858, file: !437, line: 220, baseType: !118, size: 32, offset: 64)
!3863 = !DILocation(line: 0, scope: !3849)
!3864 = !DILocation(line: 253, column: 2, scope: !3849)
!3865 = !DILocation(line: 253, column: 21, scope: !3849)
!3866 = !DILocation(line: 253, column: 27, scope: !3849)
!3867 = !DILocation(line: 255, column: 2, scope: !3849)
!3868 = !DILocation(line: 257, column: 10, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3849, file: !437, line: 257, column: 6)
!3870 = !DILocation(line: 257, column: 22, scope: !3869)
!3871 = !DILocation(line: 257, column: 16, scope: !3869)
!3872 = !DILocation(line: 257, column: 6, scope: !3849)
!3873 = !DILocation(line: 258, column: 3, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3869, file: !437, line: 257, column: 27)
!3875 = !DILocation(line: 258, column: 18, scope: !3874)
!3876 = !DILocation(line: 259, column: 2, scope: !3874)
!3877 = !DILocation(line: 262, column: 1, scope: !3849)
!3878 = !DILocation(line: 261, column: 2, scope: !3849)
!3879 = distinct !DISubprogram(name: "str_out", scope: !437, file: !437, line: 223, type: !3880, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3883)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!118, !118, !3882}
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 32)
!3883 = !{!3884, !3885}
!3884 = !DILocalVariable(name: "c", arg: 1, scope: !3879, file: !437, line: 223, type: !118)
!3885 = !DILocalVariable(name: "ctx", arg: 2, scope: !3879, file: !437, line: 223, type: !3882)
!3886 = !DILocation(line: 0, scope: !3879)
!3887 = !DILocation(line: 225, column: 11, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3879, file: !437, line: 225, column: 6)
!3889 = !DILocation(line: 225, column: 15, scope: !3888)
!3890 = !DILocation(line: 0, scope: !3888)
!3891 = !DILocation(line: 225, column: 23, scope: !3888)
!3892 = !DILocation(line: 225, column: 45, scope: !3888)
!3893 = !DILocation(line: 225, column: 37, scope: !3888)
!3894 = !DILocation(line: 225, column: 6, scope: !3879)
!3895 = !DILocation(line: 226, column: 8, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3888, file: !437, line: 225, column: 50)
!3897 = !DILocation(line: 226, column: 13, scope: !3896)
!3898 = !DILocation(line: 227, column: 3, scope: !3896)
!3899 = !DILocation(line: 230, column: 29, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3879, file: !437, line: 230, column: 6)
!3901 = !DILocation(line: 230, column: 17, scope: !3900)
!3902 = !DILocation(line: 230, column: 6, scope: !3879)
!3903 = !DILocation(line: 231, column: 22, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3900, file: !437, line: 230, column: 34)
!3905 = !DILocation(line: 231, column: 3, scope: !3904)
!3906 = !DILocation(line: 231, column: 26, scope: !3904)
!3907 = !DILocation(line: 232, column: 2, scope: !3904)
!3908 = !DILocation(line: 233, column: 28, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3900, file: !437, line: 232, column: 9)
!3910 = !DILocation(line: 233, column: 22, scope: !3909)
!3911 = !DILocation(line: 233, column: 3, scope: !3909)
!3912 = !DILocation(line: 233, column: 26, scope: !3909)
!3913 = !DILocation(line: 237, column: 1, scope: !3879)
!3914 = distinct !DISubprogram(name: "z_thread_entry", scope: !3915, file: !3915, line: 30, type: !3916, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !3918)
!3915 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3916 = !DISubroutineType(types: !3917)
!3917 = !{null, !352, !117, !117, !117}
!3918 = !{!3919, !3920, !3921, !3922}
!3919 = !DILocalVariable(name: "entry", arg: 1, scope: !3914, file: !3915, line: 30, type: !352)
!3920 = !DILocalVariable(name: "p1", arg: 2, scope: !3914, file: !3915, line: 31, type: !117)
!3921 = !DILocalVariable(name: "p2", arg: 3, scope: !3914, file: !3915, line: 31, type: !117)
!3922 = !DILocalVariable(name: "p3", arg: 4, scope: !3914, file: !3915, line: 31, type: !117)
!3923 = !DILocation(line: 0, scope: !3914)
!3924 = !DILocation(line: 36, column: 2, scope: !3914)
!3925 = !DILocation(line: 38, column: 17, scope: !3914)
!3926 = !DILocation(line: 38, column: 2, scope: !3914)
!3927 = !DILocation(line: 45, column: 2, scope: !3914)
!3928 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !3929, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !2203)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!3931}
!3931 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !3932)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 32)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !3934)
!3934 = !{!3935, !3993, !4005, !4006, !4007, !4008, !4014, !4029}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3933, file: !225, line: 247, baseType: !3936, size: 384)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !3937)
!3937 = !{!3938, !3962, !3969, !3970, !3971, !3980, !3981, !3982}
!3938 = !DIDerivedType(tag: DW_TAG_member, scope: !3936, file: !225, line: 60, baseType: !3939, size: 64)
!3939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3936, file: !225, line: 60, size: 64, elements: !3940)
!3940 = !{!3941, !3956}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3939, file: !225, line: 61, baseType: !3942, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3943)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3944)
!3944 = !{!3945, !3951}
!3945 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !235, line: 38, baseType: !3946, size: 32)
!3946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !235, line: 38, size: 32, elements: !3947)
!3947 = !{!3948, !3950}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3946, file: !235, line: 39, baseType: !3949, size: 32)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3946, file: !235, line: 40, baseType: !3949, size: 32)
!3951 = !DIDerivedType(tag: DW_TAG_member, scope: !3943, file: !235, line: 42, baseType: !3952, size: 32, offset: 32)
!3952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3943, file: !235, line: 42, size: 32, elements: !3953)
!3953 = !{!3954, !3955}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3952, file: !235, line: 43, baseType: !3949, size: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3952, file: !235, line: 44, baseType: !3949, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3939, file: !225, line: 62, baseType: !3957, size: 64)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !3958)
!3958 = !{!3959}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3957, file: !251, line: 50, baseType: !3960, size: 64)
!3960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3961, size: 64, elements: !256)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3936, file: !225, line: 68, baseType: !3963, size: 32, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !3965)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !3966)
!3966 = !{!3967}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3965, file: !261, line: 232, baseType: !3968, size: 64)
!3968 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3943)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3936, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3936, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!3971 = !DIDerivedType(tag: DW_TAG_member, scope: !3936, file: !225, line: 90, baseType: !3972, size: 16, offset: 112)
!3972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3936, file: !225, line: 90, size: 16, elements: !3973)
!3973 = !{!3974, !3979}
!3974 = !DIDerivedType(tag: DW_TAG_member, scope: !3972, file: !225, line: 91, baseType: !3975, size: 16)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3972, file: !225, line: 91, size: 16, elements: !3976)
!3976 = !{!3977, !3978}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3975, file: !225, line: 96, baseType: !275, size: 8)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3975, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3972, file: !225, line: 100, baseType: !279, size: 16)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3936, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3936, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3936, file: !225, line: 131, baseType: !3983, size: 192, offset: 192)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !3984)
!3984 = !{!3985, !3986, !3992}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3983, file: !261, line: 245, baseType: !3942, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3983, file: !261, line: 246, baseType: !3987, size: 32, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !3988)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 32)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !3991}
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 32)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3983, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3933, file: !225, line: 250, baseType: !3994, size: 288, offset: 384)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !3995)
!3995 = !{!3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3994, file: !296, line: 26, baseType: !156, size: 32)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3994, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3994, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3994, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3994, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3994, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3994, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3994, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3994, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3933, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3933, file: !225, line: 256, baseType: !3964, size: 64, offset: 704)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3933, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3933, file: !225, line: 300, baseType: !4009, size: 96, offset: 800)
!4009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !4010)
!4010 = !{!4011, !4012, !4013}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4009, file: !225, line: 153, baseType: !22, size: 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4009, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4009, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3933, file: !225, line: 325, baseType: !4015, size: 32, offset: 896)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 32)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !4017)
!4017 = !{!4018, !4024, !4025}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4016, file: !220, line: 5074, baseType: !4019, size: 96)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !4020)
!4020 = !{!4021, !4022, !4023}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4019, file: !324, line: 57, baseType: !327, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4019, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4019, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4016, file: !220, line: 5075, baseType: !3964, size: 64, offset: 96)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4016, file: !220, line: 5076, baseType: !4026, size: 32, offset: 160)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !4027)
!4027 = !{!4028}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4026, file: !334, line: 52, baseType: !22, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3933, file: !225, line: 343, baseType: !4030, size: 64, offset: 928)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !4031)
!4031 = !{!4032, !4033}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4030, file: !296, line: 63, baseType: !156, size: 32)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4030, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!4034 = !DILocation(line: 535, column: 9, scope: !3928)
!4035 = !DILocation(line: 535, column: 2, scope: !3928)
!4036 = distinct !DISubprogram(name: "k_thread_abort", scope: !3533, file: !3533, line: 188, type: !4037, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !4039)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !3931}
!4039 = !{!4040}
!4040 = !DILocalVariable(name: "thread", arg: 1, scope: !4036, file: !3533, line: 188, type: !3931)
!4041 = !DILocation(line: 0, scope: !4036)
!4042 = !DILocation(line: 197, column: 2, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4036, file: !3533, line: 197, column: 2)
!4044 = !{i64 2155064703}
!4045 = !DILocation(line: 198, column: 2, scope: !4036)
!4046 = !DILocation(line: 199, column: 1, scope: !4036)
!4047 = distinct !DISubprogram(name: "z_current_get", scope: !3533, file: !3533, line: 173, type: !3929, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !2203)
!4048 = !DILocation(line: 180, column: 2, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4047, file: !3533, line: 180, column: 2)
!4050 = !{i64 2155064635}
!4051 = !DILocation(line: 181, column: 9, scope: !4047)
!4052 = !DILocation(line: 181, column: 2, scope: !4047)
!4053 = distinct !DISubprogram(name: "sys_heap_free", scope: !4054, file: !4054, line: 163, type: !4055, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4063)
!4054 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !4057, !117}
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 32)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !4059)
!4059 = !{!4060, !4061, !4062}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4058, file: !324, line: 57, baseType: !2637, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4058, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4058, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!4063 = !{!4064, !4065, !4066, !4067}
!4064 = !DILocalVariable(name: "heap", arg: 1, scope: !4053, file: !4054, line: 163, type: !4057)
!4065 = !DILocalVariable(name: "mem", arg: 2, scope: !4053, file: !4054, line: 163, type: !117)
!4066 = !DILocalVariable(name: "h", scope: !4053, file: !4054, line: 168, type: !2637)
!4067 = !DILocalVariable(name: "c", scope: !4053, file: !4054, line: 169, type: !2642)
!4068 = !DILocation(line: 0, scope: !4053)
!4069 = !DILocation(line: 165, column: 10, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4053, file: !4054, line: 165, column: 6)
!4071 = !DILocation(line: 165, column: 6, scope: !4053)
!4072 = !DILocation(line: 168, column: 27, scope: !4053)
!4073 = !DILocation(line: 169, column: 16, scope: !4053)
!4074 = !{i32 0, i32 536870912}
!4075 = !DILocation(line: 175, column: 2, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !4054, line: 175, column: 2)
!4077 = distinct !DILexicalBlock(scope: !4053, file: !4054, line: 175, column: 2)
!4078 = !DILocation(line: 175, column: 2, scope: !4077)
!4079 = !DILocation(line: 175, column: 2, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4076, file: !4054, line: 175, column: 2)
!4081 = !DILocation(line: 183, column: 2, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !4054, line: 183, column: 2)
!4083 = distinct !DILexicalBlock(scope: !4053, file: !4054, line: 183, column: 2)
!4084 = !DILocation(line: 183, column: 2, scope: !4083)
!4085 = !DILocation(line: 183, column: 2, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4082, file: !4054, line: 183, column: 2)
!4087 = !DILocation(line: 187, column: 2, scope: !4053)
!4088 = !DILocation(line: 197, column: 2, scope: !4053)
!4089 = !DILocation(line: 198, column: 1, scope: !4053)
!4090 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4054, file: !4054, line: 157, type: !4091, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4093)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!2642, !2637, !117}
!4093 = !{!4094, !4095, !4096, !4097}
!4094 = !DILocalVariable(name: "h", arg: 1, scope: !4090, file: !4054, line: 157, type: !2637)
!4095 = !DILocalVariable(name: "p", arg: 2, scope: !4090, file: !4054, line: 157, type: !117)
!4096 = !DILocalVariable(name: "mem", scope: !4090, file: !4054, line: 159, type: !2035)
!4097 = !DILocalVariable(name: "base", scope: !4090, file: !4054, line: 159, type: !2035)
!4098 = !DILocation(line: 0, scope: !4090)
!4099 = !DILocation(line: 159, column: 39, scope: !4090)
!4100 = !DILocation(line: 160, column: 14, scope: !4090)
!4101 = !DILocation(line: 160, column: 38, scope: !4090)
!4102 = !DILocation(line: 160, column: 46, scope: !4090)
!4103 = !DILocation(line: 160, column: 2, scope: !4090)
!4104 = distinct !DISubprogram(name: "chunk_used", scope: !2624, file: !2624, line: 137, type: !4105, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4107)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!146, !2637, !2642}
!4107 = !{!4108, !4109}
!4108 = !DILocalVariable(name: "h", arg: 1, scope: !4104, file: !2624, line: 137, type: !2637)
!4109 = !DILocalVariable(name: "c", arg: 2, scope: !4104, file: !2624, line: 137, type: !2642)
!4110 = !DILocation(line: 0, scope: !4104)
!4111 = !DILocation(line: 139, column: 9, scope: !4104)
!4112 = !DILocation(line: 139, column: 42, scope: !4104)
!4113 = !DILocation(line: 139, column: 2, scope: !4104)
!4114 = distinct !DISubprogram(name: "right_chunk", scope: !2624, file: !2624, line: 204, type: !4115, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4117)
!4115 = !DISubroutineType(types: !4116)
!4116 = !{!2642, !2637, !2642}
!4117 = !{!4118, !4119}
!4118 = !DILocalVariable(name: "h", arg: 1, scope: !4114, file: !2624, line: 204, type: !2637)
!4119 = !DILocalVariable(name: "c", arg: 2, scope: !4114, file: !2624, line: 204, type: !2642)
!4120 = !DILocation(line: 0, scope: !4114)
!4121 = !DILocation(line: 206, column: 13, scope: !4114)
!4122 = !DILocation(line: 206, column: 11, scope: !4114)
!4123 = !DILocation(line: 206, column: 2, scope: !4114)
!4124 = distinct !DISubprogram(name: "left_chunk", scope: !2624, file: !2624, line: 199, type: !4115, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4125)
!4125 = !{!4126, !4127}
!4126 = !DILocalVariable(name: "h", arg: 1, scope: !4124, file: !2624, line: 199, type: !2637)
!4127 = !DILocalVariable(name: "c", arg: 2, scope: !4124, file: !2624, line: 199, type: !2642)
!4128 = !DILocation(line: 0, scope: !4124)
!4129 = !DILocation(line: 201, column: 13, scope: !4124)
!4130 = !DILocation(line: 201, column: 11, scope: !4124)
!4131 = !DILocation(line: 201, column: 2, scope: !4124)
!4132 = distinct !DISubprogram(name: "set_chunk_used", scope: !2624, file: !2624, line: 147, type: !4133, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4135)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{null, !2637, !2642, !146}
!4135 = !{!4136, !4137, !4138, !4139, !4140}
!4136 = !DILocalVariable(name: "h", arg: 1, scope: !4132, file: !2624, line: 147, type: !2637)
!4137 = !DILocalVariable(name: "c", arg: 2, scope: !4132, file: !2624, line: 147, type: !2642)
!4138 = !DILocalVariable(name: "used", arg: 3, scope: !4132, file: !2624, line: 147, type: !146)
!4139 = !DILocalVariable(name: "buf", scope: !4132, file: !2624, line: 149, type: !2631)
!4140 = !DILocalVariable(name: "cmem", scope: !4132, file: !2624, line: 150, type: !117)
!4141 = !DILocation(line: 0, scope: !4132)
!4142 = !DILocation(line: 149, column: 22, scope: !4132)
!4143 = !DILocation(line: 0, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !2624, line: 159, column: 7)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !2624, line: 158, column: 9)
!4146 = distinct !DILexicalBlock(scope: !4132, file: !2624, line: 152, column: 6)
!4147 = !DILocation(line: 159, column: 7, scope: !4145)
!4148 = !DILocation(line: 165, column: 1, scope: !4132)
!4149 = distinct !DISubprogram(name: "free_chunk", scope: !4054, file: !4054, line: 133, type: !4150, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4152)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{null, !2637, !2642}
!4152 = !{!4153, !4154}
!4153 = !DILocalVariable(name: "h", arg: 1, scope: !4149, file: !4054, line: 133, type: !2637)
!4154 = !DILocalVariable(name: "c", arg: 2, scope: !4149, file: !4054, line: 133, type: !2642)
!4155 = !DILocation(line: 0, scope: !4149)
!4156 = !DILocation(line: 136, column: 21, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4149, file: !4054, line: 136, column: 6)
!4158 = !DILocation(line: 136, column: 7, scope: !4157)
!4159 = !DILocation(line: 136, column: 6, scope: !4149)
!4160 = !DILocation(line: 137, column: 3, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4157, file: !4054, line: 136, column: 41)
!4162 = !DILocation(line: 138, column: 22, scope: !4161)
!4163 = !DILocation(line: 138, column: 3, scope: !4161)
!4164 = !DILocation(line: 139, column: 2, scope: !4161)
!4165 = !DILocation(line: 142, column: 21, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4149, file: !4054, line: 142, column: 6)
!4167 = !DILocation(line: 142, column: 7, scope: !4166)
!4168 = !DILocation(line: 142, column: 6, scope: !4149)
!4169 = !DILocation(line: 143, column: 3, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !4054, line: 142, column: 40)
!4171 = !DILocation(line: 144, column: 19, scope: !4170)
!4172 = !DILocation(line: 144, column: 3, scope: !4170)
!4173 = !DILocation(line: 145, column: 7, scope: !4170)
!4174 = !DILocation(line: 146, column: 2, scope: !4170)
!4175 = !DILocation(line: 148, column: 2, scope: !4149)
!4176 = !DILocation(line: 149, column: 1, scope: !4149)
!4177 = distinct !DISubprogram(name: "free_list_remove", scope: !4054, file: !4054, line: 60, type: !4150, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4178)
!4178 = !{!4179, !4180, !4181}
!4179 = !DILocalVariable(name: "h", arg: 1, scope: !4177, file: !4054, line: 60, type: !2637)
!4180 = !DILocalVariable(name: "c", arg: 2, scope: !4177, file: !4054, line: 60, type: !2642)
!4181 = !DILocalVariable(name: "bidx", scope: !4182, file: !4054, line: 63, type: !118)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !4054, line: 62, column: 31)
!4183 = distinct !DILexicalBlock(scope: !4177, file: !4054, line: 62, column: 6)
!4184 = !DILocation(line: 0, scope: !4177)
!4185 = !DILocation(line: 63, column: 28, scope: !4182)
!4186 = !{i32 0, i32 32768}
!4187 = !DILocation(line: 63, column: 14, scope: !4182)
!4188 = !DILocation(line: 0, scope: !4182)
!4189 = !DILocation(line: 64, column: 3, scope: !4182)
!4190 = !DILocation(line: 66, column: 1, scope: !4177)
!4191 = distinct !DISubprogram(name: "merge_chunks", scope: !4054, file: !4054, line: 125, type: !4192, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4194)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !2637, !2642, !2642}
!4194 = !{!4195, !4196, !4197, !4198}
!4195 = !DILocalVariable(name: "h", arg: 1, scope: !4191, file: !4054, line: 125, type: !2637)
!4196 = !DILocalVariable(name: "lc", arg: 2, scope: !4191, file: !4054, line: 125, type: !2642)
!4197 = !DILocalVariable(name: "rc", arg: 3, scope: !4191, file: !4054, line: 125, type: !2642)
!4198 = !DILocalVariable(name: "newsz", scope: !4191, file: !4054, line: 127, type: !4199)
!4199 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2624, line: 62, baseType: !156)
!4200 = !DILocation(line: 0, scope: !4191)
!4201 = !DILocation(line: 127, column: 20, scope: !4191)
!4202 = !DILocation(line: 127, column: 40, scope: !4191)
!4203 = !DILocation(line: 127, column: 38, scope: !4191)
!4204 = !DILocation(line: 129, column: 2, scope: !4191)
!4205 = !DILocation(line: 130, column: 25, scope: !4191)
!4206 = !DILocation(line: 130, column: 2, scope: !4191)
!4207 = !DILocation(line: 131, column: 1, scope: !4191)
!4208 = distinct !DISubprogram(name: "free_list_add", scope: !4054, file: !4054, line: 98, type: !4150, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4209)
!4209 = !{!4210, !4211, !4212}
!4210 = !DILocalVariable(name: "h", arg: 1, scope: !4208, file: !4054, line: 98, type: !2637)
!4211 = !DILocalVariable(name: "c", arg: 2, scope: !4208, file: !4054, line: 98, type: !2642)
!4212 = !DILocalVariable(name: "bidx", scope: !4213, file: !4054, line: 101, type: !118)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !4054, line: 100, column: 31)
!4214 = distinct !DILexicalBlock(scope: !4208, file: !4054, line: 100, column: 6)
!4215 = !DILocation(line: 0, scope: !4208)
!4216 = !DILocation(line: 101, column: 28, scope: !4213)
!4217 = !DILocation(line: 101, column: 14, scope: !4213)
!4218 = !DILocation(line: 0, scope: !4213)
!4219 = !DILocation(line: 102, column: 3, scope: !4213)
!4220 = !DILocation(line: 104, column: 1, scope: !4208)
!4221 = distinct !DISubprogram(name: "chunk_size", scope: !2624, file: !2624, line: 142, type: !4222, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4224)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!4199, !2637, !2642}
!4224 = !{!4225, !4226}
!4225 = !DILocalVariable(name: "h", arg: 1, scope: !4221, file: !2624, line: 142, type: !2637)
!4226 = !DILocalVariable(name: "c", arg: 2, scope: !4221, file: !2624, line: 142, type: !2642)
!4227 = !DILocation(line: 0, scope: !4221)
!4228 = !DILocation(line: 144, column: 9, scope: !4221)
!4229 = !DILocation(line: 144, column: 42, scope: !4221)
!4230 = !DILocation(line: 144, column: 2, scope: !4221)
!4231 = distinct !DISubprogram(name: "bucket_idx", scope: !2624, file: !2624, line: 250, type: !4232, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4234)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!118, !2637, !4199}
!4234 = !{!4235, !4236, !4237}
!4235 = !DILocalVariable(name: "h", arg: 1, scope: !4231, file: !2624, line: 250, type: !2637)
!4236 = !DILocalVariable(name: "sz", arg: 2, scope: !4231, file: !2624, line: 250, type: !4199)
!4237 = !DILocalVariable(name: "usable_sz", scope: !4231, file: !2624, line: 252, type: !32)
!4238 = !DILocation(line: 0, scope: !4231)
!4239 = !DILocation(line: 252, column: 32, scope: !4231)
!4240 = !DILocation(line: 252, column: 30, scope: !4231)
!4241 = !DILocation(line: 252, column: 50, scope: !4231)
!4242 = !DILocation(line: 253, column: 14, scope: !4231)
!4243 = !{i32 0, i32 33}
!4244 = !DILocation(line: 253, column: 12, scope: !4231)
!4245 = !DILocation(line: 253, column: 2, scope: !4231)
!4246 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4054, file: !4054, line: 68, type: !4247, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{null, !2637, !2642, !118}
!4249 = !{!4250, !4251, !4252, !4253, !4255, !4258}
!4250 = !DILocalVariable(name: "h", arg: 1, scope: !4246, file: !4054, line: 68, type: !2637)
!4251 = !DILocalVariable(name: "c", arg: 2, scope: !4246, file: !4054, line: 68, type: !2642)
!4252 = !DILocalVariable(name: "bidx", arg: 3, scope: !4246, file: !4054, line: 68, type: !118)
!4253 = !DILocalVariable(name: "b", scope: !4246, file: !4054, line: 70, type: !4254)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!4255 = !DILocalVariable(name: "second", scope: !4256, file: !4054, line: 84, type: !2642)
!4256 = distinct !DILexicalBlock(scope: !4257, file: !4054, line: 80, column: 9)
!4257 = distinct !DILexicalBlock(scope: !4246, file: !4054, line: 72, column: 6)
!4258 = !DILocalVariable(name: "first", scope: !4256, file: !4054, line: 85, type: !2642)
!4259 = !DILocation(line: 0, scope: !4246)
!4260 = !DILocation(line: 72, column: 9, scope: !4257)
!4261 = !DILocation(line: 72, column: 14, scope: !4257)
!4262 = !DILocation(line: 72, column: 6, scope: !4246)
!4263 = !DILocation(line: 76, column: 23, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4257, file: !4054, line: 72, column: 21)
!4265 = !DILocation(line: 76, column: 6, scope: !4264)
!4266 = !DILocation(line: 76, column: 20, scope: !4264)
!4267 = !DILocation(line: 77, column: 11, scope: !4264)
!4268 = !DILocation(line: 78, column: 3, scope: !4264)
!4269 = !DILocation(line: 79, column: 3, scope: !4264)
!4270 = !DILocation(line: 80, column: 2, scope: !4264)
!4271 = !DILocation(line: 0, scope: !4256)
!4272 = !DILocation(line: 85, column: 21, scope: !4256)
!4273 = !{i32 0, i32 65536}
!4274 = !DILocation(line: 87, column: 3, scope: !4256)
!4275 = !DILocation(line: 88, column: 3, scope: !4256)
!4276 = !DILocation(line: 89, column: 3, scope: !4256)
!4277 = !DILocation(line: 90, column: 3, scope: !4256)
!4278 = !DILocation(line: 96, column: 1, scope: !4246)
!4279 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2624, file: !2624, line: 187, type: !4192, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4280)
!4280 = !{!4281, !4282, !4283}
!4281 = !DILocalVariable(name: "h", arg: 1, scope: !4279, file: !2624, line: 187, type: !2637)
!4282 = !DILocalVariable(name: "c", arg: 2, scope: !4279, file: !2624, line: 187, type: !2642)
!4283 = !DILocalVariable(name: "prev", arg: 3, scope: !4279, file: !2624, line: 188, type: !2642)
!4284 = !DILocation(line: 0, scope: !4279)
!4285 = !DILocation(line: 190, column: 2, scope: !4279)
!4286 = !DILocation(line: 191, column: 1, scope: !4279)
!4287 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2624, file: !2624, line: 193, type: !4192, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4288)
!4288 = !{!4289, !4290, !4291}
!4289 = !DILocalVariable(name: "h", arg: 1, scope: !4287, file: !2624, line: 193, type: !2637)
!4290 = !DILocalVariable(name: "c", arg: 2, scope: !4287, file: !2624, line: 193, type: !2642)
!4291 = !DILocalVariable(name: "next", arg: 3, scope: !4287, file: !2624, line: 194, type: !2642)
!4292 = !DILocation(line: 0, scope: !4287)
!4293 = !DILocation(line: 196, column: 2, scope: !4287)
!4294 = !DILocation(line: 197, column: 1, scope: !4287)
!4295 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2624, file: !2624, line: 177, type: !4115, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4296)
!4296 = !{!4297, !4298}
!4297 = !DILocalVariable(name: "h", arg: 1, scope: !4295, file: !2624, line: 177, type: !2637)
!4298 = !DILocalVariable(name: "c", arg: 2, scope: !4295, file: !2624, line: 177, type: !2642)
!4299 = !DILocation(line: 0, scope: !4295)
!4300 = !DILocation(line: 179, column: 9, scope: !4295)
!4301 = !DILocation(line: 179, column: 2, scope: !4295)
!4302 = distinct !DISubprogram(name: "chunk_field", scope: !2624, file: !2624, line: 107, type: !4303, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4305)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{!2642, !2637, !2642, !2623}
!4305 = !{!4306, !4307, !4308, !4309, !4310}
!4306 = !DILocalVariable(name: "h", arg: 1, scope: !4302, file: !2624, line: 107, type: !2637)
!4307 = !DILocalVariable(name: "c", arg: 2, scope: !4302, file: !2624, line: 107, type: !2642)
!4308 = !DILocalVariable(name: "f", arg: 3, scope: !4302, file: !2624, line: 108, type: !2623)
!4309 = !DILocalVariable(name: "buf", scope: !4302, file: !2624, line: 110, type: !2631)
!4310 = !DILocalVariable(name: "cmem", scope: !4302, file: !2624, line: 111, type: !117)
!4311 = !DILocation(line: 0, scope: !4302)
!4312 = !DILocation(line: 110, column: 22, scope: !4302)
!4313 = !DILocation(line: 111, column: 15, scope: !4302)
!4314 = !DILocation(line: 116, column: 11, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !2624, line: 115, column: 9)
!4316 = distinct !DILexicalBlock(scope: !4302, file: !2624, line: 113, column: 6)
!4317 = !DILocation(line: 116, column: 10, scope: !4315)
!4318 = !DILocation(line: 118, column: 1, scope: !4302)
!4319 = distinct !DISubprogram(name: "chunk_buf", scope: !2624, file: !2624, line: 101, type: !4320, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4322)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!2631, !2637}
!4322 = !{!4323}
!4323 = !DILocalVariable(name: "h", arg: 1, scope: !4319, file: !2624, line: 101, type: !2637)
!4324 = !DILocation(line: 0, scope: !4319)
!4325 = !DILocation(line: 104, column: 9, scope: !4319)
!4326 = !DILocation(line: 104, column: 2, scope: !4319)
!4327 = distinct !DISubprogram(name: "chunk_set", scope: !2624, file: !2624, line: 120, type: !4328, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4330)
!4328 = !DISubroutineType(types: !4329)
!4329 = !{null, !2637, !2642, !2623, !2642}
!4330 = !{!4331, !4332, !4333, !4334, !4335, !4336}
!4331 = !DILocalVariable(name: "h", arg: 1, scope: !4327, file: !2624, line: 120, type: !2637)
!4332 = !DILocalVariable(name: "c", arg: 2, scope: !4327, file: !2624, line: 120, type: !2642)
!4333 = !DILocalVariable(name: "f", arg: 3, scope: !4327, file: !2624, line: 121, type: !2623)
!4334 = !DILocalVariable(name: "val", arg: 4, scope: !4327, file: !2624, line: 121, type: !2642)
!4335 = !DILocalVariable(name: "buf", scope: !4327, file: !2624, line: 125, type: !2631)
!4336 = !DILocalVariable(name: "cmem", scope: !4327, file: !2624, line: 126, type: !117)
!4337 = !DILocation(line: 0, scope: !4327)
!4338 = !DILocation(line: 125, column: 22, scope: !4327)
!4339 = !DILocation(line: 126, column: 15, scope: !4327)
!4340 = !DILocation(line: 133, column: 27, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !2624, line: 131, column: 9)
!4342 = distinct !DILexicalBlock(scope: !4327, file: !2624, line: 128, column: 6)
!4343 = !DILocation(line: 133, column: 4, scope: !4341)
!4344 = !DILocation(line: 133, column: 3, scope: !4341)
!4345 = !DILocation(line: 133, column: 25, scope: !4341)
!4346 = !DILocation(line: 135, column: 1, scope: !4327)
!4347 = distinct !DISubprogram(name: "min_chunk_size", scope: !2624, file: !2624, line: 240, type: !4348, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4350)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!4199, !2637}
!4350 = !{!4351}
!4351 = !DILocalVariable(name: "h", arg: 1, scope: !4347, file: !2624, line: 240, type: !2637)
!4352 = !DILocation(line: 0, scope: !4347)
!4353 = !DILocation(line: 242, column: 9, scope: !4347)
!4354 = !DILocation(line: 242, column: 2, scope: !4347)
!4355 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2624, file: !2624, line: 235, type: !4356, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!4199, !2637, !315}
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "h", arg: 1, scope: !4355, file: !2624, line: 235, type: !2637)
!4360 = !DILocalVariable(name: "bytes", arg: 2, scope: !4355, file: !2624, line: 235, type: !315)
!4361 = !DILocation(line: 0, scope: !4355)
!4362 = !DILocation(line: 237, column: 39, scope: !4355)
!4363 = !DILocation(line: 237, column: 9, scope: !4355)
!4364 = !DILocation(line: 237, column: 2, scope: !4355)
!4365 = distinct !DISubprogram(name: "chunksz", scope: !2624, file: !2624, line: 230, type: !4366, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4368)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!4199, !315}
!4368 = !{!4369}
!4369 = !DILocalVariable(name: "bytes", arg: 1, scope: !4365, file: !2624, line: 230, type: !315)
!4370 = !DILocation(line: 0, scope: !4365)
!4371 = !DILocation(line: 232, column: 29, scope: !4365)
!4372 = !DILocation(line: 232, column: 35, scope: !4365)
!4373 = !DILocation(line: 232, column: 2, scope: !4365)
!4374 = distinct !DISubprogram(name: "set_chunk_size", scope: !2624, file: !2624, line: 172, type: !4375, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{null, !2637, !2642, !4199}
!4377 = !{!4378, !4379, !4380}
!4378 = !DILocalVariable(name: "h", arg: 1, scope: !4374, file: !2624, line: 172, type: !2637)
!4379 = !DILocalVariable(name: "c", arg: 2, scope: !4374, file: !2624, line: 172, type: !2642)
!4380 = !DILocalVariable(name: "size", arg: 3, scope: !4374, file: !2624, line: 172, type: !4199)
!4381 = !DILocation(line: 0, scope: !4374)
!4382 = !DILocation(line: 174, column: 38, scope: !4374)
!4383 = !DILocation(line: 174, column: 2, scope: !4374)
!4384 = !DILocation(line: 175, column: 1, scope: !4374)
!4385 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2624, file: !2624, line: 209, type: !4375, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4386)
!4386 = !{!4387, !4388, !4389}
!4387 = !DILocalVariable(name: "h", arg: 1, scope: !4385, file: !2624, line: 209, type: !2637)
!4388 = !DILocalVariable(name: "c", arg: 2, scope: !4385, file: !2624, line: 209, type: !2642)
!4389 = !DILocalVariable(name: "size", arg: 3, scope: !4385, file: !2624, line: 210, type: !4199)
!4390 = !DILocation(line: 0, scope: !4385)
!4391 = !DILocation(line: 212, column: 2, scope: !4385)
!4392 = !DILocation(line: 213, column: 1, scope: !4385)
!4393 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4054, file: !4054, line: 34, type: !4247, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4394)
!4394 = !{!4395, !4396, !4397, !4398, !4399, !4402}
!4395 = !DILocalVariable(name: "h", arg: 1, scope: !4393, file: !4054, line: 34, type: !2637)
!4396 = !DILocalVariable(name: "c", arg: 2, scope: !4393, file: !4054, line: 34, type: !2642)
!4397 = !DILocalVariable(name: "bidx", arg: 3, scope: !4393, file: !4054, line: 34, type: !118)
!4398 = !DILocalVariable(name: "b", scope: !4393, file: !4054, line: 36, type: !4254)
!4399 = !DILocalVariable(name: "first", scope: !4400, file: !4054, line: 47, type: !2642)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !4054, line: 46, column: 9)
!4401 = distinct !DILexicalBlock(scope: !4393, file: !4054, line: 42, column: 6)
!4402 = !DILocalVariable(name: "second", scope: !4400, file: !4054, line: 48, type: !2642)
!4403 = !DILocation(line: 0, scope: !4393)
!4404 = !DILocation(line: 36, column: 29, scope: !4393)
!4405 = !DILocation(line: 42, column: 6, scope: !4401)
!4406 = !DILocation(line: 42, column: 28, scope: !4401)
!4407 = !DILocation(line: 42, column: 6, scope: !4393)
!4408 = !DILocation(line: 44, column: 24, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4401, file: !4054, line: 42, column: 34)
!4410 = !DILocation(line: 44, column: 23, scope: !4409)
!4411 = !DILocation(line: 44, column: 6, scope: !4409)
!4412 = !DILocation(line: 44, column: 20, scope: !4409)
!4413 = !DILocation(line: 45, column: 6, scope: !4409)
!4414 = !DILocation(line: 45, column: 11, scope: !4409)
!4415 = !DILocation(line: 46, column: 2, scope: !4409)
!4416 = !DILocation(line: 47, column: 21, scope: !4400)
!4417 = !DILocation(line: 0, scope: !4400)
!4418 = !DILocation(line: 50, column: 6, scope: !4400)
!4419 = !DILocation(line: 50, column: 11, scope: !4400)
!4420 = !DILocation(line: 51, column: 3, scope: !4400)
!4421 = !DILocation(line: 52, column: 3, scope: !4400)
!4422 = !DILocation(line: 58, column: 1, scope: !4393)
!4423 = distinct !DISubprogram(name: "next_free_chunk", scope: !2624, file: !2624, line: 182, type: !4115, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4424)
!4424 = !{!4425, !4426}
!4425 = !DILocalVariable(name: "h", arg: 1, scope: !4423, file: !2624, line: 182, type: !2637)
!4426 = !DILocalVariable(name: "c", arg: 2, scope: !4423, file: !2624, line: 182, type: !2642)
!4427 = !DILocation(line: 0, scope: !4423)
!4428 = !DILocation(line: 184, column: 9, scope: !4423)
!4429 = !DILocation(line: 184, column: 2, scope: !4423)
!4430 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4054, file: !4054, line: 200, type: !4431, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!315, !4057, !117}
!4433 = !{!4434, !4435, !4436, !4437, !4438, !4439, !4440}
!4434 = !DILocalVariable(name: "heap", arg: 1, scope: !4430, file: !4054, line: 200, type: !4057)
!4435 = !DILocalVariable(name: "mem", arg: 2, scope: !4430, file: !4054, line: 200, type: !117)
!4436 = !DILocalVariable(name: "h", scope: !4430, file: !4054, line: 202, type: !2637)
!4437 = !DILocalVariable(name: "c", scope: !4430, file: !4054, line: 203, type: !2642)
!4438 = !DILocalVariable(name: "addr", scope: !4430, file: !4054, line: 204, type: !315)
!4439 = !DILocalVariable(name: "chunk_base", scope: !4430, file: !4054, line: 205, type: !315)
!4440 = !DILocalVariable(name: "chunk_sz", scope: !4430, file: !4054, line: 206, type: !315)
!4441 = !DILocation(line: 0, scope: !4430)
!4442 = !DILocation(line: 202, column: 27, scope: !4430)
!4443 = !DILocation(line: 203, column: 16, scope: !4430)
!4444 = !DILocation(line: 204, column: 16, scope: !4430)
!4445 = !DILocation(line: 205, column: 31, scope: !4430)
!4446 = !DILocation(line: 205, column: 22, scope: !4430)
!4447 = !DILocation(line: 206, column: 20, scope: !4430)
!4448 = !DILocation(line: 206, column: 37, scope: !4430)
!4449 = !DILocation(line: 208, column: 26, scope: !4430)
!4450 = !DILocation(line: 208, column: 18, scope: !4430)
!4451 = !DILocation(line: 208, column: 2, scope: !4430)
!4452 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4054, file: !4054, line: 263, type: !4453, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4455)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!117, !4057, !315}
!4455 = !{!4456, !4457, !4458, !4459, !4460, !4461}
!4456 = !DILocalVariable(name: "heap", arg: 1, scope: !4452, file: !4054, line: 263, type: !4057)
!4457 = !DILocalVariable(name: "bytes", arg: 2, scope: !4452, file: !4054, line: 263, type: !315)
!4458 = !DILocalVariable(name: "h", scope: !4452, file: !4054, line: 265, type: !2637)
!4459 = !DILocalVariable(name: "mem", scope: !4452, file: !4054, line: 266, type: !117)
!4460 = !DILocalVariable(name: "chunk_sz", scope: !4452, file: !4054, line: 272, type: !4199)
!4461 = !DILocalVariable(name: "c", scope: !4452, file: !4054, line: 273, type: !2642)
!4462 = !DILocation(line: 0, scope: !4452)
!4463 = !DILocation(line: 265, column: 27, scope: !4452)
!4464 = !DILocation(line: 268, column: 12, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4452, file: !4054, line: 268, column: 6)
!4466 = !DILocation(line: 268, column: 18, scope: !4465)
!4467 = !DILocation(line: 268, column: 21, scope: !4465)
!4468 = !DILocation(line: 268, column: 6, scope: !4452)
!4469 = !DILocation(line: 272, column: 23, scope: !4452)
!4470 = !DILocation(line: 273, column: 16, scope: !4452)
!4471 = !DILocation(line: 274, column: 8, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4452, file: !4054, line: 274, column: 6)
!4473 = !DILocation(line: 274, column: 6, scope: !4452)
!4474 = !DILocation(line: 279, column: 6, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4452, file: !4054, line: 279, column: 6)
!4476 = !DILocation(line: 279, column: 23, scope: !4475)
!4477 = !DILocation(line: 279, column: 6, scope: !4452)
!4478 = !DILocation(line: 280, column: 24, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4475, file: !4054, line: 279, column: 35)
!4480 = !DILocation(line: 280, column: 3, scope: !4479)
!4481 = !DILocation(line: 281, column: 3, scope: !4479)
!4482 = !DILocation(line: 282, column: 2, scope: !4479)
!4483 = !DILocation(line: 284, column: 2, scope: !4452)
!4484 = !DILocation(line: 286, column: 8, scope: !4452)
!4485 = !DILocation(line: 298, column: 2, scope: !4452)
!4486 = !DILocation(line: 299, column: 1, scope: !4452)
!4487 = distinct !DISubprogram(name: "size_too_big", scope: !2624, file: !2624, line: 256, type: !4488, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4490)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{!146, !2637, !315}
!4490 = !{!4491, !4492}
!4491 = !DILocalVariable(name: "h", arg: 1, scope: !4487, file: !2624, line: 256, type: !2637)
!4492 = !DILocalVariable(name: "bytes", arg: 2, scope: !4487, file: !2624, line: 256, type: !315)
!4493 = !DILocation(line: 0, scope: !4487)
!4494 = !DILocation(line: 262, column: 16, scope: !4487)
!4495 = !DILocation(line: 262, column: 36, scope: !4487)
!4496 = !DILocation(line: 262, column: 30, scope: !4487)
!4497 = !DILocation(line: 262, column: 2, scope: !4487)
!4498 = distinct !DISubprogram(name: "alloc_chunk", scope: !4054, file: !4054, line: 211, type: !4499, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4501)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!2642, !2637, !4199}
!4501 = !{!4502, !4503, !4504, !4505, !4506, !4509, !4510, !4512, !4513, !4516}
!4502 = !DILocalVariable(name: "h", arg: 1, scope: !4498, file: !4054, line: 211, type: !2637)
!4503 = !DILocalVariable(name: "sz", arg: 2, scope: !4498, file: !4054, line: 211, type: !4199)
!4504 = !DILocalVariable(name: "bi", scope: !4498, file: !4054, line: 213, type: !118)
!4505 = !DILocalVariable(name: "b", scope: !4498, file: !4054, line: 214, type: !4254)
!4506 = !DILocalVariable(name: "first", scope: !4507, file: !4054, line: 233, type: !2642)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !4054, line: 232, column: 15)
!4508 = distinct !DILexicalBlock(scope: !4498, file: !4054, line: 232, column: 6)
!4509 = !DILocalVariable(name: "i", scope: !4507, file: !4054, line: 234, type: !118)
!4510 = !DILocalVariable(name: "c", scope: !4511, file: !4054, line: 236, type: !2642)
!4511 = distinct !DILexicalBlock(scope: !4507, file: !4054, line: 235, column: 6)
!4512 = !DILocalVariable(name: "bmask", scope: !4498, file: !4054, line: 249, type: !156)
!4513 = !DILocalVariable(name: "minbucket", scope: !4514, file: !4054, line: 252, type: !118)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !4054, line: 251, column: 19)
!4515 = distinct !DILexicalBlock(scope: !4498, file: !4054, line: 251, column: 6)
!4516 = !DILocalVariable(name: "c", scope: !4514, file: !4054, line: 253, type: !2642)
!4517 = !DILocation(line: 0, scope: !4498)
!4518 = !DILocation(line: 213, column: 11, scope: !4498)
!4519 = !DILocation(line: 232, column: 9, scope: !4508)
!4520 = !DILocation(line: 232, column: 6, scope: !4508)
!4521 = !DILocation(line: 232, column: 6, scope: !4498)
!4522 = !DILocation(line: 236, column: 21, scope: !4511)
!4523 = !DILocation(line: 0, scope: !4507)
!4524 = !DILocation(line: 0, scope: !4511)
!4525 = !DILocation(line: 237, column: 8, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4511, file: !4054, line: 237, column: 8)
!4527 = !DILocation(line: 237, column: 25, scope: !4526)
!4528 = !DILocation(line: 237, column: 8, scope: !4511)
!4529 = !DILocation(line: 238, column: 5, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4526, file: !4054, line: 237, column: 32)
!4531 = !DILocation(line: 241, column: 14, scope: !4511)
!4532 = !DILocation(line: 241, column: 12, scope: !4511)
!4533 = !DILocation(line: 243, column: 12, scope: !4507)
!4534 = !DILocation(line: 243, column: 16, scope: !4507)
!4535 = distinct !{!4535, !4536, !4537}
!4536 = !DILocation(line: 235, column: 3, scope: !4507)
!4537 = !DILocation(line: 243, column: 35, scope: !4507)
!4538 = !DILocation(line: 249, column: 22, scope: !4498)
!4539 = !DILocation(line: 249, column: 39, scope: !4498)
!4540 = !DILocation(line: 249, column: 36, scope: !4498)
!4541 = !DILocation(line: 251, column: 12, scope: !4515)
!4542 = !DILocation(line: 251, column: 6, scope: !4498)
!4543 = !DILocation(line: 252, column: 19, scope: !4514)
!4544 = !DILocation(line: 0, scope: !4514)
!4545 = !DILocation(line: 253, column: 39, scope: !4514)
!4546 = !DILocation(line: 255, column: 3, scope: !4514)
!4547 = !DILocation(line: 261, column: 1, scope: !4498)
!4548 = distinct !DISubprogram(name: "split_chunks", scope: !4054, file: !4054, line: 109, type: !4192, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4549)
!4549 = !{!4550, !4551, !4552, !4553, !4554, !4555}
!4550 = !DILocalVariable(name: "h", arg: 1, scope: !4548, file: !4054, line: 109, type: !2637)
!4551 = !DILocalVariable(name: "lc", arg: 2, scope: !4548, file: !4054, line: 109, type: !2642)
!4552 = !DILocalVariable(name: "rc", arg: 3, scope: !4548, file: !4054, line: 109, type: !2642)
!4553 = !DILocalVariable(name: "sz0", scope: !4548, file: !4054, line: 114, type: !4199)
!4554 = !DILocalVariable(name: "lsz", scope: !4548, file: !4054, line: 115, type: !4199)
!4555 = !DILocalVariable(name: "rsz", scope: !4548, file: !4054, line: 116, type: !4199)
!4556 = !DILocation(line: 0, scope: !4548)
!4557 = !DILocation(line: 114, column: 18, scope: !4548)
!4558 = !DILocation(line: 115, column: 21, scope: !4548)
!4559 = !DILocation(line: 116, column: 22, scope: !4548)
!4560 = !DILocation(line: 118, column: 2, scope: !4548)
!4561 = !DILocation(line: 119, column: 2, scope: !4548)
!4562 = !DILocation(line: 120, column: 2, scope: !4548)
!4563 = !DILocation(line: 121, column: 25, scope: !4548)
!4564 = !DILocation(line: 121, column: 2, scope: !4548)
!4565 = !DILocation(line: 122, column: 1, scope: !4548)
!4566 = distinct !DISubprogram(name: "chunk_mem", scope: !4054, file: !4054, line: 24, type: !4567, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4569)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!117, !2637, !2642}
!4569 = !{!4570, !4571, !4572, !4573}
!4570 = !DILocalVariable(name: "h", arg: 1, scope: !4566, file: !4054, line: 24, type: !2637)
!4571 = !DILocalVariable(name: "c", arg: 2, scope: !4566, file: !4054, line: 24, type: !2642)
!4572 = !DILocalVariable(name: "buf", scope: !4566, file: !4054, line: 26, type: !2631)
!4573 = !DILocalVariable(name: "ret", scope: !4566, file: !4054, line: 27, type: !2035)
!4574 = !DILocation(line: 0, scope: !4566)
!4575 = !DILocation(line: 26, column: 22, scope: !4566)
!4576 = !DILocation(line: 27, column: 38, scope: !4566)
!4577 = !DILocation(line: 31, column: 2, scope: !4566)
!4578 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4054, file: !4054, line: 301, type: !4579, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!117, !4057, !315, !315}
!4581 = !{!4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593}
!4582 = !DILocalVariable(name: "heap", arg: 1, scope: !4578, file: !4054, line: 301, type: !4057)
!4583 = !DILocalVariable(name: "align", arg: 2, scope: !4578, file: !4054, line: 301, type: !315)
!4584 = !DILocalVariable(name: "bytes", arg: 3, scope: !4578, file: !4054, line: 301, type: !315)
!4585 = !DILocalVariable(name: "h", scope: !4578, file: !4054, line: 303, type: !2637)
!4586 = !DILocalVariable(name: "gap", scope: !4578, file: !4054, line: 304, type: !315)
!4587 = !DILocalVariable(name: "rew", scope: !4578, file: !4054, line: 304, type: !315)
!4588 = !DILocalVariable(name: "padded_sz", scope: !4578, file: !4054, line: 335, type: !4199)
!4589 = !DILocalVariable(name: "c0", scope: !4578, file: !4054, line: 336, type: !2642)
!4590 = !DILocalVariable(name: "mem", scope: !4578, file: !4054, line: 341, type: !2035)
!4591 = !DILocalVariable(name: "end", scope: !4578, file: !4054, line: 345, type: !2631)
!4592 = !DILocalVariable(name: "c", scope: !4578, file: !4054, line: 348, type: !2642)
!4593 = !DILocalVariable(name: "c_end", scope: !4578, file: !4054, line: 349, type: !2642)
!4594 = !DILocation(line: 0, scope: !4578)
!4595 = !DILocation(line: 303, column: 27, scope: !4578)
!4596 = !DILocation(line: 313, column: 16, scope: !4578)
!4597 = !DILocation(line: 313, column: 14, scope: !4578)
!4598 = !DILocation(line: 314, column: 12, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 314, column: 6)
!4600 = !DILocation(line: 314, column: 6, scope: !4578)
!4601 = !DILocation(line: 315, column: 9, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4599, file: !4054, line: 314, column: 20)
!4603 = !DILocation(line: 316, column: 9, scope: !4602)
!4604 = !DILocation(line: 318, column: 13, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !4054, line: 318, column: 7)
!4606 = distinct !DILexicalBlock(scope: !4599, file: !4054, line: 317, column: 9)
!4607 = !DILocation(line: 318, column: 7, scope: !4606)
!4608 = !DILocation(line: 319, column: 11, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4605, file: !4054, line: 318, column: 39)
!4610 = !DILocation(line: 319, column: 4, scope: !4609)
!4611 = !DILocation(line: 0, scope: !4599)
!4612 = !DILocation(line: 324, column: 2, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !4054, line: 324, column: 2)
!4614 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 324, column: 2)
!4615 = !DILocation(line: 324, column: 2, scope: !4614)
!4616 = !DILocation(line: 324, column: 2, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !4054, line: 324, column: 2)
!4618 = !DILocation(line: 326, column: 12, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 326, column: 6)
!4620 = !DILocation(line: 326, column: 17, scope: !4619)
!4621 = !DILocation(line: 326, column: 20, scope: !4619)
!4622 = !DILocation(line: 326, column: 6, scope: !4578)
!4623 = !DILocation(line: 335, column: 50, scope: !4578)
!4624 = !DILocation(line: 335, column: 58, scope: !4578)
!4625 = !DILocation(line: 335, column: 24, scope: !4578)
!4626 = !DILocation(line: 336, column: 17, scope: !4578)
!4627 = !DILocation(line: 338, column: 9, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 338, column: 6)
!4629 = !DILocation(line: 338, column: 6, scope: !4578)
!4630 = !DILocation(line: 341, column: 17, scope: !4578)
!4631 = !DILocation(line: 344, column: 20, scope: !4578)
!4632 = !DILocation(line: 344, column: 8, scope: !4578)
!4633 = !DILocation(line: 344, column: 47, scope: !4578)
!4634 = !DILocation(line: 345, column: 39, scope: !4578)
!4635 = !DILocation(line: 348, column: 16, scope: !4578)
!4636 = !DILocation(line: 349, column: 26, scope: !4578)
!4637 = !DILocation(line: 349, column: 24, scope: !4578)
!4638 = !DILocation(line: 353, column: 8, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 353, column: 6)
!4640 = !DILocation(line: 353, column: 6, scope: !4578)
!4641 = !DILocation(line: 354, column: 3, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4639, file: !4054, line: 353, column: 14)
!4643 = !DILocation(line: 355, column: 3, scope: !4642)
!4644 = !DILocation(line: 356, column: 2, scope: !4642)
!4645 = !DILocation(line: 359, column: 6, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4578, file: !4054, line: 359, column: 6)
!4647 = !DILocation(line: 359, column: 24, scope: !4646)
!4648 = !DILocation(line: 359, column: 6, scope: !4578)
!4649 = !DILocation(line: 360, column: 3, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !4054, line: 359, column: 33)
!4651 = !DILocation(line: 361, column: 3, scope: !4650)
!4652 = !DILocation(line: 362, column: 2, scope: !4650)
!4653 = !DILocation(line: 364, column: 2, scope: !4578)
!4654 = !DILocation(line: 377, column: 1, scope: !4578)
!4655 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4054, file: !4054, line: 379, type: !4656, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!117, !4057, !117, !315, !315}
!4658 = !{!4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4674, !4675}
!4659 = !DILocalVariable(name: "heap", arg: 1, scope: !4655, file: !4054, line: 379, type: !4057)
!4660 = !DILocalVariable(name: "ptr", arg: 2, scope: !4655, file: !4054, line: 379, type: !117)
!4661 = !DILocalVariable(name: "align", arg: 3, scope: !4655, file: !4054, line: 380, type: !315)
!4662 = !DILocalVariable(name: "bytes", arg: 4, scope: !4655, file: !4054, line: 380, type: !315)
!4663 = !DILocalVariable(name: "h", scope: !4655, file: !4054, line: 382, type: !2637)
!4664 = !DILocalVariable(name: "c", scope: !4655, file: !4054, line: 399, type: !2642)
!4665 = !DILocalVariable(name: "rc", scope: !4655, file: !4054, line: 400, type: !2642)
!4666 = !DILocalVariable(name: "align_gap", scope: !4655, file: !4054, line: 401, type: !315)
!4667 = !DILocalVariable(name: "chunks_need", scope: !4655, file: !4054, line: 402, type: !4199)
!4668 = !DILocalVariable(name: "split_size", scope: !4669, file: !4054, line: 435, type: !4199)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !4054, line: 433, column: 61)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !4054, line: 432, column: 13)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !4054, line: 409, column: 13)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !4054, line: 406, column: 13)
!4673 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 404, column: 6)
!4674 = !DILocalVariable(name: "ptr2", scope: !4655, file: !4054, line: 474, type: !117)
!4675 = !DILocalVariable(name: "prev_size", scope: !4676, file: !4054, line: 477, type: !315)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !4054, line: 476, column: 20)
!4677 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 476, column: 6)
!4678 = !DILocation(line: 0, scope: !4655)
!4679 = !DILocation(line: 382, column: 27, scope: !4655)
!4680 = !DILocation(line: 385, column: 10, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 385, column: 6)
!4682 = !DILocation(line: 385, column: 6, scope: !4655)
!4683 = !DILocation(line: 386, column: 10, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !4054, line: 385, column: 19)
!4685 = !DILocation(line: 386, column: 3, scope: !4684)
!4686 = !DILocation(line: 388, column: 12, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 388, column: 6)
!4688 = !DILocation(line: 388, column: 6, scope: !4655)
!4689 = !DILocation(line: 389, column: 3, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !4054, line: 388, column: 18)
!4691 = !DILocation(line: 390, column: 3, scope: !4690)
!4692 = !DILocation(line: 393, column: 2, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !4054, line: 393, column: 2)
!4694 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 393, column: 2)
!4695 = !DILocation(line: 393, column: 2, scope: !4694)
!4696 = !DILocation(line: 393, column: 2, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4693, file: !4054, line: 393, column: 2)
!4698 = !DILocation(line: 395, column: 6, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4655, file: !4054, line: 395, column: 6)
!4700 = !DILocation(line: 395, column: 6, scope: !4655)
!4701 = !DILocation(line: 399, column: 16, scope: !4655)
!4702 = !DILocation(line: 400, column: 17, scope: !4655)
!4703 = !DILocation(line: 401, column: 49, scope: !4655)
!4704 = !DILocation(line: 401, column: 36, scope: !4655)
!4705 = !DILocation(line: 402, column: 52, scope: !4655)
!4706 = !DILocation(line: 402, column: 26, scope: !4655)
!4707 = !DILocation(line: 404, column: 6, scope: !4673)
!4708 = !DILocation(line: 404, column: 12, scope: !4673)
!4709 = !DILocation(line: 406, column: 13, scope: !4672)
!4710 = !DILocation(line: 406, column: 30, scope: !4672)
!4711 = !DILocation(line: 406, column: 13, scope: !4673)
!4712 = !DILocation(line: 409, column: 30, scope: !4671)
!4713 = !DILocation(line: 409, column: 13, scope: !4672)
!4714 = !DILocation(line: 420, column: 24, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4671, file: !4054, line: 409, column: 45)
!4716 = !DILocation(line: 420, column: 3, scope: !4715)
!4717 = !DILocation(line: 421, column: 3, scope: !4715)
!4718 = !DILocation(line: 422, column: 3, scope: !4715)
!4719 = !DILocation(line: 431, column: 3, scope: !4715)
!4720 = !DILocation(line: 432, column: 14, scope: !4670)
!4721 = !DILocation(line: 432, column: 32, scope: !4670)
!4722 = !DILocation(line: 433, column: 26, scope: !4670)
!4723 = !DILocation(line: 433, column: 24, scope: !4670)
!4724 = !DILocation(line: 433, column: 44, scope: !4670)
!4725 = !DILocation(line: 432, column: 13, scope: !4671)
!4726 = !DILocation(line: 435, column: 38, scope: !4669)
!4727 = !DILocation(line: 0, scope: !4669)
!4728 = !DILocation(line: 445, column: 3, scope: !4669)
!4729 = !DILocation(line: 447, column: 20, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4669, file: !4054, line: 447, column: 7)
!4731 = !DILocation(line: 447, column: 18, scope: !4730)
!4732 = !DILocation(line: 447, column: 7, scope: !4669)
!4733 = !DILocation(line: 448, column: 27, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !4054, line: 447, column: 39)
!4735 = !DILocation(line: 448, column: 4, scope: !4734)
!4736 = !DILocation(line: 449, column: 4, scope: !4734)
!4737 = !DILocation(line: 450, column: 3, scope: !4734)
!4738 = !DILocation(line: 452, column: 3, scope: !4669)
!4739 = !DILocation(line: 453, column: 3, scope: !4669)
!4740 = !DILocation(line: 474, column: 15, scope: !4655)
!4741 = !DILocation(line: 476, column: 11, scope: !4677)
!4742 = !DILocation(line: 476, column: 6, scope: !4655)
!4743 = !DILocation(line: 477, column: 42, scope: !4676)
!4744 = !DILocation(line: 477, column: 22, scope: !4676)
!4745 = !DILocation(line: 477, column: 60, scope: !4676)
!4746 = !DILocation(line: 0, scope: !4676)
!4747 = !DILocation(line: 479, column: 21, scope: !4676)
!4748 = !DILocation(line: 479, column: 3, scope: !4676)
!4749 = !DILocation(line: 480, column: 3, scope: !4676)
!4750 = !DILocation(line: 481, column: 2, scope: !4676)
!4751 = !DILocation(line: 483, column: 1, scope: !4655)
!4752 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2624, file: !2624, line: 245, type: !4753, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4755)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!315, !2637, !4199}
!4755 = !{!4756, !4757}
!4756 = !DILocalVariable(name: "h", arg: 1, scope: !4752, file: !2624, line: 245, type: !2637)
!4757 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4752, file: !2624, line: 245, type: !4199)
!4758 = !DILocation(line: 0, scope: !4752)
!4759 = !DILocation(line: 247, column: 20, scope: !4752)
!4760 = !DILocation(line: 247, column: 33, scope: !4752)
!4761 = !DILocation(line: 247, column: 2, scope: !4752)
!4762 = distinct !DISubprogram(name: "sys_heap_init", scope: !4054, file: !4054, line: 485, type: !4763, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4765)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{null, !4057, !117, !315}
!4765 = !{!4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775}
!4766 = !DILocalVariable(name: "heap", arg: 1, scope: !4762, file: !4054, line: 485, type: !4057)
!4767 = !DILocalVariable(name: "mem", arg: 2, scope: !4762, file: !4054, line: 485, type: !117)
!4768 = !DILocalVariable(name: "bytes", arg: 3, scope: !4762, file: !4054, line: 485, type: !315)
!4769 = !DILocalVariable(name: "addr", scope: !4762, file: !4054, line: 502, type: !22)
!4770 = !DILocalVariable(name: "end", scope: !4762, file: !4054, line: 503, type: !22)
!4771 = !DILocalVariable(name: "heap_sz", scope: !4762, file: !4054, line: 504, type: !4199)
!4772 = !DILocalVariable(name: "h", scope: !4762, file: !4054, line: 509, type: !2637)
!4773 = !DILocalVariable(name: "nb_buckets", scope: !4762, file: !4054, line: 520, type: !118)
!4774 = !DILocalVariable(name: "chunk0_size", scope: !4762, file: !4054, line: 521, type: !4199)
!4775 = !DILocalVariable(name: "i", scope: !4776, file: !4054, line: 526, type: !118)
!4776 = distinct !DILexicalBlock(scope: !4762, file: !4054, line: 526, column: 2)
!4777 = !DILocation(line: 0, scope: !4762)
!4778 = !DILocation(line: 491, column: 3, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !4054, line: 491, column: 3)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !4054, line: 491, column: 3)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !4054, line: 489, column: 46)
!4782 = distinct !DILexicalBlock(scope: !4762, file: !4054, line: 489, column: 6)
!4783 = !DILocation(line: 491, column: 3, scope: !4780)
!4784 = !DILocation(line: 491, column: 3, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !4054, line: 491, column: 3)
!4786 = !DILocation(line: 498, column: 2, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !4054, line: 498, column: 2)
!4788 = distinct !DILexicalBlock(scope: !4762, file: !4054, line: 498, column: 2)
!4789 = !DILocation(line: 498, column: 2, scope: !4788)
!4790 = !DILocation(line: 498, column: 2, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !4054, line: 498, column: 2)
!4792 = !DILocation(line: 499, column: 8, scope: !4762)
!4793 = !DILocation(line: 502, column: 19, scope: !4762)
!4794 = !DILocation(line: 503, column: 18, scope: !4762)
!4795 = !DILocation(line: 504, column: 27, scope: !4762)
!4796 = !DILocation(line: 504, column: 35, scope: !4762)
!4797 = !DILocation(line: 507, column: 2, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !4054, line: 507, column: 2)
!4799 = distinct !DILexicalBlock(scope: !4762, file: !4054, line: 507, column: 2)
!4800 = !DILocation(line: 507, column: 2, scope: !4799)
!4801 = !DILocation(line: 507, column: 2, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4798, file: !4054, line: 507, column: 2)
!4803 = !DILocation(line: 509, column: 21, scope: !4762)
!4804 = !DILocation(line: 510, column: 8, scope: !4762)
!4805 = !DILocation(line: 510, column: 13, scope: !4762)
!4806 = !DILocation(line: 511, column: 5, scope: !4762)
!4807 = !DILocation(line: 511, column: 15, scope: !4762)
!4808 = !DILocation(line: 512, column: 5, scope: !4762)
!4809 = !DILocation(line: 512, column: 19, scope: !4762)
!4810 = !DILocation(line: 520, column: 19, scope: !4762)
!4811 = !DILocation(line: 522, column: 21, scope: !4762)
!4812 = !DILocation(line: 521, column: 56, scope: !4762)
!4813 = !DILocation(line: 521, column: 26, scope: !4762)
!4814 = !DILocation(line: 524, column: 2, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !4054, line: 524, column: 2)
!4816 = distinct !DILexicalBlock(scope: !4762, file: !4054, line: 524, column: 2)
!4817 = !DILocation(line: 524, column: 2, scope: !4816)
!4818 = !DILocation(line: 0, scope: !4776)
!4819 = !DILocation(line: 526, column: 20, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4776, file: !4054, line: 526, column: 2)
!4821 = !DILocation(line: 526, column: 2, scope: !4776)
!4822 = !DILocation(line: 524, column: 2, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4815, file: !4054, line: 524, column: 2)
!4824 = !DILocation(line: 531, column: 2, scope: !4762)
!4825 = !DILocation(line: 532, column: 2, scope: !4762)
!4826 = !DILocation(line: 533, column: 2, scope: !4762)
!4827 = !DILocation(line: 536, column: 41, scope: !4762)
!4828 = !DILocation(line: 536, column: 2, scope: !4762)
!4829 = !DILocation(line: 537, column: 2, scope: !4762)
!4830 = !DILocation(line: 540, column: 2, scope: !4762)
!4831 = !DILocation(line: 541, column: 2, scope: !4762)
!4832 = !DILocation(line: 542, column: 2, scope: !4762)
!4833 = !DILocation(line: 544, column: 2, scope: !4762)
!4834 = !DILocation(line: 545, column: 1, scope: !4762)
!4835 = !DILocation(line: 527, column: 17, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4820, file: !4054, line: 526, column: 39)
!4837 = !DILocation(line: 527, column: 22, scope: !4836)
!4838 = !DILocation(line: 526, column: 35, scope: !4820)
!4839 = distinct !{!4839, !4821, !4840}
!4840 = !DILocation(line: 528, column: 2, scope: !4776)
!4841 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2657, file: !2657, line: 1338, type: !4842, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4850)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!118, !3788, !117, !133, !4844, !156}
!4844 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3754, line: 99, baseType: !4845)
!4845 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3754, line: 40, baseType: !4846)
!4846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2657, baseType: !4847)
!4847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4848)
!4848 = !{!4849}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4847, file: !2657, baseType: !117, size: 32)
!4850 = !{!4851, !4852, !4853, !4854, !4855, !4856, !4860, !4861, !4862, !4864, !4869, !4914, !4917, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4929, !4930, !4931, !4935, !4938, !4940, !4943, !4944, !4945, !4950, !4956, !4959, !4963, !4969, !4973, !4976, !4978, !4981}
!4851 = !DILocalVariable(name: "out", arg: 1, scope: !4841, file: !2657, line: 1338, type: !3788)
!4852 = !DILocalVariable(name: "ctx", arg: 2, scope: !4841, file: !2657, line: 1338, type: !117)
!4853 = !DILocalVariable(name: "fp", arg: 3, scope: !4841, file: !2657, line: 1338, type: !133)
!4854 = !DILocalVariable(name: "ap", arg: 4, scope: !4841, file: !2657, line: 1339, type: !4844)
!4855 = !DILocalVariable(name: "flags", arg: 5, scope: !4841, file: !2657, line: 1339, type: !156)
!4856 = !DILocalVariable(name: "buf", scope: !4841, file: !2657, line: 1341, type: !4857)
!4857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 176, elements: !4858)
!4858 = !{!4859}
!4859 = !DISubrange(count: 22)
!4860 = !DILocalVariable(name: "count", scope: !4841, file: !2657, line: 1342, type: !315)
!4861 = !DILocalVariable(name: "sint", scope: !4841, file: !2657, line: 1343, type: !2676)
!4862 = !DILocalVariable(name: "tagged_ap", scope: !4841, file: !2657, line: 1345, type: !4863)
!4863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4864 = !DILocalVariable(name: "rc", scope: !4865, file: !2657, line: 1377, type: !118)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2657, line: 1377, column: 4)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !2657, line: 1376, column: 19)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1376, column: 7)
!4868 = distinct !DILexicalBlock(scope: !4841, file: !2657, line: 1375, column: 19)
!4869 = !DILocalVariable(name: "state", scope: !4868, file: !2657, line: 1395, type: !4870)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4841, file: !2657, line: 1392, size: 192, elements: !4871)
!4871 = !{!4872, !4882}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4870, file: !2657, line: 1393, baseType: !4873, size: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2657, line: 166, size: 64, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4879, !4881}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4873, file: !2657, line: 168, baseType: !2676, size: 64)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4873, file: !2657, line: 171, baseType: !2679, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4873, file: !2657, line: 174, baseType: !4878, size: 64)
!4878 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4873, file: !2657, line: 177, baseType: !4880, size: 64)
!4880 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4873, file: !2657, line: 180, baseType: !117, size: 32)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4870, file: !2657, line: 1394, baseType: !4883, size: 96, offset: 64)
!4883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2657, line: 189, size: 96, elements: !4884)
!4884 = !{!4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4909}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4883, file: !2657, line: 191, baseType: !146, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4883, file: !2657, line: 194, baseType: !146, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4883, file: !2657, line: 197, baseType: !146, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4883, file: !2657, line: 200, baseType: !146, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4883, file: !2657, line: 203, baseType: !146, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4883, file: !2657, line: 206, baseType: !146, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4883, file: !2657, line: 209, baseType: !146, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4883, file: !2657, line: 212, baseType: !146, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4883, file: !2657, line: 219, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4883, file: !2657, line: 222, baseType: !146, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4883, file: !2657, line: 229, baseType: !146, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4883, file: !2657, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4883, file: !2657, line: 238, baseType: !146, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4883, file: !2657, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4883, file: !2657, line: 244, baseType: !146, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4883, file: !2657, line: 247, baseType: !146, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4883, file: !2657, line: 252, baseType: !146, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4883, file: !2657, line: 257, baseType: !146, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4883, file: !2657, line: 260, baseType: !144, size: 8, offset: 24)
!4904 = !DIDerivedType(tag: DW_TAG_member, scope: !4883, file: !2657, line: 262, baseType: !4905, size: 32, offset: 32)
!4905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4883, file: !2657, line: 262, size: 32, elements: !4906)
!4906 = !{!4907, !4908}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4905, file: !2657, line: 267, baseType: !118, size: 32)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4905, file: !2657, line: 289, baseType: !118, size: 32)
!4909 = !DIDerivedType(tag: DW_TAG_member, scope: !4883, file: !2657, line: 292, baseType: !4910, size: 32, offset: 64)
!4910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4883, file: !2657, line: 292, size: 32, elements: !4911)
!4911 = !{!4912, !4913}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4910, file: !2657, line: 297, baseType: !118, size: 32)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4910, file: !2657, line: 306, baseType: !118, size: 32)
!4914 = !DILocalVariable(name: "conv", scope: !4868, file: !2657, line: 1400, type: !4915)
!4915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4916)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 32)
!4917 = !DILocalVariable(name: "value", scope: !4868, file: !2657, line: 1401, type: !4918)
!4918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4919)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 32)
!4920 = !DILocalVariable(name: "sp", scope: !4868, file: !2657, line: 1402, type: !133)
!4921 = !DILocalVariable(name: "width", scope: !4868, file: !2657, line: 1403, type: !118)
!4922 = !DILocalVariable(name: "precision", scope: !4868, file: !2657, line: 1404, type: !118)
!4923 = !DILocalVariable(name: "bps", scope: !4868, file: !2657, line: 1405, type: !133)
!4924 = !DILocalVariable(name: "bpe", scope: !4868, file: !2657, line: 1406, type: !133)
!4925 = !DILocalVariable(name: "sign", scope: !4868, file: !2657, line: 1407, type: !135)
!4926 = !DILocalVariable(name: "arg", scope: !4927, file: !2657, line: 1432, type: !118)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !2657, line: 1431, column: 24)
!4928 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1431, column: 7)
!4929 = !DILocalVariable(name: "specifier_cat", scope: !4868, file: !2657, line: 1468, type: !2656)
!4930 = !DILocalVariable(name: "length_mod", scope: !4868, file: !2657, line: 1470, type: !2664)
!4931 = !DILocalVariable(name: "rc", scope: !4932, file: !2657, line: 1575, type: !118)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2657, line: 1575, column: 4)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !2657, line: 1574, column: 43)
!4934 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1574, column: 7)
!4935 = !DILocalVariable(name: "rc", scope: !4936, file: !2657, line: 1584, type: !118)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1584, column: 4)
!4937 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1582, column: 28)
!4938 = !DILocalVariable(name: "len", scope: !4939, file: !2657, line: 1589, type: !315)
!4939 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1586, column: 13)
!4940 = !DILocalVariable(name: "len", scope: !4941, file: !2657, line: 1641, type: !315)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2657, line: 1640, column: 24)
!4942 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1640, column: 8)
!4943 = !DILocalVariable(name: "nj_len", scope: !4868, file: !2657, line: 1722, type: !315)
!4944 = !DILocalVariable(name: "pad_len", scope: !4868, file: !2657, line: 1723, type: !118)
!4945 = !DILocalVariable(name: "pad", scope: !4946, file: !2657, line: 1751, type: !135)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !2657, line: 1750, column: 26)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !2657, line: 1750, column: 8)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !2657, line: 1747, column: 18)
!4949 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1747, column: 7)
!4950 = !DILocalVariable(name: "rc", scope: !4951, file: !2657, line: 1758, type: !118)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !2657, line: 1758, column: 7)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !2657, line: 1757, column: 21)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !2657, line: 1757, column: 10)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !2657, line: 1756, column: 26)
!4955 = distinct !DILexicalBlock(scope: !4946, file: !2657, line: 1756, column: 9)
!4956 = !DILocalVariable(name: "rc", scope: !4957, file: !2657, line: 1765, type: !118)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !2657, line: 1765, column: 6)
!4958 = distinct !DILexicalBlock(scope: !4946, file: !2657, line: 1764, column: 25)
!4959 = !DILocalVariable(name: "rc", scope: !4960, file: !2657, line: 1774, type: !118)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !2657, line: 1774, column: 4)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !2657, line: 1773, column: 18)
!4962 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1773, column: 7)
!4963 = !DILocalVariable(name: "rc", scope: !4964, file: !2657, line: 1819, type: !118)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !2657, line: 1819, column: 5)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !2657, line: 1818, column: 44)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !2657, line: 1818, column: 8)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !2657, line: 1817, column: 10)
!4968 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1777, column: 7)
!4969 = !DILocalVariable(name: "rc", scope: !4970, file: !2657, line: 1823, type: !118)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !2657, line: 1823, column: 5)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !2657, line: 1822, column: 26)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !2657, line: 1822, column: 8)
!4973 = !DILocalVariable(name: "rc", scope: !4974, file: !2657, line: 1828, type: !118)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !2657, line: 1828, column: 5)
!4975 = distinct !DILexicalBlock(scope: !4967, file: !2657, line: 1827, column: 26)
!4976 = !DILocalVariable(name: "rc", scope: !4977, file: !2657, line: 1831, type: !118)
!4977 = distinct !DILexicalBlock(scope: !4967, file: !2657, line: 1831, column: 4)
!4978 = !DILocalVariable(name: "rc", scope: !4979, file: !2657, line: 1836, type: !118)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !2657, line: 1836, column: 4)
!4980 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1835, column: 21)
!4981 = !DILabel(scope: !4937, name: "prec_int_pad0", file: !2657, line: 1634)
!4982 = !DILocation(line: 0, scope: !4841)
!4983 = !DILocation(line: 1341, column: 2, scope: !4841)
!4984 = !DILocation(line: 1341, column: 7, scope: !4841)
!4985 = !DILocation(line: 1375, column: 2, scope: !4841)
!4986 = !DILocation(line: 1342, column: 9, scope: !4841)
!4987 = !DILocation(line: 1375, column: 9, scope: !4841)
!4988 = !DILocation(line: 1377, column: 4, scope: !4865)
!4989 = !DILocation(line: 0, scope: !4865)
!4990 = !DILocation(line: 1377, column: 4, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4865, file: !2657, line: 1377, column: 4)
!4992 = distinct !{!4992, !4985, !4993}
!4993 = !DILocation(line: 1839, column: 2, scope: !4841)
!4994 = !DILocation(line: 1392, column: 3, scope: !4868)
!4995 = !DILocation(line: 1395, column: 5, scope: !4868)
!4996 = !DILocation(line: 0, scope: !4868)
!4997 = !DILocation(line: 1409, column: 8, scope: !4868)
!4998 = !DILocation(line: 1414, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1414, column: 7)
!5000 = !DILocation(line: 1414, column: 7, scope: !4868)
!5001 = !DILocation(line: 1415, column: 12, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4999, file: !2657, line: 1414, column: 25)
!5003 = !DILocation(line: 1417, column: 14, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5002, file: !2657, line: 1417, column: 8)
!5005 = !DILocation(line: 1417, column: 8, scope: !5002)
!5006 = !DILocation(line: 1418, column: 21, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5004, file: !2657, line: 1417, column: 19)
!5008 = !DILocation(line: 1419, column: 13, scope: !5007)
!5009 = !DILocation(line: 1420, column: 4, scope: !5007)
!5010 = !DILocation(line: 1421, column: 20, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4999, file: !2657, line: 1421, column: 14)
!5012 = !DILocation(line: 1421, column: 14, scope: !4999)
!5013 = !DILocation(line: 1431, column: 13, scope: !4928)
!5014 = !DILocation(line: 1431, column: 7, scope: !4868)
!5015 = !DILocation(line: 1432, column: 14, scope: !4927)
!5016 = !DILocation(line: 0, scope: !4927)
!5017 = !DILocation(line: 1434, column: 12, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4927, file: !2657, line: 1434, column: 8)
!5019 = !DILocation(line: 1434, column: 8, scope: !4927)
!5020 = !DILocation(line: 1435, column: 24, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5018, file: !2657, line: 1434, column: 17)
!5022 = !DILocation(line: 1436, column: 4, scope: !5021)
!5023 = !DILocation(line: 1439, column: 20, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4928, file: !2657, line: 1439, column: 14)
!5025 = !DILocation(line: 1439, column: 14, scope: !4928)
!5026 = !DILocation(line: 1469, column: 37, scope: !4868)
!5027 = !DILocation(line: 1448, column: 20, scope: !4868)
!5028 = !DILocation(line: 1449, column: 22, scope: !4868)
!5029 = !DILocation(line: 1471, column: 34, scope: !4868)
!5030 = !DILocation(line: 1478, column: 7, scope: !4868)
!5031 = !DILocation(line: 1479, column: 4, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !2657, line: 1478, column: 40)
!5033 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1478, column: 7)
!5034 = !DILocation(line: 1484, column: 19, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5032, file: !2657, line: 1479, column: 24)
!5036 = !DILocation(line: 1484, column: 17, scope: !5035)
!5037 = !DILocation(line: 1485, column: 5, scope: !5035)
!5038 = !DILocation(line: 1492, column: 20, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5040, file: !2657, line: 1491, column: 12)
!5040 = distinct !DILexicalBlock(scope: !5035, file: !2657, line: 1487, column: 9)
!5041 = !DILocation(line: 1492, column: 18, scope: !5039)
!5042 = !DILocation(line: 1494, column: 5, scope: !5035)
!5043 = !DILocation(line: 1497, column: 23, scope: !5035)
!5044 = !DILocation(line: 1496, column: 17, scope: !5035)
!5045 = !DILocation(line: 1498, column: 5, scope: !5035)
!5046 = !DILocation(line: 1501, column: 23, scope: !5035)
!5047 = !DILocation(line: 1500, column: 17, scope: !5035)
!5048 = !DILocation(line: 1502, column: 5, scope: !5035)
!5049 = !DILocation(line: 1513, column: 23, scope: !5035)
!5050 = !DILocation(line: 1513, column: 6, scope: !5035)
!5051 = !DILocation(line: 1512, column: 17, scope: !5035)
!5052 = !DILocation(line: 1514, column: 5, scope: !5035)
!5053 = !DILocation(line: 0, scope: !5035)
!5054 = !DILocation(line: 1516, column: 8, scope: !5032)
!5055 = !DILocation(line: 1517, column: 19, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !2657, line: 1516, column: 33)
!5057 = distinct !DILexicalBlock(scope: !5032, file: !2657, line: 1516, column: 8)
!5058 = !DILocation(line: 1517, column: 17, scope: !5056)
!5059 = !DILocation(line: 1518, column: 4, scope: !5056)
!5060 = !DILocation(line: 1519, column: 19, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !2657, line: 1518, column: 39)
!5062 = distinct !DILexicalBlock(scope: !5057, file: !2657, line: 1518, column: 15)
!5063 = !DILocation(line: 1519, column: 17, scope: !5061)
!5064 = !DILocation(line: 1520, column: 4, scope: !5061)
!5065 = !DILocation(line: 1522, column: 4, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !2657, line: 1521, column: 47)
!5067 = distinct !DILexicalBlock(scope: !5033, file: !2657, line: 1521, column: 14)
!5068 = !DILocation(line: 1527, column: 19, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5066, file: !2657, line: 1522, column: 24)
!5070 = !DILocation(line: 1527, column: 17, scope: !5069)
!5071 = !DILocation(line: 1528, column: 5, scope: !5069)
!5072 = !DILocation(line: 0, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5069, file: !2657, line: 1530, column: 9)
!5074 = !DILocation(line: 1540, column: 23, scope: !5069)
!5075 = !DILocation(line: 1539, column: 17, scope: !5069)
!5076 = !DILocation(line: 1542, column: 5, scope: !5069)
!5077 = !DILocation(line: 1545, column: 23, scope: !5069)
!5078 = !DILocation(line: 1544, column: 17, scope: !5069)
!5079 = !DILocation(line: 1547, column: 5, scope: !5069)
!5080 = !DILocation(line: 1551, column: 23, scope: !5069)
!5081 = !DILocation(line: 1551, column: 6, scope: !5069)
!5082 = !DILocation(line: 1550, column: 17, scope: !5069)
!5083 = !DILocation(line: 1552, column: 5, scope: !5069)
!5084 = !DILocation(line: 0, scope: !5069)
!5085 = !DILocation(line: 1554, column: 8, scope: !5066)
!5086 = !DILocation(line: 1555, column: 19, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !2657, line: 1554, column: 33)
!5088 = distinct !DILexicalBlock(scope: !5066, file: !2657, line: 1554, column: 8)
!5089 = !DILocation(line: 1555, column: 17, scope: !5087)
!5090 = !DILocation(line: 1556, column: 4, scope: !5087)
!5091 = !DILocation(line: 1557, column: 19, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !2657, line: 1556, column: 39)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !2657, line: 1556, column: 15)
!5094 = !DILocation(line: 1557, column: 17, scope: !5092)
!5095 = !DILocation(line: 1558, column: 4, scope: !5092)
!5096 = !DILocation(line: 0, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !2657, line: 1560, column: 8)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !2657, line: 1559, column: 45)
!5099 = distinct !DILexicalBlock(scope: !5067, file: !2657, line: 1559, column: 14)
!5100 = !DILocation(line: 1566, column: 17, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !2657, line: 1565, column: 46)
!5102 = distinct !DILexicalBlock(scope: !5099, file: !2657, line: 1565, column: 14)
!5103 = !DILocation(line: 1566, column: 15, scope: !5101)
!5104 = !DILocation(line: 1567, column: 3, scope: !5101)
!5105 = !DILocation(line: 1574, column: 21, scope: !4934)
!5106 = !DILocation(line: 1575, column: 4, scope: !4932)
!5107 = !DILocation(line: 0, scope: !4932)
!5108 = !DILocation(line: 1575, column: 4, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !4932, file: !2657, line: 1575, column: 4)
!5110 = !DILocation(line: 1582, column: 17, scope: !4868)
!5111 = !DILocation(line: 1582, column: 3, scope: !4868)
!5112 = !DILocation(line: 1584, column: 4, scope: !4936)
!5113 = !DILocation(line: 0, scope: !4936)
!5114 = !DILocation(line: 1584, column: 4, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !4936, file: !2657, line: 1584, column: 4)
!5116 = !DILocation(line: 1587, column: 31, scope: !4939)
!5117 = !DILocation(line: 1591, column: 18, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !4939, file: !2657, line: 1591, column: 8)
!5119 = !DILocation(line: 1591, column: 8, scope: !4939)
!5120 = !DILocation(line: 1592, column: 11, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5118, file: !2657, line: 1591, column: 24)
!5122 = !DILocation(line: 0, scope: !4939)
!5123 = !DILocation(line: 1593, column: 4, scope: !5121)
!5124 = !DILocation(line: 1594, column: 11, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5118, file: !2657, line: 1593, column: 11)
!5126 = !DILocation(line: 1604, column: 51, scope: !4937)
!5127 = !DILocation(line: 1604, column: 13, scope: !4937)
!5128 = !DILocation(line: 1604, column: 11, scope: !4937)
!5129 = !DILocation(line: 1606, column: 4, scope: !4937)
!5130 = !DILocation(line: 1609, column: 14, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1609, column: 8)
!5132 = !DILocation(line: 1609, column: 8, scope: !4937)
!5133 = !DILocation(line: 1619, column: 18, scope: !4937)
!5134 = !DILocation(line: 1620, column: 13, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1620, column: 8)
!5136 = !DILocation(line: 1620, column: 8, scope: !4937)
!5137 = !DILocation(line: 1622, column: 36, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !2657, line: 1620, column: 18)
!5139 = !DILocation(line: 1622, column: 17, scope: !5138)
!5140 = !DILocation(line: 1623, column: 4, scope: !5138)
!5141 = !DILocation(line: 1632, column: 29, scope: !4937)
!5142 = !DILocation(line: 1632, column: 10, scope: !4937)
!5143 = !DILocation(line: 1632, column: 4, scope: !4937)
!5144 = !DILocation(line: 1407, column: 8, scope: !4868)
!5145 = !DILocation(line: 0, scope: !4937)
!5146 = !DILocation(line: 1634, column: 3, scope: !4937)
!5147 = !DILocation(line: 1640, column: 18, scope: !4942)
!5148 = !DILocation(line: 1640, column: 8, scope: !4937)
!5149 = !DILocation(line: 1729, column: 13, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1729, column: 7)
!5151 = !DILocation(line: 1641, column: 22, scope: !4941)
!5152 = !DILocation(line: 0, scope: !4941)
!5153 = !DILocation(line: 1646, column: 21, scope: !4941)
!5154 = !DILocation(line: 1649, column: 13, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !4941, file: !2657, line: 1649, column: 9)
!5156 = !DILocation(line: 1649, column: 9, scope: !4941)
!5157 = !DILocation(line: 1650, column: 35, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5155, file: !2657, line: 1649, column: 34)
!5159 = !DILocation(line: 1650, column: 23, scope: !5158)
!5160 = !DILocation(line: 1651, column: 5, scope: !5158)
!5161 = !DILocation(line: 1660, column: 15, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1660, column: 8)
!5163 = !DILocation(line: 1660, column: 19, scope: !5162)
!5164 = !DILocation(line: 1660, column: 8, scope: !4937)
!5165 = !DILocation(line: 1661, column: 23, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5162, file: !2657, line: 1660, column: 28)
!5167 = !DILocation(line: 1661, column: 11, scope: !5166)
!5168 = !DILocation(line: 1665, column: 22, scope: !5166)
!5169 = !DILocation(line: 1666, column: 21, scope: !5166)
!5170 = !DILocation(line: 1668, column: 5, scope: !5166)
!5171 = !DILocation(line: 1677, column: 30, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !2657, line: 1676, column: 49)
!5173 = distinct !DILexicalBlock(scope: !4937, file: !2657, line: 1676, column: 8)
!5174 = !DILocation(line: 1677, column: 5, scope: !5172)
!5175 = !DILocation(line: 1680, column: 4, scope: !4937)
!5176 = !DILocation(line: 0, scope: !5118)
!5177 = !DILocation(line: 1597, column: 14, scope: !4939)
!5178 = !DILocation(line: 1699, column: 11, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1699, column: 7)
!5180 = !DILocation(line: 1699, column: 7, scope: !4868)
!5181 = !DILocation(line: 1725, column: 7, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1725, column: 7)
!5183 = !DILocation(line: 1725, column: 12, scope: !5182)
!5184 = !DILocation(line: 1747, column: 13, scope: !4949)
!5185 = !DILocation(line: 1747, column: 7, scope: !4868)
!5186 = !DILocation(line: 1722, column: 24, scope: !4868)
!5187 = !DILocation(line: 1725, column: 7, scope: !4868)
!5188 = !DILocation(line: 1729, column: 7, scope: !4868)
!5189 = !DILocation(line: 1736, column: 13, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 1736, column: 7)
!5191 = !DILocation(line: 1735, column: 19, scope: !4868)
!5192 = !DILocation(line: 1736, column: 7, scope: !4868)
!5193 = !DILocation(line: 1748, column: 10, scope: !4948)
!5194 = !DILocation(line: 1750, column: 15, scope: !4947)
!5195 = !DILocation(line: 1750, column: 8, scope: !4948)
!5196 = !DILocation(line: 0, scope: !4946)
!5197 = !DILocation(line: 1756, column: 15, scope: !4955)
!5198 = !DILocation(line: 1756, column: 9, scope: !4946)
!5199 = !DILocation(line: 1758, column: 7, scope: !4951)
!5200 = !DILocation(line: 0, scope: !4951)
!5201 = !DILocation(line: 1758, column: 7, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !4951, file: !2657, line: 1758, column: 7)
!5203 = !DILocation(line: 1764, column: 5, scope: !4946)
!5204 = !DILocation(line: 0, scope: !4948)
!5205 = !DILocation(line: 1764, column: 20, scope: !4946)
!5206 = !DILocation(line: 1764, column: 17, scope: !4946)
!5207 = !DILocation(line: 1765, column: 6, scope: !4957)
!5208 = !DILocation(line: 0, scope: !4957)
!5209 = !DILocation(line: 1765, column: 6, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !4957, file: !2657, line: 1765, column: 6)
!5211 = distinct !{!5211, !5203, !5212}
!5212 = !DILocation(line: 1766, column: 5, scope: !4946)
!5213 = !DILocation(line: 1773, column: 12, scope: !4962)
!5214 = !DILocation(line: 1773, column: 7, scope: !4868)
!5215 = !DILocation(line: 1773, column: 7, scope: !4962)
!5216 = !DILocation(line: 1774, column: 4, scope: !4960)
!5217 = !DILocation(line: 0, scope: !4960)
!5218 = !DILocation(line: 1774, column: 4, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !4960, file: !2657, line: 1774, column: 4)
!5220 = !DILocation(line: 1818, column: 8, scope: !4966)
!5221 = !DILocation(line: 1818, column: 27, scope: !4966)
!5222 = !DILocation(line: 1818, column: 25, scope: !4966)
!5223 = !DILocation(line: 1818, column: 8, scope: !4967)
!5224 = !DILocation(line: 1819, column: 5, scope: !4964)
!5225 = !DILocation(line: 0, scope: !4964)
!5226 = !DILocation(line: 1819, column: 5, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !4964, file: !2657, line: 1819, column: 5)
!5228 = !DILocation(line: 1822, column: 14, scope: !4972)
!5229 = !DILocation(line: 1822, column: 8, scope: !4967)
!5230 = !DILocation(line: 1823, column: 5, scope: !4970)
!5231 = !DILocation(line: 0, scope: !4970)
!5232 = !DILocation(line: 1823, column: 5, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !4970, file: !2657, line: 1823, column: 5)
!5234 = !DILocation(line: 1826, column: 20, scope: !4967)
!5235 = !DILocation(line: 1827, column: 4, scope: !4967)
!5236 = !DILocation(line: 0, scope: !4967)
!5237 = !DILocation(line: 1827, column: 21, scope: !4967)
!5238 = !DILocation(line: 1827, column: 18, scope: !4967)
!5239 = !DILocation(line: 1828, column: 5, scope: !4974)
!5240 = !DILocation(line: 0, scope: !4974)
!5241 = !DILocation(line: 1828, column: 5, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !4974, file: !2657, line: 1828, column: 5)
!5243 = distinct !{!5243, !5235, !5244}
!5244 = !DILocation(line: 1829, column: 4, scope: !4967)
!5245 = !DILocation(line: 1831, column: 4, scope: !4977)
!5246 = !DILocation(line: 0, scope: !4977)
!5247 = !DILocation(line: 1831, column: 4, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !4977, file: !2657, line: 1831, column: 4)
!5249 = !DILocation(line: 1835, column: 16, scope: !4868)
!5250 = !DILocation(line: 1835, column: 3, scope: !4868)
!5251 = !DILocation(line: 1836, column: 4, scope: !4979)
!5252 = !DILocation(line: 0, scope: !4979)
!5253 = !DILocation(line: 1836, column: 4, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !4979, file: !2657, line: 1836, column: 4)
!5255 = !DILocation(line: 1837, column: 4, scope: !4980)
!5256 = distinct !{!5256, !5250, !5257}
!5257 = !DILocation(line: 1838, column: 3, scope: !4868)
!5258 = !DILocation(line: 1844, column: 1, scope: !4841)
!5259 = distinct !DISubprogram(name: "extract_conversion", scope: !2657, file: !2657, line: 642, type: !5260, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5262)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{!133, !4916, !133}
!5262 = !{!5263, !5264}
!5263 = !DILocalVariable(name: "conv", arg: 1, scope: !5259, file: !2657, line: 642, type: !4916)
!5264 = !DILocalVariable(name: "sp", arg: 2, scope: !5259, file: !2657, line: 643, type: !133)
!5265 = !DILocation(line: 0, scope: !5259)
!5266 = !DILocation(line: 645, column: 10, scope: !5259)
!5267 = !DILocation(line: 653, column: 2, scope: !5259)
!5268 = !DILocation(line: 654, column: 6, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5259, file: !2657, line: 654, column: 6)
!5270 = !DILocation(line: 654, column: 10, scope: !5269)
!5271 = !DILocation(line: 654, column: 6, scope: !5259)
!5272 = !DILocation(line: 655, column: 24, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !2657, line: 654, column: 18)
!5274 = !DILocation(line: 655, column: 19, scope: !5273)
!5275 = !DILocation(line: 656, column: 3, scope: !5273)
!5276 = !DILocation(line: 659, column: 7, scope: !5259)
!5277 = !DILocation(line: 660, column: 7, scope: !5259)
!5278 = !DILocation(line: 661, column: 7, scope: !5259)
!5279 = !DILocation(line: 662, column: 7, scope: !5259)
!5280 = !DILocation(line: 663, column: 7, scope: !5259)
!5281 = !DILocation(line: 665, column: 2, scope: !5259)
!5282 = !DILocation(line: 666, column: 1, scope: !5259)
!5283 = distinct !DISubprogram(name: "outs", scope: !2657, file: !2657, line: 1319, type: !5284, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5286)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{!118, !3788, !117, !133, !133}
!5286 = !{!5287, !5288, !5289, !5290, !5291, !5292}
!5287 = !DILocalVariable(name: "out", arg: 1, scope: !5283, file: !2657, line: 1319, type: !3788)
!5288 = !DILocalVariable(name: "ctx", arg: 2, scope: !5283, file: !2657, line: 1320, type: !117)
!5289 = !DILocalVariable(name: "sp", arg: 3, scope: !5283, file: !2657, line: 1321, type: !133)
!5290 = !DILocalVariable(name: "ep", arg: 4, scope: !5283, file: !2657, line: 1322, type: !133)
!5291 = !DILocalVariable(name: "count", scope: !5283, file: !2657, line: 1324, type: !315)
!5292 = !DILocalVariable(name: "rc", scope: !5293, file: !2657, line: 1327, type: !118)
!5293 = distinct !DILexicalBlock(scope: !5283, file: !2657, line: 1326, column: 45)
!5294 = !DILocation(line: 0, scope: !5283)
!5295 = !DILocation(line: 1326, column: 2, scope: !5283)
!5296 = !DILocation(line: 1324, column: 9, scope: !5283)
!5297 = !DILocation(line: 1326, column: 13, scope: !5283)
!5298 = !DILocation(line: 1326, column: 19, scope: !5283)
!5299 = !DILocation(line: 1327, column: 21, scope: !5293)
!5300 = !DILocation(line: 1326, column: 36, scope: !5283)
!5301 = !DILocation(line: 1326, column: 39, scope: !5283)
!5302 = !DILocation(line: 1327, column: 24, scope: !5293)
!5303 = !DILocation(line: 1327, column: 16, scope: !5293)
!5304 = !DILocation(line: 1327, column: 12, scope: !5293)
!5305 = !DILocation(line: 0, scope: !5293)
!5306 = !DILocation(line: 1329, column: 10, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5293, file: !2657, line: 1329, column: 7)
!5308 = !DILocation(line: 1329, column: 7, scope: !5293)
!5309 = distinct !{!5309, !5295, !5310}
!5310 = !DILocation(line: 1333, column: 2, scope: !5283)
!5311 = !DILocation(line: 1336, column: 1, scope: !5283)
!5312 = distinct !DISubprogram(name: "encode_uint", scope: !2657, file: !2657, line: 788, type: !5313, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5315)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{!1277, !2679, !4916, !1277, !133}
!5315 = !{!5316, !5317, !5318, !5319, !5320, !5321, !5323, !5324}
!5316 = !DILocalVariable(name: "value", arg: 1, scope: !5312, file: !2657, line: 788, type: !2679)
!5317 = !DILocalVariable(name: "conv", arg: 2, scope: !5312, file: !2657, line: 789, type: !4916)
!5318 = !DILocalVariable(name: "bps", arg: 3, scope: !5312, file: !2657, line: 790, type: !1277)
!5319 = !DILocalVariable(name: "bpe", arg: 4, scope: !5312, file: !2657, line: 791, type: !133)
!5320 = !DILocalVariable(name: "upcase", scope: !5312, file: !2657, line: 793, type: !146)
!5321 = !DILocalVariable(name: "radix", scope: !5312, file: !2657, line: 794, type: !5322)
!5322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5323 = !DILocalVariable(name: "bp", scope: !5312, file: !2657, line: 795, type: !1277)
!5324 = !DILocalVariable(name: "lsv", scope: !5325, file: !2657, line: 798, type: !32)
!5325 = distinct !DILexicalBlock(scope: !5312, file: !2657, line: 797, column: 5)
!5326 = !DILocation(line: 0, scope: !5312)
!5327 = !DILocation(line: 793, column: 35, scope: !5312)
!5328 = !DILocation(line: 793, column: 24, scope: !5312)
!5329 = !DILocation(line: 793, column: 16, scope: !5312)
!5330 = !DILocation(line: 794, column: 29, scope: !5312)
!5331 = !DILocation(line: 795, column: 24, scope: !5312)
!5332 = !DILocation(line: 795, column: 17, scope: !5312)
!5333 = !DILocation(line: 797, column: 2, scope: !5312)
!5334 = !DILocation(line: 802, column: 9, scope: !5325)
!5335 = !DILocation(line: 798, column: 22, scope: !5325)
!5336 = !DILocation(line: 0, scope: !5325)
!5337 = !DILocation(line: 800, column: 16, scope: !5325)
!5338 = !DILocation(line: 800, column: 11, scope: !5325)
!5339 = !DILocation(line: 800, column: 4, scope: !5325)
!5340 = !DILocation(line: 800, column: 9, scope: !5325)
!5341 = !DILocation(line: 803, column: 18, scope: !5312)
!5342 = !DILocation(line: 803, column: 24, scope: !5312)
!5343 = !DILocation(line: 803, column: 2, scope: !5325)
!5344 = distinct !{!5344, !5333, !5345}
!5345 = !DILocation(line: 803, column: 37, scope: !5312)
!5346 = !DILocation(line: 808, column: 12, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5312, file: !2657, line: 808, column: 6)
!5348 = !DILocation(line: 808, column: 6, scope: !5312)
!5349 = !DILocation(line: 809, column: 7, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !2657, line: 808, column: 23)
!5351 = !DILocation(line: 813, column: 3, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !2657, line: 811, column: 27)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !2657, line: 811, column: 14)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !2657, line: 809, column: 7)
!5355 = !DILocation(line: 0, scope: !5354)
!5356 = !DILocation(line: 818, column: 2, scope: !5312)
!5357 = distinct !DISubprogram(name: "store_count", scope: !2657, file: !2657, line: 1280, type: !5358, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5362)
!5358 = !DISubroutineType(types: !5359)
!5359 = !{null, !5360, !117, !118}
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 32)
!5361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4883)
!5362 = !{!5363, !5364, !5365}
!5363 = !DILocalVariable(name: "conv", arg: 1, scope: !5357, file: !2657, line: 1280, type: !5360)
!5364 = !DILocalVariable(name: "dp", arg: 2, scope: !5357, file: !2657, line: 1281, type: !117)
!5365 = !DILocalVariable(name: "count", arg: 3, scope: !5357, file: !2657, line: 1282, type: !118)
!5366 = !DILocation(line: 0, scope: !5357)
!5367 = !DILocation(line: 1284, column: 38, scope: !5357)
!5368 = !DILocation(line: 1284, column: 2, scope: !5357)
!5369 = !DILocation(line: 1286, column: 4, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5357, file: !2657, line: 1284, column: 50)
!5371 = !DILocation(line: 1286, column: 14, scope: !5370)
!5372 = !DILocation(line: 1287, column: 3, scope: !5370)
!5373 = !DILocation(line: 1289, column: 24, scope: !5370)
!5374 = !DILocation(line: 1289, column: 22, scope: !5370)
!5375 = !DILocation(line: 1290, column: 3, scope: !5370)
!5376 = !DILocation(line: 1292, column: 18, scope: !5370)
!5377 = !DILocation(line: 1292, column: 4, scope: !5370)
!5378 = !DILocation(line: 1292, column: 16, scope: !5370)
!5379 = !DILocation(line: 1293, column: 3, scope: !5370)
!5380 = !DILocation(line: 1295, column: 4, scope: !5370)
!5381 = !DILocation(line: 1295, column: 15, scope: !5370)
!5382 = !DILocation(line: 1296, column: 3, scope: !5370)
!5383 = !DILocation(line: 1298, column: 22, scope: !5370)
!5384 = !DILocation(line: 1298, column: 4, scope: !5370)
!5385 = !DILocation(line: 1298, column: 20, scope: !5370)
!5386 = !DILocation(line: 1299, column: 3, scope: !5370)
!5387 = !DILocation(line: 1301, column: 21, scope: !5370)
!5388 = !DILocation(line: 1301, column: 4, scope: !5370)
!5389 = !DILocation(line: 1301, column: 19, scope: !5370)
!5390 = !DILocation(line: 1302, column: 3, scope: !5370)
!5391 = !DILocation(line: 1304, column: 4, scope: !5370)
!5392 = !DILocation(line: 1304, column: 17, scope: !5370)
!5393 = !DILocation(line: 1305, column: 3, scope: !5370)
!5394 = !DILocation(line: 1307, column: 4, scope: !5370)
!5395 = !DILocation(line: 1307, column: 20, scope: !5370)
!5396 = !DILocation(line: 1308, column: 3, scope: !5370)
!5397 = !DILocation(line: 1316, column: 1, scope: !5357)
!5398 = distinct !DISubprogram(name: "isupper", scope: !5399, file: !5399, line: 16, type: !439, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5400)
!5399 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5400 = !{!5401}
!5401 = !DILocalVariable(name: "a", arg: 1, scope: !5398, file: !5399, line: 16, type: !118)
!5402 = !DILocation(line: 0, scope: !5398)
!5403 = !DILocation(line: 18, column: 29, scope: !5398)
!5404 = !DILocation(line: 18, column: 45, scope: !5398)
!5405 = !DILocation(line: 18, column: 2, scope: !5398)
!5406 = distinct !DISubprogram(name: "conversion_radix", scope: !2657, file: !2657, line: 761, type: !5407, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5409)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!315, !135}
!5409 = !{!5410}
!5410 = !DILocalVariable(name: "specifier", arg: 1, scope: !5406, file: !2657, line: 761, type: !135)
!5411 = !DILocation(line: 0, scope: !5406)
!5412 = !DILocation(line: 763, column: 2, scope: !5406)
!5413 = !DILocation(line: 770, column: 3, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5406, file: !2657, line: 763, column: 21)
!5415 = !DILocation(line: 774, column: 3, scope: !5414)
!5416 = !DILocation(line: 0, scope: !5414)
!5417 = !DILocation(line: 776, column: 1, scope: !5406)
!5418 = distinct !DISubprogram(name: "extract_flags", scope: !2657, file: !2657, line: 339, type: !5260, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5419)
!5419 = !{!5420, !5421, !5422}
!5420 = !DILocalVariable(name: "conv", arg: 1, scope: !5418, file: !2657, line: 339, type: !4916)
!5421 = !DILocalVariable(name: "sp", arg: 2, scope: !5418, file: !2657, line: 340, type: !133)
!5422 = !DILocalVariable(name: "loop", scope: !5418, file: !2657, line: 342, type: !146)
!5423 = !DILocation(line: 0, scope: !5418)
!5424 = !DILocation(line: 344, column: 2, scope: !5418)
!5425 = !DILocation(line: 345, column: 11, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5418, file: !2657, line: 344, column: 5)
!5427 = !DILocation(line: 345, column: 3, scope: !5426)
!5428 = !DILocation(line: 351, column: 4, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5426, file: !2657, line: 345, column: 16)
!5430 = !DILocation(line: 354, column: 4, scope: !5429)
!5431 = !DILocation(line: 357, column: 4, scope: !5429)
!5432 = !DILocation(line: 360, column: 4, scope: !5429)
!5433 = !DILocation(line: 0, scope: !5429)
!5434 = !DILocation(line: 370, column: 12, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5418, file: !2657, line: 370, column: 6)
!5436 = !DILocation(line: 370, column: 22, scope: !5435)
!5437 = !DILocation(line: 371, column: 19, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !2657, line: 370, column: 42)
!5439 = !DILocation(line: 372, column: 2, scope: !5438)
!5440 = !DILocation(line: 376, column: 2, scope: !5418)
!5441 = distinct !DISubprogram(name: "extract_width", scope: !2657, file: !2657, line: 388, type: !5260, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5442)
!5442 = !{!5443, !5444, !5445, !5446}
!5443 = !DILocalVariable(name: "conv", arg: 1, scope: !5441, file: !2657, line: 388, type: !4916)
!5444 = !DILocalVariable(name: "sp", arg: 2, scope: !5441, file: !2657, line: 389, type: !133)
!5445 = !DILocalVariable(name: "wp", scope: !5441, file: !2657, line: 398, type: !133)
!5446 = !DILocalVariable(name: "width", scope: !5441, file: !2657, line: 399, type: !315)
!5447 = !DILocation(line: 0, scope: !5441)
!5448 = !DILocation(line: 391, column: 8, scope: !5441)
!5449 = !DILocation(line: 391, column: 22, scope: !5441)
!5450 = !DILocation(line: 393, column: 6, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5441, file: !2657, line: 393, column: 6)
!5452 = !DILocation(line: 393, column: 10, scope: !5451)
!5453 = !DILocation(line: 393, column: 6, scope: !5441)
!5454 = !DILocation(line: 394, column: 20, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5451, file: !2657, line: 393, column: 18)
!5456 = !DILocation(line: 395, column: 10, scope: !5455)
!5457 = !DILocation(line: 395, column: 3, scope: !5455)
!5458 = !DILocation(line: 399, column: 17, scope: !5441)
!5459 = !DILocation(line: 401, column: 6, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5441, file: !2657, line: 401, column: 6)
!5461 = !DILocation(line: 401, column: 9, scope: !5460)
!5462 = !DILocation(line: 401, column: 6, scope: !5441)
!5463 = !DILocation(line: 402, column: 23, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5460, file: !2657, line: 401, column: 16)
!5465 = !DILocation(line: 403, column: 9, scope: !5464)
!5466 = !DILocation(line: 403, column: 21, scope: !5464)
!5467 = !DILocation(line: 405, column: 11, scope: !5464)
!5468 = !DILocation(line: 404, column: 21, scope: !5464)
!5469 = !DILocation(line: 406, column: 2, scope: !5464)
!5470 = !DILocation(line: 409, column: 1, scope: !5441)
!5471 = distinct !DISubprogram(name: "extract_prec", scope: !2657, file: !2657, line: 420, type: !5260, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5472)
!5472 = !{!5473, !5474, !5475}
!5473 = !DILocalVariable(name: "conv", arg: 1, scope: !5471, file: !2657, line: 420, type: !4916)
!5474 = !DILocalVariable(name: "sp", arg: 2, scope: !5471, file: !2657, line: 421, type: !133)
!5475 = !DILocalVariable(name: "prec", scope: !5471, file: !2657, line: 435, type: !315)
!5476 = !DILocation(line: 0, scope: !5471)
!5477 = !DILocation(line: 423, column: 24, scope: !5471)
!5478 = !DILocation(line: 423, column: 28, scope: !5471)
!5479 = !DILocation(line: 423, column: 8, scope: !5471)
!5480 = !DILocation(line: 423, column: 21, scope: !5471)
!5481 = !DILocation(line: 425, column: 6, scope: !5471)
!5482 = !DILocation(line: 428, column: 2, scope: !5471)
!5483 = !DILocation(line: 430, column: 6, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5471, file: !2657, line: 430, column: 6)
!5485 = !DILocation(line: 430, column: 10, scope: !5484)
!5486 = !DILocation(line: 430, column: 6, scope: !5471)
!5487 = !DILocation(line: 431, column: 19, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5484, file: !2657, line: 430, column: 18)
!5489 = !DILocation(line: 432, column: 10, scope: !5488)
!5490 = !DILocation(line: 432, column: 3, scope: !5488)
!5491 = !DILocation(line: 435, column: 16, scope: !5471)
!5492 = !DILocation(line: 437, column: 8, scope: !5471)
!5493 = !DILocation(line: 437, column: 19, scope: !5471)
!5494 = !DILocation(line: 439, column: 10, scope: !5471)
!5495 = !DILocation(line: 438, column: 20, scope: !5471)
!5496 = !DILocation(line: 441, column: 9, scope: !5471)
!5497 = !DILocation(line: 442, column: 1, scope: !5471)
!5498 = distinct !DISubprogram(name: "extract_length", scope: !2657, file: !2657, line: 453, type: !5260, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5499)
!5499 = !{!5500, !5501}
!5500 = !DILocalVariable(name: "conv", arg: 1, scope: !5498, file: !2657, line: 453, type: !4916)
!5501 = !DILocalVariable(name: "sp", arg: 2, scope: !5498, file: !2657, line: 454, type: !133)
!5502 = !DILocation(line: 0, scope: !5498)
!5503 = !DILocation(line: 456, column: 10, scope: !5498)
!5504 = !DILocation(line: 456, column: 2, scope: !5498)
!5505 = !DILocation(line: 458, column: 8, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !2657, line: 458, column: 7)
!5507 = distinct !DILexicalBlock(scope: !5498, file: !2657, line: 456, column: 15)
!5508 = !DILocation(line: 458, column: 7, scope: !5506)
!5509 = !DILocation(line: 458, column: 13, scope: !5506)
!5510 = !DILocation(line: 0, scope: !5506)
!5511 = !DILocation(line: 458, column: 7, scope: !5507)
!5512 = !DILocation(line: 459, column: 21, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5506, file: !2657, line: 458, column: 21)
!5514 = !DILocation(line: 460, column: 4, scope: !5513)
!5515 = !DILocation(line: 461, column: 3, scope: !5513)
!5516 = !DILocation(line: 462, column: 21, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5506, file: !2657, line: 461, column: 10)
!5518 = !DILocation(line: 466, column: 8, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5507, file: !2657, line: 466, column: 7)
!5520 = !DILocation(line: 466, column: 7, scope: !5519)
!5521 = !DILocation(line: 466, column: 13, scope: !5519)
!5522 = !DILocation(line: 0, scope: !5519)
!5523 = !DILocation(line: 466, column: 7, scope: !5507)
!5524 = !DILocation(line: 467, column: 21, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5519, file: !2657, line: 466, column: 21)
!5526 = !DILocation(line: 468, column: 4, scope: !5525)
!5527 = !DILocation(line: 469, column: 3, scope: !5525)
!5528 = !DILocation(line: 470, column: 21, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5519, file: !2657, line: 469, column: 10)
!5530 = !DILocation(line: 474, column: 9, scope: !5507)
!5531 = !DILocation(line: 474, column: 20, scope: !5507)
!5532 = !DILocation(line: 475, column: 3, scope: !5507)
!5533 = !DILocation(line: 476, column: 3, scope: !5507)
!5534 = !DILocation(line: 478, column: 9, scope: !5507)
!5535 = !DILocation(line: 478, column: 20, scope: !5507)
!5536 = !DILocation(line: 479, column: 3, scope: !5507)
!5537 = !DILocation(line: 480, column: 3, scope: !5507)
!5538 = !DILocation(line: 482, column: 9, scope: !5507)
!5539 = !DILocation(line: 482, column: 20, scope: !5507)
!5540 = !DILocation(line: 483, column: 3, scope: !5507)
!5541 = !DILocation(line: 484, column: 3, scope: !5507)
!5542 = !DILocation(line: 486, column: 9, scope: !5507)
!5543 = !DILocation(line: 486, column: 20, scope: !5507)
!5544 = !DILocation(line: 487, column: 3, scope: !5507)
!5545 = !DILocation(line: 492, column: 21, scope: !5507)
!5546 = !DILocation(line: 493, column: 3, scope: !5507)
!5547 = !DILocation(line: 495, column: 9, scope: !5507)
!5548 = !DILocation(line: 495, column: 20, scope: !5507)
!5549 = !DILocation(line: 496, column: 3, scope: !5507)
!5550 = !DILocation(line: 498, column: 2, scope: !5498)
!5551 = distinct !DISubprogram(name: "extract_specifier", scope: !2657, file: !2657, line: 513, type: !5260, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5552)
!5552 = !{!5553, !5554, !5555, !5556}
!5553 = !DILocalVariable(name: "conv", arg: 1, scope: !5551, file: !2657, line: 513, type: !4916)
!5554 = !DILocalVariable(name: "sp", arg: 2, scope: !5551, file: !2657, line: 514, type: !133)
!5555 = !DILocalVariable(name: "unsupported", scope: !5551, file: !2657, line: 516, type: !146)
!5556 = !DILabel(scope: !5557, name: "int_conv", file: !2657, line: 526)
!5557 = distinct !DILexicalBlock(scope: !5551, file: !2657, line: 520, column: 27)
!5558 = !DILocation(line: 0, scope: !5551)
!5559 = !DILocation(line: 518, column: 20, scope: !5551)
!5560 = !DILocation(line: 518, column: 8, scope: !5551)
!5561 = !DILocation(line: 518, column: 18, scope: !5551)
!5562 = !DILocation(line: 520, column: 2, scope: !5551)
!5563 = !DILocation(line: 525, column: 3, scope: !5557)
!5564 = !DILocation(line: 0, scope: !5557)
!5565 = !DILocation(line: 526, column: 1, scope: !5557)
!5566 = !DILocation(line: 528, column: 24, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5557, file: !2657, line: 528, column: 7)
!5568 = !DILocation(line: 528, column: 7, scope: !5557)
!5569 = !DILocation(line: 535, column: 23, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5557, file: !2657, line: 535, column: 7)
!5571 = !DILocation(line: 535, column: 7, scope: !5557)
!5572 = !DILocation(line: 536, column: 36, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5570, file: !2657, line: 535, column: 31)
!5574 = !DILocation(line: 537, column: 3, scope: !5573)
!5575 = !DILocation(line: 570, column: 9, scope: !5557)
!5576 = !DILocation(line: 570, column: 23, scope: !5557)
!5577 = !DILocation(line: 575, column: 4, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !2657, line: 573, column: 48)
!5579 = distinct !DILexicalBlock(scope: !5557, file: !2657, line: 573, column: 7)
!5580 = !DILocation(line: 603, column: 9, scope: !5557)
!5581 = !DILocation(line: 603, column: 23, scope: !5557)
!5582 = !DILocation(line: 605, column: 24, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5557, file: !2657, line: 605, column: 7)
!5584 = !DILocation(line: 605, column: 7, scope: !5557)
!5585 = !DILocation(line: 612, column: 9, scope: !5557)
!5586 = !DILocation(line: 612, column: 23, scope: !5557)
!5587 = !DILocation(line: 619, column: 24, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5557, file: !2657, line: 619, column: 7)
!5589 = !DILocation(line: 619, column: 7, scope: !5557)
!5590 = !DILocation(line: 625, column: 9, scope: !5557)
!5591 = !DILocation(line: 625, column: 17, scope: !5557)
!5592 = !DILocation(line: 626, column: 3, scope: !5557)
!5593 = !DILocation(line: 629, column: 20, scope: !5551)
!5594 = !DILocation(line: 629, column: 8, scope: !5551)
!5595 = !DILocation(line: 518, column: 23, scope: !5551)
!5596 = !DILocation(line: 631, column: 2, scope: !5551)
!5597 = distinct !DISubprogram(name: "extract_decimal", scope: !2657, file: !2657, line: 318, type: !5598, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5601)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!315, !5600}
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!5601 = !{!5602, !5603, !5604}
!5602 = !DILocalVariable(name: "str", arg: 1, scope: !5597, file: !2657, line: 318, type: !5600)
!5603 = !DILocalVariable(name: "sp", scope: !5597, file: !2657, line: 320, type: !133)
!5604 = !DILocalVariable(name: "val", scope: !5597, file: !2657, line: 321, type: !315)
!5605 = !DILocation(line: 0, scope: !5597)
!5606 = !DILocation(line: 320, column: 19, scope: !5597)
!5607 = !DILocation(line: 323, column: 37, scope: !5597)
!5608 = !DILocation(line: 323, column: 17, scope: !5597)
!5609 = !DILocation(line: 323, column: 9, scope: !5597)
!5610 = !DILocation(line: 323, column: 2, scope: !5597)
!5611 = !DILocation(line: 324, column: 13, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5597, file: !2657, line: 323, column: 43)
!5613 = !DILocation(line: 324, column: 24, scope: !5612)
!5614 = !DILocation(line: 324, column: 19, scope: !5612)
!5615 = !DILocation(line: 324, column: 27, scope: !5612)
!5616 = distinct !{!5616, !5610, !5617}
!5617 = !DILocation(line: 325, column: 2, scope: !5597)
!5618 = !DILocation(line: 326, column: 7, scope: !5597)
!5619 = !DILocation(line: 327, column: 2, scope: !5597)
!5620 = distinct !DISubprogram(name: "isdigit", scope: !5399, file: !5399, line: 43, type: !439, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5621)
!5621 = !{!5622}
!5622 = !DILocalVariable(name: "a", arg: 1, scope: !5620, file: !5399, line: 43, type: !118)
!5623 = !DILocation(line: 0, scope: !5620)
!5624 = !DILocation(line: 45, column: 29, scope: !5620)
!5625 = !DILocation(line: 45, column: 45, scope: !5620)
!5626 = !DILocation(line: 45, column: 2, scope: !5620)
!5627 = distinct !DISubprogram(name: "assert_post_action", scope: !5628, file: !5628, line: 26, type: !5629, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !5631)
!5628 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5629 = !DISubroutineType(types: !5630)
!5630 = !{null, !133, !32}
!5631 = !{!5632, !5633}
!5632 = !DILocalVariable(name: "file", arg: 1, scope: !5627, file: !5628, line: 26, type: !133)
!5633 = !DILocalVariable(name: "line", arg: 2, scope: !5627, file: !5628, line: 26, type: !32)
!5634 = !DILocation(line: 0, scope: !5627)
!5635 = !DILocation(line: 43, column: 2, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5627, file: !5628, line: 43, column: 2)
!5637 = !{i64 2155070047, i64 2155070063, i64 2155070089, i64 2155070117, i64 2155070137}
!5638 = !DILocation(line: 44, column: 1, scope: !5627)
!5639 = distinct !DISubprogram(name: "assert_print", scope: !5628, file: !5628, line: 46, type: !3820, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !5640)
!5640 = !{!5641, !5642}
!5641 = !DILocalVariable(name: "fmt", arg: 1, scope: !5639, file: !5628, line: 46, type: !133)
!5642 = !DILocalVariable(name: "ap", scope: !5639, file: !5628, line: 48, type: !5643)
!5643 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3754, line: 99, baseType: !5644)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3754, line: 40, baseType: !5645)
!5645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5628, baseType: !5646)
!5646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5647)
!5647 = !{!5648}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5646, file: !5628, line: 48, baseType: !117, size: 32)
!5649 = !DILocation(line: 0, scope: !5639)
!5650 = !DILocation(line: 48, column: 2, scope: !5639)
!5651 = !DILocation(line: 48, column: 10, scope: !5639)
!5652 = !DILocation(line: 50, column: 2, scope: !5639)
!5653 = !DILocation(line: 52, column: 2, scope: !5639)
!5654 = !DILocation(line: 54, column: 2, scope: !5639)
!5655 = !DILocation(line: 55, column: 1, scope: !5639)
!5656 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5657, file: !5657, line: 9, type: !365, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2203)
!5657 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!5658 = !DILocation(line: 11, column: 1, scope: !5656)
!5659 = !{i64 2147561804, i64 2147561847, i64 2147561887}
!5660 = !DILocation(line: 12, column: 1, scope: !5656)
!5661 = !{i64 2147566031, i64 2147566074, i64 2147566114}
!5662 = !DILocation(line: 13, column: 1, scope: !5656)
!5663 = !{i64 2147566240, i64 2147566283, i64 2147566323}
!5664 = !DILocation(line: 14, column: 1, scope: !5656)
!5665 = !{i64 2147566409, i64 2147566452, i64 2147566492}
!5666 = !DILocation(line: 15, column: 1, scope: !5656)
!5667 = !{i64 2147566572, i64 2147566615, i64 2147566655}
!5668 = !DILocation(line: 16, column: 1, scope: !5656)
!5669 = !{i64 2147566756, i64 2147566799, i64 2147566839}
!5670 = !DILocation(line: 17, column: 1, scope: !5656)
!5671 = !{i64 2147566935, i64 2147566978, i64 2147567018}
!5672 = !DILocation(line: 18, column: 1, scope: !5656)
!5673 = !{i64 2147567177, i64 2147567220, i64 2147567260}
!5674 = !DILocation(line: 19, column: 1, scope: !5656)
!5675 = !{i64 2147567412, i64 2147567455, i64 2147567495}
!5676 = !DILocation(line: 20, column: 1, scope: !5656)
!5677 = !{i64 2147567598, i64 2147567641, i64 2147567681}
!5678 = !DILocation(line: 21, column: 1, scope: !5656)
!5679 = !{i64 2147567814, i64 2147567857, i64 2147567897}
!5680 = !DILocation(line: 22, column: 1, scope: !5656)
!5681 = !{i64 2147568017, i64 2147568060, i64 2147568100}
!5682 = !DILocation(line: 23, column: 1, scope: !5656)
!5683 = !{i64 2147568220, i64 2147568263, i64 2147568303}
!5684 = !DILocation(line: 24, column: 1, scope: !5656)
!5685 = !{i64 2147568395, i64 2147568438, i64 2147568478}
!5686 = !DILocation(line: 25, column: 1, scope: !5656)
!5687 = !{i64 2147568605, i64 2147568648, i64 2147568688}
!5688 = !DILocation(line: 26, column: 1, scope: !5656)
!5689 = !{i64 2147568809, i64 2147568852, i64 2147568892}
!5690 = !DILocation(line: 27, column: 1, scope: !5656)
!5691 = !{i64 2147569002, i64 2147569045, i64 2147569085}
!5692 = !DILocation(line: 28, column: 1, scope: !5656)
!5693 = !{i64 2147569204, i64 2147569247, i64 2147569287}
!5694 = !DILocation(line: 29, column: 1, scope: !5656)
!5695 = !{i64 2147569431, i64 2147569474, i64 2147569514}
!5696 = !DILocation(line: 30, column: 1, scope: !5656)
!5697 = !{i64 2147569633, i64 2147569676, i64 2147569716}
!5698 = !DILocation(line: 31, column: 1, scope: !5656)
!5699 = !{i64 2147569848, i64 2147569891, i64 2147569931}
!5700 = !DILocation(line: 32, column: 1, scope: !5656)
!5701 = !{i64 2147570020, i64 2147570063, i64 2147570103}
!5702 = !DILocation(line: 33, column: 1, scope: !5656)
!5703 = !{i64 2147570222, i64 2147570265, i64 2147570305}
!5704 = !DILocation(line: 34, column: 1, scope: !5656)
!5705 = !{i64 2147570448, i64 2147570491, i64 2147570531}
!5706 = !DILocation(line: 35, column: 1, scope: !5656)
!5707 = !{i64 2147570647, i64 2147570690, i64 2147570730}
!5708 = !DILocation(line: 36, column: 1, scope: !5656)
!5709 = !{i64 2147570822, i64 2147570865, i64 2147570905}
!5710 = !DILocation(line: 37, column: 1, scope: !5656)
!5711 = !{i64 2147571075, i64 2147571118, i64 2147571158}
!5712 = !DILocation(line: 38, column: 1, scope: !5656)
!5713 = !{i64 2147571316, i64 2147571359, i64 2147571399}
!5714 = !DILocation(line: 39, column: 1, scope: !5656)
!5715 = !{i64 2147571551, i64 2147571594, i64 2147571634}
!5716 = !DILocation(line: 40, column: 1, scope: !5656)
!5717 = !{i64 2147571783, i64 2147571826, i64 2147571866}
!5718 = !DILocation(line: 41, column: 1, scope: !5656)
!5719 = !{i64 2147572009, i64 2147572052, i64 2147572092}
!5720 = !DILocation(line: 42, column: 1, scope: !5656)
!5721 = !{i64 2147572235, i64 2147572278, i64 2147572318}
!5722 = !DILocation(line: 43, column: 1, scope: !5656)
!5723 = !{i64 2147572461, i64 2147572504, i64 2147572544}
!5724 = !DILocation(line: 44, column: 1, scope: !5656)
!5725 = !{i64 2147572696, i64 2147572739, i64 2147572779}
!5726 = !DILocation(line: 45, column: 1, scope: !5656)
!5727 = !{i64 2147572940, i64 2147572983, i64 2147573023}
!5728 = !DILocation(line: 46, column: 1, scope: !5656)
!5729 = !{i64 2147573187, i64 2147573230, i64 2147573270}
!5730 = !DILocation(line: 47, column: 1, scope: !5656)
!5731 = !{i64 2147573419, i64 2147573462, i64 2147573502}
!5732 = !DILocation(line: 48, column: 1, scope: !5656)
!5733 = !{i64 2147573663, i64 2147573706, i64 2147573746}
!5734 = !DILocation(line: 49, column: 1, scope: !5656)
!5735 = !{i64 2147573901, i64 2147573944, i64 2147573984}
!5736 = !DILocation(line: 50, column: 1, scope: !5656)
!5737 = !{i64 2147574175, i64 2147574218, i64 2147574258}
!5738 = !DILocation(line: 51, column: 1, scope: !5656)
!5739 = !{i64 2147574413, i64 2147574456, i64 2147574496}
!5740 = !DILocation(line: 52, column: 1, scope: !5656)
!5741 = !{i64 2147574666, i64 2147574709, i64 2147574749}
!5742 = !DILocation(line: 53, column: 1, scope: !5656)
!5743 = !{i64 2147578971, i64 2147579014, i64 2147579054}
!5744 = !DILocation(line: 54, column: 1, scope: !5656)
!5745 = !{i64 2147579206, i64 2147579249, i64 2147579289}
!5746 = !DILocation(line: 55, column: 1, scope: !5656)
!5747 = !{i64 2147579456, i64 2147579499, i64 2147579539}
!5748 = !DILocation(line: 56, column: 1, scope: !5656)
!5749 = !{i64 2147579703, i64 2147579746, i64 2147579786}
!5750 = !DILocation(line: 57, column: 1, scope: !5656)
!5751 = !{i64 2147579938, i64 2147579981, i64 2147580021}
!5752 = !DILocation(line: 58, column: 1, scope: !5656)
!5753 = !{i64 2147580173, i64 2147580216, i64 2147580256}
!5754 = !DILocation(line: 59, column: 1, scope: !5656)
!5755 = !{i64 2147580408, i64 2147580451, i64 2147580491}
!5756 = !DILocation(line: 60, column: 1, scope: !5656)
!5757 = !{i64 2147580643, i64 2147580686, i64 2147580726}
!5758 = !DILocation(line: 61, column: 1, scope: !5656)
!5759 = !{i64 2147580887, i64 2147580930, i64 2147580970}
!5760 = !DILocation(line: 62, column: 1, scope: !5656)
!5761 = !{i64 2147581125, i64 2147581168, i64 2147581208}
!5762 = !DILocation(line: 63, column: 1, scope: !5656)
!5763 = !{i64 2147581366, i64 2147581409, i64 2147581449}
!5764 = !DILocation(line: 64, column: 1, scope: !5656)
!5765 = !{i64 2147581646, i64 2147581689, i64 2147581729}
!5766 = !DILocation(line: 65, column: 1, scope: !5656)
!5767 = !{i64 2147581905, i64 2147581948, i64 2147581988}
!5768 = !DILocation(line: 66, column: 1, scope: !5656)
!5769 = !{i64 2147582143, i64 2147582186, i64 2147582226}
!5770 = !DILocation(line: 67, column: 1, scope: !5656)
!5771 = !{i64 2147582372, i64 2147582415, i64 2147582455}
!5772 = !DILocation(line: 68, column: 1, scope: !5656)
!5773 = !{i64 2147582580, i64 2147582623, i64 2147582663}
!5774 = !DILocation(line: 69, column: 1, scope: !5656)
!5775 = !{i64 2147582791, i64 2147582834, i64 2147582874}
!5776 = !DILocation(line: 70, column: 1, scope: !5656)
!5777 = !{i64 2147583026, i64 2147583069, i64 2147583109}
!5778 = !DILocation(line: 71, column: 1, scope: !5656)
!5779 = !{i64 2147583255, i64 2147583298, i64 2147583338}
!5780 = !DILocation(line: 72, column: 1, scope: !5656)
!5781 = !{i64 2147583493, i64 2147583536, i64 2147583576}
!5782 = !DILocation(line: 73, column: 1, scope: !5656)
!5783 = !{i64 2147583725, i64 2147583768, i64 2147583808}
!5784 = !DILocation(line: 74, column: 1, scope: !5656)
!5785 = !{i64 2147583951, i64 2147583994, i64 2147584034}
!5786 = !DILocation(line: 75, column: 1, scope: !5656)
!5787 = !{i64 2147584168, i64 2147584211, i64 2147584251}
!5788 = !DILocation(line: 76, column: 1, scope: !5656)
!5789 = !{i64 2147584400, i64 2147584443, i64 2147584483}
!5790 = !DILocation(line: 77, column: 1, scope: !5656)
!5791 = !{i64 2147584626, i64 2147584669, i64 2147584709}
!5792 = !DILocation(line: 78, column: 1, scope: !5656)
!5793 = !{i64 2147584840, i64 2147584883, i64 2147584923}
!5794 = !DILocation(line: 79, column: 1, scope: !5656)
!5795 = !{i64 2147585060, i64 2147585103, i64 2147585143}
!5796 = !DILocation(line: 80, column: 1, scope: !5656)
!5797 = !{i64 2147585292, i64 2147585335, i64 2147585375}
!5798 = !DILocation(line: 81, column: 1, scope: !5656)
!5799 = !{i64 2147585500, i64 2147585543, i64 2147585583}
!5800 = !DILocation(line: 82, column: 1, scope: !5656)
!5801 = !{i64 2147585705, i64 2147585748, i64 2147585788}
!5802 = !DILocation(line: 83, column: 1, scope: !5656)
!5803 = !{i64 2147585922, i64 2147585965, i64 2147586005}
!5804 = !DILocation(line: 84, column: 1, scope: !5656)
!5805 = !{i64 2147586136, i64 2147586179, i64 2147586219}
!5806 = !DILocation(line: 85, column: 1, scope: !5656)
!5807 = !{i64 2147586362, i64 2147586405, i64 2147586445}
!5808 = !DILocation(line: 86, column: 1, scope: !5656)
!5809 = !{i64 2147586582, i64 2147586625, i64 2147586665}
!5810 = !DILocation(line: 87, column: 1, scope: !5656)
!5811 = !{i64 2147586787, i64 2147586830, i64 2147586870}
!5812 = !DILocation(line: 88, column: 1, scope: !5656)
!5813 = !{i64 2147591080, i64 2147591123, i64 2147591163}
!5814 = !DILocation(line: 89, column: 1, scope: !5656)
!5815 = !{i64 2147591315, i64 2147591358, i64 2147591398}
!5816 = !DILocation(line: 90, column: 1, scope: !5656)
!5817 = !{i64 2147591565, i64 2147591608, i64 2147591648}
!5818 = !DILocation(line: 91, column: 1, scope: !5656)
!5819 = !{i64 2147591815, i64 2147591858, i64 2147591898}
!5820 = !DILocation(line: 92, column: 1, scope: !5656)
!5821 = !{i64 2147592053, i64 2147592096, i64 2147592136}
!5822 = !DILocation(line: 93, column: 1, scope: !5656)
!5823 = !{i64 2147592264, i64 2147592307, i64 2147592347}
!5824 = !DILocation(line: 94, column: 1, scope: !5656)
!5825 = !{i64 2147592481, i64 2147592524, i64 2147592564}
!5826 = !DILocation(line: 95, column: 1, scope: !5656)
!5827 = !{i64 2147592677, i64 2147592720, i64 2147592760}
!5828 = !DILocation(line: 96, column: 1, scope: !5656)
!5829 = !{i64 2147592879, i64 2147592922, i64 2147592962}
!5830 = !DILocation(line: 97, column: 1, scope: !5656)
!5831 = !{i64 2147593072, i64 2147593115, i64 2147593155}
!5832 = !DILocation(line: 98, column: 1, scope: !5656)
!5833 = !{i64 2147593280, i64 2147593323, i64 2147593363}
!5834 = !DILocation(line: 99, column: 1, scope: !5656)
!5835 = !{i64 2147593476, i64 2147593519, i64 2147593559}
!5836 = !DILocation(line: 100, column: 1, scope: !5656)
!5837 = !{i64 2147593708, i64 2147593751, i64 2147593791}
!5838 = !DILocation(line: 101, column: 1, scope: !5656)
!5839 = !{i64 2147593919, i64 2147593962, i64 2147594002}
!5840 = !DILocation(line: 102, column: 1, scope: !5656)
!5841 = !{i64 2147594118, i64 2147594161, i64 2147594201}
!5842 = !DILocation(line: 103, column: 1, scope: !5656)
!5843 = !{i64 2147594293, i64 2147594336, i64 2147594376}
!5844 = !DILocation(line: 104, column: 1, scope: !5656)
!5845 = !{i64 2147594477, i64 2147594520, i64 2147594560}
!5846 = !DILocation(line: 105, column: 1, scope: !5656)
!5847 = !{i64 2147594679, i64 2147594722, i64 2147594762}
!5848 = !DILocation(line: 106, column: 1, scope: !5656)
!5849 = !{i64 2147594878, i64 2147594921, i64 2147594961}
!5850 = !DILocation(line: 107, column: 1, scope: !5656)
!5851 = !{i64 2147595044, i64 2147595087, i64 2147595127}
!5852 = !DILocation(line: 108, column: 1, scope: !5656)
!5853 = !{i64 2147595228, i64 2147595271, i64 2147595311}
!5854 = !DILocation(line: 109, column: 1, scope: !5656)
!5855 = !{i64 2147595418, i64 2147595461, i64 2147595501}
!5856 = !DILocation(line: 110, column: 1, scope: !5656)
!5857 = !{i64 2147595602, i64 2147595645, i64 2147595685}
!5858 = !DILocation(line: 111, column: 1, scope: !5656)
!5859 = !{i64 2147595816, i64 2147595859, i64 2147595899}
!5860 = !DILocation(line: 112, column: 1, scope: !5656)
!5861 = !{i64 2147596027, i64 2147596070, i64 2147596110}
!5862 = !DILocation(line: 113, column: 1, scope: !5656)
!5863 = !{i64 2147596250, i64 2147596293, i64 2147596333}
!5864 = !DILocation(line: 114, column: 1, scope: !5656)
!5865 = !{i64 2147596434, i64 2147596477, i64 2147596517}
!5866 = !DILocation(line: 115, column: 1, scope: !5656)
!5867 = !{i64 2147596648, i64 2147596691, i64 2147596731}
!5868 = !DILocation(line: 116, column: 1, scope: !5656)
!5869 = !{i64 2147596814, i64 2147596857, i64 2147596897}
!5870 = !DILocation(line: 117, column: 1, scope: !5656)
!5871 = !{i64 2147596995, i64 2147597038, i64 2147597078}
!5872 = !DILocation(line: 118, column: 1, scope: !5656)
!5873 = !{i64 2147597188, i64 2147597231, i64 2147597271}
!5874 = !DILocation(line: 119, column: 1, scope: !5656)
!5875 = !{i64 2147597414, i64 2147597457, i64 2147597497}
!5876 = !DILocation(line: 120, column: 1, scope: !5656)
!5877 = !{i64 2147597628, i64 2147597671, i64 2147597711}
!5878 = !DILocation(line: 121, column: 1, scope: !5656)
!5879 = !{i64 2147597854, i64 2147597897, i64 2147597937}
!5880 = !DILocation(line: 122, column: 1, scope: !5656)
!5881 = !{i64 2147598071, i64 2147598114, i64 2147598154}
!5882 = !DILocation(line: 123, column: 1, scope: !5656)
!5883 = !{i64 2147598348, i64 2147598391, i64 2147598431}
!5884 = !DILocation(line: 124, column: 1, scope: !5656)
!5885 = !{i64 2147598574, i64 2147598617, i64 2147598657}
!5886 = !DILocation(line: 125, column: 1, scope: !5656)
!5887 = !{i64 2147598782, i64 2147598825, i64 2147598865}
!5888 = !DILocation(line: 126, column: 1, scope: !5656)
!5889 = !{i64 2147598978, i64 2147599021, i64 2147599061}
!5890 = !DILocation(line: 127, column: 1, scope: !5656)
!5891 = !{i64 2147599243, i64 2147599286, i64 2147599326}
!5892 = !DILocation(line: 128, column: 1, scope: !5656)
!5893 = !{i64 2147599457, i64 2147599500, i64 2147599540}
!5894 = !DILocation(line: 129, column: 1, scope: !5656)
!5895 = !{i64 2147599632, i64 2147599675, i64 2147599715}
!5896 = !DILocation(line: 130, column: 1, scope: !5656)
!5897 = !{i64 2147599886, i64 2147599929, i64 2147599969}
!5898 = !DILocation(line: 131, column: 1, scope: !5656)
!5899 = !{i64 2147604146, i64 2147604189, i64 2147604229}
!5900 = !DILocation(line: 132, column: 1, scope: !5656)
!5901 = !{i64 2147604388, i64 2147604431, i64 2147604471}
!5902 = !DILocation(line: 133, column: 1, scope: !5656)
!5903 = !{i64 2147604551, i64 2147604594, i64 2147604634}
!5904 = !DILocation(line: 134, column: 1, scope: !5656)
!5905 = !{i64 2147604738, i64 2147604781, i64 2147604821}
!5906 = !DILocation(line: 135, column: 1, scope: !5656)
!5907 = !{i64 2147604931, i64 2147604974, i64 2147605014}
!5908 = !DILocation(line: 136, column: 1, scope: !5656)
!5909 = !{i64 2147605114, i64 2147605157, i64 2147605197}
!5910 = !DILocation(line: 137, column: 1, scope: !5656)
!5911 = !{i64 2147605328, i64 2147605371, i64 2147605411}
!5912 = !DILocation(line: 138, column: 1, scope: !5656)
!5913 = !{i64 2147605539, i64 2147605582, i64 2147605622}
!5914 = !DILocation(line: 139, column: 1, scope: !5656)
!5915 = !{i64 2147605759, i64 2147605802, i64 2147605842}
!5916 = !DILocation(line: 140, column: 1, scope: !5656)
!5917 = !{i64 2147605966, i64 2147606009, i64 2147606049}
!5918 = !DILocation(line: 141, column: 1, scope: !5656)
!5919 = !{i64 2147606239, i64 2147606282, i64 2147606322}
!5920 = !DILocation(line: 142, column: 1, scope: !5656)
!5921 = !{i64 2147606487, i64 2147606530, i64 2147606570}
!5922 = !DILocation(line: 143, column: 1, scope: !5656)
!5923 = !{i64 2147606686, i64 2147606729, i64 2147606769}
!5924 = !DILocation(line: 144, column: 1, scope: !5656)
!5925 = !{i64 2147606921, i64 2147606964, i64 2147607004}
!5926 = !DILocation(line: 145, column: 1, scope: !5656)
!5927 = !{i64 2147607171, i64 2147607214, i64 2147607254}
!5928 = !DILocation(line: 146, column: 1, scope: !5656)
!5929 = !{i64 2147607373, i64 2147607416, i64 2147607456}
!5930 = !DILocation(line: 147, column: 1, scope: !5656)
!5931 = !{i64 2147607596, i64 2147607639, i64 2147607679}
!5932 = !DILocation(line: 148, column: 1, scope: !5656)
!5933 = !{i64 2147607810, i64 2147607853, i64 2147607893}
!5934 = !DILocation(line: 149, column: 1, scope: !5656)
!5935 = !{i64 2147608054, i64 2147608097, i64 2147608137}
!5936 = !DILocation(line: 150, column: 1, scope: !5656)
!5937 = !{i64 2147608283, i64 2147608326, i64 2147608366}
!5938 = !DILocation(line: 151, column: 1, scope: !5656)
!5939 = !{i64 2147608512, i64 2147608555, i64 2147608595}
!5940 = !DILocation(line: 152, column: 1, scope: !5656)
!5941 = !{i64 2147608720, i64 2147608763, i64 2147608803}
!5942 = !DILocation(line: 153, column: 1, scope: !5656)
!5943 = !{i64 2147608958, i64 2147609001, i64 2147609041}
!5944 = !DILocation(line: 154, column: 1, scope: !5656)
!5945 = !{i64 2147609184, i64 2147609227, i64 2147609267}
!5946 = !DILocation(line: 155, column: 1, scope: !5656)
!5947 = !{i64 2147609443, i64 2147609486, i64 2147609526}
!5948 = !DILocation(line: 156, column: 1, scope: !5656)
!5949 = !{i64 2147609663, i64 2147609706, i64 2147609746}
!5950 = !DILocation(line: 157, column: 1, scope: !5656)
!5951 = !{i64 2147609895, i64 2147609938, i64 2147609978}
!5952 = !DILocation(line: 158, column: 1, scope: !5656)
!5953 = !{i64 2147610136, i64 2147610179, i64 2147610219}
!5954 = !DILocation(line: 159, column: 1, scope: !5656)
!5955 = !{i64 2147610377, i64 2147610420, i64 2147610460}
!5956 = !DILocation(line: 160, column: 1, scope: !5656)
!5957 = !{i64 2147610600, i64 2147610643, i64 2147610683}
!5958 = !DILocation(line: 161, column: 1, scope: !5656)
!5959 = !{i64 2147610817, i64 2147610860, i64 2147610900}
!5960 = !DILocation(line: 162, column: 1, scope: !5656)
!5961 = !{i64 2147611058, i64 2147611101, i64 2147611141}
!5962 = !DILocation(line: 163, column: 1, scope: !5656)
!5963 = !{i64 2147611245, i64 2147611288, i64 2147611328}
!5964 = !DILocation(line: 164, column: 1, scope: !5656)
!5965 = !{i64 2147611432, i64 2147611475, i64 2147611515}
!5966 = !DILocation(line: 165, column: 1, scope: !5656)
!5967 = !{i64 2147611595, i64 2147611638, i64 2147611678}
!5968 = !DILocation(line: 166, column: 1, scope: !5656)
!5969 = !{i64 2147611854, i64 2147611897, i64 2147611937}
!5970 = !DILocation(line: 167, column: 1, scope: !5656)
!5971 = !{i64 2147612077, i64 2147612120, i64 2147612160}
!5972 = !DILocation(line: 168, column: 1, scope: !5656)
!5973 = !{i64 2147612306, i64 2147612349, i64 2147612389}
!5974 = !DILocation(line: 169, column: 1, scope: !5656)
!5975 = !{i64 2147612502, i64 2147612545, i64 2147612585}
!5976 = !DILocation(line: 170, column: 1, scope: !5656)
!5977 = !{i64 2147616775, i64 2147616818, i64 2147616858}
!5978 = !DILocation(line: 171, column: 1, scope: !5656)
!5979 = !{i64 2147616996, i64 2147617039, i64 2147617079}
!5980 = !DILocation(line: 172, column: 1, scope: !5656)
!5981 = !{i64 2147617210, i64 2147617253, i64 2147617293}
!5982 = !DILocation(line: 173, column: 1, scope: !5656)
!5983 = !{i64 2147617400, i64 2147617443, i64 2147617483}
!5984 = !DILocation(line: 174, column: 1, scope: !5656)
!5985 = !{i64 2147617599, i64 2147617642, i64 2147617682}
!5986 = !DILocation(line: 175, column: 1, scope: !5656)
!5987 = !{i64 2147617804, i64 2147617847, i64 2147617887}
!5988 = !DILocation(line: 176, column: 1, scope: !5656)
!5989 = !{i64 2147618024, i64 2147618067, i64 2147618107}
!5990 = !DILocation(line: 177, column: 1, scope: !5656)
!5991 = !{i64 2147618225, i64 2147618268, i64 2147618308}
!5992 = !DILocation(line: 178, column: 1, scope: !5656)
!5993 = !{i64 2147618424, i64 2147618467, i64 2147618507}
!5994 = !DILocation(line: 179, column: 1, scope: !5656)
!5995 = !{i64 2147618629, i64 2147618672, i64 2147618712}
!5996 = !DILocation(line: 180, column: 1, scope: !5656)
!5997 = !{i64 2147618798, i64 2147618841, i64 2147618881}
!5998 = !DILocation(line: 181, column: 1, scope: !5656)
!5999 = !{i64 2147618982, i64 2147619025, i64 2147619065}
!6000 = !DILocation(line: 182, column: 1, scope: !5656)
!6001 = !{i64 2147619166, i64 2147619209, i64 2147619249}
!6002 = !DILocation(line: 183, column: 1, scope: !5656)
!6003 = !{i64 2147619353, i64 2147619396, i64 2147619436}
!6004 = !DILocation(line: 184, column: 1, scope: !5656)
!6005 = !{i64 2147619537, i64 2147619580, i64 2147619620}
!6006 = !DILocation(line: 185, column: 1, scope: !5656)
!6007 = !{i64 2147619775, i64 2147619818, i64 2147619858}
!6008 = !DILocation(line: 186, column: 1, scope: !5656)
!6009 = !{i64 2147620005, i64 2147620048, i64 2147620088}
!6010 = !DILocation(line: 187, column: 1, scope: !5656)
!6011 = !{i64 2147620234, i64 2147620277, i64 2147620317}
!6012 = !DILocation(line: 188, column: 1, scope: !5656)
!6013 = !{i64 2147620421, i64 2147620464, i64 2147620504}
!6014 = !DILocation(line: 189, column: 1, scope: !5656)
!6015 = !{i64 2147620617, i64 2147620660, i64 2147620700}
!6016 = !DILocation(line: 190, column: 1, scope: !5656)
!6017 = !{i64 2147620825, i64 2147620868, i64 2147620908}
!6018 = !DILocation(line: 191, column: 1, scope: !5656)
!6019 = !{i64 2147621037, i64 2147621080, i64 2147621120}
!6020 = !DILocation(line: 192, column: 1, scope: !5656)
!6021 = !{i64 2147621236, i64 2147621279, i64 2147621319}
!6022 = !DILocation(line: 193, column: 1, scope: !5656)
!6023 = !{i64 2147621474, i64 2147621517, i64 2147621557}
!6024 = !DILocation(line: 194, column: 1, scope: !5656)
!6025 = !{i64 2147621670, i64 2147621713, i64 2147621753}
!6026 = !DILocation(line: 195, column: 1, scope: !5656)
!6027 = !{i64 2147621872, i64 2147621915, i64 2147621955}
!6028 = !DILocation(line: 196, column: 1, scope: !5656)
!6029 = !{i64 2147622065, i64 2147622108, i64 2147622148}
!6030 = !DILocation(line: 197, column: 1, scope: !5656)
!6031 = !{i64 2147622299, i64 2147622342, i64 2147622382}
!6032 = !DILocation(line: 198, column: 1, scope: !5656)
!6033 = !{i64 2147622462, i64 2147622505, i64 2147622545}
!6034 = !DILocation(line: 199, column: 1, scope: !5656)
!6035 = !{i64 2147622701, i64 2147622744, i64 2147622784}
!6036 = !DILocation(line: 200, column: 1, scope: !5656)
!6037 = !{i64 2147622940, i64 2147622983, i64 2147623023}
!6038 = !DILocation(line: 201, column: 1, scope: !5656)
!6039 = !{i64 2147623176, i64 2147623219, i64 2147623259}
!6040 = !DILocation(line: 202, column: 1, scope: !5656)
!6041 = !{i64 2147623406, i64 2147623449, i64 2147623489}
!6042 = !DILocation(line: 203, column: 1, scope: !5656)
!6043 = !{i64 2147623593, i64 2147623636, i64 2147623676}
!6044 = !DILocation(line: 204, column: 1, scope: !5656)
!6045 = !{i64 2147623792, i64 2147623835, i64 2147623875}
!6046 = !DILocation(line: 205, column: 1, scope: !5656)
!6047 = !{i64 2147624063, i64 2147624106, i64 2147624146}
!6048 = !DILocation(line: 206, column: 1, scope: !5656)
!6049 = !{i64 2147624238, i64 2147624281, i64 2147624321}
!6050 = !DILocation(line: 207, column: 1, scope: !5656)
!6051 = !{i64 2147624472, i64 2147624515, i64 2147624555}
!6052 = !DILocation(line: 208, column: 1, scope: !5656)
!6053 = !{i64 2147624680, i64 2147624723, i64 2147624763}
!6054 = !DILocation(line: 209, column: 1, scope: !5656)
!6055 = !{i64 2147624898, i64 2147624941, i64 2147624981}
!6056 = !DILocation(line: 210, column: 1, scope: !5656)
!6057 = !{i64 2147625088, i64 2147625131, i64 2147625171}
!6058 = !DILocation(line: 211, column: 1, scope: !5656)
!6059 = !{i64 2147625284, i64 2147625327, i64 2147625367}
!6060 = !DILocation(line: 212, column: 1, scope: !5656)
!6061 = !{i64 2147625490, i64 2147625533, i64 2147625573}
!6062 = !DILocation(line: 213, column: 1, scope: !5656)
!6063 = !{i64 2147625695, i64 2147625738, i64 2147625778}
!6064 = !DILocation(line: 214, column: 1, scope: !5656)
!6065 = !{i64 2147629970, i64 2147630013, i64 2147630053}
!6066 = !DILocation(line: 215, column: 1, scope: !5656)
!6067 = !{i64 2147630196, i64 2147630239, i64 2147630279}
!6068 = !DILocation(line: 216, column: 1, scope: !5656)
!6069 = !{i64 2147630428, i64 2147630471, i64 2147630511}
!6070 = !DILocation(line: 217, column: 1, scope: !5656)
!6071 = !{i64 2147630612, i64 2147630655, i64 2147630695}
!6072 = !DILocation(line: 218, column: 1, scope: !5656)
!6073 = !{i64 2147630821, i64 2147630864, i64 2147630904}
!6074 = !DILocation(line: 219, column: 1, scope: !5656)
!6075 = !{i64 2147631005, i64 2147631048, i64 2147631088}
!6076 = !DILocation(line: 220, column: 1, scope: !5656)
!6077 = !{i64 2147631231, i64 2147631274, i64 2147631314}
!6078 = !DILocation(line: 221, column: 1, scope: !5656)
!6079 = !{i64 2147631457, i64 2147631500, i64 2147631540}
!6080 = !DILocation(line: 222, column: 1, scope: !5656)
!6081 = !{i64 2147631683, i64 2147631726, i64 2147631766}
!6082 = !DILocation(line: 223, column: 1, scope: !5656)
!6083 = !{i64 2147631909, i64 2147631952, i64 2147631992}
!6084 = !DILocation(line: 224, column: 1, scope: !5656)
!6085 = !{i64 2147632135, i64 2147632178, i64 2147632218}
!6086 = !DILocation(line: 225, column: 1, scope: !5656)
!6087 = !{i64 2147632367, i64 2147632410, i64 2147632450}
!6088 = !DILocation(line: 226, column: 1, scope: !5656)
!6089 = !{i64 2147632605, i64 2147632648, i64 2147632688}
!6090 = !DILocation(line: 227, column: 1, scope: !5656)
!6091 = !{i64 2147632825, i64 2147632868, i64 2147632908}
!6092 = !DILocation(line: 228, column: 1, scope: !5656)
!6093 = !{i64 2147633069, i64 2147633112, i64 2147633152}
!6094 = !DILocation(line: 229, column: 1, scope: !5656)
!6095 = !{i64 2147633310, i64 2147633353, i64 2147633393}
!6096 = !DILocation(line: 230, column: 1, scope: !5656)
!6097 = !{i64 2147633545, i64 2147633588, i64 2147633628}
!6098 = !DILocation(line: 231, column: 1, scope: !5656)
!6099 = !{i64 2147633777, i64 2147633820, i64 2147633860}
!6100 = !DILocation(line: 232, column: 1, scope: !5656)
!6101 = !{i64 2147633979, i64 2147634022, i64 2147634062}
!6102 = !DILocation(line: 233, column: 1, scope: !5656)
!6103 = !{i64 2147634229, i64 2147634272, i64 2147634312}
!6104 = !DILocation(line: 234, column: 1, scope: !5656)
!6105 = !{i64 2147634467, i64 2147634510, i64 2147634550}
!6106 = !DILocation(line: 235, column: 1, scope: !5656)
!6107 = !{i64 2147634651, i64 2147634694, i64 2147634734}
!6108 = !DILocation(line: 236, column: 1, scope: !5656)
!6109 = !{i64 2147634875, i64 2147634918, i64 2147634958}
!6110 = !DILocation(line: 237, column: 1, scope: !5656)
!6111 = !{i64 2147635113, i64 2147635156, i64 2147635196}
!6112 = !DILocation(line: 238, column: 1, scope: !5656)
!6113 = !{i64 2147635351, i64 2147635394, i64 2147635434}
!6114 = !DILocation(line: 239, column: 1, scope: !5656)
!6115 = !{i64 2147635544, i64 2147635587, i64 2147635627}
!6116 = !DILocation(line: 240, column: 1, scope: !5656)
!6117 = !{i64 2147635797, i64 2147635840, i64 2147635880}
!6118 = !DILocation(line: 241, column: 1, scope: !5656)
!6119 = !{i64 2147636011, i64 2147636054, i64 2147636094}
!6120 = !DILocation(line: 242, column: 1, scope: !5656)
!6121 = !{i64 2147636219, i64 2147636262, i64 2147636302}
!6122 = !DILocation(line: 243, column: 1, scope: !5656)
!6123 = !{i64 2147636409, i64 2147636452, i64 2147636492}
!6124 = !DILocation(line: 244, column: 1, scope: !5656)
!6125 = !{i64 2147636623, i64 2147636666, i64 2147636706}
!6126 = !DILocation(line: 245, column: 1, scope: !5656)
!6127 = !{i64 2147636885, i64 2147636928, i64 2147636968}
!6128 = !DILocation(line: 246, column: 1, scope: !5656)
!6129 = !{i64 2147637096, i64 2147637139, i64 2147637179}
!6130 = !DILocation(line: 247, column: 1, scope: !5656)
!6131 = !{i64 2147637340, i64 2147637383, i64 2147637423}
!6132 = !DILocation(line: 248, column: 1, scope: !5656)
!6133 = !{i64 2147637551, i64 2147637594, i64 2147637634}
!6134 = !DILocation(line: 249, column: 1, scope: !5656)
!6135 = !{i64 2147637780, i64 2147637823, i64 2147637863}
!6136 = !DILocation(line: 250, column: 1, scope: !5656)
!6137 = !{i64 2147638045, i64 2147638088, i64 2147638128}
!6138 = !DILocation(line: 251, column: 1, scope: !5656)
!6139 = !{i64 2147638250, i64 2147638293, i64 2147638333}
!6140 = !DILocation(line: 252, column: 1, scope: !5656)
!6141 = !{i64 2147642507, i64 2147642550, i64 2147642590}
!6142 = !DILocation(line: 253, column: 1, scope: !5656)
!6143 = !{i64 2147642730, i64 2147642773, i64 2147642813}
!6144 = !DILocation(line: 254, column: 1, scope: !5656)
!6145 = !{i64 2147642893, i64 2147642936, i64 2147642976}
!6146 = !DILocation(line: 255, column: 1, scope: !5656)
!6147 = !{i64 2147643098, i64 2147643141, i64 2147643181}
!6148 = !DILocation(line: 256, column: 1, scope: !5656)
!6149 = !{i64 2147643318, i64 2147643361, i64 2147643401}
!6150 = !DILocation(line: 257, column: 1, scope: !5656)
!6151 = !{i64 2147643532, i64 2147643575, i64 2147643615}
!6152 = !DILocation(line: 258, column: 1, scope: !5656)
!6153 = !{i64 2147643746, i64 2147643789, i64 2147643829}
!6154 = !DILocation(line: 259, column: 1, scope: !5656)
!6155 = !{i64 2147643957, i64 2147644000, i64 2147644040}
!6156 = !DILocation(line: 260, column: 1, scope: !5656)
!6157 = !{i64 2147644150, i64 2147644193, i64 2147644233}
!6158 = !DILocation(line: 261, column: 1, scope: !5656)
!6159 = !{i64 2147644349, i64 2147644392, i64 2147644432}
!6160 = !DILocation(line: 262, column: 1, scope: !5656)
!6161 = !{i64 2147644521, i64 2147644564, i64 2147644604}
!6162 = !DILocation(line: 263, column: 1, scope: !5656)
!6163 = !{i64 2147644714, i64 2147644757, i64 2147644797}
!6164 = !DILocation(line: 264, column: 1, scope: !5656)
!6165 = !{i64 2147644886, i64 2147644929, i64 2147644969}
!6166 = !DILocation(line: 265, column: 1, scope: !5656)
!6167 = !{i64 2147645076, i64 2147645119, i64 2147645159}
!6168 = !DILocation(line: 266, column: 1, scope: !5656)
!6169 = !{i64 2147645269, i64 2147645312, i64 2147645352}
!6170 = !DILocation(line: 267, column: 1, scope: !5656)
!6171 = !{i64 2147645465, i64 2147645508, i64 2147645548}
!6172 = !DILocation(line: 268, column: 1, scope: !5656)
!6173 = !{i64 2147645692, i64 2147645735, i64 2147645775}
!6174 = !DILocation(line: 269, column: 1, scope: !5656)
!6175 = !{i64 2147645909, i64 2147645952, i64 2147645992}
!6176 = !DILocation(line: 270, column: 1, scope: !5656)
!6177 = !{i64 2147646201, i64 2147646244, i64 2147646284}
!6178 = !DILocation(line: 271, column: 1, scope: !5656)
!6179 = !{i64 2147646433, i64 2147646476, i64 2147646516}
!6180 = !DILocation(line: 272, column: 1, scope: !5656)
!6181 = !{i64 2147646650, i64 2147646693, i64 2147646733}
!6182 = !DILocation(line: 273, column: 1, scope: !5656)
!6183 = !{i64 2147646857, i64 2147646900, i64 2147646940}
!6184 = !DILocation(line: 274, column: 1, scope: !5656)
!6185 = !{i64 2147647058, i64 2147647101, i64 2147647141}
!6186 = !DILocation(line: 275, column: 1, scope: !5656)
!6187 = !{i64 2147647290, i64 2147647333, i64 2147647373}
!6188 = !DILocation(line: 276, column: 1, scope: !5656)
!6189 = !{i64 2147647498, i64 2147647541, i64 2147647581}
!6190 = !DILocation(line: 277, column: 1, scope: !5656)
!6191 = !{i64 2147647688, i64 2147647731, i64 2147647771}
!6192 = !DILocation(line: 278, column: 1, scope: !5656)
!6193 = !{i64 2147647914, i64 2147647957, i64 2147647997}
!6194 = !DILocation(line: 279, column: 1, scope: !5656)
!6195 = !{i64 2147648103, i64 2147648146, i64 2147648186}
!6196 = !DILocation(line: 280, column: 1, scope: !5656)
!6197 = !{i64 2147648374, i64 2147648417, i64 2147648457}
!6198 = !DILocation(line: 281, column: 1, scope: !5656)
!6199 = !{i64 2147648594, i64 2147648637, i64 2147648677}
!6200 = !DILocation(line: 282, column: 1, scope: !5656)
!6201 = !{i64 2147648847, i64 2147648890, i64 2147648930}
!6202 = !DILocation(line: 283, column: 1, scope: !5656)
!6203 = !{i64 2147649055, i64 2147649098, i64 2147649138}
!6204 = !DILocation(line: 284, column: 1, scope: !5656)
!6205 = !{i64 2147649287, i64 2147649330, i64 2147649370}
!6206 = !DILocation(line: 285, column: 1, scope: !5656)
!6207 = !{i64 2147649498, i64 2147649541, i64 2147649581}
!6208 = !DILocation(line: 286, column: 1, scope: !5656)
!6209 = !{i64 2147649688, i64 2147649731, i64 2147649771}
!6210 = !DILocation(line: 287, column: 1, scope: !5656)
!6211 = !{i64 2147649902, i64 2147649945, i64 2147649985}
!6212 = !DILocation(line: 288, column: 1, scope: !5656)
!6213 = !{i64 2147650101, i64 2147650144, i64 2147650184}
!6214 = !DILocation(line: 289, column: 1, scope: !5656)
!6215 = !{i64 2147650288, i64 2147650331, i64 2147650371}
!6216 = !DILocation(line: 290, column: 1, scope: !5656)
!6217 = !{i64 2147650496, i64 2147650539, i64 2147650579}
!6218 = !DILocation(line: 291, column: 1, scope: !5656)
!6219 = !{i64 2147650725, i64 2147650768, i64 2147650808}
!6220 = !DILocation(line: 292, column: 1, scope: !5656)
!6221 = !{i64 2147650927, i64 2147650970, i64 2147651010}
!6222 = !DILocation(line: 293, column: 1, scope: !5656)
!6223 = !{i64 2147651126, i64 2147651169, i64 2147651209}
!6224 = !DILocation(line: 294, column: 1, scope: !5656)
!6225 = !{i64 2147651343, i64 2147651386, i64 2147651426}
!6226 = !DILocation(line: 296, column: 1, scope: !5656)
!6227 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !460, file: !460, line: 30, type: !467, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6228)
!6228 = !{!6229, !6230}
!6229 = !DILocalVariable(name: "arg", arg: 1, scope: !6227, file: !460, line: 30, type: !469)
!6230 = !DILocalVariable(name: "key", scope: !6227, file: !460, line: 32, type: !156)
!6231 = !DILocation(line: 0, scope: !6227)
!6232 = !DILocation(line: 37, column: 2, scope: !6227)
!6233 = !DILocation(line: 38, column: 2, scope: !6227)
!6234 = !DILocation(line: 55, column: 2, scope: !6235, inlinedAt: !6242)
!6235 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6239)
!6236 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6237 = !DISubroutineType(types: !6238)
!6238 = !{!32}
!6239 = !{!6240, !6241}
!6240 = !DILocalVariable(name: "key", scope: !6235, file: !6236, line: 44, type: !32)
!6241 = !DILocalVariable(name: "tmp", scope: !6235, file: !6236, line: 53, type: !32)
!6242 = distinct !DILocation(line: 40, column: 8, scope: !6227)
!6243 = !{i64 2187753}
!6244 = !DILocation(line: 0, scope: !6235, inlinedAt: !6242)
!6245 = !DILocalVariable(name: "key", arg: 1, scope: !6246, file: !6236, line: 84, type: !32)
!6246 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6249)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !32}
!6249 = !{!6245}
!6250 = !DILocation(line: 0, scope: !6246, inlinedAt: !6251)
!6251 = distinct !DILocation(line: 47, column: 2, scope: !6227)
!6252 = !DILocation(line: 95, column: 2, scope: !6246, inlinedAt: !6251)
!6253 = !{i64 2188570}
!6254 = !DILocation(line: 51, column: 18, scope: !6227)
!6255 = !DILocation(line: 53, column: 2, scope: !6227)
!6256 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6257, file: !6257, line: 1609, type: !365, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2203)
!6257 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6258 = !DILocation(line: 1611, column: 3, scope: !6256)
!6259 = !DILocation(line: 1612, column: 1, scope: !6256)
!6260 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6257, file: !6257, line: 1629, type: !365, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2203)
!6261 = !DILocation(line: 1631, column: 3, scope: !6260)
!6262 = !DILocation(line: 1632, column: 1, scope: !6260)
!6263 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !490, file: !490, line: 26, type: !496, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !6264)
!6264 = !{!6265}
!6265 = !DILocalVariable(name: "dev", arg: 1, scope: !6263, file: !490, line: 26, type: !498)
!6266 = !DILocation(line: 0, scope: !6263)
!6267 = !DILocation(line: 68, column: 2, scope: !6263)
!6268 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6269, file: !6269, line: 57, type: !6270, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !6316)
!6269 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6270 = !DISubroutineType(types: !6271)
!6271 = !{null, !32, !6272}
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6274)
!6274 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2815, line: 141, baseType: !6275)
!6275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2815, line: 97, size: 256, elements: !6276)
!6276 = !{!6277}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6275, file: !2815, line: 107, baseType: !6278, size: 256)
!6278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2815, line: 98, size: 256, elements: !6279)
!6279 = !{!6280, !6285, !6290, !6295, !6300, !6305, !6310, !6315}
!6280 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 99, baseType: !6281, size: 32)
!6281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 99, size: 32, elements: !6282)
!6282 = !{!6283, !6284}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6281, file: !2815, line: 99, baseType: !156, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6281, file: !2815, line: 99, baseType: !156, size: 32)
!6285 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 100, baseType: !6286, size: 32, offset: 32)
!6286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 100, size: 32, elements: !6287)
!6287 = !{!6288, !6289}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6286, file: !2815, line: 100, baseType: !156, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6286, file: !2815, line: 100, baseType: !156, size: 32)
!6290 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 101, baseType: !6291, size: 32, offset: 64)
!6291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 101, size: 32, elements: !6292)
!6292 = !{!6293, !6294}
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6291, file: !2815, line: 101, baseType: !156, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6291, file: !2815, line: 101, baseType: !156, size: 32)
!6295 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 102, baseType: !6296, size: 32, offset: 96)
!6296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 102, size: 32, elements: !6297)
!6297 = !{!6298, !6299}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6296, file: !2815, line: 102, baseType: !156, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6296, file: !2815, line: 102, baseType: !156, size: 32)
!6300 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 103, baseType: !6301, size: 32, offset: 128)
!6301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 103, size: 32, elements: !6302)
!6302 = !{!6303, !6304}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6301, file: !2815, line: 103, baseType: !156, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6301, file: !2815, line: 103, baseType: !156, size: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 104, baseType: !6306, size: 32, offset: 160)
!6306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 104, size: 32, elements: !6307)
!6307 = !{!6308, !6309}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6306, file: !2815, line: 104, baseType: !156, size: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6306, file: !2815, line: 104, baseType: !156, size: 32)
!6310 = !DIDerivedType(tag: DW_TAG_member, scope: !6278, file: !2815, line: 105, baseType: !6311, size: 32, offset: 192)
!6311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6278, file: !2815, line: 105, size: 32, elements: !6312)
!6312 = !{!6313, !6314}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6311, file: !2815, line: 105, baseType: !156, size: 32)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6311, file: !2815, line: 105, baseType: !156, size: 32)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6278, file: !2815, line: 106, baseType: !156, size: 32, offset: 224)
!6316 = !{!6317, !6318}
!6317 = !DILocalVariable(name: "reason", arg: 1, scope: !6268, file: !6269, line: 57, type: !32)
!6318 = !DILocalVariable(name: "esf", arg: 2, scope: !6268, file: !6269, line: 57, type: !6272)
!6319 = !DILocation(line: 0, scope: !6268)
!6320 = !DILocation(line: 63, column: 2, scope: !6268)
!6321 = !DILocation(line: 64, column: 1, scope: !6268)
!6322 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6269, file: !6269, line: 82, type: !6323, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !6338)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{null, !6272, !6325}
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 32)
!6326 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6327)
!6327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6328)
!6328 = !{!6329, !6330, !6331, !6332, !6333, !6334, !6335, !6336, !6337}
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6327, file: !296, line: 26, baseType: !156, size: 32)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6327, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6327, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6327, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6327, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6327, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6327, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6327, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6327, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6338 = !{!6339, !6340, !6341}
!6339 = !DILocalVariable(name: "esf", arg: 1, scope: !6322, file: !6269, line: 82, type: !6272)
!6340 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6322, file: !6269, line: 82, type: !6325)
!6341 = !DILocalVariable(name: "reason", scope: !6322, file: !6269, line: 88, type: !32)
!6342 = !DILocation(line: 0, scope: !6322)
!6343 = !DILocation(line: 88, column: 35, scope: !6322)
!6344 = !DILocation(line: 108, column: 2, scope: !6322)
!6345 = !DILocation(line: 131, column: 1, scope: !6322)
!6346 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6269, file: !6269, line: 133, type: !6347, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !6349)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{null, !117}
!6349 = !{!6350, !6351, !6352}
!6350 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6346, file: !6269, line: 133, type: !117)
!6351 = !DILocalVariable(name: "ssf_contents", scope: !6346, file: !6269, line: 135, type: !1022)
!6352 = !DILocalVariable(name: "oops_esf", scope: !6346, file: !6269, line: 136, type: !6274)
!6353 = !DILocation(line: 0, scope: !6346)
!6354 = !DILocation(line: 136, column: 2, scope: !6346)
!6355 = !DILocation(line: 136, column: 15, scope: !6346)
!6356 = !DILocation(line: 139, column: 22, scope: !6346)
!6357 = !DILocation(line: 139, column: 17, scope: !6346)
!6358 = !DILocation(line: 139, column: 20, scope: !6346)
!6359 = !DILocation(line: 141, column: 2, scope: !6346)
!6360 = !DILocation(line: 142, column: 2, scope: !6346)
!6361 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6362, file: !6362, line: 40, type: !6247, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6363)
!6362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "irq", arg: 1, scope: !6361, file: !6362, line: 40, type: !32)
!6365 = !DILocation(line: 0, scope: !6361)
!6366 = !DILocation(line: 42, column: 2, scope: !6361)
!6367 = !DILocation(line: 43, column: 1, scope: !6361)
!6368 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !656, file: !656, line: 1684, type: !6369, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6371)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{null, !920}
!6371 = !{!6372}
!6372 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6368, file: !656, line: 1684, type: !920)
!6373 = !DILocation(line: 0, scope: !6368)
!6374 = !DILocation(line: 1686, column: 23, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6368, file: !656, line: 1686, column: 7)
!6376 = !DILocation(line: 1686, column: 7, scope: !6368)
!6377 = !DILocation(line: 1688, column: 5, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !656, line: 1687, column: 3)
!6379 = !{i64 2151256529}
!6380 = !DILocation(line: 1689, column: 81, scope: !6378)
!6381 = !DILocation(line: 1689, column: 60, scope: !6378)
!6382 = !DILocation(line: 1689, column: 34, scope: !6378)
!6383 = !DILocation(line: 1689, column: 5, scope: !6378)
!6384 = !DILocation(line: 1689, column: 43, scope: !6378)
!6385 = !DILocation(line: 1690, column: 5, scope: !6378)
!6386 = !{i64 2151256643}
!6387 = !DILocation(line: 1691, column: 3, scope: !6378)
!6388 = !DILocation(line: 1692, column: 1, scope: !6368)
!6389 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6362, file: !6362, line: 45, type: !6247, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6390)
!6390 = !{!6391}
!6391 = !DILocalVariable(name: "irq", arg: 1, scope: !6389, file: !6362, line: 45, type: !32)
!6392 = !DILocation(line: 0, scope: !6389)
!6393 = !DILocation(line: 47, column: 2, scope: !6389)
!6394 = !DILocation(line: 48, column: 1, scope: !6389)
!6395 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !656, file: !656, line: 1722, type: !6369, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6396)
!6396 = !{!6397}
!6397 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6395, file: !656, line: 1722, type: !920)
!6398 = !DILocation(line: 0, scope: !6395)
!6399 = !DILocation(line: 1724, column: 23, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6395, file: !656, line: 1724, column: 7)
!6401 = !DILocation(line: 1724, column: 7, scope: !6395)
!6402 = !DILocation(line: 1726, column: 81, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6400, file: !656, line: 1725, column: 3)
!6404 = !DILocation(line: 1726, column: 60, scope: !6403)
!6405 = !DILocation(line: 1726, column: 34, scope: !6403)
!6406 = !DILocation(line: 1726, column: 5, scope: !6403)
!6407 = !DILocation(line: 1726, column: 43, scope: !6403)
!6408 = !DILocation(line: 271, column: 3, scope: !6409, inlinedAt: !6411)
!6409 = distinct !DISubprogram(name: "__DSB", scope: !6410, file: !6410, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !2203)
!6410 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6411 = distinct !DILocation(line: 1727, column: 5, scope: !6403)
!6412 = !{i64 3710912}
!6413 = !DILocation(line: 260, column: 3, scope: !6414, inlinedAt: !6415)
!6414 = distinct !DISubprogram(name: "__ISB", scope: !6410, file: !6410, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !2203)
!6415 = distinct !DILocation(line: 1728, column: 5, scope: !6403)
!6416 = !{i64 3710629}
!6417 = !DILocation(line: 1729, column: 3, scope: !6403)
!6418 = !DILocation(line: 1730, column: 1, scope: !6395)
!6419 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6362, file: !6362, line: 50, type: !6420, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6422)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!118, !32}
!6422 = !{!6423}
!6423 = !DILocalVariable(name: "irq", arg: 1, scope: !6419, file: !6362, line: 50, type: !32)
!6424 = !DILocation(line: 0, scope: !6419)
!6425 = !DILocation(line: 52, column: 20, scope: !6419)
!6426 = !DILocation(line: 52, column: 9, scope: !6419)
!6427 = !DILocation(line: 52, column: 41, scope: !6419)
!6428 = !DILocation(line: 52, column: 39, scope: !6419)
!6429 = !DILocation(line: 52, column: 2, scope: !6419)
!6430 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6362, file: !6362, line: 64, type: !6431, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6433)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !32, !32, !156}
!6433 = !{!6434, !6435, !6436}
!6434 = !DILocalVariable(name: "irq", arg: 1, scope: !6430, file: !6362, line: 64, type: !32)
!6435 = !DILocalVariable(name: "prio", arg: 2, scope: !6430, file: !6362, line: 64, type: !32)
!6436 = !DILocalVariable(name: "flags", arg: 3, scope: !6430, file: !6362, line: 64, type: !156)
!6437 = !DILocation(line: 0, scope: !6430)
!6438 = !DILocation(line: 83, column: 8, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !6362, line: 82, column: 9)
!6440 = distinct !DILexicalBlock(scope: !6430, file: !6362, line: 76, column: 6)
!6441 = !DILocation(line: 91, column: 2, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !6362, line: 91, column: 2)
!6443 = distinct !DILexicalBlock(scope: !6430, file: !6362, line: 91, column: 2)
!6444 = !DILocation(line: 91, column: 2, scope: !6443)
!6445 = !DILocation(line: 91, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6442, file: !6362, line: 91, column: 2)
!6447 = !DILocation(line: 95, column: 2, scope: !6430)
!6448 = !DILocation(line: 96, column: 1, scope: !6430)
!6449 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6450, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6452)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{null, !920, !156}
!6452 = !{!6453, !6454}
!6453 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6449, file: !656, line: 1814, type: !920)
!6454 = !DILocalVariable(name: "priority", arg: 2, scope: !6449, file: !656, line: 1814, type: !156)
!6455 = !DILocation(line: 0, scope: !6449)
!6456 = !DILocation(line: 0, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6449, file: !656, line: 1816, column: 7)
!6458 = !DILocation(line: 1816, column: 7, scope: !6449)
!6459 = !DILocation(line: 1824, column: 1, scope: !6449)
!6460 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6362, file: !6362, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !6461)
!6461 = !{!6462}
!6462 = !DILocalVariable(name: "unused", arg: 1, scope: !6460, file: !6362, line: 155, type: !13)
!6463 = !DILocation(line: 0, scope: !6460)
!6464 = !DILocation(line: 159, column: 2, scope: !6460)
!6465 = !DILocation(line: 160, column: 1, scope: !6460)
!6466 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6467, file: !6467, line: 87, type: !365, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2752, retainedNodes: !2203)
!6467 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6468 = !DILocation(line: 89, column: 2, scope: !6466)
!6469 = !DILocation(line: 90, column: 2, scope: !6466)
!6470 = !DILocation(line: 91, column: 1, scope: !6466)
!6471 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6467, file: !6467, line: 23, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!6472 = !DISubprogram(name: "z_arm_int_exit", scope: !6473, file: !6473, line: 153, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!6473 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6474 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6475, file: !6475, line: 256, type: !365, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !2203)
!6475 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6476 = !DILocation(line: 258, column: 2, scope: !6474)
!6477 = !DILocation(line: 260, column: 2, scope: !6474)
!6478 = !DILocation(line: 262, column: 2, scope: !6474)
!6479 = !DILocation(line: 263, column: 2, scope: !6474)
!6480 = !DILocation(line: 267, column: 2, scope: !6474)
!6481 = !DILocation(line: 268, column: 2, scope: !6474)
!6482 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6475, file: !6475, line: 53, type: !365, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !2203)
!6483 = !DILocation(line: 55, column: 12, scope: !6482)
!6484 = !DILocation(line: 271, column: 3, scope: !6485, inlinedAt: !6486)
!6485 = distinct !DISubprogram(name: "__DSB", scope: !6410, file: !6410, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !2203)
!6486 = distinct !DILocation(line: 56, column: 2, scope: !6482)
!6487 = !{i64 3709583}
!6488 = !DILocation(line: 260, column: 3, scope: !6489, inlinedAt: !6490)
!6489 = distinct !DISubprogram(name: "__ISB", scope: !6410, file: !6410, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !2203)
!6490 = distinct !DILocation(line: 57, column: 2, scope: !6482)
!6491 = !{i64 3709300}
!6492 = !DILocation(line: 58, column: 1, scope: !6482)
!6493 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6475, file: !6475, line: 96, type: !365, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !2203)
!6494 = !DILocation(line: 103, column: 13, scope: !6493)
!6495 = !DILocation(line: 975, column: 3, scope: !6496, inlinedAt: !6501)
!6496 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6410, file: !6410, line: 971, type: !6497, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!156}
!6499 = !{!6500}
!6500 = !DILocalVariable(name: "result", scope: !6496, file: !6410, line: 973, type: !156)
!6501 = distinct !DILocation(line: 189, column: 16, scope: !6493)
!6502 = !{i64 3730413}
!6503 = !DILocation(line: 0, scope: !6496, inlinedAt: !6501)
!6504 = !DILocation(line: 189, column: 32, scope: !6493)
!6505 = !DILocalVariable(name: "control", arg: 1, scope: !6506, file: !6410, line: 1001, type: !156)
!6506 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6410, file: !6410, line: 1001, type: !6507, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6509)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{null, !156}
!6509 = !{!6505}
!6510 = !DILocation(line: 0, scope: !6506, inlinedAt: !6511)
!6511 = distinct !DILocation(line: 189, column: 2, scope: !6493)
!6512 = !DILocation(line: 1003, column: 3, scope: !6506, inlinedAt: !6511)
!6513 = !{i64 3731133}
!6514 = !DILocation(line: 260, column: 3, scope: !6489, inlinedAt: !6515)
!6515 = distinct !DILocation(line: 1004, column: 3, scope: !6506, inlinedAt: !6511)
!6516 = !DILocation(line: 191, column: 1, scope: !6493)
!6517 = distinct !DISubprogram(name: "arch_swap", scope: !6518, file: !6518, line: 33, type: !6420, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !6519)
!6518 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6519 = !{!6520}
!6520 = !DILocalVariable(name: "key", arg: 1, scope: !6517, file: !6518, line: 33, type: !32)
!6521 = !DILocation(line: 0, scope: !6517)
!6522 = !DILocation(line: 36, column: 2, scope: !6517)
!6523 = !DILocation(line: 36, column: 17, scope: !6517)
!6524 = !DILocation(line: 36, column: 25, scope: !6517)
!6525 = !DILocation(line: 37, column: 37, scope: !6517)
!6526 = !DILocation(line: 37, column: 17, scope: !6517)
!6527 = !DILocation(line: 37, column: 35, scope: !6517)
!6528 = !DILocation(line: 41, column: 12, scope: !6517)
!6529 = !DILocalVariable(name: "key", arg: 1, scope: !6530, file: !6236, line: 84, type: !32)
!6530 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !6531)
!6531 = !{!6529}
!6532 = !DILocation(line: 0, scope: !6530, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 44, column: 2, scope: !6517)
!6534 = !DILocation(line: 95, column: 2, scope: !6530, inlinedAt: !6533)
!6535 = !{i64 2280084}
!6536 = !DILocation(line: 53, column: 9, scope: !6517)
!6537 = !DILocation(line: 53, column: 24, scope: !6517)
!6538 = !DILocation(line: 53, column: 2, scope: !6517)
!6539 = distinct !DISubprogram(name: "arch_new_thread", scope: !6540, file: !6540, line: 56, type: !6541, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6650)
!6540 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6541 = !DISubroutineType(types: !6542)
!6542 = !{null, !6543, !6645, !1277, !352, !117, !117, !117}
!6543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6544, size: 32)
!6544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !6545)
!6545 = !{!6546, !6604, !6616, !6617, !6618, !6619, !6625, !6640}
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6544, file: !225, line: 247, baseType: !6547, size: 384)
!6547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6548)
!6548 = !{!6549, !6573, !6580, !6581, !6582, !6591, !6592, !6593}
!6549 = !DIDerivedType(tag: DW_TAG_member, scope: !6547, file: !225, line: 60, baseType: !6550, size: 64)
!6550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6547, file: !225, line: 60, size: 64, elements: !6551)
!6551 = !{!6552, !6567}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6550, file: !225, line: 61, baseType: !6553, size: 64)
!6553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6554)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6555)
!6555 = !{!6556, !6562}
!6556 = !DIDerivedType(tag: DW_TAG_member, scope: !6554, file: !235, line: 38, baseType: !6557, size: 32)
!6557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6554, file: !235, line: 38, size: 32, elements: !6558)
!6558 = !{!6559, !6561}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6557, file: !235, line: 39, baseType: !6560, size: 32)
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6554, size: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6557, file: !235, line: 40, baseType: !6560, size: 32)
!6562 = !DIDerivedType(tag: DW_TAG_member, scope: !6554, file: !235, line: 42, baseType: !6563, size: 32, offset: 32)
!6563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6554, file: !235, line: 42, size: 32, elements: !6564)
!6564 = !{!6565, !6566}
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6563, file: !235, line: 43, baseType: !6560, size: 32)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6563, file: !235, line: 44, baseType: !6560, size: 32)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6550, file: !225, line: 62, baseType: !6568, size: 64)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6569)
!6569 = !{!6570}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6568, file: !251, line: 50, baseType: !6571, size: 64)
!6571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6572, size: 64, elements: !256)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6547, file: !225, line: 68, baseType: !6574, size: 32, offset: 64)
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6576)
!6576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6577)
!6577 = !{!6578}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6576, file: !261, line: 232, baseType: !6579, size: 64)
!6579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6554)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6547, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6547, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6582 = !DIDerivedType(tag: DW_TAG_member, scope: !6547, file: !225, line: 90, baseType: !6583, size: 16, offset: 112)
!6583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6547, file: !225, line: 90, size: 16, elements: !6584)
!6584 = !{!6585, !6590}
!6585 = !DIDerivedType(tag: DW_TAG_member, scope: !6583, file: !225, line: 91, baseType: !6586, size: 16)
!6586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6583, file: !225, line: 91, size: 16, elements: !6587)
!6587 = !{!6588, !6589}
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6586, file: !225, line: 96, baseType: !275, size: 8)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6586, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6583, file: !225, line: 100, baseType: !279, size: 16)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6547, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6547, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6547, file: !225, line: 131, baseType: !6594, size: 192, offset: 192)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6595)
!6595 = !{!6596, !6597, !6603}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6594, file: !261, line: 245, baseType: !6553, size: 64)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6594, file: !261, line: 246, baseType: !6598, size: 32, offset: 64)
!6598 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6599)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 32)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{null, !6602}
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 32)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6594, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6544, file: !225, line: 250, baseType: !6605, size: 288, offset: 384)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6606)
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613, !6614, !6615}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6605, file: !296, line: 26, baseType: !156, size: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6605, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6605, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6605, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6605, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6605, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6605, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6605, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6605, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6544, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6544, file: !225, line: 256, baseType: !6575, size: 64, offset: 704)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6544, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6544, file: !225, line: 300, baseType: !6620, size: 96, offset: 800)
!6620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !6621)
!6621 = !{!6622, !6623, !6624}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6620, file: !225, line: 153, baseType: !22, size: 32)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6620, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6620, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6544, file: !225, line: 325, baseType: !6626, size: 32, offset: 896)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 32)
!6627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6628)
!6628 = !{!6629, !6635, !6636}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6627, file: !220, line: 5074, baseType: !6630, size: 96)
!6630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !6631)
!6631 = !{!6632, !6633, !6634}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6630, file: !324, line: 57, baseType: !327, size: 32)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6630, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6630, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6627, file: !220, line: 5075, baseType: !6575, size: 64, offset: 96)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6627, file: !220, line: 5076, baseType: !6637, size: 32, offset: 160)
!6637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !6638)
!6638 = !{!6639}
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6637, file: !334, line: 52, baseType: !22, size: 32)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6544, file: !225, line: 343, baseType: !6641, size: 64, offset: 928)
!6641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6642)
!6642 = !{!6643, !6644}
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6641, file: !296, line: 63, baseType: !156, size: 32)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6641, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 32)
!6646 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !6647)
!6647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !6648)
!6648 = !{!6649}
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6647, file: !347, line: 48, baseType: !135, size: 8)
!6650 = !{!6651, !6652, !6653, !6654, !6655, !6656, !6657, !6658}
!6651 = !DILocalVariable(name: "thread", arg: 1, scope: !6539, file: !6540, line: 56, type: !6543)
!6652 = !DILocalVariable(name: "stack", arg: 2, scope: !6539, file: !6540, line: 56, type: !6645)
!6653 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6539, file: !6540, line: 57, type: !1277)
!6654 = !DILocalVariable(name: "entry", arg: 4, scope: !6539, file: !6540, line: 57, type: !352)
!6655 = !DILocalVariable(name: "p1", arg: 5, scope: !6539, file: !6540, line: 58, type: !117)
!6656 = !DILocalVariable(name: "p2", arg: 6, scope: !6539, file: !6540, line: 58, type: !117)
!6657 = !DILocalVariable(name: "p3", arg: 7, scope: !6539, file: !6540, line: 58, type: !117)
!6658 = !DILocalVariable(name: "iframe", scope: !6539, file: !6540, line: 60, type: !2813)
!6659 = !DILocation(line: 0, scope: !6539)
!6660 = !DILocation(line: 85, column: 11, scope: !6539)
!6661 = !DILocation(line: 93, column: 10, scope: !6539)
!6662 = !DILocation(line: 98, column: 13, scope: !6539)
!6663 = !DILocation(line: 100, column: 15, scope: !6539)
!6664 = !DILocation(line: 100, column: 10, scope: !6539)
!6665 = !DILocation(line: 100, column: 13, scope: !6539)
!6666 = !DILocation(line: 101, column: 15, scope: !6539)
!6667 = !DILocation(line: 101, column: 10, scope: !6539)
!6668 = !DILocation(line: 101, column: 13, scope: !6539)
!6669 = !DILocation(line: 102, column: 15, scope: !6539)
!6670 = !DILocation(line: 102, column: 10, scope: !6539)
!6671 = !DILocation(line: 102, column: 13, scope: !6539)
!6672 = !DILocation(line: 103, column: 15, scope: !6539)
!6673 = !DILocation(line: 103, column: 10, scope: !6539)
!6674 = !DILocation(line: 103, column: 13, scope: !6539)
!6675 = !DILocation(line: 106, column: 10, scope: !6539)
!6676 = !DILocation(line: 106, column: 15, scope: !6539)
!6677 = !DILocation(line: 122, column: 29, scope: !6539)
!6678 = !DILocation(line: 122, column: 23, scope: !6539)
!6679 = !DILocation(line: 122, column: 27, scope: !6539)
!6680 = !DILocation(line: 123, column: 15, scope: !6539)
!6681 = !DILocation(line: 123, column: 23, scope: !6539)
!6682 = !DILocation(line: 143, column: 1, scope: !6539)
!6683 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6540, file: !6540, line: 385, type: !6684, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6687)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!156, !6686, !6686}
!6686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!6687 = !{!6688, !6689, !6690, !6693}
!6688 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6683, file: !6540, line: 385, type: !6686)
!6689 = !DILocalVariable(name: "psp", arg: 2, scope: !6683, file: !6540, line: 385, type: !6686)
!6690 = !DILocalVariable(name: "thread", scope: !6683, file: !6540, line: 388, type: !6691)
!6691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6692, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6544)
!6693 = !DILocalVariable(name: "guard_len", scope: !6683, file: !6540, line: 405, type: !156)
!6694 = !DILocation(line: 0, scope: !6683)
!6695 = !DILocation(line: 388, column: 34, scope: !6683)
!6696 = !DILocation(line: 390, column: 13, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6683, file: !6540, line: 390, column: 6)
!6698 = !DILocation(line: 390, column: 6, scope: !6683)
!6699 = !DILocation(line: 438, column: 6, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6683, file: !6540, line: 438, column: 6)
!6701 = !DILocation(line: 438, column: 6, scope: !6683)
!6702 = !DILocation(line: 442, column: 3, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6700, file: !6540, line: 440, column: 22)
!6704 = !DILocation(line: 455, column: 1, scope: !6683)
!6705 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6540, file: !6540, line: 530, type: !6706, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !6708)
!6706 = !DISubroutineType(types: !6707)
!6707 = !{null, !6543, !1277, !352}
!6708 = !{!6709, !6710, !6711}
!6709 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6705, file: !6540, line: 530, type: !6543)
!6710 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6705, file: !6540, line: 530, type: !1277)
!6711 = !DILocalVariable(name: "_main", arg: 3, scope: !6705, file: !6540, line: 531, type: !352)
!6712 = !DILocation(line: 0, scope: !6705)
!6713 = !DILocation(line: 535, column: 11, scope: !6705)
!6714 = !DILocation(line: 560, column: 2, scope: !6705)
!6715 = !DILocation(line: 576, column: 2, scope: !6705)
!6716 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6717 = !DILocation(line: 603, column: 2, scope: !6705)
!6718 = distinct !DISubprogram(name: "z_arm_fault", scope: !6719, file: !6719, line: 1036, type: !6720, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6735)
!6719 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !156, !156, !156, !6722}
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6724)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6725)
!6725 = !{!6726, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6734}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6724, file: !296, line: 26, baseType: !156, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6724, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6724, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6724, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6724, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6724, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6724, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6724, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6724, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743, !6744, !6745}
!6736 = !DILocalVariable(name: "msp", arg: 1, scope: !6718, file: !6719, line: 1036, type: !156)
!6737 = !DILocalVariable(name: "psp", arg: 2, scope: !6718, file: !6719, line: 1036, type: !156)
!6738 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6718, file: !6719, line: 1036, type: !156)
!6739 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6718, file: !6719, line: 1037, type: !6722)
!6740 = !DILocalVariable(name: "reason", scope: !6718, file: !6719, line: 1039, type: !156)
!6741 = !DILocalVariable(name: "fault", scope: !6718, file: !6719, line: 1040, type: !118)
!6742 = !DILocalVariable(name: "recoverable", scope: !6718, file: !6719, line: 1041, type: !146)
!6743 = !DILocalVariable(name: "nested_exc", scope: !6718, file: !6719, line: 1041, type: !146)
!6744 = !DILocalVariable(name: "esf", scope: !6718, file: !6719, line: 1042, type: !2881)
!6745 = !DILocalVariable(name: "esf_copy", scope: !6718, file: !6719, line: 1047, type: !2882)
!6746 = !DILocation(line: 0, scope: !6718)
!6747 = !DILocation(line: 1040, column: 19, scope: !6718)
!6748 = !DILocation(line: 1041, column: 2, scope: !6718)
!6749 = !DILocation(line: 1047, column: 2, scope: !6718)
!6750 = !DILocation(line: 1047, column: 15, scope: !6718)
!6751 = !DILocalVariable(name: "key", arg: 1, scope: !6752, file: !6236, line: 84, type: !32)
!6752 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6753)
!6753 = !{!6751}
!6754 = !DILocation(line: 0, scope: !6752, inlinedAt: !6755)
!6755 = distinct !DILocation(line: 1050, column: 2, scope: !6718)
!6756 = !DILocation(line: 95, column: 2, scope: !6752, inlinedAt: !6755)
!6757 = !{i64 2313328}
!6758 = !DILocation(line: 1055, column: 9, scope: !6718)
!6759 = !DILocation(line: 1056, column: 2, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6719, line: 1056, column: 2)
!6761 = distinct !DILexicalBlock(scope: !6718, file: !6719, line: 1056, column: 2)
!6762 = !DILocation(line: 1056, column: 2, scope: !6761)
!6763 = !DILocation(line: 1056, column: 2, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6760, file: !6719, line: 1056, column: 2)
!6765 = !DILocation(line: 1040, column: 24, scope: !6718)
!6766 = !DILocation(line: 1063, column: 11, scope: !6718)
!6767 = !DILocation(line: 1064, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6718, file: !6719, line: 1064, column: 6)
!6769 = !{i8 0, i8 2}
!6770 = !DILocation(line: 1064, column: 6, scope: !6718)
!6771 = !DILocation(line: 1070, column: 20, scope: !6718)
!6772 = !DILocation(line: 1070, column: 2, scope: !6718)
!6773 = !DILocation(line: 1089, column: 6, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6718, file: !6719, line: 1089, column: 6)
!6775 = !DILocation(line: 0, scope: !6774)
!6776 = !DILocation(line: 1089, column: 6, scope: !6718)
!6777 = !DILocation(line: 1090, column: 28, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6719, line: 1090, column: 7)
!6779 = distinct !DILexicalBlock(scope: !6774, file: !6719, line: 1089, column: 18)
!6780 = !DILocation(line: 1090, column: 44, scope: !6778)
!6781 = !DILocation(line: 1090, column: 7, scope: !6779)
!6782 = !DILocation(line: 1091, column: 24, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6778, file: !6719, line: 1090, column: 50)
!6784 = !DILocation(line: 1092, column: 3, scope: !6783)
!6785 = !DILocation(line: 1094, column: 23, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6774, file: !6719, line: 1093, column: 9)
!6787 = !DILocation(line: 1097, column: 2, scope: !6718)
!6788 = !DILocation(line: 1098, column: 1, scope: !6718)
!6789 = distinct !DISubprogram(name: "get_esf", scope: !6719, file: !6719, line: 894, type: !6790, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6793)
!6790 = !DISubroutineType(types: !6791)
!6791 = !{!2881, !156, !156, !156, !6792}
!6792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!6793 = !{!6794, !6795, !6796, !6797, !6798, !6799}
!6794 = !DILocalVariable(name: "msp", arg: 1, scope: !6789, file: !6719, line: 894, type: !156)
!6795 = !DILocalVariable(name: "psp", arg: 2, scope: !6789, file: !6719, line: 894, type: !156)
!6796 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6789, file: !6719, line: 894, type: !156)
!6797 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6789, file: !6719, line: 895, type: !6792)
!6798 = !DILocalVariable(name: "alternative_state_exc", scope: !6789, file: !6719, line: 897, type: !146)
!6799 = !DILocalVariable(name: "ptr_esf", scope: !6789, file: !6719, line: 898, type: !2881)
!6800 = !DILocation(line: 0, scope: !6789)
!6801 = !DILocation(line: 900, column: 14, scope: !6789)
!6802 = !DILocation(line: 902, column: 49, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6789, file: !6719, line: 902, column: 6)
!6804 = !DILocation(line: 902, column: 6, scope: !6789)
!6805 = !DILocation(line: 983, column: 18, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6789, file: !6719, line: 983, column: 6)
!6807 = !DILocation(line: 991, column: 7, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6719, line: 990, column: 30)
!6809 = distinct !DILexicalBlock(scope: !6789, file: !6719, line: 990, column: 6)
!6810 = !DILocation(line: 998, column: 16, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6719, line: 995, column: 10)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !6719, line: 991, column: 7)
!6813 = !DILocation(line: 1002, column: 2, scope: !6789)
!6814 = !DILocation(line: 1003, column: 1, scope: !6789)
!6815 = distinct !DISubprogram(name: "fault_handle", scope: !6719, file: !6719, line: 786, type: !6816, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6818)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!156, !2881, !118, !6792}
!6818 = !{!6819, !6820, !6821, !6822}
!6819 = !DILocalVariable(name: "esf", arg: 1, scope: !6815, file: !6719, line: 786, type: !2881)
!6820 = !DILocalVariable(name: "fault", arg: 2, scope: !6815, file: !6719, line: 786, type: !118)
!6821 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6815, file: !6719, line: 786, type: !6792)
!6822 = !DILocalVariable(name: "reason", scope: !6815, file: !6719, line: 788, type: !156)
!6823 = !DILocation(line: 0, scope: !6815)
!6824 = !DILocation(line: 790, column: 15, scope: !6815)
!6825 = !DILocation(line: 792, column: 2, scope: !6815)
!6826 = !DILocation(line: 794, column: 12, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6815, file: !6719, line: 792, column: 17)
!6828 = !DILocation(line: 795, column: 3, scope: !6827)
!6829 = !DILocation(line: 800, column: 12, scope: !6827)
!6830 = !DILocation(line: 801, column: 3, scope: !6827)
!6831 = !DILocation(line: 803, column: 12, scope: !6827)
!6832 = !DILocation(line: 804, column: 3, scope: !6827)
!6833 = !DILocation(line: 806, column: 12, scope: !6827)
!6834 = !DILocation(line: 807, column: 3, scope: !6827)
!6835 = !DILocation(line: 814, column: 3, scope: !6827)
!6836 = !DILocation(line: 815, column: 3, scope: !6827)
!6837 = !DILocation(line: 829, column: 2, scope: !6815)
!6838 = distinct !DISubprogram(name: "hard_fault", scope: !6719, file: !6719, line: 709, type: !6839, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6841)
!6839 = !DISubroutineType(types: !6840)
!6840 = !{!156, !2881, !6792}
!6841 = !{!6842, !6843, !6844}
!6842 = !DILocalVariable(name: "esf", arg: 1, scope: !6838, file: !6719, line: 709, type: !2881)
!6843 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6838, file: !6719, line: 709, type: !6792)
!6844 = !DILocalVariable(name: "reason", scope: !6838, file: !6719, line: 711, type: !156)
!6845 = !DILocation(line: 0, scope: !6838)
!6846 = !DILocation(line: 732, column: 15, scope: !6838)
!6847 = !DILocation(line: 734, column: 12, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6838, file: !6719, line: 734, column: 6)
!6849 = !DILocation(line: 734, column: 17, scope: !6848)
!6850 = !DILocation(line: 734, column: 41, scope: !6848)
!6851 = !DILocation(line: 734, column: 6, scope: !6838)
!6852 = !DILocation(line: 736, column: 19, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6848, file: !6719, line: 736, column: 13)
!6854 = !DILocation(line: 736, column: 49, scope: !6853)
!6855 = !DILocation(line: 736, column: 13, scope: !6848)
!6856 = !DILocation(line: 738, column: 19, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !6719, line: 738, column: 13)
!6858 = !DILocation(line: 738, column: 24, scope: !6857)
!6859 = !DILocation(line: 738, column: 47, scope: !6857)
!6860 = !DILocation(line: 738, column: 13, scope: !6853)
!6861 = !DILocation(line: 740, column: 7, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6719, line: 740, column: 7)
!6863 = distinct !DILexicalBlock(scope: !6857, file: !6719, line: 738, column: 53)
!6864 = !DILocation(line: 740, column: 7, scope: !6863)
!6865 = !DILocation(line: 742, column: 24, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !6719, line: 740, column: 38)
!6867 = !DILocation(line: 743, column: 3, scope: !6866)
!6868 = !DILocation(line: 743, column: 20, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6862, file: !6719, line: 743, column: 14)
!6870 = !DILocation(line: 743, column: 25, scope: !6869)
!6871 = !DILocation(line: 743, column: 52, scope: !6869)
!6872 = !DILocation(line: 743, column: 14, scope: !6862)
!6873 = !DILocation(line: 744, column: 13, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !6719, line: 743, column: 58)
!6875 = !DILocation(line: 745, column: 3, scope: !6874)
!6876 = !DILocation(line: 745, column: 20, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6869, file: !6719, line: 745, column: 14)
!6878 = !DILocation(line: 745, column: 25, scope: !6877)
!6879 = !DILocation(line: 745, column: 52, scope: !6877)
!6880 = !DILocation(line: 745, column: 14, scope: !6869)
!6881 = !DILocation(line: 746, column: 13, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6877, file: !6719, line: 745, column: 58)
!6883 = !DILocation(line: 747, column: 3, scope: !6882)
!6884 = !DILocation(line: 747, column: 20, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6877, file: !6719, line: 747, column: 14)
!6886 = !DILocation(line: 747, column: 52, scope: !6885)
!6887 = !DILocation(line: 747, column: 14, scope: !6877)
!6888 = !DILocation(line: 748, column: 13, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !6719, line: 747, column: 58)
!6890 = !DILocation(line: 754, column: 4, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6719, line: 754, column: 4)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6719, line: 754, column: 4)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6719, line: 754, column: 4)
!6894 = distinct !DILexicalBlock(scope: !6885, file: !6719, line: 753, column: 10)
!6895 = !DILocation(line: 758, column: 3, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6719, line: 758, column: 3)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !6719, line: 758, column: 3)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6719, line: 758, column: 3)
!6899 = distinct !DILexicalBlock(scope: !6857, file: !6719, line: 757, column: 9)
!6900 = !DILocation(line: 766, column: 2, scope: !6838)
!6901 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6719, file: !6719, line: 229, type: !6816, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6902)
!6902 = !{!6903, !6904, !6905, !6906, !6907, !6908, !6911}
!6903 = !DILocalVariable(name: "esf", arg: 1, scope: !6901, file: !6719, line: 229, type: !2881)
!6904 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6901, file: !6719, line: 229, type: !118)
!6905 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6901, file: !6719, line: 230, type: !6792)
!6906 = !DILocalVariable(name: "reason", scope: !6901, file: !6719, line: 232, type: !156)
!6907 = !DILocalVariable(name: "mmfar", scope: !6901, file: !6719, line: 233, type: !156)
!6908 = !DILocalVariable(name: "temp", scope: !6909, file: !6719, line: 254, type: !156)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6719, line: 244, column: 48)
!6910 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 244, column: 6)
!6911 = !DILocalVariable(name: "min_stack_ptr", scope: !6912, file: !6719, line: 309, type: !156)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6719, line: 308, column: 43)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6719, line: 308, column: 7)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6719, line: 289, column: 40)
!6915 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 288, column: 6)
!6916 = !DILocation(line: 0, scope: !6901)
!6917 = !DILocation(line: 237, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 237, column: 6)
!6919 = !DILocation(line: 241, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 241, column: 6)
!6921 = !DILocation(line: 244, column: 12, scope: !6910)
!6922 = !DILocation(line: 244, column: 17, scope: !6910)
!6923 = !DILocation(line: 244, column: 42, scope: !6910)
!6924 = !DILocation(line: 244, column: 6, scope: !6901)
!6925 = !DILocation(line: 254, column: 24, scope: !6909)
!6926 = !DILocation(line: 0, scope: !6909)
!6927 = !DILocation(line: 256, column: 13, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6909, file: !6719, line: 256, column: 7)
!6929 = !DILocation(line: 256, column: 18, scope: !6928)
!6930 = !DILocation(line: 256, column: 44, scope: !6928)
!6931 = !DILocation(line: 256, column: 7, scope: !6909)
!6932 = !DILocation(line: 259, column: 24, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6719, line: 259, column: 8)
!6934 = distinct !DILexicalBlock(scope: !6928, file: !6719, line: 256, column: 50)
!6935 = !DILocation(line: 259, column: 8, scope: !6934)
!6936 = !DILocation(line: 261, column: 15, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6933, file: !6719, line: 259, column: 30)
!6938 = !DILocation(line: 262, column: 4, scope: !6937)
!6939 = !DILocation(line: 265, column: 12, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 265, column: 6)
!6941 = !DILocation(line: 269, column: 12, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 269, column: 6)
!6943 = !DILocation(line: 288, column: 12, scope: !6915)
!6944 = !DILocation(line: 288, column: 17, scope: !6915)
!6945 = !DILocation(line: 288, column: 41, scope: !6915)
!6946 = !DILocation(line: 289, column: 9, scope: !6915)
!6947 = !DILocation(line: 289, column: 14, scope: !6915)
!6948 = !DILocation(line: 288, column: 6, scope: !6901)
!6949 = !DILocation(line: 308, column: 12, scope: !6913)
!6950 = !DILocation(line: 308, column: 17, scope: !6913)
!6951 = !DILocation(line: 308, column: 7, scope: !6914)
!6952 = !DILocation(line: 310, column: 6, scope: !6912)
!6953 = !DILocation(line: 309, column: 29, scope: !6912)
!6954 = !DILocation(line: 0, scope: !6912)
!6955 = !DILocation(line: 312, column: 8, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6912, file: !6719, line: 312, column: 8)
!6957 = !DILocation(line: 312, column: 8, scope: !6912)
!6958 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6959, file: !6410, line: 1099, type: !156)
!6959 = distinct !DISubprogram(name: "__set_PSP", scope: !6410, file: !6410, line: 1099, type: !6507, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6960)
!6960 = !{!6958}
!6961 = !DILocation(line: 0, scope: !6959, inlinedAt: !6962)
!6962 = distinct !DILocation(line: 338, column: 5, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6956, file: !6719, line: 312, column: 23)
!6964 = !DILocation(line: 1101, column: 3, scope: !6959, inlinedAt: !6962)
!6965 = !{i64 3760552}
!6966 = !DILocation(line: 341, column: 4, scope: !6963)
!6967 = !DILocation(line: 342, column: 5, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6719, line: 342, column: 5)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6719, line: 342, column: 5)
!6970 = distinct !DILexicalBlock(scope: !6956, file: !6719, line: 341, column: 11)
!6971 = !DILocation(line: 342, column: 5, scope: !6969)
!6972 = !DILocation(line: 342, column: 5, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6968, file: !6719, line: 342, column: 5)
!6974 = !DILocation(line: 360, column: 12, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6901, file: !6719, line: 360, column: 6)
!6976 = !DILocation(line: 360, column: 17, scope: !6975)
!6977 = !DILocation(line: 360, column: 41, scope: !6975)
!6978 = !DILocation(line: 360, column: 6, scope: !6901)
!6979 = !DILocation(line: 361, column: 14, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6975, file: !6719, line: 360, column: 47)
!6981 = !DILocation(line: 362, column: 2, scope: !6980)
!6982 = !DILocation(line: 366, column: 12, scope: !6901)
!6983 = !DILocation(line: 369, column: 15, scope: !6901)
!6984 = !DILocation(line: 371, column: 2, scope: !6901)
!6985 = distinct !DISubprogram(name: "bus_fault", scope: !6719, file: !6719, line: 383, type: !6986, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!118, !2881, !118, !6792}
!6988 = !{!6989, !6990, !6991, !6992, !6993}
!6989 = !DILocalVariable(name: "esf", arg: 1, scope: !6985, file: !6719, line: 383, type: !2881)
!6990 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6985, file: !6719, line: 383, type: !118)
!6991 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6985, file: !6719, line: 383, type: !6792)
!6992 = !DILocalVariable(name: "reason", scope: !6985, file: !6719, line: 385, type: !156)
!6993 = !DILocalVariable(name: "bfar", scope: !6994, file: !6719, line: 405, type: !156)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6719, line: 395, column: 42)
!6995 = distinct !DILexicalBlock(scope: !6985, file: !6719, line: 395, column: 6)
!6996 = !DILocation(line: 0, scope: !6985)
!6997 = !DILocation(line: 389, column: 11, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6985, file: !6719, line: 389, column: 6)
!6999 = !DILocation(line: 392, column: 11, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6985, file: !6719, line: 392, column: 6)
!7001 = !DILocation(line: 395, column: 11, scope: !6995)
!7002 = !DILocation(line: 395, column: 16, scope: !6995)
!7003 = !DILocation(line: 395, column: 6, scope: !6985)
!7004 = !DILocation(line: 405, column: 3, scope: !6994)
!7005 = !DILocation(line: 0, scope: !6994)
!7006 = !DILocation(line: 407, column: 13, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6994, file: !6719, line: 407, column: 7)
!7008 = !DILocation(line: 407, column: 18, scope: !7007)
!7009 = !DILocation(line: 407, column: 44, scope: !7007)
!7010 = !DILocation(line: 407, column: 7, scope: !6994)
!7011 = !DILocation(line: 411, column: 15, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6719, line: 409, column: 30)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6719, line: 409, column: 8)
!7014 = distinct !DILexicalBlock(scope: !7007, file: !6719, line: 407, column: 50)
!7015 = !DILocation(line: 412, column: 4, scope: !7012)
!7016 = !DILocation(line: 415, column: 11, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !6985, file: !6719, line: 415, column: 6)
!7018 = !DILocation(line: 418, column: 12, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6985, file: !6719, line: 418, column: 6)
!7020 = !DILocation(line: 418, column: 17, scope: !7019)
!7021 = !DILocation(line: 418, column: 41, scope: !7019)
!7022 = !DILocation(line: 418, column: 6, scope: !6985)
!7023 = !DILocation(line: 423, column: 18, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7019, file: !6719, line: 423, column: 13)
!7025 = !DILocation(line: 524, column: 12, scope: !6985)
!7026 = !DILocation(line: 526, column: 15, scope: !6985)
!7027 = !DILocation(line: 528, column: 2, scope: !6985)
!7028 = distinct !DISubprogram(name: "usage_fault", scope: !6719, file: !6719, line: 539, type: !7029, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7033)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!156, !7031}
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 32)
!7032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2882)
!7033 = !{!7034, !7035}
!7034 = !DILocalVariable(name: "esf", arg: 1, scope: !7028, file: !6719, line: 539, type: !7031)
!7035 = !DILocalVariable(name: "reason", scope: !7028, file: !6719, line: 541, type: !156)
!7036 = !DILocation(line: 0, scope: !7028)
!7037 = !DILocation(line: 546, column: 12, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 546, column: 6)
!7039 = !DILocation(line: 549, column: 12, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 549, column: 6)
!7041 = !DILocation(line: 567, column: 12, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 567, column: 6)
!7043 = !DILocation(line: 570, column: 12, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 570, column: 6)
!7045 = !DILocation(line: 573, column: 12, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 573, column: 6)
!7047 = !DILocation(line: 576, column: 12, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7028, file: !6719, line: 576, column: 6)
!7049 = !DILocation(line: 581, column: 12, scope: !7028)
!7050 = !DILocation(line: 583, column: 2, scope: !7028)
!7051 = distinct !DISubprogram(name: "debug_monitor", scope: !6719, file: !6719, line: 632, type: !7052, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7054)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{null, !2881, !6792}
!7054 = !{!7055, !7056}
!7055 = !DILocalVariable(name: "esf", arg: 1, scope: !7051, file: !6719, line: 632, type: !2881)
!7056 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7051, file: !6719, line: 632, type: !6792)
!7057 = !DILocation(line: 0, scope: !7051)
!7058 = !DILocation(line: 634, column: 15, scope: !7051)
!7059 = !DILocation(line: 652, column: 1, scope: !7051)
!7060 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6719, file: !6719, line: 658, type: !7061, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7063)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!146, !2881}
!7063 = !{!7064, !7065, !7066}
!7064 = !DILocalVariable(name: "esf", arg: 1, scope: !7060, file: !6719, line: 658, type: !2881)
!7065 = !DILocalVariable(name: "ret_addr", scope: !7060, file: !6719, line: 660, type: !2652)
!7066 = !DILocalVariable(name: "fault_insn", scope: !7060, file: !6719, line: 686, type: !279)
!7067 = !DILocation(line: 0, scope: !7060)
!7068 = !DILocation(line: 660, column: 46, scope: !7060)
!7069 = !DILocation(line: 660, column: 23, scope: !7060)
!7070 = !DILocation(line: 682, column: 11, scope: !7060)
!7071 = !DILocation(line: 271, column: 3, scope: !7072, inlinedAt: !7073)
!7072 = distinct !DISubprogram(name: "__DSB", scope: !6410, file: !6410, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2203)
!7073 = distinct !DILocation(line: 683, column: 2, scope: !7060)
!7074 = !{i64 3736687}
!7075 = !DILocation(line: 260, column: 3, scope: !7076, inlinedAt: !7077)
!7076 = distinct !DISubprogram(name: "__ISB", scope: !6410, file: !6410, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2203)
!7077 = distinct !DILocation(line: 684, column: 2, scope: !7060)
!7078 = !{i64 3736404}
!7079 = !DILocation(line: 686, column: 35, scope: !7060)
!7080 = !DILocation(line: 686, column: 24, scope: !7060)
!7081 = !DILocation(line: 688, column: 11, scope: !7060)
!7082 = !DILocation(line: 271, column: 3, scope: !7072, inlinedAt: !7083)
!7083 = distinct !DILocation(line: 689, column: 2, scope: !7060)
!7084 = !DILocation(line: 260, column: 3, scope: !7076, inlinedAt: !7085)
!7085 = distinct !DILocation(line: 690, column: 2, scope: !7060)
!7086 = !DILocation(line: 693, column: 45, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7060, file: !6719, line: 693, column: 6)
!7088 = !DILocation(line: 699, column: 1, scope: !7060)
!7089 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6719, file: !6719, line: 1107, type: !365, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !2203)
!7090 = !DILocation(line: 1111, column: 11, scope: !7089)
!7091 = !DILocation(line: 1136, column: 1, scope: !7089)
!7092 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7093, file: !7093, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !7094)
!7093 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7094 = !{!7095}
!7095 = !DILocalVariable(name: "irq", scope: !7092, file: !7093, line: 28, type: !118)
!7096 = !DILocation(line: 0, scope: !7092)
!7097 = !DILocation(line: 30, column: 2, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7092, file: !7093, line: 30, column: 2)
!7099 = !DILocation(line: 31, column: 3, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !7093, line: 30, column: 39)
!7101 = distinct !DILexicalBlock(scope: !7098, file: !7093, line: 30, column: 2)
!7102 = !DILocation(line: 30, column: 35, scope: !7101)
!7103 = !DILocation(line: 30, column: 13, scope: !7101)
!7104 = distinct !{!7104, !7097, !7105}
!7105 = !DILocation(line: 32, column: 2, scope: !7098)
!7106 = !DILocation(line: 33, column: 1, scope: !7092)
!7107 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6450, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2924, retainedNodes: !7108)
!7108 = !{!7109, !7110}
!7109 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7107, file: !656, line: 1814, type: !920)
!7110 = !DILocalVariable(name: "priority", arg: 2, scope: !7107, file: !656, line: 1814, type: !156)
!7111 = !DILocation(line: 0, scope: !7107)
!7112 = !DILocation(line: 1816, column: 7, scope: !7107)
!7113 = !DILocation(line: 0, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7107, file: !656, line: 1816, column: 7)
!7115 = !DILocation(line: 1824, column: 1, scope: !7107)
!7116 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7117, file: !7117, line: 27, type: !7118, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !7223)
!7117 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7118 = !DISubroutineType(types: !7119)
!7119 = !{null, !7120}
!7120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !7121)
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7122, size: 32)
!7122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !7123)
!7123 = !{!7124, !7182, !7194, !7195, !7196, !7197, !7203, !7218}
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7122, file: !225, line: 247, baseType: !7125, size: 384)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !7126)
!7126 = !{!7127, !7151, !7158, !7159, !7160, !7169, !7170, !7171}
!7127 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !225, line: 60, baseType: !7128, size: 64)
!7128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !225, line: 60, size: 64, elements: !7129)
!7129 = !{!7130, !7145}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7128, file: !225, line: 61, baseType: !7131, size: 64)
!7131 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !7132)
!7132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !7133)
!7133 = !{!7134, !7140}
!7134 = !DIDerivedType(tag: DW_TAG_member, scope: !7132, file: !235, line: 38, baseType: !7135, size: 32)
!7135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7132, file: !235, line: 38, size: 32, elements: !7136)
!7136 = !{!7137, !7139}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7135, file: !235, line: 39, baseType: !7138, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7132, size: 32)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7135, file: !235, line: 40, baseType: !7138, size: 32)
!7140 = !DIDerivedType(tag: DW_TAG_member, scope: !7132, file: !235, line: 42, baseType: !7141, size: 32, offset: 32)
!7141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7132, file: !235, line: 42, size: 32, elements: !7142)
!7142 = !{!7143, !7144}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7141, file: !235, line: 43, baseType: !7138, size: 32)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7141, file: !235, line: 44, baseType: !7138, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7128, file: !225, line: 62, baseType: !7146, size: 64)
!7146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !7147)
!7147 = !{!7148}
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7146, file: !251, line: 50, baseType: !7149, size: 64)
!7149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7150, size: 64, elements: !256)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7146, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7125, file: !225, line: 68, baseType: !7152, size: 32, offset: 64)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 32)
!7153 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !7154)
!7154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !7155)
!7155 = !{!7156}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7154, file: !261, line: 232, baseType: !7157, size: 64)
!7157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !7132)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7125, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7125, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!7160 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !225, line: 90, baseType: !7161, size: 16, offset: 112)
!7161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !225, line: 90, size: 16, elements: !7162)
!7162 = !{!7163, !7168}
!7163 = !DIDerivedType(tag: DW_TAG_member, scope: !7161, file: !225, line: 91, baseType: !7164, size: 16)
!7164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7161, file: !225, line: 91, size: 16, elements: !7165)
!7165 = !{!7166, !7167}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7164, file: !225, line: 96, baseType: !275, size: 8)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7164, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7161, file: !225, line: 100, baseType: !279, size: 16)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7125, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7125, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7125, file: !225, line: 131, baseType: !7172, size: 192, offset: 192)
!7172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !7173)
!7173 = !{!7174, !7175, !7181}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7172, file: !261, line: 245, baseType: !7131, size: 64)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7172, file: !261, line: 246, baseType: !7176, size: 32, offset: 64)
!7176 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !7177)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 32)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{null, !7180}
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7172, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7122, file: !225, line: 250, baseType: !7183, size: 288, offset: 384)
!7183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !7184)
!7184 = !{!7185, !7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193}
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7183, file: !296, line: 26, baseType: !156, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7183, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7183, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7183, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7183, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7183, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7183, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7183, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7183, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7122, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7122, file: !225, line: 256, baseType: !7153, size: 64, offset: 704)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7122, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7122, file: !225, line: 300, baseType: !7198, size: 96, offset: 800)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !7199)
!7199 = !{!7200, !7201, !7202}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7198, file: !225, line: 153, baseType: !22, size: 32)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7198, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7198, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7122, file: !225, line: 325, baseType: !7204, size: 32, offset: 896)
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 32)
!7205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !7206)
!7206 = !{!7207, !7213, !7214}
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7205, file: !220, line: 5074, baseType: !7208, size: 96)
!7208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !7209)
!7209 = !{!7210, !7211, !7212}
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7208, file: !324, line: 57, baseType: !327, size: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7208, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7208, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7205, file: !220, line: 5075, baseType: !7153, size: 64, offset: 96)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7205, file: !220, line: 5076, baseType: !7215, size: 32, offset: 160)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !7216)
!7216 = !{!7217}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7215, file: !334, line: 52, baseType: !22, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7122, file: !225, line: 343, baseType: !7219, size: 64, offset: 928)
!7219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !7220)
!7220 = !{!7221, !7222}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7219, file: !296, line: 63, baseType: !156, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7219, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!7223 = !{!7224}
!7224 = !DILocalVariable(name: "thread", arg: 1, scope: !7116, file: !7117, line: 27, type: !7120)
!7225 = !DILocation(line: 0, scope: !7116)
!7226 = !DILocation(line: 29, column: 6, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7116, file: !7117, line: 29, column: 6)
!7228 = !DILocation(line: 29, column: 15, scope: !7227)
!7229 = !DILocation(line: 29, column: 6, scope: !7116)
!7230 = !DILocation(line: 1031, column: 3, scope: !7231, inlinedAt: !7234)
!7231 = distinct !DISubprogram(name: "__get_IPSR", scope: !6410, file: !6410, line: 1027, type: !6497, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !7232)
!7232 = !{!7233}
!7233 = !DILocalVariable(name: "result", scope: !7231, file: !6410, line: 1029, type: !156)
!7234 = distinct !DILocation(line: 48, column: 10, scope: !7235, inlinedAt: !7239)
!7235 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7236, file: !7236, line: 46, type: !7237, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !2203)
!7236 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7237 = !DISubroutineType(types: !7238)
!7238 = !{!146}
!7239 = distinct !DILocation(line: 30, column: 7, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !7117, line: 30, column: 7)
!7241 = distinct !DILexicalBlock(scope: !7227, file: !7117, line: 29, column: 26)
!7242 = !{i64 3725535}
!7243 = !DILocation(line: 0, scope: !7231, inlinedAt: !7234)
!7244 = !DILocation(line: 48, column: 9, scope: !7235, inlinedAt: !7239)
!7245 = !DILocation(line: 30, column: 7, scope: !7241)
!7246 = !DILocation(line: 42, column: 14, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7240, file: !7117, line: 30, column: 25)
!7248 = !DILocation(line: 48, column: 15, scope: !7247)
!7249 = !DILocation(line: 49, column: 3, scope: !7247)
!7250 = !DILocation(line: 52, column: 2, scope: !7116)
!7251 = !DILocation(line: 53, column: 1, scope: !7116)
!7252 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !523, file: !523, line: 127, type: !365, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !2203)
!7253 = !DILocation(line: 134, column: 2, scope: !7252)
!7254 = !DILocation(line: 156, column: 1, scope: !7252)
!7255 = !DILocation(line: 0, scope: !522)
!7256 = !DILocation(line: 289, column: 36, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !522, file: !523, line: 285, column: 2)
!7258 = !DILocation(line: 289, column: 42, scope: !7257)
!7259 = !DILocation(line: 300, column: 36, scope: !522)
!7260 = !DILocation(line: 301, column: 35, scope: !522)
!7261 = !DILocation(line: 302, column: 37, scope: !522)
!7262 = !DILocation(line: 311, column: 2, scope: !522)
!7263 = !DILocation(line: 316, column: 1, scope: !522)
!7264 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !684, file: !684, line: 180, type: !365, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2203)
!7265 = !DILocation(line: 188, column: 12, scope: !7264)
!7266 = !DILocation(line: 271, column: 3, scope: !7267, inlinedAt: !7268)
!7267 = distinct !DISubprogram(name: "__DSB", scope: !6410, file: !6410, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2203)
!7268 = distinct !DILocation(line: 192, column: 2, scope: !7264)
!7269 = !{i64 3916425}
!7270 = !DILocation(line: 260, column: 3, scope: !7271, inlinedAt: !7272)
!7271 = distinct !DISubprogram(name: "__ISB", scope: !6410, file: !6410, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2203)
!7272 = distinct !DILocation(line: 193, column: 2, scope: !7264)
!7273 = !{i64 3916142}
!7274 = !DILocation(line: 194, column: 1, scope: !7264)
!7275 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !684, file: !684, line: 199, type: !365, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2203)
!7276 = !DILocation(line: 282, column: 3, scope: !7277, inlinedAt: !7278)
!7277 = distinct !DISubprogram(name: "__DMB", scope: !6410, file: !6410, line: 280, type: !365, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2203)
!7278 = distinct !DILocation(line: 202, column: 2, scope: !7275)
!7279 = !{i64 3916701}
!7280 = !DILocation(line: 205, column: 12, scope: !7275)
!7281 = !DILocation(line: 206, column: 1, scope: !7275)
!7282 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !684, file: !684, line: 275, type: !7283, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7296)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{null, !7285, !1985, !6686, !6686}
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7287)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !7288)
!7288 = !{!7289, !7290, !7291}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7287, file: !635, line: 53, baseType: !22, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7287, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7287, file: !635, line: 55, baseType: !7292, size: 32, offset: 64)
!7292 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !7293)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !7294)
!7294 = !{!7295}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7293, file: !641, line: 150, baseType: !156, size: 32)
!7296 = !{!7297, !7298, !7299, !7300}
!7297 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7282, file: !684, line: 276, type: !7285)
!7298 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7282, file: !684, line: 276, type: !1985)
!7299 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7282, file: !684, line: 277, type: !6686)
!7300 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7282, file: !684, line: 277, type: !6686)
!7301 = !DILocation(line: 0, scope: !7282)
!7302 = !DILocation(line: 279, column: 6, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7282, file: !684, line: 279, column: 6)
!7304 = !DILocation(line: 280, column: 57, scope: !7303)
!7305 = !DILocation(line: 279, column: 6, scope: !7282)
!7306 = !DILocation(line: 282, column: 3, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !684, line: 282, column: 3)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !684, line: 282, column: 3)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !684, line: 282, column: 3)
!7310 = distinct !DILexicalBlock(scope: !7303, file: !684, line: 280, column: 69)
!7311 = !DILocation(line: 285, column: 1, scope: !7282)
!7312 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7313, file: !7313, line: 220, type: !7314, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7316)
!7313 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!118, !7285, !1985, !6686, !6686}
!7316 = !{!7317, !7318, !7319, !7320, !7321}
!7317 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7312, file: !7313, line: 221, type: !7285)
!7318 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7312, file: !7313, line: 221, type: !1985)
!7319 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7312, file: !7313, line: 222, type: !6686)
!7320 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7312, file: !7313, line: 223, type: !6686)
!7321 = !DILocalVariable(name: "mpu_reg_index", scope: !7312, file: !7313, line: 225, type: !118)
!7322 = !DILocation(line: 0, scope: !7312)
!7323 = !DILocation(line: 225, column: 22, scope: !7312)
!7324 = !DILocation(line: 233, column: 18, scope: !7312)
!7325 = !DILocation(line: 236, column: 23, scope: !7312)
!7326 = !DILocation(line: 236, column: 21, scope: !7312)
!7327 = !DILocation(line: 238, column: 2, scope: !7312)
!7328 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !684, file: !684, line: 105, type: !7329, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7331)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!118, !7285, !143, !143, !146}
!7331 = !{!7332, !7333, !7334, !7335, !7336, !7337}
!7332 = !DILocalVariable(name: "regions", arg: 1, scope: !7328, file: !684, line: 106, type: !7285)
!7333 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7328, file: !684, line: 106, type: !143)
!7334 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7328, file: !684, line: 106, type: !143)
!7335 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7328, file: !684, line: 107, type: !146)
!7336 = !DILocalVariable(name: "i", scope: !7328, file: !684, line: 109, type: !118)
!7337 = !DILocalVariable(name: "reg_index", scope: !7328, file: !684, line: 110, type: !118)
!7338 = !DILocation(line: 0, scope: !7328)
!7339 = !DILocation(line: 110, column: 18, scope: !7328)
!7340 = !DILocation(line: 112, column: 16, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !684, line: 112, column: 2)
!7342 = distinct !DILexicalBlock(scope: !7328, file: !684, line: 112, column: 2)
!7343 = !DILocation(line: 112, column: 2, scope: !7342)
!7344 = !DILocation(line: 113, column: 7, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !684, line: 113, column: 7)
!7346 = distinct !DILexicalBlock(scope: !7341, file: !684, line: 112, column: 36)
!7347 = !DILocation(line: 113, column: 18, scope: !7345)
!7348 = !DILocation(line: 113, column: 23, scope: !7345)
!7349 = !DILocation(line: 113, column: 7, scope: !7346)
!7350 = !DILocation(line: 118, column: 23, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7346, file: !684, line: 118, column: 7)
!7352 = !DILocation(line: 119, column: 7, scope: !7351)
!7353 = !DILocation(line: 118, column: 7, scope: !7346)
!7354 = !DILocation(line: 124, column: 36, scope: !7346)
!7355 = !DILocation(line: 124, column: 15, scope: !7346)
!7356 = !DILocation(line: 126, column: 17, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7346, file: !684, line: 126, column: 7)
!7358 = !DILocation(line: 126, column: 7, scope: !7346)
!7359 = !DILocation(line: 131, column: 12, scope: !7346)
!7360 = !DILocation(line: 132, column: 2, scope: !7346)
!7361 = !DILocation(line: 112, column: 32, scope: !7341)
!7362 = distinct !{!7362, !7343, !7363}
!7363 = !DILocation(line: 132, column: 2, scope: !7342)
!7364 = !DILocation(line: 135, column: 1, scope: !7328)
!7365 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7313, file: !7313, line: 63, type: !7366, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7368)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{!118, !7285}
!7368 = !{!7369, !7370}
!7369 = !DILocalVariable(name: "part", arg: 1, scope: !7365, file: !7313, line: 63, type: !7285)
!7370 = !DILocalVariable(name: "partition_is_valid", scope: !7365, file: !7313, line: 70, type: !118)
!7371 = !DILocation(line: 0, scope: !7365)
!7372 = !DILocation(line: 71, column: 11, scope: !7365)
!7373 = !DILocation(line: 71, column: 37, scope: !7365)
!7374 = !DILocation(line: 72, column: 3, scope: !7365)
!7375 = !DILocation(line: 71, column: 30, scope: !7365)
!7376 = !DILocation(line: 75, column: 11, scope: !7365)
!7377 = !DILocation(line: 75, column: 17, scope: !7365)
!7378 = !DILocation(line: 75, column: 38, scope: !7365)
!7379 = !DILocation(line: 77, column: 2, scope: !7365)
!7380 = distinct !DISubprogram(name: "mpu_configure_region", scope: !684, file: !684, line: 79, type: !7381, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!118, !1985, !7285}
!7383 = !{!7384, !7385, !7386}
!7384 = !DILocalVariable(name: "index", arg: 1, scope: !7380, file: !684, line: 79, type: !1985)
!7385 = !DILocalVariable(name: "new_region", arg: 2, scope: !7380, file: !684, line: 80, type: !7285)
!7386 = !DILocalVariable(name: "region_conf", scope: !7380, file: !684, line: 82, type: !673)
!7387 = !DILocation(line: 0, scope: !7380)
!7388 = !DILocation(line: 82, column: 2, scope: !7380)
!7389 = !DILocation(line: 82, column: 24, scope: !7380)
!7390 = !DILocation(line: 87, column: 33, scope: !7380)
!7391 = !DILocation(line: 87, column: 14, scope: !7380)
!7392 = !DILocation(line: 87, column: 19, scope: !7380)
!7393 = !DILocation(line: 91, column: 55, scope: !7380)
!7394 = !DILocation(line: 92, column: 16, scope: !7380)
!7395 = !DILocation(line: 92, column: 53, scope: !7380)
!7396 = !DILocation(line: 91, column: 2, scope: !7380)
!7397 = !DILocation(line: 95, column: 9, scope: !7380)
!7398 = !DILocation(line: 97, column: 1, scope: !7380)
!7399 = !DILocation(line: 95, column: 2, scope: !7380)
!7400 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7313, file: !7313, line: 113, type: !7401, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7406)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{null, !7403, !7404, !156, !156}
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!7404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7405, size: 32)
!7405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7292)
!7406 = !{!7407, !7408, !7409, !7410}
!7407 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7400, file: !7313, line: 114, type: !7403)
!7408 = !DILocalVariable(name: "attr", arg: 2, scope: !7400, file: !7313, line: 115, type: !7404)
!7409 = !DILocalVariable(name: "base", arg: 3, scope: !7400, file: !7313, line: 115, type: !156)
!7410 = !DILocalVariable(name: "size", arg: 4, scope: !7400, file: !7313, line: 115, type: !156)
!7411 = !DILocation(line: 0, scope: !7400)
!7412 = !DILocation(line: 127, column: 23, scope: !7400)
!7413 = !DILocation(line: 127, column: 35, scope: !7400)
!7414 = !DILocation(line: 127, column: 33, scope: !7400)
!7415 = !DILocation(line: 127, column: 10, scope: !7400)
!7416 = !DILocation(line: 127, column: 15, scope: !7400)
!7417 = !DILocation(line: 129, column: 1, scope: !7400)
!7418 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !684, file: !684, line: 57, type: !7419, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!118, !1985, !671}
!7421 = !{!7422, !7423}
!7422 = !DILocalVariable(name: "index", arg: 1, scope: !7418, file: !684, line: 57, type: !1985)
!7423 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7418, file: !684, line: 58, type: !671)
!7424 = !DILocation(line: 0, scope: !7418)
!7425 = !DILocation(line: 61, column: 6, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !684, line: 61, column: 6)
!7427 = !DILocation(line: 61, column: 12, scope: !7426)
!7428 = !DILocation(line: 61, column: 6, scope: !7418)
!7429 = !DILocation(line: 71, column: 2, scope: !7418)
!7430 = !DILocation(line: 73, column: 2, scope: !7418)
!7431 = !DILocation(line: 74, column: 1, scope: !7418)
!7432 = distinct !DISubprogram(name: "region_init", scope: !7313, file: !7313, line: 29, type: !7433, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7435)
!7433 = !DISubroutineType(types: !7434)
!7434 = !{null, !6686, !671}
!7435 = !{!7436, !7437}
!7436 = !DILocalVariable(name: "index", arg: 1, scope: !7432, file: !7313, line: 29, type: !6686)
!7437 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7432, file: !7313, line: 30, type: !671)
!7438 = !DILocation(line: 0, scope: !7432)
!7439 = !DILocation(line: 33, column: 2, scope: !7432)
!7440 = !DILocation(line: 47, column: 28, scope: !7432)
!7441 = !DILocation(line: 47, column: 33, scope: !7432)
!7442 = !DILocation(line: 48, column: 26, scope: !7432)
!7443 = !DILocation(line: 47, column: 12, scope: !7432)
!7444 = !DILocation(line: 49, column: 32, scope: !7432)
!7445 = !DILocation(line: 49, column: 37, scope: !7432)
!7446 = !DILocation(line: 49, column: 12, scope: !7432)
!7447 = !DILocation(line: 53, column: 1, scope: !7432)
!7448 = distinct !DISubprogram(name: "set_region_number", scope: !7449, file: !7449, line: 32, type: !6507, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7450)
!7449 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7450 = !{!7451}
!7451 = !DILocalVariable(name: "index", arg: 1, scope: !7448, file: !7449, line: 32, type: !156)
!7452 = !DILocation(line: 0, scope: !7448)
!7453 = !DILocation(line: 34, column: 11, scope: !7448)
!7454 = !DILocation(line: 35, column: 1, scope: !7448)
!7455 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7313, file: !7313, line: 88, type: !7456, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7458)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{!156, !156}
!7458 = !{!7459}
!7459 = !DILocalVariable(name: "size", arg: 1, scope: !7455, file: !7313, line: 88, type: !156)
!7460 = !DILocation(line: 0, scope: !7455)
!7461 = !DILocation(line: 91, column: 11, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7455, file: !7313, line: 91, column: 6)
!7463 = !DILocation(line: 91, column: 6, scope: !7455)
!7464 = !DILocation(line: 100, column: 11, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7455, file: !7313, line: 100, column: 6)
!7466 = !DILocation(line: 100, column: 6, scope: !7455)
!7467 = !DILocation(line: 104, column: 35, scope: !7455)
!7468 = !DILocation(line: 104, column: 16, scope: !7455)
!7469 = !DILocation(line: 104, column: 50, scope: !7455)
!7470 = !DILocation(line: 104, column: 72, scope: !7455)
!7471 = !DILocation(line: 104, column: 2, scope: !7455)
!7472 = !DILocation(line: 106, column: 1, scope: !7455)
!7473 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !684, file: !684, line: 307, type: !7474, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7476)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{null, !7285, !143}
!7476 = !{!7477, !7478}
!7477 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7473, file: !684, line: 308, type: !7285)
!7478 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7473, file: !684, line: 308, type: !143)
!7479 = !DILocation(line: 0, scope: !7473)
!7480 = !DILocation(line: 310, column: 6, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7473, file: !684, line: 310, column: 6)
!7482 = !DILocation(line: 311, column: 3, scope: !7481)
!7483 = !DILocation(line: 310, column: 6, scope: !7473)
!7484 = !DILocation(line: 313, column: 3, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !684, line: 313, column: 3)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !684, line: 313, column: 3)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !684, line: 313, column: 3)
!7488 = distinct !DILexicalBlock(scope: !7481, file: !684, line: 311, column: 15)
!7489 = !DILocation(line: 316, column: 1, scope: !7473)
!7490 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7313, file: !7313, line: 249, type: !7491, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7493)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{!118, !7285, !143}
!7493 = !{!7494, !7495, !7496, !7497}
!7494 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7490, file: !7313, line: 250, type: !7285)
!7495 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7490, file: !7313, line: 250, type: !143)
!7496 = !DILocalVariable(name: "mpu_reg_index", scope: !7490, file: !7313, line: 252, type: !118)
!7497 = !DILocalVariable(name: "i", scope: !7498, file: !7313, line: 264, type: !118)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !7313, line: 264, column: 3)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !7313, line: 261, column: 32)
!7500 = distinct !DILexicalBlock(scope: !7490, file: !7313, line: 261, column: 6)
!7501 = !DILocation(line: 0, scope: !7490)
!7502 = !DILocation(line: 252, column: 22, scope: !7490)
!7503 = !DILocation(line: 258, column: 18, scope: !7490)
!7504 = !DILocation(line: 261, column: 20, scope: !7500)
!7505 = !DILocation(line: 261, column: 6, scope: !7490)
!7506 = !DILocation(line: 0, scope: !7498)
!7507 = !DILocation(line: 265, column: 4, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !7313, line: 264, column: 59)
!7509 = distinct !DILexicalBlock(scope: !7498, file: !7313, line: 264, column: 3)
!7510 = !DILocation(line: 264, column: 55, scope: !7509)
!7511 = !DILocation(line: 264, column: 33, scope: !7509)
!7512 = !DILocation(line: 264, column: 3, scope: !7498)
!7513 = distinct !{!7513, !7512, !7514}
!7514 = !DILocation(line: 266, column: 3, scope: !7498)
!7515 = !DILocation(line: 269, column: 2, scope: !7490)
!7516 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7517, file: !7517, line: 218, type: !6507, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7518)
!7517 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7518 = !{!7519}
!7519 = !DILocalVariable(name: "rnr", arg: 1, scope: !7516, file: !7517, line: 218, type: !156)
!7520 = !DILocation(line: 0, scope: !7516)
!7521 = !DILocation(line: 220, column: 12, scope: !7516)
!7522 = !DILocation(line: 221, column: 13, scope: !7516)
!7523 = !DILocation(line: 222, column: 1, scope: !7516)
!7524 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !684, file: !684, line: 326, type: !7525, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7527)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{!118}
!7527 = !{!7528}
!7528 = !DILocalVariable(name: "r_index", scope: !7524, file: !684, line: 328, type: !156)
!7529 = !DILocation(line: 330, column: 17, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7524, file: !684, line: 330, column: 6)
!7531 = !DILocation(line: 330, column: 29, scope: !7530)
!7532 = !DILocation(line: 330, column: 6, scope: !7524)
!7533 = !DILocation(line: 337, column: 3, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !684, line: 337, column: 3)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !684, line: 337, column: 3)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !684, line: 337, column: 3)
!7537 = distinct !DILexicalBlock(scope: !7530, file: !684, line: 330, column: 50)
!7538 = !DILocation(line: 347, column: 2, scope: !7524)
!7539 = !DILocation(line: 0, scope: !7524)
!7540 = !DILocation(line: 364, column: 29, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !684, line: 364, column: 2)
!7542 = distinct !DILexicalBlock(scope: !7524, file: !684, line: 364, column: 2)
!7543 = !DILocation(line: 364, column: 2, scope: !7542)
!7544 = !DILocation(line: 365, column: 25, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7541, file: !684, line: 364, column: 66)
!7546 = !DILocation(line: 365, column: 3, scope: !7545)
!7547 = !DILocation(line: 364, column: 62, scope: !7541)
!7548 = distinct !{!7548, !7543, !7549}
!7549 = !DILocation(line: 366, column: 2, scope: !7542)
!7550 = !DILocation(line: 369, column: 23, scope: !7524)
!7551 = !DILocation(line: 369, column: 21, scope: !7524)
!7552 = !DILocation(line: 372, column: 2, scope: !7524)
!7553 = !DILocation(line: 433, column: 2, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !684, line: 433, column: 2)
!7555 = distinct !DILexicalBlock(scope: !7524, file: !684, line: 433, column: 2)
!7556 = !DILocation(line: 433, column: 2, scope: !7555)
!7557 = !DILocation(line: 433, column: 2, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7554, file: !684, line: 433, column: 2)
!7559 = !DILocation(line: 444, column: 1, scope: !7524)
!7560 = distinct !DISubprogram(name: "strcpy", scope: !7561, file: !7561, line: 20, type: !7562, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7566)
!7561 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!1277, !7564, !7565}
!7564 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1277)
!7565 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!7566 = !{!7567, !7568, !7569}
!7567 = !DILocalVariable(name: "d", arg: 1, scope: !7560, file: !7561, line: 20, type: !7564)
!7568 = !DILocalVariable(name: "s", arg: 2, scope: !7560, file: !7561, line: 20, type: !7565)
!7569 = !DILocalVariable(name: "dest", scope: !7560, file: !7561, line: 22, type: !1277)
!7570 = !DILocation(line: 0, scope: !7560)
!7571 = !DILocation(line: 24, column: 9, scope: !7560)
!7572 = !DILocation(line: 24, column: 12, scope: !7560)
!7573 = !DILocation(line: 24, column: 2, scope: !7560)
!7574 = !DILocation(line: 25, column: 6, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7560, file: !7561, line: 24, column: 21)
!7576 = !DILocation(line: 26, column: 4, scope: !7575)
!7577 = !DILocation(line: 27, column: 4, scope: !7575)
!7578 = distinct !{!7578, !7573, !7579}
!7579 = !DILocation(line: 28, column: 2, scope: !7560)
!7580 = !DILocation(line: 30, column: 5, scope: !7560)
!7581 = !DILocation(line: 32, column: 2, scope: !7560)
!7582 = distinct !DISubprogram(name: "strncpy", scope: !7561, file: !7561, line: 42, type: !7583, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{!1277, !7564, !7565, !315}
!7585 = !{!7586, !7587, !7588, !7589}
!7586 = !DILocalVariable(name: "d", arg: 1, scope: !7582, file: !7561, line: 42, type: !7564)
!7587 = !DILocalVariable(name: "s", arg: 2, scope: !7582, file: !7561, line: 42, type: !7565)
!7588 = !DILocalVariable(name: "n", arg: 3, scope: !7582, file: !7561, line: 42, type: !315)
!7589 = !DILocalVariable(name: "dest", scope: !7582, file: !7561, line: 44, type: !1277)
!7590 = !DILocation(line: 0, scope: !7582)
!7591 = !DILocation(line: 46, column: 12, scope: !7582)
!7592 = !DILocation(line: 46, column: 17, scope: !7582)
!7593 = !DILocation(line: 46, column: 20, scope: !7582)
!7594 = !DILocation(line: 46, column: 23, scope: !7582)
!7595 = !DILocation(line: 46, column: 2, scope: !7582)
!7596 = !DILocation(line: 47, column: 6, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7582, file: !7561, line: 46, column: 32)
!7598 = !DILocation(line: 48, column: 4, scope: !7597)
!7599 = !DILocation(line: 49, column: 4, scope: !7597)
!7600 = !DILocation(line: 50, column: 4, scope: !7597)
!7601 = distinct !{!7601, !7595, !7602}
!7602 = !DILocation(line: 51, column: 2, scope: !7582)
!7603 = !DILocation(line: 54, column: 6, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7582, file: !7561, line: 53, column: 16)
!7605 = !DILocation(line: 55, column: 4, scope: !7604)
!7606 = !DILocation(line: 56, column: 4, scope: !7604)
!7607 = !DILocation(line: 53, column: 11, scope: !7582)
!7608 = !DILocation(line: 53, column: 2, scope: !7582)
!7609 = distinct !{!7609, !7608, !7610}
!7610 = !DILocation(line: 57, column: 2, scope: !7582)
!7611 = !DILocation(line: 59, column: 2, scope: !7582)
!7612 = distinct !DISubprogram(name: "strchr", scope: !7561, file: !7561, line: 69, type: !7613, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7615)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{!1277, !133, !118}
!7615 = !{!7616, !7617, !7618}
!7616 = !DILocalVariable(name: "s", arg: 1, scope: !7612, file: !7561, line: 69, type: !133)
!7617 = !DILocalVariable(name: "c", arg: 2, scope: !7612, file: !7561, line: 69, type: !118)
!7618 = !DILocalVariable(name: "tmp", scope: !7612, file: !7561, line: 71, type: !135)
!7619 = !DILocation(line: 0, scope: !7612)
!7620 = !DILocation(line: 73, column: 2, scope: !7612)
!7621 = !DILocation(line: 73, column: 10, scope: !7612)
!7622 = !DILocation(line: 73, column: 13, scope: !7612)
!7623 = !DILocation(line: 73, column: 21, scope: !7612)
!7624 = !DILocation(line: 74, column: 4, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7612, file: !7561, line: 73, column: 38)
!7626 = distinct !{!7626, !7620, !7627}
!7627 = !DILocation(line: 75, column: 2, scope: !7612)
!7628 = !DILocation(line: 77, column: 9, scope: !7612)
!7629 = !DILocation(line: 77, column: 2, scope: !7612)
!7630 = distinct !DISubprogram(name: "strrchr", scope: !7561, file: !7561, line: 87, type: !7613, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7631)
!7631 = !{!7632, !7633, !7634}
!7632 = !DILocalVariable(name: "s", arg: 1, scope: !7630, file: !7561, line: 87, type: !133)
!7633 = !DILocalVariable(name: "c", arg: 2, scope: !7630, file: !7561, line: 87, type: !118)
!7634 = !DILocalVariable(name: "match", scope: !7630, file: !7561, line: 89, type: !1277)
!7635 = !DILocation(line: 0, scope: !7630)
!7636 = !DILocation(line: 91, column: 2, scope: !7630)
!7637 = !DILocation(line: 92, column: 7, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !7561, line: 92, column: 7)
!7639 = distinct !DILexicalBlock(scope: !7630, file: !7561, line: 91, column: 5)
!7640 = !DILocation(line: 92, column: 10, scope: !7638)
!7641 = !DILocation(line: 92, column: 7, scope: !7639)
!7642 = !DILocation(line: 95, column: 13, scope: !7630)
!7643 = !DILocation(line: 95, column: 2, scope: !7639)
!7644 = distinct !{!7644, !7636, !7645}
!7645 = !DILocation(line: 95, column: 15, scope: !7630)
!7646 = !DILocation(line: 97, column: 2, scope: !7630)
!7647 = distinct !DISubprogram(name: "strlen", scope: !7561, file: !7561, line: 107, type: !7648, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7650)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{!315, !133}
!7650 = !{!7651, !7652}
!7651 = !DILocalVariable(name: "s", arg: 1, scope: !7647, file: !7561, line: 107, type: !133)
!7652 = !DILocalVariable(name: "n", scope: !7647, file: !7561, line: 109, type: !315)
!7653 = !DILocation(line: 0, scope: !7647)
!7654 = !DILocation(line: 111, column: 9, scope: !7647)
!7655 = !DILocation(line: 111, column: 12, scope: !7647)
!7656 = !DILocation(line: 111, column: 2, scope: !7647)
!7657 = !DILocation(line: 112, column: 4, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7647, file: !7561, line: 111, column: 21)
!7659 = !DILocation(line: 113, column: 4, scope: !7658)
!7660 = distinct !{!7660, !7656, !7661}
!7661 = !DILocation(line: 114, column: 2, scope: !7647)
!7662 = !DILocation(line: 116, column: 2, scope: !7647)
!7663 = distinct !DISubprogram(name: "strnlen", scope: !7561, file: !7561, line: 126, type: !7664, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7666)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!315, !133, !315}
!7666 = !{!7667, !7668, !7669}
!7667 = !DILocalVariable(name: "s", arg: 1, scope: !7663, file: !7561, line: 126, type: !133)
!7668 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7663, file: !7561, line: 126, type: !315)
!7669 = !DILocalVariable(name: "n", scope: !7663, file: !7561, line: 128, type: !315)
!7670 = !DILocation(line: 0, scope: !7663)
!7671 = !DILocation(line: 130, column: 9, scope: !7663)
!7672 = !DILocation(line: 130, column: 12, scope: !7663)
!7673 = !DILocation(line: 130, column: 20, scope: !7663)
!7674 = !DILocation(line: 130, column: 2, scope: !7663)
!7675 = !DILocation(line: 131, column: 4, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7663, file: !7561, line: 130, column: 35)
!7677 = !DILocation(line: 132, column: 4, scope: !7676)
!7678 = distinct !{!7678, !7674, !7679}
!7679 = !DILocation(line: 133, column: 2, scope: !7663)
!7680 = !DILocation(line: 135, column: 2, scope: !7663)
!7681 = distinct !DISubprogram(name: "strcmp", scope: !7561, file: !7561, line: 145, type: !7682, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7684)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!118, !133, !133}
!7684 = !{!7685, !7686}
!7685 = !DILocalVariable(name: "s1", arg: 1, scope: !7681, file: !7561, line: 145, type: !133)
!7686 = !DILocalVariable(name: "s2", arg: 2, scope: !7681, file: !7561, line: 145, type: !133)
!7687 = !DILocation(line: 0, scope: !7681)
!7688 = !DILocation(line: 147, column: 10, scope: !7681)
!7689 = !DILocation(line: 147, column: 17, scope: !7681)
!7690 = !DILocation(line: 147, column: 14, scope: !7681)
!7691 = !DILocation(line: 147, column: 22, scope: !7681)
!7692 = !DILocation(line: 148, column: 5, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7681, file: !7561, line: 147, column: 40)
!7694 = !DILocation(line: 149, column: 5, scope: !7693)
!7695 = distinct !{!7695, !7696, !7697}
!7696 = !DILocation(line: 147, column: 2, scope: !7681)
!7697 = !DILocation(line: 150, column: 2, scope: !7681)
!7698 = !DILocation(line: 152, column: 9, scope: !7681)
!7699 = !DILocation(line: 152, column: 15, scope: !7681)
!7700 = !DILocation(line: 152, column: 13, scope: !7681)
!7701 = !DILocation(line: 152, column: 2, scope: !7681)
!7702 = distinct !DISubprogram(name: "strncmp", scope: !7561, file: !7561, line: 162, type: !7703, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7705)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!118, !133, !133, !315}
!7705 = !{!7706, !7707, !7708}
!7706 = !DILocalVariable(name: "s1", arg: 1, scope: !7702, file: !7561, line: 162, type: !133)
!7707 = !DILocalVariable(name: "s2", arg: 2, scope: !7702, file: !7561, line: 162, type: !133)
!7708 = !DILocalVariable(name: "n", arg: 3, scope: !7702, file: !7561, line: 162, type: !315)
!7709 = !DILocation(line: 0, scope: !7702)
!7710 = !DILocation(line: 164, column: 17, scope: !7702)
!7711 = !DILocation(line: 164, column: 21, scope: !7702)
!7712 = !DILocation(line: 164, column: 28, scope: !7702)
!7713 = !DILocation(line: 164, column: 25, scope: !7702)
!7714 = !DILocation(line: 164, column: 33, scope: !7702)
!7715 = !DILocation(line: 165, column: 5, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7702, file: !7561, line: 164, column: 51)
!7717 = !DILocation(line: 166, column: 5, scope: !7716)
!7718 = !DILocation(line: 167, column: 4, scope: !7716)
!7719 = distinct !{!7719, !7720, !7721}
!7720 = !DILocation(line: 164, column: 2, scope: !7702)
!7721 = !DILocation(line: 168, column: 2, scope: !7702)
!7722 = !DILocation(line: 170, column: 25, scope: !7702)
!7723 = !DILocation(line: 170, column: 31, scope: !7702)
!7724 = !DILocation(line: 170, column: 29, scope: !7702)
!7725 = !DILocation(line: 170, column: 9, scope: !7702)
!7726 = !DILocation(line: 170, column: 2, scope: !7702)
!7727 = distinct !DISubprogram(name: "strtok_r", scope: !7561, file: !7561, line: 180, type: !7728, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7731)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{!1277, !1277, !133, !7730}
!7730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!7731 = !{!7732, !7733, !7734, !7735, !7736}
!7732 = !DILocalVariable(name: "str", arg: 1, scope: !7727, file: !7561, line: 180, type: !1277)
!7733 = !DILocalVariable(name: "sep", arg: 2, scope: !7727, file: !7561, line: 180, type: !133)
!7734 = !DILocalVariable(name: "state", arg: 3, scope: !7727, file: !7561, line: 180, type: !7730)
!7735 = !DILocalVariable(name: "start", scope: !7727, file: !7561, line: 182, type: !1277)
!7736 = !DILocalVariable(name: "end", scope: !7727, file: !7561, line: 182, type: !1277)
!7737 = !DILocation(line: 0, scope: !7727)
!7738 = !DILocation(line: 184, column: 10, scope: !7727)
!7739 = !DILocation(line: 184, column: 22, scope: !7727)
!7740 = !DILocation(line: 187, column: 9, scope: !7727)
!7741 = !DILocation(line: 187, column: 16, scope: !7727)
!7742 = !DILocation(line: 187, column: 19, scope: !7727)
!7743 = !DILocation(line: 187, column: 2, scope: !7727)
!7744 = !DILocation(line: 188, column: 8, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7727, file: !7561, line: 187, column: 40)
!7746 = distinct !{!7746, !7743, !7747}
!7747 = !DILocation(line: 189, column: 2, scope: !7727)
!7748 = !DILocation(line: 198, column: 9, scope: !7727)
!7749 = !DILocation(line: 198, column: 18, scope: !7727)
!7750 = !DILocation(line: 198, column: 17, scope: !7727)
!7751 = !DILocation(line: 198, column: 2, scope: !7727)
!7752 = !DILocation(line: 199, column: 6, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7727, file: !7561, line: 198, column: 37)
!7754 = !DILocation(line: 198, column: 14, scope: !7727)
!7755 = distinct !{!7755, !7751, !7756}
!7756 = !DILocation(line: 200, column: 2, scope: !7727)
!7757 = !DILocation(line: 203, column: 8, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7561, line: 202, column: 20)
!7759 = distinct !DILexicalBlock(scope: !7727, file: !7561, line: 202, column: 6)
!7760 = !DILocation(line: 204, column: 16, scope: !7758)
!7761 = !DILocation(line: 205, column: 2, scope: !7758)
!7762 = !DILocation(line: 210, column: 1, scope: !7727)
!7763 = distinct !DISubprogram(name: "strcat", scope: !7561, file: !7561, line: 212, type: !7562, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7764)
!7764 = !{!7765, !7766}
!7765 = !DILocalVariable(name: "dest", arg: 1, scope: !7763, file: !7561, line: 212, type: !7564)
!7766 = !DILocalVariable(name: "src", arg: 2, scope: !7763, file: !7561, line: 212, type: !7565)
!7767 = !DILocation(line: 0, scope: !7763)
!7768 = !DILocation(line: 214, column: 16, scope: !7763)
!7769 = !DILocation(line: 214, column: 14, scope: !7763)
!7770 = !DILocation(line: 214, column: 2, scope: !7763)
!7771 = !DILocation(line: 215, column: 2, scope: !7763)
!7772 = distinct !DISubprogram(name: "strncat", scope: !7561, file: !7561, line: 218, type: !7583, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7773)
!7773 = !{!7774, !7775, !7776, !7777, !7778}
!7774 = !DILocalVariable(name: "dest", arg: 1, scope: !7772, file: !7561, line: 218, type: !7564)
!7775 = !DILocalVariable(name: "src", arg: 2, scope: !7772, file: !7561, line: 218, type: !7565)
!7776 = !DILocalVariable(name: "n", arg: 3, scope: !7772, file: !7561, line: 219, type: !315)
!7777 = !DILocalVariable(name: "orig_dest", scope: !7772, file: !7561, line: 221, type: !1277)
!7778 = !DILocalVariable(name: "len", scope: !7772, file: !7561, line: 222, type: !315)
!7779 = !DILocation(line: 0, scope: !7772)
!7780 = !DILocation(line: 222, column: 15, scope: !7772)
!7781 = !DILocation(line: 224, column: 7, scope: !7772)
!7782 = !DILocation(line: 225, column: 14, scope: !7772)
!7783 = !DILocation(line: 225, column: 19, scope: !7772)
!7784 = !DILocation(line: 225, column: 11, scope: !7772)
!7785 = !DILocation(line: 225, column: 23, scope: !7772)
!7786 = !DILocation(line: 225, column: 28, scope: !7772)
!7787 = !DILocation(line: 225, column: 2, scope: !7772)
!7788 = !DILocation(line: 226, column: 17, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7772, file: !7561, line: 225, column: 38)
!7790 = !DILocation(line: 226, column: 8, scope: !7789)
!7791 = !DILocation(line: 226, column: 11, scope: !7789)
!7792 = distinct !{!7792, !7787, !7793}
!7793 = !DILocation(line: 227, column: 2, scope: !7772)
!7794 = !DILocation(line: 228, column: 8, scope: !7772)
!7795 = !DILocation(line: 230, column: 2, scope: !7772)
!7796 = distinct !DISubprogram(name: "memcmp", scope: !7561, file: !7561, line: 239, type: !7797, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!118, !13, !13, !315}
!7799 = !{!7800, !7801, !7802, !7803, !7804}
!7800 = !DILocalVariable(name: "m1", arg: 1, scope: !7796, file: !7561, line: 239, type: !13)
!7801 = !DILocalVariable(name: "m2", arg: 2, scope: !7796, file: !7561, line: 239, type: !13)
!7802 = !DILocalVariable(name: "n", arg: 3, scope: !7796, file: !7561, line: 239, type: !315)
!7803 = !DILocalVariable(name: "c1", scope: !7796, file: !7561, line: 241, type: !133)
!7804 = !DILocalVariable(name: "c2", scope: !7796, file: !7561, line: 242, type: !133)
!7805 = !DILocation(line: 0, scope: !7796)
!7806 = !DILocation(line: 244, column: 7, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7796, file: !7561, line: 244, column: 6)
!7808 = !DILocation(line: 244, column: 6, scope: !7796)
!7809 = !DILocation(line: 248, column: 10, scope: !7796)
!7810 = !DILocation(line: 248, column: 14, scope: !7796)
!7811 = !DILocation(line: 248, column: 19, scope: !7796)
!7812 = !DILocation(line: 248, column: 2, scope: !7796)
!7813 = !DILocation(line: 248, column: 23, scope: !7796)
!7814 = !DILocation(line: 248, column: 30, scope: !7796)
!7815 = !DILocation(line: 248, column: 27, scope: !7796)
!7816 = !DILocation(line: 249, column: 5, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7796, file: !7561, line: 248, column: 36)
!7818 = !DILocation(line: 250, column: 5, scope: !7817)
!7819 = distinct !{!7819, !7812, !7820}
!7820 = !DILocation(line: 251, column: 2, scope: !7796)
!7821 = !DILocation(line: 253, column: 9, scope: !7796)
!7822 = !DILocation(line: 253, column: 15, scope: !7796)
!7823 = !DILocation(line: 253, column: 13, scope: !7796)
!7824 = !DILocation(line: 253, column: 2, scope: !7796)
!7825 = !DILocation(line: 254, column: 1, scope: !7796)
!7826 = distinct !DISubprogram(name: "memmove", scope: !7561, file: !7561, line: 263, type: !7827, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7829)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!117, !117, !13, !315}
!7829 = !{!7830, !7831, !7832, !7833, !7834}
!7830 = !DILocalVariable(name: "d", arg: 1, scope: !7826, file: !7561, line: 263, type: !117)
!7831 = !DILocalVariable(name: "s", arg: 2, scope: !7826, file: !7561, line: 263, type: !13)
!7832 = !DILocalVariable(name: "n", arg: 3, scope: !7826, file: !7561, line: 263, type: !315)
!7833 = !DILocalVariable(name: "dest", scope: !7826, file: !7561, line: 265, type: !1277)
!7834 = !DILocalVariable(name: "src", scope: !7826, file: !7561, line: 266, type: !133)
!7835 = !DILocation(line: 0, scope: !7826)
!7836 = !DILocation(line: 268, column: 21, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7826, file: !7561, line: 268, column: 6)
!7838 = !DILocation(line: 268, column: 28, scope: !7837)
!7839 = !DILocation(line: 268, column: 6, scope: !7826)
!7840 = !DILocation(line: 280, column: 12, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7837, file: !7561, line: 278, column: 9)
!7842 = !DILocation(line: 280, column: 3, scope: !7841)
!7843 = !DILocation(line: 275, column: 5, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7561, line: 274, column: 17)
!7845 = distinct !DILexicalBlock(scope: !7837, file: !7561, line: 268, column: 33)
!7846 = !DILocation(line: 276, column: 14, scope: !7844)
!7847 = !DILocation(line: 276, column: 4, scope: !7844)
!7848 = !DILocation(line: 276, column: 12, scope: !7844)
!7849 = !DILocation(line: 274, column: 12, scope: !7845)
!7850 = !DILocation(line: 274, column: 3, scope: !7845)
!7851 = distinct !{!7851, !7850, !7852}
!7852 = !DILocation(line: 277, column: 3, scope: !7845)
!7853 = !DILocation(line: 281, column: 12, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7841, file: !7561, line: 280, column: 17)
!7855 = !DILocation(line: 281, column: 10, scope: !7854)
!7856 = !DILocation(line: 282, column: 8, scope: !7854)
!7857 = !DILocation(line: 283, column: 7, scope: !7854)
!7858 = !DILocation(line: 284, column: 5, scope: !7854)
!7859 = distinct !{!7859, !7842, !7860}
!7860 = !DILocation(line: 285, column: 3, scope: !7841)
!7861 = !DILocation(line: 288, column: 2, scope: !7826)
!7862 = distinct !DISubprogram(name: "memcpy", scope: !7561, file: !7561, line: 298, type: !7863, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7867)
!7863 = !DISubroutineType(types: !7864)
!7864 = !{!117, !7865, !7866, !315}
!7865 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !117)
!7866 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7867 = !{!7868, !7869, !7870, !7871, !7872}
!7868 = !DILocalVariable(name: "d", arg: 1, scope: !7862, file: !7561, line: 298, type: !7865)
!7869 = !DILocalVariable(name: "s", arg: 2, scope: !7862, file: !7561, line: 298, type: !7866)
!7870 = !DILocalVariable(name: "n", arg: 3, scope: !7862, file: !7561, line: 298, type: !315)
!7871 = !DILocalVariable(name: "d_byte", scope: !7862, file: !7561, line: 302, type: !1127)
!7872 = !DILocalVariable(name: "s_byte", scope: !7862, file: !7561, line: 303, type: !3000)
!7873 = !DILocation(line: 0, scope: !7862)
!7874 = !DILocation(line: 337, column: 11, scope: !7862)
!7875 = !DILocation(line: 337, column: 2, scope: !7862)
!7876 = !DILocation(line: 338, column: 25, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7862, file: !7561, line: 337, column: 16)
!7878 = !DILocation(line: 338, column: 17, scope: !7877)
!7879 = !DILocation(line: 338, column: 11, scope: !7877)
!7880 = !DILocation(line: 338, column: 15, scope: !7877)
!7881 = !DILocation(line: 339, column: 4, scope: !7877)
!7882 = distinct !{!7882, !7875, !7883}
!7883 = !DILocation(line: 340, column: 2, scope: !7862)
!7884 = !DILocation(line: 342, column: 2, scope: !7862)
!7885 = distinct !DISubprogram(name: "memset", scope: !7561, file: !7561, line: 352, type: !7886, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!117, !117, !118, !315}
!7888 = !{!7889, !7890, !7891, !7892, !7893}
!7889 = !DILocalVariable(name: "buf", arg: 1, scope: !7885, file: !7561, line: 352, type: !117)
!7890 = !DILocalVariable(name: "c", arg: 2, scope: !7885, file: !7561, line: 352, type: !118)
!7891 = !DILocalVariable(name: "n", arg: 3, scope: !7885, file: !7561, line: 352, type: !315)
!7892 = !DILocalVariable(name: "d_byte", scope: !7885, file: !7561, line: 356, type: !1127)
!7893 = !DILocalVariable(name: "c_byte", scope: !7885, file: !7561, line: 357, type: !144)
!7894 = !DILocation(line: 0, scope: !7885)
!7895 = !DILocation(line: 357, column: 25, scope: !7885)
!7896 = !DILocation(line: 389, column: 11, scope: !7885)
!7897 = !DILocation(line: 389, column: 2, scope: !7885)
!7898 = !DILocation(line: 390, column: 11, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7885, file: !7561, line: 389, column: 16)
!7900 = !DILocation(line: 390, column: 15, scope: !7899)
!7901 = !DILocation(line: 391, column: 4, scope: !7899)
!7902 = distinct !{!7902, !7897, !7903}
!7903 = !DILocation(line: 392, column: 2, scope: !7885)
!7904 = !DILocation(line: 394, column: 2, scope: !7885)
!7905 = distinct !DISubprogram(name: "memchr", scope: !7561, file: !7561, line: 404, type: !7906, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !7908)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!117, !13, !118, !315}
!7908 = !{!7909, !7910, !7911, !7912}
!7909 = !DILocalVariable(name: "s", arg: 1, scope: !7905, file: !7561, line: 404, type: !13)
!7910 = !DILocalVariable(name: "c", arg: 2, scope: !7905, file: !7561, line: 404, type: !118)
!7911 = !DILocalVariable(name: "n", arg: 3, scope: !7905, file: !7561, line: 404, type: !315)
!7912 = !DILocalVariable(name: "p", scope: !7913, file: !7561, line: 407, type: !3000)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7561, line: 406, column: 14)
!7914 = distinct !DILexicalBlock(scope: !7905, file: !7561, line: 406, column: 6)
!7915 = !DILocation(line: 0, scope: !7905)
!7916 = !DILocation(line: 406, column: 8, scope: !7914)
!7917 = !DILocation(line: 406, column: 6, scope: !7905)
!7918 = !DILocation(line: 409, column: 3, scope: !7913)
!7919 = !DILocation(line: 0, scope: !7913)
!7920 = !DILocation(line: 410, column: 8, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !7561, line: 410, column: 8)
!7922 = distinct !DILexicalBlock(scope: !7913, file: !7561, line: 409, column: 6)
!7923 = !DILocation(line: 410, column: 13, scope: !7921)
!7924 = !DILocation(line: 410, column: 8, scope: !7922)
!7925 = distinct !{!7925, !7918, !7926}
!7926 = !DILocation(line: 414, column: 20, scope: !7913)
!7927 = !DILocation(line: 417, column: 2, scope: !7905)
!7928 = !DILocation(line: 418, column: 1, scope: !7905)
!7929 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !694, file: !694, line: 23, type: !3738, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7930)
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "hook", arg: 1, scope: !7929, file: !694, line: 23, type: !438)
!7932 = !DILocation(line: 0, scope: !7929)
!7933 = !DILocation(line: 25, column: 15, scope: !7929)
!7934 = !DILocation(line: 26, column: 1, scope: !7929)
!7935 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !694, file: !694, line: 14, type: !439, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "c", arg: 1, scope: !7935, file: !694, line: 14, type: !118)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 18, column: 2, scope: !7935)
!7940 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !694, file: !694, line: 28, type: !7941, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7943)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!118, !118, !690}
!7943 = !{!7944, !7945}
!7944 = !DILocalVariable(name: "c", arg: 1, scope: !7940, file: !694, line: 28, type: !118)
!7945 = !DILocalVariable(name: "stream", arg: 2, scope: !7940, file: !694, line: 28, type: !690)
!7946 = !DILocation(line: 0, scope: !7940)
!7947 = !DILocation(line: 30, column: 27, scope: !7940)
!7948 = !DILocation(line: 30, column: 50, scope: !7940)
!7949 = !DILocation(line: 30, column: 9, scope: !7940)
!7950 = !DILocation(line: 30, column: 2, scope: !7940)
!7951 = distinct !DISubprogram(name: "fputc", scope: !694, file: !694, line: 41, type: !7941, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7952)
!7952 = !{!7953, !7954}
!7953 = !DILocalVariable(name: "c", arg: 1, scope: !7951, file: !694, line: 41, type: !118)
!7954 = !DILocalVariable(name: "stream", arg: 2, scope: !7951, file: !694, line: 41, type: !690)
!7955 = !DILocation(line: 0, scope: !7951)
!7956 = !DILocation(line: 43, column: 9, scope: !7951)
!7957 = !DILocation(line: 43, column: 2, scope: !7951)
!7958 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7959, file: !7959, line: 72, type: !7941, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7960)
!7959 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!7960 = !{!7961, !7962}
!7961 = !DILocalVariable(name: "c", arg: 1, scope: !7958, file: !7959, line: 72, type: !118)
!7962 = !DILocalVariable(name: "stream", arg: 2, scope: !7958, file: !7959, line: 72, type: !690)
!7963 = !DILocation(line: 0, scope: !7958)
!7964 = !DILocation(line: 81, column: 2, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7958, file: !7959, line: 81, column: 2)
!7966 = !{i64 2155130252}
!7967 = !DILocation(line: 82, column: 9, scope: !7958)
!7968 = !DILocation(line: 82, column: 2, scope: !7958)
!7969 = distinct !DISubprogram(name: "fputs", scope: !694, file: !694, line: 46, type: !7970, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7973)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!118, !7565, !7972}
!7972 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !690)
!7973 = !{!7974, !7975, !7976, !7977}
!7974 = !DILocalVariable(name: "s", arg: 1, scope: !7969, file: !694, line: 46, type: !7565)
!7975 = !DILocalVariable(name: "stream", arg: 2, scope: !7969, file: !694, line: 46, type: !7972)
!7976 = !DILocalVariable(name: "len", scope: !7969, file: !694, line: 48, type: !118)
!7977 = !DILocalVariable(name: "ret", scope: !7969, file: !694, line: 49, type: !118)
!7978 = !DILocation(line: 0, scope: !7969)
!7979 = !DILocation(line: 48, column: 12, scope: !7969)
!7980 = !DILocation(line: 51, column: 8, scope: !7969)
!7981 = !DILocation(line: 53, column: 13, scope: !7969)
!7982 = !DILocation(line: 53, column: 9, scope: !7969)
!7983 = !DILocation(line: 53, column: 2, scope: !7969)
!7984 = distinct !DISubprogram(name: "fwrite", scope: !694, file: !694, line: 99, type: !7985, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7987)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!315, !7866, !315, !315, !7972}
!7987 = !{!7988, !7989, !7990, !7991}
!7988 = !DILocalVariable(name: "ptr", arg: 1, scope: !7984, file: !694, line: 99, type: !7866)
!7989 = !DILocalVariable(name: "size", arg: 2, scope: !7984, file: !694, line: 99, type: !315)
!7990 = !DILocalVariable(name: "nitems", arg: 3, scope: !7984, file: !694, line: 99, type: !315)
!7991 = !DILocalVariable(name: "stream", arg: 4, scope: !7984, file: !694, line: 100, type: !7972)
!7992 = !DILocation(line: 0, scope: !7984)
!7993 = !DILocation(line: 102, column: 9, scope: !7984)
!7994 = !DILocation(line: 102, column: 2, scope: !7984)
!7995 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7959, file: !7959, line: 96, type: !7985, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7996)
!7996 = !{!7997, !7998, !7999, !8000}
!7997 = !DILocalVariable(name: "ptr", arg: 1, scope: !7995, file: !7959, line: 96, type: !7866)
!7998 = !DILocalVariable(name: "size", arg: 2, scope: !7995, file: !7959, line: 96, type: !315)
!7999 = !DILocalVariable(name: "nitems", arg: 3, scope: !7995, file: !7959, line: 96, type: !315)
!8000 = !DILocalVariable(name: "stream", arg: 4, scope: !7995, file: !7959, line: 96, type: !7972)
!8001 = !DILocation(line: 0, scope: !7995)
!8002 = !DILocation(line: 107, column: 2, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7995, file: !7959, line: 107, column: 2)
!8004 = !{i64 2155130356}
!8005 = !DILocation(line: 108, column: 9, scope: !7995)
!8006 = !DILocation(line: 108, column: 2, scope: !7995)
!8007 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !694, file: !694, line: 56, type: !7985, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8008)
!8008 = !{!8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016}
!8009 = !DILocalVariable(name: "ptr", arg: 1, scope: !8007, file: !694, line: 56, type: !7866)
!8010 = !DILocalVariable(name: "size", arg: 2, scope: !8007, file: !694, line: 56, type: !315)
!8011 = !DILocalVariable(name: "nitems", arg: 3, scope: !8007, file: !694, line: 57, type: !315)
!8012 = !DILocalVariable(name: "stream", arg: 4, scope: !8007, file: !694, line: 57, type: !7972)
!8013 = !DILocalVariable(name: "i", scope: !8007, file: !694, line: 59, type: !315)
!8014 = !DILocalVariable(name: "j", scope: !8007, file: !694, line: 60, type: !315)
!8015 = !DILocalVariable(name: "p", scope: !8007, file: !694, line: 61, type: !3000)
!8016 = !DILabel(scope: !8007, name: "done", file: !694, line: 82)
!8017 = !DILocation(line: 0, scope: !8007)
!8018 = !DILocation(line: 63, column: 14, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8007, file: !694, line: 63, column: 6)
!8020 = !DILocation(line: 63, column: 24, scope: !8019)
!8021 = !DILocation(line: 72, column: 3, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8007, file: !694, line: 70, column: 5)
!8023 = !DILocation(line: 0, scope: !8022)
!8024 = !DILocation(line: 73, column: 8, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !694, line: 73, column: 8)
!8026 = distinct !DILexicalBlock(scope: !8022, file: !694, line: 72, column: 6)
!8027 = !DILocation(line: 73, column: 29, scope: !8025)
!8028 = !DILocation(line: 73, column: 27, scope: !8025)
!8029 = !DILocation(line: 73, column: 21, scope: !8025)
!8030 = !DILocation(line: 73, column: 33, scope: !8025)
!8031 = !DILocation(line: 73, column: 8, scope: !8026)
!8032 = !DILocation(line: 76, column: 5, scope: !8026)
!8033 = !DILocation(line: 77, column: 14, scope: !8022)
!8034 = !DILocation(line: 77, column: 3, scope: !8026)
!8035 = distinct !{!8035, !8021, !8036}
!8036 = !DILocation(line: 77, column: 17, scope: !8022)
!8037 = !DILocation(line: 79, column: 4, scope: !8022)
!8038 = !DILocation(line: 80, column: 13, scope: !8007)
!8039 = !DILocation(line: 80, column: 2, scope: !8022)
!8040 = distinct !{!8040, !8041, !8042}
!8041 = !DILocation(line: 70, column: 2, scope: !8007)
!8042 = !DILocation(line: 80, column: 16, scope: !8007)
!8043 = !DILocation(line: 82, column: 1, scope: !8007)
!8044 = !DILocation(line: 83, column: 17, scope: !8007)
!8045 = !DILocation(line: 83, column: 2, scope: !8007)
!8046 = !DILocation(line: 84, column: 1, scope: !8007)
!8047 = distinct !DISubprogram(name: "puts", scope: !694, file: !694, line: 106, type: !8048, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!118, !133}
!8050 = !{!8051}
!8051 = !DILocalVariable(name: "s", arg: 1, scope: !8047, file: !694, line: 106, type: !133)
!8052 = !DILocation(line: 0, scope: !8047)
!8053 = !DILocation(line: 108, column: 6, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8047, file: !694, line: 108, column: 6)
!8055 = !DILocation(line: 108, column: 23, scope: !8054)
!8056 = !DILocation(line: 108, column: 6, scope: !8047)
!8057 = !DILocation(line: 112, column: 9, scope: !8047)
!8058 = !DILocation(line: 112, column: 29, scope: !8047)
!8059 = !DILocation(line: 112, column: 2, scope: !8047)
!8060 = !DILocation(line: 113, column: 1, scope: !8047)
!8061 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !835, file: !835, line: 368, type: !888, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8062)
!8062 = !{!8063}
!8063 = !DILocalVariable(name: "dev", arg: 1, scope: !8061, file: !835, line: 368, type: !864)
!8064 = !DILocation(line: 0, scope: !8061)
!8065 = !DILocation(line: 370, column: 2, scope: !8061)
!8066 = !DILocation(line: 371, column: 1, scope: !8061)
!8067 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !835, file: !835, line: 243, type: !8068, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8070)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{null, !118, !118, !864}
!8070 = !{!8071, !8072, !8073, !8074, !8076}
!8071 = !DILocalVariable(name: "min", arg: 1, scope: !8067, file: !835, line: 243, type: !118)
!8072 = !DILocalVariable(name: "max", arg: 2, scope: !8067, file: !835, line: 243, type: !118)
!8073 = !DILocalVariable(name: "dev", arg: 3, scope: !8067, file: !835, line: 243, type: !864)
!8074 = !DILocalVariable(name: "data", scope: !8067, file: !835, line: 245, type: !8075)
!8075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!8076 = !DILocalVariable(name: "line", scope: !8067, file: !835, line: 246, type: !118)
!8077 = !DILocation(line: 0, scope: !8067)
!8078 = !DILocation(line: 245, column: 38, scope: !8067)
!8079 = !DILocation(line: 249, column: 24, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !835, line: 249, column: 2)
!8081 = distinct !DILexicalBlock(scope: !8067, file: !835, line: 249, column: 2)
!8082 = !DILocation(line: 249, column: 2, scope: !8081)
!8083 = !DILocation(line: 251, column: 7, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !835, line: 251, column: 7)
!8085 = distinct !DILexicalBlock(scope: !8080, file: !835, line: 249, column: 39)
!8086 = !DILocation(line: 251, column: 7, scope: !8085)
!8087 = !DILocation(line: 253, column: 4, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !835, line: 251, column: 36)
!8089 = !DILocation(line: 256, column: 24, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8088, file: !835, line: 256, column: 8)
!8091 = !DILocation(line: 256, column: 9, scope: !8090)
!8092 = !DILocation(line: 256, column: 8, scope: !8088)
!8093 = !DILocation(line: 260, column: 43, scope: !8088)
!8094 = !DILocation(line: 260, column: 4, scope: !8088)
!8095 = !DILocation(line: 261, column: 3, scope: !8088)
!8096 = !DILocation(line: 249, column: 35, scope: !8080)
!8097 = distinct !{!8097, !8082, !8098}
!8098 = !DILocation(line: 262, column: 2, scope: !8081)
!8099 = !DILocation(line: 263, column: 1, scope: !8067)
!8100 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !835, file: !835, line: 158, type: !439, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8101)
!8101 = !{!8102}
!8102 = !DILocalVariable(name: "line", arg: 1, scope: !8100, file: !835, line: 158, type: !118)
!8103 = !DILocation(line: 0, scope: !8100)
!8104 = !DILocation(line: 170, column: 38, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8106, file: !835, line: 160, column: 17)
!8106 = distinct !DILexicalBlock(scope: !8100, file: !835, line: 160, column: 6)
!8107 = !DILocation(line: 170, column: 10, scope: !8105)
!8108 = !DILocation(line: 176, column: 1, scope: !8100)
!8109 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !835, file: !835, line: 183, type: !8110, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8112)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{null, !118}
!8112 = !{!8113}
!8113 = !DILocalVariable(name: "line", arg: 1, scope: !8109, file: !835, line: 183, type: !118)
!8114 = !DILocation(line: 0, scope: !8109)
!8115 = !DILocation(line: 195, column: 28, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !835, line: 185, column: 17)
!8117 = distinct !DILexicalBlock(scope: !8109, file: !835, line: 185, column: 6)
!8118 = !DILocation(line: 195, column: 3, scope: !8116)
!8119 = !DILocation(line: 200, column: 1, scope: !8109)
!8120 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8121, file: !8121, line: 910, type: !6507, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8122)
!8121 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8122 = !{!8123}
!8123 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8120, file: !8121, line: 910, type: !156)
!8124 = !DILocation(line: 0, scope: !8120)
!8125 = !DILocation(line: 912, column: 3, scope: !8120)
!8126 = !DILocation(line: 913, column: 1, scope: !8120)
!8127 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8121, file: !8121, line: 834, type: !7456, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8128)
!8128 = !{!8129}
!8129 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8127, file: !8121, line: 834, type: !156)
!8130 = !DILocation(line: 0, scope: !8127)
!8131 = !DILocation(line: 836, column: 11, scope: !8127)
!8132 = !DILocation(line: 836, column: 40, scope: !8127)
!8133 = !DILocation(line: 836, column: 3, scope: !8127)
!8134 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !835, file: !835, line: 304, type: !888, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8135)
!8135 = !{!8136}
!8136 = !DILocalVariable(name: "dev", arg: 1, scope: !8134, file: !835, line: 304, type: !864)
!8137 = !DILocation(line: 0, scope: !8134)
!8138 = !DILocation(line: 306, column: 2, scope: !8134)
!8139 = !DILocation(line: 307, column: 1, scope: !8134)
!8140 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !835, file: !835, line: 299, type: !888, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8141)
!8141 = !{!8142}
!8142 = !DILocalVariable(name: "dev", arg: 1, scope: !8140, file: !835, line: 299, type: !864)
!8143 = !DILocation(line: 0, scope: !8140)
!8144 = !DILocation(line: 301, column: 2, scope: !8140)
!8145 = !DILocation(line: 302, column: 1, scope: !8140)
!8146 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !835, file: !835, line: 294, type: !888, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8147)
!8147 = !{!8148}
!8148 = !DILocalVariable(name: "dev", arg: 1, scope: !8146, file: !835, line: 294, type: !864)
!8149 = !DILocation(line: 0, scope: !8146)
!8150 = !DILocation(line: 296, column: 2, scope: !8146)
!8151 = !DILocation(line: 297, column: 1, scope: !8146)
!8152 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !835, file: !835, line: 397, type: !888, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8153)
!8153 = !{!8154}
!8154 = !DILocalVariable(name: "dev", arg: 1, scope: !8152, file: !835, line: 397, type: !864)
!8155 = !DILocation(line: 0, scope: !8152)
!8156 = !DILocation(line: 399, column: 2, scope: !8152)
!8157 = !DILocation(line: 400, column: 1, scope: !8152)
!8158 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !835, file: !835, line: 392, type: !888, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8159)
!8159 = !{!8160}
!8160 = !DILocalVariable(name: "dev", arg: 1, scope: !8158, file: !835, line: 392, type: !864)
!8161 = !DILocation(line: 0, scope: !8158)
!8162 = !DILocation(line: 394, column: 2, scope: !8158)
!8163 = !DILocation(line: 395, column: 1, scope: !8158)
!8164 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !835, file: !835, line: 289, type: !888, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8165)
!8165 = !{!8166}
!8166 = !DILocalVariable(name: "dev", arg: 1, scope: !8164, file: !835, line: 289, type: !864)
!8167 = !DILocation(line: 0, scope: !8164)
!8168 = !DILocation(line: 291, column: 2, scope: !8164)
!8169 = !DILocation(line: 292, column: 1, scope: !8164)
!8170 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !835, file: !835, line: 387, type: !888, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8171)
!8171 = !{!8172}
!8172 = !DILocalVariable(name: "dev", arg: 1, scope: !8170, file: !835, line: 387, type: !864)
!8173 = !DILocation(line: 0, scope: !8170)
!8174 = !DILocation(line: 389, column: 2, scope: !8170)
!8175 = !DILocation(line: 390, column: 1, scope: !8170)
!8176 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !835, file: !835, line: 382, type: !888, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8177)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "dev", arg: 1, scope: !8176, file: !835, line: 382, type: !864)
!8179 = !DILocation(line: 0, scope: !8176)
!8180 = !DILocation(line: 384, column: 2, scope: !8176)
!8181 = !DILocation(line: 385, column: 1, scope: !8176)
!8182 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !835, file: !835, line: 373, type: !888, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "dev", arg: 1, scope: !8182, file: !835, line: 373, type: !864)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 375, column: 2, scope: !8182)
!8187 = !DILocation(line: 376, column: 1, scope: !8182)
!8188 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !835, file: !835, line: 284, type: !888, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8189)
!8189 = !{!8190}
!8190 = !DILocalVariable(name: "dev", arg: 1, scope: !8188, file: !835, line: 284, type: !864)
!8191 = !DILocation(line: 0, scope: !8188)
!8192 = !DILocation(line: 286, column: 2, scope: !8188)
!8193 = !DILocation(line: 287, column: 1, scope: !8188)
!8194 = distinct !DISubprogram(name: "stm32_exti_init", scope: !835, file: !835, line: 416, type: !862, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8195)
!8195 = !{!8196}
!8196 = !DILocalVariable(name: "dev", arg: 1, scope: !8194, file: !835, line: 416, type: !864)
!8197 = !DILocation(line: 0, scope: !8194)
!8198 = !DILocation(line: 418, column: 2, scope: !8194)
!8199 = !DILocation(line: 420, column: 2, scope: !8194)
!8200 = !DILocation(line: 0, scope: !887)
!8201 = !DILocation(line: 493, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !887, file: !835, line: 493, column: 2)
!8203 = !DILocation(line: 497, column: 2, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !887, file: !835, line: 497, column: 2)
!8205 = !DILocation(line: 507, column: 2, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !887, file: !835, line: 507, column: 2)
!8207 = !DILocation(line: 512, column: 2, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !887, file: !835, line: 512, column: 2)
!8209 = !DILocation(line: 516, column: 2, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !887, file: !835, line: 516, column: 2)
!8211 = !DILocation(line: 523, column: 2, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !887, file: !835, line: 523, column: 2)
!8213 = !DILocation(line: 527, column: 2, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !887, file: !835, line: 527, column: 2)
!8215 = !DILocation(line: 581, column: 2, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !887, file: !835, line: 581, column: 2)
!8217 = !DILocation(line: 586, column: 2, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !887, file: !835, line: 586, column: 2)
!8219 = !DILocation(line: 591, column: 2, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !887, file: !835, line: 591, column: 2)
!8221 = !DILocation(line: 595, column: 2, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !887, file: !835, line: 595, column: 2)
!8223 = !DILocation(line: 607, column: 1, scope: !887)
!8224 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !835, file: !835, line: 112, type: !8110, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8225)
!8225 = !{!8226, !8227}
!8226 = !DILocalVariable(name: "line", arg: 1, scope: !8224, file: !835, line: 112, type: !118)
!8227 = !DILocalVariable(name: "irqnum", scope: !8224, file: !835, line: 114, type: !118)
!8228 = !DILocation(line: 0, scope: !8224)
!8229 = !DILocation(line: 122, column: 13, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8224, file: !835, line: 122, column: 6)
!8231 = !DILocation(line: 122, column: 6, scope: !8224)
!8232 = !DILocation(line: 123, column: 3, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !835, line: 123, column: 3)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !835, line: 123, column: 3)
!8235 = distinct !DILexicalBlock(scope: !8236, file: !835, line: 123, column: 3)
!8236 = distinct !DILexicalBlock(scope: !8230, file: !835, line: 122, column: 22)
!8237 = !DILocation(line: 121, column: 11, scope: !8224)
!8238 = !DILocation(line: 130, column: 26, scope: !8224)
!8239 = !DILocation(line: 130, column: 2, scope: !8224)
!8240 = !DILocation(line: 134, column: 2, scope: !8224)
!8241 = !DILocation(line: 135, column: 1, scope: !8224)
!8242 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8121, file: !8121, line: 268, type: !6507, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8243)
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8242, file: !8121, line: 268, type: !156)
!8245 = !DILocation(line: 0, scope: !8242)
!8246 = !DILocation(line: 270, column: 3, scope: !8242)
!8247 = !DILocation(line: 271, column: 1, scope: !8242)
!8248 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !835, file: !835, line: 137, type: !8110, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8249)
!8249 = !{!8250}
!8250 = !DILocalVariable(name: "line", arg: 1, scope: !8248, file: !835, line: 137, type: !118)
!8251 = !DILocation(line: 0, scope: !8248)
!8252 = !DILocation(line: 141, column: 11, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8248, file: !835, line: 141, column: 6)
!8254 = !DILocation(line: 141, column: 6, scope: !8248)
!8255 = !DILocation(line: 145, column: 28, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8253, file: !835, line: 141, column: 17)
!8257 = !DILocation(line: 145, column: 3, scope: !8256)
!8258 = !DILocation(line: 147, column: 2, scope: !8256)
!8259 = !DILocation(line: 151, column: 1, scope: !8248)
!8260 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8121, file: !8121, line: 309, type: !6507, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8261)
!8261 = !{!8262}
!8262 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8260, file: !8121, line: 309, type: !156)
!8263 = !DILocation(line: 0, scope: !8260)
!8264 = !DILocation(line: 311, column: 3, scope: !8260)
!8265 = !DILocation(line: 312, column: 1, scope: !8260)
!8266 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !835, file: !835, line: 202, type: !8267, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8269)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{null, !118, !118}
!8269 = !{!8270, !8271}
!8270 = !DILocalVariable(name: "line", arg: 1, scope: !8266, file: !835, line: 202, type: !118)
!8271 = !DILocalVariable(name: "trigger", arg: 2, scope: !8266, file: !835, line: 202, type: !118)
!8272 = !DILocation(line: 0, scope: !8266)
!8273 = !DILocation(line: 211, column: 2, scope: !8266)
!8274 = !DILocation(line: 213, column: 36, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8266, file: !835, line: 211, column: 19)
!8276 = !DILocation(line: 213, column: 3, scope: !8275)
!8277 = !DILocation(line: 214, column: 3, scope: !8275)
!8278 = !DILocation(line: 215, column: 3, scope: !8275)
!8279 = !DILocation(line: 217, column: 35, scope: !8275)
!8280 = !DILocation(line: 217, column: 3, scope: !8275)
!8281 = !DILocation(line: 218, column: 3, scope: !8275)
!8282 = !DILocation(line: 219, column: 3, scope: !8275)
!8283 = !DILocation(line: 221, column: 36, scope: !8275)
!8284 = !DILocation(line: 221, column: 3, scope: !8275)
!8285 = !DILocation(line: 222, column: 3, scope: !8275)
!8286 = !DILocation(line: 223, column: 3, scope: !8275)
!8287 = !DILocation(line: 225, column: 35, scope: !8275)
!8288 = !DILocation(line: 225, column: 3, scope: !8275)
!8289 = !DILocation(line: 226, column: 3, scope: !8275)
!8290 = !DILocation(line: 227, column: 3, scope: !8275)
!8291 = !DILocation(line: 232, column: 1, scope: !8266)
!8292 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8121, file: !8121, line: 573, type: !6507, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8293)
!8293 = !{!8294}
!8294 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8292, file: !8121, line: 573, type: !156)
!8295 = !DILocation(line: 0, scope: !8292)
!8296 = !DILocation(line: 575, column: 3, scope: !8292)
!8297 = !DILocation(line: 577, column: 1, scope: !8292)
!8298 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8121, file: !8121, line: 703, type: !6507, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8299)
!8299 = !{!8300}
!8300 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8298, file: !8121, line: 703, type: !156)
!8301 = !DILocation(line: 0, scope: !8298)
!8302 = !DILocation(line: 705, column: 3, scope: !8298)
!8303 = !DILocation(line: 706, column: 1, scope: !8298)
!8304 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8121, file: !8121, line: 529, type: !6507, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8305)
!8305 = !{!8306}
!8306 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8304, file: !8121, line: 529, type: !156)
!8307 = !DILocation(line: 0, scope: !8304)
!8308 = !DILocation(line: 531, column: 3, scope: !8304)
!8309 = !DILocation(line: 533, column: 1, scope: !8304)
!8310 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8121, file: !8121, line: 661, type: !6507, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8310, file: !8121, line: 661, type: !156)
!8313 = !DILocation(line: 0, scope: !8310)
!8314 = !DILocation(line: 663, column: 3, scope: !8310)
!8315 = !DILocation(line: 664, column: 1, scope: !8310)
!8316 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !835, file: !835, line: 433, type: !8317, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8319)
!8317 = !DISubroutineType(types: !8318)
!8318 = !{!118, !118, !875, !117}
!8319 = !{!8320, !8321, !8322, !8323, !8325}
!8320 = !DILocalVariable(name: "line", arg: 1, scope: !8316, file: !835, line: 433, type: !118)
!8321 = !DILocalVariable(name: "cb", arg: 2, scope: !8316, file: !835, line: 433, type: !875)
!8322 = !DILocalVariable(name: "arg", arg: 3, scope: !8316, file: !835, line: 433, type: !117)
!8323 = !DILocalVariable(name: "dev", scope: !8316, file: !835, line: 435, type: !8324)
!8324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!8325 = !DILocalVariable(name: "data", scope: !8316, file: !835, line: 436, type: !8075)
!8326 = !DILocation(line: 0, scope: !8316)
!8327 = !DILocation(line: 438, column: 21, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8316, file: !835, line: 438, column: 6)
!8329 = !DILocation(line: 438, column: 6, scope: !8328)
!8330 = !DILocation(line: 438, column: 6, scope: !8316)
!8331 = !DILocation(line: 442, column: 20, scope: !8316)
!8332 = !DILocation(line: 443, column: 17, scope: !8316)
!8333 = !DILocation(line: 443, column: 22, scope: !8316)
!8334 = !DILocation(line: 445, column: 2, scope: !8316)
!8335 = !DILocation(line: 446, column: 1, scope: !8316)
!8336 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !835, file: !835, line: 448, type: !8110, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8337)
!8337 = !{!8338, !8339, !8340}
!8338 = !DILocalVariable(name: "line", arg: 1, scope: !8336, file: !835, line: 448, type: !118)
!8339 = !DILocalVariable(name: "dev", scope: !8336, file: !835, line: 450, type: !8324)
!8340 = !DILocalVariable(name: "data", scope: !8336, file: !835, line: 451, type: !8075)
!8341 = !DILocation(line: 0, scope: !8336)
!8342 = !DILocation(line: 453, column: 17, scope: !8336)
!8343 = !DILocation(line: 453, column: 20, scope: !8336)
!8344 = !DILocation(line: 454, column: 17, scope: !8336)
!8345 = !DILocation(line: 454, column: 22, scope: !8336)
!8346 = !DILocation(line: 455, column: 1, scope: !8336)
!8347 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1026, file: !1026, line: 183, type: !1064, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8348)
!8348 = !{!8349, !8350, !8351, !8352, !8353}
!8349 = !DILocalVariable(name: "dev", arg: 1, scope: !8347, file: !1026, line: 183, type: !1055)
!8350 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8347, file: !1026, line: 184, type: !1066)
!8351 = !DILocalVariable(name: "pclken", scope: !8347, file: !1026, line: 186, type: !1016)
!8352 = !DILocalVariable(name: "reg", scope: !8347, file: !1026, line: 187, type: !1590)
!8353 = !DILocalVariable(name: "reg_val", scope: !8347, file: !1026, line: 188, type: !156)
!8354 = !DILocation(line: 0, scope: !8347)
!8355 = !DILocation(line: 192, column: 6, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8347, file: !1026, line: 192, column: 6)
!8357 = !DILocation(line: 192, column: 6, scope: !8347)
!8358 = !DILocation(line: 197, column: 52, scope: !8347)
!8359 = !DILocation(line: 197, column: 8, scope: !8347)
!8360 = !DILocation(line: 198, column: 12, scope: !8347)
!8361 = !DILocation(line: 199, column: 21, scope: !8347)
!8362 = !DILocation(line: 199, column: 10, scope: !8347)
!8363 = !DILocation(line: 200, column: 7, scope: !8347)
!8364 = !DILocation(line: 202, column: 2, scope: !8347)
!8365 = !DILocation(line: 203, column: 1, scope: !8347)
!8366 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1026, file: !1026, line: 205, type: !1064, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8367)
!8367 = !{!8368, !8369, !8370, !8371, !8372}
!8368 = !DILocalVariable(name: "dev", arg: 1, scope: !8366, file: !1026, line: 205, type: !1055)
!8369 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8366, file: !1026, line: 206, type: !1066)
!8370 = !DILocalVariable(name: "pclken", scope: !8366, file: !1026, line: 208, type: !1016)
!8371 = !DILocalVariable(name: "reg", scope: !8366, file: !1026, line: 209, type: !1590)
!8372 = !DILocalVariable(name: "reg_val", scope: !8366, file: !1026, line: 210, type: !156)
!8373 = !DILocation(line: 0, scope: !8366)
!8374 = !DILocation(line: 214, column: 6, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !1026, line: 214, column: 6)
!8376 = !DILocation(line: 214, column: 6, scope: !8366)
!8377 = !DILocation(line: 219, column: 52, scope: !8366)
!8378 = !DILocation(line: 219, column: 8, scope: !8366)
!8379 = !DILocation(line: 220, column: 12, scope: !8366)
!8380 = !DILocation(line: 221, column: 22, scope: !8366)
!8381 = !DILocation(line: 221, column: 13, scope: !8366)
!8382 = !DILocation(line: 221, column: 10, scope: !8366)
!8383 = !DILocation(line: 222, column: 7, scope: !8366)
!8384 = !DILocation(line: 224, column: 2, scope: !8366)
!8385 = !DILocation(line: 225, column: 1, scope: !8366)
!8386 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1026, file: !1026, line: 262, type: !1080, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8387)
!8387 = !{!8388, !8389, !8390, !8391, !8392, !8393, !8394, !8395}
!8388 = !DILocalVariable(name: "clock", arg: 1, scope: !8386, file: !1026, line: 262, type: !1055)
!8389 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8386, file: !1026, line: 263, type: !1066)
!8390 = !DILocalVariable(name: "rate", arg: 3, scope: !8386, file: !1026, line: 264, type: !1022)
!8391 = !DILocalVariable(name: "pclken", scope: !8386, file: !1026, line: 266, type: !1016)
!8392 = !DILocalVariable(name: "ahb_clock", scope: !8386, file: !1026, line: 273, type: !156)
!8393 = !DILocalVariable(name: "apb1_clock", scope: !8386, file: !1026, line: 274, type: !156)
!8394 = !DILocalVariable(name: "apb2_clock", scope: !8386, file: !1026, line: 276, type: !156)
!8395 = !DILocalVariable(name: "ahb3_clock", scope: !8386, file: !1026, line: 286, type: !156)
!8396 = !DILocation(line: 0, scope: !8386)
!8397 = !DILocation(line: 273, column: 23, scope: !8386)
!8398 = !DILocation(line: 299, column: 18, scope: !8386)
!8399 = !DILocation(line: 299, column: 2, scope: !8386)
!8400 = !DILocation(line: 274, column: 24, scope: !8386)
!8401 = !DILocation(line: 319, column: 3, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8386, file: !1026, line: 299, column: 23)
!8403 = !DILocation(line: 276, column: 24, scope: !8386)
!8404 = !DILocation(line: 323, column: 3, scope: !8402)
!8405 = !DILocation(line: 346, column: 33, scope: !8402)
!8406 = !DILocation(line: 346, column: 11, scope: !8402)
!8407 = !DILocation(line: 350, column: 3, scope: !8402)
!8408 = !DILocation(line: 354, column: 33, scope: !8402)
!8409 = !DILocation(line: 354, column: 11, scope: !8402)
!8410 = !DILocation(line: 358, column: 3, scope: !8402)
!8411 = !DILocation(line: 374, column: 3, scope: !8402)
!8412 = !DILocation(line: 379, column: 3, scope: !8402)
!8413 = !DILocation(line: 0, scope: !8402)
!8414 = !DILocation(line: 396, column: 1, scope: !8386)
!8415 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1026, file: !1026, line: 227, type: !1096, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8416)
!8416 = !{!8417, !8418, !8419, !8420, !8421, !8422, !8423, !8424}
!8417 = !DILocalVariable(name: "dev", arg: 1, scope: !8415, file: !1026, line: 227, type: !1055)
!8418 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8415, file: !1026, line: 228, type: !1066)
!8419 = !DILocalVariable(name: "data", arg: 3, scope: !8415, file: !1026, line: 229, type: !117)
!8420 = !DILocalVariable(name: "pclken", scope: !8415, file: !1026, line: 233, type: !1016)
!8421 = !DILocalVariable(name: "reg", scope: !8415, file: !1026, line: 234, type: !1590)
!8422 = !DILocalVariable(name: "reg_val", scope: !8415, file: !1026, line: 235, type: !156)
!8423 = !DILocalVariable(name: "dt_val", scope: !8415, file: !1026, line: 235, type: !156)
!8424 = !DILocalVariable(name: "err", scope: !8415, file: !1026, line: 236, type: !118)
!8425 = !DILocation(line: 0, scope: !8415)
!8426 = !DILocation(line: 241, column: 30, scope: !8415)
!8427 = !DILocation(line: 241, column: 8, scope: !8415)
!8428 = !DILocation(line: 242, column: 10, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8415, file: !1026, line: 242, column: 6)
!8430 = !DILocation(line: 242, column: 6, scope: !8415)
!8431 = !DILocation(line: 247, column: 11, scope: !8415)
!8432 = !DILocation(line: 248, column: 6, scope: !8415)
!8433 = !DILocation(line: 247, column: 44, scope: !8415)
!8434 = !DILocation(line: 250, column: 6, scope: !8415)
!8435 = !DILocation(line: 249, column: 52, scope: !8415)
!8436 = !DILocation(line: 249, column: 8, scope: !8415)
!8437 = !DILocation(line: 251, column: 12, scope: !8415)
!8438 = !DILocation(line: 252, column: 10, scope: !8415)
!8439 = !DILocation(line: 253, column: 7, scope: !8415)
!8440 = !DILocation(line: 255, column: 2, scope: !8415)
!8441 = !DILocation(line: 260, column: 1, scope: !8415)
!8442 = distinct !DISubprogram(name: "enabled_clock", scope: !1026, file: !1026, line: 100, type: !8443, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8445)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!118, !156}
!8445 = !{!8446, !8447}
!8446 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8442, file: !1026, line: 100, type: !156)
!8447 = !DILocalVariable(name: "r", scope: !8442, file: !1026, line: 102, type: !118)
!8448 = !DILocation(line: 0, scope: !8442)
!8449 = !DILocation(line: 104, column: 2, scope: !8442)
!8450 = !DILocation(line: 180, column: 2, scope: !8442)
!8451 = !DILocation(line: 181, column: 1, scope: !8442)
!8452 = distinct !DISubprogram(name: "get_bus_clock", scope: !1026, file: !1026, line: 79, type: !8453, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8455)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!156, !156, !156}
!8455 = !{!8456, !8457}
!8456 = !DILocalVariable(name: "clock", arg: 1, scope: !8452, file: !1026, line: 79, type: !156)
!8457 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8452, file: !1026, line: 79, type: !156)
!8458 = !DILocation(line: 0, scope: !8452)
!8459 = !DILocation(line: 81, column: 15, scope: !8452)
!8460 = !DILocation(line: 81, column: 2, scope: !8452)
!8461 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1026, file: !1026, line: 68, type: !8462, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8464)
!8462 = !DISubroutineType(types: !8463)
!8463 = !{!156, !156, !118, !118, !118}
!8464 = !{!8465, !8466, !8467, !8468}
!8465 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8461, file: !1026, line: 68, type: !156)
!8466 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8461, file: !1026, line: 69, type: !118)
!8467 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8461, file: !1026, line: 70, type: !118)
!8468 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8461, file: !1026, line: 71, type: !118)
!8469 = !DILocation(line: 0, scope: !8461)
!8470 = !DILocation(line: 75, column: 22, scope: !8461)
!8471 = !DILocation(line: 76, column: 13, scope: !8461)
!8472 = !DILocation(line: 75, column: 34, scope: !8461)
!8473 = !DILocation(line: 75, column: 2, scope: !8461)
!8474 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1026, file: !1026, line: 641, type: !1053, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8475)
!8475 = !{!8476, !8477, !8478}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8474, file: !1026, line: 641, type: !1055)
!8477 = !DILocalVariable(name: "old_flash_freq", scope: !8474, file: !1026, line: 664, type: !156)
!8478 = !DILocalVariable(name: "new_flash_freq", scope: !8474, file: !1026, line: 665, type: !156)
!8479 = !DILocation(line: 0, scope: !8474)
!8480 = !DILocation(line: 646, column: 2, scope: !8474)
!8481 = !DILocation(line: 667, column: 19, scope: !8474)
!8482 = !DILocation(line: 674, column: 21, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8474, file: !1026, line: 674, column: 6)
!8484 = !DILocation(line: 674, column: 6, scope: !8474)
!8485 = !DILocation(line: 675, column: 3, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8483, file: !1026, line: 674, column: 59)
!8487 = !DILocation(line: 676, column: 2, scope: !8486)
!8488 = !DILocation(line: 680, column: 2, scope: !8474)
!8489 = !DILocation(line: 683, column: 2, scope: !8474)
!8490 = !DILocation(line: 690, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !1026, line: 689, column: 9)
!8492 = distinct !DILexicalBlock(scope: !8474, file: !1026, line: 685, column: 6)
!8493 = !DILocation(line: 695, column: 2, scope: !8474)
!8494 = !DILocation(line: 696, column: 2, scope: !8474)
!8495 = !DILocation(line: 696, column: 9, scope: !8474)
!8496 = !DILocation(line: 696, column: 34, scope: !8474)
!8497 = distinct !{!8497, !8494, !8498}
!8498 = !DILocation(line: 697, column: 2, scope: !8474)
!8499 = !DILocation(line: 720, column: 21, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8474, file: !1026, line: 720, column: 6)
!8501 = !DILocation(line: 720, column: 6, scope: !8474)
!8502 = !DILocation(line: 721, column: 3, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8500, file: !1026, line: 720, column: 60)
!8504 = !DILocation(line: 722, column: 2, scope: !8503)
!8505 = !DILocation(line: 725, column: 18, scope: !8474)
!8506 = !DILocation(line: 728, column: 2, scope: !8474)
!8507 = !DILocation(line: 730, column: 2, scope: !8474)
!8508 = !DILocation(line: 745, column: 2, scope: !8474)
!8509 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8510, file: !8510, line: 3275, type: !6497, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8510 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8511 = !DILocation(line: 3277, column: 21, scope: !8509)
!8512 = !DILocation(line: 3277, column: 3, scope: !8509)
!8513 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1026, file: !1026, line: 507, type: !365, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8514 = !DILocation(line: 516, column: 4, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !1026, line: 515, column: 10)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !1026, line: 513, column: 7)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !1026, line: 510, column: 37)
!8518 = distinct !DILexicalBlock(scope: !8513, file: !1026, line: 510, column: 6)
!8519 = !DILocation(line: 526, column: 3, scope: !8517)
!8520 = !DILocation(line: 527, column: 3, scope: !8517)
!8521 = !DILocation(line: 527, column: 10, scope: !8517)
!8522 = !DILocation(line: 527, column: 31, scope: !8517)
!8523 = distinct !{!8523, !8520, !8524}
!8524 = !DILocation(line: 529, column: 3, scope: !8517)
!8525 = !DILocation(line: 583, column: 3, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !1026, line: 577, column: 37)
!8527 = distinct !DILexicalBlock(scope: !8513, file: !1026, line: 577, column: 6)
!8528 = !DILocation(line: 584, column: 3, scope: !8526)
!8529 = !DILocation(line: 584, column: 10, scope: !8526)
!8530 = !DILocation(line: 584, column: 31, scope: !8526)
!8531 = distinct !{!8531, !8528, !8532}
!8532 = !DILocation(line: 585, column: 3, scope: !8526)
!8533 = !DILocation(line: 627, column: 1, scope: !8513)
!8534 = distinct !DISubprogram(name: "set_up_plls", scope: !1026, file: !1026, line: 448, type: !365, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8535 = !DILocation(line: 460, column: 6, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8534, file: !1026, line: 460, column: 6)
!8537 = !DILocation(line: 460, column: 31, scope: !8536)
!8538 = !DILocation(line: 460, column: 6, scope: !8534)
!8539 = !DILocation(line: 461, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !1026, line: 460, column: 67)
!8541 = !DILocation(line: 462, column: 3, scope: !8540)
!8542 = !DILocation(line: 463, column: 2, scope: !8540)
!8543 = !DILocation(line: 464, column: 2, scope: !8534)
!8544 = !DILocation(line: 488, column: 2, scope: !8534)
!8545 = !DILocation(line: 492, column: 2, scope: !8534)
!8546 = !DILocation(line: 496, column: 2, scope: !8534)
!8547 = !DILocation(line: 499, column: 2, scope: !8534)
!8548 = !DILocation(line: 500, column: 2, scope: !8534)
!8549 = !DILocation(line: 500, column: 9, scope: !8534)
!8550 = !DILocation(line: 500, column: 30, scope: !8534)
!8551 = distinct !{!8551, !8548, !8552}
!8552 = !DILocation(line: 502, column: 2, scope: !8534)
!8553 = !DILocation(line: 505, column: 1, scope: !8534)
!8554 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8510, file: !8510, line: 3224, type: !6507, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8555)
!8555 = !{!8556}
!8556 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8554, file: !8510, line: 3224, type: !156)
!8557 = !DILocation(line: 0, scope: !8554)
!8558 = !DILocation(line: 3226, column: 3, scope: !8554)
!8559 = !DILocation(line: 3227, column: 1, scope: !8554)
!8560 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8510, file: !8510, line: 3188, type: !6507, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8561)
!8561 = !{!8562}
!8562 = !DILocalVariable(name: "Source", arg: 1, scope: !8560, file: !8510, line: 3188, type: !156)
!8563 = !DILocation(line: 0, scope: !8560)
!8564 = !DILocation(line: 3190, column: 3, scope: !8560)
!8565 = !DILocation(line: 3191, column: 1, scope: !8560)
!8566 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8510, file: !8510, line: 3204, type: !6497, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8567 = !DILocation(line: 3206, column: 21, scope: !8566)
!8568 = !DILocation(line: 3206, column: 3, scope: !8566)
!8569 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8510, file: !8510, line: 3240, type: !6507, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8570)
!8570 = !{!8571}
!8571 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8569, file: !8510, line: 3240, type: !156)
!8572 = !DILocation(line: 0, scope: !8569)
!8573 = !DILocation(line: 3242, column: 3, scope: !8569)
!8574 = !DILocation(line: 3243, column: 1, scope: !8569)
!8575 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8510, file: !8510, line: 3256, type: !6507, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !8576)
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8575, file: !8510, line: 3256, type: !156)
!8578 = !DILocation(line: 0, scope: !8575)
!8579 = !DILocation(line: 3258, column: 3, scope: !8575)
!8580 = !DILocation(line: 3259, column: 1, scope: !8575)
!8581 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1026, file: !1026, line: 409, type: !365, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8582 = !DILocation(line: 412, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8581, file: !1026, line: 412, column: 6)
!8584 = !DILocation(line: 412, column: 27, scope: !8583)
!8585 = !DILocation(line: 412, column: 6, scope: !8581)
!8586 = !DILocation(line: 414, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !1026, line: 412, column: 33)
!8588 = !DILocation(line: 415, column: 3, scope: !8587)
!8589 = !DILocation(line: 415, column: 10, scope: !8587)
!8590 = !DILocation(line: 415, column: 31, scope: !8587)
!8591 = distinct !{!8591, !8588, !8592}
!8592 = !DILocation(line: 417, column: 3, scope: !8587)
!8593 = !DILocation(line: 421, column: 2, scope: !8581)
!8594 = !DILocation(line: 422, column: 2, scope: !8581)
!8595 = !DILocation(line: 422, column: 9, scope: !8581)
!8596 = !DILocation(line: 422, column: 34, scope: !8581)
!8597 = distinct !{!8597, !8594, !8598}
!8598 = !DILocation(line: 423, column: 2, scope: !8581)
!8599 = !DILocation(line: 424, column: 1, scope: !8581)
!8600 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8510, file: !8510, line: 4195, type: !365, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8601 = !DILocation(line: 4197, column: 3, scope: !8600)
!8602 = !DILocation(line: 4198, column: 1, scope: !8600)
!8603 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8510, file: !8510, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8604 = !DILocation(line: 4186, column: 3, scope: !8603)
!8605 = !DILocation(line: 4187, column: 1, scope: !8603)
!8606 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8510, file: !8510, line: 4205, type: !6497, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8607 = !DILocation(line: 4207, column: 11, scope: !8606)
!8608 = !DILocation(line: 4207, column: 44, scope: !8606)
!8609 = !DILocation(line: 4207, column: 3, scope: !8606)
!8610 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8510, file: !8510, line: 3007, type: !6497, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8611 = !DILocation(line: 3009, column: 11, scope: !8610)
!8612 = !DILocation(line: 3009, column: 44, scope: !8610)
!8613 = !DILocation(line: 3009, column: 3, scope: !8610)
!8614 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8510, file: !8510, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8615 = !DILocation(line: 2989, column: 3, scope: !8614)
!8616 = !DILocation(line: 2990, column: 1, scope: !8614)
!8617 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8510, file: !8510, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8618 = !DILocation(line: 2941, column: 3, scope: !8617)
!8619 = !DILocation(line: 2942, column: 1, scope: !8617)
!8620 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8510, file: !8510, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8621 = !DILocation(line: 2951, column: 3, scope: !8620)
!8622 = !DILocation(line: 2952, column: 1, scope: !8620)
!8623 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8510, file: !8510, line: 2969, type: !6497, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8624 = !DILocation(line: 2971, column: 11, scope: !8623)
!8625 = !DILocation(line: 2971, column: 44, scope: !8623)
!8626 = !DILocation(line: 2971, column: 3, scope: !8623)
!8627 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8510, file: !8510, line: 3143, type: !365, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8628 = !DILocation(line: 3145, column: 3, scope: !8627)
!8629 = !DILocation(line: 3146, column: 1, scope: !8627)
!8630 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8510, file: !8510, line: 3163, type: !6497, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !961, retainedNodes: !2203)
!8631 = !DILocation(line: 3165, column: 11, scope: !8630)
!8632 = !DILocation(line: 3165, column: 46, scope: !8630)
!8633 = !DILocation(line: 3165, column: 3, scope: !8630)
!8634 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8635, file: !8635, line: 40, type: !6497, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !2203)
!8635 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8636 = !DILocation(line: 45, column: 3, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !8635, line: 44, column: 44)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !8635, line: 44, column: 13)
!8639 = distinct !DILexicalBlock(scope: !8634, file: !8635, line: 42, column: 6)
!8640 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8635, file: !8635, line: 56, type: !365, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !2203)
!8641 = !DILocation(line: 58, column: 2, scope: !8640)
!8642 = !DILocation(line: 62, column: 1, scope: !8640)
!8643 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8510, file: !8510, line: 4304, type: !8644, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !8646)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{null, !156, !156, !156, !156}
!8646 = !{!8647, !8648, !8649, !8650}
!8647 = !DILocalVariable(name: "Source", arg: 1, scope: !8643, file: !8510, line: 4304, type: !156)
!8648 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8643, file: !8510, line: 4304, type: !156)
!8649 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8643, file: !8510, line: 4304, type: !156)
!8650 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8643, file: !8510, line: 4304, type: !156)
!8651 = !DILocation(line: 0, scope: !8643)
!8652 = !DILocation(line: 4306, column: 3, scope: !8643)
!8653 = !DILocation(line: 4308, column: 3, scope: !8643)
!8654 = !DILocation(line: 4310, column: 3, scope: !8643)
!8655 = !DILocation(line: 4312, column: 1, scope: !8643)
!8656 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8635, file: !8635, line: 69, type: !365, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !2203)
!8657 = !DILocation(line: 72, column: 2, scope: !8656)
!8658 = !DILocation(line: 73, column: 1, scope: !8656)
!8659 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8660, file: !8660, line: 1185, type: !6507, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !8661)
!8660 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8661 = !{!8662, !8663}
!8662 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8659, file: !8660, line: 1185, type: !156)
!8663 = !DILocalVariable(name: "tmpreg", scope: !8659, file: !8660, line: 1187, type: !452)
!8664 = !DILocation(line: 0, scope: !8659)
!8665 = !DILocation(line: 1187, column: 3, scope: !8659)
!8666 = !DILocation(line: 1187, column: 17, scope: !8659)
!8667 = !DILocation(line: 1188, column: 3, scope: !8659)
!8668 = !DILocation(line: 1190, column: 12, scope: !8659)
!8669 = !DILocation(line: 1190, column: 10, scope: !8659)
!8670 = !DILocation(line: 1191, column: 9, scope: !8659)
!8671 = !DILocation(line: 1192, column: 1, scope: !8659)
!8672 = distinct !DISubprogram(name: "uart_console_init", scope: !1157, file: !1157, line: 588, type: !1134, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8673)
!8673 = !{!8674}
!8674 = !DILocalVariable(name: "arg", arg: 1, scope: !8672, file: !1157, line: 588, type: !1112)
!8675 = !DILocation(line: 0, scope: !8672)
!8676 = !DILocation(line: 593, column: 7, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8672, file: !1157, line: 593, column: 6)
!8678 = !DILocation(line: 593, column: 6, scope: !8672)
!8679 = !DILocation(line: 597, column: 2, scope: !8672)
!8680 = !DILocation(line: 599, column: 2, scope: !8672)
!8681 = !DILocation(line: 600, column: 1, scope: !8672)
!8682 = distinct !DISubprogram(name: "device_is_ready", scope: !3439, file: !3439, line: 47, type: !8683, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8685)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{!146, !1112}
!8685 = !{!8686}
!8686 = !DILocalVariable(name: "dev", arg: 1, scope: !8682, file: !3439, line: 47, type: !1112)
!8687 = !DILocation(line: 0, scope: !8682)
!8688 = !DILocation(line: 55, column: 2, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8682, file: !3439, line: 55, column: 2)
!8690 = !{i64 2155296333}
!8691 = !DILocation(line: 56, column: 9, scope: !8682)
!8692 = !DILocation(line: 56, column: 2, scope: !8682)
!8693 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1157, file: !1157, line: 573, type: !365, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !2203)
!8694 = !DILocation(line: 576, column: 2, scope: !8693)
!8695 = !DILocation(line: 579, column: 2, scope: !8693)
!8696 = !DILocation(line: 581, column: 1, scope: !8693)
!8697 = distinct !DISubprogram(name: "console_out", scope: !1157, file: !1157, line: 77, type: !439, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8698)
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "c", arg: 1, scope: !8697, file: !1157, line: 77, type: !118)
!8700 = !DILocation(line: 0, scope: !8697)
!8701 = !DILocation(line: 89, column: 11, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8697, file: !1157, line: 89, column: 6)
!8703 = !DILocation(line: 89, column: 6, scope: !8697)
!8704 = !DILocation(line: 90, column: 3, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8702, file: !1157, line: 89, column: 17)
!8706 = !DILocation(line: 91, column: 2, scope: !8705)
!8707 = !DILocation(line: 92, column: 34, scope: !8697)
!8708 = !DILocation(line: 92, column: 2, scope: !8697)
!8709 = !DILocation(line: 94, column: 2, scope: !8697)
!8710 = distinct !DISubprogram(name: "uart_poll_out", scope: !8711, file: !8711, line: 95, type: !1130, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8712)
!8711 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/threads")
!8712 = !{!8713, !8714}
!8713 = !DILocalVariable(name: "dev", arg: 1, scope: !8710, file: !8711, line: 95, type: !1112)
!8714 = !DILocalVariable(name: "out_char", arg: 2, scope: !8710, file: !8711, line: 95, type: !144)
!8715 = !DILocation(line: 0, scope: !8710)
!8716 = !DILocation(line: 105, column: 2, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8710, file: !8711, line: 105, column: 2)
!8718 = !{i64 2155379724}
!8719 = !DILocation(line: 106, column: 2, scope: !8710)
!8720 = !DILocation(line: 107, column: 1, scope: !8710)
!8721 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1106, file: !1106, line: 574, type: !1130, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8722)
!8722 = !{!8723, !8724, !8725}
!8723 = !DILocalVariable(name: "dev", arg: 1, scope: !8721, file: !1106, line: 574, type: !1112)
!8724 = !DILocalVariable(name: "out_char", arg: 2, scope: !8721, file: !1106, line: 575, type: !144)
!8725 = !DILocalVariable(name: "api", scope: !8721, file: !1106, line: 577, type: !1103)
!8726 = !DILocation(line: 0, scope: !8721)
!8727 = !DILocation(line: 578, column: 40, scope: !8721)
!8728 = !DILocation(line: 580, column: 7, scope: !8721)
!8729 = !DILocation(line: 580, column: 2, scope: !8721)
!8730 = !DILocation(line: 581, column: 1, scope: !8721)
!8731 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !8683, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8732)
!8732 = !{!8733}
!8733 = !DILocalVariable(name: "dev", arg: 1, scope: !8731, file: !130, line: 730, type: !1112)
!8734 = !DILocation(line: 0, scope: !8731)
!8735 = !DILocation(line: 732, column: 9, scope: !8731)
!8736 = !DILocation(line: 732, column: 2, scope: !8731)
!8737 = distinct !DISubprogram(name: "uart_register_input", scope: !1157, file: !1157, line: 560, type: !8738, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1100, retainedNodes: !8783)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{null, !8740, !8740, !8780}
!8740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8741, size: 32)
!8741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !8742)
!8742 = !{!8743}
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8741, file: !220, line: 2209, baseType: !8744, size: 160)
!8744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !8745)
!8745 = !{!8746, !8757, !8761}
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8744, file: !220, line: 1710, baseType: !8747, size: 64)
!8747 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !8748)
!8748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !8749)
!8749 = !{!8750, !8756}
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8748, file: !417, line: 42, baseType: !8751, size: 32)
!8751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8752, size: 32)
!8752 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !8753)
!8753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !8754)
!8754 = !{!8755}
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8753, file: !417, line: 36, baseType: !426, size: 32)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8748, file: !417, line: 43, baseType: !8751, size: 32, offset: 32)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8744, file: !220, line: 1711, baseType: !8758, size: 32, offset: 64)
!8758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !8759)
!8759 = !{!8760}
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8758, file: !334, line: 52, baseType: !22, size: 32)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8744, file: !220, line: 1712, baseType: !8762, size: 64, offset: 96)
!8762 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !8763)
!8763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !8764)
!8764 = !{!8765}
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8763, file: !261, line: 232, baseType: !8766, size: 64)
!8766 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !8767)
!8767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !8768)
!8768 = !{!8769, !8775}
!8769 = !DIDerivedType(tag: DW_TAG_member, scope: !8767, file: !235, line: 38, baseType: !8770, size: 32)
!8770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8767, file: !235, line: 38, size: 32, elements: !8771)
!8771 = !{!8772, !8774}
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8770, file: !235, line: 39, baseType: !8773, size: 32)
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8767, size: 32)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8770, file: !235, line: 40, baseType: !8773, size: 32)
!8775 = !DIDerivedType(tag: DW_TAG_member, scope: !8767, file: !235, line: 42, baseType: !8776, size: 32, offset: 32)
!8776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8767, file: !235, line: 42, size: 32, elements: !8777)
!8777 = !{!8778, !8779}
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8776, file: !235, line: 43, baseType: !8773, size: 32)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8776, file: !235, line: 44, baseType: !8773, size: 32)
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8781, size: 32)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{!143, !1277, !143}
!8783 = !{!8784, !8785, !8786}
!8784 = !DILocalVariable(name: "avail", arg: 1, scope: !8737, file: !1157, line: 560, type: !8740)
!8785 = !DILocalVariable(name: "lines", arg: 2, scope: !8737, file: !1157, line: 560, type: !8740)
!8786 = !DILocalVariable(name: "completion", arg: 3, scope: !8737, file: !1157, line: 561, type: !8780)
!8787 = !DILocation(line: 0, scope: !8737)
!8788 = !DILocation(line: 566, column: 1, scope: !8737)
!8789 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1321, file: !1321, line: 523, type: !1182, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8790)
!8790 = !{!8791, !8792, !8793, !8794, !8795}
!8791 = !DILocalVariable(name: "dev", arg: 1, scope: !8789, file: !1321, line: 523, type: !1184)
!8792 = !DILocalVariable(name: "pin", arg: 2, scope: !8789, file: !1321, line: 524, type: !154)
!8793 = !DILocalVariable(name: "flags", arg: 3, scope: !8789, file: !1321, line: 524, type: !155)
!8794 = !DILocalVariable(name: "err", scope: !8789, file: !1321, line: 526, type: !118)
!8795 = !DILocalVariable(name: "pincfg", scope: !8789, file: !1321, line: 527, type: !118)
!8796 = !DILocation(line: 0, scope: !8789)
!8797 = !DILocation(line: 527, column: 2, scope: !8789)
!8798 = !DILocation(line: 532, column: 8, scope: !8789)
!8799 = !DILocation(line: 533, column: 10, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8789, file: !1321, line: 533, column: 6)
!8801 = !DILocation(line: 533, column: 6, scope: !8789)
!8802 = !DILocation(line: 543, column: 13, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8789, file: !1321, line: 543, column: 6)
!8804 = !DILocation(line: 543, column: 28, scope: !8803)
!8805 = !DILocation(line: 543, column: 6, scope: !8789)
!8806 = !DILocation(line: 544, column: 14, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !1321, line: 544, column: 7)
!8808 = distinct !DILexicalBlock(scope: !8803, file: !1321, line: 543, column: 34)
!8809 = !DILocation(line: 544, column: 39, scope: !8807)
!8810 = !DILocation(line: 544, column: 7, scope: !8808)
!8811 = !DILocation(line: 545, column: 38, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !1321, line: 544, column: 45)
!8813 = !DILocation(line: 545, column: 4, scope: !8812)
!8814 = !DILocation(line: 546, column: 3, scope: !8812)
!8815 = !DILocation(line: 546, column: 21, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8807, file: !1321, line: 546, column: 14)
!8817 = !DILocation(line: 546, column: 45, scope: !8816)
!8818 = !DILocation(line: 546, column: 14, scope: !8807)
!8819 = !DILocation(line: 547, column: 40, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8816, file: !1321, line: 546, column: 51)
!8821 = !DILocation(line: 547, column: 4, scope: !8820)
!8822 = !DILocation(line: 548, column: 3, scope: !8820)
!8823 = !DILocation(line: 551, column: 32, scope: !8789)
!8824 = !DILocation(line: 551, column: 37, scope: !8789)
!8825 = !DILocation(line: 551, column: 2, scope: !8789)
!8826 = !DILocation(line: 554, column: 6, scope: !8789)
!8827 = !DILocation(line: 562, column: 1, scope: !8789)
!8828 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1321, file: !1321, line: 410, type: !8829, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!118, !1184, !1022}
!8831 = !{!8832, !8833, !8834, !8836}
!8832 = !DILocalVariable(name: "dev", arg: 1, scope: !8828, file: !1321, line: 410, type: !1184)
!8833 = !DILocalVariable(name: "value", arg: 2, scope: !8828, file: !1321, line: 410, type: !1022)
!8834 = !DILocalVariable(name: "cfg", scope: !8828, file: !1321, line: 412, type: !8835)
!8835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!8836 = !DILocalVariable(name: "gpio", scope: !8828, file: !1321, line: 413, type: !1251)
!8837 = !DILocation(line: 0, scope: !8828)
!8838 = !DILocation(line: 412, column: 45, scope: !8828)
!8839 = !DILocation(line: 413, column: 44, scope: !8828)
!8840 = !DILocation(line: 415, column: 11, scope: !8828)
!8841 = !DILocation(line: 415, column: 9, scope: !8828)
!8842 = !DILocation(line: 417, column: 2, scope: !8828)
!8843 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1321, file: !1321, line: 420, type: !1205, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847, !8848, !8849, !8850}
!8845 = !DILocalVariable(name: "dev", arg: 1, scope: !8843, file: !1321, line: 420, type: !1184)
!8846 = !DILocalVariable(name: "mask", arg: 2, scope: !8843, file: !1321, line: 421, type: !167)
!8847 = !DILocalVariable(name: "value", arg: 3, scope: !8843, file: !1321, line: 422, type: !162)
!8848 = !DILocalVariable(name: "cfg", scope: !8843, file: !1321, line: 424, type: !8835)
!8849 = !DILocalVariable(name: "gpio", scope: !8843, file: !1321, line: 425, type: !1251)
!8850 = !DILocalVariable(name: "port_value", scope: !8843, file: !1321, line: 426, type: !156)
!8851 = !DILocation(line: 0, scope: !8843)
!8852 = !DILocation(line: 424, column: 45, scope: !8843)
!8853 = !DILocation(line: 425, column: 44, scope: !8843)
!8854 = !DILocation(line: 430, column: 15, scope: !8843)
!8855 = !DILocation(line: 431, column: 46, scope: !8843)
!8856 = !DILocation(line: 431, column: 44, scope: !8843)
!8857 = !DILocation(line: 431, column: 61, scope: !8843)
!8858 = !DILocation(line: 431, column: 53, scope: !8843)
!8859 = !DILocation(line: 431, column: 2, scope: !8843)
!8860 = !DILocation(line: 435, column: 2, scope: !8843)
!8861 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1321, file: !1321, line: 438, type: !1209, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8862)
!8862 = !{!8863, !8864, !8865, !8866}
!8863 = !DILocalVariable(name: "dev", arg: 1, scope: !8861, file: !1321, line: 438, type: !1184)
!8864 = !DILocalVariable(name: "pins", arg: 2, scope: !8861, file: !1321, line: 439, type: !167)
!8865 = !DILocalVariable(name: "cfg", scope: !8861, file: !1321, line: 441, type: !8835)
!8866 = !DILocalVariable(name: "gpio", scope: !8861, file: !1321, line: 442, type: !1251)
!8867 = !DILocation(line: 0, scope: !8861)
!8868 = !DILocation(line: 441, column: 45, scope: !8861)
!8869 = !DILocation(line: 442, column: 44, scope: !8861)
!8870 = !DILocation(line: 448, column: 2, scope: !8861)
!8871 = !DILocation(line: 450, column: 2, scope: !8861)
!8872 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1321, file: !1321, line: 453, type: !1209, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8873)
!8873 = !{!8874, !8875, !8876, !8877}
!8874 = !DILocalVariable(name: "dev", arg: 1, scope: !8872, file: !1321, line: 453, type: !1184)
!8875 = !DILocalVariable(name: "pins", arg: 2, scope: !8872, file: !1321, line: 454, type: !167)
!8876 = !DILocalVariable(name: "cfg", scope: !8872, file: !1321, line: 456, type: !8835)
!8877 = !DILocalVariable(name: "gpio", scope: !8872, file: !1321, line: 457, type: !1251)
!8878 = !DILocation(line: 0, scope: !8872)
!8879 = !DILocation(line: 456, column: 45, scope: !8872)
!8880 = !DILocation(line: 457, column: 44, scope: !8872)
!8881 = !DILocation(line: 467, column: 2, scope: !8872)
!8882 = !DILocation(line: 470, column: 2, scope: !8872)
!8883 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1321, file: !1321, line: 473, type: !1209, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8884)
!8884 = !{!8885, !8886, !8887, !8888}
!8885 = !DILocalVariable(name: "dev", arg: 1, scope: !8883, file: !1321, line: 473, type: !1184)
!8886 = !DILocalVariable(name: "pins", arg: 2, scope: !8883, file: !1321, line: 474, type: !167)
!8887 = !DILocalVariable(name: "cfg", scope: !8883, file: !1321, line: 476, type: !8835)
!8888 = !DILocalVariable(name: "gpio", scope: !8883, file: !1321, line: 477, type: !1251)
!8889 = !DILocation(line: 0, scope: !8883)
!8890 = !DILocation(line: 476, column: 45, scope: !8883)
!8891 = !DILocation(line: 477, column: 44, scope: !8883)
!8892 = !DILocation(line: 484, column: 2, scope: !8883)
!8893 = !DILocation(line: 487, column: 2, scope: !8883)
!8894 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1321, file: !1321, line: 594, type: !1215, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8895)
!8895 = !{!8896, !8897, !8898, !8899, !8900, !8901, !8903, !8904, !8905}
!8896 = !DILocalVariable(name: "dev", arg: 1, scope: !8894, file: !1321, line: 594, type: !1184)
!8897 = !DILocalVariable(name: "pin", arg: 2, scope: !8894, file: !1321, line: 595, type: !154)
!8898 = !DILocalVariable(name: "mode", arg: 3, scope: !8894, file: !1321, line: 596, type: !101)
!8899 = !DILocalVariable(name: "trig", arg: 4, scope: !8894, file: !1321, line: 597, type: !107)
!8900 = !DILocalVariable(name: "cfg", scope: !8894, file: !1321, line: 599, type: !8835)
!8901 = !DILocalVariable(name: "data", scope: !8894, file: !1321, line: 600, type: !8902)
!8902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!8903 = !DILocalVariable(name: "edge", scope: !8894, file: !1321, line: 601, type: !118)
!8904 = !DILocalVariable(name: "err", scope: !8894, file: !1321, line: 602, type: !118)
!8905 = !DILabel(scope: !8894, name: "exit", file: !1321, line: 643)
!8906 = !DILocation(line: 0, scope: !8894)
!8907 = !DILocation(line: 599, column: 45, scope: !8894)
!8908 = !DILocation(line: 604, column: 6, scope: !8894)
!8909 = !DILocation(line: 605, column: 34, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !1321, line: 605, column: 7)
!8911 = distinct !DILexicalBlock(scope: !8912, file: !1321, line: 604, column: 38)
!8912 = distinct !DILexicalBlock(scope: !8894, file: !1321, line: 604, column: 6)
!8913 = !DILocation(line: 605, column: 7, scope: !8910)
!8914 = !DILocation(line: 605, column: 47, scope: !8910)
!8915 = !DILocation(line: 605, column: 39, scope: !8910)
!8916 = !DILocation(line: 605, column: 7, scope: !8911)
!8917 = !DILocation(line: 606, column: 4, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8910, file: !1321, line: 605, column: 53)
!8919 = !DILocation(line: 607, column: 4, scope: !8918)
!8920 = !DILocation(line: 608, column: 4, scope: !8918)
!8921 = !DILocation(line: 609, column: 3, scope: !8918)
!8922 = !DILocation(line: 600, column: 38, scope: !8894)
!8923 = !DILocation(line: 620, column: 30, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8894, file: !1321, line: 620, column: 6)
!8925 = !DILocation(line: 620, column: 6, scope: !8924)
!8926 = !DILocation(line: 620, column: 57, scope: !8924)
!8927 = !DILocation(line: 620, column: 6, scope: !8894)
!8928 = !DILocation(line: 625, column: 29, scope: !8894)
!8929 = !DILocation(line: 625, column: 2, scope: !8894)
!8930 = !DILocation(line: 627, column: 2, scope: !8894)
!8931 = !DILocation(line: 630, column: 3, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8894, file: !1321, line: 627, column: 16)
!8933 = !DILocation(line: 633, column: 3, scope: !8932)
!8934 = !DILocation(line: 636, column: 3, scope: !8932)
!8935 = !DILocation(line: 639, column: 2, scope: !8894)
!8936 = !DILocation(line: 641, column: 2, scope: !8894)
!8937 = !DILocation(line: 643, column: 1, scope: !8894)
!8938 = !DILocation(line: 644, column: 2, scope: !8894)
!8939 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1321, file: !1321, line: 647, type: !1219, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8940)
!8940 = !{!8941, !8942, !8943, !8944}
!8941 = !DILocalVariable(name: "dev", arg: 1, scope: !8939, file: !1321, line: 647, type: !1184)
!8942 = !DILocalVariable(name: "callback", arg: 2, scope: !8939, file: !1321, line: 648, type: !1221)
!8943 = !DILocalVariable(name: "set", arg: 3, scope: !8939, file: !1321, line: 649, type: !146)
!8944 = !DILocalVariable(name: "data", scope: !8939, file: !1321, line: 651, type: !8902)
!8945 = !DILocation(line: 0, scope: !8939)
!8946 = !DILocation(line: 651, column: 38, scope: !8939)
!8947 = !DILocation(line: 653, column: 37, scope: !8939)
!8948 = !DILocation(line: 653, column: 9, scope: !8939)
!8949 = !DILocation(line: 653, column: 2, scope: !8939)
!8950 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8951, file: !8951, line: 38, type: !8952, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8955)
!8951 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8952 = !DISubroutineType(types: !8953)
!8953 = !{!118, !8954, !1221, !146}
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!8955 = !{!8956, !8957, !8958}
!8956 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8950, file: !8951, line: 38, type: !8954)
!8957 = !DILocalVariable(name: "callback", arg: 2, scope: !8950, file: !8951, line: 39, type: !1221)
!8958 = !DILocalVariable(name: "set", arg: 3, scope: !8950, file: !8951, line: 40, type: !146)
!8959 = !DILocation(line: 0, scope: !8950)
!8960 = !DILocation(line: 42, column: 2, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !8951, line: 42, column: 2)
!8962 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 42, column: 2)
!8963 = !DILocation(line: 42, column: 2, scope: !8962)
!8964 = !DILocation(line: 42, column: 2, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8961, file: !8951, line: 42, column: 2)
!8966 = !DILocation(line: 43, column: 2, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !8951, line: 43, column: 2)
!8968 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 43, column: 2)
!8969 = !DILocation(line: 43, column: 2, scope: !8968)
!8970 = !DILocation(line: 43, column: 2, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !8951, line: 43, column: 2)
!8972 = !DILocation(line: 45, column: 7, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 45, column: 6)
!8974 = !DILocation(line: 45, column: 6, scope: !8950)
!8975 = !DILocation(line: 46, column: 56, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !8951, line: 46, column: 7)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !8951, line: 45, column: 38)
!8978 = !DILocation(line: 46, column: 8, scope: !8976)
!8979 = !DILocation(line: 46, column: 7, scope: !8977)
!8980 = !DILocation(line: 51, column: 13, scope: !8973)
!8981 = !DILocation(line: 56, column: 43, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !8951, line: 55, column: 11)
!8983 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 55, column: 6)
!8984 = !DILocation(line: 56, column: 3, scope: !8982)
!8985 = !DILocation(line: 57, column: 2, scope: !8982)
!8986 = !DILocation(line: 60, column: 1, scope: !8950)
!8987 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !8988, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8990)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{!146, !8954}
!8990 = !{!8991}
!8991 = !DILocalVariable(name: "list", arg: 1, scope: !8987, file: !187, line: 261, type: !8954)
!8992 = !DILocation(line: 0, scope: !8987)
!8993 = !DILocation(line: 261, column: 1, scope: !8987)
!8994 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !187, file: !187, line: 417, type: !8995, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!146, !8954, !1394}
!8997 = !{!8998, !8999, !9000, !9001}
!8998 = !DILocalVariable(name: "list", arg: 1, scope: !8994, file: !187, line: 417, type: !8954)
!8999 = !DILocalVariable(name: "node", arg: 2, scope: !8994, file: !187, line: 417, type: !1394)
!9000 = !DILocalVariable(name: "prev", scope: !8994, file: !187, line: 417, type: !1394)
!9001 = !DILocalVariable(name: "test", scope: !8994, file: !187, line: 417, type: !1394)
!9002 = !DILocation(line: 0, scope: !8994)
!9003 = !DILocation(line: 417, column: 1, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8994, file: !187, line: 417, column: 1)
!9005 = !DILocation(line: 417, column: 1, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9004, file: !187, line: 417, column: 1)
!9007 = !DILocation(line: 417, column: 1, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !187, line: 417, column: 1)
!9009 = distinct !DILexicalBlock(scope: !9006, file: !187, line: 417, column: 1)
!9010 = !DILocation(line: 417, column: 1, scope: !9009)
!9011 = distinct !{!9011, !9003, !9003}
!9012 = !DILocation(line: 417, column: 1, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9008, file: !187, line: 417, column: 1)
!9014 = !DILocation(line: 417, column: 1, scope: !8994)
!9015 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !187, file: !187, line: 298, type: !9016, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9018)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{null, !8954, !1394}
!9018 = !{!9019, !9020}
!9019 = !DILocalVariable(name: "list", arg: 1, scope: !9015, file: !187, line: 298, type: !8954)
!9020 = !DILocalVariable(name: "node", arg: 2, scope: !9015, file: !187, line: 298, type: !1394)
!9021 = !DILocation(line: 0, scope: !9015)
!9022 = !DILocation(line: 298, column: 1, scope: !9015)
!9023 = !DILocation(line: 298, column: 1, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9015, file: !187, line: 298, column: 1)
!9025 = !DILocation(line: 298, column: 1, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9024, file: !187, line: 298, column: 1)
!9027 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !9028, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9030)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{!1394, !8954}
!9030 = !{!9031}
!9031 = !DILocalVariable(name: "list", arg: 1, scope: !9027, file: !187, line: 231, type: !8954)
!9032 = !DILocation(line: 0, scope: !9027)
!9033 = !DILocation(line: 233, column: 15, scope: !9027)
!9034 = !DILocation(line: 233, column: 2, scope: !9027)
!9035 = distinct !DISubprogram(name: "z_snode_next_set", scope: !187, file: !187, line: 209, type: !9036, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9038)
!9036 = !DISubroutineType(types: !9037)
!9037 = !{null, !1394, !1394}
!9038 = !{!9039, !9040}
!9039 = !DILocalVariable(name: "parent", arg: 1, scope: !9035, file: !187, line: 209, type: !1394)
!9040 = !DILocalVariable(name: "child", arg: 2, scope: !9035, file: !187, line: 209, type: !1394)
!9041 = !DILocation(line: 0, scope: !9035)
!9042 = !DILocation(line: 211, column: 10, scope: !9035)
!9043 = !DILocation(line: 211, column: 15, scope: !9035)
!9044 = !DILocation(line: 212, column: 1, scope: !9035)
!9045 = distinct !DISubprogram(name: "z_slist_head_set", scope: !187, file: !187, line: 214, type: !9016, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9046)
!9046 = !{!9047, !9048}
!9047 = !DILocalVariable(name: "list", arg: 1, scope: !9045, file: !187, line: 214, type: !8954)
!9048 = !DILocalVariable(name: "node", arg: 2, scope: !9045, file: !187, line: 214, type: !1394)
!9049 = !DILocation(line: 0, scope: !9045)
!9050 = !DILocation(line: 216, column: 8, scope: !9045)
!9051 = !DILocation(line: 216, column: 13, scope: !9045)
!9052 = !DILocation(line: 217, column: 1, scope: !9045)
!9053 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !187, file: !187, line: 243, type: !9028, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9054)
!9054 = !{!9055}
!9055 = !DILocalVariable(name: "list", arg: 1, scope: !9053, file: !187, line: 243, type: !8954)
!9056 = !DILocation(line: 0, scope: !9053)
!9057 = !DILocation(line: 245, column: 15, scope: !9053)
!9058 = !DILocation(line: 245, column: 2, scope: !9053)
!9059 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !187, file: !187, line: 219, type: !9016, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9060)
!9060 = !{!9061, !9062}
!9061 = !DILocalVariable(name: "list", arg: 1, scope: !9059, file: !187, line: 219, type: !8954)
!9062 = !DILocalVariable(name: "node", arg: 2, scope: !9059, file: !187, line: 219, type: !1394)
!9063 = !DILocation(line: 0, scope: !9059)
!9064 = !DILocation(line: 221, column: 8, scope: !9059)
!9065 = !DILocation(line: 221, column: 13, scope: !9059)
!9066 = !DILocation(line: 222, column: 1, scope: !9059)
!9067 = distinct !DISubprogram(name: "sys_slist_remove", scope: !187, file: !187, line: 401, type: !9068, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9070)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{null, !8954, !1394, !1394}
!9070 = !{!9071, !9072, !9073}
!9071 = !DILocalVariable(name: "list", arg: 1, scope: !9067, file: !187, line: 401, type: !8954)
!9072 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9067, file: !187, line: 401, type: !1394)
!9073 = !DILocalVariable(name: "node", arg: 3, scope: !9067, file: !187, line: 401, type: !1394)
!9074 = !DILocation(line: 0, scope: !9067)
!9075 = !DILocation(line: 401, column: 1, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9067, file: !187, line: 401, column: 1)
!9077 = !DILocation(line: 0, scope: !9076)
!9078 = !DILocation(line: 401, column: 1, scope: !9067)
!9079 = !DILocation(line: 401, column: 1, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !187, line: 401, column: 1)
!9081 = !DILocation(line: 401, column: 1, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9080, file: !187, line: 401, column: 1)
!9083 = !DILocation(line: 401, column: 1, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9082, file: !187, line: 401, column: 1)
!9085 = !DILocation(line: 401, column: 1, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9076, file: !187, line: 401, column: 1)
!9087 = !DILocation(line: 401, column: 1, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9086, file: !187, line: 401, column: 1)
!9089 = !DILocation(line: 401, column: 1, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9088, file: !187, line: 401, column: 1)
!9091 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !187, file: !187, line: 285, type: !9092, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9094)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!1394, !1394}
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "node", arg: 1, scope: !9091, file: !187, line: 285, type: !1394)
!9096 = !DILocation(line: 0, scope: !9091)
!9097 = !DILocation(line: 285, column: 1, scope: !9091)
!9098 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !187, file: !187, line: 274, type: !9092, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9099)
!9099 = !{!9100}
!9100 = !DILocalVariable(name: "node", arg: 1, scope: !9098, file: !187, line: 274, type: !1394)
!9101 = !DILocation(line: 0, scope: !9098)
!9102 = !DILocation(line: 274, column: 1, scope: !9098)
!9103 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !187, file: !187, line: 204, type: !9092, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9104)
!9104 = !{!9105}
!9105 = !DILocalVariable(name: "node", arg: 1, scope: !9103, file: !187, line: 204, type: !1394)
!9106 = !DILocation(line: 0, scope: !9103)
!9107 = !DILocation(line: 206, column: 15, scope: !9103)
!9108 = !DILocation(line: 206, column: 2, scope: !9103)
!9109 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1321, file: !1321, line: 342, type: !439, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9110)
!9110 = !{!9111, !9112, !9113}
!9111 = !DILocalVariable(name: "pin", arg: 1, scope: !9109, file: !1321, line: 342, type: !118)
!9112 = !DILocalVariable(name: "line", scope: !9109, file: !1321, line: 344, type: !156)
!9113 = !DILocalVariable(name: "port", scope: !9109, file: !1321, line: 345, type: !118)
!9114 = !DILocation(line: 0, scope: !9109)
!9115 = !DILocation(line: 344, column: 18, scope: !9109)
!9116 = !{i32 983040, i32 0}
!9117 = !DILocation(line: 356, column: 9, scope: !9109)
!9118 = !DILocation(line: 370, column: 2, scope: !9109)
!9119 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1321, file: !1321, line: 37, type: !878, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9120)
!9120 = !{!9121, !9122, !9123}
!9121 = !DILocalVariable(name: "line", arg: 1, scope: !9119, file: !1321, line: 37, type: !118)
!9122 = !DILocalVariable(name: "arg", arg: 2, scope: !9119, file: !1321, line: 37, type: !117)
!9123 = !DILocalVariable(name: "data", scope: !9119, file: !1321, line: 39, type: !8902)
!9124 = !DILocation(line: 0, scope: !9119)
!9125 = !DILocation(line: 41, column: 29, scope: !9119)
!9126 = !DILocation(line: 41, column: 39, scope: !9119)
!9127 = !DILocation(line: 41, column: 44, scope: !9119)
!9128 = !DILocation(line: 41, column: 2, scope: !9119)
!9129 = !DILocation(line: 42, column: 1, scope: !9119)
!9130 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1321, file: !1321, line: 376, type: !9131, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!118, !118, !118}
!9133 = !{!9134, !9135, !9136, !9138, !9139}
!9134 = !DILocalVariable(name: "port", arg: 1, scope: !9130, file: !1321, line: 376, type: !118)
!9135 = !DILocalVariable(name: "pin", arg: 2, scope: !9130, file: !1321, line: 376, type: !118)
!9136 = !DILocalVariable(name: "clk", scope: !9130, file: !1321, line: 386, type: !9137)
!9137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1184)
!9138 = !DILocalVariable(name: "pclken", scope: !9130, file: !1321, line: 387, type: !1437)
!9139 = !DILocalVariable(name: "ret", scope: !9130, file: !1321, line: 396, type: !118)
!9140 = !DILocation(line: 0, scope: !9130)
!9141 = !DILocation(line: 387, column: 2, scope: !9130)
!9142 = !DILocation(line: 387, column: 22, scope: !9130)
!9143 = !DILocation(line: 399, column: 8, scope: !9130)
!9144 = !DILocation(line: 400, column: 10, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9130, file: !1321, line: 400, column: 6)
!9146 = !DILocation(line: 400, column: 6, scope: !9130)
!9147 = !DILocation(line: 405, column: 2, scope: !9130)
!9148 = !DILocation(line: 407, column: 2, scope: !9130)
!9149 = !DILocation(line: 408, column: 1, scope: !9130)
!9150 = distinct !DISubprogram(name: "clock_control_on", scope: !970, file: !970, line: 123, type: !1286, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9151)
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "dev", arg: 1, scope: !9150, file: !970, line: 123, type: !1184)
!9153 = !DILocalVariable(name: "sys", arg: 2, scope: !9150, file: !970, line: 124, type: !1066)
!9154 = !DILocalVariable(name: "api", scope: !9150, file: !970, line: 126, type: !1279)
!9155 = !DILocation(line: 0, scope: !9150)
!9156 = !DILocation(line: 127, column: 49, scope: !9150)
!9157 = !DILocation(line: 129, column: 14, scope: !9150)
!9158 = !DILocation(line: 129, column: 9, scope: !9150)
!9159 = !DILocation(line: 129, column: 2, scope: !9150)
!9160 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1321, file: !1321, line: 311, type: !8267, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9161)
!9161 = !{!9162, !9163, !9164}
!9162 = !DILocalVariable(name: "port", arg: 1, scope: !9160, file: !1321, line: 311, type: !118)
!9163 = !DILocalVariable(name: "pin", arg: 2, scope: !9160, file: !1321, line: 311, type: !118)
!9164 = !DILocalVariable(name: "line", scope: !9160, file: !1321, line: 313, type: !156)
!9165 = !DILocation(line: 0, scope: !9160)
!9166 = !DILocation(line: 313, column: 18, scope: !9160)
!9167 = !DILocation(line: 337, column: 2, scope: !9160)
!9168 = !DILocation(line: 340, column: 1, scope: !9160)
!9169 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1321, file: !1321, line: 295, type: !9170, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9172)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!156, !118}
!9172 = !{!9173}
!9173 = !DILocalVariable(name: "pin", arg: 1, scope: !9169, file: !1321, line: 295, type: !118)
!9174 = !DILocation(line: 0, scope: !9169)
!9175 = !DILocation(line: 307, column: 46, scope: !9169)
!9176 = !DILocation(line: 307, column: 27, scope: !9169)
!9177 = !DILocation(line: 307, column: 32, scope: !9169)
!9178 = !DILocation(line: 307, column: 14, scope: !9169)
!9179 = !DILocation(line: 307, column: 39, scope: !9169)
!9180 = !DILocation(line: 307, column: 2, scope: !9169)
!9181 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6257, file: !6257, line: 671, type: !9182, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9184)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{null, !156, !156}
!9184 = !{!9185, !9186}
!9185 = !DILocalVariable(name: "Port", arg: 1, scope: !9181, file: !6257, line: 671, type: !156)
!9186 = !DILocalVariable(name: "Line", arg: 2, scope: !9181, file: !6257, line: 671, type: !156)
!9187 = !DILocation(line: 0, scope: !9181)
!9188 = !DILocation(line: 673, column: 3, scope: !9181)
!9189 = !DILocalVariable(name: "value", arg: 1, scope: !9190, file: !6410, line: 373, type: !156)
!9190 = distinct !DISubprogram(name: "__RBIT", scope: !6410, file: !6410, line: 373, type: !7456, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9191)
!9191 = !{!9189, !9192}
!9192 = !DILocalVariable(name: "result", scope: !9190, file: !6410, line: 375, type: !156)
!9193 = !DILocation(line: 0, scope: !9190, inlinedAt: !9194)
!9194 = distinct !DILocation(line: 673, column: 3, scope: !9181)
!9195 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9194)
!9196 = !{i64 3732835}
!9197 = !DILocalVariable(name: "value", arg: 1, scope: !9198, file: !6410, line: 403, type: !156)
!9198 = distinct !DISubprogram(name: "__CLZ", scope: !6410, file: !6410, line: 403, type: !9199, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9201)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{!143, !156}
!9201 = !{!9197}
!9202 = !DILocation(line: 0, scope: !9198, inlinedAt: !9203)
!9203 = distinct !DILocation(line: 673, column: 3, scope: !9181)
!9204 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9203)
!9205 = !DILocation(line: 674, column: 1, scope: !9181)
!9206 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8951, file: !8951, line: 69, type: !9207, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9209)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{null, !8954, !1184, !156}
!9209 = !{!9210, !9211, !9212, !9213, !9214}
!9210 = !DILocalVariable(name: "list", arg: 1, scope: !9206, file: !8951, line: 69, type: !8954)
!9211 = !DILocalVariable(name: "port", arg: 2, scope: !9206, file: !8951, line: 70, type: !1184)
!9212 = !DILocalVariable(name: "pins", arg: 3, scope: !9206, file: !8951, line: 71, type: !156)
!9213 = !DILocalVariable(name: "cb", scope: !9206, file: !8951, line: 73, type: !1221)
!9214 = !DILocalVariable(name: "tmp", scope: !9206, file: !8951, line: 73, type: !1221)
!9215 = !DILocation(line: 0, scope: !9206)
!9216 = !DILocation(line: 75, column: 2, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9206, file: !8951, line: 75, column: 2)
!9218 = !DILocation(line: 0, scope: !9217)
!9219 = !DILocation(line: 76, column: 11, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !8951, line: 76, column: 7)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !8951, line: 75, column: 57)
!9222 = distinct !DILexicalBlock(scope: !9217, file: !8951, line: 75, column: 2)
!9223 = !DILocation(line: 76, column: 20, scope: !9220)
!9224 = !DILocation(line: 76, column: 7, scope: !9221)
!9225 = !DILocation(line: 77, column: 4, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9227, file: !8951, line: 77, column: 4)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !8951, line: 77, column: 4)
!9228 = distinct !DILexicalBlock(scope: !9220, file: !8951, line: 76, column: 28)
!9229 = !DILocation(line: 77, column: 4, scope: !9227)
!9230 = !DILocation(line: 77, column: 4, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !8951, line: 77, column: 4)
!9232 = !DILocation(line: 78, column: 4, scope: !9228)
!9233 = !DILocation(line: 79, column: 3, scope: !9228)
!9234 = !DILocation(line: 75, column: 2, scope: !9222)
!9235 = !DILocation(line: 81, column: 1, scope: !9206)
!9236 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6257, file: !6257, line: 710, type: !7456, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9237)
!9237 = !{!9238}
!9238 = !DILocalVariable(name: "Line", arg: 1, scope: !9236, file: !6257, line: 710, type: !156)
!9239 = !DILocation(line: 0, scope: !9236)
!9240 = !DILocation(line: 712, column: 21, scope: !9236)
!9241 = !DILocation(line: 0, scope: !9190, inlinedAt: !9242)
!9242 = distinct !DILocation(line: 712, column: 76, scope: !9236)
!9243 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9242)
!9244 = !DILocation(line: 0, scope: !9198, inlinedAt: !9245)
!9245 = distinct !DILocation(line: 712, column: 76, scope: !9236)
!9246 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9245)
!9247 = !DILocation(line: 712, column: 73, scope: !9236)
!9248 = !DILocation(line: 712, column: 3, scope: !9236)
!9249 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9250, file: !9250, line: 910, type: !9251, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9253)
!9250 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9251 = !DISubroutineType(types: !9252)
!9252 = !{null, !1251, !156}
!9253 = !{!9254, !9255}
!9254 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9249, file: !9250, line: 910, type: !1251)
!9255 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9249, file: !9250, line: 910, type: !156)
!9256 = !DILocation(line: 0, scope: !9249)
!9257 = !DILocation(line: 912, column: 3, scope: !9249)
!9258 = !DILocation(line: 913, column: 1, scope: !9249)
!9259 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9250, file: !9250, line: 823, type: !9260, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{!156, !1251}
!9262 = !{!9263}
!9263 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9259, file: !9250, line: 823, type: !1251)
!9264 = !DILocation(line: 0, scope: !9259)
!9265 = !DILocation(line: 825, column: 21, scope: !9259)
!9266 = !DILocation(line: 825, column: 3, scope: !9259)
!9267 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9250, file: !9250, line: 812, type: !9251, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9268)
!9268 = !{!9269, !9270}
!9269 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9267, file: !9250, line: 812, type: !1251)
!9270 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9267, file: !9250, line: 812, type: !156)
!9271 = !DILocation(line: 0, scope: !9267)
!9272 = !DILocation(line: 814, column: 3, scope: !9267)
!9273 = !DILocation(line: 815, column: 1, scope: !9267)
!9274 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9250, file: !9250, line: 771, type: !9260, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9275)
!9275 = !{!9276}
!9276 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9274, file: !9250, line: 771, type: !1251)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 773, column: 21, scope: !9274)
!9279 = !DILocation(line: 773, column: 3, scope: !9274)
!9280 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1321, file: !1321, line: 47, type: !9281, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9283)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!118, !155, !2681}
!9283 = !{!9284, !9285}
!9284 = !DILocalVariable(name: "flags", arg: 1, scope: !9280, file: !1321, line: 47, type: !155)
!9285 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9280, file: !1321, line: 47, type: !2681)
!9286 = !DILocation(line: 0, scope: !9280)
!9287 = !DILocation(line: 50, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9280, file: !1321, line: 50, column: 6)
!9289 = !DILocation(line: 50, column: 28, scope: !9288)
!9290 = !DILocation(line: 50, column: 6, scope: !9280)
!9291 = !DILocation(line: 53, column: 11, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !1321, line: 50, column: 34)
!9293 = !DILocation(line: 55, column: 14, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9292, file: !1321, line: 55, column: 7)
!9295 = !DILocation(line: 55, column: 35, scope: !9294)
!9296 = !DILocation(line: 55, column: 7, scope: !9292)
!9297 = !DILocation(line: 56, column: 14, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !1321, line: 56, column: 8)
!9299 = distinct !DILexicalBlock(scope: !9294, file: !1321, line: 55, column: 41)
!9300 = !DILocation(line: 56, column: 8, scope: !9299)
!9301 = !DILocation(line: 0, scope: !9294)
!9302 = !DILocation(line: 66, column: 14, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9292, file: !1321, line: 66, column: 7)
!9304 = !DILocation(line: 66, column: 30, scope: !9303)
!9305 = !DILocation(line: 66, column: 7, scope: !9292)
!9306 = !DILocation(line: 67, column: 12, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9303, file: !1321, line: 66, column: 36)
!9308 = !DILocation(line: 68, column: 3, scope: !9307)
!9309 = !DILocation(line: 68, column: 21, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9303, file: !1321, line: 68, column: 14)
!9311 = !DILocation(line: 68, column: 39, scope: !9310)
!9312 = !DILocation(line: 68, column: 14, scope: !9303)
!9313 = !DILocation(line: 69, column: 12, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9310, file: !1321, line: 68, column: 45)
!9315 = !DILocation(line: 70, column: 3, scope: !9314)
!9316 = !DILocation(line: 72, column: 21, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9288, file: !1321, line: 72, column: 14)
!9318 = !DILocation(line: 72, column: 35, scope: !9317)
!9319 = !DILocation(line: 72, column: 14, scope: !9288)
!9320 = !DILocation(line: 77, column: 14, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !1321, line: 77, column: 7)
!9322 = distinct !DILexicalBlock(scope: !9317, file: !1321, line: 72, column: 41)
!9323 = !DILocation(line: 77, column: 30, scope: !9321)
!9324 = !DILocation(line: 77, column: 7, scope: !9322)
!9325 = !DILocation(line: 0, scope: !9288)
!9326 = !DILocation(line: 90, column: 1, scope: !9280)
!9327 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1321, file: !1321, line: 157, type: !9328, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9330)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{null, !1184, !118, !118, !118}
!9330 = !{!9331, !9332, !9333, !9334, !9335, !9336, !9337, !9338, !9339, !9340, !9341}
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9327, file: !1321, line: 157, type: !1184)
!9332 = !DILocalVariable(name: "pin", arg: 2, scope: !9327, file: !1321, line: 157, type: !118)
!9333 = !DILocalVariable(name: "conf", arg: 3, scope: !9327, file: !1321, line: 158, type: !118)
!9334 = !DILocalVariable(name: "func", arg: 4, scope: !9327, file: !1321, line: 158, type: !118)
!9335 = !DILocalVariable(name: "cfg", scope: !9327, file: !1321, line: 160, type: !8835)
!9336 = !DILocalVariable(name: "gpio", scope: !9327, file: !1321, line: 161, type: !1251)
!9337 = !DILocalVariable(name: "pin_ll", scope: !9327, file: !1321, line: 163, type: !118)
!9338 = !DILocalVariable(name: "mode", scope: !9327, file: !1321, line: 227, type: !32)
!9339 = !DILocalVariable(name: "otype", scope: !9327, file: !1321, line: 227, type: !32)
!9340 = !DILocalVariable(name: "ospeed", scope: !9327, file: !1321, line: 227, type: !32)
!9341 = !DILocalVariable(name: "pupd", scope: !9327, file: !1321, line: 227, type: !32)
!9342 = !DILocation(line: 0, scope: !9327)
!9343 = !DILocation(line: 160, column: 45, scope: !9327)
!9344 = !DILocation(line: 161, column: 44, scope: !9327)
!9345 = !DILocation(line: 163, column: 15, scope: !9327)
!9346 = !DILocation(line: 229, column: 14, scope: !9327)
!9347 = !DILocation(line: 246, column: 47, scope: !9327)
!9348 = !DILocation(line: 246, column: 2, scope: !9327)
!9349 = !DILocation(line: 248, column: 43, scope: !9327)
!9350 = !DILocation(line: 248, column: 2, scope: !9327)
!9351 = !DILocation(line: 250, column: 40, scope: !9327)
!9352 = !DILocation(line: 250, column: 2, scope: !9327)
!9353 = !DILocation(line: 252, column: 11, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9327, file: !1321, line: 252, column: 6)
!9355 = !DILocation(line: 252, column: 6, scope: !9327)
!9356 = !DILocation(line: 253, column: 11, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !1321, line: 253, column: 7)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !1321, line: 252, column: 36)
!9359 = !DILocation(line: 253, column: 7, scope: !9358)
!9360 = !DILocation(line: 254, column: 4, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !1321, line: 253, column: 16)
!9362 = !DILocation(line: 255, column: 3, scope: !9361)
!9363 = !DILocation(line: 256, column: 4, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9357, file: !1321, line: 255, column: 10)
!9365 = !DILocation(line: 260, column: 40, scope: !9327)
!9366 = !DILocation(line: 260, column: 2, scope: !9327)
!9367 = !DILocation(line: 265, column: 1, scope: !9327)
!9368 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1321, file: !1321, line: 137, type: !9170, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9369)
!9369 = !{!9370, !9371}
!9370 = !DILocalVariable(name: "pin", arg: 1, scope: !9368, file: !1321, line: 137, type: !118)
!9371 = !DILocalVariable(name: "pinval", scope: !9368, file: !1321, line: 139, type: !156)
!9372 = !DILocation(line: 0, scope: !9368)
!9373 = !DILocation(line: 149, column: 13, scope: !9368)
!9374 = !DILocation(line: 151, column: 2, scope: !9368)
!9375 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9250, file: !9250, line: 342, type: !9376, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9378)
!9376 = !DISubroutineType(types: !9377)
!9377 = !{null, !1251, !156, !156}
!9378 = !{!9379, !9380, !9381}
!9379 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9375, file: !9250, line: 342, type: !1251)
!9380 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9375, file: !9250, line: 342, type: !156)
!9381 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9375, file: !9250, line: 342, type: !156)
!9382 = !DILocation(line: 0, scope: !9375)
!9383 = !DILocation(line: 344, column: 3, scope: !9375)
!9384 = !DILocation(line: 345, column: 1, scope: !9375)
!9385 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9250, file: !9250, line: 413, type: !9376, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9386)
!9386 = !{!9387, !9388, !9389}
!9387 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9385, file: !9250, line: 413, type: !1251)
!9388 = !DILocalVariable(name: "Pin", arg: 2, scope: !9385, file: !9250, line: 413, type: !156)
!9389 = !DILocalVariable(name: "Speed", arg: 3, scope: !9385, file: !9250, line: 413, type: !156)
!9390 = !DILocation(line: 0, scope: !9385)
!9391 = !DILocation(line: 415, column: 3, scope: !9385)
!9392 = !DILocation(line: 0, scope: !9190, inlinedAt: !9393)
!9393 = distinct !DILocation(line: 415, column: 3, scope: !9385)
!9394 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9393)
!9395 = !DILocation(line: 0, scope: !9198, inlinedAt: !9396)
!9396 = distinct !DILocation(line: 415, column: 3, scope: !9385)
!9397 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9396)
!9398 = !DILocation(line: 0, scope: !9190, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 415, column: 3, scope: !9385)
!9400 = !DILocation(line: 0, scope: !9198, inlinedAt: !9401)
!9401 = distinct !DILocation(line: 415, column: 3, scope: !9385)
!9402 = !DILocation(line: 417, column: 1, scope: !9385)
!9403 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9250, file: !9250, line: 484, type: !9376, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9403, file: !9250, line: 484, type: !1251)
!9406 = !DILocalVariable(name: "Pin", arg: 2, scope: !9403, file: !9250, line: 484, type: !156)
!9407 = !DILocalVariable(name: "Pull", arg: 3, scope: !9403, file: !9250, line: 484, type: !156)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 486, column: 3, scope: !9403)
!9410 = !DILocation(line: 0, scope: !9190, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 486, column: 3, scope: !9403)
!9412 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9411)
!9413 = !DILocation(line: 0, scope: !9198, inlinedAt: !9414)
!9414 = distinct !DILocation(line: 486, column: 3, scope: !9403)
!9415 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9414)
!9416 = !DILocation(line: 0, scope: !9190, inlinedAt: !9417)
!9417 = distinct !DILocation(line: 486, column: 3, scope: !9403)
!9418 = !DILocation(line: 0, scope: !9198, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 486, column: 3, scope: !9403)
!9420 = !DILocation(line: 487, column: 1, scope: !9403)
!9421 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9250, file: !9250, line: 556, type: !9376, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9422)
!9422 = !{!9423, !9424, !9425}
!9423 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9421, file: !9250, line: 556, type: !1251)
!9424 = !DILocalVariable(name: "Pin", arg: 2, scope: !9421, file: !9250, line: 556, type: !156)
!9425 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9421, file: !9250, line: 556, type: !156)
!9426 = !DILocation(line: 0, scope: !9421)
!9427 = !DILocation(line: 558, column: 3, scope: !9421)
!9428 = !DILocation(line: 0, scope: !9190, inlinedAt: !9429)
!9429 = distinct !DILocation(line: 558, column: 3, scope: !9421)
!9430 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9429)
!9431 = !DILocation(line: 0, scope: !9198, inlinedAt: !9432)
!9432 = distinct !DILocation(line: 558, column: 3, scope: !9421)
!9433 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9432)
!9434 = !DILocation(line: 0, scope: !9190, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 558, column: 3, scope: !9421)
!9436 = !DILocation(line: 0, scope: !9198, inlinedAt: !9437)
!9437 = distinct !DILocation(line: 558, column: 3, scope: !9421)
!9438 = !DILocation(line: 560, column: 1, scope: !9421)
!9439 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9250, file: !9250, line: 633, type: !9376, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443}
!9441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9439, file: !9250, line: 633, type: !1251)
!9442 = !DILocalVariable(name: "Pin", arg: 2, scope: !9439, file: !9250, line: 633, type: !156)
!9443 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9439, file: !9250, line: 633, type: !156)
!9444 = !DILocation(line: 0, scope: !9439)
!9445 = !DILocation(line: 635, column: 3, scope: !9439)
!9446 = !DILocation(line: 0, scope: !9190, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 635, column: 3, scope: !9439)
!9448 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9447)
!9449 = !DILocation(line: 0, scope: !9198, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 635, column: 3, scope: !9439)
!9451 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9450)
!9452 = !DILocation(line: 0, scope: !9190, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 635, column: 3, scope: !9439)
!9454 = !DILocation(line: 0, scope: !9198, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 635, column: 3, scope: !9439)
!9456 = !DILocation(line: 637, column: 1, scope: !9439)
!9457 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9250, file: !9250, line: 273, type: !9376, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9458)
!9458 = !{!9459, !9460, !9461}
!9459 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9457, file: !9250, line: 273, type: !1251)
!9460 = !DILocalVariable(name: "Pin", arg: 2, scope: !9457, file: !9250, line: 273, type: !156)
!9461 = !DILocalVariable(name: "Mode", arg: 3, scope: !9457, file: !9250, line: 273, type: !156)
!9462 = !DILocation(line: 0, scope: !9457)
!9463 = !DILocation(line: 275, column: 3, scope: !9457)
!9464 = !DILocation(line: 0, scope: !9190, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 275, column: 3, scope: !9457)
!9466 = !DILocation(line: 380, column: 4, scope: !9190, inlinedAt: !9465)
!9467 = !DILocation(line: 0, scope: !9198, inlinedAt: !9468)
!9468 = distinct !DILocation(line: 275, column: 3, scope: !9457)
!9469 = !DILocation(line: 414, column: 7, scope: !9198, inlinedAt: !9468)
!9470 = !DILocation(line: 0, scope: !9190, inlinedAt: !9471)
!9471 = distinct !DILocation(line: 275, column: 3, scope: !9457)
!9472 = !DILocation(line: 0, scope: !9198, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 275, column: 3, scope: !9457)
!9474 = !DILocation(line: 276, column: 1, scope: !9457)
!9475 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1321, file: !1321, line: 698, type: !1334, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "dev", arg: 1, scope: !9475, file: !1321, line: 698, type: !1184)
!9478 = !DILocalVariable(name: "data", scope: !9475, file: !1321, line: 700, type: !8902)
!9479 = !DILocalVariable(name: "ret", scope: !9475, file: !1321, line: 701, type: !118)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 700, column: 38, scope: !9475)
!9482 = !DILocation(line: 703, column: 8, scope: !9475)
!9483 = !DILocation(line: 703, column: 12, scope: !9475)
!9484 = !DILocation(line: 705, column: 7, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9475, file: !1321, line: 705, column: 6)
!9486 = !DILocation(line: 705, column: 6, scope: !9475)
!9487 = !DILocation(line: 722, column: 8, scope: !9475)
!9488 = !DILocation(line: 723, column: 10, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9475, file: !1321, line: 723, column: 6)
!9490 = !DILocation(line: 723, column: 6, scope: !9475)
!9491 = !DILocation(line: 731, column: 1, scope: !9475)
!9492 = distinct !DISubprogram(name: "device_is_ready", scope: !3439, file: !3439, line: 47, type: !9493, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9495)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!146, !1184}
!9495 = !{!9496}
!9496 = !DILocalVariable(name: "dev", arg: 1, scope: !9492, file: !3439, line: 47, type: !1184)
!9497 = !DILocation(line: 0, scope: !9492)
!9498 = !DILocation(line: 55, column: 2, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9492, file: !3439, line: 55, column: 2)
!9500 = !{i64 2155287540}
!9501 = !DILocation(line: 56, column: 9, scope: !9492)
!9502 = !DILocation(line: 56, column: 2, scope: !9492)
!9503 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1321, file: !1321, line: 270, type: !9504, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9506)
!9504 = !DISubroutineType(types: !9505)
!9505 = !{!118, !1184, !146}
!9506 = !{!9507, !9508, !9509, !9510, !9511}
!9507 = !DILocalVariable(name: "dev", arg: 1, scope: !9503, file: !1321, line: 270, type: !1184)
!9508 = !DILocalVariable(name: "on", arg: 2, scope: !9503, file: !1321, line: 270, type: !146)
!9509 = !DILocalVariable(name: "cfg", scope: !9503, file: !1321, line: 272, type: !8835)
!9510 = !DILocalVariable(name: "ret", scope: !9503, file: !1321, line: 273, type: !118)
!9511 = !DILocalVariable(name: "clk", scope: !9503, file: !1321, line: 278, type: !9137)
!9512 = !DILocation(line: 0, scope: !9503)
!9513 = !DILocation(line: 272, column: 45, scope: !9503)
!9514 = !DILocation(line: 282, column: 38, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !1321, line: 280, column: 10)
!9516 = distinct !DILexicalBlock(scope: !9503, file: !1321, line: 280, column: 6)
!9517 = !DILocation(line: 282, column: 6, scope: !9515)
!9518 = !DILocation(line: 281, column: 9, scope: !9515)
!9519 = !DILocation(line: 293, column: 1, scope: !9503)
!9520 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !9493, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9521)
!9521 = !{!9522}
!9522 = !DILocalVariable(name: "dev", arg: 1, scope: !9520, file: !130, line: 730, type: !1184)
!9523 = !DILocation(line: 0, scope: !9520)
!9524 = !DILocation(line: 732, column: 9, scope: !9520)
!9525 = !DILocation(line: 732, column: 2, scope: !9520)
!9526 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1321, file: !1321, line: 496, type: !9527, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1166, retainedNodes: !9529)
!9527 = !DISubroutineType(types: !9528)
!9528 = !{!118, !1184, !118, !118, !118}
!9529 = !{!9530, !9531, !9532, !9533, !9534, !9535}
!9530 = !DILocalVariable(name: "dev", arg: 1, scope: !9526, file: !1321, line: 496, type: !1184)
!9531 = !DILocalVariable(name: "pin", arg: 2, scope: !9526, file: !1321, line: 496, type: !118)
!9532 = !DILocalVariable(name: "conf", arg: 3, scope: !9526, file: !1321, line: 496, type: !118)
!9533 = !DILocalVariable(name: "func", arg: 4, scope: !9526, file: !1321, line: 496, type: !118)
!9534 = !DILocalVariable(name: "ret", scope: !9526, file: !1321, line: 498, type: !118)
!9535 = !DILocalVariable(name: "gpio_out", scope: !9536, file: !1321, line: 508, type: !156)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !1321, line: 507, column: 27)
!9537 = distinct !DILexicalBlock(scope: !9526, file: !1321, line: 507, column: 6)
!9538 = !DILocation(line: 0, scope: !9526)
!9539 = !DILocation(line: 505, column: 2, scope: !9526)
!9540 = !DILocation(line: 507, column: 11, scope: !9537)
!9541 = !DILocation(line: 507, column: 6, scope: !9526)
!9542 = !DILocation(line: 508, column: 28, scope: !9536)
!9543 = !DILocation(line: 0, scope: !9536)
!9544 = !DILocation(line: 510, column: 16, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9536, file: !1321, line: 510, column: 7)
!9546 = !DILocation(line: 0, scope: !9545)
!9547 = !DILocation(line: 510, column: 7, scope: !9536)
!9548 = !DILocation(line: 511, column: 4, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !1321, line: 510, column: 32)
!9550 = !DILocation(line: 512, column: 3, scope: !9549)
!9551 = !DILocation(line: 513, column: 4, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !1321, line: 512, column: 39)
!9553 = distinct !DILexicalBlock(scope: !9545, file: !1321, line: 512, column: 14)
!9554 = !DILocation(line: 514, column: 3, scope: !9552)
!9555 = !DILocation(line: 518, column: 1, scope: !9526)
!9556 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1594, file: !1594, line: 526, type: !1497, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9557)
!9557 = !{!9558, !9559, !9560}
!9558 = !DILocalVariable(name: "dev", arg: 1, scope: !9556, file: !1594, line: 526, type: !1499)
!9559 = !DILocalVariable(name: "c", arg: 2, scope: !9556, file: !1594, line: 526, type: !1127)
!9560 = !DILocalVariable(name: "config", scope: !9556, file: !1594, line: 528, type: !9561)
!9561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!9562 = !DILocation(line: 0, scope: !9556)
!9563 = !DILocation(line: 528, column: 48, scope: !9556)
!9564 = !DILocation(line: 531, column: 40, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9556, file: !1594, line: 531, column: 6)
!9566 = !DILocation(line: 531, column: 6, scope: !9565)
!9567 = !DILocation(line: 531, column: 6, scope: !9556)
!9568 = !DILocation(line: 532, column: 34, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9565, file: !1594, line: 531, column: 48)
!9570 = !DILocation(line: 532, column: 3, scope: !9569)
!9571 = !DILocation(line: 533, column: 2, scope: !9569)
!9572 = !DILocation(line: 539, column: 42, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9556, file: !1594, line: 539, column: 6)
!9574 = !DILocation(line: 539, column: 7, scope: !9573)
!9575 = !DILocation(line: 539, column: 6, scope: !9556)
!9576 = !DILocation(line: 543, column: 52, scope: !9556)
!9577 = !DILocation(line: 543, column: 22, scope: !9556)
!9578 = !DILocation(line: 543, column: 5, scope: !9556)
!9579 = !DILocation(line: 545, column: 2, scope: !9556)
!9580 = !DILocation(line: 546, column: 1, scope: !9556)
!9581 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1594, file: !1594, line: 548, type: !1516, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9582)
!9582 = !{!9583, !9584, !9585, !9586}
!9583 = !DILocalVariable(name: "dev", arg: 1, scope: !9581, file: !1594, line: 548, type: !1499)
!9584 = !DILocalVariable(name: "c", arg: 2, scope: !9581, file: !1594, line: 549, type: !144)
!9585 = !DILocalVariable(name: "config", scope: !9581, file: !1594, line: 551, type: !9561)
!9586 = !DILocalVariable(name: "key", scope: !9581, file: !1594, line: 555, type: !32)
!9587 = !DILocation(line: 0, scope: !9581)
!9588 = !DILocation(line: 551, column: 48, scope: !9581)
!9589 = !DILocation(line: 562, column: 2, scope: !9581)
!9590 = !DILocation(line: 563, column: 41, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1594, line: 563, column: 7)
!9592 = distinct !DILexicalBlock(scope: !9581, file: !1594, line: 562, column: 12)
!9593 = !DILocation(line: 563, column: 7, scope: !9591)
!9594 = !DILocation(line: 563, column: 7, scope: !9592)
!9595 = !DILocation(line: 55, column: 2, scope: !9596, inlinedAt: !9600)
!9596 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9597)
!9597 = !{!9598, !9599}
!9598 = !DILocalVariable(name: "key", scope: !9596, file: !6236, line: 44, type: !32)
!9599 = !DILocalVariable(name: "tmp", scope: !9596, file: !6236, line: 53, type: !32)
!9600 = distinct !DILocation(line: 564, column: 10, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9591, file: !1594, line: 563, column: 49)
!9602 = !{i64 2329685}
!9603 = !DILocation(line: 0, scope: !9596, inlinedAt: !9600)
!9604 = !DILocation(line: 565, column: 42, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9601, file: !1594, line: 565, column: 8)
!9606 = !DILocation(line: 565, column: 8, scope: !9605)
!9607 = !DILocation(line: 565, column: 8, scope: !9601)
!9608 = !DILocalVariable(name: "key", arg: 1, scope: !9609, file: !6236, line: 84, type: !32)
!9609 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9610)
!9610 = !{!9608}
!9611 = !DILocation(line: 0, scope: !9609, inlinedAt: !9612)
!9612 = distinct !DILocation(line: 568, column: 4, scope: !9601)
!9613 = !DILocation(line: 95, column: 2, scope: !9609, inlinedAt: !9612)
!9614 = !{i64 2330502}
!9615 = !DILocation(line: 569, column: 3, scope: !9601)
!9616 = distinct !{!9616, !9589, !9617}
!9617 = !DILocation(line: 570, column: 2, scope: !9581)
!9618 = !DILocation(line: 592, column: 33, scope: !9581)
!9619 = !DILocation(line: 592, column: 2, scope: !9581)
!9620 = !DILocation(line: 0, scope: !9609, inlinedAt: !9621)
!9621 = distinct !DILocation(line: 593, column: 2, scope: !9581)
!9622 = !DILocation(line: 95, column: 2, scope: !9609, inlinedAt: !9621)
!9623 = !DILocation(line: 594, column: 1, scope: !9581)
!9624 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1594, file: !1594, line: 596, type: !1520, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9625)
!9625 = !{!9626, !9627, !9628}
!9626 = !DILocalVariable(name: "dev", arg: 1, scope: !9624, file: !1594, line: 596, type: !1499)
!9627 = !DILocalVariable(name: "config", scope: !9624, file: !1594, line: 598, type: !9561)
!9628 = !DILocalVariable(name: "err", scope: !9624, file: !1594, line: 599, type: !156)
!9629 = !DILocation(line: 0, scope: !9624)
!9630 = !DILocation(line: 598, column: 48, scope: !9624)
!9631 = !DILocation(line: 606, column: 40, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 606, column: 6)
!9633 = !DILocation(line: 606, column: 6, scope: !9632)
!9634 = !DILocation(line: 606, column: 6, scope: !9624)
!9635 = !DILocation(line: 610, column: 39, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 610, column: 6)
!9637 = !DILocation(line: 610, column: 6, scope: !9636)
!9638 = !DILocation(line: 610, column: 6, scope: !9624)
!9639 = !DILocation(line: 614, column: 39, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 614, column: 6)
!9641 = !DILocation(line: 614, column: 6, scope: !9640)
!9642 = !DILocation(line: 614, column: 6, scope: !9624)
!9643 = !DILocation(line: 619, column: 40, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 619, column: 6)
!9645 = !DILocation(line: 619, column: 6, scope: !9644)
!9646 = !DILocation(line: 619, column: 6, scope: !9624)
!9647 = !DILocation(line: 623, column: 10, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 623, column: 6)
!9649 = !DILocation(line: 623, column: 6, scope: !9624)
!9650 = !DILocation(line: 624, column: 34, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9648, file: !1594, line: 623, column: 24)
!9652 = !DILocation(line: 624, column: 3, scope: !9651)
!9653 = !DILocation(line: 625, column: 2, scope: !9651)
!9654 = !DILocation(line: 632, column: 10, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 632, column: 6)
!9656 = !DILocation(line: 632, column: 6, scope: !9624)
!9657 = !DILocation(line: 633, column: 34, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9655, file: !1594, line: 632, column: 32)
!9659 = !DILocation(line: 633, column: 3, scope: !9658)
!9660 = !DILocation(line: 634, column: 2, scope: !9658)
!9661 = !DILocation(line: 636, column: 10, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 636, column: 6)
!9663 = !DILocation(line: 636, column: 6, scope: !9624)
!9664 = !DILocation(line: 637, column: 33, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9662, file: !1594, line: 636, column: 31)
!9666 = !DILocation(line: 637, column: 3, scope: !9665)
!9667 = !DILocation(line: 638, column: 2, scope: !9665)
!9668 = !DILocation(line: 640, column: 10, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9624, file: !1594, line: 640, column: 6)
!9670 = !DILocation(line: 640, column: 6, scope: !9624)
!9671 = !DILocation(line: 641, column: 33, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9669, file: !1594, line: 640, column: 32)
!9673 = !DILocation(line: 641, column: 3, scope: !9672)
!9674 = !DILocation(line: 642, column: 2, scope: !9672)
!9675 = !DILocation(line: 646, column: 32, scope: !9624)
!9676 = !DILocation(line: 646, column: 2, scope: !9624)
!9677 = !DILocation(line: 648, column: 2, scope: !9624)
!9678 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1594, file: !1594, line: 419, type: !1524, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9679)
!9679 = !{!9680, !9681, !9682, !9683, !9685, !9686, !9687, !9688}
!9680 = !DILocalVariable(name: "dev", arg: 1, scope: !9678, file: !1594, line: 419, type: !1499)
!9681 = !DILocalVariable(name: "cfg", arg: 2, scope: !9678, file: !1594, line: 420, type: !1526)
!9682 = !DILocalVariable(name: "config", scope: !9678, file: !1594, line: 422, type: !9561)
!9683 = !DILocalVariable(name: "data", scope: !9678, file: !1594, line: 423, type: !9684)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!9685 = !DILocalVariable(name: "parity", scope: !9678, file: !1594, line: 424, type: !6686)
!9686 = !DILocalVariable(name: "stopbits", scope: !9678, file: !1594, line: 425, type: !6686)
!9687 = !DILocalVariable(name: "databits", scope: !9678, file: !1594, line: 426, type: !6686)
!9688 = !DILocalVariable(name: "flowctrl", scope: !9678, file: !1594, line: 428, type: !6686)
!9689 = !DILocation(line: 0, scope: !9678)
!9690 = !DILocation(line: 422, column: 48, scope: !9678)
!9691 = !DILocation(line: 423, column: 38, scope: !9678)
!9692 = !DILocation(line: 424, column: 56, scope: !9678)
!9693 = !DILocation(line: 424, column: 51, scope: !9678)
!9694 = !DILocation(line: 424, column: 26, scope: !9678)
!9695 = !DILocation(line: 425, column: 60, scope: !9678)
!9696 = !DILocation(line: 425, column: 55, scope: !9678)
!9697 = !DILocation(line: 425, column: 28, scope: !9678)
!9698 = !DILocation(line: 426, column: 60, scope: !9678)
!9699 = !DILocation(line: 426, column: 55, scope: !9678)
!9700 = !DILocation(line: 426, column: 28, scope: !9678)
!9701 = !DILocation(line: 428, column: 58, scope: !9678)
!9702 = !DILocation(line: 428, column: 53, scope: !9678)
!9703 = !DILocation(line: 428, column: 28, scope: !9678)
!9704 = !DILocation(line: 431, column: 44, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 431, column: 6)
!9706 = !DILocation(line: 438, column: 22, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 437, column: 6)
!9708 = !DILocation(line: 437, column: 6, scope: !9678)
!9709 = !DILocation(line: 448, column: 6, scope: !9678)
!9710 = !DILocation(line: 465, column: 47, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 465, column: 6)
!9712 = !DILocation(line: 475, column: 21, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 475, column: 6)
!9714 = !DILocation(line: 475, column: 6, scope: !9678)
!9715 = !DILocation(line: 476, column: 8, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !1594, line: 476, column: 7)
!9717 = distinct !DILexicalBlock(scope: !9713, file: !1594, line: 475, column: 49)
!9718 = !DILocation(line: 477, column: 34, scope: !9716)
!9719 = !DILocation(line: 476, column: 7, scope: !9717)
!9720 = !DILocation(line: 482, column: 27, scope: !9678)
!9721 = !DILocation(line: 482, column: 2, scope: !9678)
!9722 = !DILocation(line: 484, column: 16, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 484, column: 6)
!9724 = !DILocation(line: 484, column: 13, scope: !9723)
!9725 = !DILocation(line: 484, column: 6, scope: !9678)
!9726 = !DILocation(line: 485, column: 3, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9723, file: !1594, line: 484, column: 44)
!9728 = !DILocation(line: 486, column: 2, scope: !9727)
!9729 = !DILocation(line: 488, column: 18, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 488, column: 6)
!9731 = !DILocation(line: 488, column: 15, scope: !9730)
!9732 = !DILocation(line: 488, column: 6, scope: !9678)
!9733 = !DILocation(line: 489, column: 3, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9730, file: !1594, line: 488, column: 48)
!9735 = !DILocation(line: 490, column: 2, scope: !9734)
!9736 = !DILocation(line: 492, column: 18, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 492, column: 6)
!9738 = !DILocation(line: 492, column: 15, scope: !9737)
!9739 = !DILocation(line: 492, column: 6, scope: !9678)
!9740 = !DILocation(line: 493, column: 3, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !1594, line: 492, column: 48)
!9742 = !DILocation(line: 494, column: 2, scope: !9741)
!9743 = !DILocation(line: 496, column: 18, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 496, column: 6)
!9745 = !DILocation(line: 496, column: 15, scope: !9744)
!9746 = !DILocation(line: 496, column: 6, scope: !9678)
!9747 = !DILocation(line: 497, column: 3, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9744, file: !1594, line: 496, column: 46)
!9749 = !DILocation(line: 498, column: 2, scope: !9748)
!9750 = !DILocation(line: 500, column: 11, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9678, file: !1594, line: 500, column: 6)
!9752 = !DILocation(line: 500, column: 29, scope: !9751)
!9753 = !DILocation(line: 500, column: 20, scope: !9751)
!9754 = !DILocation(line: 500, column: 6, scope: !9678)
!9755 = !DILocation(line: 501, column: 3, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9751, file: !1594, line: 500, column: 40)
!9757 = !DILocation(line: 502, column: 26, scope: !9756)
!9758 = !DILocation(line: 502, column: 19, scope: !9756)
!9759 = !DILocation(line: 503, column: 2, scope: !9756)
!9760 = !DILocation(line: 505, column: 26, scope: !9678)
!9761 = !DILocation(line: 505, column: 2, scope: !9678)
!9762 = !DILocation(line: 506, column: 2, scope: !9678)
!9763 = !DILocation(line: 507, column: 1, scope: !9678)
!9764 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1594, file: !1594, line: 509, type: !1537, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9765)
!9765 = !{!9766, !9767, !9768}
!9766 = !DILocalVariable(name: "dev", arg: 1, scope: !9764, file: !1594, line: 509, type: !1499)
!9767 = !DILocalVariable(name: "cfg", arg: 2, scope: !9764, file: !1594, line: 510, type: !1539)
!9768 = !DILocalVariable(name: "data", scope: !9764, file: !1594, line: 512, type: !9684)
!9769 = !DILocation(line: 0, scope: !9764)
!9770 = !DILocation(line: 512, column: 38, scope: !9764)
!9771 = !DILocation(line: 514, column: 24, scope: !9764)
!9772 = !DILocation(line: 514, column: 7, scope: !9764)
!9773 = !DILocation(line: 514, column: 16, scope: !9764)
!9774 = !DILocation(line: 515, column: 41, scope: !9764)
!9775 = !{i32 0, i32 1537}
!9776 = !DILocation(line: 515, column: 16, scope: !9764)
!9777 = !DILocation(line: 515, column: 7, scope: !9764)
!9778 = !DILocation(line: 515, column: 14, scope: !9764)
!9779 = !DILocation(line: 517, column: 3, scope: !9764)
!9780 = !{i32 0, i32 12289}
!9781 = !DILocation(line: 516, column: 19, scope: !9764)
!9782 = !DILocation(line: 516, column: 7, scope: !9764)
!9783 = !DILocation(line: 516, column: 17, scope: !9764)
!9784 = !DILocation(line: 519, column: 3, scope: !9764)
!9785 = !DILocation(line: 519, column: 33, scope: !9764)
!9786 = !DILocation(line: 518, column: 19, scope: !9764)
!9787 = !DILocation(line: 518, column: 7, scope: !9764)
!9788 = !DILocation(line: 518, column: 17, scope: !9764)
!9789 = !DILocation(line: 521, column: 3, scope: !9764)
!9790 = !{i32 0, i32 769}
!9791 = !DILocation(line: 520, column: 19, scope: !9764)
!9792 = !DILocation(line: 520, column: 7, scope: !9764)
!9793 = !DILocation(line: 520, column: 17, scope: !9764)
!9794 = !DILocation(line: 522, column: 2, scope: !9764)
!9795 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1594, file: !1594, line: 205, type: !9796, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9798)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{!156, !1499}
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "dev", arg: 1, scope: !9795, file: !1594, line: 205, type: !1499)
!9800 = !DILocalVariable(name: "config", scope: !9795, file: !1594, line: 207, type: !9561)
!9801 = !DILocation(line: 0, scope: !9795)
!9802 = !DILocation(line: 207, column: 48, scope: !9795)
!9803 = !DILocation(line: 209, column: 36, scope: !9795)
!9804 = !DILocation(line: 209, column: 9, scope: !9795)
!9805 = !DILocation(line: 209, column: 2, scope: !9795)
!9806 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1594, file: !1594, line: 270, type: !9807, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9809)
!9807 = !DISubroutineType(types: !9808)
!9808 = !{!1465, !156}
!9809 = !{!9810}
!9810 = !DILocalVariable(name: "parity", arg: 1, scope: !9806, file: !1594, line: 270, type: !156)
!9811 = !DILocation(line: 0, scope: !9806)
!9812 = !DILocation(line: 272, column: 2, scope: !9806)
!9813 = !DILocation(line: 281, column: 1, scope: !9806)
!9814 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1594, file: !1594, line: 220, type: !9796, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9815)
!9815 = !{!9816, !9817}
!9816 = !DILocalVariable(name: "dev", arg: 1, scope: !9814, file: !1594, line: 220, type: !1499)
!9817 = !DILocalVariable(name: "config", scope: !9814, file: !1594, line: 222, type: !9561)
!9818 = !DILocation(line: 0, scope: !9814)
!9819 = !DILocation(line: 222, column: 48, scope: !9814)
!9820 = !DILocation(line: 224, column: 44, scope: !9814)
!9821 = !DILocation(line: 224, column: 9, scope: !9814)
!9822 = !DILocation(line: 224, column: 2, scope: !9814)
!9823 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1594, file: !1594, line: 304, type: !9824, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9826)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{!1479, !156}
!9826 = !{!9827}
!9827 = !DILocalVariable(name: "sb", arg: 1, scope: !9823, file: !1594, line: 304, type: !156)
!9828 = !DILocation(line: 0, scope: !9823)
!9829 = !DILocation(line: 306, column: 2, scope: !9823)
!9830 = !DILocation(line: 0, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9823, file: !1594, line: 306, column: 14)
!9832 = !DILocation(line: 323, column: 1, scope: !9823)
!9833 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1594, file: !1594, line: 235, type: !9796, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9834)
!9834 = !{!9835, !9836}
!9835 = !DILocalVariable(name: "dev", arg: 1, scope: !9833, file: !1594, line: 235, type: !1499)
!9836 = !DILocalVariable(name: "config", scope: !9833, file: !1594, line: 237, type: !9561)
!9837 = !DILocation(line: 0, scope: !9833)
!9838 = !DILocation(line: 237, column: 48, scope: !9833)
!9839 = !DILocation(line: 239, column: 39, scope: !9833)
!9840 = !DILocation(line: 239, column: 9, scope: !9833)
!9841 = !DILocation(line: 239, column: 2, scope: !9833)
!9842 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1594, file: !1594, line: 355, type: !9843, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!1472, !156, !156}
!9845 = !{!9846, !9847}
!9846 = !DILocalVariable(name: "db", arg: 1, scope: !9842, file: !1594, line: 355, type: !156)
!9847 = !DILocalVariable(name: "p", arg: 2, scope: !9842, file: !1594, line: 356, type: !156)
!9848 = !DILocation(line: 0, scope: !9842)
!9849 = !DILocation(line: 358, column: 2, scope: !9842)
!9850 = !DILocation(line: 384, column: 1, scope: !9842)
!9851 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1594, file: !1594, line: 250, type: !9796, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9852)
!9852 = !{!9853, !9854}
!9853 = !DILocalVariable(name: "dev", arg: 1, scope: !9851, file: !1594, line: 250, type: !1499)
!9854 = !DILocalVariable(name: "config", scope: !9851, file: !1594, line: 252, type: !9561)
!9855 = !DILocation(line: 0, scope: !9851)
!9856 = !DILocation(line: 252, column: 48, scope: !9851)
!9857 = !DILocation(line: 254, column: 40, scope: !9851)
!9858 = !DILocation(line: 254, column: 9, scope: !9851)
!9859 = !DILocation(line: 254, column: 2, scope: !9851)
!9860 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1594, file: !1594, line: 409, type: !9861, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9863)
!9861 = !DISubroutineType(types: !9862)
!9862 = !{!1485, !156}
!9863 = !{!9864}
!9864 = !DILocalVariable(name: "fc", arg: 1, scope: !9860, file: !1594, line: 409, type: !156)
!9865 = !DILocation(line: 0, scope: !9860)
!9866 = !DILocation(line: 411, column: 9, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9860, file: !1594, line: 411, column: 6)
!9868 = !DILocation(line: 416, column: 1, scope: !9860)
!9869 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9870, file: !9870, line: 967, type: !9871, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9873)
!9870 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!156, !1540}
!9873 = !{!9874}
!9874 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9869, file: !9870, line: 967, type: !1540)
!9875 = !DILocation(line: 0, scope: !9869)
!9876 = !DILocation(line: 969, column: 21, scope: !9869)
!9877 = !DILocation(line: 969, column: 3, scope: !9869)
!9878 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9870, file: !9870, line: 601, type: !9871, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9879)
!9879 = !{!9880}
!9880 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9878, file: !9870, line: 601, type: !1540)
!9881 = !DILocation(line: 0, scope: !9878)
!9882 = !DILocation(line: 603, column: 21, scope: !9878)
!9883 = !DILocation(line: 603, column: 3, scope: !9878)
!9884 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9870, file: !9870, line: 820, type: !9871, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9885)
!9885 = !{!9886}
!9886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9884, file: !9870, line: 820, type: !1540)
!9887 = !DILocation(line: 0, scope: !9884)
!9888 = !DILocation(line: 822, column: 21, scope: !9884)
!9889 = !DILocation(line: 822, column: 3, scope: !9884)
!9890 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9870, file: !9870, line: 547, type: !9871, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9891)
!9891 = !{!9892}
!9892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9890, file: !9870, line: 547, type: !1540)
!9893 = !DILocation(line: 0, scope: !9890)
!9894 = !DILocation(line: 549, column: 21, scope: !9890)
!9895 = !DILocation(line: 549, column: 3, scope: !9890)
!9896 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1594, file: !1594, line: 257, type: !9897, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9899)
!9897 = !DISubroutineType(types: !9898)
!9898 = !{!156, !1465}
!9899 = !{!9900}
!9900 = !DILocalVariable(name: "parity", arg: 1, scope: !9896, file: !1594, line: 257, type: !1465)
!9901 = !DILocation(line: 0, scope: !9896)
!9902 = !DILocation(line: 259, column: 2, scope: !9896)
!9903 = !DILocation(line: 268, column: 1, scope: !9896)
!9904 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1594, file: !1594, line: 283, type: !9905, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9907)
!9905 = !DISubroutineType(types: !9906)
!9906 = !{!156, !1479}
!9907 = !{!9908}
!9908 = !DILocalVariable(name: "sb", arg: 1, scope: !9904, file: !1594, line: 283, type: !1479)
!9909 = !DILocation(line: 0, scope: !9904)
!9910 = !DILocation(line: 285, column: 2, scope: !9904)
!9911 = !DILocation(line: 0, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9904, file: !1594, line: 285, column: 14)
!9913 = !DILocation(line: 302, column: 1, scope: !9904)
!9914 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1594, file: !1594, line: 325, type: !9915, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9917)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{!156, !1472, !1465}
!9917 = !{!9918, !9919}
!9918 = !DILocalVariable(name: "db", arg: 1, scope: !9914, file: !1594, line: 325, type: !1472)
!9919 = !DILocalVariable(name: "p", arg: 2, scope: !9914, file: !1594, line: 326, type: !1465)
!9920 = !DILocation(line: 0, scope: !9914)
!9921 = !DILocation(line: 328, column: 2, scope: !9914)
!9922 = !DILocation(line: 353, column: 1, scope: !9914)
!9923 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1594, file: !1594, line: 393, type: !9924, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9926)
!9924 = !DISubroutineType(types: !9925)
!9925 = !{!156, !1485}
!9926 = !{!9927}
!9927 = !DILocalVariable(name: "fc", arg: 1, scope: !9923, file: !1594, line: 393, type: !1485)
!9928 = !DILocation(line: 0, scope: !9923)
!9929 = !DILocation(line: 395, column: 9, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9923, file: !1594, line: 395, column: 6)
!9931 = !DILocation(line: 400, column: 1, scope: !9923)
!9932 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9870, file: !9870, line: 424, type: !9933, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9935)
!9933 = !DISubroutineType(types: !9934)
!9934 = !{null, !1540}
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9932, file: !9870, line: 424, type: !1540)
!9937 = !DILocation(line: 0, scope: !9932)
!9938 = !DILocation(line: 426, column: 3, scope: !9932)
!9939 = !DILocation(line: 427, column: 1, scope: !9932)
!9940 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1594, file: !1594, line: 197, type: !9941, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{null, !1499, !156}
!9943 = !{!9944, !9945, !9946}
!9944 = !DILocalVariable(name: "dev", arg: 1, scope: !9940, file: !1594, line: 197, type: !1499)
!9945 = !DILocalVariable(name: "parity", arg: 2, scope: !9940, file: !1594, line: 198, type: !156)
!9946 = !DILocalVariable(name: "config", scope: !9940, file: !1594, line: 200, type: !9561)
!9947 = !DILocation(line: 0, scope: !9940)
!9948 = !DILocation(line: 200, column: 48, scope: !9940)
!9949 = !DILocation(line: 202, column: 29, scope: !9940)
!9950 = !DILocation(line: 202, column: 2, scope: !9940)
!9951 = !DILocation(line: 203, column: 1, scope: !9940)
!9952 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1594, file: !1594, line: 212, type: !9941, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9953)
!9953 = !{!9954, !9955, !9956}
!9954 = !DILocalVariable(name: "dev", arg: 1, scope: !9952, file: !1594, line: 212, type: !1499)
!9955 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9952, file: !1594, line: 213, type: !156)
!9956 = !DILocalVariable(name: "config", scope: !9952, file: !1594, line: 215, type: !9561)
!9957 = !DILocation(line: 0, scope: !9952)
!9958 = !DILocation(line: 215, column: 48, scope: !9952)
!9959 = !DILocation(line: 217, column: 37, scope: !9952)
!9960 = !DILocation(line: 217, column: 2, scope: !9952)
!9961 = !DILocation(line: 218, column: 1, scope: !9952)
!9962 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1594, file: !1594, line: 227, type: !9941, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9963)
!9963 = !{!9964, !9965, !9966}
!9964 = !DILocalVariable(name: "dev", arg: 1, scope: !9962, file: !1594, line: 227, type: !1499)
!9965 = !DILocalVariable(name: "databits", arg: 2, scope: !9962, file: !1594, line: 228, type: !156)
!9966 = !DILocalVariable(name: "config", scope: !9962, file: !1594, line: 230, type: !9561)
!9967 = !DILocation(line: 0, scope: !9962)
!9968 = !DILocation(line: 230, column: 48, scope: !9962)
!9969 = !DILocation(line: 232, column: 32, scope: !9962)
!9970 = !DILocation(line: 232, column: 2, scope: !9962)
!9971 = !DILocation(line: 233, column: 1, scope: !9962)
!9972 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1594, file: !1594, line: 242, type: !9941, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9973)
!9973 = !{!9974, !9975, !9976}
!9974 = !DILocalVariable(name: "dev", arg: 1, scope: !9972, file: !1594, line: 242, type: !1499)
!9975 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9972, file: !1594, line: 243, type: !156)
!9976 = !DILocalVariable(name: "config", scope: !9972, file: !1594, line: 245, type: !9561)
!9977 = !DILocation(line: 0, scope: !9972)
!9978 = !DILocation(line: 245, column: 48, scope: !9972)
!9979 = !DILocation(line: 247, column: 33, scope: !9972)
!9980 = !DILocation(line: 247, column: 2, scope: !9972)
!9981 = !DILocation(line: 248, column: 1, scope: !9972)
!9982 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1594, file: !1594, line: 107, type: !9941, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !9983)
!9983 = !{!9984, !9985, !9986, !9987, !9988}
!9984 = !DILocalVariable(name: "dev", arg: 1, scope: !9982, file: !1594, line: 107, type: !1499)
!9985 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9982, file: !1594, line: 107, type: !156)
!9986 = !DILocalVariable(name: "config", scope: !9982, file: !1594, line: 109, type: !9561)
!9987 = !DILocalVariable(name: "data", scope: !9982, file: !1594, line: 110, type: !9684)
!9988 = !DILocalVariable(name: "clock_rate", scope: !9982, file: !1594, line: 112, type: !156)
!9989 = !DILocation(line: 0, scope: !9982)
!9990 = !DILocation(line: 109, column: 48, scope: !9982)
!9991 = !DILocation(line: 110, column: 38, scope: !9982)
!9992 = !DILocation(line: 112, column: 2, scope: !9982)
!9993 = !DILocation(line: 123, column: 36, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !1594, line: 123, column: 7)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !1594, line: 122, column: 9)
!9996 = distinct !DILexicalBlock(scope: !9982, file: !1594, line: 115, column: 6)
!9997 = !DILocation(line: 124, column: 42, scope: !9994)
!9998 = !DILocation(line: 123, column: 7, scope: !9994)
!9999 = !DILocation(line: 125, column: 22, scope: !9994)
!10000 = !DILocation(line: 123, column: 7, scope: !9995)
!10001 = !DILocation(line: 176, column: 36, scope: !9982)
!10002 = !DILocation(line: 176, column: 3, scope: !9982)
!10003 = !DILocation(line: 179, column: 32, scope: !9982)
!10004 = !DILocation(line: 180, column: 10, scope: !9982)
!10005 = !DILocation(line: 179, column: 3, scope: !9982)
!10006 = !DILocation(line: 189, column: 3, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10008, file: !1594, line: 189, column: 3)
!10008 = distinct !DILexicalBlock(scope: !9982, file: !1594, line: 189, column: 3)
!10009 = !DILocation(line: 189, column: 3, scope: !10008)
!10010 = !DILocation(line: 189, column: 3, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10007, file: !1594, line: 189, column: 3)
!10012 = !DILocation(line: 195, column: 1, scope: !9982)
!10013 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9870, file: !9870, line: 410, type: !9933, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10014)
!10014 = !{!10015}
!10015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10013, file: !9870, line: 410, type: !1540)
!10016 = !DILocation(line: 0, scope: !10013)
!10017 = !DILocation(line: 412, column: 3, scope: !10013)
!10018 = !DILocation(line: 413, column: 1, scope: !10013)
!10019 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !970, file: !970, line: 216, type: !1573, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10020)
!10020 = !{!10021, !10022, !10023, !10024}
!10021 = !DILocalVariable(name: "dev", arg: 1, scope: !10019, file: !970, line: 216, type: !1499)
!10022 = !DILocalVariable(name: "sys", arg: 2, scope: !10019, file: !970, line: 217, type: !1066)
!10023 = !DILocalVariable(name: "rate", arg: 3, scope: !10019, file: !970, line: 218, type: !1022)
!10024 = !DILocalVariable(name: "api", scope: !10019, file: !970, line: 220, type: !1551)
!10025 = !DILocation(line: 0, scope: !10019)
!10026 = !DILocation(line: 221, column: 49, scope: !10019)
!10027 = !DILocation(line: 223, column: 11, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10019, file: !970, line: 223, column: 6)
!10029 = !DILocation(line: 223, column: 20, scope: !10028)
!10030 = !DILocation(line: 223, column: 6, scope: !10019)
!10031 = !DILocation(line: 227, column: 9, scope: !10019)
!10032 = !DILocation(line: 227, column: 2, scope: !10019)
!10033 = !DILocation(line: 228, column: 1, scope: !10019)
!10034 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9870, file: !9870, line: 615, type: !10035, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10037)
!10035 = !DISubroutineType(types: !10036)
!10036 = !{null, !1540, !156}
!10037 = !{!10038, !10039}
!10038 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10034, file: !9870, line: 615, type: !1540)
!10039 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10034, file: !9870, line: 615, type: !156)
!10040 = !DILocation(line: 0, scope: !10034)
!10041 = !DILocation(line: 617, column: 3, scope: !10034)
!10042 = !DILocation(line: 618, column: 1, scope: !10034)
!10043 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9870, file: !9870, line: 1020, type: !10044, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{null, !1540, !156, !156, !156}
!10046 = !{!10047, !10048, !10049, !10050}
!10047 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10043, file: !9870, line: 1020, type: !1540)
!10048 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10043, file: !9870, line: 1020, type: !156)
!10049 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10043, file: !9870, line: 1020, type: !156)
!10050 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10043, file: !9870, line: 1021, type: !156)
!10051 = !DILocation(line: 0, scope: !10043)
!10052 = !DILocation(line: 1029, column: 30, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !9870, line: 1028, column: 3)
!10054 = distinct !DILexicalBlock(scope: !10043, file: !9870, line: 1023, column: 7)
!10055 = !DILocation(line: 1029, column: 19, scope: !10053)
!10056 = !DILocation(line: 1029, column: 13, scope: !10053)
!10057 = !DILocation(line: 1029, column: 17, scope: !10053)
!10058 = !DILocation(line: 1031, column: 1, scope: !10043)
!10059 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9870, file: !9870, line: 949, type: !10035, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10060)
!10060 = !{!10061, !10062}
!10061 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10059, file: !9870, line: 949, type: !1540)
!10062 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10059, file: !9870, line: 949, type: !156)
!10063 = !DILocation(line: 0, scope: !10059)
!10064 = !DILocation(line: 951, column: 3, scope: !10059)
!10065 = !DILocation(line: 952, column: 1, scope: !10059)
!10066 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9870, file: !9870, line: 588, type: !10035, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10067)
!10067 = !{!10068, !10069}
!10068 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10066, file: !9870, line: 588, type: !1540)
!10069 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10066, file: !9870, line: 588, type: !156)
!10070 = !DILocation(line: 0, scope: !10066)
!10071 = !DILocation(line: 590, column: 3, scope: !10066)
!10072 = !DILocation(line: 591, column: 1, scope: !10066)
!10073 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9870, file: !9870, line: 805, type: !10035, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10074)
!10074 = !{!10075, !10076}
!10075 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10073, file: !9870, line: 805, type: !1540)
!10076 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10073, file: !9870, line: 805, type: !156)
!10077 = !DILocation(line: 0, scope: !10073)
!10078 = !DILocation(line: 807, column: 3, scope: !10073)
!10079 = !DILocation(line: 808, column: 1, scope: !10073)
!10080 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9870, file: !9870, line: 532, type: !10035, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10081)
!10081 = !{!10082, !10083}
!10082 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10080, file: !9870, line: 532, type: !1540)
!10083 = !DILocalVariable(name: "Parity", arg: 2, scope: !10080, file: !9870, line: 532, type: !156)
!10084 = !DILocation(line: 0, scope: !10080)
!10085 = !DILocation(line: 534, column: 3, scope: !10080)
!10086 = !DILocation(line: 535, column: 1, scope: !10080)
!10087 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9870, file: !9870, line: 1770, type: !9871, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10088)
!10088 = !{!10089}
!10089 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10087, file: !9870, line: 1770, type: !1540)
!10090 = !DILocation(line: 0, scope: !10087)
!10091 = !DILocation(line: 1772, column: 11, scope: !10087)
!10092 = !DILocation(line: 1772, column: 46, scope: !10087)
!10093 = !DILocation(line: 1772, column: 3, scope: !10087)
!10094 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9870, file: !9870, line: 1737, type: !9871, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10095)
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10094, file: !9870, line: 1737, type: !1540)
!10097 = !DILocation(line: 0, scope: !10094)
!10098 = !DILocation(line: 1739, column: 11, scope: !10094)
!10099 = !DILocation(line: 1739, column: 3, scope: !10094)
!10100 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9870, file: !9870, line: 1748, type: !9871, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10101)
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10100, file: !9870, line: 1748, type: !1540)
!10103 = !DILocation(line: 0, scope: !10100)
!10104 = !DILocation(line: 1750, column: 11, scope: !10100)
!10105 = !DILocation(line: 1750, column: 45, scope: !10100)
!10106 = !DILocation(line: 1750, column: 3, scope: !10100)
!10107 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9870, file: !9870, line: 1827, type: !9871, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10108)
!10108 = !{!10109}
!10109 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10107, file: !9870, line: 1827, type: !1540)
!10110 = !DILocation(line: 0, scope: !10107)
!10111 = !DILocation(line: 1829, column: 11, scope: !10107)
!10112 = !DILocation(line: 1829, column: 46, scope: !10107)
!10113 = !DILocation(line: 1829, column: 3, scope: !10107)
!10114 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9870, file: !9870, line: 1992, type: !9933, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10115)
!10115 = !{!10116}
!10116 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10114, file: !9870, line: 1992, type: !1540)
!10117 = !DILocation(line: 0, scope: !10114)
!10118 = !DILocation(line: 1994, column: 3, scope: !10114)
!10119 = !DILocation(line: 1995, column: 1, scope: !10114)
!10120 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9870, file: !9870, line: 1934, type: !9933, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10121)
!10121 = !{!10122, !10123}
!10122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10120, file: !9870, line: 1934, type: !1540)
!10123 = !DILocalVariable(name: "tmpreg", scope: !10120, file: !9870, line: 1936, type: !452)
!10124 = !DILocation(line: 0, scope: !10120)
!10125 = !DILocation(line: 1936, column: 3, scope: !10120)
!10126 = !DILocation(line: 1936, column: 17, scope: !10120)
!10127 = !DILocation(line: 1937, column: 20, scope: !10120)
!10128 = !DILocation(line: 1937, column: 10, scope: !10120)
!10129 = !DILocation(line: 1938, column: 10, scope: !10120)
!10130 = !DILocation(line: 1939, column: 20, scope: !10120)
!10131 = !DILocation(line: 1939, column: 10, scope: !10120)
!10132 = !DILocation(line: 1940, column: 10, scope: !10120)
!10133 = !DILocation(line: 1941, column: 1, scope: !10120)
!10134 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9870, file: !9870, line: 1877, type: !9933, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10135)
!10135 = !{!10136, !10137}
!10136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10134, file: !9870, line: 1877, type: !1540)
!10137 = !DILocalVariable(name: "tmpreg", scope: !10134, file: !9870, line: 1879, type: !452)
!10138 = !DILocation(line: 0, scope: !10134)
!10139 = !DILocation(line: 1879, column: 3, scope: !10134)
!10140 = !DILocation(line: 1879, column: 17, scope: !10134)
!10141 = !DILocation(line: 1880, column: 20, scope: !10134)
!10142 = !DILocation(line: 1880, column: 10, scope: !10134)
!10143 = !DILocation(line: 1881, column: 10, scope: !10134)
!10144 = !DILocation(line: 1882, column: 20, scope: !10134)
!10145 = !DILocation(line: 1882, column: 10, scope: !10134)
!10146 = !DILocation(line: 1883, column: 10, scope: !10134)
!10147 = !DILocation(line: 1884, column: 1, scope: !10134)
!10148 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9870, file: !9870, line: 1896, type: !9933, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10149)
!10149 = !{!10150, !10151}
!10150 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10148, file: !9870, line: 1896, type: !1540)
!10151 = !DILocalVariable(name: "tmpreg", scope: !10148, file: !9870, line: 1898, type: !452)
!10152 = !DILocation(line: 0, scope: !10148)
!10153 = !DILocation(line: 1898, column: 3, scope: !10148)
!10154 = !DILocation(line: 1898, column: 17, scope: !10148)
!10155 = !DILocation(line: 1899, column: 20, scope: !10148)
!10156 = !DILocation(line: 1899, column: 10, scope: !10148)
!10157 = !DILocation(line: 1900, column: 10, scope: !10148)
!10158 = !DILocation(line: 1901, column: 20, scope: !10148)
!10159 = !DILocation(line: 1901, column: 10, scope: !10148)
!10160 = !DILocation(line: 1902, column: 10, scope: !10148)
!10161 = !DILocation(line: 1903, column: 1, scope: !10148)
!10162 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9870, file: !9870, line: 1915, type: !9933, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10163)
!10163 = !{!10164, !10165}
!10164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10162, file: !9870, line: 1915, type: !1540)
!10165 = !DILocalVariable(name: "tmpreg", scope: !10162, file: !9870, line: 1917, type: !452)
!10166 = !DILocation(line: 0, scope: !10162)
!10167 = !DILocation(line: 1917, column: 3, scope: !10162)
!10168 = !DILocation(line: 1917, column: 17, scope: !10162)
!10169 = !DILocation(line: 1918, column: 20, scope: !10162)
!10170 = !DILocation(line: 1918, column: 10, scope: !10162)
!10171 = !DILocation(line: 1919, column: 10, scope: !10162)
!10172 = !DILocation(line: 1920, column: 20, scope: !10162)
!10173 = !DILocation(line: 1920, column: 10, scope: !10162)
!10174 = !DILocation(line: 1921, column: 10, scope: !10162)
!10175 = !DILocation(line: 1922, column: 1, scope: !10162)
!10176 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9870, file: !9870, line: 1814, type: !9871, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10177)
!10177 = !{!10178}
!10178 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10176, file: !9870, line: 1814, type: !1540)
!10179 = !DILocation(line: 0, scope: !10176)
!10180 = !DILocation(line: 1816, column: 11, scope: !10176)
!10181 = !DILocation(line: 1816, column: 46, scope: !10176)
!10182 = !DILocation(line: 1816, column: 3, scope: !10176)
!10183 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9870, file: !9870, line: 2426, type: !10184, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10186)
!10184 = !DISubroutineType(types: !10185)
!10185 = !{null, !1540, !143}
!10186 = !{!10187, !10188}
!10187 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10183, file: !9870, line: 2426, type: !1540)
!10188 = !DILocalVariable(name: "Value", arg: 2, scope: !10183, file: !9870, line: 2426, type: !143)
!10189 = !DILocation(line: 0, scope: !10183)
!10190 = !DILocation(line: 2428, column: 16, scope: !10183)
!10191 = !DILocation(line: 2428, column: 11, scope: !10183)
!10192 = !DILocation(line: 2428, column: 14, scope: !10183)
!10193 = !DILocation(line: 2429, column: 1, scope: !10183)
!10194 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9870, file: !9870, line: 1792, type: !9871, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10195)
!10195 = !{!10196}
!10196 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10194, file: !9870, line: 1792, type: !1540)
!10197 = !DILocation(line: 0, scope: !10194)
!10198 = !DILocation(line: 1794, column: 11, scope: !10194)
!10199 = !DILocation(line: 1794, column: 47, scope: !10194)
!10200 = !DILocation(line: 1794, column: 3, scope: !10194)
!10201 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9870, file: !9870, line: 2403, type: !10202, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!143, !1540}
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10201, file: !9870, line: 2403, type: !1540)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 2405, column: 20, scope: !10201)
!10208 = !DILocation(line: 2405, column: 10, scope: !10201)
!10209 = !DILocation(line: 2405, column: 3, scope: !10201)
!10210 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1594, file: !1594, line: 1583, type: !1520, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10211)
!10211 = !{!10212, !10213, !10214, !10215, !10216, !10217}
!10212 = !DILocalVariable(name: "dev", arg: 1, scope: !10210, file: !1594, line: 1583, type: !1499)
!10213 = !DILocalVariable(name: "config", scope: !10210, file: !1594, line: 1585, type: !9561)
!10214 = !DILocalVariable(name: "data", scope: !10210, file: !1594, line: 1586, type: !9684)
!10215 = !DILocalVariable(name: "ll_parity", scope: !10210, file: !1594, line: 1587, type: !156)
!10216 = !DILocalVariable(name: "ll_datawidth", scope: !10210, file: !1594, line: 1588, type: !156)
!10217 = !DILocalVariable(name: "err", scope: !10210, file: !1594, line: 1589, type: !118)
!10218 = !DILocation(line: 0, scope: !10210)
!10219 = !DILocation(line: 1585, column: 48, scope: !10210)
!10220 = !DILocation(line: 1586, column: 38, scope: !10210)
!10221 = !DILocation(line: 1591, column: 2, scope: !10210)
!10222 = !DILocation(line: 1593, column: 29, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1593, column: 6)
!10224 = !DILocation(line: 1593, column: 7, scope: !10223)
!10225 = !DILocation(line: 1593, column: 6, scope: !10210)
!10226 = !DILocation(line: 1599, column: 31, scope: !10210)
!10227 = !DILocation(line: 1599, column: 71, scope: !10210)
!10228 = !DILocation(line: 1599, column: 8, scope: !10210)
!10229 = !DILocation(line: 1600, column: 10, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1600, column: 6)
!10231 = !DILocation(line: 1600, column: 6, scope: !10210)
!10232 = !DILocation(line: 1616, column: 36, scope: !10210)
!10233 = !DILocation(line: 1616, column: 8, scope: !10210)
!10234 = !DILocation(line: 1617, column: 10, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1617, column: 6)
!10236 = !DILocation(line: 1617, column: 6, scope: !10210)
!10237 = !DILocation(line: 1621, column: 27, scope: !10210)
!10238 = !DILocation(line: 1621, column: 2, scope: !10210)
!10239 = !DILocation(line: 1624, column: 40, scope: !10210)
!10240 = !DILocation(line: 1624, column: 2, scope: !10210)
!10241 = !DILocation(line: 1630, column: 14, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1630, column: 6)
!10243 = !DILocation(line: 1630, column: 6, scope: !10210)
!10244 = !DILocation(line: 1638, column: 2, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1594, line: 1634, column: 34)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !1594, line: 1634, column: 13)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 1649, column: 35, scope: !10210)
!10249 = !DILocation(line: 1649, column: 2, scope: !10210)
!10250 = !DILocation(line: 1654, column: 14, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1654, column: 6)
!10252 = !DILocation(line: 1654, column: 6, scope: !10210)
!10253 = !DILocation(line: 1655, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10251, file: !1594, line: 1654, column: 31)
!10255 = !DILocation(line: 1656, column: 2, scope: !10254)
!10256 = !DILocation(line: 1659, column: 37, scope: !10210)
!10257 = !DILocation(line: 1659, column: 2, scope: !10210)
!10258 = !DILocation(line: 1662, column: 14, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10210, file: !1594, line: 1662, column: 6)
!10260 = !DILocation(line: 1662, column: 6, scope: !10210)
!10261 = !DILocation(line: 1663, column: 37, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10259, file: !1594, line: 1662, column: 27)
!10263 = !DILocation(line: 1663, column: 3, scope: !10262)
!10264 = !DILocation(line: 1664, column: 2, scope: !10262)
!10265 = !DILocation(line: 1684, column: 26, scope: !10210)
!10266 = !DILocation(line: 1684, column: 2, scope: !10210)
!10267 = !DILocation(line: 1722, column: 2, scope: !10210)
!10268 = !DILocation(line: 1724, column: 1, scope: !10210)
!10269 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1594, file: !1594, line: 651, type: !10270, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{null, !1499}
!10272 = !{!10273, !10274, !10275}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10269, file: !1594, line: 651, type: !1499)
!10274 = !DILocalVariable(name: "data", scope: !10269, file: !1594, line: 653, type: !9684)
!10275 = !DILocalVariable(name: "clk", scope: !10269, file: !1594, line: 654, type: !10276)
!10276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!10277 = !DILocation(line: 0, scope: !10269)
!10278 = !DILocation(line: 653, column: 38, scope: !10269)
!10279 = !DILocation(line: 656, column: 8, scope: !10269)
!10280 = !DILocation(line: 656, column: 14, scope: !10269)
!10281 = !DILocation(line: 657, column: 1, scope: !10269)
!10282 = distinct !DISubprogram(name: "device_is_ready", scope: !3439, file: !3439, line: 47, type: !10283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!146, !1499}
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "dev", arg: 1, scope: !10282, file: !3439, line: 47, type: !1499)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 55, column: 2, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10282, file: !3439, line: 55, column: 2)
!10290 = !{i64 2155378703}
!10291 = !DILocation(line: 56, column: 9, scope: !10282)
!10292 = !DILocation(line: 56, column: 2, scope: !10282)
!10293 = distinct !DISubprogram(name: "clock_control_on", scope: !970, file: !970, line: 123, type: !1558, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10294)
!10294 = !{!10295, !10296, !10297}
!10295 = !DILocalVariable(name: "dev", arg: 1, scope: !10293, file: !970, line: 123, type: !1499)
!10296 = !DILocalVariable(name: "sys", arg: 2, scope: !10293, file: !970, line: 124, type: !1066)
!10297 = !DILocalVariable(name: "api", scope: !10293, file: !970, line: 126, type: !1551)
!10298 = !DILocation(line: 0, scope: !10293)
!10299 = !DILocation(line: 127, column: 49, scope: !10293)
!10300 = !DILocation(line: 129, column: 14, scope: !10293)
!10301 = !DILocation(line: 129, column: 9, scope: !10293)
!10302 = !DILocation(line: 129, column: 2, scope: !10293)
!10303 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1645, file: !1645, line: 342, type: !10304, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10306)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{!118, !1695, !143}
!10306 = !{!10307, !10308, !10309, !10310}
!10307 = !DILocalVariable(name: "config", arg: 1, scope: !10303, file: !1645, line: 342, type: !1695)
!10308 = !DILocalVariable(name: "id", arg: 2, scope: !10303, file: !1645, line: 343, type: !143)
!10309 = !DILocalVariable(name: "ret", scope: !10303, file: !1645, line: 345, type: !118)
!10310 = !DILocalVariable(name: "state", scope: !10303, file: !1645, line: 346, type: !1648)
!10311 = !DILocation(line: 0, scope: !10303)
!10312 = !DILocation(line: 346, column: 2, scope: !10303)
!10313 = !DILocation(line: 348, column: 8, scope: !10303)
!10314 = !DILocation(line: 349, column: 10, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10303, file: !1645, line: 349, column: 6)
!10316 = !DILocation(line: 349, column: 6, scope: !10303)
!10317 = !DILocation(line: 353, column: 44, scope: !10303)
!10318 = !DILocation(line: 353, column: 9, scope: !10303)
!10319 = !DILocation(line: 353, column: 2, scope: !10303)
!10320 = !DILocation(line: 354, column: 1, scope: !10303)
!10321 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9870, file: !9870, line: 497, type: !10035, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10322)
!10322 = !{!10323, !10324, !10325}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !9870, line: 497, type: !1540)
!10324 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10321, file: !9870, line: 497, type: !156)
!10325 = !DILocalVariable(name: "val", scope: !10326, file: !9870, line: 499, type: !156)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !9870, line: 499, column: 3)
!10327 = !DILocation(line: 0, scope: !10321)
!10328 = !DILocation(line: 499, column: 3, scope: !10326)
!10329 = !DILocalVariable(name: "addr", arg: 1, scope: !10330, file: !6410, line: 476, type: !1590)
!10330 = distinct !DISubprogram(name: "__LDREXW", scope: !6410, file: !6410, line: 476, type: !10331, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10333)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!156, !1590}
!10333 = !{!10329, !10334}
!10334 = !DILocalVariable(name: "result", scope: !10330, file: !6410, line: 478, type: !156)
!10335 = !DILocation(line: 0, scope: !10330, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 499, column: 3, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10326, file: !9870, line: 499, column: 3)
!10338 = !DILocation(line: 480, column: 4, scope: !10330, inlinedAt: !10336)
!10339 = !{i64 3760442}
!10340 = !DILocation(line: 499, column: 3, scope: !10337)
!10341 = !DILocation(line: 0, scope: !10326)
!10342 = !DILocalVariable(name: "value", arg: 1, scope: !10343, file: !6410, line: 527, type: !156)
!10343 = distinct !DISubprogram(name: "__STREXW", scope: !6410, file: !6410, line: 527, type: !10344, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10346)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!156, !156, !1590}
!10346 = !{!10342, !10347, !10348}
!10347 = !DILocalVariable(name: "addr", arg: 2, scope: !10343, file: !6410, line: 527, type: !1590)
!10348 = !DILocalVariable(name: "result", scope: !10343, file: !6410, line: 529, type: !156)
!10349 = !DILocation(line: 0, scope: !10343, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 499, column: 3, scope: !10326)
!10351 = !DILocation(line: 531, column: 4, scope: !10343, inlinedAt: !10350)
!10352 = !{i64 3761878}
!10353 = distinct !{!10353, !10328, !10328}
!10354 = !DILocation(line: 500, column: 1, scope: !10321)
!10355 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9870, file: !9870, line: 850, type: !10044, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10356)
!10356 = !{!10357, !10358, !10359, !10360}
!10357 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10355, file: !9870, line: 850, type: !1540)
!10358 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10355, file: !9870, line: 850, type: !156)
!10359 = !DILocalVariable(name: "Parity", arg: 3, scope: !10355, file: !9870, line: 850, type: !156)
!10360 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10355, file: !9870, line: 851, type: !156)
!10361 = !DILocation(line: 0, scope: !10355)
!10362 = !DILocation(line: 853, column: 3, scope: !10355)
!10363 = !DILocation(line: 854, column: 3, scope: !10355)
!10364 = !DILocation(line: 855, column: 1, scope: !10355)
!10365 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9870, file: !9870, line: 1337, type: !9933, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10366)
!10366 = !{!10367}
!10367 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10365, file: !9870, line: 1337, type: !1540)
!10368 = !DILocation(line: 0, scope: !10365)
!10369 = !DILocation(line: 1339, column: 3, scope: !10365)
!10370 = !DILocation(line: 1340, column: 1, scope: !10365)
!10371 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1645, file: !1645, line: 316, type: !10372, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10374)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{!118, !1695, !1648}
!10374 = !{!10375, !10376, !10377}
!10375 = !DILocalVariable(name: "config", arg: 1, scope: !10371, file: !1645, line: 317, type: !1695)
!10376 = !DILocalVariable(name: "state", arg: 2, scope: !10371, file: !1645, line: 318, type: !1648)
!10377 = !DILocalVariable(name: "reg", scope: !10371, file: !1645, line: 320, type: !22)
!10378 = !DILocation(line: 0, scope: !10371)
!10379 = !DILocation(line: 329, column: 39, scope: !10371)
!10380 = !DILocation(line: 329, column: 52, scope: !10371)
!10381 = !DILocation(line: 329, column: 9, scope: !10371)
!10382 = !DILocation(line: 329, column: 2, scope: !10371)
!10383 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10283, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !10384)
!10384 = !{!10385}
!10385 = !DILocalVariable(name: "dev", arg: 1, scope: !10383, file: !130, line: 730, type: !1499)
!10386 = !DILocation(line: 0, scope: !10383)
!10387 = !DILocation(line: 732, column: 9, scope: !10383)
!10388 = !DILocation(line: 732, column: 2, scope: !10383)
!10389 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1810, file: !1810, line: 270, type: !1816, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "dev", arg: 1, scope: !10389, file: !1810, line: 270, type: !1818)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 274, column: 2, scope: !10389)
!10394 = !DILocation(line: 275, column: 12, scope: !10389)
!10395 = !DILocation(line: 276, column: 15, scope: !10389)
!10396 = !DILocation(line: 277, column: 16, scope: !10389)
!10397 = !DILocation(line: 278, column: 15, scope: !10389)
!10398 = !DILocation(line: 279, column: 16, scope: !10389)
!10399 = !DILocation(line: 282, column: 2, scope: !10389)
!10400 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6450, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10401)
!10401 = !{!10402, !10403}
!10402 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10400, file: !656, line: 1814, type: !920)
!10403 = !DILocalVariable(name: "priority", arg: 2, scope: !10400, file: !656, line: 1814, type: !156)
!10404 = !DILocation(line: 0, scope: !10400)
!10405 = !DILocation(line: 1822, column: 46, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !656, line: 1821, column: 3)
!10407 = distinct !DILexicalBlock(scope: !10400, file: !656, line: 1816, column: 7)
!10408 = !DILocation(line: 1824, column: 1, scope: !10400)
!10409 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1810, file: !1810, line: 118, type: !6347, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10410)
!10410 = !{!10411, !10412}
!10411 = !DILocalVariable(name: "arg", arg: 1, scope: !10409, file: !1810, line: 118, type: !117)
!10412 = !DILocalVariable(name: "dticks", scope: !10409, file: !1810, line: 121, type: !156)
!10413 = !DILocation(line: 0, scope: !10409)
!10414 = !DILocation(line: 124, column: 2, scope: !10409)
!10415 = !DILocation(line: 129, column: 17, scope: !10409)
!10416 = !DILocation(line: 129, column: 14, scope: !10409)
!10417 = !DILocation(line: 130, column: 15, scope: !10409)
!10418 = !DILocation(line: 145, column: 27, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !1810, line: 132, column: 16)
!10420 = distinct !DILexicalBlock(scope: !10409, file: !1810, line: 132, column: 6)
!10421 = !DILocation(line: 145, column: 25, scope: !10419)
!10422 = !DILocation(line: 145, column: 45, scope: !10419)
!10423 = !DILocation(line: 146, column: 30, scope: !10419)
!10424 = !DILocation(line: 146, column: 20, scope: !10419)
!10425 = !DILocation(line: 147, column: 3, scope: !10419)
!10426 = !DILocation(line: 151, column: 2, scope: !10409)
!10427 = !DILocation(line: 152, column: 1, scope: !10409)
!10428 = distinct !DISubprogram(name: "elapsed", scope: !1810, file: !1810, line: 85, type: !6497, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432}
!10430 = !DILocalVariable(name: "val1", scope: !10428, file: !1810, line: 87, type: !156)
!10431 = !DILocalVariable(name: "ctrl", scope: !10428, file: !1810, line: 88, type: !156)
!10432 = !DILocalVariable(name: "val2", scope: !10428, file: !1810, line: 89, type: !156)
!10433 = !DILocation(line: 87, column: 27, scope: !10428)
!10434 = !DILocation(line: 0, scope: !10428)
!10435 = !DILocation(line: 88, column: 27, scope: !10428)
!10436 = !DILocation(line: 89, column: 27, scope: !10428)
!10437 = !DILocation(line: 105, column: 12, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10428, file: !1810, line: 105, column: 6)
!10439 = !DILocation(line: 106, column: 6, scope: !10438)
!10440 = !DILocation(line: 107, column: 16, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10438, file: !1810, line: 106, column: 24)
!10442 = !DILocation(line: 111, column: 18, scope: !10441)
!10443 = !DILocation(line: 112, column: 2, scope: !10441)
!10444 = !DILocation(line: 114, column: 20, scope: !10428)
!10445 = !DILocation(line: 114, column: 30, scope: !10428)
!10446 = !DILocation(line: 114, column: 28, scope: !10428)
!10447 = !DILocation(line: 114, column: 2, scope: !10428)
!10448 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1810, file: !1810, line: 154, type: !10449, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{null, !362, !146}
!10451 = !{!10452, !10453, !10454, !10455, !10456, !10457, !10458, !10463, !10464}
!10452 = !DILocalVariable(name: "ticks", arg: 1, scope: !10448, file: !1810, line: 154, type: !362)
!10453 = !DILocalVariable(name: "idle", arg: 2, scope: !10448, file: !1810, line: 154, type: !146)
!10454 = !DILocalVariable(name: "delay", scope: !10448, file: !1810, line: 169, type: !156)
!10455 = !DILocalVariable(name: "val1", scope: !10448, file: !1810, line: 170, type: !156)
!10456 = !DILocalVariable(name: "val2", scope: !10448, file: !1810, line: 170, type: !156)
!10457 = !DILocalVariable(name: "last_load_", scope: !10448, file: !1810, line: 171, type: !156)
!10458 = !DILocalVariable(name: "key", scope: !10448, file: !1810, line: 176, type: !10459)
!10459 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !10460)
!10460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !10461)
!10461 = !{!10462}
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10460, file: !334, line: 33, baseType: !118, size: 32)
!10463 = !DILocalVariable(name: "pending", scope: !10448, file: !1810, line: 178, type: !156)
!10464 = !DILocalVariable(name: "unannounced", scope: !10448, file: !1810, line: 185, type: !156)
!10465 = !DILocation(line: 0, scope: !10448)
!10466 = !DILocation(line: 162, column: 49, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10448, file: !1810, line: 162, column: 6)
!10468 = !DILocation(line: 163, column: 17, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10467, file: !1810, line: 162, column: 78)
!10470 = !DILocation(line: 164, column: 13, scope: !10469)
!10471 = !DILocation(line: 165, column: 3, scope: !10469)
!10472 = !DILocation(line: 171, column: 24, scope: !10448)
!10473 = !DILocation(line: 173, column: 10, scope: !10448)
!10474 = !DILocation(line: 174, column: 10, scope: !10448)
!10475 = !DILocalVariable(name: "l", arg: 1, scope: !10476, file: !334, line: 136, type: !10479)
!10476 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !10477, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10480)
!10477 = !DISubroutineType(types: !10478)
!10478 = !{!10459, !10479}
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!10480 = !{!10475, !10481}
!10481 = !DILocalVariable(name: "k", scope: !10476, file: !334, line: 139, type: !10459)
!10482 = !DILocation(line: 0, scope: !10476, inlinedAt: !10483)
!10483 = distinct !DILocation(line: 176, column: 25, scope: !10448)
!10484 = !DILocation(line: 55, column: 2, scope: !10485, inlinedAt: !10489)
!10485 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10486)
!10486 = !{!10487, !10488}
!10487 = !DILocalVariable(name: "key", scope: !10485, file: !6236, line: 44, type: !32)
!10488 = !DILocalVariable(name: "tmp", scope: !10485, file: !6236, line: 53, type: !32)
!10489 = distinct !DILocation(line: 145, column: 10, scope: !10476, inlinedAt: !10483)
!10490 = !{i64 2282040}
!10491 = !DILocation(line: 0, scope: !10485, inlinedAt: !10489)
!10492 = !DILocation(line: 148, column: 2, scope: !10493, inlinedAt: !10483)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !334, line: 148, column: 2)
!10494 = distinct !DILexicalBlock(scope: !10476, file: !334, line: 148, column: 2)
!10495 = !DILocation(line: 148, column: 2, scope: !10494, inlinedAt: !10483)
!10496 = !DILocation(line: 148, column: 2, scope: !10497, inlinedAt: !10483)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !334, line: 148, column: 2)
!10498 = !DILocation(line: 160, column: 2, scope: !10476, inlinedAt: !10483)
!10499 = !DILocation(line: 178, column: 21, scope: !10448)
!10500 = !DILocation(line: 180, column: 18, scope: !10448)
!10501 = !DILocation(line: 182, column: 14, scope: !10448)
!10502 = !DILocation(line: 183, column: 15, scope: !10448)
!10503 = !DILocation(line: 185, column: 39, scope: !10448)
!10504 = !DILocation(line: 185, column: 37, scope: !10448)
!10505 = !DILocation(line: 187, column: 27, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10448, file: !1810, line: 187, column: 6)
!10507 = !DILocation(line: 187, column: 6, scope: !10448)
!10508 = !DILocation(line: 202, column: 27, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !1810, line: 195, column: 9)
!10510 = !DILocation(line: 202, column: 48, scope: !10509)
!10511 = !DILocation(line: 203, column: 9, scope: !10509)
!10512 = !DILocation(line: 204, column: 11, scope: !10509)
!10513 = !DILocation(line: 205, column: 13, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10509, file: !1810, line: 205, column: 7)
!10515 = !DILocation(line: 205, column: 7, scope: !10509)
!10516 = !DILocation(line: 0, scope: !10506)
!10517 = !DILocation(line: 212, column: 18, scope: !10448)
!10518 = !DILocation(line: 214, column: 28, scope: !10448)
!10519 = !DILocation(line: 214, column: 16, scope: !10448)
!10520 = !DILocation(line: 215, column: 15, scope: !10448)
!10521 = !DILocation(line: 227, column: 11, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10448, file: !1810, line: 227, column: 6)
!10523 = !DILocation(line: 227, column: 6, scope: !10448)
!10524 = !DILocation(line: 228, column: 15, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !1810, line: 227, column: 19)
!10526 = !DILocation(line: 228, column: 38, scope: !10525)
!10527 = !DILocation(line: 228, column: 24, scope: !10525)
!10528 = !DILocation(line: 229, column: 2, scope: !10525)
!10529 = !DILocation(line: 230, column: 24, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10522, file: !1810, line: 229, column: 9)
!10531 = !DILocation(line: 230, column: 15, scope: !10530)
!10532 = !DILocation(line: 0, scope: !10522)
!10533 = !DILocalVariable(name: "key", arg: 2, scope: !10534, file: !334, line: 190, type: !10459)
!10534 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !10535, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{null, !10479, !10459}
!10537 = !{!10538, !10533}
!10538 = !DILocalVariable(name: "l", arg: 1, scope: !10534, file: !334, line: 189, type: !10479)
!10539 = !DILocation(line: 0, scope: !10534, inlinedAt: !10540)
!10540 = distinct !DILocation(line: 232, column: 2, scope: !10448)
!10541 = !DILocation(line: 194, column: 2, scope: !10542, inlinedAt: !10540)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !334, line: 194, column: 2)
!10543 = distinct !DILexicalBlock(scope: !10534, file: !334, line: 194, column: 2)
!10544 = !DILocation(line: 194, column: 2, scope: !10543, inlinedAt: !10540)
!10545 = !DILocation(line: 194, column: 2, scope: !10546, inlinedAt: !10540)
!10546 = distinct !DILexicalBlock(scope: !10542, file: !334, line: 194, column: 2)
!10547 = !DILocalVariable(name: "key", arg: 1, scope: !10548, file: !6236, line: 84, type: !32)
!10548 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10549)
!10549 = !{!10547}
!10550 = !DILocation(line: 0, scope: !10548, inlinedAt: !10551)
!10551 = distinct !DILocation(line: 215, column: 2, scope: !10534, inlinedAt: !10540)
!10552 = !DILocation(line: 95, column: 2, scope: !10548, inlinedAt: !10551)
!10553 = !{i64 2282857}
!10554 = !DILocation(line: 234, column: 1, scope: !10448)
!10555 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1810, file: !1810, line: 236, type: !6497, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10556)
!10556 = !{!10557, !10558}
!10557 = !DILocalVariable(name: "key", scope: !10555, file: !1810, line: 242, type: !10459)
!10558 = !DILocalVariable(name: "cyc", scope: !10555, file: !1810, line: 243, type: !156)
!10559 = !DILocation(line: 0, scope: !10476, inlinedAt: !10560)
!10560 = distinct !DILocation(line: 242, column: 25, scope: !10555)
!10561 = !DILocation(line: 55, column: 2, scope: !10485, inlinedAt: !10562)
!10562 = distinct !DILocation(line: 145, column: 10, scope: !10476, inlinedAt: !10560)
!10563 = !DILocation(line: 0, scope: !10485, inlinedAt: !10562)
!10564 = !DILocation(line: 148, column: 2, scope: !10493, inlinedAt: !10560)
!10565 = !DILocation(line: 148, column: 2, scope: !10494, inlinedAt: !10560)
!10566 = !DILocation(line: 148, column: 2, scope: !10497, inlinedAt: !10560)
!10567 = !DILocation(line: 160, column: 2, scope: !10476, inlinedAt: !10560)
!10568 = !DILocation(line: 0, scope: !10555)
!10569 = !DILocation(line: 243, column: 17, scope: !10555)
!10570 = !DILocation(line: 243, column: 29, scope: !10555)
!10571 = !DILocation(line: 243, column: 43, scope: !10555)
!10572 = !DILocation(line: 0, scope: !10534, inlinedAt: !10573)
!10573 = distinct !DILocation(line: 245, column: 2, scope: !10555)
!10574 = !DILocation(line: 194, column: 2, scope: !10542, inlinedAt: !10573)
!10575 = !DILocation(line: 194, column: 2, scope: !10543, inlinedAt: !10573)
!10576 = !DILocation(line: 194, column: 2, scope: !10546, inlinedAt: !10573)
!10577 = !DILocation(line: 243, column: 27, scope: !10555)
!10578 = !DILocation(line: 243, column: 41, scope: !10555)
!10579 = !DILocation(line: 0, scope: !10548, inlinedAt: !10580)
!10580 = distinct !DILocation(line: 215, column: 2, scope: !10534, inlinedAt: !10573)
!10581 = !DILocation(line: 95, column: 2, scope: !10548, inlinedAt: !10580)
!10582 = !DILocation(line: 246, column: 13, scope: !10555)
!10583 = !DILocation(line: 246, column: 2, scope: !10555)
!10584 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1810, file: !1810, line: 249, type: !6497, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !10585)
!10585 = !{!10586, !10587}
!10586 = !DILocalVariable(name: "key", scope: !10584, file: !1810, line: 251, type: !10459)
!10587 = !DILocalVariable(name: "ret", scope: !10584, file: !1810, line: 252, type: !156)
!10588 = !DILocation(line: 0, scope: !10476, inlinedAt: !10589)
!10589 = distinct !DILocation(line: 251, column: 25, scope: !10584)
!10590 = !DILocation(line: 55, column: 2, scope: !10485, inlinedAt: !10591)
!10591 = distinct !DILocation(line: 145, column: 10, scope: !10476, inlinedAt: !10589)
!10592 = !DILocation(line: 0, scope: !10485, inlinedAt: !10591)
!10593 = !DILocation(line: 148, column: 2, scope: !10493, inlinedAt: !10589)
!10594 = !DILocation(line: 148, column: 2, scope: !10494, inlinedAt: !10589)
!10595 = !DILocation(line: 148, column: 2, scope: !10497, inlinedAt: !10589)
!10596 = !DILocation(line: 160, column: 2, scope: !10476, inlinedAt: !10589)
!10597 = !DILocation(line: 0, scope: !10584)
!10598 = !DILocation(line: 252, column: 17, scope: !10584)
!10599 = !DILocation(line: 252, column: 29, scope: !10584)
!10600 = !DILocation(line: 0, scope: !10534, inlinedAt: !10601)
!10601 = distinct !DILocation(line: 254, column: 2, scope: !10584)
!10602 = !DILocation(line: 194, column: 2, scope: !10542, inlinedAt: !10601)
!10603 = !DILocation(line: 194, column: 2, scope: !10543, inlinedAt: !10601)
!10604 = !DILocation(line: 194, column: 2, scope: !10546, inlinedAt: !10601)
!10605 = !DILocation(line: 252, column: 27, scope: !10584)
!10606 = !DILocation(line: 0, scope: !10548, inlinedAt: !10607)
!10607 = distinct !DILocation(line: 215, column: 2, scope: !10534, inlinedAt: !10601)
!10608 = !DILocation(line: 95, column: 2, scope: !10548, inlinedAt: !10607)
!10609 = !DILocation(line: 255, column: 2, scope: !10584)
!10610 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1810, file: !1810, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !2203)
!10611 = !DILocation(line: 260, column: 6, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10610, file: !1810, line: 260, column: 6)
!10613 = !DILocation(line: 260, column: 16, scope: !10612)
!10614 = !DILocation(line: 260, column: 6, scope: !10610)
!10615 = !DILocation(line: 261, column: 17, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !1810, line: 260, column: 34)
!10617 = !DILocation(line: 262, column: 2, scope: !10616)
!10618 = !DILocation(line: 263, column: 1, scope: !10610)
!10619 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1810, file: !1810, line: 265, type: !365, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1732, retainedNodes: !2203)
!10620 = !DILocation(line: 267, column: 16, scope: !10619)
!10621 = !DILocation(line: 268, column: 1, scope: !10619)
!10622 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10623, file: !10623, line: 9, type: !10624, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !10647)
!10623 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10624 = !DISubroutineType(types: !10625)
!10625 = !{!118, !10626, !143, !10646}
!10626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10627, size: 32)
!10627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10628)
!10628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1645, line: 60, size: 64, elements: !10629)
!10629 = !{!10630, !10645}
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10628, file: !1645, line: 69, baseType: !10631, size: 32)
!10631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10632, size: 32)
!10632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10633)
!10633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1645, line: 50, size: 64, elements: !10634)
!10634 = !{!10635, !10643, !10644}
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10633, file: !1645, line: 52, baseType: !10636, size: 32)
!10636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10637, size: 32)
!10637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10638)
!10638 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !10639)
!10639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !10640)
!10640 = !{!10641, !10642}
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10639, file: !1656, line: 34, baseType: !156, size: 32)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10639, file: !1656, line: 36, baseType: !156, size: 32, offset: 32)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10633, file: !1645, line: 54, baseType: !143, size: 8, offset: 32)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10633, file: !1645, line: 56, baseType: !143, size: 8, offset: 40)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10628, file: !1645, line: 71, baseType: !143, size: 8, offset: 32)
!10646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10631, size: 32)
!10647 = !{!10648, !10649, !10650}
!10648 = !DILocalVariable(name: "config", arg: 1, scope: !10622, file: !10623, line: 9, type: !10626)
!10649 = !DILocalVariable(name: "id", arg: 2, scope: !10622, file: !10623, line: 9, type: !143)
!10650 = !DILocalVariable(name: "state", arg: 3, scope: !10622, file: !10623, line: 10, type: !10646)
!10651 = !DILocation(line: 0, scope: !10622)
!10652 = !DILocation(line: 12, column: 20, scope: !10622)
!10653 = !DILocation(line: 13, column: 27, scope: !10622)
!10654 = !DILocation(line: 13, column: 42, scope: !10622)
!10655 = !DILocation(line: 13, column: 19, scope: !10622)
!10656 = !DILocation(line: 13, column: 16, scope: !10622)
!10657 = !DILocation(line: 13, column: 2, scope: !10622)
!10658 = distinct !{!10658, !10657, !10659}
!10659 = !DILocation(line: 19, column: 2, scope: !10622)
!10660 = !DILocation(line: 14, column: 23, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !10623, line: 14, column: 7)
!10662 = distinct !DILexicalBlock(scope: !10622, file: !10623, line: 13, column: 54)
!10663 = !DILocation(line: 14, column: 10, scope: !10661)
!10664 = !DILocation(line: 18, column: 11, scope: !10662)
!10665 = !DILocation(line: 14, column: 7, scope: !10662)
!10666 = !DILocation(line: 22, column: 1, scope: !10622)
!10667 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1929, file: !1929, line: 193, type: !10668, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !10677)
!10668 = !DISubroutineType(types: !10669)
!10669 = !{!118, !10670, !143, !22}
!10670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10671, size: 32)
!10671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10672)
!10672 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1656, line: 37, baseType: !10673)
!10673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1656, line: 32, size: 64, elements: !10674)
!10674 = !{!10675, !10676}
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10673, file: !1656, line: 34, baseType: !156, size: 32)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10673, file: !1656, line: 36, baseType: !156, size: 32, offset: 32)
!10677 = !{!10678, !10679, !10680, !10681, !10682, !10683, !10684, !10685, !10687}
!10678 = !DILocalVariable(name: "pins", arg: 1, scope: !10667, file: !1929, line: 193, type: !10670)
!10679 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10667, file: !1929, line: 193, type: !143)
!10680 = !DILocalVariable(name: "reg", arg: 3, scope: !10667, file: !1929, line: 194, type: !22)
!10681 = !DILocalVariable(name: "pin", scope: !10667, file: !1929, line: 196, type: !156)
!10682 = !DILocalVariable(name: "mux", scope: !10667, file: !1929, line: 196, type: !156)
!10683 = !DILocalVariable(name: "pin_cgf", scope: !10667, file: !1929, line: 197, type: !156)
!10684 = !DILocalVariable(name: "ret", scope: !10667, file: !1929, line: 198, type: !118)
!10685 = !DILocalVariable(name: "i", scope: !10686, file: !1929, line: 209, type: !143)
!10686 = distinct !DILexicalBlock(scope: !10667, file: !1929, line: 209, column: 2)
!10687 = !DILocalVariable(name: "gpio_out", scope: !10688, file: !1929, line: 239, type: !156)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !1929, line: 238, column: 55)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !1929, line: 238, column: 14)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !1929, line: 236, column: 14)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !1929, line: 234, column: 7)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !1929, line: 209, column: 41)
!10693 = distinct !DILexicalBlock(scope: !10686, file: !1929, line: 209, column: 2)
!10694 = !DILocation(line: 0, scope: !10667)
!10695 = !DILocation(line: 0, scope: !10686)
!10696 = !DILocation(line: 209, column: 25, scope: !10693)
!10697 = !DILocation(line: 209, column: 2, scope: !10686)
!10698 = distinct !{!10698, !10697, !10699}
!10699 = !DILocation(line: 259, column: 2, scope: !10686)
!10700 = !DILocation(line: 210, column: 17, scope: !10692)
!10701 = !DILocation(line: 234, column: 7, scope: !10691)
!10702 = !DILocation(line: 234, column: 33, scope: !10691)
!10703 = !DILocation(line: 234, column: 7, scope: !10692)
!10704 = !DILocation(line: 235, column: 22, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10691, file: !1929, line: 234, column: 49)
!10706 = !DILocation(line: 235, column: 29, scope: !10705)
!10707 = !DILocation(line: 236, column: 3, scope: !10705)
!10708 = !DILocation(line: 236, column: 14, scope: !10691)
!10709 = !DILocation(line: 239, column: 32, scope: !10688)
!10710 = !DILocation(line: 0, scope: !10688)
!10711 = !DILocation(line: 241, column: 8, scope: !10688)
!10712 = !DILocation(line: 246, column: 3, scope: !10688)
!10713 = !DILocation(line: 252, column: 9, scope: !10692)
!10714 = !DILocation(line: 255, column: 9, scope: !10692)
!10715 = !DILocation(line: 256, column: 11, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10692, file: !1929, line: 256, column: 7)
!10717 = !DILocation(line: 209, column: 37, scope: !10693)
!10718 = !DILocation(line: 256, column: 7, scope: !10692)
!10719 = !DILocation(line: 262, column: 1, scope: !10667)
!10720 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1929, file: !1929, line: 176, type: !10721, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !10723)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!118, !156, !156, !156}
!10723 = !{!10724, !10725, !10726, !10727}
!10724 = !DILocalVariable(name: "pin", arg: 1, scope: !10720, file: !1929, line: 176, type: !156)
!10725 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10720, file: !1929, line: 176, type: !156)
!10726 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10720, file: !1929, line: 176, type: !156)
!10727 = !DILocalVariable(name: "port_device", scope: !10720, file: !1929, line: 178, type: !1859)
!10728 = !DILocation(line: 0, scope: !10720)
!10729 = !DILocation(line: 180, column: 22, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10720, file: !1929, line: 180, column: 6)
!10731 = !DILocation(line: 180, column: 6, scope: !10720)
!10732 = !DILocation(line: 180, column: 6, scope: !10730)
!10733 = !DILocation(line: 184, column: 16, scope: !10720)
!10734 = !DILocation(line: 186, column: 19, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10720, file: !1929, line: 186, column: 6)
!10736 = !DILocation(line: 186, column: 28, scope: !10735)
!10737 = !DILocation(line: 186, column: 33, scope: !10735)
!10738 = !DILocation(line: 186, column: 6, scope: !10720)
!10739 = !DILocation(line: 190, column: 43, scope: !10720)
!10740 = !DILocation(line: 190, column: 9, scope: !10720)
!10741 = !DILocation(line: 190, column: 2, scope: !10720)
!10742 = !DILocation(line: 191, column: 1, scope: !10720)
!10743 = distinct !DISubprogram(name: "device_is_ready", scope: !3439, file: !3439, line: 47, type: !10744, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !10746)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{!146, !1859}
!10746 = !{!10747}
!10747 = !DILocalVariable(name: "dev", arg: 1, scope: !10743, file: !3439, line: 47, type: !1859)
!10748 = !DILocation(line: 0, scope: !10743)
!10749 = !DILocation(line: 55, column: 2, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10743, file: !3439, line: 55, column: 2)
!10751 = !{i64 2149516049}
!10752 = !DILocation(line: 56, column: 9, scope: !10743)
!10753 = !DILocation(line: 56, column: 2, scope: !10743)
!10754 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10744, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !10755)
!10755 = !{!10756}
!10756 = !DILocalVariable(name: "dev", arg: 1, scope: !10754, file: !130, line: 730, type: !1859)
!10757 = !DILocation(line: 0, scope: !10754)
!10758 = !DILocation(line: 732, column: 9, scope: !10754)
!10759 = !DILocation(line: 732, column: 2, scope: !10754)
!10760 = distinct !DISubprogram(name: "SystemInit", scope: !1981, file: !1981, line: 167, type: !365, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !2203)
!10761 = !DILocation(line: 182, column: 1, scope: !10760)
!10762 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1981, file: !1981, line: 220, type: !365, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1937, retainedNodes: !10763)
!10763 = !{!10764, !10765, !10766, !10767, !10768}
!10764 = !DILocalVariable(name: "tmp", scope: !10762, file: !1981, line: 222, type: !156)
!10765 = !DILocalVariable(name: "pllvco", scope: !10762, file: !1981, line: 222, type: !156)
!10766 = !DILocalVariable(name: "pllp", scope: !10762, file: !1981, line: 222, type: !156)
!10767 = !DILocalVariable(name: "pllsource", scope: !10762, file: !1981, line: 222, type: !156)
!10768 = !DILocalVariable(name: "pllm", scope: !10762, file: !1981, line: 222, type: !156)
!10769 = !DILocation(line: 0, scope: !10762)
!10770 = !DILocation(line: 225, column: 14, scope: !10762)
!10771 = !DILocation(line: 225, column: 19, scope: !10762)
!10772 = !DILocation(line: 227, column: 3, scope: !10762)
!10773 = !DILocation(line: 240, column: 25, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10762, file: !1981, line: 228, column: 3)
!10775 = !DILocation(line: 241, column: 19, scope: !10774)
!10776 = !DILocation(line: 241, column: 27, scope: !10774)
!10777 = !DILocation(line: 0, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10774, file: !1981, line: 243, column: 11)
!10779 = !DILocation(line: 254, column: 22, scope: !10774)
!10780 = !DILocation(line: 254, column: 62, scope: !10774)
!10781 = !DILocation(line: 255, column: 31, scope: !10774)
!10782 = !DILocation(line: 256, column: 7, scope: !10774)
!10783 = !DILocation(line: 0, scope: !10774)
!10784 = !DILocation(line: 263, column: 30, scope: !10762)
!10785 = !DILocation(line: 263, column: 52, scope: !10762)
!10786 = !DILocation(line: 263, column: 9, scope: !10762)
!10787 = !DILocation(line: 265, column: 19, scope: !10762)
!10788 = !DILocation(line: 266, column: 1, scope: !10762)
!10789 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !10790, file: !10790, line: 87, type: !10791, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !10830)
!10790 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10791 = !DISubroutineType(types: !10792)
!10792 = !{!10793, !10794}
!10793 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3049, line: 44, baseType: !3048)
!10794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10795, size: 32)
!10795 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !10796, line: 172, baseType: !10797)
!10796 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 121, size: 736, elements: !10798)
!10798 = !{!10799, !10800, !10809, !10817, !10818, !10819, !10820, !10821, !10822, !10823, !10824, !10825, !10826, !10827, !10828, !10829}
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !10797, file: !10796, line: 123, baseType: !156, size: 32)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !10797, file: !10796, line: 126, baseType: !10801, size: 160, offset: 32)
!10801 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !10796, line: 97, baseType: !10802)
!10802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 79, size: 160, elements: !10803)
!10803 = !{!10804, !10805, !10806, !10807, !10808}
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !10802, file: !10796, line: 81, baseType: !156, size: 32)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !10802, file: !10796, line: 84, baseType: !156, size: 32, offset: 32)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !10802, file: !10796, line: 87, baseType: !156, size: 32, offset: 64)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !10802, file: !10796, line: 90, baseType: !156, size: 32, offset: 96)
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !10802, file: !10796, line: 94, baseType: !156, size: 32, offset: 128)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !10797, file: !10796, line: 129, baseType: !10810, size: 128, offset: 192)
!10810 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !10796, line: 116, baseType: !10811)
!10811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 102, size: 128, elements: !10812)
!10812 = !{!10813, !10814, !10815, !10816}
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !10811, file: !10796, line: 104, baseType: !156, size: 32)
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !10811, file: !10796, line: 107, baseType: !156, size: 32, offset: 32)
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !10811, file: !10796, line: 110, baseType: !156, size: 32, offset: 64)
!10816 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !10811, file: !10796, line: 113, baseType: !156, size: 32, offset: 96)
!10817 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !10797, file: !10796, line: 132, baseType: !156, size: 32, offset: 320)
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !10797, file: !10796, line: 136, baseType: !156, size: 32, offset: 352)
!10819 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !10797, file: !10796, line: 140, baseType: !156, size: 32, offset: 384)
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !10797, file: !10796, line: 143, baseType: !156, size: 32, offset: 416)
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !10797, file: !10796, line: 146, baseType: !156, size: 32, offset: 448)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !10797, file: !10796, line: 149, baseType: !156, size: 32, offset: 480)
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !10797, file: !10796, line: 152, baseType: !156, size: 32, offset: 512)
!10824 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !10797, file: !10796, line: 155, baseType: !156, size: 32, offset: 544)
!10825 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !10797, file: !10796, line: 158, baseType: !156, size: 32, offset: 576)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !10797, file: !10796, line: 161, baseType: !156, size: 32, offset: 608)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !10797, file: !10796, line: 164, baseType: !156, size: 32, offset: 640)
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !10797, file: !10796, line: 167, baseType: !156, size: 32, offset: 672)
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !10797, file: !10796, line: 170, baseType: !143, size: 8, offset: 704)
!10830 = !{!10831, !10832, !10833, !10834, !10835, !10836, !10837, !10838, !10839, !10840, !10841}
!10831 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10789, file: !10790, line: 87, type: !10794)
!10832 = !DILocalVariable(name: "tickstart", scope: !10789, file: !10790, line: 89, type: !156)
!10833 = !DILocalVariable(name: "tmpreg1", scope: !10789, file: !10790, line: 90, type: !156)
!10834 = !DILocalVariable(name: "plli2sp", scope: !10789, file: !10790, line: 91, type: !156)
!10835 = !DILocalVariable(name: "plli2sq", scope: !10789, file: !10790, line: 92, type: !156)
!10836 = !DILocalVariable(name: "plli2sr", scope: !10789, file: !10790, line: 93, type: !156)
!10837 = !DILocalVariable(name: "pllsaip", scope: !10789, file: !10790, line: 94, type: !156)
!10838 = !DILocalVariable(name: "pllsaiq", scope: !10789, file: !10790, line: 95, type: !156)
!10839 = !DILocalVariable(name: "plli2sused", scope: !10789, file: !10790, line: 96, type: !156)
!10840 = !DILocalVariable(name: "pllsaiused", scope: !10789, file: !10790, line: 97, type: !156)
!10841 = !DILocalVariable(name: "tmpreg", scope: !10842, file: !10790, line: 184, type: !452)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !10790, line: 184, column: 5)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !10790, line: 179, column: 3)
!10844 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 178, column: 6)
!10845 = !DILocation(line: 0, scope: !10789)
!10846 = !DILocation(line: 103, column: 23, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 103, column: 6)
!10848 = !DILocation(line: 103, column: 45, scope: !10847)
!10849 = !DILocation(line: 103, column: 71, scope: !10847)
!10850 = !DILocation(line: 103, column: 6, scope: !10789)
!10851 = !DILocation(line: 109, column: 5, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10847, file: !10790, line: 104, column: 3)
!10853 = !DILocation(line: 111, column: 23, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10852, file: !10790, line: 111, column: 8)
!10855 = !DILocation(line: 111, column: 45, scope: !10854)
!10856 = !DILocation(line: 111, column: 8, scope: !10852)
!10857 = !DILocation(line: 119, column: 23, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 119, column: 6)
!10859 = !DILocation(line: 119, column: 45, scope: !10858)
!10860 = !DILocation(line: 119, column: 71, scope: !10858)
!10861 = !DILocation(line: 119, column: 6, scope: !10789)
!10862 = !DILocation(line: 125, column: 5, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !10790, line: 120, column: 3)
!10864 = !DILocation(line: 127, column: 23, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10863, file: !10790, line: 127, column: 8)
!10866 = !DILocation(line: 127, column: 45, scope: !10865)
!10867 = !DILocation(line: 127, column: 8, scope: !10863)
!10868 = !DILocation(line: 135, column: 23, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 135, column: 6)
!10870 = !DILocation(line: 135, column: 45, scope: !10869)
!10871 = !DILocation(line: 135, column: 67, scope: !10869)
!10872 = !DILocation(line: 135, column: 6, scope: !10789)
!10873 = !DILocation(line: 141, column: 5, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10869, file: !10790, line: 136, column: 3)
!10875 = !DILocation(line: 143, column: 23, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10874, file: !10790, line: 143, column: 8)
!10877 = !DILocation(line: 143, column: 42, scope: !10876)
!10878 = !DILocation(line: 143, column: 8, scope: !10874)
!10879 = !DILocation(line: 148, column: 42, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !10790, line: 148, column: 8)
!10881 = !DILocation(line: 148, column: 8, scope: !10874)
!10882 = !DILocation(line: 156, column: 23, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 156, column: 6)
!10884 = !DILocation(line: 156, column: 45, scope: !10883)
!10885 = !DILocation(line: 156, column: 67, scope: !10883)
!10886 = !DILocation(line: 156, column: 6, scope: !10789)
!10887 = !DILocation(line: 162, column: 5, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10883, file: !10790, line: 157, column: 3)
!10889 = !DILocation(line: 165, column: 23, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10888, file: !10790, line: 165, column: 8)
!10891 = !DILocation(line: 165, column: 42, scope: !10890)
!10892 = !DILocation(line: 165, column: 8, scope: !10888)
!10893 = !DILocation(line: 170, column: 42, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10888, file: !10790, line: 170, column: 8)
!10895 = !DILocation(line: 170, column: 8, scope: !10888)
!10896 = !DILocation(line: 178, column: 23, scope: !10844)
!10897 = !DILocation(line: 178, column: 45, scope: !10844)
!10898 = !DILocation(line: 178, column: 66, scope: !10844)
!10899 = !DILocation(line: 178, column: 6, scope: !10789)
!10900 = !DILocation(line: 184, column: 5, scope: !10842)
!10901 = !DILocation(line: 184, column: 5, scope: !10843)
!10902 = !DILocation(line: 187, column: 13, scope: !10843)
!10903 = !DILocation(line: 190, column: 17, scope: !10843)
!10904 = !DILocation(line: 192, column: 5, scope: !10843)
!10905 = !DILocation(line: 192, column: 17, scope: !10843)
!10906 = !DILocation(line: 192, column: 20, scope: !10843)
!10907 = !DILocation(line: 192, column: 34, scope: !10843)
!10908 = !DILocation(line: 194, column: 11, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !10790, line: 194, column: 10)
!10910 = distinct !DILexicalBlock(scope: !10843, file: !10790, line: 193, column: 5)
!10911 = !DILocation(line: 194, column: 25, scope: !10909)
!10912 = !DILocation(line: 194, column: 39, scope: !10909)
!10913 = !DILocation(line: 194, column: 10, scope: !10910)
!10914 = distinct !{!10914, !10904, !10915}
!10915 = !DILocation(line: 198, column: 5, scope: !10843)
!10916 = !DILocation(line: 200, column: 21, scope: !10843)
!10917 = !DILocation(line: 200, column: 26, scope: !10843)
!10918 = !DILocation(line: 201, column: 17, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10843, file: !10790, line: 201, column: 8)
!10920 = !DILocation(line: 201, column: 33, scope: !10919)
!10921 = !DILocation(line: 201, column: 66, scope: !10919)
!10922 = !DILocation(line: 201, column: 84, scope: !10919)
!10923 = !DILocation(line: 201, column: 47, scope: !10919)
!10924 = !DILocation(line: 201, column: 8, scope: !10843)
!10925 = !DILocation(line: 204, column: 23, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10919, file: !10790, line: 202, column: 5)
!10927 = !DILocation(line: 204, column: 28, scope: !10926)
!10928 = !DILocation(line: 206, column: 7, scope: !10926)
!10929 = !DILocation(line: 207, column: 7, scope: !10926)
!10930 = !DILocation(line: 209, column: 17, scope: !10926)
!10931 = !DILocation(line: 212, column: 10, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10926, file: !10790, line: 212, column: 10)
!10933 = !DILocation(line: 212, column: 10, scope: !10926)
!10934 = !DILocation(line: 215, column: 21, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !10790, line: 213, column: 7)
!10936 = !DILocation(line: 218, column: 9, scope: !10935)
!10937 = !DILocation(line: 218, column: 15, scope: !10935)
!10938 = !DILocation(line: 218, column: 51, scope: !10935)
!10939 = !DILocation(line: 220, column: 15, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !10790, line: 220, column: 14)
!10941 = distinct !DILexicalBlock(scope: !10935, file: !10790, line: 219, column: 9)
!10942 = !DILocation(line: 220, column: 29, scope: !10940)
!10943 = !DILocation(line: 220, column: 43, scope: !10940)
!10944 = !DILocation(line: 220, column: 14, scope: !10941)
!10945 = distinct !{!10945, !10936, !10946}
!10946 = !DILocation(line: 224, column: 9, scope: !10935)
!10947 = !DILocation(line: 227, column: 5, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10843, file: !10790, line: 227, column: 5)
!10949 = !DILocation(line: 232, column: 23, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 232, column: 6)
!10951 = !DILocation(line: 228, column: 3, scope: !10843)
!10952 = !DILocation(line: 232, column: 45, scope: !10950)
!10953 = !DILocation(line: 232, column: 66, scope: !10950)
!10954 = !DILocation(line: 232, column: 6, scope: !10789)
!10955 = !DILocation(line: 235, column: 5, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10950, file: !10790, line: 233, column: 3)
!10957 = !DILocation(line: 240, column: 23, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 240, column: 6)
!10959 = !DILocation(line: 236, column: 3, scope: !10956)
!10960 = !DILocation(line: 240, column: 45, scope: !10958)
!10961 = !DILocation(line: 240, column: 70, scope: !10958)
!10962 = !DILocation(line: 240, column: 6, scope: !10789)
!10963 = !DILocation(line: 246, column: 5, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10958, file: !10790, line: 241, column: 3)
!10965 = !DILocation(line: 251, column: 23, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 251, column: 6)
!10967 = !DILocation(line: 247, column: 3, scope: !10964)
!10968 = !DILocation(line: 251, column: 45, scope: !10966)
!10969 = !DILocation(line: 251, column: 66, scope: !10966)
!10970 = !DILocation(line: 251, column: 6, scope: !10789)
!10971 = !DILocation(line: 257, column: 5, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10966, file: !10790, line: 252, column: 3)
!10973 = !DILocation(line: 262, column: 23, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 262, column: 6)
!10975 = !DILocation(line: 258, column: 3, scope: !10972)
!10976 = !DILocation(line: 262, column: 45, scope: !10974)
!10977 = !DILocation(line: 262, column: 68, scope: !10974)
!10978 = !DILocation(line: 262, column: 6, scope: !10789)
!10979 = !DILocation(line: 268, column: 5, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10974, file: !10790, line: 263, column: 3)
!10981 = !DILocation(line: 271, column: 23, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10980, file: !10790, line: 271, column: 8)
!10983 = !DILocation(line: 271, column: 43, scope: !10982)
!10984 = !DILocation(line: 271, column: 8, scope: !10980)
!10985 = !DILocation(line: 279, column: 23, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 279, column: 6)
!10987 = !DILocation(line: 279, column: 45, scope: !10986)
!10988 = !DILocation(line: 279, column: 67, scope: !10986)
!10989 = !DILocation(line: 279, column: 6, scope: !10789)
!10990 = !DILocation(line: 285, column: 5, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10986, file: !10790, line: 280, column: 3)
!10992 = !DILocation(line: 290, column: 23, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 290, column: 6)
!10994 = !DILocation(line: 286, column: 3, scope: !10991)
!10995 = !DILocation(line: 290, column: 45, scope: !10993)
!10996 = !DILocation(line: 290, column: 70, scope: !10993)
!10997 = !DILocation(line: 290, column: 6, scope: !10789)
!10998 = !DILocation(line: 296, column: 5, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10993, file: !10790, line: 291, column: 3)
!11000 = !DILocation(line: 298, column: 23, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !10790, line: 298, column: 8)
!11002 = !DILocation(line: 298, column: 43, scope: !11001)
!11003 = !DILocation(line: 298, column: 8, scope: !10999)
!11004 = !DILocation(line: 308, column: 44, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 308, column: 6)
!11006 = !DILocation(line: 308, column: 18, scope: !11005)
!11007 = !DILocation(line: 308, column: 25, scope: !11005)
!11008 = !DILocation(line: 308, column: 65, scope: !11005)
!11009 = !DILocation(line: 308, column: 6, scope: !10789)
!11010 = !DILocation(line: 311, column: 5, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11005, file: !10790, line: 309, column: 3)
!11012 = !DILocation(line: 313, column: 17, scope: !11011)
!11013 = !DILocation(line: 315, column: 5, scope: !11011)
!11014 = !DILocation(line: 315, column: 11, scope: !11011)
!11015 = !DILocation(line: 317, column: 11, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !10790, line: 317, column: 10)
!11017 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 316, column: 5)
!11018 = !DILocation(line: 317, column: 25, scope: !11016)
!11019 = !DILocation(line: 317, column: 39, scope: !11016)
!11020 = !DILocation(line: 317, column: 10, scope: !11017)
!11021 = distinct !{!11021, !11013, !11022}
!11022 = !DILocation(line: 322, column: 5, scope: !11011)
!11023 = !DILocation(line: 329, column: 27, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 329, column: 8)
!11025 = !DILocation(line: 329, column: 49, scope: !11024)
!11026 = !DILocation(line: 329, column: 75, scope: !11024)
!11027 = !DILocation(line: 329, column: 102, scope: !11024)
!11028 = !DILocation(line: 329, column: 121, scope: !11024)
!11029 = !DILocation(line: 329, column: 143, scope: !11024)
!11030 = !DILocation(line: 329, column: 176, scope: !11024)
!11031 = !DILocation(line: 330, column: 49, scope: !11024)
!11032 = !DILocation(line: 330, column: 75, scope: !11024)
!11033 = !DILocation(line: 330, column: 102, scope: !11024)
!11034 = !DILocation(line: 330, column: 121, scope: !11024)
!11035 = !DILocation(line: 330, column: 143, scope: !11024)
!11036 = !DILocation(line: 329, column: 8, scope: !11011)
!11037 = !DILocation(line: 336, column: 26, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11024, file: !10790, line: 331, column: 5)
!11039 = !DILocation(line: 336, column: 100, scope: !11038)
!11040 = !DILocation(line: 337, column: 24, scope: !11038)
!11041 = !DILocation(line: 337, column: 61, scope: !11038)
!11042 = !DILocation(line: 341, column: 7, scope: !11038)
!11043 = !DILocation(line: 345, column: 27, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 345, column: 8)
!11045 = !DILocation(line: 342, column: 5, scope: !11038)
!11046 = !DILocation(line: 345, column: 49, scope: !11044)
!11047 = !DILocation(line: 345, column: 71, scope: !11044)
!11048 = !DILocation(line: 345, column: 94, scope: !11044)
!11049 = !DILocation(line: 345, column: 113, scope: !11044)
!11050 = !DILocation(line: 345, column: 132, scope: !11044)
!11051 = !DILocation(line: 345, column: 162, scope: !11044)
!11052 = !DILocation(line: 346, column: 49, scope: !11044)
!11053 = !DILocation(line: 346, column: 71, scope: !11044)
!11054 = !DILocation(line: 346, column: 94, scope: !11044)
!11055 = !DILocation(line: 346, column: 113, scope: !11044)
!11056 = !DILocation(line: 346, column: 132, scope: !11044)
!11057 = !DILocation(line: 345, column: 8, scope: !11011)
!11058 = !DILocation(line: 354, column: 26, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11044, file: !10790, line: 347, column: 5)
!11060 = !DILocation(line: 354, column: 100, scope: !11059)
!11061 = !DILocation(line: 355, column: 24, scope: !11059)
!11062 = !DILocation(line: 355, column: 61, scope: !11059)
!11063 = !DILocation(line: 360, column: 7, scope: !11059)
!11064 = !DILocation(line: 363, column: 7, scope: !11059)
!11065 = !DILocation(line: 367, column: 26, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 367, column: 8)
!11067 = !DILocation(line: 364, column: 5, scope: !11059)
!11068 = !DILocation(line: 367, column: 48, scope: !11066)
!11069 = !DILocation(line: 367, column: 73, scope: !11066)
!11070 = !DILocation(line: 367, column: 99, scope: !11066)
!11071 = !DILocation(line: 367, column: 118, scope: !11066)
!11072 = !DILocation(line: 367, column: 138, scope: !11066)
!11073 = !DILocation(line: 367, column: 8, scope: !11011)
!11074 = !DILocation(line: 372, column: 26, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11066, file: !10790, line: 368, column: 5)
!11076 = !DILocation(line: 373, column: 24, scope: !11075)
!11077 = !DILocation(line: 373, column: 61, scope: !11075)
!11078 = !DILocation(line: 377, column: 7, scope: !11075)
!11079 = !DILocation(line: 381, column: 24, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 381, column: 8)
!11081 = !DILocation(line: 378, column: 5, scope: !11075)
!11082 = !DILocation(line: 381, column: 45, scope: !11080)
!11083 = !DILocation(line: 381, column: 69, scope: !11080)
!11084 = !DILocation(line: 381, column: 8, scope: !11011)
!11085 = !DILocation(line: 390, column: 7, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11080, file: !10790, line: 382, column: 5)
!11087 = !DILocation(line: 391, column: 5, scope: !11086)
!11088 = !DILocation(line: 394, column: 5, scope: !11011)
!11089 = !DILocation(line: 396, column: 17, scope: !11011)
!11090 = !DILocation(line: 398, column: 5, scope: !11011)
!11091 = !DILocation(line: 398, column: 11, scope: !11011)
!11092 = !DILocation(line: 398, column: 51, scope: !11011)
!11093 = !DILocation(line: 400, column: 11, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !10790, line: 400, column: 10)
!11095 = distinct !DILexicalBlock(scope: !11011, file: !10790, line: 399, column: 5)
!11096 = !DILocation(line: 400, column: 25, scope: !11094)
!11097 = !DILocation(line: 400, column: 39, scope: !11094)
!11098 = !DILocation(line: 400, column: 10, scope: !11095)
!11099 = distinct !{!11099, !11090, !11100}
!11100 = !DILocation(line: 405, column: 5, scope: !11011)
!11101 = !DILocation(line: 411, column: 17, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 411, column: 6)
!11103 = !DILocation(line: 411, column: 6, scope: !10789)
!11104 = !DILocation(line: 414, column: 5, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11102, file: !10790, line: 412, column: 3)
!11106 = !DILocation(line: 416, column: 17, scope: !11105)
!11107 = !DILocation(line: 418, column: 5, scope: !11105)
!11108 = !DILocation(line: 418, column: 11, scope: !11105)
!11109 = !DILocation(line: 420, column: 11, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !10790, line: 420, column: 10)
!11111 = distinct !DILexicalBlock(scope: !11105, file: !10790, line: 419, column: 5)
!11112 = !DILocation(line: 420, column: 25, scope: !11110)
!11113 = !DILocation(line: 420, column: 39, scope: !11110)
!11114 = !DILocation(line: 420, column: 10, scope: !11111)
!11115 = distinct !{!11115, !11107, !11116}
!11116 = !DILocation(line: 425, column: 5, scope: !11105)
!11117 = !DILocation(line: 432, column: 27, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11105, file: !10790, line: 432, column: 8)
!11119 = !DILocation(line: 432, column: 49, scope: !11118)
!11120 = !DILocation(line: 432, column: 71, scope: !11118)
!11121 = !DILocation(line: 432, column: 94, scope: !11118)
!11122 = !DILocation(line: 432, column: 113, scope: !11118)
!11123 = !DILocation(line: 432, column: 132, scope: !11118)
!11124 = !DILocation(line: 432, column: 162, scope: !11118)
!11125 = !DILocation(line: 433, column: 49, scope: !11118)
!11126 = !DILocation(line: 433, column: 71, scope: !11118)
!11127 = !DILocation(line: 433, column: 94, scope: !11118)
!11128 = !DILocation(line: 433, column: 113, scope: !11118)
!11129 = !DILocation(line: 433, column: 132, scope: !11118)
!11130 = !DILocation(line: 432, column: 8, scope: !11105)
!11131 = !DILocation(line: 441, column: 26, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11118, file: !10790, line: 434, column: 5)
!11133 = !DILocation(line: 441, column: 100, scope: !11132)
!11134 = !DILocation(line: 445, column: 7, scope: !11132)
!11135 = !DILocation(line: 448, column: 7, scope: !11132)
!11136 = !DILocation(line: 453, column: 26, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11105, file: !10790, line: 453, column: 8)
!11138 = !DILocation(line: 449, column: 5, scope: !11132)
!11139 = !DILocation(line: 453, column: 48, scope: !11137)
!11140 = !DILocation(line: 453, column: 71, scope: !11137)
!11141 = !DILocation(line: 453, column: 95, scope: !11137)
!11142 = !DILocation(line: 453, column: 114, scope: !11137)
!11143 = !DILocation(line: 453, column: 134, scope: !11137)
!11144 = !DILocation(line: 453, column: 8, scope: !11105)
!11145 = !DILocation(line: 458, column: 24, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11137, file: !10790, line: 454, column: 5)
!11147 = !DILocation(line: 458, column: 61, scope: !11146)
!11148 = !DILocation(line: 462, column: 7, scope: !11146)
!11149 = !DILocation(line: 463, column: 5, scope: !11146)
!11150 = !DILocation(line: 466, column: 5, scope: !11105)
!11151 = !DILocation(line: 468, column: 17, scope: !11105)
!11152 = !DILocation(line: 470, column: 5, scope: !11105)
!11153 = !DILocation(line: 470, column: 11, scope: !11105)
!11154 = !DILocation(line: 470, column: 39, scope: !11105)
!11155 = !DILocation(line: 472, column: 11, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !10790, line: 472, column: 10)
!11157 = distinct !DILexicalBlock(scope: !11105, file: !10790, line: 471, column: 5)
!11158 = !DILocation(line: 472, column: 25, scope: !11156)
!11159 = !DILocation(line: 472, column: 39, scope: !11156)
!11160 = !DILocation(line: 472, column: 10, scope: !11157)
!11161 = distinct !{!11161, !11152, !11162}
!11162 = !DILocation(line: 477, column: 5, scope: !11105)
!11163 = !DILocation(line: 480, column: 1, scope: !10789)
!11164 = !DISubprogram(name: "HAL_GetTick", scope: !11165, file: !11165, line: 234, type: !6497, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!11165 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11166 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !10790, file: !10790, line: 489, type: !11167, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11169)
!11167 = !DISubroutineType(types: !11168)
!11168 = !{null, !10794}
!11169 = !{!11170, !11171}
!11170 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11166, file: !10790, line: 489, type: !10794)
!11171 = !DILocalVariable(name: "tempreg", scope: !11166, file: !10790, line: 491, type: !156)
!11172 = !DILocation(line: 0, scope: !11166)
!11173 = !DILocation(line: 494, column: 18, scope: !11166)
!11174 = !DILocation(line: 494, column: 39, scope: !11166)
!11175 = !DILocation(line: 502, column: 52, scope: !11166)
!11176 = !DILocation(line: 502, column: 63, scope: !11166)
!11177 = !DILocation(line: 502, column: 25, scope: !11166)
!11178 = !DILocation(line: 502, column: 33, scope: !11166)
!11179 = !DILocation(line: 503, column: 52, scope: !11166)
!11180 = !DILocation(line: 503, column: 89, scope: !11166)
!11181 = !DILocation(line: 503, column: 25, scope: !11166)
!11182 = !DILocation(line: 503, column: 33, scope: !11166)
!11183 = !DILocation(line: 504, column: 54, scope: !11166)
!11184 = !DILocation(line: 504, column: 128, scope: !11166)
!11185 = !DILocation(line: 504, column: 25, scope: !11166)
!11186 = !DILocation(line: 504, column: 33, scope: !11166)
!11187 = !DILocation(line: 505, column: 52, scope: !11166)
!11188 = !DILocation(line: 505, column: 89, scope: !11166)
!11189 = !DILocation(line: 505, column: 25, scope: !11166)
!11190 = !DILocation(line: 505, column: 33, scope: !11166)
!11191 = !DILocation(line: 506, column: 52, scope: !11166)
!11192 = !DILocation(line: 506, column: 89, scope: !11166)
!11193 = !DILocation(line: 506, column: 25, scope: !11166)
!11194 = !DILocation(line: 506, column: 33, scope: !11166)
!11195 = !DILocation(line: 508, column: 52, scope: !11166)
!11196 = !DILocation(line: 508, column: 63, scope: !11166)
!11197 = !DILocation(line: 508, column: 25, scope: !11166)
!11198 = !DILocation(line: 508, column: 33, scope: !11166)
!11199 = !DILocation(line: 509, column: 52, scope: !11166)
!11200 = !DILocation(line: 509, column: 89, scope: !11166)
!11201 = !DILocation(line: 509, column: 25, scope: !11166)
!11202 = !DILocation(line: 509, column: 33, scope: !11166)
!11203 = !DILocation(line: 510, column: 54, scope: !11166)
!11204 = !DILocation(line: 510, column: 128, scope: !11166)
!11205 = !DILocation(line: 510, column: 25, scope: !11166)
!11206 = !DILocation(line: 510, column: 33, scope: !11166)
!11207 = !DILocation(line: 511, column: 52, scope: !11166)
!11208 = !DILocation(line: 511, column: 89, scope: !11166)
!11209 = !DILocation(line: 511, column: 25, scope: !11166)
!11210 = !DILocation(line: 511, column: 33, scope: !11166)
!11211 = !DILocation(line: 513, column: 48, scope: !11166)
!11212 = !DILocation(line: 513, column: 56, scope: !11166)
!11213 = !DILocation(line: 513, column: 18, scope: !11166)
!11214 = !DILocation(line: 513, column: 29, scope: !11166)
!11215 = !DILocation(line: 514, column: 48, scope: !11166)
!11216 = !DILocation(line: 514, column: 82, scope: !11166)
!11217 = !DILocation(line: 514, column: 18, scope: !11166)
!11218 = !DILocation(line: 514, column: 29, scope: !11166)
!11219 = !DILocation(line: 517, column: 39, scope: !11166)
!11220 = !DILocation(line: 517, column: 18, scope: !11166)
!11221 = !DILocation(line: 517, column: 37, scope: !11166)
!11222 = !DILocation(line: 520, column: 39, scope: !11166)
!11223 = !DILocation(line: 520, column: 18, scope: !11166)
!11224 = !DILocation(line: 520, column: 37, scope: !11166)
!11225 = !DILocation(line: 523, column: 42, scope: !11166)
!11226 = !DILocation(line: 523, column: 18, scope: !11166)
!11227 = !DILocation(line: 523, column: 40, scope: !11166)
!11228 = !DILocation(line: 526, column: 42, scope: !11166)
!11229 = !DILocation(line: 526, column: 18, scope: !11166)
!11230 = !DILocation(line: 526, column: 40, scope: !11166)
!11231 = !DILocation(line: 529, column: 19, scope: !11166)
!11232 = !DILocation(line: 529, column: 24, scope: !11166)
!11233 = !DILocation(line: 530, column: 67, scope: !11166)
!11234 = !DILocation(line: 530, column: 72, scope: !11166)
!11235 = !DILocation(line: 530, column: 59, scope: !11166)
!11236 = !DILocation(line: 530, column: 18, scope: !11166)
!11237 = !DILocation(line: 530, column: 36, scope: !11166)
!11238 = !DILocation(line: 533, column: 38, scope: !11166)
!11239 = !DILocation(line: 533, column: 18, scope: !11166)
!11240 = !DILocation(line: 533, column: 36, scope: !11166)
!11241 = !DILocation(line: 536, column: 42, scope: !11166)
!11242 = !DILocation(line: 536, column: 18, scope: !11166)
!11243 = !DILocation(line: 536, column: 40, scope: !11166)
!11244 = !DILocation(line: 539, column: 40, scope: !11166)
!11245 = !DILocation(line: 539, column: 18, scope: !11166)
!11246 = !DILocation(line: 539, column: 38, scope: !11166)
!11247 = !DILocation(line: 542, column: 39, scope: !11166)
!11248 = !DILocation(line: 542, column: 18, scope: !11166)
!11249 = !DILocation(line: 542, column: 37, scope: !11166)
!11250 = !DILocation(line: 545, column: 40, scope: !11166)
!11251 = !DILocation(line: 545, column: 18, scope: !11166)
!11252 = !DILocation(line: 545, column: 38, scope: !11166)
!11253 = !DILocation(line: 548, column: 13, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11166, file: !10790, line: 548, column: 7)
!11255 = !DILocation(line: 548, column: 7, scope: !11166)
!11256 = !DILocation(line: 550, column: 20, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11254, file: !10790, line: 549, column: 3)
!11258 = !DILocation(line: 550, column: 37, scope: !11257)
!11259 = !DILocation(line: 556, column: 1, scope: !11166)
!11260 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !10790, file: !10790, line: 569, type: !7456, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11261)
!11261 = !{!11262, !11263, !11264, !11265, !11266, !11267, !11268}
!11262 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11260, file: !10790, line: 569, type: !156)
!11263 = !DILocalVariable(name: "tmpreg1", scope: !11260, file: !10790, line: 571, type: !156)
!11264 = !DILocalVariable(name: "frequency", scope: !11260, file: !10790, line: 573, type: !156)
!11265 = !DILocalVariable(name: "vcoinput", scope: !11260, file: !10790, line: 575, type: !156)
!11266 = !DILocalVariable(name: "saiclocksource", scope: !11260, file: !10790, line: 577, type: !156)
!11267 = !DILocalVariable(name: "srcclk", scope: !11260, file: !10790, line: 578, type: !156)
!11268 = !DILocalVariable(name: "vcooutput", scope: !11260, file: !10790, line: 580, type: !156)
!11269 = !DILocation(line: 0, scope: !11260)
!11270 = !DILocation(line: 581, column: 3, scope: !11260)
!11271 = !DILocation(line: 586, column: 29, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !10790, line: 585, column: 5)
!11273 = distinct !DILexicalBlock(scope: !11260, file: !10790, line: 582, column: 3)
!11274 = !DILocation(line: 588, column: 7, scope: !11272)
!11275 = !DILocation(line: 594, column: 20, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11277, file: !10790, line: 594, column: 14)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !10790, line: 591, column: 9)
!11278 = distinct !DILexicalBlock(scope: !11272, file: !10790, line: 589, column: 7)
!11279 = !DILocation(line: 0, scope: !11276)
!11280 = !DILocation(line: 606, column: 27, scope: !11277)
!11281 = !DILocation(line: 606, column: 64, scope: !11277)
!11282 = !DILocation(line: 607, column: 42, scope: !11277)
!11283 = !DILocation(line: 607, column: 79, scope: !11277)
!11284 = !DILocation(line: 607, column: 33, scope: !11277)
!11285 = !DILocation(line: 607, column: 86, scope: !11277)
!11286 = !DILocation(line: 610, column: 29, scope: !11277)
!11287 = !DILocation(line: 610, column: 63, scope: !11277)
!11288 = !DILocation(line: 610, column: 70, scope: !11277)
!11289 = !DILocation(line: 611, column: 32, scope: !11277)
!11290 = !DILocation(line: 612, column: 11, scope: !11277)
!11291 = !DILocation(line: 619, column: 20, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !10790, line: 619, column: 14)
!11293 = distinct !DILexicalBlock(scope: !11278, file: !10790, line: 616, column: 9)
!11294 = !DILocation(line: 0, scope: !11292)
!11295 = !DILocation(line: 632, column: 27, scope: !11293)
!11296 = !DILocation(line: 632, column: 64, scope: !11293)
!11297 = !DILocation(line: 633, column: 42, scope: !11293)
!11298 = !DILocation(line: 633, column: 79, scope: !11293)
!11299 = !DILocation(line: 633, column: 33, scope: !11293)
!11300 = !DILocation(line: 633, column: 86, scope: !11293)
!11301 = !DILocation(line: 636, column: 28, scope: !11293)
!11302 = !DILocation(line: 636, column: 36, scope: !11293)
!11303 = !DILocation(line: 636, column: 62, scope: !11293)
!11304 = !DILocation(line: 637, column: 32, scope: !11293)
!11305 = !DILocation(line: 638, column: 11, scope: !11293)
!11306 = !DILocation(line: 645, column: 20, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !10790, line: 645, column: 14)
!11308 = distinct !DILexicalBlock(scope: !11278, file: !10790, line: 642, column: 9)
!11309 = !DILocation(line: 0, scope: !11307)
!11310 = !DILocation(line: 658, column: 27, scope: !11308)
!11311 = !DILocation(line: 658, column: 55, scope: !11308)
!11312 = !DILocation(line: 659, column: 42, scope: !11308)
!11313 = !DILocation(line: 659, column: 70, scope: !11308)
!11314 = !DILocation(line: 659, column: 33, scope: !11308)
!11315 = !DILocation(line: 659, column: 77, scope: !11308)
!11316 = !DILocation(line: 660, column: 11, scope: !11308)
!11317 = !DILocation(line: 665, column: 11, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11278, file: !10790, line: 663, column: 9)
!11319 = !DILocation(line: 669, column: 20, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !10790, line: 669, column: 14)
!11321 = distinct !DILexicalBlock(scope: !11278, file: !10790, line: 668, column: 9)
!11322 = !DILocation(line: 691, column: 16, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11273, file: !10790, line: 689, column: 5)
!11324 = !DILocation(line: 692, column: 7, scope: !11323)
!11325 = !DILocation(line: 706, column: 20, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !10790, line: 706, column: 14)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !10790, line: 703, column: 9)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !10790, line: 693, column: 7)
!11329 = !DILocation(line: 0, scope: !11326)
!11330 = !DILocation(line: 718, column: 53, scope: !11327)
!11331 = !DILocation(line: 718, column: 90, scope: !11327)
!11332 = !DILocation(line: 718, column: 43, scope: !11327)
!11333 = !DILocation(line: 720, column: 53, scope: !11327)
!11334 = !DILocation(line: 720, column: 90, scope: !11327)
!11335 = !DILocation(line: 720, column: 44, scope: !11327)
!11336 = !DILocation(line: 721, column: 11, scope: !11327)
!11337 = !DILocation(line: 728, column: 20, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !10790, line: 728, column: 14)
!11339 = distinct !DILexicalBlock(scope: !11328, file: !10790, line: 725, column: 9)
!11340 = !DILocation(line: 0, scope: !11338)
!11341 = !DILocation(line: 740, column: 53, scope: !11339)
!11342 = !DILocation(line: 740, column: 81, scope: !11339)
!11343 = !DILocation(line: 740, column: 43, scope: !11339)
!11344 = !DILocation(line: 742, column: 53, scope: !11339)
!11345 = !DILocation(line: 742, column: 81, scope: !11339)
!11346 = !DILocation(line: 742, column: 44, scope: !11339)
!11347 = !DILocation(line: 743, column: 11, scope: !11339)
!11348 = !DILocation(line: 748, column: 20, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !10790, line: 748, column: 14)
!11350 = distinct !DILexicalBlock(scope: !11328, file: !10790, line: 747, column: 9)
!11351 = !DILocation(line: 770, column: 16, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11273, file: !10790, line: 768, column: 5)
!11353 = !DILocation(line: 771, column: 7, scope: !11352)
!11354 = !DILocation(line: 785, column: 20, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !10790, line: 785, column: 14)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !10790, line: 782, column: 9)
!11357 = distinct !DILexicalBlock(scope: !11352, file: !10790, line: 772, column: 7)
!11358 = !DILocation(line: 0, scope: !11355)
!11359 = !DILocation(line: 797, column: 53, scope: !11356)
!11360 = !DILocation(line: 797, column: 90, scope: !11356)
!11361 = !DILocation(line: 797, column: 43, scope: !11356)
!11362 = !DILocation(line: 799, column: 53, scope: !11356)
!11363 = !DILocation(line: 799, column: 90, scope: !11356)
!11364 = !DILocation(line: 799, column: 44, scope: !11356)
!11365 = !DILocation(line: 800, column: 11, scope: !11356)
!11366 = !DILocation(line: 807, column: 20, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !10790, line: 807, column: 14)
!11368 = distinct !DILexicalBlock(scope: !11357, file: !10790, line: 804, column: 9)
!11369 = !DILocation(line: 0, scope: !11367)
!11370 = !DILocation(line: 819, column: 53, scope: !11368)
!11371 = !DILocation(line: 819, column: 81, scope: !11368)
!11372 = !DILocation(line: 819, column: 43, scope: !11368)
!11373 = !DILocation(line: 821, column: 53, scope: !11368)
!11374 = !DILocation(line: 821, column: 81, scope: !11368)
!11375 = !DILocation(line: 821, column: 44, scope: !11368)
!11376 = !DILocation(line: 822, column: 11, scope: !11368)
!11377 = !DILocation(line: 827, column: 20, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !10790, line: 827, column: 14)
!11379 = distinct !DILexicalBlock(scope: !11357, file: !10790, line: 826, column: 9)
!11380 = !DILocation(line: 847, column: 3, scope: !11260)
!11381 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !10790, file: !10790, line: 2766, type: !11382, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{null, !143}
!11384 = !{!11385}
!11385 = !DILocalVariable(name: "Mode", arg: 1, scope: !11381, file: !10790, line: 2766, type: !143)
!11386 = !DILocation(line: 0, scope: !11381)
!11387 = !DILocation(line: 2770, column: 11, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11381, file: !10790, line: 2770, column: 6)
!11389 = !DILocation(line: 0, scope: !11388)
!11390 = !DILocation(line: 2770, column: 6, scope: !11381)
!11391 = !DILocation(line: 2778, column: 1, scope: !11381)
!11392 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !10790, file: !10790, line: 2803, type: !11393, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11396)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{!10793, !11395}
!11395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10801, size: 32)
!11396 = !{!11397, !11398}
!11397 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11392, file: !10790, line: 2803, type: !11395)
!11398 = !DILocalVariable(name: "tickstart", scope: !11392, file: !10790, line: 2805, type: !156)
!11399 = !DILocation(line: 0, scope: !11392)
!11400 = !DILocation(line: 2821, column: 3, scope: !11392)
!11401 = !DILocation(line: 2824, column: 15, scope: !11392)
!11402 = !DILocation(line: 2825, column: 3, scope: !11392)
!11403 = !DILocation(line: 2825, column: 9, scope: !11392)
!11404 = !DILocation(line: 2827, column: 9, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !10790, line: 2827, column: 8)
!11406 = distinct !DILexicalBlock(scope: !11392, file: !10790, line: 2826, column: 3)
!11407 = !DILocation(line: 2827, column: 23, scope: !11405)
!11408 = !DILocation(line: 2827, column: 37, scope: !11405)
!11409 = !DILocation(line: 2827, column: 8, scope: !11406)
!11410 = distinct !{!11410, !11402, !11411}
!11411 = !DILocation(line: 2832, column: 3, scope: !11392)
!11412 = !DILocation(line: 2840, column: 3, scope: !11392)
!11413 = !DILocation(line: 2866, column: 3, scope: !11392)
!11414 = !DILocation(line: 2869, column: 15, scope: !11392)
!11415 = !DILocation(line: 2870, column: 3, scope: !11392)
!11416 = !DILocation(line: 2870, column: 9, scope: !11392)
!11417 = !DILocation(line: 2870, column: 48, scope: !11392)
!11418 = !DILocation(line: 2872, column: 9, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !10790, line: 2872, column: 8)
!11420 = distinct !DILexicalBlock(scope: !11392, file: !10790, line: 2871, column: 3)
!11421 = !DILocation(line: 2872, column: 23, scope: !11419)
!11422 = !DILocation(line: 2872, column: 37, scope: !11419)
!11423 = !DILocation(line: 2872, column: 8, scope: !11420)
!11424 = distinct !{!11424, !11415, !11425}
!11425 = !DILocation(line: 2877, column: 3, scope: !11392)
!11426 = !DILocation(line: 2880, column: 1, scope: !11392)
!11427 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !10790, file: !10790, line: 2886, type: !11428, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11430)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!10793}
!11430 = !{!11431}
!11431 = !DILocalVariable(name: "tickstart", scope: !11427, file: !10790, line: 2888, type: !156)
!11432 = !DILocation(line: 2891, column: 3, scope: !11427)
!11433 = !DILocation(line: 2894, column: 15, scope: !11427)
!11434 = !DILocation(line: 0, scope: !11427)
!11435 = !DILocation(line: 2895, column: 3, scope: !11427)
!11436 = !DILocation(line: 2895, column: 9, scope: !11427)
!11437 = !DILocation(line: 2895, column: 45, scope: !11427)
!11438 = !DILocation(line: 2897, column: 9, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !10790, line: 2897, column: 8)
!11440 = distinct !DILexicalBlock(scope: !11427, file: !10790, line: 2896, column: 3)
!11441 = !DILocation(line: 2897, column: 23, scope: !11439)
!11442 = !DILocation(line: 2897, column: 36, scope: !11439)
!11443 = !DILocation(line: 2897, column: 8, scope: !11440)
!11444 = distinct !{!11444, !11435, !11445}
!11445 = !DILocation(line: 2902, column: 3, scope: !11427)
!11446 = !DILocation(line: 2905, column: 1, scope: !11427)
!11447 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !10790, file: !10790, line: 2916, type: !11448, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11451)
!11448 = !DISubroutineType(types: !11449)
!11449 = !{!10793, !11450}
!11450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10810, size: 32)
!11451 = !{!11452, !11453}
!11452 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11447, file: !10790, line: 2916, type: !11450)
!11453 = !DILocalVariable(name: "tickstart", scope: !11447, file: !10790, line: 2918, type: !156)
!11454 = !DILocation(line: 0, scope: !11447)
!11455 = !DILocation(line: 2934, column: 3, scope: !11447)
!11456 = !DILocation(line: 2937, column: 15, scope: !11447)
!11457 = !DILocation(line: 2938, column: 3, scope: !11447)
!11458 = !DILocation(line: 2938, column: 9, scope: !11447)
!11459 = !DILocation(line: 2940, column: 9, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !10790, line: 2940, column: 8)
!11461 = distinct !DILexicalBlock(scope: !11447, file: !10790, line: 2939, column: 3)
!11462 = !DILocation(line: 2940, column: 23, scope: !11460)
!11463 = !DILocation(line: 2940, column: 37, scope: !11460)
!11464 = !DILocation(line: 2940, column: 8, scope: !11461)
!11465 = distinct !{!11465, !11457, !11466}
!11466 = !DILocation(line: 2945, column: 3, scope: !11447)
!11467 = !DILocation(line: 2953, column: 3, scope: !11447)
!11468 = !DILocation(line: 2970, column: 3, scope: !11447)
!11469 = !DILocation(line: 2973, column: 15, scope: !11447)
!11470 = !DILocation(line: 2974, column: 3, scope: !11447)
!11471 = !DILocation(line: 2974, column: 9, scope: !11447)
!11472 = !DILocation(line: 2974, column: 37, scope: !11447)
!11473 = !DILocation(line: 2976, column: 9, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !10790, line: 2976, column: 8)
!11475 = distinct !DILexicalBlock(scope: !11447, file: !10790, line: 2975, column: 3)
!11476 = !DILocation(line: 2976, column: 23, scope: !11474)
!11477 = !DILocation(line: 2976, column: 37, scope: !11474)
!11478 = !DILocation(line: 2976, column: 8, scope: !11475)
!11479 = distinct !{!11479, !11470, !11480}
!11480 = !DILocation(line: 2981, column: 3, scope: !11447)
!11481 = !DILocation(line: 2984, column: 1, scope: !11447)
!11482 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !10790, file: !10790, line: 2990, type: !11428, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11483)
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "tickstart", scope: !11482, file: !10790, line: 2992, type: !156)
!11485 = !DILocation(line: 2995, column: 3, scope: !11482)
!11486 = !DILocation(line: 2998, column: 15, scope: !11482)
!11487 = !DILocation(line: 0, scope: !11482)
!11488 = !DILocation(line: 2999, column: 3, scope: !11482)
!11489 = !DILocation(line: 2999, column: 9, scope: !11482)
!11490 = !DILocation(line: 3001, column: 9, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11492, file: !10790, line: 3001, column: 8)
!11492 = distinct !DILexicalBlock(scope: !11482, file: !10790, line: 3000, column: 3)
!11493 = !DILocation(line: 3001, column: 23, scope: !11491)
!11494 = !DILocation(line: 3001, column: 36, scope: !11491)
!11495 = !DILocation(line: 3001, column: 8, scope: !11492)
!11496 = distinct !{!11496, !11488, !11497}
!11497 = !DILocation(line: 3006, column: 3, scope: !11482)
!11498 = !DILocation(line: 3009, column: 1, scope: !11482)
!11499 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10790, file: !10790, line: 3051, type: !6497, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11500)
!11500 = !{!11501, !11502, !11503, !11504, !11505}
!11501 = !DILocalVariable(name: "pllm", scope: !11499, file: !10790, line: 3053, type: !156)
!11502 = !DILocalVariable(name: "pllvco", scope: !11499, file: !10790, line: 3054, type: !156)
!11503 = !DILocalVariable(name: "pllp", scope: !11499, file: !10790, line: 3055, type: !156)
!11504 = !DILocalVariable(name: "pllr", scope: !11499, file: !10790, line: 3056, type: !156)
!11505 = !DILocalVariable(name: "sysclockfreq", scope: !11499, file: !10790, line: 3057, type: !156)
!11506 = !DILocation(line: 0, scope: !11499)
!11507 = !DILocation(line: 3060, column: 16, scope: !11499)
!11508 = !DILocation(line: 3060, column: 3, scope: !11499)
!11509 = !DILocation(line: 3076, column: 19, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !10790, line: 3073, column: 5)
!11511 = distinct !DILexicalBlock(scope: !11499, file: !10790, line: 3061, column: 3)
!11512 = !DILocation(line: 3076, column: 27, scope: !11510)
!11513 = !DILocation(line: 3077, column: 10, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11510, file: !10790, line: 3077, column: 10)
!11515 = !DILocation(line: 0, scope: !11514)
!11516 = !DILocation(line: 3087, column: 23, scope: !11510)
!11517 = !DILocation(line: 3087, column: 82, scope: !11510)
!11518 = !DILocation(line: 3089, column: 28, scope: !11510)
!11519 = !DILocation(line: 3090, column: 7, scope: !11510)
!11520 = !DILocation(line: 3096, column: 19, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11511, file: !10790, line: 3093, column: 5)
!11522 = !DILocation(line: 3096, column: 27, scope: !11521)
!11523 = !DILocation(line: 3097, column: 10, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11521, file: !10790, line: 3097, column: 10)
!11525 = !DILocation(line: 0, scope: !11524)
!11526 = !DILocation(line: 3107, column: 21, scope: !11521)
!11527 = !DILocation(line: 3107, column: 49, scope: !11521)
!11528 = !DILocation(line: 3109, column: 28, scope: !11521)
!11529 = !DILocation(line: 3110, column: 7, scope: !11521)
!11530 = !DILocation(line: 0, scope: !11511)
!11531 = !DILocation(line: 3118, column: 3, scope: !11499)
!11532 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10790, file: !10790, line: 3143, type: !11428, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11533)
!11533 = !{!11534}
!11534 = !DILocalVariable(name: "tickstart", scope: !11532, file: !10790, line: 3145, type: !156)
!11535 = !DILocation(line: 3148, column: 15, scope: !11532)
!11536 = !DILocation(line: 0, scope: !11532)
!11537 = !DILocation(line: 3151, column: 3, scope: !11532)
!11538 = !DILocation(line: 3154, column: 3, scope: !11532)
!11539 = !DILocation(line: 3154, column: 10, scope: !11532)
!11540 = !DILocation(line: 3154, column: 43, scope: !11532)
!11541 = !DILocation(line: 3156, column: 10, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !10790, line: 3156, column: 9)
!11543 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3155, column: 3)
!11544 = !DILocation(line: 3156, column: 24, scope: !11542)
!11545 = !DILocation(line: 3156, column: 37, scope: !11542)
!11546 = !DILocation(line: 3156, column: 9, scope: !11543)
!11547 = distinct !{!11547, !11538, !11548}
!11548 = !DILocation(line: 3160, column: 3, scope: !11532)
!11549 = !DILocation(line: 3163, column: 3, scope: !11532)
!11550 = !DILocation(line: 3166, column: 15, scope: !11532)
!11551 = !DILocation(line: 3169, column: 3, scope: !11532)
!11552 = !DILocation(line: 3172, column: 3, scope: !11532)
!11553 = !DILocation(line: 3172, column: 10, scope: !11532)
!11554 = !DILocation(line: 3172, column: 44, scope: !11532)
!11555 = !DILocation(line: 3174, column: 24, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !10790, line: 3174, column: 9)
!11557 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3173, column: 3)
!11558 = !DILocation(line: 3174, column: 37, scope: !11556)
!11559 = !DILocation(line: 3174, column: 9, scope: !11557)
!11560 = distinct !{!11560, !11552, !11561}
!11561 = !DILocation(line: 3178, column: 3, scope: !11532)
!11562 = !DILocation(line: 3184, column: 3, scope: !11532)
!11563 = !DILocation(line: 3187, column: 3, scope: !11532)
!11564 = !DILocation(line: 3187, column: 10, scope: !11532)
!11565 = !DILocation(line: 3187, column: 43, scope: !11532)
!11566 = !DILocation(line: 3189, column: 24, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !10790, line: 3189, column: 9)
!11568 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3188, column: 3)
!11569 = !DILocation(line: 3189, column: 37, scope: !11567)
!11570 = !DILocation(line: 3189, column: 9, scope: !11568)
!11571 = distinct !{!11571, !11563, !11572}
!11572 = !DILocation(line: 3193, column: 3, scope: !11532)
!11573 = !DILocation(line: 3199, column: 3, scope: !11532)
!11574 = !DILocation(line: 3202, column: 3, scope: !11532)
!11575 = !DILocation(line: 3202, column: 10, scope: !11532)
!11576 = !DILocation(line: 3202, column: 43, scope: !11532)
!11577 = !DILocation(line: 3204, column: 24, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !10790, line: 3204, column: 9)
!11579 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3203, column: 3)
!11580 = !DILocation(line: 3204, column: 37, scope: !11578)
!11581 = !DILocation(line: 3204, column: 9, scope: !11579)
!11582 = distinct !{!11582, !11574, !11583}
!11583 = !DILocation(line: 3208, column: 3, scope: !11532)
!11584 = !DILocation(line: 3215, column: 3, scope: !11532)
!11585 = !DILocation(line: 3218, column: 3, scope: !11532)
!11586 = !DILocation(line: 3218, column: 10, scope: !11532)
!11587 = !DILocation(line: 3218, column: 46, scope: !11532)
!11588 = !DILocation(line: 3220, column: 24, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !10790, line: 3220, column: 9)
!11590 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3219, column: 3)
!11591 = !DILocation(line: 3220, column: 37, scope: !11589)
!11592 = !DILocation(line: 3220, column: 9, scope: !11590)
!11593 = distinct !{!11593, !11585, !11594}
!11594 = !DILocation(line: 3224, column: 3, scope: !11532)
!11595 = !DILocation(line: 3232, column: 3, scope: !11532)
!11596 = !DILocation(line: 3235, column: 3, scope: !11532)
!11597 = !DILocation(line: 3235, column: 10, scope: !11532)
!11598 = !DILocation(line: 3235, column: 46, scope: !11532)
!11599 = !DILocation(line: 3237, column: 10, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11601, file: !10790, line: 3237, column: 9)
!11601 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3236, column: 3)
!11602 = !DILocation(line: 3237, column: 24, scope: !11600)
!11603 = !DILocation(line: 3237, column: 37, scope: !11600)
!11604 = !DILocation(line: 3237, column: 9, scope: !11601)
!11605 = distinct !{!11605, !11596, !11606}
!11606 = !DILocation(line: 3241, column: 3, scope: !11532)
!11607 = !DILocation(line: 3247, column: 16, scope: !11532)
!11608 = !DILocation(line: 3257, column: 19, scope: !11532)
!11609 = !DILocation(line: 3270, column: 19, scope: !11532)
!11610 = !DILocation(line: 3274, column: 3, scope: !11532)
!11611 = !DILocation(line: 3277, column: 3, scope: !11532)
!11612 = !DILocation(line: 3281, column: 3, scope: !11532)
!11613 = !DILocation(line: 3285, column: 3, scope: !11532)
!11614 = !DILocation(line: 3288, column: 3, scope: !11532)
!11615 = !DILocation(line: 3292, column: 3, scope: !11532)
!11616 = !DILocation(line: 3296, column: 3, scope: !11532)
!11617 = !DILocation(line: 3299, column: 3, scope: !11532)
!11618 = !DILocation(line: 3302, column: 19, scope: !11532)
!11619 = !DILocation(line: 3305, column: 19, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11532, file: !10790, line: 3305, column: 6)
!11621 = !DILocation(line: 3305, column: 6, scope: !11620)
!11622 = !DILocation(line: 3305, column: 31, scope: !11620)
!11623 = !DILocation(line: 0, scope: !11620)
!11624 = !DILocation(line: 3313, column: 1, scope: !11532)
!11625 = !DISubprogram(name: "HAL_InitTick", scope: !11165, file: !11165, line: 223, type: !11626, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{!10793, !156}
!11628 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10790, file: !10790, line: 3333, type: !11629, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !11653)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!10793, !11631}
!11631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11632, size: 32)
!11632 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11633, line: 70, baseType: !11634)
!11633 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11633, line: 49, size: 416, elements: !11635)
!11635 = !{!11636, !11637, !11638, !11639, !11640, !11641, !11642}
!11636 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11634, file: !11633, line: 51, baseType: !156, size: 32)
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11634, file: !11633, line: 54, baseType: !156, size: 32, offset: 32)
!11638 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11634, file: !11633, line: 57, baseType: !156, size: 32, offset: 64)
!11639 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11634, file: !11633, line: 60, baseType: !156, size: 32, offset: 96)
!11640 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11634, file: !11633, line: 63, baseType: !156, size: 32, offset: 128)
!11641 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11634, file: !11633, line: 66, baseType: !156, size: 32, offset: 160)
!11642 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11634, file: !11633, line: 69, baseType: !11643, size: 224, offset: 192)
!11643 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10796, line: 73, baseType: !11644)
!11644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10796, line: 45, size: 224, elements: !11645)
!11645 = !{!11646, !11647, !11648, !11649, !11650, !11651, !11652}
!11646 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11644, file: !10796, line: 47, baseType: !156, size: 32)
!11647 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11644, file: !10796, line: 50, baseType: !156, size: 32, offset: 32)
!11648 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11644, file: !10796, line: 53, baseType: !156, size: 32, offset: 64)
!11649 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11644, file: !10796, line: 56, baseType: !156, size: 32, offset: 96)
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11644, file: !10796, line: 60, baseType: !156, size: 32, offset: 128)
!11651 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11644, file: !10796, line: 63, baseType: !156, size: 32, offset: 160)
!11652 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11644, file: !10796, line: 68, baseType: !156, size: 32, offset: 192)
!11653 = !{!11654, !11655, !11656, !11657, !11661}
!11654 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11628, file: !10790, line: 3333, type: !11631)
!11655 = !DILocalVariable(name: "tickstart", scope: !11628, file: !10790, line: 3335, type: !156)
!11656 = !DILocalVariable(name: "pll_config", scope: !11628, file: !10790, line: 3335, type: !156)
!11657 = !DILocalVariable(name: "pwrclkchanged", scope: !11658, file: !10790, line: 3517, type: !11660)
!11658 = distinct !DILexicalBlock(scope: !11659, file: !10790, line: 3516, column: 3)
!11659 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3515, column: 6)
!11660 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !965, line: 188, baseType: !3055)
!11661 = !DILocalVariable(name: "tmpreg", scope: !11662, file: !10790, line: 3526, type: !452)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !10790, line: 3526, column: 7)
!11663 = distinct !DILexicalBlock(scope: !11664, file: !10790, line: 3525, column: 5)
!11664 = distinct !DILexicalBlock(scope: !11658, file: !10790, line: 3524, column: 8)
!11665 = !DILocation(line: 0, scope: !11628)
!11666 = !DILocation(line: 3338, column: 24, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3338, column: 6)
!11668 = !DILocation(line: 3338, column: 6, scope: !11628)
!11669 = !DILocation(line: 3346, column: 27, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3346, column: 6)
!11671 = !DILocation(line: 3346, column: 43, scope: !11670)
!11672 = !DILocation(line: 3346, column: 69, scope: !11670)
!11673 = !DILocation(line: 3346, column: 6, scope: !11628)
!11674 = !DILocation(line: 3352, column: 9, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !10790, line: 3352, column: 8)
!11676 = distinct !DILexicalBlock(scope: !11670, file: !10790, line: 3347, column: 3)
!11677 = !DILocation(line: 3352, column: 39, scope: !11675)
!11678 = !DILocation(line: 3352, column: 128, scope: !11675)
!11679 = !DILocation(line: 3353, column: 9, scope: !11675)
!11680 = !DILocation(line: 3353, column: 39, scope: !11675)
!11681 = !DILocation(line: 3353, column: 60, scope: !11675)
!11682 = !DILocation(line: 3353, column: 70, scope: !11675)
!11683 = !DILocation(line: 3353, column: 78, scope: !11675)
!11684 = !DILocation(line: 3353, column: 100, scope: !11675)
!11685 = !DILocation(line: 3353, column: 128, scope: !11675)
!11686 = !DILocation(line: 3354, column: 9, scope: !11675)
!11687 = !DILocation(line: 3354, column: 39, scope: !11675)
!11688 = !DILocation(line: 3354, column: 61, scope: !11675)
!11689 = !DILocation(line: 3354, column: 71, scope: !11675)
!11690 = !DILocation(line: 3354, column: 79, scope: !11675)
!11691 = !DILocation(line: 3354, column: 101, scope: !11675)
!11692 = !DILocation(line: 3352, column: 8, scope: !11676)
!11693 = !DILocation(line: 3360, column: 11, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !10790, line: 3360, column: 10)
!11695 = distinct !DILexicalBlock(scope: !11675, file: !10790, line: 3359, column: 5)
!11696 = !DILocation(line: 3360, column: 57, scope: !11694)
!11697 = !DILocation(line: 3360, column: 80, scope: !11694)
!11698 = !DILocation(line: 3360, column: 89, scope: !11694)
!11699 = !DILocation(line: 3360, column: 10, scope: !11695)
!11700 = !DILocation(line: 3368, column: 7, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !10790, line: 3368, column: 7)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !10790, line: 3368, column: 7)
!11703 = distinct !DILexicalBlock(scope: !11675, file: !10790, line: 3366, column: 5)
!11704 = !DILocation(line: 3368, column: 7, scope: !11702)
!11705 = !DILocation(line: 3368, column: 7, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11701, file: !10790, line: 3368, column: 7)
!11707 = !DILocation(line: 3368, column: 7, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !10790, line: 3368, column: 7)
!11709 = distinct !DILexicalBlock(scope: !11701, file: !10790, line: 3368, column: 7)
!11710 = !DILocation(line: 3368, column: 7, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11709, file: !10790, line: 3368, column: 7)
!11712 = !DILocation(line: 0, scope: !11701)
!11713 = !DILocation(line: 3371, column: 30, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11703, file: !10790, line: 3371, column: 10)
!11715 = !DILocation(line: 3371, column: 40, scope: !11714)
!11716 = !DILocation(line: 0, scope: !11714)
!11717 = !DILocation(line: 3371, column: 10, scope: !11703)
!11718 = !DILocation(line: 3377, column: 15, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11714, file: !10790, line: 3372, column: 7)
!11720 = !DILocation(line: 3377, column: 51, scope: !11719)
!11721 = !DILocation(line: 3377, column: 9, scope: !11719)
!11722 = !DILocation(line: 3379, column: 15, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !10790, line: 3379, column: 14)
!11724 = distinct !DILexicalBlock(scope: !11719, file: !10790, line: 3378, column: 9)
!11725 = !DILocation(line: 3379, column: 29, scope: !11723)
!11726 = !DILocation(line: 3379, column: 43, scope: !11723)
!11727 = !DILocation(line: 3379, column: 14, scope: !11724)
!11728 = distinct !{!11728, !11721, !11729}
!11729 = !DILocation(line: 3383, column: 9, scope: !11719)
!11730 = !DILocation(line: 3391, column: 15, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11714, file: !10790, line: 3386, column: 7)
!11732 = !DILocation(line: 3391, column: 9, scope: !11731)
!11733 = !DILocation(line: 3393, column: 15, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !10790, line: 3393, column: 14)
!11735 = distinct !DILexicalBlock(scope: !11731, file: !10790, line: 3392, column: 9)
!11736 = !DILocation(line: 3393, column: 29, scope: !11734)
!11737 = !DILocation(line: 3393, column: 43, scope: !11734)
!11738 = !DILocation(line: 3393, column: 14, scope: !11735)
!11739 = distinct !{!11739, !11732, !11740}
!11740 = !DILocation(line: 3397, column: 9, scope: !11731)
!11741 = !DILocation(line: 3402, column: 27, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3402, column: 6)
!11743 = !DILocation(line: 3402, column: 43, scope: !11742)
!11744 = !DILocation(line: 3402, column: 69, scope: !11742)
!11745 = !DILocation(line: 3402, column: 6, scope: !11628)
!11746 = !DILocation(line: 3410, column: 9, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !10790, line: 3410, column: 8)
!11748 = distinct !DILexicalBlock(scope: !11742, file: !10790, line: 3403, column: 3)
!11749 = !DILocation(line: 3410, column: 39, scope: !11747)
!11750 = !DILocation(line: 3410, column: 128, scope: !11747)
!11751 = !DILocation(line: 3411, column: 9, scope: !11747)
!11752 = !DILocation(line: 3411, column: 39, scope: !11747)
!11753 = !DILocation(line: 3411, column: 60, scope: !11747)
!11754 = !DILocation(line: 3411, column: 70, scope: !11747)
!11755 = !DILocation(line: 3411, column: 78, scope: !11747)
!11756 = !DILocation(line: 3411, column: 100, scope: !11747)
!11757 = !DILocation(line: 3411, column: 128, scope: !11747)
!11758 = !DILocation(line: 3412, column: 9, scope: !11747)
!11759 = !DILocation(line: 3412, column: 39, scope: !11747)
!11760 = !DILocation(line: 3412, column: 61, scope: !11747)
!11761 = !DILocation(line: 3412, column: 71, scope: !11747)
!11762 = !DILocation(line: 3412, column: 79, scope: !11747)
!11763 = !DILocation(line: 3412, column: 101, scope: !11747)
!11764 = !DILocation(line: 3410, column: 8, scope: !11748)
!11765 = !DILocation(line: 3419, column: 11, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11767, file: !10790, line: 3419, column: 10)
!11767 = distinct !DILexicalBlock(scope: !11747, file: !10790, line: 3417, column: 5)
!11768 = !DILocation(line: 3419, column: 57, scope: !11766)
!11769 = !DILocation(line: 3419, column: 80, scope: !11766)
!11770 = !DILocation(line: 3419, column: 89, scope: !11766)
!11771 = !DILocation(line: 3419, column: 10, scope: !11767)
!11772 = !DILocation(line: 3433, column: 30, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !10790, line: 3433, column: 10)
!11774 = distinct !DILexicalBlock(scope: !11747, file: !10790, line: 3431, column: 5)
!11775 = !DILocation(line: 3433, column: 39, scope: !11773)
!11776 = !DILocation(line: 3433, column: 10, scope: !11774)
!11777 = !DILocation(line: 3436, column: 9, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11773, file: !10790, line: 3434, column: 7)
!11779 = !DILocation(line: 3439, column: 21, scope: !11778)
!11780 = !DILocation(line: 3442, column: 9, scope: !11778)
!11781 = !DILocation(line: 3442, column: 15, scope: !11778)
!11782 = !DILocation(line: 3442, column: 51, scope: !11778)
!11783 = !DILocation(line: 3444, column: 15, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !10790, line: 3444, column: 14)
!11785 = distinct !DILexicalBlock(scope: !11778, file: !10790, line: 3443, column: 9)
!11786 = !DILocation(line: 3444, column: 29, scope: !11784)
!11787 = !DILocation(line: 3444, column: 43, scope: !11784)
!11788 = !DILocation(line: 3444, column: 14, scope: !11785)
!11789 = distinct !{!11789, !11780, !11790}
!11790 = !DILocation(line: 3448, column: 9, scope: !11778)
!11791 = !DILocation(line: 3456, column: 9, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11773, file: !10790, line: 3454, column: 7)
!11793 = !DILocation(line: 3459, column: 21, scope: !11792)
!11794 = !DILocation(line: 3462, column: 9, scope: !11792)
!11795 = !DILocation(line: 3462, column: 15, scope: !11792)
!11796 = !DILocation(line: 3464, column: 15, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !10790, line: 3464, column: 14)
!11798 = distinct !DILexicalBlock(scope: !11792, file: !10790, line: 3463, column: 9)
!11799 = !DILocation(line: 3464, column: 29, scope: !11797)
!11800 = !DILocation(line: 3464, column: 43, scope: !11797)
!11801 = !DILocation(line: 3464, column: 14, scope: !11798)
!11802 = distinct !{!11802, !11794, !11803}
!11803 = !DILocation(line: 3468, column: 9, scope: !11792)
!11804 = !DILocation(line: 0, scope: !11747)
!11805 = !DILocation(line: 3473, column: 27, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3473, column: 6)
!11807 = !DILocation(line: 3473, column: 43, scope: !11806)
!11808 = !DILocation(line: 3473, column: 69, scope: !11806)
!11809 = !DILocation(line: 3473, column: 6, scope: !11628)
!11810 = !DILocation(line: 3479, column: 28, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !10790, line: 3479, column: 8)
!11812 = distinct !DILexicalBlock(scope: !11806, file: !10790, line: 3474, column: 3)
!11813 = !DILocation(line: 3479, column: 37, scope: !11811)
!11814 = !DILocation(line: 3479, column: 8, scope: !11812)
!11815 = !DILocation(line: 3482, column: 7, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11811, file: !10790, line: 3480, column: 5)
!11817 = !DILocation(line: 3485, column: 19, scope: !11816)
!11818 = !DILocation(line: 3488, column: 7, scope: !11816)
!11819 = !DILocation(line: 3488, column: 13, scope: !11816)
!11820 = !DILocation(line: 3488, column: 49, scope: !11816)
!11821 = !DILocation(line: 3490, column: 13, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !10790, line: 3490, column: 12)
!11823 = distinct !DILexicalBlock(scope: !11816, file: !10790, line: 3489, column: 7)
!11824 = !DILocation(line: 3490, column: 27, scope: !11822)
!11825 = !DILocation(line: 3490, column: 41, scope: !11822)
!11826 = !DILocation(line: 3490, column: 12, scope: !11823)
!11827 = distinct !{!11827, !11818, !11828}
!11828 = !DILocation(line: 3494, column: 7, scope: !11816)
!11829 = !DILocation(line: 3499, column: 7, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11811, file: !10790, line: 3497, column: 5)
!11831 = !DILocation(line: 3502, column: 19, scope: !11830)
!11832 = !DILocation(line: 3505, column: 7, scope: !11830)
!11833 = !DILocation(line: 3505, column: 13, scope: !11830)
!11834 = !DILocation(line: 3507, column: 13, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !10790, line: 3507, column: 12)
!11836 = distinct !DILexicalBlock(scope: !11830, file: !10790, line: 3506, column: 7)
!11837 = !DILocation(line: 3507, column: 27, scope: !11835)
!11838 = !DILocation(line: 3507, column: 41, scope: !11835)
!11839 = !DILocation(line: 3507, column: 12, scope: !11836)
!11840 = distinct !{!11840, !11832, !11841}
!11841 = !DILocation(line: 3511, column: 7, scope: !11830)
!11842 = !DILocation(line: 3515, column: 27, scope: !11659)
!11843 = !DILocation(line: 3515, column: 43, scope: !11659)
!11844 = !DILocation(line: 3515, column: 69, scope: !11659)
!11845 = !DILocation(line: 3515, column: 6, scope: !11628)
!11846 = !DILocation(line: 0, scope: !11658)
!11847 = !DILocation(line: 3524, column: 8, scope: !11664)
!11848 = !DILocation(line: 3524, column: 8, scope: !11658)
!11849 = !DILocation(line: 3526, column: 7, scope: !11662)
!11850 = !DILocation(line: 3526, column: 7, scope: !11663)
!11851 = !DILocation(line: 3528, column: 5, scope: !11663)
!11852 = !DILocation(line: 3530, column: 8, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11658, file: !10790, line: 3530, column: 8)
!11854 = !DILocation(line: 3530, column: 8, scope: !11658)
!11855 = !DILocation(line: 3533, column: 7, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11853, file: !10790, line: 3531, column: 5)
!11857 = !DILocation(line: 3536, column: 19, scope: !11856)
!11858 = !DILocation(line: 3538, column: 7, scope: !11856)
!11859 = !DILocation(line: 3538, column: 13, scope: !11856)
!11860 = !DILocation(line: 3540, column: 13, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !10790, line: 3540, column: 12)
!11862 = distinct !DILexicalBlock(scope: !11856, file: !10790, line: 3539, column: 7)
!11863 = !DILocation(line: 3540, column: 27, scope: !11861)
!11864 = !DILocation(line: 3540, column: 40, scope: !11861)
!11865 = !DILocation(line: 3540, column: 12, scope: !11862)
!11866 = distinct !{!11866, !11858, !11867}
!11867 = !DILocation(line: 3544, column: 7, scope: !11856)
!11868 = !DILocation(line: 3548, column: 5, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11870, file: !10790, line: 3548, column: 5)
!11870 = distinct !DILexicalBlock(scope: !11658, file: !10790, line: 3548, column: 5)
!11871 = !DILocation(line: 3548, column: 5, scope: !11870)
!11872 = !DILocation(line: 3548, column: 5, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11869, file: !10790, line: 3548, column: 5)
!11874 = !DILocation(line: 3548, column: 5, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !10790, line: 3548, column: 5)
!11876 = distinct !DILexicalBlock(scope: !11869, file: !10790, line: 3548, column: 5)
!11877 = !DILocation(line: 3548, column: 5, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11876, file: !10790, line: 3548, column: 5)
!11879 = !DILocation(line: 0, scope: !11869)
!11880 = !DILocation(line: 3550, column: 28, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11658, file: !10790, line: 3550, column: 8)
!11882 = !DILocation(line: 3550, column: 38, scope: !11881)
!11883 = !DILocation(line: 0, scope: !11881)
!11884 = !DILocation(line: 3550, column: 8, scope: !11658)
!11885 = !DILocation(line: 3556, column: 13, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11881, file: !10790, line: 3551, column: 5)
!11887 = !DILocation(line: 3556, column: 49, scope: !11886)
!11888 = !DILocation(line: 3556, column: 7, scope: !11886)
!11889 = !DILocation(line: 3558, column: 13, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !10790, line: 3558, column: 12)
!11891 = distinct !DILexicalBlock(scope: !11886, file: !10790, line: 3557, column: 7)
!11892 = !DILocation(line: 3558, column: 27, scope: !11890)
!11893 = !DILocation(line: 3558, column: 41, scope: !11890)
!11894 = !DILocation(line: 3558, column: 12, scope: !11891)
!11895 = distinct !{!11895, !11888, !11896}
!11896 = !DILocation(line: 3562, column: 7, scope: !11886)
!11897 = !DILocation(line: 3570, column: 13, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11881, file: !10790, line: 3565, column: 5)
!11899 = !DILocation(line: 3570, column: 7, scope: !11898)
!11900 = !DILocation(line: 3572, column: 13, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11902, file: !10790, line: 3572, column: 12)
!11902 = distinct !DILexicalBlock(scope: !11898, file: !10790, line: 3571, column: 7)
!11903 = !DILocation(line: 3572, column: 27, scope: !11901)
!11904 = !DILocation(line: 3572, column: 41, scope: !11901)
!11905 = !DILocation(line: 3572, column: 12, scope: !11902)
!11906 = distinct !{!11906, !11899, !11907}
!11907 = !DILocation(line: 3576, column: 7, scope: !11898)
!11908 = !DILocation(line: 3580, column: 8, scope: !11658)
!11909 = !DILocation(line: 3582, column: 7, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !10790, line: 3581, column: 5)
!11911 = distinct !DILexicalBlock(scope: !11658, file: !10790, line: 3580, column: 8)
!11912 = !DILocation(line: 3583, column: 5, scope: !11910)
!11913 = !DILocation(line: 3588, column: 31, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11628, file: !10790, line: 3588, column: 7)
!11915 = !DILocation(line: 3588, column: 41, scope: !11914)
!11916 = !DILocation(line: 3588, column: 7, scope: !11628)
!11917 = !DILocation(line: 3591, column: 8, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11919, file: !10790, line: 3591, column: 8)
!11919 = distinct !DILexicalBlock(scope: !11914, file: !10790, line: 3589, column: 3)
!11920 = !DILocation(line: 3591, column: 38, scope: !11918)
!11921 = !DILocation(line: 3591, column: 8, scope: !11919)
!11922 = !DILocation(line: 3593, column: 44, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11924, file: !10790, line: 3593, column: 10)
!11924 = distinct !DILexicalBlock(scope: !11918, file: !10790, line: 3592, column: 5)
!11925 = !DILocation(line: 0, scope: !11923)
!11926 = !DILocation(line: 3593, column: 10, scope: !11924)
!11927 = !DILocation(line: 3610, column: 15, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11923, file: !10790, line: 3594, column: 7)
!11929 = !DILocation(line: 3610, column: 9, scope: !11928)
!11930 = !DILocation(line: 3612, column: 15, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !10790, line: 3612, column: 14)
!11932 = distinct !DILexicalBlock(scope: !11928, file: !10790, line: 3611, column: 9)
!11933 = !DILocation(line: 3612, column: 29, scope: !11931)
!11934 = !DILocation(line: 3612, column: 43, scope: !11931)
!11935 = !DILocation(line: 3612, column: 14, scope: !11932)
!11936 = distinct !{!11936, !11929, !11937}
!11937 = !DILocation(line: 3616, column: 9, scope: !11928)
!11938 = !DILocation(line: 3619, column: 9, scope: !11928)
!11939 = !DILocation(line: 3626, column: 9, scope: !11928)
!11940 = !DILocation(line: 3629, column: 21, scope: !11928)
!11941 = !DILocation(line: 3632, column: 9, scope: !11928)
!11942 = !DILocation(line: 3632, column: 15, scope: !11928)
!11943 = !DILocation(line: 3632, column: 51, scope: !11928)
!11944 = !DILocation(line: 3634, column: 15, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !10790, line: 3634, column: 14)
!11946 = distinct !DILexicalBlock(scope: !11928, file: !10790, line: 3633, column: 9)
!11947 = !DILocation(line: 3634, column: 29, scope: !11945)
!11948 = !DILocation(line: 3634, column: 43, scope: !11945)
!11949 = !DILocation(line: 3634, column: 14, scope: !11946)
!11950 = distinct !{!11950, !11941, !11951}
!11951 = !DILocation(line: 3638, column: 9, scope: !11928)
!11952 = !DILocation(line: 3649, column: 15, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11923, file: !10790, line: 3641, column: 7)
!11954 = !DILocation(line: 3649, column: 9, scope: !11953)
!11955 = !DILocation(line: 3651, column: 15, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !10790, line: 3651, column: 14)
!11957 = distinct !DILexicalBlock(scope: !11953, file: !10790, line: 3650, column: 9)
!11958 = !DILocation(line: 3651, column: 29, scope: !11956)
!11959 = !DILocation(line: 3651, column: 43, scope: !11956)
!11960 = !DILocation(line: 3651, column: 14, scope: !11957)
!11961 = distinct !{!11961, !11954, !11962}
!11962 = !DILocation(line: 3655, column: 9, scope: !11953)
!11963 = !DILocation(line: 3661, column: 44, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !10790, line: 3661, column: 10)
!11965 = distinct !DILexicalBlock(scope: !11918, file: !10790, line: 3659, column: 5)
!11966 = !DILocation(line: 3661, column: 10, scope: !11965)
!11967 = !DILocation(line: 3668, column: 27, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11964, file: !10790, line: 3666, column: 7)
!11969 = !DILocation(line: 3671, column: 14, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11968, file: !10790, line: 3670, column: 13)
!11971 = !DILocation(line: 3671, column: 81, scope: !11970)
!11972 = !DILocation(line: 3671, column: 55, scope: !11970)
!11973 = !DILocation(line: 3671, column: 92, scope: !11970)
!11974 = !DILocation(line: 3672, column: 14, scope: !11970)
!11975 = !DILocation(line: 3672, column: 80, scope: !11970)
!11976 = !DILocation(line: 3672, column: 53, scope: !11970)
!11977 = !DILocation(line: 3672, column: 111, scope: !11970)
!11978 = !DILocation(line: 3673, column: 14, scope: !11970)
!11979 = !DILocation(line: 3673, column: 80, scope: !11970)
!11980 = !DILocation(line: 3673, column: 86, scope: !11970)
!11981 = !DILocation(line: 3673, column: 53, scope: !11970)
!11982 = !DILocation(line: 3673, column: 111, scope: !11970)
!11983 = !DILocation(line: 3674, column: 14, scope: !11970)
!11984 = !DILocation(line: 3674, column: 82, scope: !11970)
!11985 = !DILocation(line: 3674, column: 101, scope: !11970)
!11986 = !DILocation(line: 3674, column: 53, scope: !11970)
!11987 = !DILocation(line: 3674, column: 126, scope: !11970)
!11988 = !DILocation(line: 3675, column: 14, scope: !11970)
!11989 = !DILocation(line: 3675, column: 80, scope: !11970)
!11990 = !DILocation(line: 3675, column: 85, scope: !11970)
!11991 = !DILocation(line: 3675, column: 53, scope: !11970)
!11992 = !DILocation(line: 3675, column: 111, scope: !11970)
!11993 = !DILocation(line: 3676, column: 14, scope: !11970)
!11994 = !DILocation(line: 3676, column: 80, scope: !11970)
!11995 = !DILocation(line: 3676, column: 85, scope: !11970)
!11996 = !DILocation(line: 3676, column: 53, scope: !11970)
!11997 = !DILocation(line: 3670, column: 13, scope: !11968)
!11998 = !DILocation(line: 3691, column: 3, scope: !11628)
!11999 = !DILocation(line: 3692, column: 1, scope: !11628)
!12000 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10790, file: !10790, line: 3703, type: !12001, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3045, retainedNodes: !12003)
!12001 = !DISubroutineType(types: !12002)
!12002 = !{null, !11631}
!12003 = !{!12004}
!12004 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12000, file: !10790, line: 3703, type: !11631)
!12005 = !DILocation(line: 0, scope: !12000)
!12006 = !DILocation(line: 3706, column: 22, scope: !12000)
!12007 = !DILocation(line: 3706, column: 37, scope: !12000)
!12008 = !DILocation(line: 3709, column: 12, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12000, file: !10790, line: 3709, column: 6)
!12010 = !DILocation(line: 3709, column: 15, scope: !12009)
!12011 = !DILocation(line: 3709, column: 31, scope: !12009)
!12012 = !DILocation(line: 3709, column: 6, scope: !12000)
!12013 = !DILocation(line: 3711, column: 24, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12009, file: !10790, line: 3710, column: 3)
!12015 = !DILocation(line: 3711, column: 33, scope: !12014)
!12016 = !DILocation(line: 3712, column: 3, scope: !12014)
!12017 = !DILocation(line: 3713, column: 17, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12009, file: !10790, line: 3713, column: 11)
!12019 = !DILocation(line: 3713, column: 20, scope: !12018)
!12020 = !DILocation(line: 3713, column: 35, scope: !12018)
!12021 = !DILocation(line: 0, scope: !12018)
!12022 = !DILocation(line: 3713, column: 11, scope: !12009)
!12023 = !DILocation(line: 3715, column: 33, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12018, file: !10790, line: 3714, column: 3)
!12025 = !DILocation(line: 3716, column: 3, scope: !12024)
!12026 = !DILocation(line: 3719, column: 33, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12018, file: !10790, line: 3718, column: 3)
!12028 = !DILocation(line: 3723, column: 12, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12000, file: !10790, line: 3723, column: 6)
!12030 = !DILocation(line: 3723, column: 15, scope: !12029)
!12031 = !DILocation(line: 3729, column: 24, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12029, file: !10790, line: 3728, column: 3)
!12033 = !DILocation(line: 3729, column: 33, scope: !12032)
!12034 = !DILocation(line: 3732, column: 61, scope: !12000)
!12035 = !DILocation(line: 3732, column: 81, scope: !12000)
!12036 = !DILocation(line: 3732, column: 22, scope: !12000)
!12037 = !DILocation(line: 3732, column: 42, scope: !12000)
!12038 = !DILocation(line: 3735, column: 12, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12000, file: !10790, line: 3735, column: 6)
!12040 = !DILocation(line: 3735, column: 17, scope: !12039)
!12041 = !DILocation(line: 3735, column: 35, scope: !12039)
!12042 = !DILocation(line: 3735, column: 6, scope: !12000)
!12043 = !DILocation(line: 3737, column: 24, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12039, file: !10790, line: 3736, column: 3)
!12045 = !DILocation(line: 3737, column: 33, scope: !12044)
!12046 = !DILocation(line: 3738, column: 3, scope: !12044)
!12047 = !DILocation(line: 3739, column: 17, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12039, file: !10790, line: 3739, column: 11)
!12049 = !DILocation(line: 3739, column: 22, scope: !12048)
!12050 = !DILocation(line: 3739, column: 39, scope: !12048)
!12051 = !DILocation(line: 0, scope: !12048)
!12052 = !DILocation(line: 3739, column: 11, scope: !12039)
!12053 = !DILocation(line: 3741, column: 33, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12048, file: !10790, line: 3740, column: 3)
!12055 = !DILocation(line: 3742, column: 3, scope: !12054)
!12056 = !DILocation(line: 3745, column: 33, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12048, file: !10790, line: 3744, column: 3)
!12058 = !DILocation(line: 3749, column: 12, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12000, file: !10790, line: 3749, column: 6)
!12060 = !DILocation(line: 3749, column: 16, scope: !12059)
!12061 = !DILocation(line: 3755, column: 24, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12059, file: !10790, line: 3754, column: 3)
!12063 = !DILocation(line: 3755, column: 33, scope: !12062)
!12064 = !DILocation(line: 3759, column: 12, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12000, file: !10790, line: 3759, column: 6)
!12066 = !DILocation(line: 3759, column: 15, scope: !12065)
!12067 = !DILocation(line: 3759, column: 30, scope: !12065)
!12068 = !DILocation(line: 3759, column: 6, scope: !12000)
!12069 = !DILocation(line: 3765, column: 28, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12065, file: !10790, line: 3764, column: 3)
!12071 = !DILocation(line: 3765, column: 37, scope: !12070)
!12072 = !DILocation(line: 3767, column: 54, scope: !12000)
!12073 = !DILocation(line: 3767, column: 62, scope: !12000)
!12074 = !DILocation(line: 3767, column: 26, scope: !12000)
!12075 = !DILocation(line: 3767, column: 36, scope: !12000)
!12076 = !DILocation(line: 3768, column: 49, scope: !12000)
!12077 = !DILocation(line: 3768, column: 57, scope: !12000)
!12078 = !DILocation(line: 3768, column: 26, scope: !12000)
!12079 = !DILocation(line: 3768, column: 31, scope: !12000)
!12080 = !DILocation(line: 3769, column: 50, scope: !12000)
!12081 = !DILocation(line: 3769, column: 78, scope: !12000)
!12082 = !DILocation(line: 3769, column: 26, scope: !12000)
!12083 = !DILocation(line: 3769, column: 31, scope: !12000)
!12084 = !DILocation(line: 3770, column: 52, scope: !12000)
!12085 = !DILocation(line: 3770, column: 102, scope: !12000)
!12086 = !DILocation(line: 3770, column: 109, scope: !12000)
!12087 = !DILocation(line: 3770, column: 26, scope: !12000)
!12088 = !DILocation(line: 3770, column: 31, scope: !12000)
!12089 = !DILocation(line: 3771, column: 50, scope: !12000)
!12090 = !DILocation(line: 3771, column: 78, scope: !12000)
!12091 = !DILocation(line: 3771, column: 26, scope: !12000)
!12092 = !DILocation(line: 3771, column: 31, scope: !12000)
!12093 = !DILocation(line: 3772, column: 50, scope: !12000)
!12094 = !DILocation(line: 3772, column: 78, scope: !12000)
!12095 = !DILocation(line: 3772, column: 26, scope: !12000)
!12096 = !DILocation(line: 3772, column: 31, scope: !12000)
!12097 = !DILocation(line: 3773, column: 1, scope: !12000)
!12098 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12099, file: !12099, line: 257, type: !6507, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12100)
!12099 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12098, file: !12099, line: 257, type: !156)
!12102 = !DILocation(line: 0, scope: !12098)
!12103 = !DILocation(line: 260, column: 3, scope: !12098)
!12104 = !DILocation(line: 261, column: 1, scope: !12098)
!12105 = distinct !DISubprogram(name: "LL_InitTick", scope: !12106, file: !12106, line: 260, type: !9182, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12107)
!12106 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12107 = !{!12108, !12109}
!12108 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12105, file: !12106, line: 260, type: !156)
!12109 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12105, file: !12106, line: 260, type: !156)
!12110 = !DILocation(line: 0, scope: !12105)
!12111 = !DILocation(line: 263, column: 46, scope: !12105)
!12112 = !DILocation(line: 263, column: 55, scope: !12105)
!12113 = !DILocation(line: 263, column: 18, scope: !12105)
!12114 = !DILocation(line: 264, column: 18, scope: !12105)
!12115 = !DILocation(line: 265, column: 18, scope: !12105)
!12116 = !DILocation(line: 267, column: 1, scope: !12105)
!12117 = distinct !DISubprogram(name: "LL_mDelay", scope: !12099, file: !12099, line: 273, type: !6507, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12118)
!12118 = !{!12119, !12120}
!12119 = !DILocalVariable(name: "Delay", arg: 1, scope: !12117, file: !12099, line: 273, type: !156)
!12120 = !DILocalVariable(name: "tmp", scope: !12117, file: !12099, line: 275, type: !452)
!12121 = !DILocation(line: 0, scope: !12117)
!12122 = !DILocation(line: 275, column: 3, scope: !12117)
!12123 = !DILocation(line: 275, column: 18, scope: !12117)
!12124 = !DILocation(line: 275, column: 33, scope: !12117)
!12125 = !DILocation(line: 277, column: 10, scope: !12117)
!12126 = !DILocation(line: 280, column: 12, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12117, file: !12099, line: 280, column: 6)
!12128 = !DILocation(line: 285, column: 3, scope: !12117)
!12129 = !DILocation(line: 287, column: 18, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !12099, line: 287, column: 8)
!12131 = distinct !DILexicalBlock(scope: !12117, file: !12099, line: 286, column: 3)
!12132 = !DILocation(line: 292, column: 1, scope: !12117)
!12133 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12099, file: !12099, line: 323, type: !6507, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12134)
!12134 = !{!12135}
!12135 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12133, file: !12099, line: 323, type: !156)
!12136 = !DILocation(line: 0, scope: !12133)
!12137 = !DILocation(line: 326, column: 19, scope: !12133)
!12138 = !DILocation(line: 327, column: 1, scope: !12133)
!12139 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12099, file: !12099, line: 338, type: !12140, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12143)
!12140 = !DISubroutineType(types: !12141)
!12141 = !{!12142, !156}
!12142 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !965, line: 201, baseType: !964)
!12143 = !{!12144, !12145, !12146, !12147, !12148}
!12144 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12139, file: !12099, line: 338, type: !156)
!12145 = !DILocalVariable(name: "timeout", scope: !12139, file: !12099, line: 340, type: !156)
!12146 = !DILocalVariable(name: "getlatency", scope: !12139, file: !12099, line: 341, type: !156)
!12147 = !DILocalVariable(name: "latency", scope: !12139, file: !12099, line: 342, type: !156)
!12148 = !DILocalVariable(name: "status", scope: !12139, file: !12099, line: 343, type: !12142)
!12149 = !DILocation(line: 0, scope: !12139)
!12150 = !DILocation(line: 347, column: 21, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12139, file: !12099, line: 347, column: 6)
!12152 = !DILocation(line: 347, column: 6, scope: !12139)
!12153 = !DILocation(line: 353, column: 8, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12155, file: !12099, line: 353, column: 8)
!12155 = distinct !DILexicalBlock(scope: !12151, file: !12099, line: 352, column: 3)
!12156 = !DILocation(line: 353, column: 40, scope: !12154)
!12157 = !DILocation(line: 353, column: 8, scope: !12155)
!12158 = !DILocation(line: 356, column: 26, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !12099, line: 356, column: 10)
!12160 = distinct !DILexicalBlock(scope: !12154, file: !12099, line: 354, column: 5)
!12161 = !DILocation(line: 356, column: 55, scope: !12159)
!12162 = !DILocation(line: 362, column: 55, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !12099, line: 362, column: 10)
!12164 = !DILocation(line: 368, column: 55, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !12099, line: 368, column: 10)
!12166 = !DILocation(line: 374, column: 26, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12160, file: !12099, line: 374, column: 10)
!12168 = !DILocation(line: 374, column: 55, scope: !12167)
!12169 = !DILocation(line: 380, column: 28, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !12099, line: 380, column: 12)
!12171 = distinct !DILexicalBlock(scope: !12167, file: !12099, line: 379, column: 7)
!12172 = !DILocation(line: 380, column: 57, scope: !12170)
!12173 = !DILocation(line: 387, column: 8, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12155, file: !12099, line: 387, column: 8)
!12175 = !DILocation(line: 387, column: 40, scope: !12174)
!12176 = !DILocation(line: 387, column: 8, scope: !12155)
!12177 = !DILocation(line: 390, column: 26, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !12099, line: 390, column: 10)
!12179 = distinct !DILexicalBlock(scope: !12174, file: !12099, line: 388, column: 5)
!12180 = !DILocation(line: 390, column: 55, scope: !12178)
!12181 = !DILocation(line: 396, column: 26, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12179, file: !12099, line: 396, column: 10)
!12183 = !DILocation(line: 396, column: 55, scope: !12182)
!12184 = !DILocation(line: 402, column: 26, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12179, file: !12099, line: 402, column: 10)
!12186 = !DILocation(line: 402, column: 55, scope: !12185)
!12187 = !DILocation(line: 407, column: 26, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12179, file: !12099, line: 407, column: 10)
!12189 = !DILocation(line: 407, column: 55, scope: !12188)
!12190 = !DILocation(line: 413, column: 28, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !12099, line: 413, column: 12)
!12192 = distinct !DILexicalBlock(scope: !12188, file: !12099, line: 412, column: 7)
!12193 = !DILocation(line: 413, column: 57, scope: !12191)
!12194 = !DILocation(line: 0, scope: !12155)
!12195 = !DILocation(line: 420, column: 8, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12155, file: !12099, line: 420, column: 8)
!12197 = !DILocation(line: 420, column: 40, scope: !12196)
!12198 = !DILocation(line: 420, column: 8, scope: !12155)
!12199 = !DILocation(line: 423, column: 26, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !12099, line: 423, column: 10)
!12201 = distinct !DILexicalBlock(scope: !12196, file: !12099, line: 421, column: 5)
!12202 = !DILocation(line: 423, column: 55, scope: !12200)
!12203 = !DILocation(line: 429, column: 26, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12201, file: !12099, line: 429, column: 10)
!12205 = !DILocation(line: 429, column: 55, scope: !12204)
!12206 = !DILocation(line: 435, column: 28, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12208, file: !12099, line: 435, column: 12)
!12208 = distinct !DILexicalBlock(scope: !12204, file: !12099, line: 434, column: 7)
!12209 = !DILocation(line: 435, column: 57, scope: !12207)
!12210 = !DILocation(line: 444, column: 5, scope: !12155)
!12211 = !DILocation(line: 448, column: 5, scope: !12155)
!12212 = !DILocation(line: 451, column: 18, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12155, file: !12099, line: 449, column: 5)
!12214 = !DILocation(line: 452, column: 12, scope: !12213)
!12215 = !DILocation(line: 453, column: 26, scope: !12155)
!12216 = !DILocation(line: 453, column: 38, scope: !12155)
!12217 = !DILocation(line: 453, column: 5, scope: !12213)
!12218 = distinct !{!12218, !12211, !12219}
!12219 = !DILocation(line: 453, column: 54, scope: !12155)
!12220 = !DILocation(line: 0, scope: !12151)
!12221 = !DILocation(line: 464, column: 3, scope: !12139)
!12222 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12223, file: !12223, line: 519, type: !6497, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12224 = !DILocation(line: 521, column: 21, scope: !12222)
!12225 = !DILocation(line: 521, column: 3, scope: !12222)
!12226 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6257, file: !6257, line: 1543, type: !6507, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12227)
!12227 = !{!12228}
!12228 = !DILocalVariable(name: "Latency", arg: 1, scope: !12226, file: !6257, line: 1543, type: !156)
!12229 = !DILocation(line: 0, scope: !12226)
!12230 = !DILocation(line: 1545, column: 3, scope: !12226)
!12231 = !DILocation(line: 1546, column: 1, scope: !12226)
!12232 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6257, file: !6257, line: 1569, type: !6497, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12233 = !DILocation(line: 1571, column: 21, scope: !12232)
!12234 = !DILocation(line: 1571, column: 3, scope: !12232)
!12235 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12099, file: !12099, line: 483, type: !12236, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12252)
!12236 = !DISubroutineType(types: !12237)
!12237 = !{!12142, !12238, !12245}
!12238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12239, size: 32)
!12239 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12106, line: 114, baseType: !12240)
!12240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12106, line: 94, size: 96, elements: !12241)
!12241 = !{!12242, !12243, !12244}
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12240, file: !12106, line: 96, baseType: !156, size: 32)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12240, file: !12106, line: 102, baseType: !156, size: 32, offset: 32)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12240, file: !12106, line: 109, baseType: !156, size: 32, offset: 64)
!12245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12246, size: 32)
!12246 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12106, line: 139, baseType: !12247)
!12247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12106, line: 119, size: 96, elements: !12248)
!12248 = !{!12249, !12250, !12251}
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12247, file: !12106, line: 121, baseType: !156, size: 32)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12247, file: !12106, line: 127, baseType: !156, size: 32, offset: 32)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12247, file: !12106, line: 133, baseType: !156, size: 32, offset: 64)
!12252 = !{!12253, !12254, !12255, !12256}
!12253 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12235, file: !12099, line: 483, type: !12238)
!12254 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12235, file: !12099, line: 484, type: !12245)
!12255 = !DILocalVariable(name: "status", scope: !12235, file: !12099, line: 486, type: !12142)
!12256 = !DILocalVariable(name: "pllfreq", scope: !12235, file: !12099, line: 487, type: !156)
!12257 = !DILocation(line: 0, scope: !12235)
!12258 = !DILocation(line: 490, column: 6, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12235, file: !12099, line: 490, column: 6)
!12260 = !DILocation(line: 490, column: 25, scope: !12259)
!12261 = !DILocation(line: 490, column: 6, scope: !12235)
!12262 = !DILocation(line: 493, column: 15, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12259, file: !12099, line: 491, column: 3)
!12264 = !DILocation(line: 496, column: 8, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12263, file: !12099, line: 496, column: 8)
!12266 = !DILocation(line: 496, column: 29, scope: !12265)
!12267 = !DILocation(line: 496, column: 8, scope: !12263)
!12268 = !DILocation(line: 498, column: 7, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12265, file: !12099, line: 497, column: 5)
!12270 = !DILocation(line: 499, column: 7, scope: !12269)
!12271 = !DILocation(line: 499, column: 14, scope: !12269)
!12272 = !DILocation(line: 499, column: 35, scope: !12269)
!12273 = distinct !{!12273, !12270, !12274}
!12274 = !DILocation(line: 502, column: 7, scope: !12269)
!12275 = !DILocation(line: 506, column: 76, scope: !12263)
!12276 = !DILocation(line: 506, column: 103, scope: !12263)
!12277 = !DILocation(line: 507, column: 54, scope: !12263)
!12278 = !DILocation(line: 506, column: 5, scope: !12263)
!12279 = !DILocation(line: 510, column: 14, scope: !12263)
!12280 = !DILocation(line: 511, column: 3, scope: !12263)
!12281 = !DILocation(line: 0, scope: !12259)
!12282 = !DILocation(line: 518, column: 3, scope: !12235)
!12283 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12099, file: !12099, line: 642, type: !12284, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12286)
!12284 = !DISubroutineType(types: !12285)
!12285 = !{!12142}
!12286 = !{!12287}
!12287 = !DILocalVariable(name: "status", scope: !12283, file: !12099, line: 644, type: !12142)
!12288 = !DILocation(line: 0, scope: !12283)
!12289 = !DILocation(line: 647, column: 6, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12283, file: !12099, line: 647, column: 6)
!12291 = !DILocation(line: 647, column: 27, scope: !12290)
!12292 = !DILocation(line: 655, column: 6, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12283, file: !12099, line: 655, column: 6)
!12294 = !DILocation(line: 655, column: 30, scope: !12293)
!12295 = !DILocation(line: 663, column: 6, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12283, file: !12099, line: 663, column: 6)
!12297 = !DILocation(line: 663, column: 30, scope: !12296)
!12298 = !DILocation(line: 663, column: 6, scope: !12283)
!12299 = !DILocation(line: 669, column: 3, scope: !12283)
!12300 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12099, file: !12099, line: 611, type: !12301, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12303)
!12301 = !DISubroutineType(types: !12302)
!12302 = !{!156, !156, !12238}
!12303 = !{!12304, !12305, !12306}
!12304 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12300, file: !12099, line: 611, type: !156)
!12305 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12300, file: !12099, line: 611, type: !12238)
!12306 = !DILocalVariable(name: "pllfreq", scope: !12300, file: !12099, line: 613, type: !156)
!12307 = !DILocation(line: 0, scope: !12300)
!12308 = !DILocation(line: 622, column: 56, scope: !12300)
!12309 = !DILocation(line: 622, column: 61, scope: !12300)
!12310 = !DILocation(line: 622, column: 32, scope: !12300)
!12311 = !DILocation(line: 626, column: 45, scope: !12300)
!12312 = !DILocation(line: 626, column: 50, scope: !12300)
!12313 = !DILocation(line: 626, column: 21, scope: !12300)
!12314 = !DILocation(line: 630, column: 47, scope: !12300)
!12315 = !DILocation(line: 630, column: 82, scope: !12300)
!12316 = !DILocation(line: 630, column: 21, scope: !12300)
!12317 = !DILocation(line: 633, column: 3, scope: !12300)
!12318 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8510, file: !8510, line: 3007, type: !6497, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12319 = !DILocation(line: 3009, column: 11, scope: !12318)
!12320 = !DILocation(line: 3009, column: 44, scope: !12318)
!12321 = !DILocation(line: 3009, column: 3, scope: !12318)
!12322 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8510, file: !8510, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12323 = !DILocation(line: 2989, column: 3, scope: !12322)
!12324 = !DILocation(line: 2990, column: 1, scope: !12322)
!12325 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8510, file: !8510, line: 4304, type: !8644, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12326)
!12326 = !{!12327, !12328, !12329, !12330}
!12327 = !DILocalVariable(name: "Source", arg: 1, scope: !12325, file: !8510, line: 4304, type: !156)
!12328 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12325, file: !8510, line: 4304, type: !156)
!12329 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12325, file: !8510, line: 4304, type: !156)
!12330 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12325, file: !8510, line: 4304, type: !156)
!12331 = !DILocation(line: 0, scope: !12325)
!12332 = !DILocation(line: 4306, column: 3, scope: !12325)
!12333 = !DILocation(line: 4308, column: 3, scope: !12325)
!12334 = !DILocation(line: 4310, column: 3, scope: !12325)
!12335 = !DILocation(line: 4312, column: 1, scope: !12325)
!12336 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12099, file: !12099, line: 681, type: !12337, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12339)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{!12142, !156, !12245}
!12339 = !{!12340, !12341, !12342, !12343}
!12340 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12336, file: !12099, line: 681, type: !156)
!12341 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12336, file: !12099, line: 681, type: !12245)
!12342 = !DILocalVariable(name: "status", scope: !12336, file: !12099, line: 683, type: !12142)
!12343 = !DILocalVariable(name: "hclk_frequency", scope: !12336, file: !12099, line: 684, type: !156)
!12344 = !DILocation(line: 0, scope: !12336)
!12345 = !DILocation(line: 691, column: 20, scope: !12336)
!12346 = !DILocation(line: 694, column: 6, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12336, file: !12099, line: 694, column: 6)
!12348 = !DILocation(line: 694, column: 22, scope: !12347)
!12349 = !DILocation(line: 694, column: 6, scope: !12336)
!12350 = !DILocation(line: 697, column: 14, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12347, file: !12099, line: 695, column: 3)
!12352 = !DILocation(line: 701, column: 13, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12336, file: !12099, line: 701, column: 6)
!12354 = !DILocation(line: 701, column: 6, scope: !12336)
!12355 = !DILocation(line: 704, column: 5, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12353, file: !12099, line: 702, column: 3)
!12357 = !DILocation(line: 705, column: 5, scope: !12356)
!12358 = !DILocation(line: 705, column: 12, scope: !12356)
!12359 = !DILocation(line: 705, column: 33, scope: !12356)
!12360 = distinct !{!12360, !12357, !12361}
!12361 = !DILocation(line: 708, column: 5, scope: !12356)
!12362 = !DILocation(line: 711, column: 49, scope: !12356)
!12363 = !DILocation(line: 711, column: 5, scope: !12356)
!12364 = !DILocation(line: 712, column: 5, scope: !12356)
!12365 = !DILocation(line: 713, column: 5, scope: !12356)
!12366 = !DILocation(line: 713, column: 12, scope: !12356)
!12367 = !DILocation(line: 713, column: 37, scope: !12356)
!12368 = distinct !{!12368, !12365, !12369}
!12369 = !DILocation(line: 716, column: 5, scope: !12356)
!12370 = !DILocation(line: 719, column: 50, scope: !12356)
!12371 = !DILocation(line: 719, column: 5, scope: !12356)
!12372 = !DILocation(line: 720, column: 50, scope: !12356)
!12373 = !DILocation(line: 720, column: 5, scope: !12356)
!12374 = !DILocation(line: 721, column: 3, scope: !12356)
!12375 = !DILocation(line: 724, column: 6, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12336, file: !12099, line: 724, column: 6)
!12377 = !DILocation(line: 724, column: 22, scope: !12376)
!12378 = !DILocation(line: 724, column: 6, scope: !12336)
!12379 = !DILocation(line: 727, column: 14, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12376, file: !12099, line: 725, column: 3)
!12381 = !DILocation(line: 728, column: 3, scope: !12380)
!12382 = !DILocation(line: 731, column: 13, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12336, file: !12099, line: 731, column: 6)
!12384 = !DILocation(line: 731, column: 6, scope: !12336)
!12385 = !DILocation(line: 733, column: 5, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12383, file: !12099, line: 732, column: 3)
!12387 = !DILocation(line: 734, column: 3, scope: !12386)
!12388 = !DILocation(line: 736, column: 3, scope: !12336)
!12389 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8510, file: !8510, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12390 = !DILocation(line: 4186, column: 3, scope: !12389)
!12391 = !DILocation(line: 4187, column: 1, scope: !12389)
!12392 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8510, file: !8510, line: 4205, type: !6497, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12393 = !DILocation(line: 4207, column: 11, scope: !12392)
!12394 = !DILocation(line: 4207, column: 44, scope: !12392)
!12395 = !DILocation(line: 4207, column: 3, scope: !12392)
!12396 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8510, file: !8510, line: 3224, type: !6507, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12397)
!12397 = !{!12398}
!12398 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12396, file: !8510, line: 3224, type: !156)
!12399 = !DILocation(line: 0, scope: !12396)
!12400 = !DILocation(line: 3226, column: 3, scope: !12396)
!12401 = !DILocation(line: 3227, column: 1, scope: !12396)
!12402 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8510, file: !8510, line: 3188, type: !6507, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12403)
!12403 = !{!12404}
!12404 = !DILocalVariable(name: "Source", arg: 1, scope: !12402, file: !8510, line: 3188, type: !156)
!12405 = !DILocation(line: 0, scope: !12402)
!12406 = !DILocation(line: 3190, column: 3, scope: !12402)
!12407 = !DILocation(line: 3191, column: 1, scope: !12402)
!12408 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8510, file: !8510, line: 3204, type: !6497, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12409 = !DILocation(line: 3206, column: 21, scope: !12408)
!12410 = !DILocation(line: 3206, column: 3, scope: !12408)
!12411 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8510, file: !8510, line: 3240, type: !6507, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12412)
!12412 = !{!12413}
!12413 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12411, file: !8510, line: 3240, type: !156)
!12414 = !DILocation(line: 0, scope: !12411)
!12415 = !DILocation(line: 3242, column: 3, scope: !12411)
!12416 = !DILocation(line: 3243, column: 1, scope: !12411)
!12417 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8510, file: !8510, line: 3256, type: !6507, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12418)
!12418 = !{!12419}
!12419 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12417, file: !8510, line: 3256, type: !156)
!12420 = !DILocation(line: 0, scope: !12417)
!12421 = !DILocation(line: 3258, column: 3, scope: !12417)
!12422 = !DILocation(line: 3259, column: 1, scope: !12417)
!12423 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8510, file: !8510, line: 5969, type: !6497, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12424 = !DILocation(line: 5971, column: 11, scope: !12423)
!12425 = !DILocation(line: 5971, column: 47, scope: !12423)
!12426 = !DILocation(line: 5971, column: 3, scope: !12423)
!12427 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8510, file: !8510, line: 5153, type: !6497, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12428 = !DILocation(line: 5155, column: 11, scope: !12427)
!12429 = !DILocation(line: 5155, column: 47, scope: !12427)
!12430 = !DILocation(line: 5155, column: 3, scope: !12427)
!12431 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12099, file: !12099, line: 540, type: !12432, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !12434)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{!12142, !156, !156, !12238, !12245}
!12434 = !{!12435, !12436, !12437, !12438, !12439, !12440}
!12435 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12431, file: !12099, line: 540, type: !156)
!12436 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12431, file: !12099, line: 540, type: !156)
!12437 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12431, file: !12099, line: 541, type: !12238)
!12438 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12431, file: !12099, line: 541, type: !12245)
!12439 = !DILocalVariable(name: "status", scope: !12431, file: !12099, line: 543, type: !12142)
!12440 = !DILocalVariable(name: "pllfreq", scope: !12431, file: !12099, line: 544, type: !156)
!12441 = !DILocation(line: 0, scope: !12431)
!12442 = !DILocation(line: 551, column: 6, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12431, file: !12099, line: 551, column: 6)
!12444 = !DILocation(line: 551, column: 25, scope: !12443)
!12445 = !DILocation(line: 551, column: 6, scope: !12431)
!12446 = !DILocation(line: 554, column: 15, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12443, file: !12099, line: 552, column: 3)
!12448 = !DILocation(line: 557, column: 8, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12447, file: !12099, line: 557, column: 8)
!12450 = !DILocation(line: 557, column: 29, scope: !12449)
!12451 = !DILocation(line: 557, column: 8, scope: !12447)
!12452 = !DILocation(line: 560, column: 20, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !12099, line: 560, column: 10)
!12454 = distinct !DILexicalBlock(scope: !12449, file: !12099, line: 558, column: 5)
!12455 = !DILocation(line: 560, column: 10, scope: !12454)
!12456 = !DILocation(line: 562, column: 9, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12453, file: !12099, line: 561, column: 7)
!12458 = !DILocation(line: 563, column: 7, scope: !12457)
!12459 = !DILocation(line: 566, column: 9, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12453, file: !12099, line: 565, column: 7)
!12461 = !DILocation(line: 570, column: 7, scope: !12454)
!12462 = !DILocation(line: 571, column: 7, scope: !12454)
!12463 = !DILocation(line: 571, column: 14, scope: !12454)
!12464 = !DILocation(line: 571, column: 35, scope: !12454)
!12465 = distinct !{!12465, !12462, !12466}
!12466 = !DILocation(line: 574, column: 7, scope: !12454)
!12467 = !DILocation(line: 578, column: 76, scope: !12447)
!12468 = !DILocation(line: 578, column: 103, scope: !12447)
!12469 = !DILocation(line: 579, column: 54, scope: !12447)
!12470 = !DILocation(line: 578, column: 5, scope: !12447)
!12471 = !DILocation(line: 582, column: 14, scope: !12447)
!12472 = !DILocation(line: 583, column: 3, scope: !12447)
!12473 = !DILocation(line: 0, scope: !12443)
!12474 = !DILocation(line: 590, column: 3, scope: !12431)
!12475 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8510, file: !8510, line: 2969, type: !6497, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12476 = !DILocation(line: 2971, column: 11, scope: !12475)
!12477 = !DILocation(line: 2971, column: 44, scope: !12475)
!12478 = !DILocation(line: 2971, column: 3, scope: !12475)
!12479 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8510, file: !8510, line: 2929, type: !365, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12480 = !DILocation(line: 2931, column: 3, scope: !12479)
!12481 = !DILocation(line: 2932, column: 1, scope: !12479)
!12482 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8510, file: !8510, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12483 = !DILocation(line: 2941, column: 3, scope: !12482)
!12484 = !DILocation(line: 2942, column: 1, scope: !12482)
!12485 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8510, file: !8510, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !2203)
!12486 = !DILocation(line: 2951, column: 3, scope: !12485)
!12487 = !DILocation(line: 2952, column: 1, scope: !12485)
!12488 = distinct !DISubprogram(name: "z_device_state_init", scope: !12489, file: !12489, line: 23, type: !365, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12490)
!12489 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12490 = !{!12491}
!12491 = !DILocalVariable(name: "dev", scope: !12488, file: !12489, line: 25, type: !12492)
!12492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12493, size: 32)
!12493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12494)
!12494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !12495)
!12495 = !{!12496, !12497, !12498, !12499, !12505, !12506}
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12494, file: !130, line: 380, baseType: !133, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12494, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12494, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12494, file: !130, line: 386, baseType: !12500, size: 32, offset: 96)
!12500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12501, size: 32)
!12501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !12502)
!12502 = !{!12503, !12504}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12501, file: !130, line: 359, baseType: !143, size: 8)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12501, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12494, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12494, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!12507 = !DILocation(line: 0, scope: !12488)
!12508 = !DILocation(line: 31, column: 1, scope: !12488)
!12509 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12489, file: !12489, line: 33, type: !12510, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12512)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{!12492, !133}
!12512 = !{!12513, !12514}
!12513 = !DILocalVariable(name: "name", arg: 1, scope: !12509, file: !12489, line: 33, type: !133)
!12514 = !DILocalVariable(name: "dev", scope: !12509, file: !12489, line: 35, type: !12492)
!12515 = !DILocation(line: 0, scope: !12509)
!12516 = !DILocation(line: 40, column: 12, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12509, file: !12489, line: 40, column: 6)
!12518 = !DILocation(line: 40, column: 21, scope: !12517)
!12519 = !DILocation(line: 40, column: 25, scope: !12517)
!12520 = !DILocation(line: 40, column: 33, scope: !12517)
!12521 = !DILocation(line: 40, column: 6, scope: !12509)
!12522 = !DILocation(line: 55, column: 2, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12509, file: !12489, line: 55, column: 2)
!12524 = !DILocation(line: 50, column: 7, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !12489, line: 50, column: 7)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !12489, line: 49, column: 57)
!12527 = distinct !DILexicalBlock(scope: !12528, file: !12489, line: 49, column: 2)
!12528 = distinct !DILexicalBlock(scope: !12509, file: !12489, line: 49, column: 2)
!12529 = !DILocation(line: 50, column: 30, scope: !12525)
!12530 = !DILocation(line: 50, column: 39, scope: !12525)
!12531 = !DILocation(line: 50, column: 44, scope: !12525)
!12532 = !DILocation(line: 50, column: 7, scope: !12526)
!12533 = !DILocation(line: 49, column: 53, scope: !12527)
!12534 = !DILocation(line: 49, column: 33, scope: !12527)
!12535 = !DILocation(line: 49, column: 2, scope: !12528)
!12536 = distinct !{!12536, !12535, !12537}
!12537 = !DILocation(line: 53, column: 2, scope: !12528)
!12538 = !DILocation(line: 56, column: 7, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !12489, line: 56, column: 7)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !12489, line: 55, column: 57)
!12541 = distinct !DILexicalBlock(scope: !12523, file: !12489, line: 55, column: 2)
!12542 = !DILocation(line: 56, column: 30, scope: !12539)
!12543 = !DILocation(line: 56, column: 52, scope: !12539)
!12544 = !DILocation(line: 56, column: 34, scope: !12539)
!12545 = !DILocation(line: 56, column: 58, scope: !12539)
!12546 = !DILocation(line: 56, column: 7, scope: !12540)
!12547 = !DILocation(line: 55, column: 53, scope: !12541)
!12548 = !DILocation(line: 55, column: 33, scope: !12541)
!12549 = distinct !{!12549, !12522, !12550}
!12550 = !DILocation(line: 59, column: 2, scope: !12523)
!12551 = !DILocation(line: 62, column: 1, scope: !12509)
!12552 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12489, file: !12489, line: 93, type: !12553, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12555)
!12553 = !DISubroutineType(types: !12554)
!12554 = !{!146, !12492}
!12555 = !{!12556}
!12556 = !DILocalVariable(name: "dev", arg: 1, scope: !12552, file: !12489, line: 93, type: !12492)
!12557 = !DILocation(line: 0, scope: !12552)
!12558 = !DILocation(line: 99, column: 10, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12552, file: !12489, line: 99, column: 6)
!12560 = !DILocation(line: 99, column: 6, scope: !12552)
!12561 = !DILocation(line: 103, column: 14, scope: !12552)
!12562 = !DILocation(line: 103, column: 21, scope: !12552)
!12563 = !DILocation(line: 103, column: 33, scope: !12552)
!12564 = !DILocation(line: 103, column: 49, scope: !12552)
!12565 = !DILocation(line: 103, column: 58, scope: !12552)
!12566 = !DILocation(line: 104, column: 1, scope: !12552)
!12567 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12489, file: !12489, line: 87, type: !12568, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12571)
!12568 = !DISubroutineType(types: !12569)
!12569 = !{!315, !12570}
!12570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12492, size: 32)
!12571 = !{!12572}
!12572 = !DILocalVariable(name: "devices", arg: 1, scope: !12567, file: !12489, line: 87, type: !12570)
!12573 = !DILocation(line: 0, scope: !12567)
!12574 = !DILocation(line: 89, column: 11, scope: !12567)
!12575 = !DILocation(line: 90, column: 2, scope: !12567)
!12576 = distinct !DISubprogram(name: "device_required_foreach", scope: !12489, file: !12489, line: 125, type: !12577, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12583)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{!118, !12492, !12579, !117}
!12579 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !130, line: 471, baseType: !12580)
!12580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12581, size: 32)
!12581 = !DISubroutineType(types: !12582)
!12582 = !{!118, !12492, !117}
!12583 = !{!12584, !12585, !12586, !12587, !12588}
!12584 = !DILocalVariable(name: "dev", arg: 1, scope: !12576, file: !12489, line: 125, type: !12492)
!12585 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12576, file: !12489, line: 126, type: !12579)
!12586 = !DILocalVariable(name: "context", arg: 3, scope: !12576, file: !12489, line: 127, type: !117)
!12587 = !DILocalVariable(name: "handle_count", scope: !12576, file: !12489, line: 129, type: !315)
!12588 = !DILocalVariable(name: "handles", scope: !12576, file: !12489, line: 130, type: !149)
!12589 = !DILocation(line: 0, scope: !12576)
!12590 = !DILocation(line: 129, column: 2, scope: !12576)
!12591 = !DILocation(line: 129, column: 9, scope: !12576)
!12592 = !DILocation(line: 130, column: 35, scope: !12576)
!12593 = !DILocation(line: 132, column: 33, scope: !12576)
!12594 = !DILocation(line: 132, column: 9, scope: !12576)
!12595 = !DILocation(line: 133, column: 1, scope: !12576)
!12596 = !DILocation(line: 132, column: 2, scope: !12576)
!12597 = distinct !DISubprogram(name: "device_required_handles_get", scope: !130, file: !130, line: 493, type: !12598, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!149, !12492, !2688}
!12600 = !{!12601, !12602, !12603, !12604}
!12601 = !DILocalVariable(name: "dev", arg: 1, scope: !12597, file: !130, line: 493, type: !12492)
!12602 = !DILocalVariable(name: "count", arg: 2, scope: !12597, file: !130, line: 493, type: !2688)
!12603 = !DILocalVariable(name: "rv", scope: !12597, file: !130, line: 495, type: !149)
!12604 = !DILocalVariable(name: "i", scope: !12605, file: !130, line: 498, type: !315)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !130, line: 497, column: 18)
!12606 = distinct !DILexicalBlock(scope: !12597, file: !130, line: 497, column: 6)
!12607 = !DILocation(line: 0, scope: !12597)
!12608 = !DILocation(line: 495, column: 35, scope: !12597)
!12609 = !DILocation(line: 497, column: 9, scope: !12606)
!12610 = !DILocation(line: 497, column: 6, scope: !12597)
!12611 = !DILocation(line: 0, scope: !12605)
!12612 = !DILocation(line: 500, column: 11, scope: !12605)
!12613 = !DILocation(line: 500, column: 40, scope: !12605)
!12614 = !DILocation(line: 502, column: 4, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12605, file: !130, line: 501, column: 40)
!12616 = distinct !{!12616, !12617, !12618}
!12617 = !DILocation(line: 500, column: 3, scope: !12605)
!12618 = !DILocation(line: 503, column: 3, scope: !12605)
!12619 = !DILocation(line: 504, column: 10, scope: !12605)
!12620 = !DILocation(line: 505, column: 2, scope: !12605)
!12621 = !DILocation(line: 507, column: 2, scope: !12597)
!12622 = distinct !DISubprogram(name: "device_visitor", scope: !12489, file: !12489, line: 106, type: !12623, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{!118, !149, !315, !12579, !117}
!12625 = !{!12626, !12627, !12628, !12629, !12630, !12632, !12635, !12636}
!12626 = !DILocalVariable(name: "handles", arg: 1, scope: !12622, file: !12489, line: 106, type: !149)
!12627 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12622, file: !12489, line: 107, type: !315)
!12628 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12622, file: !12489, line: 108, type: !12579)
!12629 = !DILocalVariable(name: "context", arg: 4, scope: !12622, file: !12489, line: 109, type: !117)
!12630 = !DILocalVariable(name: "i", scope: !12631, file: !12489, line: 112, type: !315)
!12631 = distinct !DILexicalBlock(scope: !12622, file: !12489, line: 112, column: 2)
!12632 = !DILocalVariable(name: "dh", scope: !12633, file: !12489, line: 113, type: !151)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12489, line: 112, column: 44)
!12634 = distinct !DILexicalBlock(scope: !12631, file: !12489, line: 112, column: 2)
!12635 = !DILocalVariable(name: "rdev", scope: !12633, file: !12489, line: 114, type: !12492)
!12636 = !DILocalVariable(name: "rc", scope: !12633, file: !12489, line: 115, type: !118)
!12637 = !DILocation(line: 0, scope: !12622)
!12638 = !DILocation(line: 0, scope: !12631)
!12639 = !DILocation(line: 112, column: 23, scope: !12634)
!12640 = !DILocation(line: 112, column: 2, scope: !12631)
!12641 = distinct !{!12641, !12640, !12642}
!12642 = !DILocation(line: 120, column: 2, scope: !12631)
!12643 = !DILocation(line: 113, column: 24, scope: !12633)
!12644 = !DILocation(line: 0, scope: !12633)
!12645 = !DILocation(line: 114, column: 31, scope: !12633)
!12646 = !DILocation(line: 115, column: 12, scope: !12633)
!12647 = !DILocation(line: 117, column: 10, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12633, file: !12489, line: 117, column: 7)
!12649 = !DILocation(line: 112, column: 39, scope: !12634)
!12650 = !DILocation(line: 123, column: 1, scope: !12622)
!12651 = distinct !DISubprogram(name: "device_from_handle", scope: !130, file: !130, line: 439, type: !12652, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12654)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{!12492, !151}
!12654 = !{!12655, !12656, !12657}
!12655 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12651, file: !130, line: 439, type: !151)
!12656 = !DILocalVariable(name: "dev", scope: !12651, file: !130, line: 443, type: !12492)
!12657 = !DILocalVariable(name: "numdev", scope: !12651, file: !130, line: 444, type: !315)
!12658 = !DILocation(line: 0, scope: !12651)
!12659 = !DILocation(line: 446, column: 7, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12651, file: !130, line: 446, column: 6)
!12661 = !DILocation(line: 446, column: 18, scope: !12660)
!12662 = !DILocation(line: 446, column: 23, scope: !12660)
!12663 = !DILocation(line: 450, column: 2, scope: !12651)
!12664 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12489, file: !12489, line: 135, type: !12577, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12665)
!12665 = !{!12666, !12667, !12668, !12669, !12670}
!12666 = !DILocalVariable(name: "dev", arg: 1, scope: !12664, file: !12489, line: 135, type: !12492)
!12667 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12664, file: !12489, line: 136, type: !12579)
!12668 = !DILocalVariable(name: "context", arg: 3, scope: !12664, file: !12489, line: 137, type: !117)
!12669 = !DILocalVariable(name: "handle_count", scope: !12664, file: !12489, line: 139, type: !315)
!12670 = !DILocalVariable(name: "handles", scope: !12664, file: !12489, line: 140, type: !149)
!12671 = !DILocation(line: 0, scope: !12664)
!12672 = !DILocation(line: 139, column: 2, scope: !12664)
!12673 = !DILocation(line: 139, column: 9, scope: !12664)
!12674 = !DILocation(line: 140, column: 35, scope: !12664)
!12675 = !DILocation(line: 142, column: 33, scope: !12664)
!12676 = !DILocation(line: 142, column: 9, scope: !12664)
!12677 = !DILocation(line: 143, column: 1, scope: !12664)
!12678 = !DILocation(line: 142, column: 2, scope: !12664)
!12679 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !130, file: !130, line: 573, type: !12598, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !12680)
!12680 = !{!12681, !12682, !12683, !12684, !12685}
!12681 = !DILocalVariable(name: "dev", arg: 1, scope: !12679, file: !130, line: 573, type: !12492)
!12682 = !DILocalVariable(name: "count", arg: 2, scope: !12679, file: !130, line: 573, type: !2688)
!12683 = !DILocalVariable(name: "rv", scope: !12679, file: !130, line: 575, type: !149)
!12684 = !DILocalVariable(name: "region", scope: !12679, file: !130, line: 576, type: !315)
!12685 = !DILocalVariable(name: "i", scope: !12679, file: !130, line: 577, type: !315)
!12686 = !DILocation(line: 0, scope: !12679)
!12687 = !DILocation(line: 575, column: 35, scope: !12679)
!12688 = !DILocation(line: 579, column: 9, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12679, file: !130, line: 579, column: 6)
!12690 = !DILocation(line: 579, column: 6, scope: !12679)
!12691 = !DILocation(line: 582, column: 8, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !130, line: 582, column: 8)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !130, line: 581, column: 23)
!12694 = distinct !DILexicalBlock(scope: !12689, file: !130, line: 579, column: 18)
!12695 = !DILocation(line: 582, column: 12, scope: !12692)
!12696 = !DILocation(line: 585, column: 6, scope: !12693)
!12697 = !DILocation(line: 0, scope: !12694)
!12698 = !DILocation(line: 581, column: 17, scope: !12694)
!12699 = !DILocation(line: 581, column: 3, scope: !12694)
!12700 = !DILocation(line: 588, column: 10, scope: !12694)
!12701 = !DILocation(line: 588, column: 16, scope: !12694)
!12702 = !DILocation(line: 589, column: 4, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12694, file: !130, line: 588, column: 39)
!12704 = !DILocation(line: 588, column: 3, scope: !12694)
!12705 = distinct !{!12705, !12704, !12706}
!12706 = !DILocation(line: 590, column: 3, scope: !12694)
!12707 = !DILocation(line: 591, column: 10, scope: !12694)
!12708 = !DILocation(line: 592, column: 2, scope: !12694)
!12709 = !DILocation(line: 575, column: 25, scope: !12679)
!12710 = !DILocation(line: 594, column: 2, scope: !12679)
!12711 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1994, file: !1994, line: 49, type: !12712, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1991, retainedNodes: !2203)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!2681}
!12714 = !DILocation(line: 51, column: 10, scope: !12711)
!12715 = !DILocation(line: 51, column: 20, scope: !12711)
!12716 = !DILocation(line: 51, column: 2, scope: !12711)
!12717 = distinct !DISubprogram(name: "coredump", scope: !3182, file: !3182, line: 209, type: !12718, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12866)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{null, !32, !12720, !12764}
!12720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12721, size: 32)
!12721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12722)
!12722 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2815, line: 141, baseType: !12723)
!12723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2815, line: 97, size: 256, elements: !12724)
!12724 = !{!12725}
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12723, file: !2815, line: 107, baseType: !12726, size: 256)
!12726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2815, line: 98, size: 256, elements: !12727)
!12727 = !{!12728, !12733, !12738, !12743, !12748, !12753, !12758, !12763}
!12728 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 99, baseType: !12729, size: 32)
!12729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 99, size: 32, elements: !12730)
!12730 = !{!12731, !12732}
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12729, file: !2815, line: 99, baseType: !156, size: 32)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12729, file: !2815, line: 99, baseType: !156, size: 32)
!12733 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 100, baseType: !12734, size: 32, offset: 32)
!12734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 100, size: 32, elements: !12735)
!12735 = !{!12736, !12737}
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12734, file: !2815, line: 100, baseType: !156, size: 32)
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12734, file: !2815, line: 100, baseType: !156, size: 32)
!12738 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 101, baseType: !12739, size: 32, offset: 64)
!12739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 101, size: 32, elements: !12740)
!12740 = !{!12741, !12742}
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12739, file: !2815, line: 101, baseType: !156, size: 32)
!12742 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12739, file: !2815, line: 101, baseType: !156, size: 32)
!12743 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 102, baseType: !12744, size: 32, offset: 96)
!12744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 102, size: 32, elements: !12745)
!12745 = !{!12746, !12747}
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12744, file: !2815, line: 102, baseType: !156, size: 32)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12744, file: !2815, line: 102, baseType: !156, size: 32)
!12748 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 103, baseType: !12749, size: 32, offset: 128)
!12749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 103, size: 32, elements: !12750)
!12750 = !{!12751, !12752}
!12751 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12749, file: !2815, line: 103, baseType: !156, size: 32)
!12752 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12749, file: !2815, line: 103, baseType: !156, size: 32)
!12753 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 104, baseType: !12754, size: 32, offset: 160)
!12754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 104, size: 32, elements: !12755)
!12755 = !{!12756, !12757}
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12754, file: !2815, line: 104, baseType: !156, size: 32)
!12757 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12754, file: !2815, line: 104, baseType: !156, size: 32)
!12758 = !DIDerivedType(tag: DW_TAG_member, scope: !12726, file: !2815, line: 105, baseType: !12759, size: 32, offset: 192)
!12759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12726, file: !2815, line: 105, size: 32, elements: !12760)
!12760 = !{!12761, !12762}
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12759, file: !2815, line: 105, baseType: !156, size: 32)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12759, file: !2815, line: 105, baseType: !156, size: 32)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12726, file: !2815, line: 106, baseType: !156, size: 32, offset: 224)
!12764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12765, size: 32)
!12765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !12766)
!12766 = !{!12767, !12825, !12837, !12838, !12839, !12840, !12846, !12861}
!12767 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12765, file: !225, line: 247, baseType: !12768, size: 384)
!12768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !12769)
!12769 = !{!12770, !12794, !12801, !12802, !12803, !12812, !12813, !12814}
!12770 = !DIDerivedType(tag: DW_TAG_member, scope: !12768, file: !225, line: 60, baseType: !12771, size: 64)
!12771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12768, file: !225, line: 60, size: 64, elements: !12772)
!12772 = !{!12773, !12788}
!12773 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12771, file: !225, line: 61, baseType: !12774, size: 64)
!12774 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !12775)
!12775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !12776)
!12776 = !{!12777, !12783}
!12777 = !DIDerivedType(tag: DW_TAG_member, scope: !12775, file: !235, line: 38, baseType: !12778, size: 32)
!12778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12775, file: !235, line: 38, size: 32, elements: !12779)
!12779 = !{!12780, !12782}
!12780 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12778, file: !235, line: 39, baseType: !12781, size: 32)
!12781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12775, size: 32)
!12782 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12778, file: !235, line: 40, baseType: !12781, size: 32)
!12783 = !DIDerivedType(tag: DW_TAG_member, scope: !12775, file: !235, line: 42, baseType: !12784, size: 32, offset: 32)
!12784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12775, file: !235, line: 42, size: 32, elements: !12785)
!12785 = !{!12786, !12787}
!12786 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12784, file: !235, line: 43, baseType: !12781, size: 32)
!12787 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12784, file: !235, line: 44, baseType: !12781, size: 32)
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12771, file: !225, line: 62, baseType: !12789, size: 64)
!12789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !12790)
!12790 = !{!12791}
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12789, file: !251, line: 50, baseType: !12792, size: 64)
!12792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12793, size: 64, elements: !256)
!12793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12789, size: 32)
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12768, file: !225, line: 68, baseType: !12795, size: 32, offset: 64)
!12795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12796, size: 32)
!12796 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !12797)
!12797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !12798)
!12798 = !{!12799}
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12797, file: !261, line: 232, baseType: !12800, size: 64)
!12800 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !12775)
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12768, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12768, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!12803 = !DIDerivedType(tag: DW_TAG_member, scope: !12768, file: !225, line: 90, baseType: !12804, size: 16, offset: 112)
!12804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12768, file: !225, line: 90, size: 16, elements: !12805)
!12805 = !{!12806, !12811}
!12806 = !DIDerivedType(tag: DW_TAG_member, scope: !12804, file: !225, line: 91, baseType: !12807, size: 16)
!12807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12804, file: !225, line: 91, size: 16, elements: !12808)
!12808 = !{!12809, !12810}
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12807, file: !225, line: 96, baseType: !275, size: 8)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12807, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12804, file: !225, line: 100, baseType: !279, size: 16)
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12768, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!12813 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12768, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12768, file: !225, line: 131, baseType: !12815, size: 192, offset: 192)
!12815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !12816)
!12816 = !{!12817, !12818, !12824}
!12817 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12815, file: !261, line: 245, baseType: !12774, size: 64)
!12818 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12815, file: !261, line: 246, baseType: !12819, size: 32, offset: 64)
!12819 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !12820)
!12820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12821, size: 32)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{null, !12823}
!12823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12815, size: 32)
!12824 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12815, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!12825 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12765, file: !225, line: 250, baseType: !12826, size: 288, offset: 384)
!12826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !12827)
!12827 = !{!12828, !12829, !12830, !12831, !12832, !12833, !12834, !12835, !12836}
!12828 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12826, file: !296, line: 26, baseType: !156, size: 32)
!12829 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12826, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12826, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12826, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12826, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12826, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!12834 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12826, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!12835 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12826, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!12836 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12826, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12765, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12765, file: !225, line: 256, baseType: !12796, size: 64, offset: 704)
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12765, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12765, file: !225, line: 300, baseType: !12841, size: 96, offset: 800)
!12841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !12842)
!12842 = !{!12843, !12844, !12845}
!12843 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12841, file: !225, line: 153, baseType: !22, size: 32)
!12844 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12841, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!12845 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12841, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!12846 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12765, file: !225, line: 325, baseType: !12847, size: 32, offset: 896)
!12847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12848, size: 32)
!12848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !12849)
!12849 = !{!12850, !12856, !12857}
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12848, file: !220, line: 5074, baseType: !12851, size: 96)
!12851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !12852)
!12852 = !{!12853, !12854, !12855}
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12851, file: !324, line: 57, baseType: !327, size: 32)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12851, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12851, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12848, file: !220, line: 5075, baseType: !12796, size: 64, offset: 96)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12848, file: !220, line: 5076, baseType: !12858, size: 32, offset: 160)
!12858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !12859)
!12859 = !{!12860}
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12858, file: !334, line: 52, baseType: !22, size: 32)
!12861 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12765, file: !225, line: 343, baseType: !12862, size: 64, offset: 928)
!12862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !12863)
!12863 = !{!12864, !12865}
!12864 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12862, file: !296, line: 63, baseType: !156, size: 32)
!12865 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12862, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!12866 = !{!12867, !12868, !12869}
!12867 = !DILocalVariable(name: "reason", arg: 1, scope: !12717, file: !3182, line: 209, type: !32)
!12868 = !DILocalVariable(name: "esf", arg: 2, scope: !12717, file: !3182, line: 209, type: !12720)
!12869 = !DILocalVariable(name: "thread", arg: 3, scope: !12717, file: !3182, line: 210, type: !12764)
!12870 = !DILocation(line: 0, scope: !12717)
!12871 = !DILocation(line: 212, column: 1, scope: !12717)
!12872 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3182, file: !3182, line: 214, type: !12873, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12875)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{null, !22, !22}
!12875 = !{!12876, !12877}
!12876 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12872, file: !3182, line: 214, type: !22)
!12877 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12872, file: !3182, line: 214, type: !22)
!12878 = !DILocation(line: 0, scope: !12872)
!12879 = !DILocation(line: 216, column: 1, scope: !12872)
!12880 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3182, file: !3182, line: 218, type: !12881, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12883)
!12881 = !DISubroutineType(types: !12882)
!12882 = !{null, !2035, !315}
!12883 = !{!12884, !12885}
!12884 = !DILocalVariable(name: "buf", arg: 1, scope: !12880, file: !3182, line: 218, type: !2035)
!12885 = !DILocalVariable(name: "buflen", arg: 2, scope: !12880, file: !3182, line: 218, type: !315)
!12886 = !DILocation(line: 0, scope: !12880)
!12887 = !DILocation(line: 220, column: 1, scope: !12880)
!12888 = distinct !DISubprogram(name: "coredump_query", scope: !3182, file: !3182, line: 222, type: !12889, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12891)
!12889 = !DISubroutineType(types: !12890)
!12890 = !{!118, !3181, !117}
!12891 = !{!12892, !12893}
!12892 = !DILocalVariable(name: "query_id", arg: 1, scope: !12888, file: !3182, line: 222, type: !3181)
!12893 = !DILocalVariable(name: "arg", arg: 2, scope: !12888, file: !3182, line: 222, type: !117)
!12894 = !DILocation(line: 0, scope: !12888)
!12895 = !DILocation(line: 224, column: 2, scope: !12888)
!12896 = distinct !DISubprogram(name: "coredump_cmd", scope: !3182, file: !3182, line: 227, type: !12897, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12899)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{!118, !3188, !117}
!12899 = !{!12900, !12901}
!12900 = !DILocalVariable(name: "query_id", arg: 1, scope: !12896, file: !3182, line: 227, type: !3188)
!12901 = !DILocalVariable(name: "arg", arg: 2, scope: !12896, file: !3182, line: 227, type: !117)
!12902 = !DILocation(line: 0, scope: !12896)
!12903 = !DILocation(line: 229, column: 2, scope: !12896)
!12904 = distinct !DISubprogram(name: "arch_system_halt", scope: !12905, file: !12905, line: 23, type: !6247, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12906)
!12905 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12906 = !{!12907}
!12907 = !DILocalVariable(name: "reason", arg: 1, scope: !12904, file: !12905, line: 23, type: !32)
!12908 = !DILocation(line: 0, scope: !12904)
!12909 = !DILocation(line: 55, column: 2, scope: !12910, inlinedAt: !12914)
!12910 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12911)
!12911 = !{!12912, !12913}
!12912 = !DILocalVariable(name: "key", scope: !12910, file: !6236, line: 44, type: !32)
!12913 = !DILocalVariable(name: "tmp", scope: !12910, file: !6236, line: 53, type: !32)
!12914 = distinct !DILocation(line: 31, column: 8, scope: !12904)
!12915 = !{i64 2282245}
!12916 = !DILocation(line: 0, scope: !12910, inlinedAt: !12914)
!12917 = !DILocation(line: 32, column: 2, scope: !12904)
!12918 = !DILocation(line: 32, column: 2, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !12905, line: 32, column: 2)
!12920 = distinct !DILexicalBlock(scope: !12904, file: !12905, line: 32, column: 2)
!12921 = distinct !{!12921, !12922, !12923}
!12922 = !DILocation(line: 32, column: 2, scope: !12920)
!12923 = !DILocation(line: 34, column: 2, scope: !12920)
!12924 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12905, file: !12905, line: 39, type: !12925, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12927)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{null, !32, !12720}
!12927 = !{!12928, !12929}
!12928 = !DILocalVariable(name: "reason", arg: 1, scope: !12924, file: !12905, line: 39, type: !32)
!12929 = !DILocalVariable(name: "esf", arg: 2, scope: !12924, file: !12905, line: 40, type: !12720)
!12930 = !DILocation(line: 0, scope: !12924)
!12931 = !DILocation(line: 46, column: 2, scope: !12924)
!12932 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12905, file: !12905, line: 81, type: !6247, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12933)
!12933 = !{!12934}
!12934 = !DILocalVariable(name: "reason", arg: 1, scope: !12932, file: !12905, line: 81, type: !32)
!12935 = !DILocation(line: 0, scope: !12932)
!12936 = !DILocation(line: 83, column: 2, scope: !12932)
!12937 = distinct !DISubprogram(name: "z_fatal_error", scope: !12905, file: !12905, line: 96, type: !12925, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12938)
!12938 = !{!12939, !12940, !12941, !12942}
!12939 = !DILocalVariable(name: "reason", arg: 1, scope: !12937, file: !12905, line: 96, type: !32)
!12940 = !DILocalVariable(name: "esf", arg: 2, scope: !12937, file: !12905, line: 96, type: !12720)
!12941 = !DILocalVariable(name: "key", scope: !12937, file: !12905, line: 102, type: !32)
!12942 = !DILocalVariable(name: "thread", scope: !12937, file: !12905, line: 103, type: !12764)
!12943 = !DILocation(line: 0, scope: !12937)
!12944 = !DILocation(line: 55, column: 2, scope: !12910, inlinedAt: !12945)
!12945 = distinct !DILocation(line: 102, column: 21, scope: !12937)
!12946 = !DILocation(line: 0, scope: !12910, inlinedAt: !12945)
!12947 = !DILocation(line: 131, column: 2, scope: !12937)
!12948 = !DILocation(line: 147, column: 3, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12950, file: !12905, line: 147, column: 3)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !12905, line: 147, column: 3)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !12905, line: 146, column: 32)
!12952 = distinct !DILexicalBlock(scope: !12937, file: !12905, line: 146, column: 6)
!12953 = !DILocation(line: 147, column: 3, scope: !12950)
!12954 = !DILocation(line: 147, column: 3, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12949, file: !12905, line: 147, column: 3)
!12956 = !DILocation(line: 104, column: 4, scope: !12937)
!12957 = !DILocalVariable(name: "key", arg: 1, scope: !12958, file: !6236, line: 84, type: !32)
!12958 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12959)
!12959 = !{!12957}
!12960 = !DILocation(line: 0, scope: !12958, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 186, column: 2, scope: !12937)
!12962 = !DILocation(line: 95, column: 2, scope: !12958, inlinedAt: !12961)
!12963 = !{i64 2283062}
!12964 = !DILocation(line: 189, column: 3, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12966, file: !12905, line: 188, column: 41)
!12966 = distinct !DILexicalBlock(scope: !12937, file: !12905, line: 188, column: 6)
!12967 = !DILocation(line: 191, column: 1, scope: !12937)
!12968 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !12969, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !2203)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!12971}
!12971 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !12764)
!12972 = !DILocation(line: 535, column: 9, scope: !12968)
!12973 = !DILocation(line: 535, column: 2, scope: !12968)
!12974 = distinct !DISubprogram(name: "k_thread_abort", scope: !3533, file: !3533, line: 188, type: !12975, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !12977)
!12975 = !DISubroutineType(types: !12976)
!12976 = !{null, !12971}
!12977 = !{!12978}
!12978 = !DILocalVariable(name: "thread", arg: 1, scope: !12974, file: !3533, line: 188, type: !12971)
!12979 = !DILocation(line: 0, scope: !12974)
!12980 = !DILocation(line: 197, column: 2, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12974, file: !3533, line: 197, column: 2)
!12982 = !{i64 2155068408}
!12983 = !DILocation(line: 198, column: 2, scope: !12974)
!12984 = !DILocation(line: 199, column: 1, scope: !12974)
!12985 = distinct !DISubprogram(name: "z_current_get", scope: !3533, file: !3533, line: 173, type: !12969, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3178, retainedNodes: !2203)
!12986 = !DILocation(line: 180, column: 2, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12985, file: !3533, line: 180, column: 2)
!12988 = !{i64 2155068340}
!12989 = !DILocation(line: 181, column: 9, scope: !12985)
!12990 = !DILocation(line: 181, column: 2, scope: !12985)
!12991 = distinct !DISubprogram(name: "z_early_memset", scope: !2002, file: !2002, line: 108, type: !12992, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !12994)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{null, !117, !118, !315}
!12994 = !{!12995, !12996, !12997}
!12995 = !DILocalVariable(name: "dst", arg: 1, scope: !12991, file: !2002, line: 108, type: !117)
!12996 = !DILocalVariable(name: "c", arg: 2, scope: !12991, file: !2002, line: 108, type: !118)
!12997 = !DILocalVariable(name: "n", arg: 3, scope: !12991, file: !2002, line: 108, type: !315)
!12998 = !DILocation(line: 0, scope: !12991)
!12999 = !DILocation(line: 110, column: 9, scope: !12991)
!13000 = !DILocation(line: 111, column: 1, scope: !12991)
!13001 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2002, file: !2002, line: 121, type: !13002, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13004)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{null, !117, !13, !315}
!13004 = !{!13005, !13006, !13007}
!13005 = !DILocalVariable(name: "dst", arg: 1, scope: !13001, file: !2002, line: 121, type: !117)
!13006 = !DILocalVariable(name: "src", arg: 2, scope: !13001, file: !2002, line: 121, type: !13)
!13007 = !DILocalVariable(name: "n", arg: 3, scope: !13001, file: !2002, line: 121, type: !315)
!13008 = !DILocation(line: 0, scope: !13001)
!13009 = !DILocation(line: 123, column: 9, scope: !13001)
!13010 = !DILocation(line: 124, column: 1, scope: !13001)
!13011 = distinct !DISubprogram(name: "z_bss_zero", scope: !2002, file: !2002, line: 132, type: !365, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !2203)
!13012 = !DILocation(line: 143, column: 2, scope: !13011)
!13013 = !DILocation(line: 168, column: 1, scope: !13011)
!13014 = distinct !DISubprogram(name: "z_init_cpu", scope: !2002, file: !2002, line: 372, type: !8110, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13015)
!13015 = !{!13016}
!13016 = !DILocalVariable(name: "id", arg: 1, scope: !13014, file: !2002, line: 372, type: !118)
!13017 = !DILocation(line: 0, scope: !13014)
!13018 = !DILocation(line: 374, column: 2, scope: !13014)
!13019 = !DILocation(line: 375, column: 34, scope: !13014)
!13020 = !DILocation(line: 375, column: 19, scope: !13014)
!13021 = !DILocation(line: 375, column: 31, scope: !13014)
!13022 = !DILocation(line: 376, column: 24, scope: !13014)
!13023 = !DILocation(line: 376, column: 19, scope: !13014)
!13024 = !DILocation(line: 376, column: 22, scope: !13014)
!13025 = !DILocation(line: 378, column: 26, scope: !13014)
!13026 = !DILocation(line: 378, column: 4, scope: !13014)
!13027 = !DILocation(line: 378, column: 50, scope: !13014)
!13028 = !DILocation(line: 377, column: 19, scope: !13014)
!13029 = !DILocation(line: 377, column: 29, scope: !13014)
!13030 = !DILocation(line: 384, column: 1, scope: !13014)
!13031 = distinct !DISubprogram(name: "init_idle_thread", scope: !2002, file: !2002, line: 343, type: !8110, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13032)
!13032 = !{!13033, !13034, !13035, !13038}
!13033 = !DILocalVariable(name: "i", arg: 1, scope: !13031, file: !2002, line: 343, type: !118)
!13034 = !DILocalVariable(name: "thread", scope: !13031, file: !2002, line: 345, type: !2095)
!13035 = !DILocalVariable(name: "stack", scope: !13031, file: !2002, line: 346, type: !13036)
!13036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13037, size: 32)
!13037 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !2212)
!13038 = !DILocalVariable(name: "tname", scope: !13031, file: !2002, line: 358, type: !1277)
!13039 = !DILocation(line: 0, scope: !13031)
!13040 = !DILocation(line: 345, column: 29, scope: !13031)
!13041 = !DILocation(line: 346, column: 28, scope: !13031)
!13042 = !DILocation(line: 362, column: 37, scope: !13031)
!13043 = !DILocation(line: 362, column: 36, scope: !13031)
!13044 = !DILocation(line: 361, column: 2, scope: !13031)
!13045 = !DILocation(line: 365, column: 2, scope: !13031)
!13046 = !DILocation(line: 370, column: 1, scope: !13031)
!13047 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !13048, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13050)
!13048 = !DISubroutineType(types: !13049)
!13049 = !{!1277, !13036}
!13050 = !{!13051}
!13051 = !DILocalVariable(name: "sym", arg: 1, scope: !13047, file: !347, line: 331, type: !13036)
!13052 = !DILocation(line: 0, scope: !13047)
!13053 = !DILocation(line: 333, column: 21, scope: !13047)
!13054 = !DILocation(line: 333, column: 2, scope: !13047)
!13055 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13056, file: !13056, line: 155, type: !13057, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13059)
!13056 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13057 = !DISubroutineType(types: !13058)
!13058 = !{null, !2095}
!13059 = !{!13060}
!13060 = !DILocalVariable(name: "thread", arg: 1, scope: !13055, file: !13056, line: 155, type: !2095)
!13061 = !DILocation(line: 0, scope: !13055)
!13062 = !DILocation(line: 157, column: 15, scope: !13055)
!13063 = !DILocation(line: 157, column: 28, scope: !13055)
!13064 = !DILocation(line: 158, column: 1, scope: !13055)
!13065 = distinct !DISubprogram(name: "z_cstart", scope: !2002, file: !2002, line: 501, type: !365, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13066)
!13066 = !{!13067}
!13067 = !DILocalVariable(name: "dummy_thread", scope: !13065, file: !2002, line: 518, type: !2096)
!13068 = !DILocation(line: 507, column: 2, scope: !13065)
!13069 = !DILocation(line: 43, column: 14, scope: !13070, inlinedAt: !13074)
!13070 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13071, file: !13071, line: 40, type: !365, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13072)
!13071 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13072 = !{!13073}
!13073 = !DILocalVariable(name: "msp", scope: !13070, file: !13071, line: 42, type: !156)
!13074 = distinct !DILocation(line: 44, column: 2, scope: !13075, inlinedAt: !13077)
!13075 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13076, file: !13076, line: 42, type: !365, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !2203)
!13076 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13077 = distinct !DILocation(line: 510, column: 2, scope: !13065)
!13078 = !DILocation(line: 43, column: 3, scope: !13070, inlinedAt: !13074)
!13079 = !DILocation(line: 43, column: 60, scope: !13070, inlinedAt: !13074)
!13080 = !DILocation(line: 0, scope: !13070, inlinedAt: !13074)
!13081 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13082, file: !6410, line: 1153, type: !156)
!13082 = distinct !DISubprogram(name: "__set_MSP", scope: !6410, file: !6410, line: 1153, type: !6507, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13083)
!13083 = !{!13081}
!13084 = !DILocation(line: 0, scope: !13082, inlinedAt: !13085)
!13085 = distinct !DILocation(line: 46, column: 2, scope: !13070, inlinedAt: !13074)
!13086 = !DILocation(line: 1155, column: 3, scope: !13082, inlinedAt: !13085)
!13087 = !{i64 3748184}
!13088 = !DILocation(line: 62, column: 11, scope: !13070, inlinedAt: !13074)
!13089 = !DILocation(line: 102, column: 2, scope: !13090, inlinedAt: !13091)
!13090 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7236, file: !7236, line: 97, type: !365, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !2203)
!13091 = distinct !DILocation(line: 45, column: 2, scope: !13075, inlinedAt: !13077)
!13092 = !DILocation(line: 108, column: 2, scope: !13090, inlinedAt: !13091)
!13093 = !DILocation(line: 112, column: 2, scope: !13090, inlinedAt: !13091)
!13094 = !DILocation(line: 113, column: 2, scope: !13090, inlinedAt: !13091)
!13095 = !DILocation(line: 114, column: 2, scope: !13090, inlinedAt: !13091)
!13096 = !DILocation(line: 116, column: 2, scope: !13090, inlinedAt: !13091)
!13097 = !DILocation(line: 123, column: 13, scope: !13090, inlinedAt: !13091)
!13098 = !DILocation(line: 46, column: 2, scope: !13075, inlinedAt: !13077)
!13099 = !DILocation(line: 47, column: 2, scope: !13075, inlinedAt: !13077)
!13100 = !DILocation(line: 174, column: 12, scope: !13101, inlinedAt: !13102)
!13101 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7236, file: !7236, line: 169, type: !365, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !2203)
!13102 = distinct !DILocation(line: 48, column: 2, scope: !13075, inlinedAt: !13077)
!13103 = !DILocation(line: 179, column: 12, scope: !13101, inlinedAt: !13102)
!13104 = !DILocation(line: 50, column: 2, scope: !13075, inlinedAt: !13077)
!13105 = !DILocation(line: 57, column: 2, scope: !13075, inlinedAt: !13077)
!13106 = !DILocation(line: 518, column: 2, scope: !13065)
!13107 = !DILocation(line: 518, column: 18, scope: !13065)
!13108 = !DILocation(line: 520, column: 2, scope: !13065)
!13109 = !DILocation(line: 523, column: 2, scope: !13065)
!13110 = !DILocation(line: 526, column: 2, scope: !13065)
!13111 = !DILocation(line: 527, column: 2, scope: !13065)
!13112 = !DILocation(line: 543, column: 24, scope: !13065)
!13113 = !DILocation(line: 543, column: 2, scope: !13065)
!13114 = !DILocation(line: 0, scope: !2229)
!13115 = !DILocation(line: 246, column: 15, scope: !2247)
!13116 = !DILocation(line: 246, column: 36, scope: !2246)
!13117 = !DILocation(line: 246, column: 2, scope: !2247)
!13118 = !DILocation(line: 247, column: 37, scope: !2245)
!13119 = !DILocation(line: 0, scope: !2245)
!13120 = !DILocation(line: 248, column: 19, scope: !2245)
!13121 = !DILocation(line: 248, column: 12, scope: !2245)
!13122 = !DILocation(line: 250, column: 11, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !2245, file: !2002, line: 250, column: 7)
!13124 = !DILocation(line: 250, column: 7, scope: !2245)
!13125 = !DILocation(line: 254, column: 11, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13127, file: !2002, line: 254, column: 8)
!13127 = distinct !DILexicalBlock(scope: !13123, file: !2002, line: 250, column: 20)
!13128 = !DILocation(line: 254, column: 8, scope: !13127)
!13129 = !DILocation(line: 255, column: 9, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13126, file: !2002, line: 254, column: 17)
!13131 = !DILocation(line: 258, column: 9, scope: !13130)
!13132 = !DILocation(line: 261, column: 28, scope: !13130)
!13133 = !DILocation(line: 261, column: 10, scope: !13130)
!13134 = !DILocation(line: 261, column: 17, scope: !13130)
!13135 = !DILocation(line: 261, column: 26, scope: !13130)
!13136 = !DILocation(line: 262, column: 4, scope: !13130)
!13137 = !DILocation(line: 263, column: 9, scope: !13127)
!13138 = !DILocation(line: 263, column: 16, scope: !13127)
!13139 = !DILocation(line: 263, column: 28, scope: !13127)
!13140 = !DILocation(line: 264, column: 3, scope: !13127)
!13141 = !DILocation(line: 246, column: 60, scope: !2246)
!13142 = distinct !{!13142, !13117, !13143}
!13143 = !DILocation(line: 265, column: 2, scope: !2247)
!13144 = !DILocation(line: 266, column: 1, scope: !2229)
!13145 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6450, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13146)
!13146 = !{!13147, !13148}
!13147 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13145, file: !656, line: 1814, type: !920)
!13148 = !DILocalVariable(name: "priority", arg: 2, scope: !13145, file: !656, line: 1814, type: !156)
!13149 = !DILocation(line: 0, scope: !13145)
!13150 = !DILocation(line: 1822, column: 48, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13152, file: !656, line: 1821, column: 3)
!13152 = distinct !DILexicalBlock(scope: !13145, file: !656, line: 1816, column: 7)
!13153 = !DILocation(line: 1822, column: 32, scope: !13151)
!13154 = !DILocation(line: 1822, column: 40, scope: !13151)
!13155 = !DILocation(line: 1822, column: 5, scope: !13151)
!13156 = !DILocation(line: 1822, column: 46, scope: !13151)
!13157 = !DILocation(line: 1824, column: 1, scope: !13145)
!13158 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13076, file: !13076, line: 32, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!13159 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13160, file: !13160, line: 215, type: !13057, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13161)
!13160 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13161 = !{!13162}
!13162 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13159, file: !13160, line: 215, type: !2095)
!13163 = !DILocation(line: 0, scope: !13159)
!13164 = !DILocation(line: 217, column: 21, scope: !13159)
!13165 = !DILocation(line: 217, column: 34, scope: !13159)
!13166 = !DILocation(line: 221, column: 21, scope: !13159)
!13167 = !DILocation(line: 221, column: 34, scope: !13159)
!13168 = !DILocation(line: 223, column: 27, scope: !13159)
!13169 = !DILocation(line: 223, column: 33, scope: !13159)
!13170 = !DILocation(line: 224, column: 27, scope: !13159)
!13171 = !DILocation(line: 224, column: 32, scope: !13159)
!13172 = !DILocation(line: 230, column: 2, scope: !13159)
!13173 = !DILocation(line: 239, column: 24, scope: !13159)
!13174 = !DILocation(line: 240, column: 1, scope: !13159)
!13175 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2002, file: !2002, line: 399, type: !13176, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13178)
!13176 = !DISubroutineType(types: !13177)
!13177 = !{!1277}
!13178 = !{!13179}
!13179 = !DILocalVariable(name: "stack_ptr", scope: !13175, file: !2002, line: 401, type: !1277)
!13180 = !DILocation(line: 404, column: 2, scope: !13175)
!13181 = !DILocation(line: 416, column: 24, scope: !13175)
!13182 = !DILocation(line: 418, column: 14, scope: !13175)
!13183 = !DILocation(line: 0, scope: !13175)
!13184 = !DILocation(line: 423, column: 2, scope: !13175)
!13185 = !DILocation(line: 424, column: 2, scope: !13175)
!13186 = !DILocation(line: 426, column: 2, scope: !13175)
!13187 = !DILocation(line: 428, column: 2, scope: !13175)
!13188 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2002, file: !2002, line: 432, type: !13189, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13191)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{null, !1277}
!13191 = !{!13192}
!13192 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13188, file: !2002, line: 432, type: !1277)
!13193 = !DILocation(line: 0, scope: !13188)
!13194 = !DILocation(line: 435, column: 2, scope: !13188)
!13195 = !DILocation(line: 445, column: 2, scope: !13188)
!13196 = distinct !DISubprogram(name: "bg_thread_main", scope: !2002, file: !2002, line: 277, type: !354, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13197)
!13197 = !{!13198, !13199, !13200}
!13198 = !DILocalVariable(name: "unused1", arg: 1, scope: !13196, file: !2002, line: 277, type: !117)
!13199 = !DILocalVariable(name: "unused2", arg: 2, scope: !13196, file: !2002, line: 277, type: !117)
!13200 = !DILocalVariable(name: "unused3", arg: 3, scope: !13196, file: !2002, line: 277, type: !117)
!13201 = !DILocation(line: 0, scope: !13196)
!13202 = !DILocation(line: 291, column: 20, scope: !13196)
!13203 = !DILocation(line: 293, column: 2, scope: !13196)
!13204 = !DILocation(line: 297, column: 2, scope: !13196)
!13205 = !DILocation(line: 305, column: 2, scope: !13196)
!13206 = !DILocation(line: 307, column: 2, scope: !13196)
!13207 = !DILocation(line: 330, column: 8, scope: !13196)
!13208 = !DILocation(line: 333, column: 34, scope: !13196)
!13209 = !DILocation(line: 339, column: 1, scope: !13196)
!13210 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2258, file: !2258, line: 45, type: !13211, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13219)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{null, !13213, !117}
!13213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !220, line: 103, baseType: !13214)
!13214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13215, size: 32)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{null, !13217, !117}
!13217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13218, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2263)
!13219 = !{!13220, !13221}
!13220 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13210, file: !2258, line: 45, type: !13213)
!13221 = !DILocalVariable(name: "user_data", arg: 2, scope: !13210, file: !2258, line: 45, type: !117)
!13222 = !DILocation(line: 0, scope: !13210)
!13223 = !DILocation(line: 71, column: 1, scope: !13210)
!13224 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2258, file: !2258, line: 73, type: !13211, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13225)
!13225 = !{!13226, !13227}
!13226 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13224, file: !2258, line: 73, type: !13213)
!13227 = !DILocalVariable(name: "user_data", arg: 2, scope: !13224, file: !2258, line: 73, type: !117)
!13228 = !DILocation(line: 0, scope: !13224)
!13229 = !DILocation(line: 95, column: 1, scope: !13224)
!13230 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2258, file: !2258, line: 97, type: !7237, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2203)
!13231 = !DILocation(line: 1031, column: 3, scope: !13232, inlinedAt: !13235)
!13232 = distinct !DISubprogram(name: "__get_IPSR", scope: !6410, file: !6410, line: 1027, type: !6497, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13233)
!13233 = !{!13234}
!13234 = !DILocalVariable(name: "result", scope: !13232, file: !6410, line: 1029, type: !156)
!13235 = distinct !DILocation(line: 48, column: 10, scope: !13236, inlinedAt: !13237)
!13236 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7236, file: !7236, line: 46, type: !7237, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2203)
!13237 = distinct !DILocation(line: 99, column: 9, scope: !13230)
!13238 = !{i64 3753835}
!13239 = !DILocation(line: 0, scope: !13232, inlinedAt: !13235)
!13240 = !DILocation(line: 48, column: 9, scope: !13236, inlinedAt: !13237)
!13241 = !DILocation(line: 99, column: 2, scope: !13230)
!13242 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2258, file: !2258, line: 106, type: !365, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2203)
!13243 = !DILocation(line: 108, column: 2, scope: !13242)
!13244 = !DILocation(line: 108, column: 17, scope: !13242)
!13245 = !DILocation(line: 108, column: 30, scope: !13242)
!13246 = !DILocation(line: 109, column: 1, scope: !13242)
!13247 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2258, file: !2258, line: 116, type: !365, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2203)
!13248 = !DILocation(line: 118, column: 2, scope: !13247)
!13249 = !DILocation(line: 118, column: 17, scope: !13247)
!13250 = !DILocation(line: 118, column: 30, scope: !13247)
!13251 = !DILocation(line: 119, column: 1, scope: !13247)
!13252 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2258, file: !2258, line: 126, type: !7237, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2203)
!13253 = !DILocation(line: 128, column: 10, scope: !13252)
!13254 = !DILocation(line: 128, column: 25, scope: !13252)
!13255 = !DILocation(line: 128, column: 38, scope: !13252)
!13256 = !DILocation(line: 128, column: 53, scope: !13252)
!13257 = !DILocation(line: 128, column: 2, scope: !13252)
!13258 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2258, file: !2258, line: 187, type: !13259, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13261)
!13259 = !DISubroutineType(types: !13260)
!13260 = !{!118, !2262, !133}
!13261 = !{!13262, !13263}
!13262 = !DILocalVariable(name: "thread", arg: 1, scope: !13258, file: !2258, line: 187, type: !2262)
!13263 = !DILocalVariable(name: "value", arg: 2, scope: !13258, file: !2258, line: 187, type: !133)
!13264 = !DILocation(line: 0, scope: !13258)
!13265 = !DILocation(line: 206, column: 2, scope: !13258)
!13266 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2258, file: !2258, line: 238, type: !13267, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13269)
!13267 = !DISubroutineType(types: !13268)
!13268 = !{!133, !2262}
!13269 = !{!13270}
!13270 = !DILocalVariable(name: "thread", arg: 1, scope: !13266, file: !2258, line: 238, type: !2262)
!13271 = !DILocation(line: 0, scope: !13266)
!13272 = !DILocation(line: 244, column: 2, scope: !13266)
!13273 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2258, file: !2258, line: 248, type: !13274, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!118, !2261, !1277, !315}
!13276 = !{!13277, !13278, !13279}
!13277 = !DILocalVariable(name: "thread", arg: 1, scope: !13273, file: !2258, line: 248, type: !2261)
!13278 = !DILocalVariable(name: "buf", arg: 2, scope: !13273, file: !2258, line: 248, type: !1277)
!13279 = !DILocalVariable(name: "size", arg: 3, scope: !13273, file: !2258, line: 248, type: !315)
!13280 = !DILocation(line: 0, scope: !13273)
!13281 = !DILocation(line: 257, column: 2, scope: !13273)
!13282 = !DILocation(line: 0, scope: !2257)
!13283 = !DILocation(line: 281, column: 11, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !2257, file: !2258, line: 281, column: 6)
!13285 = !DILocation(line: 281, column: 20, scope: !13284)
!13286 = !DILocation(line: 275, column: 45, scope: !2257)
!13287 = !DILocation(line: 285, column: 10, scope: !2257)
!13288 = !DILocation(line: 0, scope: !2380)
!13289 = !DILocation(line: 293, column: 39, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !2380, file: !2258, line: 293, column: 2)
!13291 = !DILocation(line: 293, column: 2, scope: !2380)
!13292 = !DILocation(line: 273, column: 14, scope: !2257)
!13293 = !DILocation(line: 309, column: 2, scope: !2257)
!13294 = !DILocation(line: 309, column: 11, scope: !2257)
!13295 = !DILocation(line: 311, column: 2, scope: !2257)
!13296 = !DILocation(line: 293, column: 26, scope: !13290)
!13297 = !DILocation(line: 294, column: 9, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13290, file: !2258, line: 293, column: 54)
!13299 = !DILocation(line: 295, column: 21, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13298, file: !2258, line: 295, column: 7)
!13301 = !DILocation(line: 295, column: 28, scope: !13300)
!13302 = !DILocation(line: 295, column: 7, scope: !13298)
!13303 = !DILocation(line: 299, column: 25, scope: !13298)
!13304 = !DILocation(line: 299, column: 41, scope: !13298)
!13305 = !DILocation(line: 300, column: 7, scope: !13298)
!13306 = !DILocation(line: 300, column: 26, scope: !13298)
!13307 = !DILocation(line: 299, column: 10, scope: !13298)
!13308 = !DILocation(line: 299, column: 7, scope: !13298)
!13309 = !DILocation(line: 302, column: 16, scope: !13298)
!13310 = !DILocation(line: 304, column: 20, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13298, file: !2258, line: 304, column: 7)
!13312 = !DILocation(line: 304, column: 7, scope: !13298)
!13313 = !DILocation(line: 305, column: 26, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13311, file: !2258, line: 304, column: 26)
!13315 = !DILocation(line: 305, column: 42, scope: !13314)
!13316 = !DILocation(line: 305, column: 11, scope: !13314)
!13317 = !DILocation(line: 305, column: 8, scope: !13314)
!13318 = !DILocation(line: 306, column: 3, scope: !13314)
!13319 = !DILocation(line: 293, column: 50, scope: !13290)
!13320 = !DILocation(line: 312, column: 1, scope: !2257)
!13321 = distinct !DISubprogram(name: "copy_bytes", scope: !2258, file: !2258, line: 261, type: !13322, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13324)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!315, !1277, !315, !133, !315}
!13324 = !{!13325, !13326, !13327, !13328, !13329}
!13325 = !DILocalVariable(name: "dest", arg: 1, scope: !13321, file: !2258, line: 261, type: !1277)
!13326 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13321, file: !2258, line: 261, type: !315)
!13327 = !DILocalVariable(name: "src", arg: 3, scope: !13321, file: !2258, line: 261, type: !133)
!13328 = !DILocalVariable(name: "src_size", arg: 4, scope: !13321, file: !2258, line: 261, type: !315)
!13329 = !DILocalVariable(name: "bytes_to_copy", scope: !13321, file: !2258, line: 263, type: !315)
!13330 = !DILocation(line: 0, scope: !13321)
!13331 = !DILocation(line: 265, column: 18, scope: !13321)
!13332 = !DILocation(line: 266, column: 2, scope: !13321)
!13333 = !DILocation(line: 268, column: 2, scope: !13321)
!13334 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2258, file: !2258, line: 383, type: !13335, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13337)
!13335 = !DISubroutineType(types: !13336)
!13336 = !{null, !2262}
!13337 = !{!13338}
!13338 = !DILocalVariable(name: "thread", arg: 1, scope: !13334, file: !2258, line: 383, type: !2262)
!13339 = !DILocation(line: 0, scope: !13334)
!13340 = !DILocation(line: 387, column: 2, scope: !13334)
!13341 = !DILocation(line: 388, column: 1, scope: !13334)
!13342 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2258, file: !2258, line: 528, type: !13343, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13350)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{!1277, !2262, !13345, !315, !352, !117, !117, !117, !118, !156, !133}
!13345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13346, size: 32)
!13346 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !13347)
!13347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !13348)
!13348 = !{!13349}
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13347, file: !347, line: 48, baseType: !135, size: 8)
!13350 = !{!13351, !13352, !13353, !13354, !13355, !13356, !13357, !13358, !13359, !13360, !13361}
!13351 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13342, file: !2258, line: 528, type: !2262)
!13352 = !DILocalVariable(name: "stack", arg: 2, scope: !13342, file: !2258, line: 529, type: !13345)
!13353 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13342, file: !2258, line: 529, type: !315)
!13354 = !DILocalVariable(name: "entry", arg: 4, scope: !13342, file: !2258, line: 530, type: !352)
!13355 = !DILocalVariable(name: "p1", arg: 5, scope: !13342, file: !2258, line: 531, type: !117)
!13356 = !DILocalVariable(name: "p2", arg: 6, scope: !13342, file: !2258, line: 531, type: !117)
!13357 = !DILocalVariable(name: "p3", arg: 7, scope: !13342, file: !2258, line: 531, type: !117)
!13358 = !DILocalVariable(name: "prio", arg: 8, scope: !13342, file: !2258, line: 532, type: !118)
!13359 = !DILocalVariable(name: "options", arg: 9, scope: !13342, file: !2258, line: 532, type: !156)
!13360 = !DILocalVariable(name: "name", arg: 10, scope: !13342, file: !2258, line: 532, type: !133)
!13361 = !DILocalVariable(name: "stack_ptr", scope: !13342, file: !2258, line: 534, type: !1277)
!13362 = !DILocation(line: 0, scope: !13342)
!13363 = !DILocation(line: 536, column: 2, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !2258, line: 536, column: 2)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !2258, line: 536, column: 2)
!13366 = distinct !DILexicalBlock(scope: !13342, file: !2258, line: 536, column: 2)
!13367 = !DILocation(line: 536, column: 2, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13364, file: !2258, line: 536, column: 2)
!13369 = !DILocation(line: 550, column: 28, scope: !13342)
!13370 = !DILocation(line: 550, column: 2, scope: !13342)
!13371 = !DILocation(line: 553, column: 34, scope: !13342)
!13372 = !DILocation(line: 553, column: 2, scope: !13342)
!13373 = !DILocation(line: 554, column: 14, scope: !13342)
!13374 = !DILocation(line: 564, column: 2, scope: !13342)
!13375 = !DILocation(line: 567, column: 14, scope: !13342)
!13376 = !DILocation(line: 567, column: 24, scope: !13342)
!13377 = !DILocation(line: 612, column: 7, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13342, file: !2258, line: 612, column: 6)
!13379 = !DILocation(line: 612, column: 6, scope: !13342)
!13380 = !DILocation(line: 627, column: 40, scope: !13342)
!13381 = !DILocation(line: 637, column: 2, scope: !13342)
!13382 = !DILocation(line: 613, column: 15, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13378, file: !2258, line: 612, column: 17)
!13384 = !DILocation(line: 613, column: 29, scope: !13383)
!13385 = !DILocation(line: 638, column: 1, scope: !13342)
!13386 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13056, file: !13056, line: 78, type: !13387, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13389)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!146, !117}
!13389 = !{!13390}
!13390 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13386, file: !13056, line: 78, type: !117)
!13391 = !DILocation(line: 0, scope: !13386)
!13392 = !DILocation(line: 80, column: 21, scope: !13386)
!13393 = !DILocation(line: 80, column: 2, scope: !13386)
!13394 = distinct !DISubprogram(name: "z_waitq_init", scope: !13395, file: !13395, line: 47, type: !13396, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13398)
!13395 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !2293}
!13398 = !{!13399}
!13399 = !DILocalVariable(name: "w", arg: 1, scope: !13394, file: !13395, line: 47, type: !2293)
!13400 = !DILocation(line: 0, scope: !13394)
!13401 = !DILocation(line: 49, column: 21, scope: !13394)
!13402 = !DILocation(line: 49, column: 2, scope: !13394)
!13403 = !DILocation(line: 50, column: 1, scope: !13394)
!13404 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2258, file: !2258, line: 791, type: !13405, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13408)
!13405 = !DISubroutineType(types: !13406)
!13406 = !{null, !13407, !118, !156, !32}
!13407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!13408 = !{!13409, !13410, !13411, !13412}
!13409 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13404, file: !2258, line: 791, type: !13407)
!13410 = !DILocalVariable(name: "priority", arg: 2, scope: !13404, file: !2258, line: 791, type: !118)
!13411 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13404, file: !2258, line: 792, type: !156)
!13412 = !DILocalVariable(name: "options", arg: 4, scope: !13404, file: !2258, line: 792, type: !32)
!13413 = !DILocation(line: 0, scope: !13404)
!13414 = !DILocation(line: 795, column: 15, scope: !13404)
!13415 = !DILocation(line: 795, column: 25, scope: !13404)
!13416 = !DILocation(line: 796, column: 30, scope: !13404)
!13417 = !DILocation(line: 796, column: 15, scope: !13404)
!13418 = !DILocation(line: 796, column: 28, scope: !13404)
!13419 = !DILocation(line: 797, column: 30, scope: !13404)
!13420 = !DILocation(line: 797, column: 15, scope: !13404)
!13421 = !DILocation(line: 797, column: 28, scope: !13404)
!13422 = !DILocation(line: 799, column: 22, scope: !13404)
!13423 = !DILocation(line: 799, column: 15, scope: !13404)
!13424 = !DILocation(line: 799, column: 20, scope: !13404)
!13425 = !DILocation(line: 801, column: 15, scope: !13404)
!13426 = !DILocation(line: 801, column: 28, scope: !13404)
!13427 = !DILocation(line: 814, column: 2, scope: !13404)
!13428 = !DILocation(line: 815, column: 1, scope: !13404)
!13429 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2258, file: !2258, line: 449, type: !13430, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13432)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!1277, !2262, !13345, !315}
!13432 = !{!13433, !13434, !13435, !13436, !13437, !13438, !13439, !13440}
!13433 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13429, file: !2258, line: 449, type: !2262)
!13434 = !DILocalVariable(name: "stack", arg: 2, scope: !13429, file: !2258, line: 450, type: !13345)
!13435 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13429, file: !2258, line: 450, type: !315)
!13436 = !DILocalVariable(name: "stack_obj_size", scope: !13429, file: !2258, line: 452, type: !315)
!13437 = !DILocalVariable(name: "stack_buf_size", scope: !13429, file: !2258, line: 452, type: !315)
!13438 = !DILocalVariable(name: "stack_ptr", scope: !13429, file: !2258, line: 453, type: !1277)
!13439 = !DILocalVariable(name: "stack_buf_start", scope: !13429, file: !2258, line: 453, type: !1277)
!13440 = !DILocalVariable(name: "delta", scope: !13429, file: !2258, line: 454, type: !315)
!13441 = !DILocation(line: 0, scope: !13429)
!13442 = !DILocation(line: 465, column: 20, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13429, file: !2258, line: 463, column: 2)
!13444 = !DILocation(line: 466, column: 21, scope: !13443)
!13445 = !DILocation(line: 473, column: 28, scope: !13429)
!13446 = !DILocation(line: 514, column: 33, scope: !13429)
!13447 = !DILocation(line: 514, column: 25, scope: !13429)
!13448 = !DILocation(line: 514, column: 31, scope: !13429)
!13449 = !DILocation(line: 515, column: 25, scope: !13429)
!13450 = !DILocation(line: 515, column: 30, scope: !13429)
!13451 = !DILocation(line: 516, column: 25, scope: !13429)
!13452 = !DILocation(line: 516, column: 31, scope: !13429)
!13453 = !DILocation(line: 520, column: 2, scope: !13429)
!13454 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !13455, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13457)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!1277, !13345}
!13457 = !{!13458}
!13458 = !DILocalVariable(name: "sym", arg: 1, scope: !13454, file: !347, line: 331, type: !13345)
!13459 = !DILocation(line: 0, scope: !13454)
!13460 = !DILocation(line: 333, column: 21, scope: !13454)
!13461 = !DILocation(line: 333, column: 2, scope: !13454)
!13462 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13463, file: !13463, line: 40, type: !13464, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13466)
!13463 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13464 = !DISubroutineType(types: !13465)
!13465 = !{null, !13407}
!13466 = !{!13467}
!13467 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13462, file: !13463, line: 40, type: !13407)
!13468 = !DILocation(line: 0, scope: !13462)
!13469 = !DILocation(line: 42, column: 31, scope: !13462)
!13470 = !DILocation(line: 42, column: 2, scope: !13462)
!13471 = !DILocation(line: 43, column: 1, scope: !13462)
!13472 = distinct !DISubprogram(name: "z_init_timeout", scope: !13463, file: !13463, line: 25, type: !2319, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13473)
!13473 = !{!13474}
!13474 = !DILocalVariable(name: "to", arg: 1, scope: !13472, file: !13463, line: 25, type: !2321)
!13475 = !DILocation(line: 0, scope: !13472)
!13476 = !DILocation(line: 27, column: 22, scope: !13472)
!13477 = !DILocation(line: 27, column: 2, scope: !13472)
!13478 = !DILocation(line: 28, column: 1, scope: !13472)
!13479 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !13480, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13482)
!13480 = !DISubroutineType(types: !13481)
!13481 = !{null, !2367}
!13482 = !{!13483}
!13483 = !DILocalVariable(name: "node", arg: 1, scope: !13479, file: !235, line: 211, type: !2367)
!13484 = !DILocation(line: 0, scope: !13479)
!13485 = !DILocation(line: 213, column: 8, scope: !13479)
!13486 = !DILocation(line: 213, column: 13, scope: !13479)
!13487 = !DILocation(line: 214, column: 8, scope: !13479)
!13488 = !DILocation(line: 214, column: 13, scope: !13479)
!13489 = !DILocation(line: 215, column: 1, scope: !13479)
!13490 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13491, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13494)
!13491 = !DISubroutineType(types: !13492)
!13492 = !{null, !13493}
!13493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!13494 = !{!13495}
!13495 = !DILocalVariable(name: "list", arg: 1, scope: !13490, file: !235, line: 197, type: !13493)
!13496 = !DILocation(line: 0, scope: !13490)
!13497 = !DILocation(line: 199, column: 8, scope: !13490)
!13498 = !DILocation(line: 199, column: 13, scope: !13490)
!13499 = !DILocation(line: 200, column: 8, scope: !13490)
!13500 = !DILocation(line: 200, column: 13, scope: !13490)
!13501 = !DILocation(line: 201, column: 1, scope: !13490)
!13502 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2258, file: !2258, line: 641, type: !13503, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13509)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{!2261, !2262, !13345, !315, !352, !117, !117, !117, !118, !156, !13505}
!13505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !13506)
!13506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !13507)
!13507 = !{!13508}
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13506, file: !114, line: 66, baseType: !113, size: 64)
!13509 = !{!13510, !13511, !13512, !13513, !13514, !13515, !13516, !13517, !13518, !13519}
!13510 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13502, file: !2258, line: 641, type: !2262)
!13511 = !DILocalVariable(name: "stack", arg: 2, scope: !13502, file: !2258, line: 642, type: !13345)
!13512 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13502, file: !2258, line: 643, type: !315)
!13513 = !DILocalVariable(name: "entry", arg: 4, scope: !13502, file: !2258, line: 643, type: !352)
!13514 = !DILocalVariable(name: "p1", arg: 5, scope: !13502, file: !2258, line: 644, type: !117)
!13515 = !DILocalVariable(name: "p2", arg: 6, scope: !13502, file: !2258, line: 644, type: !117)
!13516 = !DILocalVariable(name: "p3", arg: 7, scope: !13502, file: !2258, line: 644, type: !117)
!13517 = !DILocalVariable(name: "prio", arg: 8, scope: !13502, file: !2258, line: 645, type: !118)
!13518 = !DILocalVariable(name: "options", arg: 9, scope: !13502, file: !2258, line: 645, type: !156)
!13519 = !DILocalVariable(name: "delay", arg: 10, scope: !13502, file: !2258, line: 645, type: !13505)
!13520 = !DILocation(line: 0, scope: !13502)
!13521 = !DILocation(line: 1031, column: 3, scope: !13232, inlinedAt: !13522)
!13522 = distinct !DILocation(line: 48, column: 10, scope: !13236, inlinedAt: !13523)
!13523 = distinct !DILocation(line: 647, column: 2, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13525, file: !2258, line: 647, column: 2)
!13525 = distinct !DILexicalBlock(scope: !13502, file: !2258, line: 647, column: 2)
!13526 = !DILocation(line: 0, scope: !13232, inlinedAt: !13522)
!13527 = !DILocation(line: 48, column: 9, scope: !13236, inlinedAt: !13523)
!13528 = !DILocation(line: 647, column: 2, scope: !13525)
!13529 = !DILocation(line: 647, column: 2, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13524, file: !2258, line: 647, column: 2)
!13531 = !DILocation(line: 649, column: 2, scope: !13502)
!13532 = !DILocation(line: 652, column: 7, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13502, file: !2258, line: 652, column: 6)
!13534 = !DILocation(line: 652, column: 6, scope: !13502)
!13535 = !DILocation(line: 653, column: 3, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13533, file: !2258, line: 652, column: 39)
!13537 = !DILocation(line: 654, column: 2, scope: !13536)
!13538 = !DILocation(line: 656, column: 2, scope: !13502)
!13539 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2258, file: !2258, line: 401, type: !13540, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13542)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{null, !2262, !13505}
!13542 = !{!13543, !13544}
!13543 = !DILocalVariable(name: "thread", arg: 1, scope: !13539, file: !2258, line: 401, type: !2262)
!13544 = !DILocalVariable(name: "delay", arg: 2, scope: !13539, file: !2258, line: 401, type: !13505)
!13545 = !DILocation(line: 0, scope: !13539)
!13546 = !DILocation(line: 404, column: 6, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13539, file: !2258, line: 404, column: 6)
!13548 = !DILocation(line: 404, column: 6, scope: !13539)
!13549 = !DILocation(line: 405, column: 3, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13547, file: !2258, line: 404, column: 38)
!13551 = !DILocation(line: 406, column: 2, scope: !13550)
!13552 = !DILocation(line: 407, column: 3, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13547, file: !2258, line: 406, column: 9)
!13554 = !DILocation(line: 413, column: 1, scope: !13539)
!13555 = distinct !DISubprogram(name: "k_thread_start", scope: !3533, file: !3533, line: 205, type: !13556, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13558)
!13556 = !DISubroutineType(types: !13557)
!13557 = !{null, !2261}
!13558 = !{!13559}
!13559 = !DILocalVariable(name: "thread", arg: 1, scope: !13555, file: !3533, line: 205, type: !2261)
!13560 = !DILocation(line: 0, scope: !13555)
!13561 = !DILocation(line: 214, column: 2, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13555, file: !3533, line: 214, column: 2)
!13563 = !{i64 2155093632}
!13564 = !DILocation(line: 215, column: 2, scope: !13555)
!13565 = !DILocation(line: 216, column: 1, scope: !13555)
!13566 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13463, file: !13463, line: 47, type: !13540, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13567)
!13567 = !{!13568, !13569}
!13568 = !DILocalVariable(name: "thread", arg: 1, scope: !13566, file: !13463, line: 47, type: !2262)
!13569 = !DILocalVariable(name: "ticks", arg: 2, scope: !13566, file: !13463, line: 47, type: !13505)
!13570 = !DILocation(line: 0, scope: !13566)
!13571 = !DILocation(line: 49, column: 30, scope: !13566)
!13572 = !DILocation(line: 49, column: 2, scope: !13566)
!13573 = !DILocation(line: 50, column: 1, scope: !13566)
!13574 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2258, file: !2258, line: 748, type: !365, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13575)
!13575 = !{!13576, !13593}
!13576 = !DILocalVariable(name: "thread_data", scope: !13577, file: !2258, line: 750, type: !13578)
!13577 = distinct !DILexicalBlock(scope: !13574, file: !2258, line: 750, column: 2)
!13578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13579, size: 32)
!13579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !13580)
!13580 = !{!13581, !13582, !13583, !13584, !13585, !13586, !13587, !13588, !13589, !13590, !13591, !13592}
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13579, file: !220, line: 621, baseType: !2262, size: 32)
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13579, file: !220, line: 622, baseType: !13345, size: 32, offset: 32)
!13583 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13579, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13579, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13579, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13579, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13579, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!13588 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13579, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!13589 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13579, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13579, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13579, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13579, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!13593 = !DILocalVariable(name: "thread_data", scope: !13594, file: !2258, line: 781, type: !13578)
!13594 = distinct !DILexicalBlock(scope: !13574, file: !2258, line: 781, column: 2)
!13595 = !DILocation(line: 0, scope: !13577)
!13596 = !DILocation(line: 750, column: 2, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13598, file: !2258, line: 750, column: 2)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !2258, line: 750, column: 2)
!13599 = distinct !DILexicalBlock(scope: !13577, file: !2258, line: 750, column: 2)
!13600 = !DILocation(line: 750, column: 2, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !2258, line: 750, column: 2)
!13602 = distinct !DILexicalBlock(scope: !13597, file: !2258, line: 750, column: 2)
!13603 = !DILocation(line: 750, column: 2, scope: !13598)
!13604 = !DILocation(line: 750, column: 2, scope: !13577)
!13605 = !DILocation(line: 780, column: 2, scope: !13574)
!13606 = !DILocation(line: 0, scope: !13594)
!13607 = !DILocation(line: 781, column: 2, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !2258, line: 781, column: 2)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !2258, line: 781, column: 2)
!13610 = distinct !DILexicalBlock(scope: !13594, file: !2258, line: 781, column: 2)
!13611 = !DILocation(line: 752, column: 17, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13599, file: !2258, line: 750, column: 38)
!13613 = !DILocation(line: 753, column: 17, scope: !13612)
!13614 = !DILocation(line: 754, column: 17, scope: !13612)
!13615 = !DILocation(line: 755, column: 17, scope: !13612)
!13616 = !DILocation(line: 756, column: 17, scope: !13612)
!13617 = !DILocation(line: 757, column: 17, scope: !13612)
!13618 = !DILocation(line: 758, column: 17, scope: !13612)
!13619 = !DILocation(line: 759, column: 17, scope: !13612)
!13620 = !DILocation(line: 760, column: 17, scope: !13612)
!13621 = !DILocation(line: 751, column: 3, scope: !13612)
!13622 = !DILocation(line: 763, column: 16, scope: !13612)
!13623 = !DILocation(line: 763, column: 29, scope: !13612)
!13624 = !DILocation(line: 763, column: 39, scope: !13612)
!13625 = !DILocation(line: 750, column: 2, scope: !13599)
!13626 = !DILocation(line: 750, column: 2, scope: !13602)
!13627 = distinct !{!13627, !13604, !13628}
!13628 = !DILocation(line: 764, column: 2, scope: !13577)
!13629 = !DILocation(line: 781, column: 2, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !2258, line: 781, column: 2)
!13631 = distinct !DILexicalBlock(scope: !13608, file: !2258, line: 781, column: 2)
!13632 = !DILocation(line: 781, column: 2, scope: !13609)
!13633 = !DILocation(line: 781, column: 2, scope: !13594)
!13634 = !DILocation(line: 787, column: 2, scope: !13574)
!13635 = !DILocation(line: 788, column: 1, scope: !13574)
!13636 = !DILocation(line: 782, column: 20, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !2258, line: 782, column: 7)
!13638 = distinct !DILexicalBlock(scope: !13610, file: !2258, line: 781, column: 38)
!13639 = !DILocation(line: 782, column: 31, scope: !13637)
!13640 = !DILocation(line: 782, column: 7, scope: !13638)
!13641 = !DILocation(line: 783, column: 37, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13637, file: !2258, line: 782, column: 51)
!13643 = !DILocation(line: 784, column: 10, scope: !13642)
!13644 = !DILocation(line: 783, column: 4, scope: !13642)
!13645 = !DILocation(line: 785, column: 3, scope: !13642)
!13646 = !DILocation(line: 781, column: 2, scope: !13610)
!13647 = !DILocation(line: 781, column: 2, scope: !13631)
!13648 = distinct !{!13648, !13633, !13649}
!13649 = !DILocation(line: 786, column: 2, scope: !13594)
!13650 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3500, file: !3500, line: 403, type: !3501, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13651)
!13651 = !{!13652}
!13652 = !DILocalVariable(name: "t", arg: 1, scope: !13650, file: !3500, line: 403, type: !213)
!13653 = !DILocation(line: 0, scope: !13650)
!13654 = !DILocalVariable(name: "t", arg: 1, scope: !13655, file: !3500, line: 102, type: !213)
!13655 = distinct !DISubprogram(name: "z_tmcvt", scope: !3500, file: !3500, line: 102, type: !3508, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13656)
!13656 = !{!13654, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664, !13665, !13666}
!13657 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13655, file: !3500, line: 102, type: !156)
!13658 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13655, file: !3500, line: 103, type: !156)
!13659 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13655, file: !3500, line: 103, type: !146)
!13660 = !DILocalVariable(name: "result32", arg: 5, scope: !13655, file: !3500, line: 104, type: !146)
!13661 = !DILocalVariable(name: "round_up", arg: 6, scope: !13655, file: !3500, line: 104, type: !146)
!13662 = !DILocalVariable(name: "round_off", arg: 7, scope: !13655, file: !3500, line: 105, type: !146)
!13663 = !DILocalVariable(name: "mul_ratio", scope: !13655, file: !3500, line: 107, type: !146)
!13664 = !DILocalVariable(name: "div_ratio", scope: !13655, file: !3500, line: 109, type: !146)
!13665 = !DILocalVariable(name: "off", scope: !13655, file: !3500, line: 116, type: !213)
!13666 = !DILocalVariable(name: "rdivisor", scope: !13667, file: !3500, line: 119, type: !156)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !3500, line: 118, column: 18)
!13668 = distinct !DILexicalBlock(scope: !13655, file: !3500, line: 118, column: 6)
!13669 = !DILocation(line: 0, scope: !13655, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 406, column: 9, scope: !13650)
!13671 = !DILocation(line: 145, column: 13, scope: !13672, inlinedAt: !13670)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !3500, line: 144, column: 10)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !3500, line: 142, column: 7)
!13674 = distinct !DILexicalBlock(scope: !13675, file: !3500, line: 141, column: 24)
!13675 = distinct !DILexicalBlock(scope: !13676, file: !3500, line: 141, column: 13)
!13676 = distinct !DILexicalBlock(scope: !13655, file: !3500, line: 134, column: 6)
!13677 = !DILocation(line: 406, column: 2, scope: !13650)
!13678 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2258, file: !2258, line: 817, type: !3916, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13679)
!13679 = !{!13680, !13681, !13682, !13683}
!13680 = !DILocalVariable(name: "entry", arg: 1, scope: !13678, file: !2258, line: 817, type: !352)
!13681 = !DILocalVariable(name: "p1", arg: 2, scope: !13678, file: !2258, line: 818, type: !117)
!13682 = !DILocalVariable(name: "p2", arg: 3, scope: !13678, file: !2258, line: 818, type: !117)
!13683 = !DILocalVariable(name: "p3", arg: 4, scope: !13678, file: !2258, line: 818, type: !117)
!13684 = !DILocation(line: 0, scope: !13678)
!13685 = !DILocation(line: 822, column: 2, scope: !13678)
!13686 = !DILocation(line: 822, column: 17, scope: !13678)
!13687 = !DILocation(line: 822, column: 30, scope: !13678)
!13688 = !DILocation(line: 823, column: 2, scope: !13678)
!13689 = !DILocation(line: 845, column: 2, scope: !13678)
!13690 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2258, file: !2258, line: 853, type: !13691, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13694)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{!146, !13693}
!13693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!13694 = !{!13695, !13696}
!13695 = !DILocalVariable(name: "l", arg: 1, scope: !13690, file: !2258, line: 853, type: !13693)
!13696 = !DILocalVariable(name: "thread_cpu", scope: !13690, file: !2258, line: 855, type: !22)
!13697 = !DILocation(line: 0, scope: !13690)
!13698 = !DILocation(line: 855, column: 28, scope: !13690)
!13699 = !DILocation(line: 857, column: 17, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13690, file: !2258, line: 857, column: 6)
!13701 = !DILocation(line: 857, column: 6, scope: !13690)
!13702 = !DILocation(line: 858, column: 19, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13704, file: !2258, line: 858, column: 7)
!13704 = distinct !DILexicalBlock(scope: !13700, file: !2258, line: 857, column: 24)
!13705 = !DILocation(line: 858, column: 42, scope: !13703)
!13706 = !DILocation(line: 858, column: 28, scope: !13703)
!13707 = !DILocation(line: 858, column: 25, scope: !13703)
!13708 = !DILocation(line: 858, column: 7, scope: !13704)
!13709 = !DILocation(line: 862, column: 2, scope: !13690)
!13710 = !DILocation(line: 863, column: 1, scope: !13690)
!13711 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2258, file: !2258, line: 865, type: !13691, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13712)
!13712 = !{!13713}
!13713 = !DILocalVariable(name: "l", arg: 1, scope: !13711, file: !2258, line: 865, type: !13693)
!13714 = !DILocation(line: 0, scope: !13711)
!13715 = !DILocation(line: 867, column: 9, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13711, file: !2258, line: 867, column: 6)
!13717 = !DILocation(line: 867, column: 38, scope: !13716)
!13718 = !DILocation(line: 867, column: 24, scope: !13716)
!13719 = !DILocation(line: 867, column: 54, scope: !13716)
!13720 = !DILocation(line: 867, column: 43, scope: !13716)
!13721 = !DILocation(line: 867, column: 41, scope: !13716)
!13722 = !DILocation(line: 867, column: 20, scope: !13716)
!13723 = !DILocation(line: 867, column: 6, scope: !13711)
!13724 = !DILocation(line: 870, column: 16, scope: !13711)
!13725 = !DILocation(line: 871, column: 2, scope: !13711)
!13726 = !DILocation(line: 872, column: 1, scope: !13711)
!13727 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2258, file: !2258, line: 874, type: !13728, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13730)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !13693}
!13730 = !{!13731}
!13731 = !DILocalVariable(name: "l", arg: 1, scope: !13727, file: !2258, line: 874, type: !13693)
!13732 = !DILocation(line: 0, scope: !13727)
!13733 = !DILocation(line: 876, column: 32, scope: !13727)
!13734 = !DILocation(line: 876, column: 18, scope: !13727)
!13735 = !DILocation(line: 876, column: 48, scope: !13727)
!13736 = !DILocation(line: 876, column: 37, scope: !13727)
!13737 = !DILocation(line: 876, column: 35, scope: !13727)
!13738 = !DILocation(line: 876, column: 5, scope: !13727)
!13739 = !DILocation(line: 876, column: 16, scope: !13727)
!13740 = !DILocation(line: 877, column: 1, scope: !13727)
!13741 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2258, file: !2258, line: 888, type: !13742, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13744)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{!118, !2262}
!13744 = !{!13745}
!13745 = !DILocalVariable(name: "thread", arg: 1, scope: !13741, file: !2258, line: 888, type: !2262)
!13746 = !DILocation(line: 0, scope: !13741)
!13747 = !DILocation(line: 893, column: 2, scope: !13741)
!13748 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2258, file: !2258, line: 897, type: !13749, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13751)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{!118, !2262, !32}
!13751 = !{!13752, !13753}
!13752 = !DILocalVariable(name: "thread", arg: 1, scope: !13748, file: !2258, line: 897, type: !2262)
!13753 = !DILocalVariable(name: "options", arg: 2, scope: !13748, file: !2258, line: 897, type: !32)
!13754 = !DILocation(line: 0, scope: !13748)
!13755 = !DILocation(line: 902, column: 2, scope: !13748)
!13756 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2258, file: !2258, line: 1072, type: !13757, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13762)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{!118, !2261, !13759}
!13759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13760, size: 32)
!13760 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !225, line: 234, baseType: !13761)
!13761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !225, line: 192, elements: !2203)
!13762 = !{!13763, !13764}
!13763 = !DILocalVariable(name: "thread", arg: 1, scope: !13756, file: !2258, line: 1072, type: !2261)
!13764 = !DILocalVariable(name: "stats", arg: 2, scope: !13756, file: !2258, line: 1073, type: !13759)
!13765 = !DILocation(line: 0, scope: !13756)
!13766 = !DILocation(line: 1075, column: 14, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13756, file: !2258, line: 1075, column: 6)
!13768 = !DILocation(line: 1075, column: 23, scope: !13767)
!13769 = !DILocation(line: 1086, column: 1, scope: !13756)
!13770 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2258, file: !2258, line: 1088, type: !13771, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !13773)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{!118, !13759}
!13773 = !{!13774}
!13774 = !DILocalVariable(name: "stats", arg: 1, scope: !13770, file: !2258, line: 1088, type: !13759)
!13775 = !DILocation(line: 0, scope: !13770)
!13776 = !DILocation(line: 1094, column: 12, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13770, file: !2258, line: 1094, column: 6)
!13778 = !DILocation(line: 1120, column: 1, scope: !13770)
!13779 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13780, file: !13780, line: 20, type: !365, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !2203)
!13780 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13781 = !DILocation(line: 30, column: 2, scope: !13779)
!13782 = !DILocation(line: 31, column: 1, scope: !13779)
!13783 = distinct !DISubprogram(name: "idle", scope: !13780, file: !13780, line: 33, type: !354, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13784)
!13784 = !{!13785, !13786, !13787}
!13785 = !DILocalVariable(name: "unused1", arg: 1, scope: !13783, file: !13780, line: 33, type: !117)
!13786 = !DILocalVariable(name: "unused2", arg: 2, scope: !13783, file: !13780, line: 33, type: !117)
!13787 = !DILocalVariable(name: "unused3", arg: 3, scope: !13783, file: !13780, line: 33, type: !117)
!13788 = !DILocation(line: 0, scope: !13783)
!13789 = !DILocation(line: 39, column: 2, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13791, file: !13780, line: 39, column: 2)
!13791 = distinct !DILexicalBlock(scope: !13783, file: !13780, line: 39, column: 2)
!13792 = !DILocation(line: 39, column: 2, scope: !13791)
!13793 = !DILocation(line: 39, column: 2, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13790, file: !13780, line: 39, column: 2)
!13795 = !DILocation(line: 55, column: 2, scope: !13796, inlinedAt: !13800)
!13796 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !13797)
!13797 = !{!13798, !13799}
!13798 = !DILocalVariable(name: "key", scope: !13796, file: !6236, line: 44, type: !32)
!13799 = !DILocalVariable(name: "tmp", scope: !13796, file: !6236, line: 53, type: !32)
!13800 = distinct !DILocation(line: 62, column: 10, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13783, file: !13780, line: 41, column: 15)
!13802 = !{i64 2280587}
!13803 = !DILocation(line: 0, scope: !13796, inlinedAt: !13800)
!13804 = !DILocation(line: 86, column: 3, scope: !13801)
!13805 = !DILocation(line: 41, column: 2, scope: !13783)
!13806 = distinct !{!13806, !13805, !13807}
!13807 = !DILocation(line: 105, column: 2, scope: !13783)
!13808 = distinct !DISubprogram(name: "k_cpu_idle", scope: !220, file: !220, line: 5627, type: !365, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3196, retainedNodes: !2203)
!13809 = !DILocation(line: 5629, column: 2, scope: !13808)
!13810 = !DILocation(line: 5630, column: 1, scope: !13808)
!13811 = !DISubprogram(name: "arch_cpu_idle", scope: !345, file: !345, line: 167, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!13812 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3214, file: !3214, line: 30, type: !13813, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13815)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{!117, !3223, !146}
!13815 = !{!13816, !13817, !13818, !13819}
!13816 = !DILocalVariable(name: "node", arg: 1, scope: !13812, file: !3214, line: 30, type: !3223)
!13817 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13812, file: !3214, line: 30, type: !146)
!13818 = !DILocalVariable(name: "ret", scope: !13812, file: !3214, line: 32, type: !117)
!13819 = !DILocalVariable(name: "anode", scope: !13820, file: !3214, line: 40, type: !3212)
!13820 = distinct !DILexicalBlock(scope: !13821, file: !3214, line: 34, column: 68)
!13821 = distinct !DILexicalBlock(scope: !13812, file: !3214, line: 34, column: 6)
!13822 = !DILocation(line: 0, scope: !13812)
!13823 = !DILocation(line: 34, column: 12, scope: !13821)
!13824 = !DILocation(line: 34, column: 21, scope: !13821)
!13825 = !DILocation(line: 34, column: 25, scope: !13821)
!13826 = !DILocation(line: 34, column: 52, scope: !13821)
!13827 = !DILocation(line: 34, column: 6, scope: !13812)
!13828 = !DILocation(line: 0, scope: !13820)
!13829 = !DILocation(line: 43, column: 16, scope: !13820)
!13830 = !DILocation(line: 44, column: 7, scope: !13820)
!13831 = !DILocation(line: 42, column: 11, scope: !13820)
!13832 = !DILocation(line: 45, column: 4, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !3214, line: 44, column: 19)
!13834 = distinct !DILexicalBlock(scope: !13820, file: !3214, line: 44, column: 7)
!13835 = !DILocation(line: 46, column: 3, scope: !13833)
!13836 = !DILocation(line: 52, column: 9, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13821, file: !3214, line: 47, column: 9)
!13838 = !DILocation(line: 0, scope: !13821)
!13839 = !DILocation(line: 55, column: 2, scope: !13812)
!13840 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !417, file: !417, line: 270, type: !13841, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13843)
!13841 = !DISubroutineType(types: !13842)
!13842 = !{!143, !3223}
!13843 = !{!13844}
!13844 = !DILocalVariable(name: "node", arg: 1, scope: !13840, file: !417, line: 270, type: !3223)
!13845 = !DILocation(line: 0, scope: !13840)
!13846 = !DILocation(line: 272, column: 15, scope: !13840)
!13847 = !DILocation(line: 272, column: 9, scope: !13840)
!13848 = !DILocation(line: 272, column: 2, scope: !13840)
!13849 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3214, file: !3214, line: 58, type: !13850, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13871)
!13850 = !DISubroutineType(types: !13851)
!13851 = !{null, !13852}
!13852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13853, size: 32)
!13853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !13854)
!13854 = !{!13855, !13861, !13865}
!13855 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13853, file: !220, line: 1710, baseType: !13856, size: 64)
!13856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !13857)
!13857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !13858)
!13858 = !{!13859, !13860}
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13857, file: !417, line: 42, baseType: !3223, size: 32)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13857, file: !417, line: 43, baseType: !3223, size: 32, offset: 32)
!13861 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13853, file: !220, line: 1711, baseType: !13862, size: 32, offset: 64)
!13862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !13863)
!13863 = !{!13864}
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13862, file: !334, line: 52, baseType: !22, size: 32)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13853, file: !220, line: 1712, baseType: !13866, size: 64, offset: 96)
!13866 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !13867)
!13867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !13868)
!13868 = !{!13869}
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13867, file: !261, line: 232, baseType: !13870, size: 64)
!13870 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3226)
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "queue", arg: 1, scope: !13849, file: !3214, line: 58, type: !13852)
!13873 = !DILocation(line: 0, scope: !13849)
!13874 = !DILocation(line: 60, column: 26, scope: !13849)
!13875 = !DILocation(line: 60, column: 2, scope: !13849)
!13876 = !DILocation(line: 61, column: 16, scope: !13849)
!13877 = !DILocation(line: 62, column: 23, scope: !13849)
!13878 = !DILocation(line: 62, column: 2, scope: !13849)
!13879 = !DILocation(line: 70, column: 1, scope: !13849)
!13880 = distinct !DISubprogram(name: "sys_sflist_init", scope: !417, file: !417, line: 202, type: !13881, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13884)
!13881 = !DISubroutineType(types: !13882)
!13882 = !{null, !13883}
!13883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13856, size: 32)
!13884 = !{!13885}
!13885 = !DILocalVariable(name: "list", arg: 1, scope: !13880, file: !417, line: 202, type: !13883)
!13886 = !DILocation(line: 0, scope: !13880)
!13887 = !DILocation(line: 204, column: 8, scope: !13880)
!13888 = !DILocation(line: 204, column: 13, scope: !13880)
!13889 = !DILocation(line: 205, column: 8, scope: !13880)
!13890 = !DILocation(line: 205, column: 13, scope: !13880)
!13891 = !DILocation(line: 206, column: 1, scope: !13880)
!13892 = distinct !DISubprogram(name: "z_waitq_init", scope: !13395, file: !13395, line: 47, type: !13893, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13896)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !13895}
!13895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13866, size: 32)
!13896 = !{!13897}
!13897 = !DILocalVariable(name: "w", arg: 1, scope: !13892, file: !13395, line: 47, type: !13895)
!13898 = !DILocation(line: 0, scope: !13892)
!13899 = !DILocation(line: 49, column: 21, scope: !13892)
!13900 = !DILocation(line: 49, column: 2, scope: !13892)
!13901 = !DILocation(line: 50, column: 1, scope: !13892)
!13902 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13903, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13906)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{null, !13905}
!13905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13870, size: 32)
!13906 = !{!13907}
!13907 = !DILocalVariable(name: "list", arg: 1, scope: !13902, file: !235, line: 197, type: !13905)
!13908 = !DILocation(line: 0, scope: !13902)
!13909 = !DILocation(line: 199, column: 8, scope: !13902)
!13910 = !DILocation(line: 199, column: 13, scope: !13902)
!13911 = !DILocation(line: 200, column: 8, scope: !13902)
!13912 = !DILocation(line: 200, column: 13, scope: !13902)
!13913 = !DILocation(line: 201, column: 1, scope: !13902)
!13914 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3214, file: !3214, line: 94, type: !13850, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !13915)
!13915 = !{!13916, !13917, !13922}
!13916 = !DILocalVariable(name: "queue", arg: 1, scope: !13914, file: !3214, line: 94, type: !13852)
!13917 = !DILocalVariable(name: "key", scope: !13914, file: !3214, line: 98, type: !13918)
!13918 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13919)
!13919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13920)
!13920 = !{!13921}
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13919, file: !334, line: 33, baseType: !118, size: 32)
!13922 = !DILocalVariable(name: "first_pending_thread", scope: !13914, file: !3214, line: 99, type: !13923)
!13923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13924, size: 32)
!13924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !13925)
!13925 = !{!13926, !13964, !13976, !13977, !13978, !13979, !13985, !13997}
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13924, file: !225, line: 247, baseType: !13927, size: 384)
!13927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !13928)
!13928 = !{!13929, !13939, !13940, !13941, !13942, !13951, !13952, !13953}
!13929 = !DIDerivedType(tag: DW_TAG_member, scope: !13927, file: !225, line: 60, baseType: !13930, size: 64)
!13930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13927, file: !225, line: 60, size: 64, elements: !13931)
!13931 = !{!13932, !13933}
!13932 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13930, file: !225, line: 61, baseType: !3225, size: 64)
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13930, file: !225, line: 62, baseType: !13934, size: 64)
!13934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !13935)
!13935 = !{!13936}
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13934, file: !251, line: 50, baseType: !13937, size: 64)
!13937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13938, size: 64, elements: !256)
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13934, size: 32)
!13939 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13927, file: !225, line: 68, baseType: !13895, size: 32, offset: 64)
!13940 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13927, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!13941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13927, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!13942 = !DIDerivedType(tag: DW_TAG_member, scope: !13927, file: !225, line: 90, baseType: !13943, size: 16, offset: 112)
!13943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13927, file: !225, line: 90, size: 16, elements: !13944)
!13944 = !{!13945, !13950}
!13945 = !DIDerivedType(tag: DW_TAG_member, scope: !13943, file: !225, line: 91, baseType: !13946, size: 16)
!13946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13943, file: !225, line: 91, size: 16, elements: !13947)
!13947 = !{!13948, !13949}
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13946, file: !225, line: 96, baseType: !275, size: 8)
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13946, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!13950 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13943, file: !225, line: 100, baseType: !279, size: 16)
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13927, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13927, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13927, file: !225, line: 131, baseType: !13954, size: 192, offset: 192)
!13954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !13955)
!13955 = !{!13956, !13957, !13963}
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13954, file: !261, line: 245, baseType: !3225, size: 64)
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13954, file: !261, line: 246, baseType: !13958, size: 32, offset: 64)
!13958 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !13959)
!13959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13960, size: 32)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{null, !13962}
!13962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13954, size: 32)
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13954, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!13964 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13924, file: !225, line: 250, baseType: !13965, size: 288, offset: 384)
!13965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !13966)
!13966 = !{!13967, !13968, !13969, !13970, !13971, !13972, !13973, !13974, !13975}
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13965, file: !296, line: 26, baseType: !156, size: 32)
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13965, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13965, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!13970 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13965, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13965, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13965, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13965, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13965, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13965, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13924, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13924, file: !225, line: 256, baseType: !13866, size: 64, offset: 704)
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13924, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13924, file: !225, line: 300, baseType: !13980, size: 96, offset: 800)
!13980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !13981)
!13981 = !{!13982, !13983, !13984}
!13982 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13980, file: !225, line: 153, baseType: !22, size: 32)
!13983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13980, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!13984 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13980, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!13985 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13924, file: !225, line: 325, baseType: !13986, size: 32, offset: 896)
!13986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13987, size: 32)
!13987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !13988)
!13988 = !{!13989, !13995, !13996}
!13989 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13987, file: !220, line: 5074, baseType: !13990, size: 96)
!13990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !13991)
!13991 = !{!13992, !13993, !13994}
!13992 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13990, file: !324, line: 57, baseType: !327, size: 32)
!13993 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13990, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13990, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13987, file: !220, line: 5075, baseType: !13866, size: 64, offset: 96)
!13996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13987, file: !220, line: 5076, baseType: !13862, size: 32, offset: 160)
!13997 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13924, file: !225, line: 343, baseType: !13998, size: 64, offset: 928)
!13998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !13999)
!13999 = !{!14000, !14001}
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13998, file: !296, line: 63, baseType: !156, size: 32)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13998, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!14002 = !DILocation(line: 0, scope: !13914)
!14003 = !DILocation(line: 98, column: 45, scope: !13914)
!14004 = !DILocalVariable(name: "l", arg: 1, scope: !14005, file: !334, line: 136, type: !14008)
!14005 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !14006, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14009)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{!13918, !14008}
!14008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13862, size: 32)
!14009 = !{!14004, !14010}
!14010 = !DILocalVariable(name: "k", scope: !14005, file: !334, line: 139, type: !13918)
!14011 = !DILocation(line: 0, scope: !14005, inlinedAt: !14012)
!14012 = distinct !DILocation(line: 98, column: 25, scope: !13914)
!14013 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14018)
!14014 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14015)
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "key", scope: !14014, file: !6236, line: 44, type: !32)
!14017 = !DILocalVariable(name: "tmp", scope: !14014, file: !6236, line: 53, type: !32)
!14018 = distinct !DILocation(line: 145, column: 10, scope: !14005, inlinedAt: !14012)
!14019 = !{i64 2288328}
!14020 = !DILocation(line: 0, scope: !14014, inlinedAt: !14018)
!14021 = !DILocation(line: 148, column: 2, scope: !14022, inlinedAt: !14012)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !334, line: 148, column: 2)
!14023 = distinct !DILexicalBlock(scope: !14005, file: !334, line: 148, column: 2)
!14024 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14012)
!14025 = !DILocation(line: 148, column: 2, scope: !14026, inlinedAt: !14012)
!14026 = distinct !DILexicalBlock(scope: !14022, file: !334, line: 148, column: 2)
!14027 = !DILocation(line: 160, column: 2, scope: !14005, inlinedAt: !14012)
!14028 = !DILocation(line: 101, column: 55, scope: !13914)
!14029 = !DILocation(line: 101, column: 25, scope: !13914)
!14030 = !DILocation(line: 103, column: 27, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !13914, file: !3214, line: 103, column: 6)
!14032 = !DILocation(line: 103, column: 6, scope: !13914)
!14033 = !DILocation(line: 104, column: 3, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14031, file: !3214, line: 103, column: 36)
!14035 = !DILocation(line: 105, column: 2, scope: !14034)
!14036 = !DILocation(line: 108, column: 2, scope: !13914)
!14037 = !DILocation(line: 109, column: 1, scope: !13914)
!14038 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3214, file: !3214, line: 81, type: !14039, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14041)
!14039 = !DISubroutineType(types: !14040)
!14040 = !{null, !13923, !117}
!14041 = !{!14042, !14043}
!14042 = !DILocalVariable(name: "thread", arg: 1, scope: !14038, file: !3214, line: 81, type: !13923)
!14043 = !DILocalVariable(name: "data", arg: 2, scope: !14038, file: !3214, line: 81, type: !117)
!14044 = !DILocation(line: 0, scope: !14038)
!14045 = !DILocalVariable(name: "thread", arg: 1, scope: !14046, file: !14047, line: 134, type: !13923)
!14046 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14047, file: !14047, line: 134, type: !14048, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14050)
!14047 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14048 = !DISubroutineType(types: !14049)
!14049 = !{null, !13923, !32, !117}
!14050 = !{!14045, !14051, !14052}
!14051 = !DILocalVariable(name: "value", arg: 2, scope: !14046, file: !14047, line: 135, type: !32)
!14052 = !DILocalVariable(name: "data", arg: 3, scope: !14046, file: !14047, line: 136, type: !117)
!14053 = !DILocation(line: 0, scope: !14046, inlinedAt: !14054)
!14054 = distinct !DILocation(line: 83, column: 2, scope: !14038)
!14055 = !DILocalVariable(name: "thread", arg: 1, scope: !14056, file: !13076, line: 65, type: !13923)
!14056 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13076, file: !13076, line: 65, type: !14057, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14059)
!14057 = !DISubroutineType(types: !14058)
!14058 = !{null, !13923, !32}
!14059 = !{!14055, !14060}
!14060 = !DILocalVariable(name: "value", arg: 2, scope: !14056, file: !13076, line: 65, type: !32)
!14061 = !DILocation(line: 0, scope: !14056, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 138, column: 2, scope: !14046, inlinedAt: !14054)
!14063 = !DILocation(line: 67, column: 15, scope: !14056, inlinedAt: !14062)
!14064 = !DILocation(line: 67, column: 33, scope: !14056, inlinedAt: !14062)
!14065 = !DILocation(line: 139, column: 15, scope: !14046, inlinedAt: !14054)
!14066 = !DILocation(line: 139, column: 25, scope: !14046, inlinedAt: !14054)
!14067 = !DILocation(line: 84, column: 2, scope: !14038)
!14068 = !DILocation(line: 85, column: 1, scope: !14038)
!14069 = distinct !DISubprogram(name: "k_queue_insert", scope: !3214, file: !3214, line: 175, type: !14070, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14072)
!14070 = !DISubroutineType(types: !14071)
!14071 = !{null, !13852, !117, !117}
!14072 = !{!14073, !14074, !14075}
!14073 = !DILocalVariable(name: "queue", arg: 1, scope: !14069, file: !3214, line: 175, type: !13852)
!14074 = !DILocalVariable(name: "prev", arg: 2, scope: !14069, file: !3214, line: 175, type: !117)
!14075 = !DILocalVariable(name: "data", arg: 3, scope: !14069, file: !3214, line: 175, type: !117)
!14076 = !DILocation(line: 0, scope: !14069)
!14077 = !DILocation(line: 179, column: 8, scope: !14069)
!14078 = !DILocation(line: 182, column: 1, scope: !14069)
!14079 = distinct !DISubprogram(name: "queue_insert", scope: !3214, file: !3214, line: 120, type: !14080, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14082)
!14080 = !DISubroutineType(types: !14081)
!14081 = !{!362, !13852, !117, !117, !146, !146}
!14082 = !{!14083, !14084, !14085, !14086, !14087, !14088, !14089, !14090}
!14083 = !DILocalVariable(name: "queue", arg: 1, scope: !14079, file: !3214, line: 120, type: !13852)
!14084 = !DILocalVariable(name: "prev", arg: 2, scope: !14079, file: !3214, line: 120, type: !117)
!14085 = !DILocalVariable(name: "data", arg: 3, scope: !14079, file: !3214, line: 120, type: !117)
!14086 = !DILocalVariable(name: "alloc", arg: 4, scope: !14079, file: !3214, line: 121, type: !146)
!14087 = !DILocalVariable(name: "is_append", arg: 5, scope: !14079, file: !3214, line: 121, type: !146)
!14088 = !DILocalVariable(name: "first_pending_thread", scope: !14079, file: !3214, line: 123, type: !13923)
!14089 = !DILocalVariable(name: "key", scope: !14079, file: !3214, line: 124, type: !13918)
!14090 = !DILocalVariable(name: "anode", scope: !14091, file: !3214, line: 146, type: !3212)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !3214, line: 145, column: 13)
!14092 = distinct !DILexicalBlock(scope: !14079, file: !3214, line: 145, column: 6)
!14093 = !DILocation(line: 0, scope: !14079)
!14094 = !DILocation(line: 124, column: 45, scope: !14079)
!14095 = !DILocation(line: 0, scope: !14005, inlinedAt: !14096)
!14096 = distinct !DILocation(line: 124, column: 25, scope: !14079)
!14097 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14098)
!14098 = distinct !DILocation(line: 145, column: 10, scope: !14005, inlinedAt: !14096)
!14099 = !DILocation(line: 0, scope: !14014, inlinedAt: !14098)
!14100 = !DILocation(line: 148, column: 2, scope: !14022, inlinedAt: !14096)
!14101 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14096)
!14102 = !DILocation(line: 148, column: 2, scope: !14026, inlinedAt: !14096)
!14103 = !DILocation(line: 160, column: 2, scope: !14005, inlinedAt: !14096)
!14104 = !DILocation(line: 128, column: 6, scope: !14079)
!14105 = !DILocation(line: 129, column: 39, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14107, file: !3214, line: 128, column: 17)
!14107 = distinct !DILexicalBlock(scope: !14079, file: !3214, line: 128, column: 6)
!14108 = !DILocation(line: 129, column: 10, scope: !14106)
!14109 = !DILocation(line: 130, column: 2, scope: !14106)
!14110 = !DILocation(line: 131, column: 55, scope: !14079)
!14111 = !DILocation(line: 131, column: 25, scope: !14079)
!14112 = !DILocation(line: 133, column: 27, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14079, file: !3214, line: 133, column: 6)
!14114 = !DILocation(line: 133, column: 6, scope: !14079)
!14115 = !DILocation(line: 136, column: 3, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14113, file: !3214, line: 133, column: 36)
!14117 = !DILocation(line: 137, column: 3, scope: !14116)
!14118 = !DILocation(line: 141, column: 3, scope: !14116)
!14119 = !DILocation(line: 145, column: 6, scope: !14079)
!14120 = !DILocation(line: 148, column: 11, scope: !14091)
!14121 = !DILocation(line: 0, scope: !14091)
!14122 = !DILocation(line: 149, column: 13, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14091, file: !3214, line: 149, column: 7)
!14124 = !DILocation(line: 149, column: 7, scope: !14091)
!14125 = !DILocalVariable(name: "key", arg: 2, scope: !14126, file: !334, line: 190, type: !13918)
!14126 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !14127, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14129)
!14127 = !DISubroutineType(types: !14128)
!14128 = !{null, !14008, !13918}
!14129 = !{!14130, !14125}
!14130 = !DILocalVariable(name: "l", arg: 1, scope: !14126, file: !334, line: 189, type: !14008)
!14131 = !DILocation(line: 0, scope: !14126, inlinedAt: !14132)
!14132 = distinct !DILocation(line: 150, column: 4, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14123, file: !3214, line: 149, column: 22)
!14134 = !DILocation(line: 194, column: 2, scope: !14135, inlinedAt: !14132)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !334, line: 194, column: 2)
!14136 = distinct !DILexicalBlock(scope: !14126, file: !334, line: 194, column: 2)
!14137 = !DILocation(line: 194, column: 2, scope: !14136, inlinedAt: !14132)
!14138 = !DILocation(line: 194, column: 2, scope: !14139, inlinedAt: !14132)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !334, line: 194, column: 2)
!14140 = !DILocalVariable(name: "key", arg: 1, scope: !14141, file: !6236, line: 84, type: !32)
!14141 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14142)
!14142 = !{!14140}
!14143 = !DILocation(line: 0, scope: !14141, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 215, column: 2, scope: !14126, inlinedAt: !14132)
!14145 = !DILocation(line: 95, column: 2, scope: !14141, inlinedAt: !14144)
!14146 = !{i64 2289145}
!14147 = !DILocation(line: 157, column: 10, scope: !14091)
!14148 = !DILocation(line: 157, column: 15, scope: !14091)
!14149 = !DILocation(line: 158, column: 27, scope: !14091)
!14150 = !DILocation(line: 158, column: 3, scope: !14091)
!14151 = !DILocation(line: 161, column: 19, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14092, file: !3214, line: 160, column: 9)
!14153 = !DILocation(line: 161, column: 3, scope: !14152)
!14154 = !DILocation(line: 166, column: 42, scope: !14079)
!14155 = !DILocation(line: 166, column: 28, scope: !14079)
!14156 = !DILocation(line: 166, column: 36, scope: !14079)
!14157 = !DILocation(line: 166, column: 2, scope: !14079)
!14158 = !DILocation(line: 168, column: 2, scope: !14079)
!14159 = !DILocation(line: 172, column: 2, scope: !14079)
!14160 = !DILocation(line: 173, column: 1, scope: !14079)
!14161 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !417, file: !417, line: 255, type: !14162, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14164)
!14162 = !DISubroutineType(types: !14163)
!14163 = !{!3223, !13883}
!14164 = !{!14165}
!14165 = !DILocalVariable(name: "list", arg: 1, scope: !14161, file: !417, line: 255, type: !13883)
!14166 = !DILocation(line: 0, scope: !14161)
!14167 = !DILocation(line: 257, column: 15, scope: !14161)
!14168 = !DILocation(line: 257, column: 2, scope: !14161)
!14169 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14047, file: !14047, line: 102, type: !14170, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14171)
!14170 = !DISubroutineType(types: !3177)
!14171 = !{!14172}
!14172 = !DILocalVariable(name: "size", arg: 1, scope: !14169, file: !14047, line: 102, type: !315)
!14173 = !DILocation(line: 0, scope: !14169)
!14174 = !DILocation(line: 104, column: 9, scope: !14169)
!14175 = !DILocation(line: 104, column: 2, scope: !14169)
!14176 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !417, file: !417, line: 288, type: !14177, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14179)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{null, !3223, !143}
!14179 = !{!14180, !14181}
!14180 = !DILocalVariable(name: "node", arg: 1, scope: !14176, file: !417, line: 288, type: !3223)
!14181 = !DILocalVariable(name: "flags", arg: 2, scope: !14176, file: !417, line: 288, type: !143)
!14182 = !DILocation(line: 0, scope: !14176)
!14183 = !DILocation(line: 290, column: 2, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14185, file: !417, line: 290, column: 2)
!14185 = distinct !DILexicalBlock(scope: !14176, file: !417, line: 290, column: 2)
!14186 = !DILocation(line: 290, column: 2, scope: !14185)
!14187 = !DILocation(line: 290, column: 2, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14184, file: !417, line: 290, column: 2)
!14189 = !DILocation(line: 291, column: 8, scope: !14176)
!14190 = !DILocation(line: 291, column: 23, scope: !14176)
!14191 = !DILocation(line: 292, column: 1, scope: !14176)
!14192 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !417, file: !417, line: 420, type: !14193, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14195)
!14193 = !DISubroutineType(types: !14194)
!14194 = !{null, !13883, !3223, !3223}
!14195 = !{!14196, !14197, !14198}
!14196 = !DILocalVariable(name: "list", arg: 1, scope: !14192, file: !417, line: 420, type: !13883)
!14197 = !DILocalVariable(name: "prev", arg: 2, scope: !14192, file: !417, line: 420, type: !3223)
!14198 = !DILocalVariable(name: "node", arg: 3, scope: !14192, file: !417, line: 420, type: !3223)
!14199 = !DILocation(line: 0, scope: !14192)
!14200 = !DILocation(line: 420, column: 1, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14192, file: !417, line: 420, column: 1)
!14202 = !DILocation(line: 420, column: 1, scope: !14192)
!14203 = !DILocation(line: 420, column: 1, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14201, file: !417, line: 420, column: 1)
!14205 = !DILocation(line: 420, column: 1, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14201, file: !417, line: 420, column: 1)
!14207 = !DILocation(line: 420, column: 1, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14206, file: !417, line: 420, column: 1)
!14209 = !DILocation(line: 420, column: 1, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14206, file: !417, line: 420, column: 1)
!14211 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !417, file: !417, line: 360, type: !14212, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14214)
!14212 = !DISubroutineType(types: !14213)
!14213 = !{null, !13883, !3223}
!14214 = !{!14215, !14216}
!14215 = !DILocalVariable(name: "list", arg: 1, scope: !14211, file: !417, line: 360, type: !13883)
!14216 = !DILocalVariable(name: "node", arg: 2, scope: !14211, file: !417, line: 360, type: !3223)
!14217 = !DILocation(line: 0, scope: !14211)
!14218 = !DILocation(line: 360, column: 1, scope: !14211)
!14219 = !DILocation(line: 360, column: 1, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14211, file: !417, line: 360, column: 1)
!14221 = !DILocation(line: 360, column: 1, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14220, file: !417, line: 360, column: 1)
!14223 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !417, file: !417, line: 211, type: !14224, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14226)
!14224 = !DISubroutineType(types: !14225)
!14225 = !{!3223, !3223}
!14226 = !{!14227}
!14227 = !DILocalVariable(name: "node", arg: 1, scope: !14223, file: !417, line: 211, type: !3223)
!14228 = !DILocation(line: 0, scope: !14223)
!14229 = !DILocation(line: 213, column: 32, scope: !14223)
!14230 = !DILocation(line: 213, column: 47, scope: !14223)
!14231 = !DILocation(line: 213, column: 9, scope: !14223)
!14232 = !DILocation(line: 213, column: 2, scope: !14223)
!14233 = distinct !DISubprogram(name: "sys_sflist_append", scope: !417, file: !417, line: 373, type: !14212, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14234)
!14234 = !{!14235, !14236}
!14235 = !DILocalVariable(name: "list", arg: 1, scope: !14233, file: !417, line: 373, type: !13883)
!14236 = !DILocalVariable(name: "node", arg: 2, scope: !14233, file: !417, line: 373, type: !3223)
!14237 = !DILocation(line: 0, scope: !14233)
!14238 = !DILocation(line: 373, column: 1, scope: !14233)
!14239 = !DILocation(line: 373, column: 1, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14233, file: !417, line: 373, column: 1)
!14241 = !DILocation(line: 373, column: 1, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14240, file: !417, line: 373, column: 1)
!14243 = !DILocation(line: 373, column: 1, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !417, line: 373, column: 1)
!14245 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !417, file: !417, line: 218, type: !14246, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{null, !3223, !3223}
!14248 = !{!14249, !14250, !14251}
!14249 = !DILocalVariable(name: "parent", arg: 1, scope: !14245, file: !417, line: 218, type: !3223)
!14250 = !DILocalVariable(name: "child", arg: 2, scope: !14245, file: !417, line: 219, type: !3223)
!14251 = !DILocalVariable(name: "cur_flags", scope: !14245, file: !417, line: 221, type: !143)
!14252 = !DILocation(line: 0, scope: !14245)
!14253 = !DILocation(line: 221, column: 22, scope: !14245)
!14254 = !DILocation(line: 223, column: 27, scope: !14245)
!14255 = !DILocation(line: 223, column: 39, scope: !14245)
!14256 = !DILocation(line: 223, column: 37, scope: !14245)
!14257 = !DILocation(line: 223, column: 10, scope: !14245)
!14258 = !DILocation(line: 223, column: 25, scope: !14245)
!14259 = !DILocation(line: 224, column: 1, scope: !14245)
!14260 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !417, file: !417, line: 231, type: !14212, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14261)
!14261 = !{!14262, !14263}
!14262 = !DILocalVariable(name: "list", arg: 1, scope: !14260, file: !417, line: 231, type: !13883)
!14263 = !DILocalVariable(name: "node", arg: 2, scope: !14260, file: !417, line: 231, type: !3223)
!14264 = !DILocation(line: 0, scope: !14260)
!14265 = !DILocation(line: 233, column: 8, scope: !14260)
!14266 = !DILocation(line: 233, column: 13, scope: !14260)
!14267 = !DILocation(line: 234, column: 1, scope: !14260)
!14268 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !417, file: !417, line: 226, type: !14212, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14269)
!14269 = !{!14270, !14271}
!14270 = !DILocalVariable(name: "list", arg: 1, scope: !14268, file: !417, line: 226, type: !13883)
!14271 = !DILocalVariable(name: "node", arg: 2, scope: !14268, file: !417, line: 226, type: !3223)
!14272 = !DILocation(line: 0, scope: !14268)
!14273 = !DILocation(line: 228, column: 8, scope: !14268)
!14274 = !DILocation(line: 228, column: 13, scope: !14268)
!14275 = !DILocation(line: 229, column: 1, scope: !14268)
!14276 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !417, file: !417, line: 243, type: !14162, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14277)
!14277 = !{!14278}
!14278 = !DILocalVariable(name: "list", arg: 1, scope: !14276, file: !417, line: 243, type: !13883)
!14279 = !DILocation(line: 0, scope: !14276)
!14280 = !DILocation(line: 245, column: 15, scope: !14276)
!14281 = !DILocation(line: 245, column: 2, scope: !14276)
!14282 = distinct !DISubprogram(name: "k_queue_append", scope: !3214, file: !3214, line: 184, type: !14283, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14285)
!14283 = !DISubroutineType(types: !14284)
!14284 = !{null, !13852, !117}
!14285 = !{!14286, !14287}
!14286 = !DILocalVariable(name: "queue", arg: 1, scope: !14282, file: !3214, line: 184, type: !13852)
!14287 = !DILocalVariable(name: "data", arg: 2, scope: !14282, file: !3214, line: 184, type: !117)
!14288 = !DILocation(line: 0, scope: !14282)
!14289 = !DILocation(line: 188, column: 8, scope: !14282)
!14290 = !DILocation(line: 191, column: 1, scope: !14282)
!14291 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3214, file: !3214, line: 193, type: !14283, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14292)
!14292 = !{!14293, !14294}
!14293 = !DILocalVariable(name: "queue", arg: 1, scope: !14291, file: !3214, line: 193, type: !13852)
!14294 = !DILocalVariable(name: "data", arg: 2, scope: !14291, file: !3214, line: 193, type: !117)
!14295 = !DILocation(line: 0, scope: !14291)
!14296 = !DILocation(line: 197, column: 8, scope: !14291)
!14297 = !DILocation(line: 200, column: 1, scope: !14291)
!14298 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3214, file: !3214, line: 202, type: !14299, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14301)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!362, !13852, !117}
!14301 = !{!14302, !14303, !14304}
!14302 = !DILocalVariable(name: "queue", arg: 1, scope: !14298, file: !3214, line: 202, type: !13852)
!14303 = !DILocalVariable(name: "data", arg: 2, scope: !14298, file: !3214, line: 202, type: !117)
!14304 = !DILocalVariable(name: "ret", scope: !14298, file: !3214, line: 206, type: !362)
!14305 = !DILocation(line: 0, scope: !14298)
!14306 = !DILocation(line: 206, column: 16, scope: !14298)
!14307 = !DILocation(line: 210, column: 2, scope: !14298)
!14308 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3214, file: !3214, line: 223, type: !14299, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14309)
!14309 = !{!14310, !14311, !14312}
!14310 = !DILocalVariable(name: "queue", arg: 1, scope: !14308, file: !3214, line: 223, type: !13852)
!14311 = !DILocalVariable(name: "data", arg: 2, scope: !14308, file: !3214, line: 223, type: !117)
!14312 = !DILocalVariable(name: "ret", scope: !14308, file: !3214, line: 227, type: !362)
!14313 = !DILocation(line: 0, scope: !14308)
!14314 = !DILocation(line: 227, column: 16, scope: !14308)
!14315 = !DILocation(line: 231, column: 2, scope: !14308)
!14316 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3214, file: !3214, line: 244, type: !14317, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14319)
!14317 = !DISubroutineType(types: !14318)
!14318 = !{!118, !13852, !117, !117}
!14319 = !{!14320, !14321, !14322, !14323, !14324}
!14320 = !DILocalVariable(name: "queue", arg: 1, scope: !14316, file: !3214, line: 244, type: !13852)
!14321 = !DILocalVariable(name: "head", arg: 2, scope: !14316, file: !3214, line: 244, type: !117)
!14322 = !DILocalVariable(name: "tail", arg: 3, scope: !14316, file: !3214, line: 244, type: !117)
!14323 = !DILocalVariable(name: "key", scope: !14316, file: !3214, line: 255, type: !13918)
!14324 = !DILocalVariable(name: "thread", scope: !14316, file: !3214, line: 256, type: !13923)
!14325 = !DILocation(line: 0, scope: !14316)
!14326 = !DILocation(line: 249, column: 2, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14316, file: !3214, line: 249, column: 2)
!14328 = !DILocation(line: 255, column: 45, scope: !14316)
!14329 = !DILocation(line: 0, scope: !14005, inlinedAt: !14330)
!14330 = distinct !DILocation(line: 255, column: 25, scope: !14316)
!14331 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 145, column: 10, scope: !14005, inlinedAt: !14330)
!14333 = !DILocation(line: 0, scope: !14014, inlinedAt: !14332)
!14334 = !DILocation(line: 148, column: 2, scope: !14022, inlinedAt: !14330)
!14335 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14330)
!14336 = !DILocation(line: 148, column: 2, scope: !14026, inlinedAt: !14330)
!14337 = !DILocation(line: 160, column: 2, scope: !14005, inlinedAt: !14330)
!14338 = !DILocation(line: 259, column: 42, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !3214, line: 258, column: 20)
!14340 = distinct !DILexicalBlock(scope: !14316, file: !3214, line: 258, column: 6)
!14341 = !DILocation(line: 259, column: 12, scope: !14339)
!14342 = !DILocation(line: 262, column: 24, scope: !14316)
!14343 = !DILocation(line: 262, column: 2, scope: !14316)
!14344 = !DILocation(line: 263, column: 3, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14316, file: !3214, line: 262, column: 45)
!14346 = !DILocation(line: 264, column: 11, scope: !14345)
!14347 = !DILocation(line: 264, column: 10, scope: !14345)
!14348 = !DILocation(line: 265, column: 12, scope: !14345)
!14349 = !DILocation(line: 262, column: 15, scope: !14316)
!14350 = distinct !{!14350, !14343, !14351}
!14351 = !DILocation(line: 266, column: 2, scope: !14316)
!14352 = !DILocation(line: 268, column: 6, scope: !14316)
!14353 = !DILocation(line: 269, column: 34, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14355, file: !3214, line: 268, column: 20)
!14355 = distinct !DILexicalBlock(scope: !14316, file: !3214, line: 268, column: 6)
!14356 = !DILocation(line: 269, column: 3, scope: !14354)
!14357 = !DILocation(line: 270, column: 2, scope: !14354)
!14358 = !DILocation(line: 275, column: 2, scope: !14316)
!14359 = !DILocation(line: 277, column: 1, scope: !14316)
!14360 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !417, file: !417, line: 391, type: !14361, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14363)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{null, !13883, !117, !117}
!14363 = !{!14364, !14365, !14366}
!14364 = !DILocalVariable(name: "list", arg: 1, scope: !14360, file: !417, line: 391, type: !13883)
!14365 = !DILocalVariable(name: "head", arg: 2, scope: !14360, file: !417, line: 391, type: !117)
!14366 = !DILocalVariable(name: "tail", arg: 3, scope: !14360, file: !417, line: 391, type: !117)
!14367 = !DILocation(line: 0, scope: !14360)
!14368 = !DILocation(line: 391, column: 1, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14360, file: !417, line: 391, column: 1)
!14370 = !DILocation(line: 391, column: 1, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14372, file: !417, line: 391, column: 1)
!14372 = distinct !DILexicalBlock(scope: !14369, file: !417, line: 391, column: 1)
!14373 = !DILocation(line: 0, scope: !14371)
!14374 = !DILocation(line: 391, column: 1, scope: !14372)
!14375 = !DILocation(line: 391, column: 1, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14371, file: !417, line: 391, column: 1)
!14377 = !DILocation(line: 391, column: 1, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14371, file: !417, line: 391, column: 1)
!14379 = !DILocation(line: 391, column: 1, scope: !14360)
!14380 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3214, file: !3214, line: 279, type: !14381, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14395)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{!118, !13852, !14383}
!14383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14384, size: 32)
!14384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !14385)
!14385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !14386)
!14386 = !{!14387, !14394}
!14387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14385, file: !187, line: 36, baseType: !14388, size: 32)
!14388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14389, size: 32)
!14389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !14390)
!14390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !14391)
!14391 = !{!14392}
!14392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14390, file: !187, line: 30, baseType: !14393, size: 32)
!14393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14390, size: 32)
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14385, file: !187, line: 37, baseType: !14388, size: 32, offset: 32)
!14395 = !{!14396, !14397, !14398}
!14396 = !DILocalVariable(name: "queue", arg: 1, scope: !14380, file: !3214, line: 279, type: !13852)
!14397 = !DILocalVariable(name: "list", arg: 2, scope: !14380, file: !3214, line: 279, type: !14383)
!14398 = !DILocalVariable(name: "ret", scope: !14380, file: !3214, line: 281, type: !118)
!14399 = !DILocation(line: 0, scope: !14380)
!14400 = !DILocation(line: 286, column: 2, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14380, file: !3214, line: 286, column: 2)
!14402 = !DILocation(line: 286, column: 2, scope: !14380)
!14403 = !DILocation(line: 301, column: 41, scope: !14380)
!14404 = !DILocation(line: 301, column: 53, scope: !14380)
!14405 = !DILocation(line: 301, column: 8, scope: !14380)
!14406 = !DILocation(line: 302, column: 2, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14380, file: !3214, line: 302, column: 2)
!14408 = !DILocation(line: 302, column: 2, scope: !14380)
!14409 = !DILocation(line: 307, column: 2, scope: !14380)
!14410 = !DILocation(line: 311, column: 2, scope: !14380)
!14411 = !DILocation(line: 312, column: 1, scope: !14380)
!14412 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !14413, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!146, !14383}
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "list", arg: 1, scope: !14412, file: !187, line: 261, type: !14383)
!14417 = !DILocation(line: 0, scope: !14412)
!14418 = !DILocation(line: 261, column: 1, scope: !14412)
!14419 = distinct !DISubprogram(name: "sys_slist_init", scope: !187, file: !187, line: 196, type: !14420, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14422)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{null, !14383}
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "list", arg: 1, scope: !14419, file: !187, line: 196, type: !14383)
!14424 = !DILocation(line: 0, scope: !14419)
!14425 = !DILocation(line: 198, column: 8, scope: !14419)
!14426 = !DILocation(line: 198, column: 13, scope: !14419)
!14427 = !DILocation(line: 199, column: 8, scope: !14419)
!14428 = !DILocation(line: 199, column: 13, scope: !14419)
!14429 = !DILocation(line: 200, column: 1, scope: !14419)
!14430 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !14431, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14433)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{!14388, !14383}
!14433 = !{!14434}
!14434 = !DILocalVariable(name: "list", arg: 1, scope: !14430, file: !187, line: 231, type: !14383)
!14435 = !DILocation(line: 0, scope: !14430)
!14436 = !DILocation(line: 233, column: 15, scope: !14430)
!14437 = !DILocation(line: 233, column: 2, scope: !14430)
!14438 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3214, file: !3214, line: 314, type: !14439, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14445)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{!117, !13852, !14441}
!14441 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !14442)
!14442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !14443)
!14443 = !{!14444}
!14444 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14442, file: !114, line: 66, baseType: !113, size: 64)
!14445 = !{!14446, !14447, !14448, !14449, !14450, !14453}
!14446 = !DILocalVariable(name: "queue", arg: 1, scope: !14438, file: !3214, line: 314, type: !13852)
!14447 = !DILocalVariable(name: "timeout", arg: 2, scope: !14438, file: !3214, line: 314, type: !14441)
!14448 = !DILocalVariable(name: "key", scope: !14438, file: !3214, line: 316, type: !13918)
!14449 = !DILocalVariable(name: "data", scope: !14438, file: !3214, line: 317, type: !117)
!14450 = !DILocalVariable(name: "node", scope: !14451, file: !3214, line: 322, type: !3223)
!14451 = distinct !DILexicalBlock(scope: !14452, file: !3214, line: 321, column: 52)
!14452 = distinct !DILexicalBlock(scope: !14438, file: !3214, line: 321, column: 6)
!14453 = !DILocalVariable(name: "ret", scope: !14438, file: !3214, line: 343, type: !118)
!14454 = !DILocation(line: 0, scope: !14438)
!14455 = !DILocation(line: 316, column: 45, scope: !14438)
!14456 = !DILocation(line: 0, scope: !14005, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 316, column: 25, scope: !14438)
!14458 = !DILocation(line: 55, column: 2, scope: !14014, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 145, column: 10, scope: !14005, inlinedAt: !14457)
!14460 = !DILocation(line: 0, scope: !14014, inlinedAt: !14459)
!14461 = !DILocation(line: 148, column: 2, scope: !14022, inlinedAt: !14457)
!14462 = !DILocation(line: 148, column: 2, scope: !14023, inlinedAt: !14457)
!14463 = !DILocation(line: 148, column: 2, scope: !14026, inlinedAt: !14457)
!14464 = !DILocation(line: 160, column: 2, scope: !14005, inlinedAt: !14457)
!14465 = !DILocation(line: 321, column: 6, scope: !14452)
!14466 = !DILocation(line: 321, column: 6, scope: !14438)
!14467 = !{!"branch_weights", i32 1, i32 2000}
!14468 = !DILocation(line: 324, column: 10, scope: !14451)
!14469 = !DILocation(line: 0, scope: !14451)
!14470 = !DILocation(line: 325, column: 10, scope: !14451)
!14471 = !DILocation(line: 0, scope: !14126, inlinedAt: !14472)
!14472 = distinct !DILocation(line: 326, column: 3, scope: !14451)
!14473 = !DILocation(line: 194, column: 2, scope: !14135, inlinedAt: !14472)
!14474 = !DILocation(line: 194, column: 2, scope: !14136, inlinedAt: !14472)
!14475 = !DILocation(line: 194, column: 2, scope: !14139, inlinedAt: !14472)
!14476 = !DILocation(line: 0, scope: !14141, inlinedAt: !14477)
!14477 = distinct !DILocation(line: 215, column: 2, scope: !14126, inlinedAt: !14472)
!14478 = !DILocation(line: 95, column: 2, scope: !14141, inlinedAt: !14477)
!14479 = !DILocation(line: 335, column: 6, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14438, file: !3214, line: 335, column: 6)
!14481 = !DILocation(line: 335, column: 6, scope: !14438)
!14482 = !DILocation(line: 0, scope: !14126, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 336, column: 3, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14480, file: !3214, line: 335, column: 40)
!14485 = !DILocation(line: 194, column: 2, scope: !14135, inlinedAt: !14483)
!14486 = !DILocation(line: 194, column: 2, scope: !14136, inlinedAt: !14483)
!14487 = !DILocation(line: 194, column: 2, scope: !14139, inlinedAt: !14483)
!14488 = !DILocation(line: 0, scope: !14141, inlinedAt: !14489)
!14489 = distinct !DILocation(line: 215, column: 2, scope: !14126, inlinedAt: !14483)
!14490 = !DILocation(line: 95, column: 2, scope: !14141, inlinedAt: !14489)
!14491 = !DILocation(line: 340, column: 3, scope: !14484)
!14492 = !DILocation(line: 343, column: 51, scope: !14438)
!14493 = !DILocation(line: 343, column: 12, scope: !14438)
!14494 = !DILocation(line: 348, column: 14, scope: !14438)
!14495 = !DILocation(line: 348, column: 9, scope: !14438)
!14496 = !DILocation(line: 348, column: 29, scope: !14438)
!14497 = !DILocation(line: 348, column: 44, scope: !14438)
!14498 = !DILocation(line: 349, column: 1, scope: !14438)
!14499 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !417, file: !417, line: 323, type: !14500, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!146, !13883}
!14502 = !{!14503}
!14503 = !DILocalVariable(name: "list", arg: 1, scope: !14499, file: !417, line: 323, type: !13883)
!14504 = !DILocation(line: 0, scope: !14499)
!14505 = !DILocation(line: 323, column: 1, scope: !14499)
!14506 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !417, file: !417, line: 434, type: !14162, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14507)
!14507 = !{!14508, !14509}
!14508 = !DILocalVariable(name: "list", arg: 1, scope: !14506, file: !417, line: 434, type: !13883)
!14509 = !DILocalVariable(name: "node", scope: !14506, file: !417, line: 434, type: !3223)
!14510 = !DILocation(line: 0, scope: !14506)
!14511 = !DILocation(line: 434, column: 1, scope: !14506)
!14512 = !DILocation(line: 434, column: 1, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14506, file: !417, line: 434, column: 1)
!14514 = !DILocation(line: 434, column: 1, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14513, file: !417, line: 434, column: 1)
!14516 = distinct !DISubprogram(name: "k_queue_remove", scope: !3214, file: !3214, line: 351, type: !14517, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14519)
!14517 = !DISubroutineType(types: !14518)
!14518 = !{!146, !13852, !117}
!14519 = !{!14520, !14521, !14522}
!14520 = !DILocalVariable(name: "queue", arg: 1, scope: !14516, file: !3214, line: 351, type: !13852)
!14521 = !DILocalVariable(name: "data", arg: 2, scope: !14516, file: !3214, line: 351, type: !117)
!14522 = !DILocalVariable(name: "ret", scope: !14516, file: !3214, line: 355, type: !146)
!14523 = !DILocation(line: 0, scope: !14516)
!14524 = !DILocation(line: 355, column: 48, scope: !14516)
!14525 = !DILocation(line: 355, column: 56, scope: !14516)
!14526 = !DILocation(line: 355, column: 13, scope: !14516)
!14527 = !DILocation(line: 359, column: 2, scope: !14516)
!14528 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !417, file: !417, line: 478, type: !14529, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14531)
!14529 = !DISubroutineType(types: !14530)
!14530 = !{!146, !13883, !3223}
!14531 = !{!14532, !14533, !14534, !14535}
!14532 = !DILocalVariable(name: "list", arg: 1, scope: !14528, file: !417, line: 478, type: !13883)
!14533 = !DILocalVariable(name: "node", arg: 2, scope: !14528, file: !417, line: 478, type: !3223)
!14534 = !DILocalVariable(name: "prev", scope: !14528, file: !417, line: 478, type: !3223)
!14535 = !DILocalVariable(name: "test", scope: !14528, file: !417, line: 478, type: !3223)
!14536 = !DILocation(line: 0, scope: !14528)
!14537 = !DILocation(line: 478, column: 1, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14528, file: !417, line: 478, column: 1)
!14539 = !DILocation(line: 478, column: 1, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14538, file: !417, line: 478, column: 1)
!14541 = !DILocation(line: 478, column: 1, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14543, file: !417, line: 478, column: 1)
!14543 = distinct !DILexicalBlock(scope: !14540, file: !417, line: 478, column: 1)
!14544 = !DILocation(line: 478, column: 1, scope: !14543)
!14545 = distinct !{!14545, !14537, !14537}
!14546 = !DILocation(line: 478, column: 1, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14542, file: !417, line: 478, column: 1)
!14548 = !DILocation(line: 478, column: 1, scope: !14528)
!14549 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !417, file: !417, line: 463, type: !14193, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14550)
!14550 = !{!14551, !14552, !14553}
!14551 = !DILocalVariable(name: "list", arg: 1, scope: !14549, file: !417, line: 463, type: !13883)
!14552 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14549, file: !417, line: 463, type: !3223)
!14553 = !DILocalVariable(name: "node", arg: 3, scope: !14549, file: !417, line: 463, type: !3223)
!14554 = !DILocation(line: 0, scope: !14549)
!14555 = !DILocation(line: 463, column: 1, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14549, file: !417, line: 463, column: 1)
!14557 = !DILocation(line: 0, scope: !14556)
!14558 = !DILocation(line: 463, column: 1, scope: !14549)
!14559 = !DILocation(line: 463, column: 1, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14556, file: !417, line: 463, column: 1)
!14561 = !DILocation(line: 463, column: 1, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14560, file: !417, line: 463, column: 1)
!14563 = !DILocation(line: 463, column: 1, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14562, file: !417, line: 463, column: 1)
!14565 = !DILocation(line: 463, column: 1, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14556, file: !417, line: 463, column: 1)
!14567 = !DILocation(line: 463, column: 1, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14566, file: !417, line: 463, column: 1)
!14569 = !DILocation(line: 463, column: 1, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14568, file: !417, line: 463, column: 1)
!14571 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !417, file: !417, line: 347, type: !14224, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14572)
!14572 = !{!14573}
!14573 = !DILocalVariable(name: "node", arg: 1, scope: !14571, file: !417, line: 347, type: !3223)
!14574 = !DILocation(line: 0, scope: !14571)
!14575 = !DILocation(line: 347, column: 1, scope: !14571)
!14576 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !417, file: !417, line: 336, type: !14224, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14577)
!14577 = !{!14578}
!14578 = !DILocalVariable(name: "node", arg: 1, scope: !14576, file: !417, line: 336, type: !3223)
!14579 = !DILocation(line: 0, scope: !14576)
!14580 = !DILocation(line: 336, column: 1, scope: !14576)
!14581 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3214, file: !3214, line: 362, type: !14517, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14582)
!14582 = !{!14583, !14584, !14585}
!14583 = !DILocalVariable(name: "queue", arg: 1, scope: !14581, file: !3214, line: 362, type: !13852)
!14584 = !DILocalVariable(name: "data", arg: 2, scope: !14581, file: !3214, line: 362, type: !117)
!14585 = !DILocalVariable(name: "test", scope: !14581, file: !3214, line: 366, type: !3223)
!14586 = !DILocation(line: 0, scope: !14581)
!14587 = !DILocation(line: 368, column: 2, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14581, file: !3214, line: 368, column: 2)
!14589 = !DILocation(line: 368, column: 2, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14588, file: !3214, line: 368, column: 2)
!14591 = !DILocation(line: 369, column: 12, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14593, file: !3214, line: 369, column: 7)
!14593 = distinct !DILexicalBlock(scope: !14590, file: !3214, line: 368, column: 49)
!14594 = !DILocation(line: 369, column: 7, scope: !14593)
!14595 = distinct !{!14595, !14587, !14596}
!14596 = !DILocation(line: 374, column: 2, scope: !14588)
!14597 = !DILocation(line: 376, column: 2, scope: !14581)
!14598 = !DILocation(line: 380, column: 2, scope: !14581)
!14599 = !DILocation(line: 381, column: 1, scope: !14581)
!14600 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3214, file: !3214, line: 383, type: !14601, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14603)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{!117, !13852}
!14603 = !{!14604, !14605}
!14604 = !DILocalVariable(name: "queue", arg: 1, scope: !14600, file: !3214, line: 383, type: !13852)
!14605 = !DILocalVariable(name: "ret", scope: !14600, file: !3214, line: 385, type: !117)
!14606 = !DILocation(line: 0, scope: !14600)
!14607 = !DILocation(line: 385, column: 61, scope: !14600)
!14608 = !DILocation(line: 385, column: 32, scope: !14600)
!14609 = !DILocation(line: 385, column: 14, scope: !14600)
!14610 = !DILocation(line: 389, column: 2, scope: !14600)
!14611 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3214, file: !3214, line: 392, type: !14601, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14612)
!14612 = !{!14613, !14614}
!14613 = !DILocalVariable(name: "queue", arg: 1, scope: !14611, file: !3214, line: 392, type: !13852)
!14614 = !DILocalVariable(name: "ret", scope: !14611, file: !3214, line: 394, type: !117)
!14615 = !DILocation(line: 0, scope: !14611)
!14616 = !DILocation(line: 394, column: 61, scope: !14611)
!14617 = !DILocation(line: 394, column: 32, scope: !14611)
!14618 = !DILocation(line: 394, column: 14, scope: !14611)
!14619 = !DILocation(line: 398, column: 2, scope: !14611)
!14620 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2494, file: !2494, line: 93, type: !14621, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14623)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{!362, !2387, !2387}
!14623 = !{!14624, !14625, !14626, !14627}
!14624 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14620, file: !2494, line: 93, type: !2387)
!14625 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14620, file: !2494, line: 94, type: !2387)
!14626 = !DILocalVariable(name: "b1", scope: !14620, file: !2494, line: 97, type: !362)
!14627 = !DILocalVariable(name: "b2", scope: !14620, file: !2494, line: 98, type: !362)
!14628 = !DILocation(line: 0, scope: !14620)
!14629 = !DILocation(line: 97, column: 30, scope: !14620)
!14630 = !DILocation(line: 98, column: 30, scope: !14620)
!14631 = !DILocation(line: 100, column: 9, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14620, file: !2494, line: 100, column: 6)
!14633 = !DILocation(line: 100, column: 6, scope: !14620)
!14634 = !DILocation(line: 125, column: 1, scope: !14620)
!14635 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2494, file: !2494, line: 428, type: !14636, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{null, !2387}
!14638 = !{!14639}
!14639 = !DILocalVariable(name: "curr", arg: 1, scope: !14635, file: !2494, line: 428, type: !2387)
!14640 = !DILocation(line: 0, scope: !14635)
!14641 = !DILocation(line: 434, column: 6, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14635, file: !2494, line: 434, column: 6)
!14643 = !DILocation(line: 434, column: 23, scope: !14642)
!14644 = !DILocation(line: 434, column: 6, scope: !14635)
!14645 = !DILocation(line: 435, column: 50, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14642, file: !2494, line: 434, column: 29)
!14647 = !DILocation(line: 435, column: 48, scope: !14646)
!14648 = !DILocation(line: 435, column: 29, scope: !14646)
!14649 = !DILocation(line: 436, column: 24, scope: !14646)
!14650 = !DILocation(line: 436, column: 3, scope: !14646)
!14651 = !DILocation(line: 437, column: 2, scope: !14646)
!14652 = !DILocation(line: 438, column: 1, scope: !14635)
!14653 = distinct !DISubprogram(name: "slice_time", scope: !2494, file: !2494, line: 407, type: !14654, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14656)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{!118, !2387}
!14656 = !{!14657, !14658}
!14657 = !DILocalVariable(name: "curr", arg: 1, scope: !14653, file: !2494, line: 407, type: !2387)
!14658 = !DILocalVariable(name: "ret", scope: !14653, file: !2494, line: 409, type: !118)
!14659 = !DILocation(line: 0, scope: !14653)
!14660 = !DILocation(line: 409, column: 12, scope: !14653)
!14661 = !DILocation(line: 416, column: 2, scope: !14653)
!14662 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2494, file: !2494, line: 440, type: !14663, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14665)
!14663 = !DISubroutineType(types: !14664)
!14664 = !{null, !362, !118}
!14665 = !{!14666, !14667, !14668, !14674}
!14666 = !DILocalVariable(name: "slice", arg: 1, scope: !14662, file: !2494, line: 440, type: !362)
!14667 = !DILocalVariable(name: "prio", arg: 2, scope: !14662, file: !2494, line: 440, type: !118)
!14668 = !DILocalVariable(name: "__i", scope: !14669, file: !2494, line: 442, type: !14670)
!14669 = distinct !DILexicalBlock(scope: !14662, file: !2494, line: 442, column: 2)
!14670 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !14671)
!14671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !14672)
!14672 = !{!14673}
!14673 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14671, file: !334, line: 33, baseType: !118, size: 32)
!14674 = !DILocalVariable(name: "__key", scope: !14669, file: !2494, line: 442, type: !14670)
!14675 = !DILocation(line: 0, scope: !14662)
!14676 = !DILocation(line: 0, scope: !14669)
!14677 = !DILocalVariable(name: "l", arg: 1, scope: !14678, file: !334, line: 136, type: !14681)
!14678 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !14679, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14682)
!14679 = !DISubroutineType(types: !14680)
!14680 = !{!14670, !14681}
!14681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!14682 = !{!14677, !14683}
!14683 = !DILocalVariable(name: "k", scope: !14678, file: !334, line: 139, type: !14670)
!14684 = !DILocation(line: 0, scope: !14678, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 442, column: 2, scope: !14669)
!14686 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !14691)
!14687 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14688)
!14688 = !{!14689, !14690}
!14689 = !DILocalVariable(name: "key", scope: !14687, file: !6236, line: 44, type: !32)
!14690 = !DILocalVariable(name: "tmp", scope: !14687, file: !6236, line: 53, type: !32)
!14691 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !14685)
!14692 = !{i64 2324558}
!14693 = !DILocation(line: 0, scope: !14687, inlinedAt: !14691)
!14694 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !14685)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !334, line: 148, column: 2)
!14696 = distinct !DILexicalBlock(scope: !14678, file: !334, line: 148, column: 2)
!14697 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !14685)
!14698 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !14685)
!14699 = distinct !DILexicalBlock(scope: !14695, file: !334, line: 148, column: 2)
!14700 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !14685)
!14701 = !DILocation(line: 443, column: 29, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !2494, line: 442, column: 26)
!14703 = distinct !DILexicalBlock(scope: !14669, file: !2494, line: 442, column: 2)
!14704 = !DILocation(line: 444, column: 17, scope: !14702)
!14705 = !DILocation(line: 445, column: 51, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14702, file: !2494, line: 445, column: 7)
!14707 = !DILocation(line: 445, column: 7, scope: !14702)
!14708 = !DILocation(line: 0, scope: !14702)
!14709 = !DILocation(line: 451, column: 18, scope: !14702)
!14710 = !DILocation(line: 452, column: 3, scope: !14702)
!14711 = !DILocalVariable(name: "key", arg: 2, scope: !14712, file: !334, line: 190, type: !14670)
!14712 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !14713, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14715)
!14713 = !DISubroutineType(types: !14714)
!14714 = !{null, !14681, !14670}
!14715 = !{!14716, !14711}
!14716 = !DILocalVariable(name: "l", arg: 1, scope: !14712, file: !334, line: 189, type: !14681)
!14717 = !DILocation(line: 0, scope: !14712, inlinedAt: !14718)
!14718 = distinct !DILocation(line: 442, column: 2, scope: !14703)
!14719 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !14718)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !334, line: 194, column: 2)
!14721 = distinct !DILexicalBlock(scope: !14712, file: !334, line: 194, column: 2)
!14722 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !14718)
!14723 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !14718)
!14724 = distinct !DILexicalBlock(scope: !14720, file: !334, line: 194, column: 2)
!14725 = !DILocalVariable(name: "key", arg: 1, scope: !14726, file: !6236, line: 84, type: !32)
!14726 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14727)
!14727 = !{!14725}
!14728 = !DILocation(line: 0, scope: !14726, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !14718)
!14730 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !14729)
!14731 = !{i64 2325375}
!14732 = !DILocation(line: 454, column: 1, scope: !14662)
!14733 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3500, file: !3500, line: 389, type: !7456, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14734)
!14734 = !{!14735}
!14735 = !DILocalVariable(name: "t", arg: 1, scope: !14733, file: !3500, line: 389, type: !156)
!14736 = !DILocation(line: 0, scope: !14733)
!14737 = !DILocalVariable(name: "t", arg: 1, scope: !14738, file: !3500, line: 102, type: !213)
!14738 = distinct !DISubprogram(name: "z_tmcvt", scope: !3500, file: !3500, line: 102, type: !3508, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14739)
!14739 = !{!14737, !14740, !14741, !14742, !14743, !14744, !14745, !14746, !14747, !14748, !14749}
!14740 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14738, file: !3500, line: 102, type: !156)
!14741 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14738, file: !3500, line: 103, type: !156)
!14742 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14738, file: !3500, line: 103, type: !146)
!14743 = !DILocalVariable(name: "result32", arg: 5, scope: !14738, file: !3500, line: 104, type: !146)
!14744 = !DILocalVariable(name: "round_up", arg: 6, scope: !14738, file: !3500, line: 104, type: !146)
!14745 = !DILocalVariable(name: "round_off", arg: 7, scope: !14738, file: !3500, line: 105, type: !146)
!14746 = !DILocalVariable(name: "mul_ratio", scope: !14738, file: !3500, line: 107, type: !146)
!14747 = !DILocalVariable(name: "div_ratio", scope: !14738, file: !3500, line: 109, type: !146)
!14748 = !DILocalVariable(name: "off", scope: !14738, file: !3500, line: 116, type: !213)
!14749 = !DILocalVariable(name: "rdivisor", scope: !14750, file: !3500, line: 119, type: !156)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !3500, line: 118, column: 18)
!14751 = distinct !DILexicalBlock(scope: !14738, file: !3500, line: 118, column: 6)
!14752 = !DILocation(line: 0, scope: !14738, inlinedAt: !14753)
!14753 = distinct !DILocation(line: 392, column: 9, scope: !14733)
!14754 = !DILocation(line: 143, column: 25, scope: !14755, inlinedAt: !14753)
!14755 = distinct !DILexicalBlock(scope: !14756, file: !3500, line: 142, column: 17)
!14756 = distinct !DILexicalBlock(scope: !14757, file: !3500, line: 142, column: 7)
!14757 = distinct !DILexicalBlock(scope: !14758, file: !3500, line: 141, column: 24)
!14758 = distinct !DILexicalBlock(scope: !14759, file: !3500, line: 141, column: 13)
!14759 = distinct !DILexicalBlock(scope: !14738, file: !3500, line: 134, column: 6)
!14760 = !DILocation(line: 392, column: 2, scope: !14733)
!14761 = distinct !DISubprogram(name: "z_time_slice", scope: !2494, file: !2494, line: 502, type: !8110, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14762)
!14762 = !{!14763, !14764}
!14763 = !DILocalVariable(name: "ticks", arg: 1, scope: !14761, file: !2494, line: 502, type: !118)
!14764 = !DILocalVariable(name: "key", scope: !14761, file: !2494, line: 511, type: !14670)
!14765 = !DILocation(line: 0, scope: !14761)
!14766 = !DILocation(line: 0, scope: !14678, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 511, column: 25, scope: !14761)
!14768 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !14769)
!14769 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !14767)
!14770 = !DILocation(line: 0, scope: !14687, inlinedAt: !14769)
!14771 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !14767)
!14772 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !14767)
!14773 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !14767)
!14774 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !14767)
!14775 = !DILocation(line: 514, column: 6, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14761, file: !2494, line: 514, column: 6)
!14777 = !DILocation(line: 514, column: 25, scope: !14776)
!14778 = !DILocation(line: 514, column: 22, scope: !14776)
!14779 = !DILocation(line: 514, column: 6, scope: !14761)
!14780 = !DILocation(line: 515, column: 3, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14776, file: !2494, line: 514, column: 35)
!14782 = !DILocation(line: 0, scope: !14712, inlinedAt: !14783)
!14783 = distinct !DILocation(line: 516, column: 3, scope: !14781)
!14784 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !14783)
!14785 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !14783)
!14786 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !14783)
!14787 = !DILocation(line: 0, scope: !14726, inlinedAt: !14788)
!14788 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !14783)
!14789 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !14788)
!14790 = !DILocation(line: 517, column: 3, scope: !14781)
!14791 = !DILocation(line: 519, column: 18, scope: !14761)
!14792 = !DILocation(line: 522, column: 6, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14761, file: !2494, line: 522, column: 6)
!14794 = !DILocation(line: 522, column: 27, scope: !14793)
!14795 = !DILocation(line: 522, column: 30, scope: !14793)
!14796 = !DILocation(line: 522, column: 6, scope: !14761)
!14797 = !DILocation(line: 523, column: 30, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !2494, line: 523, column: 7)
!14799 = distinct !DILexicalBlock(scope: !14793, file: !2494, line: 522, column: 51)
!14800 = !DILocation(line: 523, column: 13, scope: !14798)
!14801 = !DILocation(line: 523, column: 7, scope: !14799)
!14802 = !DILocation(line: 530, column: 10, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14798, file: !2494, line: 523, column: 43)
!14804 = !DILocation(line: 531, column: 3, scope: !14803)
!14805 = !DILocation(line: 532, column: 30, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14798, file: !2494, line: 531, column: 10)
!14807 = !DILocation(line: 535, column: 29, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14793, file: !2494, line: 534, column: 9)
!14809 = !DILocation(line: 0, scope: !14712, inlinedAt: !14810)
!14810 = distinct !DILocation(line: 537, column: 2, scope: !14761)
!14811 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !14810)
!14812 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !14810)
!14813 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !14810)
!14814 = !DILocation(line: 0, scope: !14726, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !14810)
!14816 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !14815)
!14817 = !DILocation(line: 538, column: 1, scope: !14761)
!14818 = distinct !DISubprogram(name: "sliceable", scope: !2494, file: !2494, line: 468, type: !14819, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14821)
!14819 = !DISubroutineType(types: !14820)
!14820 = !{!146, !2387}
!14821 = !{!14822, !14823}
!14822 = !DILocalVariable(name: "thread", arg: 1, scope: !14818, file: !2494, line: 468, type: !2387)
!14823 = !DILocalVariable(name: "ret", scope: !14818, file: !2494, line: 470, type: !146)
!14824 = !DILocation(line: 0, scope: !14818)
!14825 = !DILocation(line: 470, column: 13, scope: !14818)
!14826 = !DILocation(line: 471, column: 3, scope: !14818)
!14827 = !DILocation(line: 471, column: 7, scope: !14818)
!14828 = !DILocation(line: 472, column: 3, scope: !14818)
!14829 = !DILocation(line: 472, column: 37, scope: !14818)
!14830 = !DILocation(line: 472, column: 24, scope: !14818)
!14831 = !DILocation(line: 472, column: 43, scope: !14818)
!14832 = !DILocation(line: 472, column: 7, scope: !14818)
!14833 = !DILocation(line: 473, column: 3, scope: !14818)
!14834 = !DILocation(line: 473, column: 7, scope: !14818)
!14835 = !DILocation(line: 473, column: 6, scope: !14818)
!14836 = !DILocation(line: 479, column: 2, scope: !14818)
!14837 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2494, file: !2494, line: 482, type: !14838, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14840)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{!14670, !14670}
!14840 = !{!14841, !14842}
!14841 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14837, file: !2494, line: 482, type: !14670)
!14842 = !DILocalVariable(name: "curr", scope: !14837, file: !2494, line: 484, type: !2387)
!14843 = !DILocation(line: 0, scope: !14837)
!14844 = !DILocation(line: 484, column: 26, scope: !14837)
!14845 = !DILocation(line: 493, column: 7, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14837, file: !2494, line: 493, column: 6)
!14847 = !DILocation(line: 493, column: 6, scope: !14837)
!14848 = !DILocation(line: 494, column: 3, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14846, file: !2494, line: 493, column: 49)
!14850 = !DILocation(line: 495, column: 2, scope: !14849)
!14851 = !DILocation(line: 496, column: 2, scope: !14837)
!14852 = !DILocation(line: 499, column: 1, scope: !14837)
!14853 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13056, file: !13056, line: 106, type: !14819, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14854)
!14854 = !{!14855, !14856}
!14855 = !DILocalVariable(name: "thread", arg: 1, scope: !14853, file: !13056, line: 106, type: !2387)
!14856 = !DILocalVariable(name: "state", scope: !14853, file: !13056, line: 108, type: !143)
!14857 = !DILocation(line: 0, scope: !14853)
!14858 = !DILocation(line: 108, column: 31, scope: !14853)
!14859 = !DILocation(line: 110, column: 16, scope: !14853)
!14860 = !DILocation(line: 111, column: 41, scope: !14853)
!14861 = !DILocation(line: 110, column: 2, scope: !14853)
!14862 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2494, file: !2494, line: 393, type: !14636, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14863)
!14863 = !{!14864}
!14864 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !2494, line: 393, type: !2387)
!14865 = !DILocation(line: 0, scope: !14862)
!14866 = !DILocation(line: 395, column: 6, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14862, file: !2494, line: 395, column: 6)
!14868 = !DILocation(line: 395, column: 6, scope: !14862)
!14869 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !2494, line: 264, type: !2387)
!14870 = distinct !DISubprogram(name: "dequeue_thread", scope: !2494, file: !2494, line: 264, type: !14636, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14871)
!14871 = !{!14869}
!14872 = !DILocation(line: 0, scope: !14870, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 396, column: 3, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14867, file: !2494, line: 395, column: 34)
!14875 = !DILocation(line: 266, column: 15, scope: !14870, inlinedAt: !14873)
!14876 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !14873)
!14877 = !DILocalVariable(name: "thread", arg: 1, scope: !14878, file: !2494, line: 232, type: !2387)
!14878 = distinct !DISubprogram(name: "runq_remove", scope: !2494, file: !2494, line: 232, type: !14636, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14879)
!14879 = !{!14877}
!14880 = !DILocation(line: 0, scope: !14878, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !14873)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2494, line: 267, column: 35)
!14883 = distinct !DILexicalBlock(scope: !14870, file: !2494, line: 267, column: 6)
!14884 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !14881)
!14885 = !DILocation(line: 397, column: 2, scope: !14874)
!14886 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !2494, line: 250, type: !2387)
!14887 = distinct !DISubprogram(name: "queue_thread", scope: !2494, file: !2494, line: 250, type: !14636, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14888)
!14888 = !{!14886}
!14889 = !DILocation(line: 0, scope: !14887, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 398, column: 2, scope: !14862)
!14891 = !DILocation(line: 252, column: 15, scope: !14887, inlinedAt: !14890)
!14892 = !DILocation(line: 252, column: 28, scope: !14887, inlinedAt: !14890)
!14893 = !DILocalVariable(name: "thread", arg: 1, scope: !14894, file: !2494, line: 227, type: !2387)
!14894 = distinct !DISubprogram(name: "runq_add", scope: !2494, file: !2494, line: 227, type: !14636, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14895)
!14895 = !{!14893}
!14896 = !DILocation(line: 0, scope: !14894, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 254, column: 3, scope: !14898, inlinedAt: !14890)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2494, line: 253, column: 35)
!14899 = distinct !DILexicalBlock(scope: !14887, file: !2494, line: 253, column: 6)
!14900 = !DILocalVariable(name: "pq", arg: 1, scope: !14901, file: !2494, line: 181, type: !14904)
!14901 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2494, file: !2494, line: 181, type: !14902, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14905)
!14902 = !DISubroutineType(types: !14903)
!14903 = !{null, !14904, !2387}
!14904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!14905 = !{!14900, !14906, !14907}
!14906 = !DILocalVariable(name: "thread", arg: 2, scope: !14901, file: !2494, line: 182, type: !2387)
!14907 = !DILocalVariable(name: "t", scope: !14901, file: !2494, line: 184, type: !2387)
!14908 = !DILocation(line: 0, scope: !14901, inlinedAt: !14909)
!14909 = distinct !DILocation(line: 229, column: 2, scope: !14894, inlinedAt: !14897)
!14910 = !DILocation(line: 186, column: 2, scope: !14911, inlinedAt: !14909)
!14911 = distinct !DILexicalBlock(scope: !14912, file: !2494, line: 186, column: 2)
!14912 = distinct !DILexicalBlock(scope: !14901, file: !2494, line: 186, column: 2)
!14913 = !DILocation(line: 186, column: 2, scope: !14912, inlinedAt: !14909)
!14914 = !DILocation(line: 186, column: 2, scope: !14915, inlinedAt: !14909)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !2494, line: 186, column: 2)
!14916 = !DILocation(line: 188, column: 2, scope: !14917, inlinedAt: !14909)
!14917 = distinct !DILexicalBlock(scope: !14901, file: !2494, line: 188, column: 2)
!14918 = !DILocation(line: 188, column: 2, scope: !14919, inlinedAt: !14909)
!14919 = distinct !DILexicalBlock(scope: !14917, file: !2494, line: 188, column: 2)
!14920 = !DILocation(line: 0, scope: !14917, inlinedAt: !14909)
!14921 = !DILocation(line: 189, column: 7, scope: !14922, inlinedAt: !14909)
!14922 = distinct !DILexicalBlock(scope: !14923, file: !2494, line: 189, column: 7)
!14923 = distinct !DILexicalBlock(scope: !14919, file: !2494, line: 188, column: 56)
!14924 = !DILocation(line: 189, column: 35, scope: !14922, inlinedAt: !14909)
!14925 = !DILocation(line: 189, column: 7, scope: !14923, inlinedAt: !14909)
!14926 = !DILocation(line: 191, column: 21, scope: !14927, inlinedAt: !14909)
!14927 = distinct !DILexicalBlock(scope: !14922, file: !2494, line: 189, column: 40)
!14928 = !DILocation(line: 190, column: 4, scope: !14927, inlinedAt: !14909)
!14929 = !DILocation(line: 192, column: 4, scope: !14927, inlinedAt: !14909)
!14930 = distinct !{!14930, !14916, !14931}
!14931 = !DILocation(line: 194, column: 2, scope: !14917, inlinedAt: !14909)
!14932 = !DILocation(line: 196, column: 37, scope: !14901, inlinedAt: !14909)
!14933 = !DILocation(line: 196, column: 2, scope: !14901, inlinedAt: !14909)
!14934 = !DILocation(line: 197, column: 1, scope: !14901, inlinedAt: !14909)
!14935 = !DILocation(line: 399, column: 25, scope: !14862)
!14936 = !DILocation(line: 399, column: 22, scope: !14862)
!14937 = !DILocation(line: 399, column: 2, scope: !14862)
!14938 = !DILocation(line: 400, column: 1, scope: !14862)
!14939 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13056, file: !13056, line: 136, type: !14819, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14940)
!14940 = !{!14941}
!14941 = !DILocalVariable(name: "thread", arg: 1, scope: !14939, file: !13056, line: 136, type: !2387)
!14942 = !DILocation(line: 0, scope: !14939)
!14943 = !DILocation(line: 138, column: 9, scope: !14939)
!14944 = !DILocation(line: 138, column: 2, scope: !14939)
!14945 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2494, file: !2494, line: 1137, type: !14902, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14946)
!14946 = !{!14947, !14948}
!14947 = !DILocalVariable(name: "pq", arg: 1, scope: !14945, file: !2494, line: 1137, type: !14904)
!14948 = !DILocalVariable(name: "thread", arg: 2, scope: !14945, file: !2494, line: 1137, type: !2387)
!14949 = !DILocation(line: 0, scope: !14945)
!14950 = !DILocation(line: 1139, column: 2, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14952, file: !2494, line: 1139, column: 2)
!14952 = distinct !DILexicalBlock(scope: !14945, file: !2494, line: 1139, column: 2)
!14953 = !DILocation(line: 1139, column: 2, scope: !14952)
!14954 = !DILocation(line: 1139, column: 2, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14951, file: !2494, line: 1139, column: 2)
!14956 = !DILocation(line: 1141, column: 33, scope: !14945)
!14957 = !DILocation(line: 1141, column: 2, scope: !14945)
!14958 = !DILocation(line: 1142, column: 1, scope: !14945)
!14959 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13056, file: !13056, line: 83, type: !14819, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14960)
!14960 = !{!14961}
!14961 = !DILocalVariable(name: "thread", arg: 1, scope: !14959, file: !13056, line: 83, type: !2387)
!14962 = !DILocation(line: 0, scope: !14959)
!14963 = !DILocation(line: 89, column: 16, scope: !14959)
!14964 = !DILocation(line: 89, column: 2, scope: !14959)
!14965 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !14966, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14968)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!2490, !14904}
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "list", arg: 1, scope: !14965, file: !235, line: 294, type: !14904)
!14970 = !DILocation(line: 0, scope: !14965)
!14971 = !DILocation(line: 296, column: 9, scope: !14965)
!14972 = !DILocation(line: 296, column: 49, scope: !14965)
!14973 = !DILocation(line: 296, column: 2, scope: !14965)
!14974 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !14975, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{null, !2490, !2490}
!14977 = !{!14978, !14979, !14980}
!14978 = !DILocalVariable(name: "successor", arg: 1, scope: !14974, file: !235, line: 443, type: !2490)
!14979 = !DILocalVariable(name: "node", arg: 2, scope: !14974, file: !235, line: 443, type: !2490)
!14980 = !DILocalVariable(name: "prev", scope: !14974, file: !235, line: 445, type: !14981)
!14981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2490)
!14982 = !DILocation(line: 0, scope: !14974)
!14983 = !DILocation(line: 445, column: 39, scope: !14974)
!14984 = !DILocation(line: 447, column: 8, scope: !14974)
!14985 = !DILocation(line: 447, column: 13, scope: !14974)
!14986 = !DILocation(line: 448, column: 8, scope: !14974)
!14987 = !DILocation(line: 448, column: 13, scope: !14974)
!14988 = !DILocation(line: 449, column: 8, scope: !14974)
!14989 = !DILocation(line: 449, column: 13, scope: !14974)
!14990 = !DILocation(line: 450, column: 18, scope: !14974)
!14991 = !DILocation(line: 451, column: 1, scope: !14974)
!14992 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !14993, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{!2490, !14904, !2490}
!14995 = !{!14996, !14997}
!14996 = !DILocalVariable(name: "list", arg: 1, scope: !14992, file: !235, line: 341, type: !14904)
!14997 = !DILocalVariable(name: "node", arg: 2, scope: !14992, file: !235, line: 342, type: !2490)
!14998 = !DILocation(line: 0, scope: !14992)
!14999 = !DILocation(line: 344, column: 15, scope: !14992)
!15000 = !DILocation(line: 344, column: 9, scope: !14992)
!15001 = !DILocation(line: 344, column: 26, scope: !14992)
!15002 = !DILocation(line: 344, column: 2, scope: !14992)
!15003 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !15004, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{null, !14904, !2490}
!15006 = !{!15007, !15008, !15009}
!15007 = !DILocalVariable(name: "list", arg: 1, scope: !15003, file: !235, line: 404, type: !14904)
!15008 = !DILocalVariable(name: "node", arg: 2, scope: !15003, file: !235, line: 404, type: !2490)
!15009 = !DILocalVariable(name: "tail", scope: !15003, file: !235, line: 406, type: !14981)
!15010 = !DILocation(line: 0, scope: !15003)
!15011 = !DILocation(line: 406, column: 34, scope: !15003)
!15012 = !DILocation(line: 408, column: 8, scope: !15003)
!15013 = !DILocation(line: 408, column: 13, scope: !15003)
!15014 = !DILocation(line: 409, column: 8, scope: !15003)
!15015 = !DILocation(line: 409, column: 13, scope: !15003)
!15016 = !DILocation(line: 411, column: 8, scope: !15003)
!15017 = !DILocation(line: 411, column: 13, scope: !15003)
!15018 = !DILocation(line: 412, column: 13, scope: !15003)
!15019 = !DILocation(line: 413, column: 1, scope: !15003)
!15020 = distinct !DISubprogram(name: "update_cache", scope: !2494, file: !2494, line: 559, type: !8110, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15021)
!15021 = !{!15022, !15023}
!15022 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15020, file: !2494, line: 559, type: !118)
!15023 = !DILocalVariable(name: "thread", scope: !15020, file: !2494, line: 562, type: !2387)
!15024 = !DILocation(line: 0, scope: !15020)
!15025 = !DILocation(line: 239, column: 9, scope: !15026, inlinedAt: !15029)
!15026 = distinct !DISubprogram(name: "runq_best", scope: !2494, file: !2494, line: 237, type: !15027, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!2387}
!15029 = distinct !DILocation(line: 314, column: 28, scope: !15030, inlinedAt: !15033)
!15030 = distinct !DISubprogram(name: "next_up", scope: !2494, file: !2494, line: 312, type: !15027, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15031)
!15031 = !{!15032}
!15032 = !DILocalVariable(name: "thread", scope: !15030, file: !2494, line: 314, type: !2387)
!15033 = distinct !DILocation(line: 562, column: 28, scope: !15020)
!15034 = !DILocation(line: 0, scope: !15030, inlinedAt: !15033)
!15035 = !DILocation(line: 340, column: 17, scope: !15030, inlinedAt: !15033)
!15036 = !DILocation(line: 340, column: 9, scope: !15030, inlinedAt: !15033)
!15037 = !DILocalVariable(name: "thread", arg: 1, scope: !15038, file: !2494, line: 127, type: !2387)
!15038 = distinct !DISubprogram(name: "should_preempt", scope: !2494, file: !2494, line: 127, type: !15039, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{!146, !2387, !118}
!15041 = !{!15037, !15042}
!15042 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15038, file: !2494, line: 128, type: !118)
!15043 = !DILocation(line: 0, scope: !15038, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 564, column: 6, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15020, file: !2494, line: 564, column: 6)
!15046 = !DILocation(line: 133, column: 17, scope: !15047, inlinedAt: !15044)
!15047 = distinct !DILexicalBlock(scope: !15038, file: !2494, line: 133, column: 6)
!15048 = !DILocation(line: 0, scope: !15045)
!15049 = !DILocation(line: 133, column: 6, scope: !15038, inlinedAt: !15044)
!15050 = !DILocation(line: 137, column: 2, scope: !15051, inlinedAt: !15044)
!15051 = distinct !DILexicalBlock(scope: !15052, file: !2494, line: 137, column: 2)
!15052 = distinct !DILexicalBlock(scope: !15038, file: !2494, line: 137, column: 2)
!15053 = !DILocation(line: 137, column: 2, scope: !15052, inlinedAt: !15044)
!15054 = !DILocation(line: 137, column: 2, scope: !15055, inlinedAt: !15044)
!15055 = distinct !DILexicalBlock(scope: !15051, file: !2494, line: 137, column: 2)
!15056 = !DILocation(line: 140, column: 6, scope: !15057, inlinedAt: !15044)
!15057 = distinct !DILexicalBlock(scope: !15038, file: !2494, line: 140, column: 6)
!15058 = !DILocation(line: 140, column: 6, scope: !15038, inlinedAt: !15044)
!15059 = !DILocation(line: 150, column: 9, scope: !15060, inlinedAt: !15044)
!15060 = distinct !DILexicalBlock(scope: !15038, file: !2494, line: 149, column: 6)
!15061 = !DILocation(line: 149, column: 6, scope: !15038, inlinedAt: !15044)
!15062 = !DILocation(line: 157, column: 6, scope: !15063, inlinedAt: !15044)
!15063 = distinct !DILexicalBlock(scope: !15038, file: !2494, line: 157, column: 6)
!15064 = !DILocation(line: 564, column: 6, scope: !15020)
!15065 = !DILocation(line: 566, column: 14, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15067, file: !2494, line: 566, column: 7)
!15067 = distinct !DILexicalBlock(scope: !15045, file: !2494, line: 564, column: 42)
!15068 = !DILocation(line: 566, column: 7, scope: !15067)
!15069 = !DILocation(line: 567, column: 4, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15066, file: !2494, line: 566, column: 27)
!15071 = !DILocation(line: 568, column: 3, scope: !15070)
!15072 = !DILocation(line: 585, column: 1, scope: !15020)
!15073 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2494, file: !2494, line: 1144, type: !15074, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15076)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{!2387, !14904}
!15076 = !{!15077, !15078, !15079}
!15077 = !DILocalVariable(name: "pq", arg: 1, scope: !15073, file: !2494, line: 1144, type: !14904)
!15078 = !DILocalVariable(name: "thread", scope: !15073, file: !2494, line: 1146, type: !2387)
!15079 = !DILocalVariable(name: "n", scope: !15073, file: !2494, line: 1147, type: !2490)
!15080 = !DILocation(line: 0, scope: !15073)
!15081 = !DILocation(line: 1147, column: 19, scope: !15073)
!15082 = !DILocation(line: 1152, column: 2, scope: !15073)
!15083 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13056, file: !13056, line: 115, type: !14819, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15084)
!15084 = !{!15085}
!15085 = !DILocalVariable(name: "thread", arg: 1, scope: !15083, file: !13056, line: 115, type: !2387)
!15086 = !DILocation(line: 0, scope: !15083)
!15087 = !DILocation(line: 117, column: 46, scope: !15083)
!15088 = !DILocation(line: 117, column: 10, scope: !15083)
!15089 = !DILocation(line: 117, column: 9, scope: !15083)
!15090 = !DILocation(line: 117, column: 2, scope: !15083)
!15091 = distinct !DISubprogram(name: "is_preempt", scope: !2494, file: !2494, line: 62, type: !14654, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15092)
!15092 = !{!15093}
!15093 = !DILocalVariable(name: "thread", arg: 1, scope: !15091, file: !2494, line: 62, type: !2387)
!15094 = !DILocation(line: 0, scope: !15091)
!15095 = !DILocation(line: 65, column: 22, scope: !15091)
!15096 = !DILocation(line: 65, column: 30, scope: !15091)
!15097 = !DILocation(line: 65, column: 2, scope: !15091)
!15098 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13463, file: !13463, line: 35, type: !15099, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15103)
!15099 = !DISubroutineType(types: !15100)
!15100 = !{!146, !15101}
!15101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15102, size: 32)
!15102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!15103 = !{!15104}
!15104 = !DILocalVariable(name: "to", arg: 1, scope: !15098, file: !13463, line: 35, type: !15101)
!15105 = !DILocation(line: 0, scope: !15098)
!15106 = !DILocation(line: 37, column: 35, scope: !15098)
!15107 = !DILocation(line: 37, column: 10, scope: !15098)
!15108 = !DILocation(line: 37, column: 9, scope: !15098)
!15109 = !DILocation(line: 37, column: 2, scope: !15098)
!15110 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !15111, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15115)
!15111 = !DISubroutineType(types: !15112)
!15112 = !{!146, !15113}
!15113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15114, size: 32)
!15114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!15115 = !{!15116}
!15116 = !DILocalVariable(name: "node", arg: 1, scope: !15110, file: !235, line: 225, type: !15113)
!15117 = !DILocation(line: 0, scope: !15110)
!15118 = !DILocation(line: 227, column: 15, scope: !15110)
!15119 = !DILocation(line: 227, column: 20, scope: !15110)
!15120 = !DILocation(line: 227, column: 2, scope: !15110)
!15121 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !14993, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15122)
!15122 = !{!15123, !15124}
!15123 = !DILocalVariable(name: "list", arg: 1, scope: !15121, file: !235, line: 325, type: !14904)
!15124 = !DILocalVariable(name: "node", arg: 2, scope: !15121, file: !235, line: 326, type: !2490)
!15125 = !DILocation(line: 0, scope: !15121)
!15126 = !DILocation(line: 328, column: 24, scope: !15121)
!15127 = !DILocation(line: 328, column: 15, scope: !15121)
!15128 = !DILocation(line: 328, column: 9, scope: !15121)
!15129 = !DILocation(line: 328, column: 45, scope: !15121)
!15130 = !DILocation(line: 328, column: 2, scope: !15121)
!15131 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !15132, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15134)
!15132 = !DISubroutineType(types: !15133)
!15133 = !{!146, !14904}
!15134 = !{!15135}
!15135 = !DILocalVariable(name: "list", arg: 1, scope: !15131, file: !235, line: 266, type: !14904)
!15136 = !DILocation(line: 0, scope: !15131)
!15137 = !DILocation(line: 268, column: 15, scope: !15131)
!15138 = !DILocation(line: 268, column: 20, scope: !15131)
!15139 = !DILocation(line: 268, column: 2, scope: !15131)
!15140 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !15141, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15143)
!15141 = !DISubroutineType(types: !15142)
!15142 = !{null, !2490}
!15143 = !{!15144, !15145, !15146}
!15144 = !DILocalVariable(name: "node", arg: 1, scope: !15140, file: !235, line: 496, type: !2490)
!15145 = !DILocalVariable(name: "prev", scope: !15140, file: !235, line: 498, type: !14981)
!15146 = !DILocalVariable(name: "next", scope: !15140, file: !235, line: 499, type: !14981)
!15147 = !DILocation(line: 0, scope: !15140)
!15148 = !DILocation(line: 498, column: 34, scope: !15140)
!15149 = !DILocation(line: 499, column: 34, scope: !15140)
!15150 = !DILocation(line: 501, column: 8, scope: !15140)
!15151 = !DILocation(line: 501, column: 13, scope: !15140)
!15152 = !DILocation(line: 502, column: 8, scope: !15140)
!15153 = !DILocation(line: 502, column: 13, scope: !15140)
!15154 = !DILocation(line: 503, column: 2, scope: !15140)
!15155 = !DILocation(line: 504, column: 1, scope: !15140)
!15156 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !15141, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15157)
!15157 = !{!15158}
!15158 = !DILocalVariable(name: "node", arg: 1, scope: !15156, file: !235, line: 211, type: !2490)
!15159 = !DILocation(line: 0, scope: !15156)
!15160 = !DILocation(line: 213, column: 8, scope: !15156)
!15161 = !DILocation(line: 213, column: 13, scope: !15156)
!15162 = !DILocation(line: 214, column: 8, scope: !15156)
!15163 = !DILocation(line: 214, column: 13, scope: !15156)
!15164 = !DILocation(line: 215, column: 1, scope: !15156)
!15165 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13056, file: !13056, line: 131, type: !15166, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15168)
!15166 = !DISubroutineType(types: !15167)
!15167 = !{!146, !2387, !156}
!15168 = !{!15169, !15170}
!15169 = !DILocalVariable(name: "thread", arg: 1, scope: !15165, file: !13056, line: 131, type: !2387)
!15170 = !DILocalVariable(name: "state", arg: 2, scope: !15165, file: !13056, line: 131, type: !156)
!15171 = !DILocation(line: 0, scope: !15165)
!15172 = !DILocation(line: 133, column: 23, scope: !15165)
!15173 = !DILocation(line: 133, column: 10, scope: !15165)
!15174 = !DILocation(line: 133, column: 36, scope: !15165)
!15175 = !DILocation(line: 133, column: 45, scope: !15165)
!15176 = !DILocation(line: 133, column: 2, scope: !15165)
!15177 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13056, file: !13056, line: 211, type: !15178, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15180)
!15178 = !DISubroutineType(types: !15179)
!15179 = !{!146, !118, !118}
!15180 = !{!15181, !15182}
!15181 = !DILocalVariable(name: "prio", arg: 1, scope: !15177, file: !13056, line: 211, type: !118)
!15182 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15177, file: !13056, line: 211, type: !118)
!15183 = !DILocation(line: 0, scope: !15177)
!15184 = !DILocation(line: 213, column: 9, scope: !15177)
!15185 = !DILocation(line: 213, column: 2, scope: !15177)
!15186 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13056, file: !13056, line: 206, type: !15178, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15187)
!15187 = !{!15188, !15189}
!15188 = !DILocalVariable(name: "prio1", arg: 1, scope: !15186, file: !13056, line: 206, type: !118)
!15189 = !DILocalVariable(name: "prio2", arg: 2, scope: !15186, file: !13056, line: 206, type: !118)
!15190 = !DILocation(line: 0, scope: !15186)
!15191 = !DILocation(line: 208, column: 15, scope: !15186)
!15192 = !DILocation(line: 208, column: 2, scope: !15186)
!15193 = distinct !DISubprogram(name: "z_ready_thread", scope: !2494, file: !2494, line: 635, type: !14636, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15194)
!15194 = !{!15195, !15196, !15198}
!15195 = !DILocalVariable(name: "thread", arg: 1, scope: !15193, file: !2494, line: 635, type: !2387)
!15196 = !DILocalVariable(name: "__i", scope: !15197, file: !2494, line: 637, type: !14670)
!15197 = distinct !DILexicalBlock(scope: !15193, file: !2494, line: 637, column: 2)
!15198 = !DILocalVariable(name: "__key", scope: !15197, file: !2494, line: 637, type: !14670)
!15199 = !DILocation(line: 0, scope: !15193)
!15200 = !DILocation(line: 0, scope: !15197)
!15201 = !DILocation(line: 0, scope: !14678, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 637, column: 2, scope: !15197)
!15203 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15202)
!15205 = !DILocation(line: 0, scope: !14687, inlinedAt: !15204)
!15206 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15202)
!15207 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15202)
!15208 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15202)
!15209 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15202)
!15210 = !DILocation(line: 639, column: 4, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15212, file: !2494, line: 638, column: 41)
!15212 = distinct !DILexicalBlock(scope: !15213, file: !2494, line: 638, column: 7)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !2494, line: 637, column: 26)
!15214 = distinct !DILexicalBlock(scope: !15197, file: !2494, line: 637, column: 2)
!15215 = !DILocation(line: 0, scope: !14712, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 637, column: 2, scope: !15214)
!15217 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15216)
!15218 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15216)
!15219 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15216)
!15220 = !DILocation(line: 0, scope: !14726, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15216)
!15222 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15221)
!15223 = !DILocation(line: 642, column: 1, scope: !15193)
!15224 = distinct !DISubprogram(name: "ready_thread", scope: !2494, file: !2494, line: 617, type: !14636, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15225)
!15225 = !{!15226}
!15226 = !DILocalVariable(name: "thread", arg: 1, scope: !15224, file: !2494, line: 617, type: !2387)
!15227 = !DILocation(line: 0, scope: !15224)
!15228 = !DILocation(line: 626, column: 7, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15224, file: !2494, line: 626, column: 6)
!15230 = !DILocation(line: 626, column: 34, scope: !15229)
!15231 = !DILocation(line: 626, column: 37, scope: !15229)
!15232 = !DILocation(line: 626, column: 6, scope: !15224)
!15233 = !DILocation(line: 0, scope: !14887, inlinedAt: !15234)
!15234 = distinct !DILocation(line: 629, column: 3, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15229, file: !2494, line: 626, column: 64)
!15236 = !DILocation(line: 252, column: 15, scope: !14887, inlinedAt: !15234)
!15237 = !DILocation(line: 252, column: 28, scope: !14887, inlinedAt: !15234)
!15238 = !DILocation(line: 0, scope: !14894, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 254, column: 3, scope: !14898, inlinedAt: !15234)
!15240 = !DILocation(line: 0, scope: !14901, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 229, column: 2, scope: !14894, inlinedAt: !15239)
!15242 = !DILocation(line: 186, column: 2, scope: !14911, inlinedAt: !15241)
!15243 = !DILocation(line: 186, column: 2, scope: !14912, inlinedAt: !15241)
!15244 = !DILocation(line: 186, column: 2, scope: !14915, inlinedAt: !15241)
!15245 = !DILocation(line: 188, column: 2, scope: !14917, inlinedAt: !15241)
!15246 = !DILocation(line: 188, column: 2, scope: !14919, inlinedAt: !15241)
!15247 = !DILocation(line: 0, scope: !14917, inlinedAt: !15241)
!15248 = !DILocation(line: 189, column: 7, scope: !14922, inlinedAt: !15241)
!15249 = !DILocation(line: 189, column: 35, scope: !14922, inlinedAt: !15241)
!15250 = !DILocation(line: 189, column: 7, scope: !14923, inlinedAt: !15241)
!15251 = !DILocation(line: 191, column: 21, scope: !14927, inlinedAt: !15241)
!15252 = !DILocation(line: 190, column: 4, scope: !14927, inlinedAt: !15241)
!15253 = !DILocation(line: 192, column: 4, scope: !14927, inlinedAt: !15241)
!15254 = distinct !{!15254, !15245, !15255}
!15255 = !DILocation(line: 194, column: 2, scope: !14917, inlinedAt: !15241)
!15256 = !DILocation(line: 196, column: 37, scope: !14901, inlinedAt: !15241)
!15257 = !DILocation(line: 196, column: 2, scope: !14901, inlinedAt: !15241)
!15258 = !DILocation(line: 197, column: 1, scope: !14901, inlinedAt: !15241)
!15259 = !DILocation(line: 630, column: 3, scope: !15235)
!15260 = !DILocation(line: 632, column: 2, scope: !15235)
!15261 = !DILocation(line: 633, column: 1, scope: !15224)
!15262 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13056, file: !13056, line: 120, type: !14819, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15263)
!15263 = !{!15264}
!15264 = !DILocalVariable(name: "thread", arg: 1, scope: !15262, file: !13056, line: 120, type: !2387)
!15265 = !DILocation(line: 0, scope: !15262)
!15266 = !DILocation(line: 122, column: 12, scope: !15262)
!15267 = !DILocation(line: 122, column: 62, scope: !15262)
!15268 = !DILocation(line: 123, column: 4, scope: !15262)
!15269 = !DILocation(line: 122, column: 2, scope: !15262)
!15270 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2494, file: !2494, line: 644, type: !14636, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15271)
!15271 = !{!15272, !15273, !15275}
!15272 = !DILocalVariable(name: "thread", arg: 1, scope: !15270, file: !2494, line: 644, type: !2387)
!15273 = !DILocalVariable(name: "__i", scope: !15274, file: !2494, line: 646, type: !14670)
!15274 = distinct !DILexicalBlock(scope: !15270, file: !2494, line: 646, column: 2)
!15275 = !DILocalVariable(name: "__key", scope: !15274, file: !2494, line: 646, type: !14670)
!15276 = !DILocation(line: 0, scope: !15270)
!15277 = !DILocation(line: 0, scope: !15274)
!15278 = !DILocation(line: 0, scope: !14678, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 646, column: 2, scope: !15274)
!15280 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15281)
!15281 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15279)
!15282 = !DILocation(line: 0, scope: !14687, inlinedAt: !15281)
!15283 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15279)
!15284 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15279)
!15285 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15279)
!15286 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15279)
!15287 = !DILocation(line: 647, column: 3, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15289, file: !2494, line: 646, column: 26)
!15289 = distinct !DILexicalBlock(scope: !15274, file: !2494, line: 646, column: 2)
!15290 = !DILocation(line: 0, scope: !14712, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 646, column: 2, scope: !15289)
!15292 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15291)
!15293 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15291)
!15294 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15291)
!15295 = !DILocation(line: 0, scope: !14726, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15291)
!15297 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15296)
!15298 = !DILocation(line: 649, column: 1, scope: !15270)
!15299 = distinct !DISubprogram(name: "z_sched_start", scope: !2494, file: !2494, line: 651, type: !14636, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15300)
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "thread", arg: 1, scope: !15299, file: !2494, line: 651, type: !2387)
!15302 = !DILocalVariable(name: "key", scope: !15299, file: !2494, line: 653, type: !14670)
!15303 = !DILocation(line: 0, scope: !15299)
!15304 = !DILocation(line: 0, scope: !14678, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 653, column: 25, scope: !15299)
!15306 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15305)
!15308 = !DILocation(line: 0, scope: !14687, inlinedAt: !15307)
!15309 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15305)
!15310 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15305)
!15311 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15305)
!15312 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15305)
!15313 = !DILocation(line: 655, column: 6, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15299, file: !2494, line: 655, column: 6)
!15315 = !DILocation(line: 655, column: 6, scope: !15299)
!15316 = !DILocation(line: 0, scope: !14712, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 656, column: 3, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !2494, line: 655, column: 36)
!15319 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15317)
!15320 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15317)
!15321 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15317)
!15322 = !DILocation(line: 0, scope: !14726, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15317)
!15324 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15323)
!15325 = !DILocation(line: 657, column: 3, scope: !15318)
!15326 = !DILocation(line: 660, column: 2, scope: !15299)
!15327 = !DILocation(line: 661, column: 2, scope: !15299)
!15328 = !DILocation(line: 662, column: 2, scope: !15299)
!15329 = !DILocation(line: 663, column: 1, scope: !15299)
!15330 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13056, file: !13056, line: 126, type: !14819, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15331)
!15331 = !{!15332}
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15330, file: !13056, line: 126, type: !2387)
!15333 = !DILocation(line: 0, scope: !15330)
!15334 = !DILocation(line: 128, column: 23, scope: !15330)
!15335 = !DILocation(line: 128, column: 36, scope: !15330)
!15336 = !DILocation(line: 128, column: 56, scope: !15330)
!15337 = !DILocation(line: 128, column: 2, scope: !15330)
!15338 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13056, file: !13056, line: 155, type: !14636, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15339)
!15339 = !{!15340}
!15340 = !DILocalVariable(name: "thread", arg: 1, scope: !15338, file: !13056, line: 155, type: !2387)
!15341 = !DILocation(line: 0, scope: !15338)
!15342 = !DILocation(line: 157, column: 15, scope: !15338)
!15343 = !DILocation(line: 157, column: 28, scope: !15338)
!15344 = !DILocation(line: 158, column: 1, scope: !15338)
!15345 = distinct !DISubprogram(name: "z_reschedule", scope: !2494, file: !2494, line: 967, type: !14713, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15346)
!15346 = !{!15347, !15348}
!15347 = !DILocalVariable(name: "lock", arg: 1, scope: !15345, file: !2494, line: 967, type: !14681)
!15348 = !DILocalVariable(name: "key", arg: 2, scope: !15345, file: !2494, line: 967, type: !14670)
!15349 = !DILocation(line: 0, scope: !15345)
!15350 = !DILocation(line: 969, column: 6, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15345, file: !2494, line: 969, column: 6)
!15352 = !DILocation(line: 969, column: 23, scope: !15351)
!15353 = !DILocation(line: 969, column: 26, scope: !15351)
!15354 = !DILocation(line: 969, column: 6, scope: !15345)
!15355 = !DILocalVariable(name: "key", arg: 2, scope: !15356, file: !13160, line: 193, type: !14670)
!15356 = distinct !DISubprogram(name: "z_swap", scope: !13160, file: !13160, line: 193, type: !15357, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15359)
!15357 = !DISubroutineType(types: !15358)
!15358 = !{!118, !14681, !14670}
!15359 = !{!15360, !15355}
!15360 = !DILocalVariable(name: "lock", arg: 1, scope: !15356, file: !13160, line: 193, type: !14681)
!15361 = !DILocation(line: 0, scope: !15356, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 970, column: 3, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15351, file: !2494, line: 969, column: 39)
!15364 = !DILocalVariable(name: "l", arg: 1, scope: !15365, file: !334, line: 221, type: !14681)
!15365 = distinct !DISubprogram(name: "k_spin_release", scope: !334, file: !334, line: 221, type: !15366, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15368)
!15366 = !DISubroutineType(types: !15367)
!15367 = !{null, !14681}
!15368 = !{!15364}
!15369 = !DILocation(line: 0, scope: !15365, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !15362)
!15371 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !15370)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !334, line: 225, column: 2)
!15373 = distinct !DILexicalBlock(scope: !15365, file: !334, line: 225, column: 2)
!15374 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !15370)
!15375 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !15370)
!15376 = distinct !DILexicalBlock(scope: !15372, file: !334, line: 225, column: 2)
!15377 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !15362)
!15378 = !DILocation(line: 971, column: 2, scope: !15363)
!15379 = !DILocation(line: 0, scope: !14712, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 972, column: 3, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15351, file: !2494, line: 971, column: 9)
!15382 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15380)
!15383 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15380)
!15384 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15380)
!15385 = !DILocation(line: 0, scope: !14726, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15380)
!15387 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15386)
!15388 = !DILocation(line: 975, column: 1, scope: !15345)
!15389 = distinct !DISubprogram(name: "resched", scope: !2494, file: !2494, line: 940, type: !15390, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15392)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{!146, !156}
!15392 = !{!15393}
!15393 = !DILocalVariable(name: "key", arg: 1, scope: !15389, file: !2494, line: 940, type: !156)
!15394 = !DILocation(line: 0, scope: !15389)
!15395 = !DILocalVariable(name: "key", arg: 1, scope: !15396, file: !6236, line: 112, type: !32)
!15396 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6236, file: !6236, line: 112, type: !15397, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!146, !32}
!15399 = !{!15395}
!15400 = !DILocation(line: 0, scope: !15396, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 946, column: 9, scope: !15389)
!15402 = !DILocation(line: 115, column: 13, scope: !15396, inlinedAt: !15401)
!15403 = !DILocation(line: 946, column: 32, scope: !15389)
!15404 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !15408)
!15405 = distinct !DISubprogram(name: "__get_IPSR", scope: !6410, file: !6410, line: 1027, type: !6497, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15406)
!15406 = !{!15407}
!15407 = !DILocalVariable(name: "result", scope: !15405, file: !6410, line: 1029, type: !156)
!15408 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !15410)
!15409 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7236, file: !7236, line: 46, type: !7237, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!15410 = distinct !DILocation(line: 946, column: 36, scope: !15389)
!15411 = !{i64 3770992}
!15412 = !DILocation(line: 0, scope: !15405, inlinedAt: !15408)
!15413 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !15410)
!15414 = !DILocation(line: 946, column: 2, scope: !15389)
!15415 = distinct !DISubprogram(name: "need_swap", scope: !2494, file: !2494, line: 953, type: !7237, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15416)
!15416 = !{!15417}
!15417 = !DILocalVariable(name: "new_thread", scope: !15415, file: !2494, line: 959, type: !2387)
!15418 = !DILocation(line: 962, column: 31, scope: !15415)
!15419 = !DILocation(line: 0, scope: !15415)
!15420 = !DILocation(line: 963, column: 23, scope: !15415)
!15421 = !DILocation(line: 963, column: 20, scope: !15415)
!15422 = !DILocation(line: 963, column: 2, scope: !15415)
!15423 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13160, file: !13160, line: 181, type: !6420, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15424)
!15424 = !{!15425, !15426}
!15425 = !DILocalVariable(name: "key", arg: 1, scope: !15423, file: !13160, line: 181, type: !32)
!15426 = !DILocalVariable(name: "ret", scope: !15423, file: !13160, line: 183, type: !118)
!15427 = !DILocation(line: 0, scope: !15423)
!15428 = !DILocation(line: 185, column: 8, scope: !15423)
!15429 = !DILocation(line: 186, column: 2, scope: !15423)
!15430 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2494, file: !2494, line: 665, type: !14636, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15431)
!15431 = !{!15432, !15433, !15435}
!15432 = !DILocalVariable(name: "thread", arg: 1, scope: !15430, file: !2494, line: 665, type: !2387)
!15433 = !DILocalVariable(name: "__i", scope: !15434, file: !2494, line: 671, type: !14670)
!15434 = distinct !DILexicalBlock(scope: !15430, file: !2494, line: 671, column: 2)
!15435 = !DILocalVariable(name: "__key", scope: !15434, file: !2494, line: 671, type: !14670)
!15436 = !DILocation(line: 0, scope: !15430)
!15437 = !DILocation(line: 669, column: 8, scope: !15430)
!15438 = !DILocation(line: 0, scope: !15434)
!15439 = !DILocation(line: 0, scope: !14678, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 671, column: 2, scope: !15434)
!15441 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15440)
!15443 = !DILocation(line: 0, scope: !14687, inlinedAt: !15442)
!15444 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15440)
!15445 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15440)
!15446 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15440)
!15447 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15440)
!15448 = !DILocation(line: 672, column: 7, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !2494, line: 672, column: 7)
!15450 = distinct !DILexicalBlock(scope: !15451, file: !2494, line: 671, column: 26)
!15451 = distinct !DILexicalBlock(scope: !15434, file: !2494, line: 671, column: 2)
!15452 = !DILocation(line: 672, column: 7, scope: !15450)
!15453 = !DILocation(line: 0, scope: !14870, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 673, column: 4, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15449, file: !2494, line: 672, column: 35)
!15456 = !DILocation(line: 266, column: 15, scope: !14870, inlinedAt: !15454)
!15457 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !15454)
!15458 = !DILocation(line: 0, scope: !14878, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !15454)
!15460 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !15459)
!15461 = !DILocation(line: 674, column: 3, scope: !15455)
!15462 = !DILocation(line: 675, column: 3, scope: !15450)
!15463 = !DILocation(line: 676, column: 26, scope: !15450)
!15464 = !DILocation(line: 676, column: 23, scope: !15450)
!15465 = !DILocation(line: 676, column: 3, scope: !15450)
!15466 = !DILocation(line: 0, scope: !14712, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 671, column: 2, scope: !15451)
!15468 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15467)
!15469 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15467)
!15470 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15467)
!15471 = !DILocation(line: 0, scope: !14726, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15467)
!15473 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15472)
!15474 = !DILocation(line: 679, column: 16, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15430, file: !2494, line: 679, column: 6)
!15476 = !DILocation(line: 679, column: 13, scope: !15475)
!15477 = !DILocation(line: 679, column: 6, scope: !15430)
!15478 = !DILocation(line: 680, column: 3, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15475, file: !2494, line: 679, column: 26)
!15480 = !DILocation(line: 681, column: 2, scope: !15479)
!15481 = !DILocation(line: 684, column: 1, scope: !15430)
!15482 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13463, file: !13463, line: 52, type: !14654, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15483)
!15483 = !{!15484}
!15484 = !DILocalVariable(name: "thread", arg: 1, scope: !15482, file: !13463, line: 52, type: !2387)
!15485 = !DILocation(line: 0, scope: !15482)
!15486 = !DILocation(line: 54, column: 39, scope: !15482)
!15487 = !DILocation(line: 54, column: 9, scope: !15482)
!15488 = !DILocation(line: 54, column: 2, scope: !15482)
!15489 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13056, file: !13056, line: 141, type: !14636, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15490)
!15490 = !{!15491}
!15491 = !DILocalVariable(name: "thread", arg: 1, scope: !15489, file: !13056, line: 141, type: !2387)
!15492 = !DILocation(line: 0, scope: !15489)
!15493 = !DILocation(line: 143, column: 15, scope: !15489)
!15494 = !DILocation(line: 143, column: 28, scope: !15489)
!15495 = !DILocation(line: 146, column: 1, scope: !15489)
!15496 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13056, file: !13056, line: 73, type: !365, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!15497 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 75, column: 30, scope: !15496)
!15499 = !DILocation(line: 0, scope: !14687, inlinedAt: !15498)
!15500 = !DILocation(line: 75, column: 9, scope: !15496)
!15501 = !DILocation(line: 76, column: 1, scope: !15496)
!15502 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2494, file: !2494, line: 977, type: !6507, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15503)
!15503 = !{!15504}
!15504 = !DILocalVariable(name: "key", arg: 1, scope: !15502, file: !2494, line: 977, type: !156)
!15505 = !DILocation(line: 0, scope: !15502)
!15506 = !DILocation(line: 979, column: 6, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15502, file: !2494, line: 979, column: 6)
!15508 = !DILocation(line: 979, column: 6, scope: !15502)
!15509 = !DILocation(line: 980, column: 3, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15507, file: !2494, line: 979, column: 20)
!15511 = !DILocation(line: 981, column: 2, scope: !15510)
!15512 = !DILocation(line: 0, scope: !14726, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 982, column: 3, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15507, file: !2494, line: 981, column: 9)
!15515 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15513)
!15516 = !DILocation(line: 985, column: 1, scope: !15502)
!15517 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2494, file: !2494, line: 695, type: !14636, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15518)
!15518 = !{!15519, !15520}
!15519 = !DILocalVariable(name: "thread", arg: 1, scope: !15517, file: !2494, line: 695, type: !2387)
!15520 = !DILocalVariable(name: "key", scope: !15517, file: !2494, line: 699, type: !14670)
!15521 = !DILocation(line: 0, scope: !15517)
!15522 = !DILocation(line: 0, scope: !14678, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 699, column: 25, scope: !15517)
!15524 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15523)
!15526 = !DILocation(line: 0, scope: !14687, inlinedAt: !15525)
!15527 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15523)
!15528 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15523)
!15529 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15523)
!15530 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15523)
!15531 = !DILocation(line: 702, column: 7, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15517, file: !2494, line: 702, column: 6)
!15533 = !DILocation(line: 702, column: 6, scope: !15517)
!15534 = !DILocation(line: 0, scope: !14712, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 703, column: 3, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15532, file: !2494, line: 702, column: 38)
!15537 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15535)
!15538 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15535)
!15539 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15535)
!15540 = !DILocation(line: 0, scope: !14726, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15535)
!15542 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15541)
!15543 = !DILocation(line: 704, column: 3, scope: !15536)
!15544 = !DILocation(line: 707, column: 2, scope: !15517)
!15545 = !DILocation(line: 708, column: 2, scope: !15517)
!15546 = !DILocation(line: 710, column: 2, scope: !15517)
!15547 = !DILocation(line: 713, column: 1, scope: !15517)
!15548 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13056, file: !13056, line: 96, type: !14819, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15549)
!15549 = !{!15550}
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15548, file: !13056, line: 96, type: !2387)
!15551 = !DILocation(line: 0, scope: !15548)
!15552 = !DILocation(line: 98, column: 23, scope: !15548)
!15553 = !DILocation(line: 98, column: 36, scope: !15548)
!15554 = !DILocation(line: 98, column: 57, scope: !15548)
!15555 = !DILocation(line: 98, column: 2, scope: !15548)
!15556 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13056, file: !13056, line: 148, type: !14636, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15557)
!15557 = !{!15558}
!15558 = !DILocalVariable(name: "thread", arg: 1, scope: !15556, file: !13056, line: 148, type: !2387)
!15559 = !DILocation(line: 0, scope: !15556)
!15560 = !DILocation(line: 150, column: 15, scope: !15556)
!15561 = !DILocation(line: 150, column: 28, scope: !15556)
!15562 = !DILocation(line: 153, column: 1, scope: !15556)
!15563 = distinct !DISubprogram(name: "z_pend_thread", scope: !2494, file: !2494, line: 770, type: !15564, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15570)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{null, !2387, !2418, !15566}
!15566 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !15567)
!15567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !15568)
!15568 = !{!15569}
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15567, file: !114, line: 66, baseType: !113, size: 64)
!15570 = !{!15571, !15572, !15573, !15574, !15576}
!15571 = !DILocalVariable(name: "thread", arg: 1, scope: !15563, file: !2494, line: 770, type: !2387)
!15572 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15563, file: !2494, line: 770, type: !2418)
!15573 = !DILocalVariable(name: "timeout", arg: 3, scope: !15563, file: !2494, line: 771, type: !15566)
!15574 = !DILocalVariable(name: "__i", scope: !15575, file: !2494, line: 774, type: !14670)
!15575 = distinct !DILexicalBlock(scope: !15563, file: !2494, line: 774, column: 2)
!15576 = !DILocalVariable(name: "__key", scope: !15575, file: !2494, line: 774, type: !14670)
!15577 = !DILocation(line: 0, scope: !15563)
!15578 = !DILocation(line: 773, column: 2, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15580, file: !2494, line: 773, column: 2)
!15580 = distinct !DILexicalBlock(scope: !15563, file: !2494, line: 773, column: 2)
!15581 = !DILocation(line: 773, column: 2, scope: !15580)
!15582 = !DILocation(line: 773, column: 2, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15579, file: !2494, line: 773, column: 2)
!15584 = !DILocation(line: 0, scope: !15575)
!15585 = !DILocation(line: 0, scope: !14678, inlinedAt: !15586)
!15586 = distinct !DILocation(line: 774, column: 2, scope: !15575)
!15587 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15588)
!15588 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15586)
!15589 = !DILocation(line: 0, scope: !14687, inlinedAt: !15588)
!15590 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15586)
!15591 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15586)
!15592 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15586)
!15593 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15586)
!15594 = !DILocation(line: 775, column: 3, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15596, file: !2494, line: 774, column: 26)
!15596 = distinct !DILexicalBlock(scope: !15575, file: !2494, line: 774, column: 2)
!15597 = !DILocation(line: 0, scope: !14712, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 774, column: 2, scope: !15596)
!15599 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15598)
!15600 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15598)
!15601 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15598)
!15602 = !DILocation(line: 0, scope: !14726, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15598)
!15604 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15603)
!15605 = !DILocation(line: 777, column: 1, scope: !15563)
!15606 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2494, file: !2494, line: 79, type: !14819, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15607)
!15607 = !{!15608}
!15608 = !DILocalVariable(name: "thread", arg: 1, scope: !15606, file: !2494, line: 79, type: !2387)
!15609 = !DILocation(line: 0, scope: !15606)
!15610 = !DILocation(line: 81, column: 23, scope: !15606)
!15611 = !DILocation(line: 81, column: 36, scope: !15606)
!15612 = !DILocation(line: 81, column: 53, scope: !15606)
!15613 = !DILocation(line: 81, column: 2, scope: !15606)
!15614 = distinct !DISubprogram(name: "pend_locked", scope: !2494, file: !2494, line: 760, type: !15564, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15615)
!15615 = !{!15616, !15617, !15618}
!15616 = !DILocalVariable(name: "thread", arg: 1, scope: !15614, file: !2494, line: 760, type: !2387)
!15617 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15614, file: !2494, line: 760, type: !2418)
!15618 = !DILocalVariable(name: "timeout", arg: 3, scope: !15614, file: !2494, line: 761, type: !15566)
!15619 = !DILocation(line: 0, scope: !15614)
!15620 = !DILocation(line: 766, column: 2, scope: !15614)
!15621 = !DILocation(line: 767, column: 2, scope: !15614)
!15622 = !DILocation(line: 768, column: 1, scope: !15614)
!15623 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2494, file: !2494, line: 740, type: !15624, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15626)
!15624 = !DISubroutineType(types: !15625)
!15625 = !{null, !2387, !2418}
!15626 = !{!15627, !15628}
!15627 = !DILocalVariable(name: "thread", arg: 1, scope: !15623, file: !2494, line: 740, type: !2387)
!15628 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15623, file: !2494, line: 740, type: !2418)
!15629 = !DILocation(line: 0, scope: !15623)
!15630 = !DILocation(line: 742, column: 2, scope: !15623)
!15631 = !DILocation(line: 743, column: 2, scope: !15623)
!15632 = !DILocation(line: 747, column: 13, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15623, file: !2494, line: 747, column: 6)
!15634 = !DILocation(line: 747, column: 6, scope: !15623)
!15635 = !DILocation(line: 748, column: 16, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15633, file: !2494, line: 747, column: 22)
!15637 = !DILocation(line: 748, column: 26, scope: !15636)
!15638 = !DILocation(line: 749, column: 28, scope: !15636)
!15639 = !DILocation(line: 0, scope: !14901, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 749, column: 3, scope: !15636)
!15641 = !DILocation(line: 186, column: 2, scope: !14911, inlinedAt: !15640)
!15642 = !DILocation(line: 186, column: 2, scope: !14912, inlinedAt: !15640)
!15643 = !DILocation(line: 186, column: 2, scope: !14915, inlinedAt: !15640)
!15644 = !DILocation(line: 188, column: 2, scope: !14917, inlinedAt: !15640)
!15645 = !DILocation(line: 188, column: 2, scope: !14919, inlinedAt: !15640)
!15646 = !DILocation(line: 0, scope: !14917, inlinedAt: !15640)
!15647 = !DILocation(line: 189, column: 7, scope: !14922, inlinedAt: !15640)
!15648 = !DILocation(line: 189, column: 35, scope: !14922, inlinedAt: !15640)
!15649 = !DILocation(line: 189, column: 7, scope: !14923, inlinedAt: !15640)
!15650 = !DILocation(line: 191, column: 21, scope: !14927, inlinedAt: !15640)
!15651 = !DILocation(line: 190, column: 4, scope: !14927, inlinedAt: !15640)
!15652 = !DILocation(line: 192, column: 4, scope: !14927, inlinedAt: !15640)
!15653 = distinct !{!15653, !15644, !15654}
!15654 = !DILocation(line: 194, column: 2, scope: !14917, inlinedAt: !15640)
!15655 = !DILocation(line: 196, column: 37, scope: !14901, inlinedAt: !15640)
!15656 = !DILocation(line: 196, column: 2, scope: !14901, inlinedAt: !15640)
!15657 = !DILocation(line: 197, column: 1, scope: !14901, inlinedAt: !15640)
!15658 = !DILocation(line: 751, column: 1, scope: !15623)
!15659 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2494, file: !2494, line: 753, type: !15660, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15662)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{null, !2387, !15566}
!15662 = !{!15663, !15664}
!15663 = !DILocalVariable(name: "thread", arg: 1, scope: !15659, file: !2494, line: 753, type: !2387)
!15664 = !DILocalVariable(name: "timeout", arg: 2, scope: !15659, file: !2494, line: 753, type: !15566)
!15665 = !DILocation(line: 0, scope: !15659)
!15666 = !DILocation(line: 755, column: 7, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15659, file: !2494, line: 755, column: 6)
!15668 = !DILocation(line: 755, column: 6, scope: !15659)
!15669 = !DILocation(line: 756, column: 3, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15667, file: !2494, line: 755, column: 41)
!15671 = !DILocation(line: 757, column: 2, scope: !15670)
!15672 = !DILocation(line: 758, column: 1, scope: !15659)
!15673 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13463, file: !13463, line: 47, type: !15660, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15674)
!15674 = !{!15675, !15676}
!15675 = !DILocalVariable(name: "thread", arg: 1, scope: !15673, file: !13463, line: 47, type: !2387)
!15676 = !DILocalVariable(name: "ticks", arg: 2, scope: !15673, file: !13463, line: 47, type: !15566)
!15677 = !DILocation(line: 0, scope: !15673)
!15678 = !DILocation(line: 49, column: 30, scope: !15673)
!15679 = !DILocation(line: 49, column: 2, scope: !15673)
!15680 = !DILocation(line: 50, column: 1, scope: !15673)
!15681 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2494, file: !2494, line: 795, type: !2444, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15682)
!15682 = !{!15683, !15684, !15685, !15687, !15688}
!15683 = !DILocalVariable(name: "timeout", arg: 1, scope: !15681, file: !2494, line: 795, type: !2446)
!15684 = !DILocalVariable(name: "thread", scope: !15681, file: !2494, line: 797, type: !2387)
!15685 = !DILocalVariable(name: "__i", scope: !15686, file: !2494, line: 800, type: !14670)
!15686 = distinct !DILexicalBlock(scope: !15681, file: !2494, line: 800, column: 2)
!15687 = !DILocalVariable(name: "__key", scope: !15686, file: !2494, line: 800, type: !14670)
!15688 = !DILocalVariable(name: "killed", scope: !15689, file: !2494, line: 801, type: !146)
!15689 = distinct !DILexicalBlock(scope: !15690, file: !2494, line: 800, column: 26)
!15690 = distinct !DILexicalBlock(scope: !15686, file: !2494, line: 800, column: 2)
!15691 = !DILocation(line: 0, scope: !15681)
!15692 = !DILocation(line: 797, column: 28, scope: !15681)
!15693 = !DILocation(line: 0, scope: !15686)
!15694 = !DILocation(line: 0, scope: !14678, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 800, column: 2, scope: !15686)
!15696 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15695)
!15698 = !DILocation(line: 0, scope: !14687, inlinedAt: !15697)
!15699 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15695)
!15700 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15695)
!15701 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15695)
!15702 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15695)
!15703 = !DILocation(line: 801, column: 27, scope: !15689)
!15704 = !DILocation(line: 801, column: 32, scope: !15689)
!15705 = !DILocation(line: 801, column: 61, scope: !15689)
!15706 = !DILocation(line: 0, scope: !15689)
!15707 = !DILocation(line: 804, column: 7, scope: !15689)
!15708 = !DILocation(line: 805, column: 21, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15710, file: !2494, line: 805, column: 8)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !2494, line: 804, column: 16)
!15711 = distinct !DILexicalBlock(scope: !15689, file: !2494, line: 804, column: 7)
!15712 = !DILocation(line: 805, column: 31, scope: !15709)
!15713 = !DILocation(line: 805, column: 8, scope: !15710)
!15714 = !DILocation(line: 806, column: 5, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15709, file: !2494, line: 805, column: 40)
!15716 = !DILocation(line: 807, column: 4, scope: !15715)
!15717 = !DILocation(line: 808, column: 4, scope: !15710)
!15718 = !DILocation(line: 809, column: 4, scope: !15710)
!15719 = !DILocation(line: 810, column: 4, scope: !15710)
!15720 = !DILocation(line: 811, column: 3, scope: !15710)
!15721 = !DILocation(line: 0, scope: !14712, inlinedAt: !15722)
!15722 = distinct !DILocation(line: 800, column: 2, scope: !15690)
!15723 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15722)
!15724 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15722)
!15725 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15722)
!15726 = !DILocation(line: 0, scope: !14726, inlinedAt: !15727)
!15727 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15722)
!15728 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15727)
!15729 = !DILocation(line: 813, column: 1, scope: !15681)
!15730 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2494, file: !2494, line: 779, type: !14636, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15731)
!15731 = !{!15732}
!15732 = !DILocalVariable(name: "thread", arg: 1, scope: !15730, file: !2494, line: 779, type: !2387)
!15733 = !DILocation(line: 0, scope: !15730)
!15734 = !DILocation(line: 781, column: 21, scope: !15730)
!15735 = !DILocation(line: 781, column: 2, scope: !15730)
!15736 = !DILocation(line: 782, column: 2, scope: !15730)
!15737 = !DILocation(line: 783, column: 15, scope: !15730)
!15738 = !DILocation(line: 783, column: 25, scope: !15730)
!15739 = !DILocation(line: 784, column: 1, scope: !15730)
!15740 = distinct !DISubprogram(name: "pended_on_thread", scope: !2494, file: !2494, line: 724, type: !15741, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{!2418, !2387}
!15743 = !{!15744}
!15744 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !2494, line: 724, type: !2387)
!15745 = !DILocation(line: 0, scope: !15740)
!15746 = !DILocation(line: 726, column: 2, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !2494, line: 726, column: 2)
!15748 = distinct !DILexicalBlock(scope: !15740, file: !2494, line: 726, column: 2)
!15749 = !DILocation(line: 726, column: 2, scope: !15748)
!15750 = !DILocation(line: 726, column: 2, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15747, file: !2494, line: 726, column: 2)
!15752 = !DILocation(line: 728, column: 2, scope: !15740)
!15753 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13056, file: !13056, line: 165, type: !14636, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15754)
!15754 = !{!15755}
!15755 = !DILocalVariable(name: "thread", arg: 1, scope: !15753, file: !13056, line: 165, type: !2387)
!15756 = !DILocation(line: 0, scope: !15753)
!15757 = !DILocation(line: 167, column: 15, scope: !15753)
!15758 = !DILocation(line: 167, column: 28, scope: !15753)
!15759 = !DILocation(line: 168, column: 1, scope: !15753)
!15760 = distinct !DISubprogram(name: "unready_thread", scope: !2494, file: !2494, line: 731, type: !14636, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15761)
!15761 = !{!15762}
!15762 = !DILocalVariable(name: "thread", arg: 1, scope: !15760, file: !2494, line: 731, type: !2387)
!15763 = !DILocation(line: 0, scope: !15760)
!15764 = !DILocation(line: 733, column: 6, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15760, file: !2494, line: 733, column: 6)
!15766 = !DILocation(line: 733, column: 6, scope: !15760)
!15767 = !DILocation(line: 0, scope: !14870, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 734, column: 3, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15765, file: !2494, line: 733, column: 34)
!15770 = !DILocation(line: 266, column: 15, scope: !14870, inlinedAt: !15768)
!15771 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !15768)
!15772 = !DILocation(line: 0, scope: !14878, inlinedAt: !15773)
!15773 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !15768)
!15774 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !15773)
!15775 = !DILocation(line: 735, column: 2, scope: !15769)
!15776 = !DILocation(line: 736, column: 25, scope: !15760)
!15777 = !DILocation(line: 736, column: 22, scope: !15760)
!15778 = !DILocation(line: 736, column: 2, scope: !15760)
!15779 = !DILocation(line: 737, column: 1, scope: !15760)
!15780 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13056, file: !13056, line: 160, type: !14636, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15781)
!15781 = !{!15782}
!15782 = !DILocalVariable(name: "thread", arg: 1, scope: !15780, file: !13056, line: 160, type: !2387)
!15783 = !DILocation(line: 0, scope: !15780)
!15784 = !DILocation(line: 162, column: 15, scope: !15780)
!15785 = !DILocation(line: 162, column: 28, scope: !15780)
!15786 = !DILocation(line: 163, column: 1, scope: !15780)
!15787 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2494, file: !2494, line: 786, type: !14636, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15788)
!15788 = !{!15789, !15790, !15792}
!15789 = !DILocalVariable(name: "thread", arg: 1, scope: !15787, file: !2494, line: 786, type: !2387)
!15790 = !DILocalVariable(name: "__i", scope: !15791, file: !2494, line: 788, type: !14670)
!15791 = distinct !DILexicalBlock(scope: !15787, file: !2494, line: 788, column: 2)
!15792 = !DILocalVariable(name: "__key", scope: !15791, file: !2494, line: 788, type: !14670)
!15793 = !DILocation(line: 0, scope: !15787)
!15794 = !DILocation(line: 0, scope: !15791)
!15795 = !DILocation(line: 0, scope: !14678, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 788, column: 2, scope: !15791)
!15797 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15796)
!15799 = !DILocation(line: 0, scope: !14687, inlinedAt: !15798)
!15800 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15796)
!15801 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15796)
!15802 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15796)
!15803 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15796)
!15804 = !DILocation(line: 789, column: 3, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15806, file: !2494, line: 788, column: 26)
!15806 = distinct !DILexicalBlock(scope: !15791, file: !2494, line: 788, column: 2)
!15807 = !DILocation(line: 0, scope: !14712, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 788, column: 2, scope: !15806)
!15809 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15808)
!15810 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15808)
!15811 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15808)
!15812 = !DILocation(line: 0, scope: !14726, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15808)
!15814 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15813)
!15815 = !DILocation(line: 791, column: 1, scope: !15787)
!15816 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2494, file: !2494, line: 816, type: !15817, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15819)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{!118, !156, !2418, !15566}
!15819 = !{!15820, !15821, !15822, !15823, !15824, !15826}
!15820 = !DILocalVariable(name: "key", arg: 1, scope: !15816, file: !2494, line: 816, type: !156)
!15821 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15816, file: !2494, line: 816, type: !2418)
!15822 = !DILocalVariable(name: "timeout", arg: 3, scope: !15816, file: !2494, line: 816, type: !15566)
!15823 = !DILocalVariable(name: "ret", scope: !15816, file: !2494, line: 828, type: !118)
!15824 = !DILocalVariable(name: "__i", scope: !15825, file: !2494, line: 829, type: !14670)
!15825 = distinct !DILexicalBlock(scope: !15816, file: !2494, line: 829, column: 2)
!15826 = !DILocalVariable(name: "__key", scope: !15825, file: !2494, line: 829, type: !14670)
!15827 = !DILocation(line: 0, scope: !15816)
!15828 = !DILocation(line: 823, column: 14, scope: !15816)
!15829 = !DILocation(line: 823, column: 2, scope: !15816)
!15830 = !DILocation(line: 826, column: 20, scope: !15816)
!15831 = !DILocation(line: 826, column: 18, scope: !15816)
!15832 = !DILocation(line: 828, column: 12, scope: !15816)
!15833 = !DILocation(line: 0, scope: !15825)
!15834 = !DILocation(line: 0, scope: !14678, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 829, column: 2, scope: !15825)
!15836 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15835)
!15838 = !DILocation(line: 0, scope: !14687, inlinedAt: !15837)
!15839 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15835)
!15840 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15835)
!15841 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15835)
!15842 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15835)
!15843 = !DILocation(line: 830, column: 7, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !2494, line: 830, column: 7)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !2494, line: 829, column: 26)
!15846 = distinct !DILexicalBlock(scope: !15825, file: !2494, line: 829, column: 2)
!15847 = !DILocation(line: 830, column: 26, scope: !15844)
!15848 = !DILocation(line: 830, column: 23, scope: !15844)
!15849 = !DILocation(line: 830, column: 7, scope: !15845)
!15850 = !DILocation(line: 831, column: 20, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15844, file: !2494, line: 830, column: 36)
!15852 = !DILocation(line: 832, column: 3, scope: !15851)
!15853 = !DILocation(line: 0, scope: !14712, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 829, column: 2, scope: !15846)
!15855 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15854)
!15856 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15854)
!15857 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15854)
!15858 = !DILocation(line: 0, scope: !14726, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15854)
!15860 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15859)
!15861 = !DILocation(line: 834, column: 2, scope: !15816)
!15862 = distinct !DISubprogram(name: "z_pend_curr", scope: !2494, file: !2494, line: 840, type: !15863, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15865)
!15863 = !DISubroutineType(types: !15864)
!15864 = !{!118, !14681, !14670, !2418, !15566}
!15865 = !{!15866, !15867, !15868, !15869}
!15866 = !DILocalVariable(name: "lock", arg: 1, scope: !15862, file: !2494, line: 840, type: !14681)
!15867 = !DILocalVariable(name: "key", arg: 2, scope: !15862, file: !2494, line: 840, type: !14670)
!15868 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15862, file: !2494, line: 841, type: !2418)
!15869 = !DILocalVariable(name: "timeout", arg: 4, scope: !15862, file: !2494, line: 841, type: !15566)
!15870 = !DILocation(line: 0, scope: !15862)
!15871 = !DILocation(line: 844, column: 20, scope: !15862)
!15872 = !DILocation(line: 844, column: 18, scope: !15862)
!15873 = !DILocation(line: 846, column: 2, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15875, file: !2494, line: 846, column: 2)
!15875 = distinct !DILexicalBlock(scope: !15862, file: !2494, line: 846, column: 2)
!15876 = !DILocation(line: 846, column: 2, scope: !15875)
!15877 = !DILocation(line: 846, column: 2, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15874, file: !2494, line: 846, column: 2)
!15879 = !DILocation(line: 0, scope: !14678, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 856, column: 9, scope: !15862)
!15881 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15880)
!15883 = !DILocation(line: 0, scope: !14687, inlinedAt: !15882)
!15884 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15880)
!15885 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15880)
!15886 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15880)
!15887 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15880)
!15888 = !DILocation(line: 857, column: 14, scope: !15862)
!15889 = !DILocation(line: 857, column: 2, scope: !15862)
!15890 = !DILocation(line: 0, scope: !15365, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 858, column: 2, scope: !15862)
!15892 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !15891)
!15893 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !15891)
!15894 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !15891)
!15895 = !DILocation(line: 0, scope: !15356, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 859, column: 9, scope: !15862)
!15897 = !DILocation(line: 0, scope: !15365, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !15896)
!15899 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !15898)
!15900 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !15898)
!15901 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !15898)
!15902 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !15896)
!15903 = !DILocation(line: 859, column: 2, scope: !15862)
!15904 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2494, file: !2494, line: 862, type: !15905, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15907)
!15905 = !DISubroutineType(types: !15906)
!15906 = !{!2387, !2418}
!15907 = !{!15908, !15909, !15910, !15912}
!15908 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15904, file: !2494, line: 862, type: !2418)
!15909 = !DILocalVariable(name: "thread", scope: !15904, file: !2494, line: 864, type: !2387)
!15910 = !DILocalVariable(name: "__i", scope: !15911, file: !2494, line: 866, type: !14670)
!15911 = distinct !DILexicalBlock(scope: !15904, file: !2494, line: 866, column: 2)
!15912 = !DILocalVariable(name: "__key", scope: !15911, file: !2494, line: 866, type: !14670)
!15913 = !DILocation(line: 0, scope: !15904)
!15914 = !DILocation(line: 0, scope: !15911)
!15915 = !DILocation(line: 0, scope: !14678, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 866, column: 2, scope: !15911)
!15917 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15916)
!15919 = !DILocation(line: 0, scope: !14687, inlinedAt: !15918)
!15920 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15916)
!15921 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15916)
!15922 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15916)
!15923 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15916)
!15924 = !DILocation(line: 867, column: 12, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2494, line: 866, column: 26)
!15926 = distinct !DILexicalBlock(scope: !15911, file: !2494, line: 866, column: 2)
!15927 = !DILocation(line: 869, column: 14, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15925, file: !2494, line: 869, column: 7)
!15929 = !DILocation(line: 869, column: 7, scope: !15925)
!15930 = !DILocation(line: 870, column: 4, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15928, file: !2494, line: 869, column: 23)
!15932 = !DILocation(line: 871, column: 3, scope: !15931)
!15933 = !DILocation(line: 0, scope: !14712, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 866, column: 2, scope: !15926)
!15935 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15934)
!15936 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15934)
!15937 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15934)
!15938 = !DILocation(line: 0, scope: !14726, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15934)
!15940 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15939)
!15941 = !DILocation(line: 874, column: 2, scope: !15904)
!15942 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2494, file: !2494, line: 877, type: !15905, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15943)
!15943 = !{!15944, !15945, !15946, !15948}
!15944 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15942, file: !2494, line: 877, type: !2418)
!15945 = !DILocalVariable(name: "thread", scope: !15942, file: !2494, line: 879, type: !2387)
!15946 = !DILocalVariable(name: "__i", scope: !15947, file: !2494, line: 881, type: !14670)
!15947 = distinct !DILexicalBlock(scope: !15942, file: !2494, line: 881, column: 2)
!15948 = !DILocalVariable(name: "__key", scope: !15947, file: !2494, line: 881, type: !14670)
!15949 = !DILocation(line: 0, scope: !15942)
!15950 = !DILocation(line: 0, scope: !15947)
!15951 = !DILocation(line: 0, scope: !14678, inlinedAt: !15952)
!15952 = distinct !DILocation(line: 881, column: 2, scope: !15947)
!15953 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15952)
!15955 = !DILocation(line: 0, scope: !14687, inlinedAt: !15954)
!15956 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15952)
!15957 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15952)
!15958 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15952)
!15959 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15952)
!15960 = !DILocation(line: 882, column: 12, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2494, line: 881, column: 26)
!15962 = distinct !DILexicalBlock(scope: !15947, file: !2494, line: 881, column: 2)
!15963 = !DILocation(line: 884, column: 14, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15961, file: !2494, line: 884, column: 7)
!15965 = !DILocation(line: 884, column: 7, scope: !15961)
!15966 = !DILocation(line: 885, column: 4, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15964, file: !2494, line: 884, column: 23)
!15968 = !DILocation(line: 886, column: 10, scope: !15967)
!15969 = !DILocation(line: 887, column: 3, scope: !15967)
!15970 = !DILocation(line: 0, scope: !14712, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 881, column: 2, scope: !15962)
!15972 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15971)
!15973 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15971)
!15974 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15971)
!15975 = !DILocation(line: 0, scope: !14726, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15971)
!15977 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !15976)
!15978 = !DILocation(line: 890, column: 2, scope: !15942)
!15979 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2494, file: !2494, line: 893, type: !14636, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15980)
!15980 = !{!15981}
!15981 = !DILocalVariable(name: "thread", arg: 1, scope: !15979, file: !2494, line: 893, type: !2387)
!15982 = !DILocation(line: 0, scope: !15979)
!15983 = !DILocation(line: 0, scope: !15787, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 895, column: 2, scope: !15979)
!15985 = !DILocation(line: 0, scope: !15791, inlinedAt: !15984)
!15986 = !DILocation(line: 0, scope: !14678, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 788, column: 2, scope: !15791, inlinedAt: !15984)
!15988 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !15987)
!15990 = !DILocation(line: 0, scope: !14687, inlinedAt: !15989)
!15991 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !15987)
!15992 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !15987)
!15993 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !15987)
!15994 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !15987)
!15995 = !DILocation(line: 789, column: 3, scope: !15805, inlinedAt: !15984)
!15996 = !DILocation(line: 0, scope: !14712, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 788, column: 2, scope: !15806, inlinedAt: !15984)
!15998 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !15997)
!15999 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !15997)
!16000 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !15997)
!16001 = !DILocation(line: 0, scope: !14726, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !15997)
!16003 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16002)
!16004 = !DILocation(line: 896, column: 8, scope: !15979)
!16005 = !DILocation(line: 897, column: 1, scope: !15979)
!16006 = distinct !DISubprogram(name: "z_set_prio", scope: !2494, file: !2494, line: 902, type: !15039, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16007)
!16007 = !{!16008, !16009, !16010, !16011, !16013}
!16008 = !DILocalVariable(name: "thread", arg: 1, scope: !16006, file: !2494, line: 902, type: !2387)
!16009 = !DILocalVariable(name: "prio", arg: 2, scope: !16006, file: !2494, line: 902, type: !118)
!16010 = !DILocalVariable(name: "need_sched", scope: !16006, file: !2494, line: 904, type: !146)
!16011 = !DILocalVariable(name: "__i", scope: !16012, file: !2494, line: 906, type: !14670)
!16012 = distinct !DILexicalBlock(scope: !16006, file: !2494, line: 906, column: 2)
!16013 = !DILocalVariable(name: "__key", scope: !16012, file: !2494, line: 906, type: !14670)
!16014 = !DILocation(line: 0, scope: !16006)
!16015 = !DILocation(line: 0, scope: !16012)
!16016 = !DILocation(line: 0, scope: !14678, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 906, column: 2, scope: !16012)
!16018 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16017)
!16020 = !DILocation(line: 0, scope: !14687, inlinedAt: !16019)
!16021 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16017)
!16022 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16017)
!16023 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16017)
!16024 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16017)
!16025 = !DILocation(line: 907, column: 16, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16027, file: !2494, line: 906, column: 26)
!16027 = distinct !DILexicalBlock(scope: !16012, file: !2494, line: 906, column: 2)
!16028 = !DILocation(line: 909, column: 7, scope: !16026)
!16029 = !DILocation(line: 0, scope: !14870, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 912, column: 5, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !2494, line: 911, column: 63)
!16032 = distinct !DILexicalBlock(scope: !16033, file: !2494, line: 911, column: 8)
!16033 = distinct !DILexicalBlock(scope: !16034, file: !2494, line: 909, column: 19)
!16034 = distinct !DILexicalBlock(scope: !16026, file: !2494, line: 909, column: 7)
!16035 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !16030)
!16036 = !DILocation(line: 0, scope: !14878, inlinedAt: !16037)
!16037 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !16030)
!16038 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !16037)
!16039 = !DILocation(line: 913, column: 23, scope: !16031)
!16040 = !DILocation(line: 0, scope: !14887, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 914, column: 5, scope: !16031)
!16042 = !DILocation(line: 252, column: 28, scope: !14887, inlinedAt: !16041)
!16043 = !DILocation(line: 0, scope: !14894, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 254, column: 3, scope: !14898, inlinedAt: !16041)
!16045 = !DILocation(line: 0, scope: !14901, inlinedAt: !16046)
!16046 = distinct !DILocation(line: 229, column: 2, scope: !14894, inlinedAt: !16044)
!16047 = !DILocation(line: 186, column: 2, scope: !14911, inlinedAt: !16046)
!16048 = !DILocation(line: 186, column: 2, scope: !14912, inlinedAt: !16046)
!16049 = !DILocation(line: 186, column: 2, scope: !14915, inlinedAt: !16046)
!16050 = !DILocation(line: 188, column: 2, scope: !14917, inlinedAt: !16046)
!16051 = !DILocation(line: 188, column: 2, scope: !14919, inlinedAt: !16046)
!16052 = !DILocation(line: 0, scope: !14917, inlinedAt: !16046)
!16053 = !DILocation(line: 189, column: 7, scope: !14922, inlinedAt: !16046)
!16054 = !DILocation(line: 189, column: 35, scope: !14922, inlinedAt: !16046)
!16055 = !DILocation(line: 189, column: 7, scope: !14923, inlinedAt: !16046)
!16056 = !DILocation(line: 190, column: 4, scope: !14927, inlinedAt: !16046)
!16057 = !DILocation(line: 192, column: 4, scope: !14927, inlinedAt: !16046)
!16058 = distinct !{!16058, !16050, !16059}
!16059 = !DILocation(line: 194, column: 2, scope: !14917, inlinedAt: !16046)
!16060 = !DILocation(line: 196, column: 2, scope: !14901, inlinedAt: !16046)
!16061 = !DILocation(line: 197, column: 1, scope: !14901, inlinedAt: !16046)
!16062 = !DILocation(line: 918, column: 4, scope: !16033)
!16063 = !DILocation(line: 919, column: 3, scope: !16033)
!16064 = !DILocation(line: 920, column: 22, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16034, file: !2494, line: 919, column: 10)
!16066 = !DILocation(line: 0, scope: !14712, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 906, column: 2, scope: !16027)
!16068 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16067)
!16069 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16067)
!16070 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16067)
!16071 = !DILocation(line: 0, scope: !14726, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16067)
!16073 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16072)
!16074 = !DILocation(line: 926, column: 2, scope: !16006)
!16075 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2494, file: !2494, line: 929, type: !16076, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16078)
!16076 = !DISubroutineType(types: !16077)
!16077 = !{null, !2387, !118}
!16078 = !{!16079, !16080, !16081}
!16079 = !DILocalVariable(name: "thread", arg: 1, scope: !16075, file: !2494, line: 929, type: !2387)
!16080 = !DILocalVariable(name: "prio", arg: 2, scope: !16075, file: !2494, line: 929, type: !118)
!16081 = !DILocalVariable(name: "need_sched", scope: !16075, file: !2494, line: 931, type: !146)
!16082 = !DILocation(line: 0, scope: !16075)
!16083 = !DILocation(line: 931, column: 20, scope: !16075)
!16084 = !DILocation(line: 935, column: 17, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16075, file: !2494, line: 935, column: 6)
!16086 = !DILocation(line: 935, column: 20, scope: !16085)
!16087 = !DILocation(line: 935, column: 35, scope: !16085)
!16088 = !DILocation(line: 935, column: 48, scope: !16085)
!16089 = !DILocation(line: 935, column: 6, scope: !16075)
!16090 = !DILocation(line: 936, column: 3, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16085, file: !2494, line: 935, column: 55)
!16092 = !DILocation(line: 937, column: 2, scope: !16091)
!16093 = !DILocation(line: 938, column: 1, scope: !16075)
!16094 = distinct !DISubprogram(name: "k_sched_lock", scope: !2494, file: !2494, line: 987, type: !365, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16095)
!16095 = !{!16096, !16098}
!16096 = !DILocalVariable(name: "__i", scope: !16097, file: !2494, line: 989, type: !14670)
!16097 = distinct !DILexicalBlock(scope: !16094, file: !2494, line: 989, column: 2)
!16098 = !DILocalVariable(name: "__key", scope: !16097, file: !2494, line: 989, type: !14670)
!16099 = !DILocation(line: 0, scope: !16097)
!16100 = !DILocation(line: 0, scope: !14678, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 989, column: 2, scope: !16097)
!16102 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16101)
!16104 = !DILocation(line: 0, scope: !14687, inlinedAt: !16103)
!16105 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16101)
!16106 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16101)
!16107 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16101)
!16108 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16101)
!16109 = !DILocation(line: 992, column: 3, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16111, file: !2494, line: 989, column: 26)
!16111 = distinct !DILexicalBlock(scope: !16097, file: !2494, line: 989, column: 2)
!16112 = !DILocation(line: 0, scope: !14712, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 989, column: 2, scope: !16111)
!16114 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16113)
!16115 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16113)
!16116 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16113)
!16117 = !DILocation(line: 0, scope: !14726, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16113)
!16119 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16118)
!16120 = !DILocation(line: 994, column: 1, scope: !16094)
!16121 = distinct !DISubprogram(name: "z_sched_lock", scope: !13056, file: !13056, line: 251, type: !365, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16122 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 253, column: 2, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16126, file: !13056, line: 253, column: 2)
!16126 = distinct !DILexicalBlock(scope: !16121, file: !13056, line: 253, column: 2)
!16127 = !DILocation(line: 0, scope: !15405, inlinedAt: !16123)
!16128 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16124)
!16129 = !DILocation(line: 253, column: 2, scope: !16126)
!16130 = !DILocation(line: 253, column: 2, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16125, file: !13056, line: 253, column: 2)
!16132 = !DILocation(line: 254, column: 2, scope: !16133)
!16133 = distinct !DILexicalBlock(scope: !16134, file: !13056, line: 254, column: 2)
!16134 = distinct !DILexicalBlock(scope: !16121, file: !13056, line: 254, column: 2)
!16135 = !DILocation(line: 254, column: 2, scope: !16134)
!16136 = !DILocation(line: 254, column: 2, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16133, file: !13056, line: 254, column: 2)
!16138 = !DILocation(line: 256, column: 2, scope: !16121)
!16139 = !DILocation(line: 258, column: 2, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16121, file: !13056, line: 258, column: 2)
!16141 = !{i64 2155195039}
!16142 = !DILocation(line: 259, column: 1, scope: !16121)
!16143 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2494, file: !2494, line: 996, type: !365, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16144)
!16144 = !{!16145, !16147}
!16145 = !DILocalVariable(name: "__i", scope: !16146, file: !2494, line: 998, type: !14670)
!16146 = distinct !DILexicalBlock(scope: !16143, file: !2494, line: 998, column: 2)
!16147 = !DILocalVariable(name: "__key", scope: !16146, file: !2494, line: 998, type: !14670)
!16148 = !DILocation(line: 0, scope: !16146)
!16149 = !DILocation(line: 0, scope: !14678, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 998, column: 2, scope: !16146)
!16151 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16150)
!16153 = !DILocation(line: 0, scope: !14687, inlinedAt: !16152)
!16154 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16150)
!16155 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16150)
!16156 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16150)
!16157 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16150)
!16158 = !DILocation(line: 999, column: 3, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16160, file: !2494, line: 999, column: 3)
!16160 = distinct !DILexicalBlock(scope: !16161, file: !2494, line: 999, column: 3)
!16161 = distinct !DILexicalBlock(scope: !16162, file: !2494, line: 998, column: 26)
!16162 = distinct !DILexicalBlock(scope: !16146, file: !2494, line: 998, column: 2)
!16163 = !DILocation(line: 999, column: 3, scope: !16160)
!16164 = !DILocation(line: 999, column: 3, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16159, file: !2494, line: 999, column: 3)
!16166 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 1000, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !2494, line: 1000, column: 3)
!16170 = distinct !DILexicalBlock(scope: !16161, file: !2494, line: 1000, column: 3)
!16171 = !DILocation(line: 0, scope: !15405, inlinedAt: !16167)
!16172 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16168)
!16173 = !DILocation(line: 1000, column: 3, scope: !16170)
!16174 = !DILocation(line: 1000, column: 3, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16169, file: !2494, line: 1000, column: 3)
!16176 = !DILocation(line: 1002, column: 5, scope: !16161)
!16177 = !DILocation(line: 1002, column: 20, scope: !16161)
!16178 = !DILocation(line: 1002, column: 3, scope: !16161)
!16179 = !DILocation(line: 1003, column: 3, scope: !16161)
!16180 = !DILocation(line: 0, scope: !14712, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 998, column: 2, scope: !16162)
!16182 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16181)
!16183 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16181)
!16184 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16181)
!16185 = !DILocation(line: 0, scope: !14726, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16181)
!16187 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16186)
!16188 = !DILocation(line: 1011, column: 2, scope: !16143)
!16189 = !DILocation(line: 1012, column: 1, scope: !16143)
!16190 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2494, file: !2494, line: 1014, type: !15027, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16191 = !DILocation(line: 1028, column: 25, scope: !16190)
!16192 = !DILocation(line: 1028, column: 2, scope: !16190)
!16193 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2494, file: !2494, line: 1155, type: !16194, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16196)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!146, !2416, !2416}
!16196 = !{!16197, !16198, !16199, !16200, !16201}
!16197 = !DILocalVariable(name: "a", arg: 1, scope: !16193, file: !2494, line: 1155, type: !2416)
!16198 = !DILocalVariable(name: "b", arg: 2, scope: !16193, file: !2494, line: 1155, type: !2416)
!16199 = !DILocalVariable(name: "thread_a", scope: !16193, file: !2494, line: 1157, type: !2387)
!16200 = !DILocalVariable(name: "thread_b", scope: !16193, file: !2494, line: 1157, type: !2387)
!16201 = !DILocalVariable(name: "cmp", scope: !16193, file: !2494, line: 1158, type: !362)
!16202 = !DILocation(line: 0, scope: !16193)
!16203 = !DILocation(line: 1160, column: 13, scope: !16193)
!16204 = !DILocation(line: 1161, column: 13, scope: !16193)
!16205 = !DILocation(line: 1163, column: 8, scope: !16193)
!16206 = !DILocation(line: 1165, column: 10, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16193, file: !2494, line: 1165, column: 6)
!16208 = !DILocation(line: 1165, column: 6, scope: !16193)
!16209 = !DILocation(line: 1167, column: 17, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !2494, line: 1167, column: 13)
!16211 = !DILocation(line: 1167, column: 13, scope: !16207)
!16212 = !DILocation(line: 1170, column: 25, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16210, file: !2494, line: 1169, column: 9)
!16214 = !DILocation(line: 1170, column: 52, scope: !16213)
!16215 = !DILocation(line: 1170, column: 35, scope: !16213)
!16216 = !DILocation(line: 1170, column: 3, scope: !16213)
!16217 = !DILocation(line: 0, scope: !16207)
!16218 = !DILocation(line: 1173, column: 1, scope: !16193)
!16219 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2494, file: !2494, line: 1175, type: !16220, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16235)
!16220 = !DISubroutineType(types: !16221)
!16221 = !{null, !16222, !2387}
!16222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16223, size: 32)
!16223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16224, line: 37, size: 128, elements: !16225)
!16224 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16225 = !{!16226, !16234}
!16226 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16223, file: !16224, line: 38, baseType: !16227, size: 96)
!16227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !251, line: 83, size: 96, elements: !16228)
!16228 = !{!16229, !16230, !16233}
!16229 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16227, file: !251, line: 84, baseType: !2416, size: 32)
!16230 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16227, file: !251, line: 85, baseType: !16231, size: 32, offset: 32)
!16231 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !251, line: 81, baseType: !16232)
!16232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16194, size: 32)
!16233 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16227, file: !251, line: 86, baseType: !118, size: 32, offset: 64)
!16234 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16223, file: !16224, line: 39, baseType: !118, size: 32, offset: 96)
!16235 = !{!16236, !16237, !16238, !16239, !16248}
!16236 = !DILocalVariable(name: "pq", arg: 1, scope: !16219, file: !2494, line: 1175, type: !16222)
!16237 = !DILocalVariable(name: "thread", arg: 2, scope: !16219, file: !2494, line: 1175, type: !2387)
!16238 = !DILocalVariable(name: "t", scope: !16219, file: !2494, line: 1177, type: !2387)
!16239 = !DILocalVariable(name: "__f", scope: !16240, file: !2494, line: 1190, type: !16243)
!16240 = distinct !DILexicalBlock(scope: !16241, file: !2494, line: 1190, column: 3)
!16241 = distinct !DILexicalBlock(scope: !16242, file: !2494, line: 1189, column: 27)
!16242 = distinct !DILexicalBlock(scope: !16219, file: !2494, line: 1189, column: 6)
!16243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !251, line: 155, size: 96, elements: !16244)
!16244 = !{!16245, !16246, !16247}
!16245 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16243, file: !251, line: 156, baseType: !2489, size: 32)
!16246 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16243, file: !251, line: 157, baseType: !2035, size: 32, offset: 32)
!16247 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16243, file: !251, line: 158, baseType: !362, size: 32, offset: 64)
!16248 = !DILocalVariable(name: "n", scope: !16249, file: !2494, line: 1190, type: !2416)
!16249 = distinct !DILexicalBlock(scope: !16250, file: !2494, line: 1190, column: 3)
!16250 = distinct !DILexicalBlock(scope: !16240, file: !2494, line: 1190, column: 3)
!16251 = !DILocation(line: 0, scope: !16219)
!16252 = !DILocation(line: 1179, column: 2, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16254, file: !2494, line: 1179, column: 2)
!16254 = distinct !DILexicalBlock(scope: !16219, file: !2494, line: 1179, column: 2)
!16255 = !DILocation(line: 1179, column: 2, scope: !16254)
!16256 = !DILocation(line: 1179, column: 2, scope: !16257)
!16257 = distinct !DILexicalBlock(scope: !16253, file: !2494, line: 1179, column: 2)
!16258 = !DILocation(line: 1181, column: 31, scope: !16219)
!16259 = !DILocation(line: 1181, column: 45, scope: !16219)
!16260 = !DILocation(line: 1181, column: 15, scope: !16219)
!16261 = !DILocation(line: 1181, column: 25, scope: !16219)
!16262 = !DILocation(line: 1189, column: 11, scope: !16242)
!16263 = !DILocation(line: 1189, column: 7, scope: !16242)
!16264 = !DILocation(line: 1189, column: 6, scope: !16219)
!16265 = !DILocation(line: 1190, column: 3, scope: !16240)
!16266 = !DILocation(line: 1190, column: 3, scope: !16249)
!16267 = !DILocation(line: 0, scope: !16249)
!16268 = !DILocation(line: 1190, column: 3, scope: !16250)
!16269 = !DILocation(line: 1193, column: 2, scope: !16241)
!16270 = !DILocation(line: 1191, column: 42, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16250, file: !2494, line: 1190, column: 54)
!16272 = !DILocation(line: 1191, column: 12, scope: !16271)
!16273 = !DILocation(line: 1191, column: 22, scope: !16271)
!16274 = distinct !{!16274, !16265, !16275}
!16275 = !DILocation(line: 1192, column: 3, scope: !16240)
!16276 = !DILocation(line: 1195, column: 17, scope: !16219)
!16277 = !DILocation(line: 1195, column: 37, scope: !16219)
!16278 = !DILocation(line: 1195, column: 2, scope: !16219)
!16279 = !DILocation(line: 1196, column: 1, scope: !16219)
!16280 = !DISubprogram(name: "z_rb_foreach_next", scope: !251, file: !251, line: 176, type: !16281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{!2416, !16283, !16284}
!16283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16227, size: 32)
!16284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16243, size: 32)
!16285 = !DISubprogram(name: "rb_insert", scope: !251, file: !251, line: 105, type: !16286, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!16286 = !DISubroutineType(types: !16287)
!16287 = !{null, !16283, !2416}
!16288 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2494, file: !2494, line: 1198, type: !16220, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16289)
!16289 = !{!16290, !16291}
!16290 = !DILocalVariable(name: "pq", arg: 1, scope: !16288, file: !2494, line: 1198, type: !16222)
!16291 = !DILocalVariable(name: "thread", arg: 2, scope: !16288, file: !2494, line: 1198, type: !2387)
!16292 = !DILocation(line: 0, scope: !16288)
!16293 = !DILocation(line: 1200, column: 2, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16295, file: !2494, line: 1200, column: 2)
!16295 = distinct !DILexicalBlock(scope: !16288, file: !2494, line: 1200, column: 2)
!16296 = !DILocation(line: 1200, column: 2, scope: !16295)
!16297 = !DILocation(line: 1200, column: 2, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16294, file: !2494, line: 1200, column: 2)
!16299 = !DILocation(line: 1202, column: 17, scope: !16288)
!16300 = !DILocation(line: 1202, column: 37, scope: !16288)
!16301 = !DILocation(line: 1202, column: 2, scope: !16288)
!16302 = !DILocation(line: 1204, column: 16, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16288, file: !2494, line: 1204, column: 6)
!16304 = !DILocation(line: 1204, column: 7, scope: !16303)
!16305 = !DILocation(line: 1204, column: 6, scope: !16288)
!16306 = !DILocation(line: 1205, column: 7, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16303, file: !2494, line: 1204, column: 22)
!16308 = !DILocation(line: 1205, column: 22, scope: !16307)
!16309 = !DILocation(line: 1206, column: 2, scope: !16307)
!16310 = !DILocation(line: 1207, column: 1, scope: !16288)
!16311 = !DISubprogram(name: "rb_remove", scope: !251, file: !251, line: 110, type: !16286, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!16312 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2494, file: !2494, line: 1209, type: !16313, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16315)
!16313 = !DISubroutineType(types: !16314)
!16314 = !{!2387, !16222}
!16315 = !{!16316, !16317, !16318}
!16316 = !DILocalVariable(name: "pq", arg: 1, scope: !16312, file: !2494, line: 1209, type: !16222)
!16317 = !DILocalVariable(name: "thread", scope: !16312, file: !2494, line: 1211, type: !2387)
!16318 = !DILocalVariable(name: "n", scope: !16312, file: !2494, line: 1212, type: !2416)
!16319 = !DILocation(line: 0, scope: !16312)
!16320 = !DILocation(line: 1212, column: 37, scope: !16312)
!16321 = !DILocation(line: 1212, column: 21, scope: !16312)
!16322 = !DILocation(line: 1217, column: 2, scope: !16312)
!16323 = distinct !DISubprogram(name: "rb_get_min", scope: !251, file: !251, line: 115, type: !16324, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16326)
!16324 = !DISubroutineType(types: !16325)
!16325 = !{!2416, !16283}
!16326 = !{!16327}
!16327 = !DILocalVariable(name: "tree", arg: 1, scope: !16323, file: !251, line: 115, type: !16283)
!16328 = !DILocation(line: 0, scope: !16323)
!16329 = !DILocation(line: 117, column: 9, scope: !16323)
!16330 = !DILocation(line: 117, column: 2, scope: !16323)
!16331 = !DISubprogram(name: "z_rb_get_minmax", scope: !251, file: !251, line: 100, type: !16332, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2203)
!16332 = !DISubroutineType(types: !16333)
!16333 = !{!2416, !16283, !143}
!16334 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2494, file: !2494, line: 1246, type: !16335, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16345)
!16335 = !DISubroutineType(types: !16336)
!16336 = !{!2387, !16337}
!16337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16338, size: 32)
!16338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16224, line: 53, size: 2080, elements: !16339)
!16339 = !{!16340, !16344}
!16340 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16338, file: !16224, line: 54, baseType: !16341, size: 2048)
!16341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2423, size: 2048, elements: !16342)
!16342 = !{!16343}
!16343 = !DISubrange(count: 32)
!16344 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16338, file: !16224, line: 55, baseType: !32, size: 32, offset: 2048)
!16345 = !{!16346, !16347, !16348, !16349}
!16346 = !DILocalVariable(name: "pq", arg: 1, scope: !16334, file: !2494, line: 1246, type: !16337)
!16347 = !DILocalVariable(name: "thread", scope: !16334, file: !2494, line: 1252, type: !2387)
!16348 = !DILocalVariable(name: "l", scope: !16334, file: !2494, line: 1253, type: !14904)
!16349 = !DILocalVariable(name: "n", scope: !16334, file: !2494, line: 1254, type: !2490)
!16350 = !DILocation(line: 0, scope: !16334)
!16351 = !DILocation(line: 1248, column: 11, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16334, file: !2494, line: 1248, column: 6)
!16353 = !DILocation(line: 1248, column: 7, scope: !16352)
!16354 = !DILocation(line: 1248, column: 6, scope: !16334)
!16355 = !DILocation(line: 1253, column: 31, scope: !16334)
!16356 = !DILocation(line: 1253, column: 20, scope: !16334)
!16357 = !DILocation(line: 1254, column: 19, scope: !16334)
!16358 = !DILocation(line: 1260, column: 1, scope: !16334)
!16359 = distinct !DISubprogram(name: "z_unpend_all", scope: !2494, file: !2494, line: 1262, type: !16360, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!118, !2418}
!16362 = !{!16363, !16364, !16365}
!16363 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16359, file: !2494, line: 1262, type: !2418)
!16364 = !DILocalVariable(name: "need_sched", scope: !16359, file: !2494, line: 1264, type: !118)
!16365 = !DILocalVariable(name: "thread", scope: !16359, file: !2494, line: 1265, type: !2387)
!16366 = !DILocation(line: 0, scope: !16359)
!16367 = !DILocation(line: 1267, column: 19, scope: !16359)
!16368 = !DILocation(line: 1267, column: 41, scope: !16359)
!16369 = !DILocation(line: 1267, column: 2, scope: !16359)
!16370 = !DILocation(line: 1268, column: 3, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16359, file: !2494, line: 1267, column: 50)
!16372 = !DILocation(line: 1269, column: 3, scope: !16371)
!16373 = distinct !{!16373, !16369, !16374}
!16374 = !DILocation(line: 1271, column: 2, scope: !16359)
!16375 = !DILocation(line: 1273, column: 2, scope: !16359)
!16376 = distinct !DISubprogram(name: "z_waitq_head", scope: !13395, file: !13395, line: 52, type: !15905, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16377)
!16377 = !{!16378}
!16378 = !DILocalVariable(name: "w", arg: 1, scope: !16376, file: !13395, line: 52, type: !2418)
!16379 = !DILocation(line: 0, scope: !16376)
!16380 = !DILocation(line: 54, column: 52, scope: !16376)
!16381 = !DILocation(line: 54, column: 28, scope: !16376)
!16382 = !DILocation(line: 54, column: 9, scope: !16376)
!16383 = !DILocation(line: 54, column: 2, scope: !16376)
!16384 = distinct !DISubprogram(name: "init_ready_q", scope: !2494, file: !2494, line: 1276, type: !16385, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16392)
!16385 = !DISubroutineType(types: !16386)
!16386 = !{null, !16387}
!16387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16388, size: 32)
!16388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !16389)
!16389 = !{!16390, !16391}
!16390 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16388, file: !261, line: 86, baseType: !2387, size: 32)
!16391 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16388, file: !261, line: 90, baseType: !2423, size: 64, offset: 32)
!16392 = !{!16393}
!16393 = !DILocalVariable(name: "rq", arg: 1, scope: !16384, file: !2494, line: 1276, type: !16387)
!16394 = !DILocation(line: 0, scope: !16384)
!16395 = !DILocation(line: 1289, column: 22, scope: !16384)
!16396 = !DILocation(line: 1289, column: 2, scope: !16384)
!16397 = !DILocation(line: 1291, column: 1, scope: !16384)
!16398 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !16399, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16401)
!16399 = !DISubroutineType(types: !16400)
!16400 = !{null, !14904}
!16401 = !{!16402}
!16402 = !DILocalVariable(name: "list", arg: 1, scope: !16398, file: !235, line: 197, type: !14904)
!16403 = !DILocation(line: 0, scope: !16398)
!16404 = !DILocation(line: 199, column: 8, scope: !16398)
!16405 = !DILocation(line: 199, column: 13, scope: !16398)
!16406 = !DILocation(line: 200, column: 8, scope: !16398)
!16407 = !DILocation(line: 200, column: 13, scope: !16398)
!16408 = !DILocation(line: 201, column: 1, scope: !16398)
!16409 = distinct !DISubprogram(name: "z_sched_init", scope: !2494, file: !2494, line: 1293, type: !365, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16410 = !DILocation(line: 1302, column: 2, scope: !16409)
!16411 = !DILocation(line: 1306, column: 2, scope: !16409)
!16412 = !DILocation(line: 1309, column: 1, scope: !16409)
!16413 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2494, file: !2494, line: 1311, type: !16414, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16417)
!16414 = !DISubroutineType(types: !16415)
!16415 = !{!118, !16416}
!16416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2387)
!16417 = !{!16418}
!16418 = !DILocalVariable(name: "thread", arg: 1, scope: !16413, file: !2494, line: 1311, type: !16416)
!16419 = !DILocation(line: 0, scope: !16413)
!16420 = !DILocation(line: 1313, column: 22, scope: !16413)
!16421 = !DILocation(line: 1313, column: 9, scope: !16413)
!16422 = !DILocation(line: 1313, column: 2, scope: !16413)
!16423 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2494, file: !2494, line: 1325, type: !16424, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16426)
!16424 = !DISubroutineType(types: !16425)
!16425 = !{null, !16416, !118}
!16426 = !{!16427, !16428, !16429}
!16427 = !DILocalVariable(name: "thread", arg: 1, scope: !16423, file: !2494, line: 1325, type: !16416)
!16428 = !DILocalVariable(name: "prio", arg: 2, scope: !16423, file: !2494, line: 1325, type: !118)
!16429 = !DILocalVariable(name: "th", scope: !16423, file: !2494, line: 1334, type: !2387)
!16430 = !DILocation(line: 0, scope: !16423)
!16431 = !DILocation(line: 1331, column: 2, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16433, file: !2494, line: 1331, column: 2)
!16433 = distinct !DILexicalBlock(scope: !16434, file: !2494, line: 1331, column: 2)
!16434 = distinct !DILexicalBlock(scope: !16423, file: !2494, line: 1331, column: 2)
!16435 = !DILocation(line: 1331, column: 2, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16432, file: !2494, line: 1331, column: 2)
!16437 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 1332, column: 2, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16441, file: !2494, line: 1332, column: 2)
!16441 = distinct !DILexicalBlock(scope: !16423, file: !2494, line: 1332, column: 2)
!16442 = !DILocation(line: 0, scope: !15405, inlinedAt: !16438)
!16443 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16439)
!16444 = !DILocation(line: 1332, column: 2, scope: !16441)
!16445 = !DILocation(line: 1332, column: 2, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16440, file: !2494, line: 1332, column: 2)
!16447 = !DILocation(line: 1336, column: 2, scope: !16423)
!16448 = !DILocation(line: 1337, column: 1, scope: !16423)
!16449 = distinct !DISubprogram(name: "k_can_yield", scope: !2494, file: !2494, line: 1384, type: !7237, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16450 = !DILocation(line: 1386, column: 11, scope: !16449)
!16451 = !DILocation(line: 1386, column: 29, scope: !16449)
!16452 = !DILocation(line: 1386, column: 32, scope: !16449)
!16453 = !DILocation(line: 1386, column: 46, scope: !16449)
!16454 = !DILocation(line: 1387, column: 28, scope: !16449)
!16455 = !DILocation(line: 1387, column: 4, scope: !16449)
!16456 = !DILocation(line: 1386, column: 2, scope: !16449)
!16457 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !220, file: !220, line: 989, type: !7237, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16458 = !DILocation(line: 993, column: 10, scope: !16457)
!16459 = !DILocation(line: 993, column: 2, scope: !16457)
!16460 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2494, file: !2494, line: 1390, type: !365, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16461)
!16461 = !{!16462}
!16462 = !DILocalVariable(name: "key", scope: !16460, file: !2494, line: 1396, type: !14670)
!16463 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 1392, column: 2, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16467, file: !2494, line: 1392, column: 2)
!16467 = distinct !DILexicalBlock(scope: !16460, file: !2494, line: 1392, column: 2)
!16468 = !DILocation(line: 0, scope: !15405, inlinedAt: !16464)
!16469 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16465)
!16470 = !DILocation(line: 1392, column: 2, scope: !16467)
!16471 = !DILocation(line: 1392, column: 2, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16466, file: !2494, line: 1392, column: 2)
!16473 = !DILocation(line: 0, scope: !14678, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 1396, column: 25, scope: !16460)
!16475 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16476)
!16476 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16474)
!16477 = !DILocation(line: 0, scope: !14687, inlinedAt: !16476)
!16478 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16474)
!16479 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16474)
!16480 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16474)
!16481 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16474)
!16482 = !DILocation(line: 0, scope: !16460)
!16483 = !DILocation(line: 1400, column: 18, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !2494, line: 1399, column: 36)
!16485 = distinct !DILexicalBlock(scope: !16460, file: !2494, line: 1398, column: 6)
!16486 = !DILocation(line: 0, scope: !14870, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 1400, column: 3, scope: !16484)
!16488 = !DILocation(line: 266, column: 15, scope: !14870, inlinedAt: !16487)
!16489 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !16487)
!16490 = !DILocation(line: 0, scope: !14878, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !16487)
!16492 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !16491)
!16493 = !DILocation(line: 1402, column: 15, scope: !16460)
!16494 = !DILocation(line: 0, scope: !14887, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 1402, column: 2, scope: !16460)
!16496 = !DILocation(line: 252, column: 15, scope: !14887, inlinedAt: !16495)
!16497 = !DILocation(line: 252, column: 28, scope: !14887, inlinedAt: !16495)
!16498 = !DILocation(line: 0, scope: !14894, inlinedAt: !16499)
!16499 = distinct !DILocation(line: 254, column: 3, scope: !14898, inlinedAt: !16495)
!16500 = !DILocation(line: 0, scope: !14901, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 229, column: 2, scope: !14894, inlinedAt: !16499)
!16502 = !DILocation(line: 186, column: 2, scope: !14911, inlinedAt: !16501)
!16503 = !DILocation(line: 186, column: 2, scope: !14912, inlinedAt: !16501)
!16504 = !DILocation(line: 186, column: 2, scope: !14915, inlinedAt: !16501)
!16505 = !DILocation(line: 188, column: 2, scope: !14917, inlinedAt: !16501)
!16506 = !DILocation(line: 188, column: 2, scope: !14919, inlinedAt: !16501)
!16507 = !DILocation(line: 0, scope: !14917, inlinedAt: !16501)
!16508 = !DILocation(line: 189, column: 7, scope: !14922, inlinedAt: !16501)
!16509 = !DILocation(line: 189, column: 35, scope: !14922, inlinedAt: !16501)
!16510 = !DILocation(line: 189, column: 7, scope: !14923, inlinedAt: !16501)
!16511 = !DILocation(line: 191, column: 21, scope: !14927, inlinedAt: !16501)
!16512 = !DILocation(line: 190, column: 4, scope: !14927, inlinedAt: !16501)
!16513 = !DILocation(line: 192, column: 4, scope: !14927, inlinedAt: !16501)
!16514 = distinct !{!16514, !16505, !16515}
!16515 = !DILocation(line: 194, column: 2, scope: !14917, inlinedAt: !16501)
!16516 = !DILocation(line: 196, column: 37, scope: !14901, inlinedAt: !16501)
!16517 = !DILocation(line: 196, column: 2, scope: !14901, inlinedAt: !16501)
!16518 = !DILocation(line: 197, column: 1, scope: !14901, inlinedAt: !16501)
!16519 = !DILocation(line: 1403, column: 2, scope: !16460)
!16520 = !DILocation(line: 0, scope: !15356, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 1404, column: 2, scope: !16460)
!16522 = !DILocation(line: 0, scope: !15365, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !16521)
!16524 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !16523)
!16525 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !16523)
!16526 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !16523)
!16527 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !16521)
!16528 = !DILocation(line: 1405, column: 1, scope: !16460)
!16529 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2494, file: !2494, line: 1459, type: !16530, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16532)
!16530 = !DISubroutineType(types: !16531)
!16531 = !{!362, !15566}
!16532 = !{!16533, !16534, !16535}
!16533 = !DILocalVariable(name: "timeout", arg: 1, scope: !16529, file: !2494, line: 1459, type: !15566)
!16534 = !DILocalVariable(name: "ticks", scope: !16529, file: !2494, line: 1461, type: !113)
!16535 = !DILocalVariable(name: "ret", scope: !16529, file: !2494, line: 1480, type: !362)
!16536 = !DILocation(line: 0, scope: !16529)
!16537 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 1463, column: 2, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !2494, line: 1463, column: 2)
!16541 = distinct !DILexicalBlock(scope: !16529, file: !2494, line: 1463, column: 2)
!16542 = !DILocation(line: 0, scope: !15405, inlinedAt: !16538)
!16543 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16539)
!16544 = !DILocation(line: 1463, column: 2, scope: !16541)
!16545 = !DILocation(line: 1463, column: 2, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16540, file: !2494, line: 1463, column: 2)
!16547 = !DILocation(line: 1468, column: 6, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16529, file: !2494, line: 1468, column: 6)
!16549 = !DILocation(line: 1468, column: 6, scope: !16529)
!16550 = !DILocation(line: 1469, column: 20, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16548, file: !2494, line: 1468, column: 40)
!16552 = !DILocation(line: 1469, column: 3, scope: !16551)
!16553 = !DILocation(line: 1473, column: 3, scope: !16551)
!16554 = !DILocation(line: 1478, column: 10, scope: !16529)
!16555 = !DILocation(line: 1480, column: 16, scope: !16529)
!16556 = !DILocation(line: 1485, column: 1, scope: !16529)
!16557 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3533, file: !3533, line: 310, type: !16558, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16560)
!16558 = !DISubroutineType(types: !16559)
!16559 = !{null, !16416}
!16560 = !{!16561}
!16561 = !DILocalVariable(name: "thread", arg: 1, scope: !16557, file: !3533, line: 310, type: !16416)
!16562 = !DILocation(line: 0, scope: !16557)
!16563 = !DILocation(line: 319, column: 2, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16557, file: !3533, line: 319, column: 2)
!16565 = !{i64 2155111197}
!16566 = !DILocation(line: 320, column: 2, scope: !16557)
!16567 = !DILocation(line: 321, column: 1, scope: !16557)
!16568 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2494, file: !2494, line: 1415, type: !16569, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16571)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!362, !113}
!16571 = !{!16572, !16573, !16574, !16575}
!16572 = !DILocalVariable(name: "ticks", arg: 1, scope: !16568, file: !2494, line: 1415, type: !113)
!16573 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16568, file: !2494, line: 1418, type: !156)
!16574 = !DILocalVariable(name: "timeout", scope: !16568, file: !2494, line: 1430, type: !15566)
!16575 = !DILocalVariable(name: "key", scope: !16568, file: !2494, line: 1437, type: !14670)
!16576 = !DILocation(line: 0, scope: !16568)
!16577 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 1420, column: 2, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !2494, line: 1420, column: 2)
!16581 = distinct !DILexicalBlock(scope: !16568, file: !2494, line: 1420, column: 2)
!16582 = !DILocation(line: 0, scope: !15405, inlinedAt: !16578)
!16583 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16579)
!16584 = !DILocation(line: 1420, column: 2, scope: !16581)
!16585 = !DILocation(line: 1420, column: 2, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16580, file: !2494, line: 1420, column: 2)
!16587 = !DILocation(line: 1425, column: 12, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16568, file: !2494, line: 1425, column: 6)
!16589 = !DILocation(line: 1425, column: 6, scope: !16568)
!16590 = !DILocation(line: 1426, column: 3, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16588, file: !2494, line: 1425, column: 18)
!16592 = !DILocation(line: 1427, column: 3, scope: !16591)
!16593 = !DILocation(line: 1431, column: 24, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16568, file: !2494, line: 1431, column: 6)
!16595 = !DILocation(line: 1431, column: 6, scope: !16568)
!16596 = !DILocation(line: 1432, column: 35, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16594, file: !2494, line: 1431, column: 30)
!16598 = !DILocation(line: 1432, column: 27, scope: !16597)
!16599 = !DILocation(line: 1433, column: 2, scope: !16597)
!16600 = !DILocation(line: 1434, column: 27, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16594, file: !2494, line: 1433, column: 9)
!16602 = !DILocation(line: 0, scope: !16594)
!16603 = !DILocation(line: 0, scope: !14678, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 1437, column: 25, scope: !16568)
!16605 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16604)
!16607 = !DILocation(line: 0, scope: !14687, inlinedAt: !16606)
!16608 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16604)
!16609 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16604)
!16610 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16604)
!16611 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16604)
!16612 = !DILocation(line: 1440, column: 20, scope: !16568)
!16613 = !DILocation(line: 1440, column: 18, scope: !16568)
!16614 = !DILocation(line: 1442, column: 2, scope: !16568)
!16615 = !DILocation(line: 1443, column: 23, scope: !16568)
!16616 = !DILocation(line: 1443, column: 2, scope: !16568)
!16617 = !DILocation(line: 1444, column: 29, scope: !16568)
!16618 = !DILocation(line: 1444, column: 2, scope: !16568)
!16619 = !DILocation(line: 0, scope: !15356, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 1446, column: 8, scope: !16568)
!16621 = !DILocation(line: 0, scope: !15365, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !16620)
!16623 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !16622)
!16624 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !16622)
!16625 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !16622)
!16626 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !16620)
!16627 = !DILocation(line: 1448, column: 2, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16629, file: !2494, line: 1448, column: 2)
!16629 = distinct !DILexicalBlock(scope: !16568, file: !2494, line: 1448, column: 2)
!16630 = !DILocation(line: 1448, column: 2, scope: !16629)
!16631 = !DILocation(line: 1448, column: 2, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16628, file: !2494, line: 1448, column: 2)
!16633 = !DILocation(line: 1450, column: 10, scope: !16568)
!16634 = !DILocation(line: 1450, column: 45, scope: !16568)
!16635 = !DILocation(line: 1450, column: 43, scope: !16568)
!16636 = !DILocation(line: 1451, column: 6, scope: !16568)
!16637 = !DILocation(line: 1457, column: 1, scope: !16568)
!16638 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3500, file: !3500, line: 1103, type: !3501, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16639)
!16639 = !{!16640}
!16640 = !DILocalVariable(name: "t", arg: 1, scope: !16638, file: !3500, line: 1103, type: !213)
!16641 = !DILocation(line: 0, scope: !16638)
!16642 = !DILocation(line: 0, scope: !14738, inlinedAt: !16643)
!16643 = distinct !DILocation(line: 1106, column: 9, scope: !16638)
!16644 = !DILocation(line: 139, column: 13, scope: !16645, inlinedAt: !16643)
!16645 = distinct !DILexicalBlock(scope: !16646, file: !3500, line: 138, column: 10)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !3500, line: 136, column: 7)
!16647 = distinct !DILexicalBlock(scope: !14759, file: !3500, line: 134, column: 17)
!16648 = !DILocation(line: 1106, column: 2, scope: !16638)
!16649 = distinct !DISubprogram(name: "k_yield", scope: !3533, file: !3533, line: 140, type: !365, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16650 = !DILocation(line: 148, column: 2, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16649, file: !3533, line: 148, column: 2)
!16652 = !{i64 2155110517}
!16653 = !DILocation(line: 149, column: 2, scope: !16649)
!16654 = !DILocation(line: 150, column: 1, scope: !16649)
!16655 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2494, file: !2494, line: 1495, type: !16656, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{!362, !118}
!16658 = !{!16659, !16660}
!16659 = !DILocalVariable(name: "us", arg: 1, scope: !16655, file: !2494, line: 1495, type: !118)
!16660 = !DILocalVariable(name: "ticks", scope: !16655, file: !2494, line: 1497, type: !362)
!16661 = !DILocation(line: 0, scope: !16655)
!16662 = !DILocation(line: 1501, column: 31, scope: !16655)
!16663 = !DILocation(line: 1501, column: 10, scope: !16655)
!16664 = !DILocation(line: 1502, column: 23, scope: !16655)
!16665 = !DILocation(line: 1502, column: 10, scope: !16655)
!16666 = !DILocation(line: 1506, column: 31, scope: !16655)
!16667 = !DILocation(line: 1506, column: 9, scope: !16655)
!16668 = !DILocation(line: 1506, column: 2, scope: !16655)
!16669 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3500, file: !3500, line: 571, type: !3501, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16670)
!16670 = !{!16671}
!16671 = !DILocalVariable(name: "t", arg: 1, scope: !16669, file: !3500, line: 571, type: !213)
!16672 = !DILocation(line: 0, scope: !16669)
!16673 = !DILocation(line: 0, scope: !14738, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 574, column: 9, scope: !16669)
!16675 = !DILocation(line: 135, column: 5, scope: !16647, inlinedAt: !16674)
!16676 = !DILocation(line: 139, column: 13, scope: !16645, inlinedAt: !16674)
!16677 = !DILocation(line: 574, column: 2, scope: !16669)
!16678 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3500, file: !3500, line: 1187, type: !3501, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16679)
!16679 = !{!16680}
!16680 = !DILocalVariable(name: "t", arg: 1, scope: !16678, file: !3500, line: 1187, type: !213)
!16681 = !DILocation(line: 0, scope: !16678)
!16682 = !DILocation(line: 0, scope: !14738, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 1190, column: 9, scope: !16678)
!16684 = !DILocation(line: 145, column: 13, scope: !16685, inlinedAt: !16683)
!16685 = distinct !DILexicalBlock(scope: !14756, file: !3500, line: 144, column: 10)
!16686 = !DILocation(line: 1190, column: 2, scope: !16678)
!16687 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2494, file: !2494, line: 1517, type: !16558, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16688)
!16688 = !{!16689}
!16689 = !DILocalVariable(name: "thread", arg: 1, scope: !16687, file: !2494, line: 1517, type: !16416)
!16690 = !DILocation(line: 0, scope: !16687)
!16691 = !DILocation(line: 1521, column: 6, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16687, file: !2494, line: 1521, column: 6)
!16693 = !DILocation(line: 1521, column: 6, scope: !16687)
!16694 = !DILocation(line: 1525, column: 6, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16687, file: !2494, line: 1525, column: 6)
!16696 = !DILocation(line: 1525, column: 37, scope: !16695)
!16697 = !DILocation(line: 1525, column: 6, scope: !16687)
!16698 = !DILocation(line: 1527, column: 20, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2494, line: 1527, column: 7)
!16700 = distinct !DILexicalBlock(scope: !16695, file: !2494, line: 1525, column: 42)
!16701 = !DILocation(line: 1527, column: 33, scope: !16699)
!16702 = !DILocation(line: 1527, column: 7, scope: !16700)
!16703 = !DILocation(line: 1532, column: 2, scope: !16687)
!16704 = !DILocation(line: 1533, column: 2, scope: !16687)
!16705 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 1537, column: 7, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16687, file: !2494, line: 1537, column: 6)
!16709 = !DILocation(line: 0, scope: !15405, inlinedAt: !16706)
!16710 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16707)
!16711 = !DILocation(line: 1537, column: 6, scope: !16687)
!16712 = !DILocation(line: 1538, column: 3, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16708, file: !2494, line: 1537, column: 25)
!16714 = !DILocation(line: 1539, column: 2, scope: !16713)
!16715 = !DILocation(line: 1540, column: 1, scope: !16687)
!16716 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13056, file: !13056, line: 101, type: !14819, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16717)
!16717 = !{!16718}
!16718 = !DILocalVariable(name: "thread", arg: 1, scope: !16716, file: !13056, line: 101, type: !2387)
!16719 = !DILocation(line: 0, scope: !16716)
!16720 = !DILocation(line: 103, column: 23, scope: !16716)
!16721 = !DILocation(line: 103, column: 36, scope: !16716)
!16722 = !DILocation(line: 103, column: 55, scope: !16716)
!16723 = !DILocation(line: 103, column: 2, scope: !16716)
!16724 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2494, file: !2494, line: 1567, type: !16725, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16727)
!16725 = !DISubroutineType(types: !16726)
!16726 = !{!16416}
!16727 = !{!16728}
!16728 = !DILocalVariable(name: "ret", scope: !16724, file: !2494, line: 1577, type: !16416)
!16729 = !DILocation(line: 1577, column: 30, scope: !16724)
!16730 = !DILocation(line: 0, scope: !16724)
!16731 = !DILocation(line: 1582, column: 2, scope: !16724)
!16732 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2494, file: !2494, line: 1593, type: !7525, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2203)
!16733 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16734)
!16734 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 1595, column: 10, scope: !16732)
!16736 = !DILocation(line: 0, scope: !15405, inlinedAt: !16734)
!16737 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16735)
!16738 = !DILocation(line: 1595, column: 27, scope: !16732)
!16739 = !DILocation(line: 1595, column: 41, scope: !16732)
!16740 = !DILocation(line: 1595, column: 30, scope: !16732)
!16741 = !DILocation(line: 1595, column: 2, scope: !16732)
!16742 = distinct !DISubprogram(name: "z_thread_abort", scope: !2494, file: !2494, line: 1725, type: !14636, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16743)
!16743 = !{!16744, !16745}
!16744 = !DILocalVariable(name: "thread", arg: 1, scope: !16742, file: !2494, line: 1725, type: !2387)
!16745 = !DILocalVariable(name: "key", scope: !16742, file: !2494, line: 1727, type: !14670)
!16746 = !DILocation(line: 0, scope: !16742)
!16747 = !DILocation(line: 0, scope: !14678, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 1727, column: 25, scope: !16742)
!16749 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16750)
!16750 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16748)
!16751 = !DILocation(line: 0, scope: !14687, inlinedAt: !16750)
!16752 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16748)
!16753 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16748)
!16754 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16748)
!16755 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16748)
!16756 = !DILocation(line: 1729, column: 20, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16742, file: !2494, line: 1729, column: 6)
!16758 = !DILocation(line: 1729, column: 33, scope: !16757)
!16759 = !DILocation(line: 1729, column: 48, scope: !16757)
!16760 = !DILocation(line: 1729, column: 6, scope: !16742)
!16761 = !DILocation(line: 0, scope: !14712, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 1730, column: 3, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16757, file: !2494, line: 1729, column: 54)
!16764 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16762)
!16765 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16762)
!16766 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16762)
!16767 = !DILocation(line: 0, scope: !14726, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16762)
!16769 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16768)
!16770 = !DILocation(line: 1731, column: 3, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16772, file: !2494, line: 1731, column: 3)
!16772 = distinct !DILexicalBlock(scope: !16773, file: !2494, line: 1731, column: 3)
!16773 = distinct !DILexicalBlock(scope: !16763, file: !2494, line: 1731, column: 3)
!16774 = !DILocation(line: 1736, column: 20, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16742, file: !2494, line: 1736, column: 6)
!16776 = !DILocation(line: 1736, column: 33, scope: !16775)
!16777 = !DILocation(line: 1736, column: 49, scope: !16775)
!16778 = !DILocation(line: 1736, column: 6, scope: !16742)
!16779 = !DILocation(line: 0, scope: !14712, inlinedAt: !16780)
!16780 = distinct !DILocation(line: 1737, column: 3, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16775, file: !2494, line: 1736, column: 56)
!16782 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16780)
!16783 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16780)
!16784 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16780)
!16785 = !DILocation(line: 0, scope: !14726, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16780)
!16787 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16786)
!16788 = !DILocation(line: 1738, column: 3, scope: !16781)
!16789 = !DILocation(line: 1775, column: 2, scope: !16742)
!16790 = !DILocation(line: 1776, column: 16, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16742, file: !2494, line: 1776, column: 6)
!16792 = !DILocation(line: 1776, column: 13, scope: !16791)
!16793 = !DILocation(line: 1776, column: 25, scope: !16791)
!16794 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 1776, column: 29, scope: !16791)
!16797 = !DILocation(line: 0, scope: !15405, inlinedAt: !16795)
!16798 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16796)
!16799 = !DILocation(line: 1776, column: 6, scope: !16742)
!16800 = !DILocation(line: 0, scope: !15356, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 1777, column: 3, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16791, file: !2494, line: 1776, column: 47)
!16803 = !DILocation(line: 0, scope: !15365, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !16801)
!16805 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !16804)
!16806 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !16804)
!16807 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !16804)
!16808 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !16801)
!16809 = !DILocation(line: 1778, column: 3, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16811, file: !2494, line: 1778, column: 3)
!16811 = distinct !DILexicalBlock(scope: !16812, file: !2494, line: 1778, column: 3)
!16812 = distinct !DILexicalBlock(scope: !16802, file: !2494, line: 1778, column: 3)
!16813 = !DILocation(line: 0, scope: !14712, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 1780, column: 2, scope: !16742)
!16815 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16814)
!16816 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16814)
!16817 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16814)
!16818 = !DILocation(line: 0, scope: !14726, inlinedAt: !16819)
!16819 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16814)
!16820 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16819)
!16821 = !DILocation(line: 1781, column: 1, scope: !16742)
!16822 = distinct !DISubprogram(name: "end_thread", scope: !2494, file: !2494, line: 1690, type: !14636, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16823)
!16823 = !{!16824}
!16824 = !DILocalVariable(name: "thread", arg: 1, scope: !16822, file: !2494, line: 1690, type: !2387)
!16825 = !DILocation(line: 0, scope: !16822)
!16826 = !DILocation(line: 1695, column: 20, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16822, file: !2494, line: 1695, column: 6)
!16828 = !DILocation(line: 1695, column: 33, scope: !16827)
!16829 = !DILocation(line: 1695, column: 49, scope: !16827)
!16830 = !DILocation(line: 1695, column: 6, scope: !16822)
!16831 = !DILocation(line: 1697, column: 29, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16827, file: !2494, line: 1695, column: 56)
!16833 = !DILocation(line: 1698, column: 7, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16832, file: !2494, line: 1698, column: 7)
!16835 = !DILocation(line: 1698, column: 7, scope: !16832)
!16836 = !DILocation(line: 0, scope: !14870, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 1699, column: 4, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16834, file: !2494, line: 1698, column: 35)
!16839 = !DILocation(line: 266, column: 28, scope: !14870, inlinedAt: !16837)
!16840 = !DILocation(line: 0, scope: !14878, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 268, column: 3, scope: !14882, inlinedAt: !16837)
!16842 = !DILocation(line: 234, column: 2, scope: !14878, inlinedAt: !16841)
!16843 = !DILocation(line: 1700, column: 3, scope: !16838)
!16844 = !DILocation(line: 1701, column: 20, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16832, file: !2494, line: 1701, column: 7)
!16846 = !DILocation(line: 1701, column: 30, scope: !16845)
!16847 = !DILocation(line: 1701, column: 7, scope: !16832)
!16848 = !DILocation(line: 1702, column: 4, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16845, file: !2494, line: 1701, column: 39)
!16850 = !DILocation(line: 1703, column: 3, scope: !16849)
!16851 = !DILocation(line: 1704, column: 9, scope: !16832)
!16852 = !DILocation(line: 1705, column: 23, scope: !16832)
!16853 = !DILocation(line: 1705, column: 3, scope: !16832)
!16854 = !DILocation(line: 1706, column: 3, scope: !16832)
!16855 = !DILocation(line: 1722, column: 2, scope: !16832)
!16856 = !DILocation(line: 1723, column: 1, scope: !16822)
!16857 = distinct !DISubprogram(name: "unpend_all", scope: !2494, file: !2494, line: 1674, type: !16858, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16860)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{null, !2418}
!16860 = !{!16861, !16862}
!16861 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16857, file: !2494, line: 1674, type: !2418)
!16862 = !DILocalVariable(name: "thread", scope: !16857, file: !2494, line: 1676, type: !2387)
!16863 = !DILocation(line: 0, scope: !16857)
!16864 = !DILocation(line: 1678, column: 19, scope: !16857)
!16865 = !DILocation(line: 1678, column: 41, scope: !16857)
!16866 = !DILocation(line: 1678, column: 2, scope: !16857)
!16867 = !DILocation(line: 1679, column: 3, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16857, file: !2494, line: 1678, column: 50)
!16869 = !DILocation(line: 1680, column: 9, scope: !16868)
!16870 = !DILocalVariable(name: "thread", arg: 1, scope: !16871, file: !13076, line: 65, type: !2387)
!16871 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13076, file: !13076, line: 65, type: !16872, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16874)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{null, !2387, !32}
!16874 = !{!16870, !16875}
!16875 = !DILocalVariable(name: "value", arg: 2, scope: !16871, file: !13076, line: 65, type: !32)
!16876 = !DILocation(line: 0, scope: !16871, inlinedAt: !16877)
!16877 = distinct !DILocation(line: 1681, column: 3, scope: !16868)
!16878 = !DILocation(line: 67, column: 15, scope: !16871, inlinedAt: !16877)
!16879 = !DILocation(line: 67, column: 33, scope: !16871, inlinedAt: !16877)
!16880 = !DILocation(line: 1682, column: 3, scope: !16868)
!16881 = distinct !{!16881, !16866, !16882}
!16882 = !DILocation(line: 1683, column: 2, scope: !16857)
!16883 = !DILocation(line: 1684, column: 1, scope: !16857)
!16884 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2494, file: !2494, line: 1794, type: !16885, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16887)
!16885 = !DISubroutineType(types: !16886)
!16886 = !{!118, !2387, !15566}
!16887 = !{!16888, !16889, !16890, !16891}
!16888 = !DILocalVariable(name: "thread", arg: 1, scope: !16884, file: !2494, line: 1794, type: !2387)
!16889 = !DILocalVariable(name: "timeout", arg: 2, scope: !16884, file: !2494, line: 1794, type: !15566)
!16890 = !DILocalVariable(name: "key", scope: !16884, file: !2494, line: 1796, type: !14670)
!16891 = !DILocalVariable(name: "ret", scope: !16884, file: !2494, line: 1797, type: !118)
!16892 = !DILocation(line: 0, scope: !16884)
!16893 = !DILocation(line: 0, scope: !14678, inlinedAt: !16894)
!16894 = distinct !DILocation(line: 1796, column: 25, scope: !16884)
!16895 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16896)
!16896 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16894)
!16897 = !DILocation(line: 0, scope: !14687, inlinedAt: !16896)
!16898 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16894)
!16899 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16894)
!16900 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16894)
!16901 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16894)
!16902 = !DILocation(line: 1801, column: 20, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16884, file: !2494, line: 1801, column: 6)
!16904 = !DILocation(line: 1801, column: 33, scope: !16903)
!16905 = !DILocation(line: 1801, column: 49, scope: !16903)
!16906 = !DILocation(line: 1801, column: 6, scope: !16884)
!16907 = !DILocation(line: 1803, column: 13, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16903, file: !2494, line: 1803, column: 13)
!16909 = !DILocation(line: 1803, column: 13, scope: !16903)
!16910 = !DILocation(line: 1805, column: 24, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16908, file: !2494, line: 1805, column: 13)
!16912 = !DILocation(line: 1805, column: 21, scope: !16911)
!16913 = !DILocation(line: 1805, column: 34, scope: !16911)
!16914 = !DILocation(line: 1806, column: 20, scope: !16911)
!16915 = !DILocation(line: 1806, column: 44, scope: !16911)
!16916 = !DILocation(line: 1806, column: 30, scope: !16911)
!16917 = !DILocation(line: 1805, column: 13, scope: !16908)
!16918 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16919)
!16919 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 1809, column: 3, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16922, file: !2494, line: 1809, column: 3)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2494, line: 1809, column: 3)
!16923 = distinct !DILexicalBlock(scope: !16911, file: !2494, line: 1808, column: 9)
!16924 = !DILocation(line: 0, scope: !15405, inlinedAt: !16919)
!16925 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16920)
!16926 = !DILocation(line: 1809, column: 3, scope: !16922)
!16927 = !DILocation(line: 1809, column: 3, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16921, file: !2494, line: 1809, column: 3)
!16929 = !DILocation(line: 1810, column: 23, scope: !16923)
!16930 = !DILocation(line: 1810, column: 42, scope: !16923)
!16931 = !DILocation(line: 1810, column: 3, scope: !16923)
!16932 = !DILocation(line: 1811, column: 22, scope: !16923)
!16933 = !DILocation(line: 1811, column: 3, scope: !16923)
!16934 = !DILocation(line: 0, scope: !15356, inlinedAt: !16935)
!16935 = distinct !DILocation(line: 1814, column: 9, scope: !16923)
!16936 = !DILocation(line: 0, scope: !15365, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 195, column: 2, scope: !15356, inlinedAt: !16935)
!16938 = !DILocation(line: 225, column: 2, scope: !15372, inlinedAt: !16937)
!16939 = !DILocation(line: 225, column: 2, scope: !15373, inlinedAt: !16937)
!16940 = !DILocation(line: 225, column: 2, scope: !15376, inlinedAt: !16937)
!16941 = !DILocation(line: 196, column: 9, scope: !15356, inlinedAt: !16935)
!16942 = !DILocation(line: 1817, column: 3, scope: !16923)
!16943 = !DILocation(line: 0, scope: !16903)
!16944 = !DILocation(line: 0, scope: !14712, inlinedAt: !16945)
!16945 = distinct !DILocation(line: 1822, column: 2, scope: !16884)
!16946 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !16945)
!16947 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !16945)
!16948 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !16945)
!16949 = !DILocation(line: 0, scope: !14726, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !16945)
!16951 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !16950)
!16952 = !DILocation(line: 1823, column: 2, scope: !16884)
!16953 = !DILocation(line: 1824, column: 1, scope: !16884)
!16954 = distinct !DISubprogram(name: "z_sched_wake", scope: !2494, file: !2494, line: 1882, type: !16955, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16957)
!16955 = !DISubroutineType(types: !16956)
!16956 = !{!146, !2418, !118, !117}
!16957 = !{!16958, !16959, !16960, !16961, !16962, !16963, !16965}
!16958 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16954, file: !2494, line: 1882, type: !2418)
!16959 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16954, file: !2494, line: 1882, type: !118)
!16960 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16954, file: !2494, line: 1882, type: !117)
!16961 = !DILocalVariable(name: "thread", scope: !16954, file: !2494, line: 1884, type: !2387)
!16962 = !DILocalVariable(name: "ret", scope: !16954, file: !2494, line: 1885, type: !146)
!16963 = !DILocalVariable(name: "__i", scope: !16964, file: !2494, line: 1887, type: !14670)
!16964 = distinct !DILexicalBlock(scope: !16954, file: !2494, line: 1887, column: 2)
!16965 = !DILocalVariable(name: "__key", scope: !16964, file: !2494, line: 1887, type: !14670)
!16966 = !DILocation(line: 0, scope: !16954)
!16967 = !DILocation(line: 0, scope: !16964)
!16968 = !DILocation(line: 0, scope: !14678, inlinedAt: !16969)
!16969 = distinct !DILocation(line: 1887, column: 2, scope: !16964)
!16970 = !DILocation(line: 55, column: 2, scope: !14687, inlinedAt: !16971)
!16971 = distinct !DILocation(line: 145, column: 10, scope: !14678, inlinedAt: !16969)
!16972 = !DILocation(line: 0, scope: !14687, inlinedAt: !16971)
!16973 = !DILocation(line: 148, column: 2, scope: !14695, inlinedAt: !16969)
!16974 = !DILocation(line: 148, column: 2, scope: !14696, inlinedAt: !16969)
!16975 = !DILocation(line: 148, column: 2, scope: !14699, inlinedAt: !16969)
!16976 = !DILocation(line: 160, column: 2, scope: !14678, inlinedAt: !16969)
!16977 = !DILocation(line: 1888, column: 12, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16979, file: !2494, line: 1887, column: 26)
!16979 = distinct !DILexicalBlock(scope: !16964, file: !2494, line: 1887, column: 2)
!16980 = !DILocation(line: 1890, column: 14, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16978, file: !2494, line: 1890, column: 7)
!16982 = !DILocation(line: 1890, column: 7, scope: !16978)
!16983 = !DILocalVariable(name: "thread", arg: 1, scope: !16984, file: !14047, line: 134, type: !2387)
!16984 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14047, file: !14047, line: 134, type: !16985, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16987)
!16985 = !DISubroutineType(types: !16986)
!16986 = !{null, !2387, !32, !117}
!16987 = !{!16983, !16988, !16989}
!16988 = !DILocalVariable(name: "value", arg: 2, scope: !16984, file: !14047, line: 135, type: !32)
!16989 = !DILocalVariable(name: "data", arg: 3, scope: !16984, file: !14047, line: 136, type: !117)
!16990 = !DILocation(line: 0, scope: !16984, inlinedAt: !16991)
!16991 = distinct !DILocation(line: 1891, column: 4, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16981, file: !2494, line: 1890, column: 23)
!16993 = !DILocation(line: 0, scope: !16871, inlinedAt: !16994)
!16994 = distinct !DILocation(line: 138, column: 2, scope: !16984, inlinedAt: !16991)
!16995 = !DILocation(line: 67, column: 15, scope: !16871, inlinedAt: !16994)
!16996 = !DILocation(line: 67, column: 33, scope: !16871, inlinedAt: !16994)
!16997 = !DILocation(line: 139, column: 15, scope: !16984, inlinedAt: !16991)
!16998 = !DILocation(line: 139, column: 25, scope: !16984, inlinedAt: !16991)
!16999 = !DILocation(line: 1894, column: 4, scope: !16992)
!17000 = !DILocation(line: 1895, column: 10, scope: !16992)
!17001 = !DILocation(line: 1896, column: 4, scope: !16992)
!17002 = !DILocation(line: 1898, column: 3, scope: !16992)
!17003 = !DILocation(line: 0, scope: !14712, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 1887, column: 2, scope: !16979)
!17005 = !DILocation(line: 194, column: 2, scope: !14720, inlinedAt: !17004)
!17006 = !DILocation(line: 194, column: 2, scope: !14721, inlinedAt: !17004)
!17007 = !DILocation(line: 194, column: 2, scope: !14724, inlinedAt: !17004)
!17008 = !DILocation(line: 0, scope: !14726, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 215, column: 2, scope: !14712, inlinedAt: !17004)
!17010 = !DILocation(line: 95, column: 2, scope: !14726, inlinedAt: !17009)
!17011 = !DILocation(line: 1901, column: 2, scope: !16954)
!17012 = distinct !DISubprogram(name: "z_sched_wait", scope: !2494, file: !2494, line: 1904, type: !17013, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !17015)
!17013 = !DISubroutineType(types: !17014)
!17014 = !{!118, !14681, !14670, !2418, !15566, !3222}
!17015 = !{!17016, !17017, !17018, !17019, !17020, !17021}
!17016 = !DILocalVariable(name: "lock", arg: 1, scope: !17012, file: !2494, line: 1904, type: !14681)
!17017 = !DILocalVariable(name: "key", arg: 2, scope: !17012, file: !2494, line: 1904, type: !14670)
!17018 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17012, file: !2494, line: 1905, type: !2418)
!17019 = !DILocalVariable(name: "timeout", arg: 4, scope: !17012, file: !2494, line: 1905, type: !15566)
!17020 = !DILocalVariable(name: "data", arg: 5, scope: !17012, file: !2494, line: 1905, type: !3222)
!17021 = !DILocalVariable(name: "ret", scope: !17012, file: !2494, line: 1907, type: !118)
!17022 = !DILocation(line: 0, scope: !17012)
!17023 = !DILocation(line: 1907, column: 12, scope: !17012)
!17024 = !DILocation(line: 1909, column: 11, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17012, file: !2494, line: 1909, column: 6)
!17026 = !DILocation(line: 1909, column: 6, scope: !17012)
!17027 = !DILocation(line: 1910, column: 11, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17025, file: !2494, line: 1909, column: 20)
!17029 = !DILocation(line: 1910, column: 26, scope: !17028)
!17030 = !DILocation(line: 1910, column: 9, scope: !17028)
!17031 = !DILocation(line: 1911, column: 2, scope: !17028)
!17032 = !DILocation(line: 1912, column: 2, scope: !17012)
!17033 = distinct !DISubprogram(name: "z_data_copy", scope: !17034, file: !17034, line: 22, type: !365, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !2203)
!17034 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17035 = !DILocation(line: 24, column: 2, scope: !17033)
!17036 = !DILocation(line: 27, column: 2, scope: !17033)
!17037 = !DILocation(line: 71, column: 1, scope: !17033)
!17038 = distinct !DISubprogram(name: "z_add_timeout", scope: !2531, file: !2531, line: 88, type: !17039, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17045)
!17039 = !DISubroutineType(types: !17040)
!17040 = !{null, !2504, !2523, !17041}
!17041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !17042)
!17042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !17043)
!17043 = !{!17044}
!17044 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17042, file: !114, line: 66, baseType: !113, size: 64)
!17045 = !{!17046, !17047, !17048, !17049, !17055, !17056, !17059, !17062}
!17046 = !DILocalVariable(name: "to", arg: 1, scope: !17038, file: !2531, line: 88, type: !2504)
!17047 = !DILocalVariable(name: "fn", arg: 2, scope: !17038, file: !2531, line: 88, type: !2523)
!17048 = !DILocalVariable(name: "timeout", arg: 3, scope: !17038, file: !2531, line: 89, type: !17041)
!17049 = !DILocalVariable(name: "__i", scope: !17050, file: !2531, line: 102, type: !17051)
!17050 = distinct !DILexicalBlock(scope: !17038, file: !2531, line: 102, column: 2)
!17051 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !17052)
!17052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !17053)
!17053 = !{!17054}
!17054 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17052, file: !334, line: 33, baseType: !118, size: 32)
!17055 = !DILocalVariable(name: "__key", scope: !17050, file: !2531, line: 102, type: !17051)
!17056 = !DILocalVariable(name: "t", scope: !17057, file: !2531, line: 103, type: !2504)
!17057 = distinct !DILexicalBlock(scope: !17058, file: !2531, line: 102, column: 24)
!17058 = distinct !DILexicalBlock(scope: !17050, file: !2531, line: 102, column: 2)
!17059 = !DILocalVariable(name: "ticks", scope: !17060, file: !2531, line: 107, type: !113)
!17060 = distinct !DILexicalBlock(scope: !17061, file: !2531, line: 106, column: 39)
!17061 = distinct !DILexicalBlock(scope: !17057, file: !2531, line: 105, column: 7)
!17062 = !DILocalVariable(name: "next_time", scope: !17063, file: !2531, line: 137, type: !362)
!17063 = distinct !DILexicalBlock(scope: !17064, file: !2531, line: 127, column: 22)
!17064 = distinct !DILexicalBlock(scope: !17057, file: !2531, line: 127, column: 7)
!17065 = !DILocation(line: 0, scope: !17038)
!17066 = !DILocation(line: 91, column: 6, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17038, file: !2531, line: 91, column: 6)
!17068 = !DILocation(line: 91, column: 6, scope: !17038)
!17069 = !DILocation(line: 99, column: 2, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17071, file: !2531, line: 99, column: 2)
!17071 = distinct !DILexicalBlock(scope: !17038, file: !2531, line: 99, column: 2)
!17072 = !DILocation(line: 99, column: 2, scope: !17071)
!17073 = !DILocation(line: 99, column: 2, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17070, file: !2531, line: 99, column: 2)
!17075 = !DILocation(line: 100, column: 6, scope: !17038)
!17076 = !DILocation(line: 100, column: 9, scope: !17038)
!17077 = !DILocation(line: 0, scope: !17050)
!17078 = !DILocalVariable(name: "l", arg: 1, scope: !17079, file: !334, line: 136, type: !17082)
!17079 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !17080, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17083)
!17080 = !DISubroutineType(types: !17081)
!17081 = !{!17051, !17082}
!17082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!17083 = !{!17078, !17084}
!17084 = !DILocalVariable(name: "k", scope: !17079, file: !334, line: 139, type: !17051)
!17085 = !DILocation(line: 0, scope: !17079, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 102, column: 2, scope: !17050)
!17087 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17092)
!17088 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17089)
!17089 = !{!17090, !17091}
!17090 = !DILocalVariable(name: "key", scope: !17088, file: !6236, line: 44, type: !32)
!17091 = !DILocalVariable(name: "tmp", scope: !17088, file: !6236, line: 53, type: !32)
!17092 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17086)
!17093 = !{i64 2286100}
!17094 = !DILocation(line: 0, scope: !17088, inlinedAt: !17092)
!17095 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17086)
!17096 = distinct !DILexicalBlock(scope: !17097, file: !334, line: 148, column: 2)
!17097 = distinct !DILexicalBlock(scope: !17079, file: !334, line: 148, column: 2)
!17098 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17086)
!17099 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17086)
!17100 = distinct !DILexicalBlock(scope: !17096, file: !334, line: 148, column: 2)
!17101 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17086)
!17102 = !DILocation(line: 106, column: 33, scope: !17061)
!17103 = !DILocation(line: 105, column: 7, scope: !17057)
!17104 = !DILocation(line: 107, column: 50, scope: !17060)
!17105 = !DILocation(line: 107, column: 48, scope: !17060)
!17106 = !DILocation(line: 0, scope: !17060)
!17107 = !DILocation(line: 109, column: 17, scope: !17060)
!17108 = !DILocation(line: 110, column: 3, scope: !17060)
!17109 = !DILocation(line: 111, column: 31, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17061, file: !2531, line: 110, column: 10)
!17111 = !DILocation(line: 111, column: 37, scope: !17110)
!17112 = !DILocation(line: 111, column: 35, scope: !17110)
!17113 = !DILocation(line: 0, scope: !17061)
!17114 = !DILocation(line: 109, column: 8, scope: !17060)
!17115 = !DILocation(line: 109, column: 15, scope: !17060)
!17116 = !DILocation(line: 114, column: 12, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17057, file: !2531, line: 114, column: 3)
!17118 = !DILocation(line: 0, scope: !17057)
!17119 = !DILocation(line: 114, column: 3, scope: !17117)
!17120 = !DILocation(line: 115, column: 24, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17122, file: !2531, line: 115, column: 8)
!17122 = distinct !DILexicalBlock(scope: !17123, file: !2531, line: 114, column: 45)
!17123 = distinct !DILexicalBlock(scope: !17117, file: !2531, line: 114, column: 3)
!17124 = !DILocation(line: 115, column: 11, scope: !17121)
!17125 = !DILocation(line: 115, column: 18, scope: !17121)
!17126 = !DILocation(line: 115, column: 8, scope: !17122)
!17127 = !DILocation(line: 116, column: 15, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17121, file: !2531, line: 115, column: 32)
!17129 = !DILocation(line: 117, column: 26, scope: !17128)
!17130 = !DILocation(line: 117, column: 5, scope: !17128)
!17131 = !DILocation(line: 123, column: 7, scope: !17057)
!17132 = !DILocation(line: 120, column: 15, scope: !17122)
!17133 = !DILocation(line: 114, column: 36, scope: !17123)
!17134 = distinct !{!17134, !17119, !17135}
!17135 = !DILocation(line: 121, column: 3, scope: !17117)
!17136 = !DILocation(line: 124, column: 4, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17138, file: !2531, line: 123, column: 18)
!17138 = distinct !DILexicalBlock(scope: !17057, file: !2531, line: 123, column: 7)
!17139 = !DILocation(line: 125, column: 3, scope: !17137)
!17140 = !DILocation(line: 127, column: 13, scope: !17064)
!17141 = !DILocation(line: 127, column: 10, scope: !17064)
!17142 = !DILocation(line: 127, column: 7, scope: !17057)
!17143 = !DILocation(line: 137, column: 24, scope: !17063)
!17144 = !DILocation(line: 0, scope: !17063)
!17145 = !DILocation(line: 139, column: 18, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17063, file: !2531, line: 139, column: 8)
!17147 = !DILocation(line: 139, column: 23, scope: !17146)
!17148 = !DILocation(line: 141, column: 5, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17146, file: !2531, line: 140, column: 48)
!17150 = !DILocation(line: 142, column: 4, scope: !17149)
!17151 = !DILocalVariable(name: "key", arg: 2, scope: !17152, file: !334, line: 190, type: !17051)
!17152 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !17153, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17155)
!17153 = !DISubroutineType(types: !17154)
!17154 = !{null, !17082, !17051}
!17155 = !{!17156, !17151}
!17156 = !DILocalVariable(name: "l", arg: 1, scope: !17152, file: !334, line: 189, type: !17082)
!17157 = !DILocation(line: 0, scope: !17152, inlinedAt: !17158)
!17158 = distinct !DILocation(line: 102, column: 2, scope: !17058)
!17159 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17158)
!17160 = distinct !DILexicalBlock(scope: !17161, file: !334, line: 194, column: 2)
!17161 = distinct !DILexicalBlock(scope: !17152, file: !334, line: 194, column: 2)
!17162 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17158)
!17163 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17158)
!17164 = distinct !DILexicalBlock(scope: !17160, file: !334, line: 194, column: 2)
!17165 = !DILocalVariable(name: "key", arg: 1, scope: !17166, file: !6236, line: 84, type: !32)
!17166 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17167)
!17167 = !{!17165}
!17168 = !DILocation(line: 0, scope: !17166, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17158)
!17170 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17169)
!17171 = !{i64 2286917}
!17172 = !DILocation(line: 148, column: 1, scope: !17038)
!17173 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !17174, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17178)
!17174 = !DISubroutineType(types: !17175)
!17175 = !{!146, !17176}
!17176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17177, size: 32)
!17177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!17178 = !{!17179}
!17179 = !DILocalVariable(name: "node", arg: 1, scope: !17173, file: !235, line: 225, type: !17176)
!17180 = !DILocation(line: 0, scope: !17173)
!17181 = !DILocation(line: 227, column: 15, scope: !17173)
!17182 = !DILocation(line: 227, column: 20, scope: !17173)
!17183 = !DILocation(line: 227, column: 2, scope: !17173)
!17184 = distinct !DISubprogram(name: "elapsed", scope: !2531, file: !2531, line: 62, type: !17185, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !2203)
!17185 = !DISubroutineType(types: !17186)
!17186 = !{!362}
!17187 = !DILocation(line: 64, column: 9, scope: !17184)
!17188 = !DILocation(line: 64, column: 28, scope: !17184)
!17189 = !DILocation(line: 64, column: 35, scope: !17184)
!17190 = !DILocation(line: 64, column: 2, scope: !17184)
!17191 = distinct !DISubprogram(name: "first", scope: !2531, file: !2531, line: 39, type: !17192, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17194)
!17192 = !DISubroutineType(types: !17193)
!17193 = !{!2504}
!17194 = !{!17195}
!17195 = !DILocalVariable(name: "t", scope: !17191, file: !2531, line: 41, type: !17196)
!17196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!17197 = !DILocation(line: 41, column: 19, scope: !17191)
!17198 = !DILocation(line: 0, scope: !17191)
!17199 = !DILocation(line: 43, column: 9, scope: !17191)
!17200 = !DILocation(line: 43, column: 2, scope: !17191)
!17201 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !17202, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17204)
!17202 = !DISubroutineType(types: !17203)
!17203 = !{null, !17196, !17196}
!17204 = !{!17205, !17206, !17207}
!17205 = !DILocalVariable(name: "successor", arg: 1, scope: !17201, file: !235, line: 443, type: !17196)
!17206 = !DILocalVariable(name: "node", arg: 2, scope: !17201, file: !235, line: 443, type: !17196)
!17207 = !DILocalVariable(name: "prev", scope: !17201, file: !235, line: 445, type: !17208)
!17208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17196)
!17209 = !DILocation(line: 0, scope: !17201)
!17210 = !DILocation(line: 445, column: 39, scope: !17201)
!17211 = !DILocation(line: 447, column: 8, scope: !17201)
!17212 = !DILocation(line: 447, column: 13, scope: !17201)
!17213 = !DILocation(line: 448, column: 8, scope: !17201)
!17214 = !DILocation(line: 448, column: 13, scope: !17201)
!17215 = !DILocation(line: 449, column: 8, scope: !17201)
!17216 = !DILocation(line: 449, column: 13, scope: !17201)
!17217 = !DILocation(line: 450, column: 18, scope: !17201)
!17218 = !DILocation(line: 451, column: 1, scope: !17201)
!17219 = distinct !DISubprogram(name: "next", scope: !2531, file: !2531, line: 46, type: !17220, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17222)
!17220 = !DISubroutineType(types: !17221)
!17221 = !{!2504, !2504}
!17222 = !{!17223, !17224}
!17223 = !DILocalVariable(name: "t", arg: 1, scope: !17219, file: !2531, line: 46, type: !2504)
!17224 = !DILocalVariable(name: "n", scope: !17219, file: !2531, line: 48, type: !17196)
!17225 = !DILocation(line: 0, scope: !17219)
!17226 = !DILocation(line: 48, column: 58, scope: !17219)
!17227 = !DILocation(line: 48, column: 19, scope: !17219)
!17228 = !DILocation(line: 50, column: 9, scope: !17219)
!17229 = !DILocation(line: 50, column: 2, scope: !17219)
!17230 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !17231, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17234)
!17231 = !DISubroutineType(types: !17232)
!17232 = !{null, !17233, !17196}
!17233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!17234 = !{!17235, !17236, !17237}
!17235 = !DILocalVariable(name: "list", arg: 1, scope: !17230, file: !235, line: 404, type: !17233)
!17236 = !DILocalVariable(name: "node", arg: 2, scope: !17230, file: !235, line: 404, type: !17196)
!17237 = !DILocalVariable(name: "tail", scope: !17230, file: !235, line: 406, type: !17208)
!17238 = !DILocation(line: 0, scope: !17230)
!17239 = !DILocation(line: 406, column: 34, scope: !17230)
!17240 = !DILocation(line: 408, column: 8, scope: !17230)
!17241 = !DILocation(line: 408, column: 13, scope: !17230)
!17242 = !DILocation(line: 409, column: 8, scope: !17230)
!17243 = !DILocation(line: 409, column: 13, scope: !17230)
!17244 = !DILocation(line: 411, column: 8, scope: !17230)
!17245 = !DILocation(line: 411, column: 13, scope: !17230)
!17246 = !DILocation(line: 412, column: 13, scope: !17230)
!17247 = !DILocation(line: 413, column: 1, scope: !17230)
!17248 = distinct !DISubprogram(name: "next_timeout", scope: !2531, file: !2531, line: 67, type: !17185, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17249)
!17249 = !{!17250, !17251, !17252}
!17250 = !DILocalVariable(name: "to", scope: !17248, file: !2531, line: 69, type: !2504)
!17251 = !DILocalVariable(name: "ticks_elapsed", scope: !17248, file: !2531, line: 70, type: !362)
!17252 = !DILocalVariable(name: "ret", scope: !17248, file: !2531, line: 71, type: !362)
!17253 = !DILocation(line: 69, column: 24, scope: !17248)
!17254 = !DILocation(line: 0, scope: !17248)
!17255 = !DILocation(line: 70, column: 26, scope: !17248)
!17256 = !DILocation(line: 73, column: 10, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17248, file: !2531, line: 73, column: 6)
!17258 = !DILocation(line: 73, column: 19, scope: !17257)
!17259 = !DILocation(line: 74, column: 21, scope: !17257)
!17260 = !DILocation(line: 74, column: 30, scope: !17257)
!17261 = !DILocation(line: 74, column: 28, scope: !17257)
!17262 = !DILocation(line: 74, column: 45, scope: !17257)
!17263 = !DILocation(line: 73, column: 6, scope: !17248)
!17264 = !DILocation(line: 77, column: 9, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17257, file: !2531, line: 76, column: 9)
!17266 = !DILocation(line: 0, scope: !17257)
!17267 = !DILocation(line: 81, column: 20, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17248, file: !2531, line: 81, column: 6)
!17269 = !DILocation(line: 81, column: 6, scope: !17268)
!17270 = !DILocation(line: 81, column: 32, scope: !17268)
!17271 = !DILocation(line: 85, column: 2, scope: !17248)
!17272 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !17273, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17275)
!17273 = !DISubroutineType(types: !17274)
!17274 = !{!17196, !17233, !17196}
!17275 = !{!17276, !17277}
!17276 = !DILocalVariable(name: "list", arg: 1, scope: !17272, file: !235, line: 341, type: !17233)
!17277 = !DILocalVariable(name: "node", arg: 2, scope: !17272, file: !235, line: 342, type: !17196)
!17278 = !DILocation(line: 0, scope: !17272)
!17279 = !DILocation(line: 344, column: 15, scope: !17272)
!17280 = !DILocation(line: 344, column: 9, scope: !17272)
!17281 = !DILocation(line: 344, column: 26, scope: !17272)
!17282 = !DILocation(line: 344, column: 2, scope: !17272)
!17283 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !17273, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17284)
!17284 = !{!17285, !17286}
!17285 = !DILocalVariable(name: "list", arg: 1, scope: !17283, file: !235, line: 325, type: !17233)
!17286 = !DILocalVariable(name: "node", arg: 2, scope: !17283, file: !235, line: 326, type: !17196)
!17287 = !DILocation(line: 0, scope: !17283)
!17288 = !DILocation(line: 328, column: 24, scope: !17283)
!17289 = !DILocation(line: 328, column: 15, scope: !17283)
!17290 = !DILocation(line: 328, column: 9, scope: !17283)
!17291 = !DILocation(line: 328, column: 45, scope: !17283)
!17292 = !DILocation(line: 328, column: 2, scope: !17283)
!17293 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !17294, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17296)
!17294 = !DISubroutineType(types: !17295)
!17295 = !{!17196, !17233}
!17296 = !{!17297}
!17297 = !DILocalVariable(name: "list", arg: 1, scope: !17293, file: !235, line: 294, type: !17233)
!17298 = !DILocation(line: 0, scope: !17293)
!17299 = !DILocation(line: 296, column: 9, scope: !17293)
!17300 = !DILocation(line: 296, column: 2, scope: !17293)
!17301 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !17302, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17304)
!17302 = !DISubroutineType(types: !17303)
!17303 = !{!146, !17233}
!17304 = !{!17305}
!17305 = !DILocalVariable(name: "list", arg: 1, scope: !17301, file: !235, line: 266, type: !17233)
!17306 = !DILocation(line: 0, scope: !17301)
!17307 = !DILocation(line: 268, column: 15, scope: !17301)
!17308 = !DILocation(line: 268, column: 20, scope: !17301)
!17309 = !DILocation(line: 268, column: 2, scope: !17301)
!17310 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2531, file: !2531, line: 150, type: !17311, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{!118, !2504}
!17313 = !{!17314, !17315, !17316, !17318}
!17314 = !DILocalVariable(name: "to", arg: 1, scope: !17310, file: !2531, line: 150, type: !2504)
!17315 = !DILocalVariable(name: "ret", scope: !17310, file: !2531, line: 152, type: !118)
!17316 = !DILocalVariable(name: "__i", scope: !17317, file: !2531, line: 154, type: !17051)
!17317 = distinct !DILexicalBlock(scope: !17310, file: !2531, line: 154, column: 2)
!17318 = !DILocalVariable(name: "__key", scope: !17317, file: !2531, line: 154, type: !17051)
!17319 = !DILocation(line: 0, scope: !17310)
!17320 = !DILocation(line: 0, scope: !17317)
!17321 = !DILocation(line: 0, scope: !17079, inlinedAt: !17322)
!17322 = distinct !DILocation(line: 154, column: 2, scope: !17317)
!17323 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17322)
!17325 = !DILocation(line: 0, scope: !17088, inlinedAt: !17324)
!17326 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17322)
!17327 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17322)
!17328 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17322)
!17329 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17322)
!17330 = !DILocation(line: 155, column: 7, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17332, file: !2531, line: 155, column: 7)
!17332 = distinct !DILexicalBlock(scope: !17333, file: !2531, line: 154, column: 24)
!17333 = distinct !DILexicalBlock(scope: !17317, file: !2531, line: 154, column: 2)
!17334 = !DILocation(line: 155, column: 7, scope: !17332)
!17335 = !DILocation(line: 156, column: 4, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17331, file: !2531, line: 155, column: 39)
!17337 = !DILocation(line: 158, column: 3, scope: !17336)
!17338 = !DILocation(line: 0, scope: !17152, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 154, column: 2, scope: !17333)
!17340 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17339)
!17341 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17339)
!17342 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17339)
!17343 = !DILocation(line: 0, scope: !17166, inlinedAt: !17344)
!17344 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17339)
!17345 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17344)
!17346 = !DILocation(line: 161, column: 2, scope: !17310)
!17347 = distinct !DISubprogram(name: "remove_timeout", scope: !2531, file: !2531, line: 53, type: !2525, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17348)
!17348 = !{!17349}
!17349 = !DILocalVariable(name: "t", arg: 1, scope: !17347, file: !2531, line: 53, type: !2504)
!17350 = !DILocation(line: 0, scope: !17347)
!17351 = !DILocation(line: 55, column: 6, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17347, file: !2531, line: 55, column: 6)
!17353 = !DILocation(line: 55, column: 14, scope: !17352)
!17354 = !DILocation(line: 55, column: 6, scope: !17347)
!17355 = !DILocation(line: 56, column: 25, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17352, file: !2531, line: 55, column: 23)
!17357 = !DILocation(line: 56, column: 12, scope: !17356)
!17358 = !DILocation(line: 56, column: 19, scope: !17356)
!17359 = !DILocation(line: 57, column: 2, scope: !17356)
!17360 = !DILocation(line: 59, column: 23, scope: !17347)
!17361 = !DILocation(line: 59, column: 2, scope: !17347)
!17362 = !DILocation(line: 60, column: 1, scope: !17347)
!17363 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !17364, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17366)
!17364 = !DISubroutineType(types: !17365)
!17365 = !{null, !17196}
!17366 = !{!17367, !17368, !17369}
!17367 = !DILocalVariable(name: "node", arg: 1, scope: !17363, file: !235, line: 496, type: !17196)
!17368 = !DILocalVariable(name: "prev", scope: !17363, file: !235, line: 498, type: !17208)
!17369 = !DILocalVariable(name: "next", scope: !17363, file: !235, line: 499, type: !17208)
!17370 = !DILocation(line: 0, scope: !17363)
!17371 = !DILocation(line: 498, column: 34, scope: !17363)
!17372 = !DILocation(line: 499, column: 34, scope: !17363)
!17373 = !DILocation(line: 501, column: 8, scope: !17363)
!17374 = !DILocation(line: 501, column: 13, scope: !17363)
!17375 = !DILocation(line: 502, column: 8, scope: !17363)
!17376 = !DILocation(line: 502, column: 13, scope: !17363)
!17377 = !DILocation(line: 503, column: 2, scope: !17363)
!17378 = !DILocation(line: 504, column: 1, scope: !17363)
!17379 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !17364, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17380)
!17380 = !{!17381}
!17381 = !DILocalVariable(name: "node", arg: 1, scope: !17379, file: !235, line: 211, type: !17196)
!17382 = !DILocation(line: 0, scope: !17379)
!17383 = !DILocation(line: 213, column: 8, scope: !17379)
!17384 = !DILocation(line: 213, column: 13, scope: !17379)
!17385 = !DILocation(line: 214, column: 8, scope: !17379)
!17386 = !DILocation(line: 214, column: 13, scope: !17379)
!17387 = !DILocation(line: 215, column: 1, scope: !17379)
!17388 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2531, file: !2531, line: 183, type: !17389, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17393)
!17389 = !DISubroutineType(types: !17390)
!17390 = !{!113, !17391}
!17391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17392, size: 32)
!17392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2505)
!17393 = !{!17394, !17395, !17396, !17398}
!17394 = !DILocalVariable(name: "timeout", arg: 1, scope: !17388, file: !2531, line: 183, type: !17391)
!17395 = !DILocalVariable(name: "ticks", scope: !17388, file: !2531, line: 185, type: !113)
!17396 = !DILocalVariable(name: "__i", scope: !17397, file: !2531, line: 187, type: !17051)
!17397 = distinct !DILexicalBlock(scope: !17388, file: !2531, line: 187, column: 2)
!17398 = !DILocalVariable(name: "__key", scope: !17397, file: !2531, line: 187, type: !17051)
!17399 = !DILocation(line: 0, scope: !17388)
!17400 = !DILocation(line: 0, scope: !17397)
!17401 = !DILocation(line: 0, scope: !17079, inlinedAt: !17402)
!17402 = distinct !DILocation(line: 187, column: 2, scope: !17397)
!17403 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17404)
!17404 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17402)
!17405 = !DILocation(line: 0, scope: !17088, inlinedAt: !17404)
!17406 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17402)
!17407 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17402)
!17408 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17402)
!17409 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17402)
!17410 = !DILocation(line: 188, column: 11, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17412, file: !2531, line: 187, column: 24)
!17412 = distinct !DILexicalBlock(scope: !17397, file: !2531, line: 187, column: 2)
!17413 = !DILocation(line: 0, scope: !17152, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 187, column: 2, scope: !17412)
!17415 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17414)
!17416 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17414)
!17417 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17414)
!17418 = !DILocation(line: 0, scope: !17166, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17414)
!17420 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17419)
!17421 = !DILocation(line: 191, column: 2, scope: !17388)
!17422 = distinct !DISubprogram(name: "timeout_rem", scope: !2531, file: !2531, line: 165, type: !17389, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17423)
!17423 = !{!17424, !17425, !17426}
!17424 = !DILocalVariable(name: "timeout", arg: 1, scope: !17422, file: !2531, line: 165, type: !17391)
!17425 = !DILocalVariable(name: "ticks", scope: !17422, file: !2531, line: 167, type: !113)
!17426 = !DILocalVariable(name: "t", scope: !17427, file: !2531, line: 173, type: !2504)
!17427 = distinct !DILexicalBlock(scope: !17422, file: !2531, line: 173, column: 2)
!17428 = !DILocation(line: 0, scope: !17422)
!17429 = !DILocation(line: 169, column: 6, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17422, file: !2531, line: 169, column: 6)
!17431 = !DILocation(line: 169, column: 6, scope: !17422)
!17432 = !DILocation(line: 173, column: 28, scope: !17427)
!17433 = !DILocation(line: 0, scope: !17427)
!17434 = !DILocation(line: 173, column: 39, scope: !17435)
!17435 = distinct !DILexicalBlock(scope: !17427, file: !2531, line: 173, column: 2)
!17436 = !DILocation(line: 173, column: 2, scope: !17427)
!17437 = !DILocation(line: 174, column: 15, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17435, file: !2531, line: 173, column: 61)
!17439 = !DILocation(line: 174, column: 9, scope: !17438)
!17440 = !DILocation(line: 175, column: 15, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17438, file: !2531, line: 175, column: 7)
!17442 = !DILocation(line: 175, column: 7, scope: !17438)
!17443 = !DILocation(line: 173, column: 52, scope: !17435)
!17444 = distinct !{!17444, !17436, !17445}
!17445 = !DILocation(line: 178, column: 2, scope: !17427)
!17446 = !DILocation(line: 180, column: 17, scope: !17422)
!17447 = !DILocation(line: 180, column: 15, scope: !17422)
!17448 = !DILocation(line: 180, column: 2, scope: !17422)
!17449 = !DILocation(line: 181, column: 1, scope: !17422)
!17450 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13463, file: !13463, line: 35, type: !17451, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17453)
!17451 = !DISubroutineType(types: !17452)
!17452 = !{!146, !17391}
!17453 = !{!17454}
!17454 = !DILocalVariable(name: "to", arg: 1, scope: !17450, file: !13463, line: 35, type: !17391)
!17455 = !DILocation(line: 0, scope: !17450)
!17456 = !DILocation(line: 37, column: 35, scope: !17450)
!17457 = !DILocation(line: 37, column: 10, scope: !17450)
!17458 = !DILocation(line: 37, column: 9, scope: !17450)
!17459 = !DILocation(line: 37, column: 2, scope: !17450)
!17460 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2531, file: !2531, line: 194, type: !17389, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17461)
!17461 = !{!17462, !17463, !17464, !17466}
!17462 = !DILocalVariable(name: "timeout", arg: 1, scope: !17460, file: !2531, line: 194, type: !17391)
!17463 = !DILocalVariable(name: "ticks", scope: !17460, file: !2531, line: 196, type: !113)
!17464 = !DILocalVariable(name: "__i", scope: !17465, file: !2531, line: 198, type: !17051)
!17465 = distinct !DILexicalBlock(scope: !17460, file: !2531, line: 198, column: 2)
!17466 = !DILocalVariable(name: "__key", scope: !17465, file: !2531, line: 198, type: !17051)
!17467 = !DILocation(line: 0, scope: !17460)
!17468 = !DILocation(line: 0, scope: !17465)
!17469 = !DILocation(line: 0, scope: !17079, inlinedAt: !17470)
!17470 = distinct !DILocation(line: 198, column: 2, scope: !17465)
!17471 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17470)
!17473 = !DILocation(line: 0, scope: !17088, inlinedAt: !17472)
!17474 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17470)
!17475 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17470)
!17476 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17470)
!17477 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17470)
!17478 = !DILocation(line: 199, column: 11, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !2531, line: 198, column: 24)
!17480 = distinct !DILexicalBlock(scope: !17465, file: !2531, line: 198, column: 2)
!17481 = !DILocation(line: 199, column: 23, scope: !17479)
!17482 = !DILocation(line: 0, scope: !17152, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 198, column: 2, scope: !17480)
!17484 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17483)
!17485 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17483)
!17486 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17483)
!17487 = !DILocation(line: 0, scope: !17166, inlinedAt: !17488)
!17488 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17483)
!17489 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17488)
!17490 = !DILocation(line: 199, column: 21, scope: !17479)
!17491 = !DILocation(line: 202, column: 2, scope: !17460)
!17492 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2531, file: !2531, line: 205, type: !17185, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17493)
!17493 = !{!17494, !17495, !17497}
!17494 = !DILocalVariable(name: "ret", scope: !17492, file: !2531, line: 207, type: !362)
!17495 = !DILocalVariable(name: "__i", scope: !17496, file: !2531, line: 209, type: !17051)
!17496 = distinct !DILexicalBlock(scope: !17492, file: !2531, line: 209, column: 2)
!17497 = !DILocalVariable(name: "__key", scope: !17496, file: !2531, line: 209, type: !17051)
!17498 = !DILocation(line: 0, scope: !17492)
!17499 = !DILocation(line: 0, scope: !17496)
!17500 = !DILocation(line: 0, scope: !17079, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 209, column: 2, scope: !17496)
!17502 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17503)
!17503 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17501)
!17504 = !DILocation(line: 0, scope: !17088, inlinedAt: !17503)
!17505 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17501)
!17506 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17501)
!17507 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17501)
!17508 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17501)
!17509 = !DILocation(line: 210, column: 9, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !2531, line: 209, column: 24)
!17511 = distinct !DILexicalBlock(scope: !17496, file: !2531, line: 209, column: 2)
!17512 = !DILocation(line: 0, scope: !17152, inlinedAt: !17513)
!17513 = distinct !DILocation(line: 209, column: 2, scope: !17511)
!17514 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17513)
!17515 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17513)
!17516 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17513)
!17517 = !DILocation(line: 0, scope: !17166, inlinedAt: !17518)
!17518 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17513)
!17519 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17518)
!17520 = !DILocation(line: 212, column: 2, scope: !17492)
!17521 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2531, file: !2531, line: 215, type: !10449, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17522)
!17522 = !{!17523, !17524, !17525, !17527, !17528, !17531, !17532}
!17523 = !DILocalVariable(name: "ticks", arg: 1, scope: !17521, file: !2531, line: 215, type: !362)
!17524 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17521, file: !2531, line: 215, type: !146)
!17525 = !DILocalVariable(name: "__i", scope: !17526, file: !2531, line: 217, type: !17051)
!17526 = distinct !DILexicalBlock(scope: !17521, file: !2531, line: 217, column: 2)
!17527 = !DILocalVariable(name: "__key", scope: !17526, file: !2531, line: 217, type: !17051)
!17528 = !DILocalVariable(name: "next_to", scope: !17529, file: !2531, line: 218, type: !118)
!17529 = distinct !DILexicalBlock(scope: !17530, file: !2531, line: 217, column: 24)
!17530 = distinct !DILexicalBlock(scope: !17526, file: !2531, line: 217, column: 2)
!17531 = !DILocalVariable(name: "sooner", scope: !17529, file: !2531, line: 219, type: !146)
!17532 = !DILocalVariable(name: "imminent", scope: !17529, file: !2531, line: 221, type: !146)
!17533 = !DILocation(line: 0, scope: !17521)
!17534 = !DILocation(line: 0, scope: !17526)
!17535 = !DILocation(line: 0, scope: !17079, inlinedAt: !17536)
!17536 = distinct !DILocation(line: 217, column: 2, scope: !17526)
!17537 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17538)
!17538 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17536)
!17539 = !DILocation(line: 0, scope: !17088, inlinedAt: !17538)
!17540 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17536)
!17541 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17536)
!17542 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17536)
!17543 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17536)
!17544 = !DILocation(line: 218, column: 17, scope: !17529)
!17545 = !DILocation(line: 0, scope: !17529)
!17546 = !DILocation(line: 221, column: 27, scope: !17529)
!17547 = !DILocation(line: 233, column: 17, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17529, file: !2531, line: 233, column: 7)
!17549 = !DILocation(line: 234, column: 26, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17548, file: !2531, line: 233, column: 56)
!17551 = !DILocation(line: 234, column: 4, scope: !17550)
!17552 = !DILocation(line: 235, column: 3, scope: !17550)
!17553 = !DILocation(line: 0, scope: !17152, inlinedAt: !17554)
!17554 = distinct !DILocation(line: 217, column: 2, scope: !17530)
!17555 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17554)
!17556 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17554)
!17557 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17554)
!17558 = !DILocation(line: 0, scope: !17166, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17554)
!17560 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17559)
!17561 = !DILocation(line: 237, column: 1, scope: !17521)
!17562 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2531, file: !2531, line: 239, type: !17563, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17565)
!17563 = !DISubroutineType(types: !17564)
!17564 = !{null, !362}
!17565 = !{!17566, !17567, !17568, !17570}
!17566 = !DILocalVariable(name: "ticks", arg: 1, scope: !17562, file: !2531, line: 239, type: !362)
!17567 = !DILocalVariable(name: "key", scope: !17562, file: !2531, line: 245, type: !17051)
!17568 = !DILocalVariable(name: "t", scope: !17569, file: !2531, line: 262, type: !2504)
!17569 = distinct !DILexicalBlock(scope: !17562, file: !2531, line: 261, column: 67)
!17570 = !DILocalVariable(name: "dt", scope: !17569, file: !2531, line: 263, type: !118)
!17571 = !DILocation(line: 0, scope: !17562)
!17572 = !DILocation(line: 242, column: 2, scope: !17562)
!17573 = !DILocation(line: 0, scope: !17079, inlinedAt: !17574)
!17574 = distinct !DILocation(line: 245, column: 25, scope: !17562)
!17575 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17576)
!17576 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17574)
!17577 = !DILocation(line: 0, scope: !17088, inlinedAt: !17576)
!17578 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17574)
!17579 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17574)
!17580 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17574)
!17581 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17574)
!17582 = !DILocation(line: 261, column: 9, scope: !17562)
!17583 = !DILocation(line: 261, column: 17, scope: !17562)
!17584 = !DILocation(line: 261, column: 25, scope: !17562)
!17585 = !DILocation(line: 261, column: 37, scope: !17562)
!17586 = !DILocation(line: 261, column: 47, scope: !17562)
!17587 = !DILocation(line: 261, column: 44, scope: !17562)
!17588 = !DILocation(line: 261, column: 2, scope: !17562)
!17589 = !DILocation(line: 0, scope: !17569)
!17590 = !DILocation(line: 263, column: 12, scope: !17569)
!17591 = !DILocation(line: 265, column: 16, scope: !17569)
!17592 = !DILocation(line: 265, column: 13, scope: !17569)
!17593 = !DILocation(line: 266, column: 13, scope: !17569)
!17594 = !DILocation(line: 267, column: 3, scope: !17569)
!17595 = !DILocation(line: 0, scope: !17152, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 269, column: 3, scope: !17569)
!17597 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17596)
!17598 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17596)
!17599 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17596)
!17600 = !DILocation(line: 0, scope: !17166, inlinedAt: !17601)
!17601 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17596)
!17602 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17601)
!17603 = !DILocation(line: 270, column: 6, scope: !17569)
!17604 = !DILocation(line: 270, column: 3, scope: !17569)
!17605 = !DILocation(line: 0, scope: !17079, inlinedAt: !17606)
!17606 = distinct !DILocation(line: 271, column: 9, scope: !17569)
!17607 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17608)
!17608 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17606)
!17609 = !DILocation(line: 0, scope: !17088, inlinedAt: !17608)
!17610 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17606)
!17611 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17606)
!17612 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17606)
!17613 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17606)
!17614 = !DILocation(line: 272, column: 22, scope: !17569)
!17615 = distinct !{!17615, !17588, !17616}
!17616 = !DILocation(line: 273, column: 2, scope: !17562)
!17617 = !DILocation(line: 276, column: 19, scope: !17618)
!17618 = distinct !DILexicalBlock(scope: !17619, file: !2531, line: 275, column: 23)
!17619 = distinct !DILexicalBlock(scope: !17562, file: !2531, line: 275, column: 6)
!17620 = !DILocation(line: 277, column: 2, scope: !17618)
!17621 = !DILocation(line: 279, column: 15, scope: !17562)
!17622 = !DILocation(line: 279, column: 12, scope: !17562)
!17623 = !DILocation(line: 280, column: 21, scope: !17562)
!17624 = !DILocation(line: 282, column: 24, scope: !17562)
!17625 = !DILocation(line: 282, column: 2, scope: !17562)
!17626 = !DILocation(line: 0, scope: !17152, inlinedAt: !17627)
!17627 = distinct !DILocation(line: 284, column: 2, scope: !17562)
!17628 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17627)
!17629 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17627)
!17630 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17627)
!17631 = !DILocation(line: 0, scope: !17166, inlinedAt: !17632)
!17632 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17627)
!17633 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17632)
!17634 = !DILocation(line: 285, column: 1, scope: !17562)
!17635 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2531, file: !2531, line: 287, type: !17636, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17638)
!17636 = !DISubroutineType(types: !17637)
!17637 = !{!115}
!17638 = !{!17639, !17640, !17642}
!17639 = !DILocalVariable(name: "t", scope: !17635, file: !2531, line: 289, type: !213)
!17640 = !DILocalVariable(name: "__i", scope: !17641, file: !2531, line: 291, type: !17051)
!17641 = distinct !DILexicalBlock(scope: !17635, file: !2531, line: 291, column: 2)
!17642 = !DILocalVariable(name: "__key", scope: !17641, file: !2531, line: 291, type: !17051)
!17643 = !DILocation(line: 0, scope: !17635)
!17644 = !DILocation(line: 0, scope: !17641)
!17645 = !DILocation(line: 0, scope: !17079, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 291, column: 2, scope: !17641)
!17647 = !DILocation(line: 55, column: 2, scope: !17088, inlinedAt: !17648)
!17648 = distinct !DILocation(line: 145, column: 10, scope: !17079, inlinedAt: !17646)
!17649 = !DILocation(line: 0, scope: !17088, inlinedAt: !17648)
!17650 = !DILocation(line: 148, column: 2, scope: !17096, inlinedAt: !17646)
!17651 = !DILocation(line: 148, column: 2, scope: !17097, inlinedAt: !17646)
!17652 = !DILocation(line: 148, column: 2, scope: !17100, inlinedAt: !17646)
!17653 = !DILocation(line: 160, column: 2, scope: !17079, inlinedAt: !17646)
!17654 = !DILocation(line: 292, column: 7, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17656, file: !2531, line: 291, column: 24)
!17656 = distinct !DILexicalBlock(scope: !17641, file: !2531, line: 291, column: 2)
!17657 = !DILocation(line: 292, column: 19, scope: !17655)
!17658 = !DILocation(line: 0, scope: !17152, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 291, column: 2, scope: !17656)
!17660 = !DILocation(line: 194, column: 2, scope: !17160, inlinedAt: !17659)
!17661 = !DILocation(line: 194, column: 2, scope: !17161, inlinedAt: !17659)
!17662 = !DILocation(line: 194, column: 2, scope: !17164, inlinedAt: !17659)
!17663 = !DILocation(line: 0, scope: !17166, inlinedAt: !17664)
!17664 = distinct !DILocation(line: 215, column: 2, scope: !17152, inlinedAt: !17659)
!17665 = !DILocation(line: 95, column: 2, scope: !17166, inlinedAt: !17664)
!17666 = !DILocation(line: 292, column: 17, scope: !17655)
!17667 = !DILocation(line: 294, column: 2, scope: !17635)
!17668 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2531, file: !2531, line: 297, type: !6497, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !2203)
!17669 = !DILocation(line: 300, column: 19, scope: !17668)
!17670 = !DILocation(line: 300, column: 9, scope: !17668)
!17671 = !DILocation(line: 300, column: 2, scope: !17668)
!17672 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2531, file: !2531, line: 306, type: !17636, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !2203)
!17673 = !DILocation(line: 308, column: 9, scope: !17672)
!17674 = !DILocation(line: 308, column: 2, scope: !17672)
!17675 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2531, file: !2531, line: 319, type: !6507, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17676)
!17676 = !{!17677, !17678, !17679, !17680}
!17677 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17675, file: !2531, line: 319, type: !156)
!17678 = !DILocalVariable(name: "start_cycles", scope: !17675, file: !2531, line: 328, type: !156)
!17679 = !DILocalVariable(name: "cycles_to_wait", scope: !17675, file: !2531, line: 331, type: !156)
!17680 = !DILocalVariable(name: "current_cycles", scope: !17681, file: !2531, line: 338, type: !156)
!17681 = distinct !DILexicalBlock(scope: !17682, file: !2531, line: 337, column: 11)
!17682 = distinct !DILexicalBlock(scope: !17683, file: !2531, line: 337, column: 2)
!17683 = distinct !DILexicalBlock(scope: !17675, file: !2531, line: 337, column: 2)
!17684 = !DILocation(line: 0, scope: !17675)
!17685 = !DILocation(line: 322, column: 19, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17675, file: !2531, line: 322, column: 6)
!17687 = !DILocation(line: 322, column: 6, scope: !17675)
!17688 = !DILocation(line: 328, column: 26, scope: !17675)
!17689 = !DILocation(line: 333, column: 43, scope: !17675)
!17690 = !DILocation(line: 337, column: 2, scope: !17675)
!17691 = !DILocation(line: 338, column: 29, scope: !17681)
!17692 = !DILocation(line: 0, scope: !17681)
!17693 = !DILocation(line: 341, column: 23, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17681, file: !2531, line: 341, column: 7)
!17695 = !DILocation(line: 341, column: 39, scope: !17694)
!17696 = !DILocation(line: 349, column: 1, scope: !17675)
!17697 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !220, file: !220, line: 1675, type: !6497, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !2203)
!17698 = !DILocation(line: 1677, column: 9, scope: !17697)
!17699 = !DILocation(line: 1677, column: 2, scope: !17697)
!17700 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17701, file: !17701, line: 24, type: !6497, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !2203)
!17701 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17702 = !DILocation(line: 26, column: 9, scope: !17700)
!17703 = !DILocation(line: 26, column: 2, scope: !17700)
!17704 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2531, file: !2531, line: 364, type: !17705, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !17707)
!17705 = !DISubroutineType(types: !17706)
!17706 = !{!213, !17041}
!17707 = !{!17708, !17709}
!17708 = !DILocalVariable(name: "timeout", arg: 1, scope: !17704, file: !2531, line: 364, type: !17041)
!17709 = !DILocalVariable(name: "dt", scope: !17704, file: !2531, line: 366, type: !113)
!17710 = !DILocation(line: 0, scope: !17704)
!17711 = !DILocation(line: 368, column: 6, scope: !17704)
!17712 = !DILocation(line: 371, column: 10, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17714, file: !2531, line: 370, column: 47)
!17714 = distinct !DILexicalBlock(scope: !17715, file: !2531, line: 370, column: 13)
!17715 = distinct !DILexicalBlock(scope: !17704, file: !2531, line: 368, column: 6)
!17716 = !DILocation(line: 371, column: 3, scope: !17713)
!17717 = !DILocation(line: 376, column: 58, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17719, file: !2531, line: 376, column: 7)
!17719 = distinct !DILexicalBlock(scope: !17714, file: !2531, line: 372, column: 9)
!17720 = !DILocation(line: 376, column: 7, scope: !17719)
!17721 = !DILocation(line: 376, column: 43, scope: !17718)
!17722 = !DILocation(line: 377, column: 4, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17718, file: !2531, line: 376, column: 64)
!17724 = !DILocation(line: 379, column: 10, scope: !17719)
!17725 = !DILocation(line: 379, column: 33, scope: !17719)
!17726 = !DILocation(line: 379, column: 31, scope: !17719)
!17727 = !DILocation(line: 379, column: 3, scope: !17719)
!17728 = !DILocation(line: 0, scope: !17715)
!17729 = !DILocation(line: 381, column: 1, scope: !17704)
!17730 = distinct !DISubprogram(name: "k_free", scope: !2548, file: !2548, line: 43, type: !6347, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17731)
!17731 = !{!17732, !17733}
!17732 = !DILocalVariable(name: "ptr", arg: 1, scope: !17730, file: !2548, line: 43, type: !117)
!17733 = !DILocalVariable(name: "heap_ref", scope: !17730, file: !2548, line: 45, type: !17734)
!17734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17735, size: 32)
!17735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!17736 = !DILocation(line: 0, scope: !17730)
!17737 = !DILocation(line: 47, column: 10, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17730, file: !2548, line: 47, column: 6)
!17739 = !DILocation(line: 47, column: 6, scope: !17730)
!17740 = !DILocation(line: 49, column: 9, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17738, file: !2548, line: 47, column: 19)
!17742 = !DILocation(line: 53, column: 15, scope: !17741)
!17743 = !DILocation(line: 53, column: 3, scope: !17741)
!17744 = !DILocation(line: 56, column: 2, scope: !17741)
!17745 = !DILocation(line: 57, column: 1, scope: !17730)
!17746 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2548, file: !2548, line: 64, type: !17747, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17749)
!17747 = !DISubroutineType(types: !17748)
!17748 = !{!117, !315, !315}
!17749 = !{!17750, !17751, !17752}
!17750 = !DILocalVariable(name: "align", arg: 1, scope: !17746, file: !2548, line: 64, type: !315)
!17751 = !DILocalVariable(name: "size", arg: 2, scope: !17746, file: !2548, line: 64, type: !315)
!17752 = !DILocalVariable(name: "ret", scope: !17746, file: !2548, line: 75, type: !117)
!17753 = !DILocation(line: 0, scope: !17746)
!17754 = !DILocation(line: 66, column: 2, scope: !17755)
!17755 = distinct !DILexicalBlock(scope: !17756, file: !2548, line: 66, column: 2)
!17756 = distinct !DILexicalBlock(scope: !17746, file: !2548, line: 66, column: 2)
!17757 = !DILocation(line: 66, column: 2, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17755, file: !2548, line: 66, column: 2)
!17759 = !DILocation(line: 70, column: 2, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !2548, line: 70, column: 2)
!17761 = distinct !DILexicalBlock(scope: !17746, file: !2548, line: 70, column: 2)
!17762 = !DILocation(line: 70, column: 2, scope: !17761)
!17763 = !DILocation(line: 70, column: 2, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17760, file: !2548, line: 70, column: 2)
!17765 = !DILocation(line: 75, column: 14, scope: !17746)
!17766 = !DILocation(line: 79, column: 2, scope: !17746)
!17767 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2548, file: !2548, line: 12, type: !17768, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17770)
!17768 = !DISubroutineType(types: !17769)
!17769 = !{!117, !17735, !315, !315}
!17770 = !{!17771, !17772, !17773, !17774, !17775, !17776}
!17771 = !DILocalVariable(name: "heap", arg: 1, scope: !17767, file: !2548, line: 12, type: !17735)
!17772 = !DILocalVariable(name: "align", arg: 2, scope: !17767, file: !2548, line: 12, type: !315)
!17773 = !DILocalVariable(name: "size", arg: 3, scope: !17767, file: !2548, line: 12, type: !315)
!17774 = !DILocalVariable(name: "mem", scope: !17767, file: !2548, line: 14, type: !117)
!17775 = !DILocalVariable(name: "heap_ref", scope: !17767, file: !2548, line: 15, type: !17734)
!17776 = !DILocalVariable(name: "__align", scope: !17767, file: !2548, line: 16, type: !315)
!17777 = !DILocation(line: 0, scope: !17767)
!17778 = !DILocation(line: 24, column: 6, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17767, file: !2548, line: 24, column: 6)
!17780 = !DILocation(line: 24, column: 6, scope: !17767)
!17781 = !DILocation(line: 27, column: 18, scope: !17767)
!17782 = !DILocation(line: 29, column: 44, scope: !17767)
!17783 = !DILocation(line: 29, column: 8, scope: !17767)
!17784 = !DILocation(line: 30, column: 10, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17767, file: !2548, line: 30, column: 6)
!17786 = !DILocation(line: 30, column: 6, scope: !17767)
!17787 = !DILocation(line: 34, column: 13, scope: !17767)
!17788 = !DILocation(line: 35, column: 12, scope: !17767)
!17789 = !DILocation(line: 36, column: 8, scope: !17767)
!17790 = !DILocation(line: 37, column: 2, scope: !17791)
!17791 = distinct !DILexicalBlock(scope: !17792, file: !2548, line: 37, column: 2)
!17792 = distinct !DILexicalBlock(scope: !17767, file: !2548, line: 37, column: 2)
!17793 = !DILocation(line: 37, column: 2, scope: !17792)
!17794 = !DILocation(line: 37, column: 2, scope: !17795)
!17795 = distinct !DILexicalBlock(scope: !17791, file: !2548, line: 37, column: 2)
!17796 = !DILocation(line: 41, column: 1, scope: !17767)
!17797 = distinct !DISubprogram(name: "size_add_overflow", scope: !17798, file: !17798, line: 47, type: !17799, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17801)
!17798 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17799 = !DISubroutineType(types: !17800)
!17800 = !{!146, !315, !315, !2688}
!17801 = !{!17802, !17803, !17804}
!17802 = !DILocalVariable(name: "a", arg: 1, scope: !17797, file: !17798, line: 47, type: !315)
!17803 = !DILocalVariable(name: "b", arg: 2, scope: !17797, file: !17798, line: 47, type: !315)
!17804 = !DILocalVariable(name: "result", arg: 3, scope: !17797, file: !17798, line: 47, type: !2688)
!17805 = !DILocation(line: 0, scope: !17797)
!17806 = !DILocation(line: 49, column: 9, scope: !17797)
!17807 = !DILocation(line: 49, column: 2, scope: !17797)
!17808 = distinct !DISubprogram(name: "k_malloc", scope: !2548, file: !2548, line: 82, type: !14170, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17809)
!17809 = !{!17810, !17811}
!17810 = !DILocalVariable(name: "size", arg: 1, scope: !17808, file: !2548, line: 82, type: !315)
!17811 = !DILocalVariable(name: "ret", scope: !17808, file: !2548, line: 86, type: !117)
!17812 = !DILocation(line: 0, scope: !17808)
!17813 = !DILocation(line: 86, column: 14, scope: !17808)
!17814 = !DILocation(line: 90, column: 2, scope: !17808)
!17815 = distinct !DISubprogram(name: "k_calloc", scope: !2548, file: !2548, line: 93, type: !17747, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17816)
!17816 = !{!17817, !17818, !17819, !17820}
!17817 = !DILocalVariable(name: "nmemb", arg: 1, scope: !17815, file: !2548, line: 93, type: !315)
!17818 = !DILocalVariable(name: "size", arg: 2, scope: !17815, file: !2548, line: 93, type: !315)
!17819 = !DILocalVariable(name: "ret", scope: !17815, file: !2548, line: 95, type: !117)
!17820 = !DILocalVariable(name: "bounds", scope: !17815, file: !2548, line: 96, type: !315)
!17821 = !DILocation(line: 0, scope: !17815)
!17822 = !DILocation(line: 96, column: 2, scope: !17815)
!17823 = !DILocation(line: 100, column: 6, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17815, file: !2548, line: 100, column: 6)
!17825 = !DILocation(line: 100, column: 6, scope: !17815)
!17826 = !DILocation(line: 106, column: 17, scope: !17815)
!17827 = !DILocation(line: 106, column: 8, scope: !17815)
!17828 = !DILocation(line: 107, column: 10, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17815, file: !2548, line: 107, column: 6)
!17830 = !DILocation(line: 107, column: 6, scope: !17815)
!17831 = !DILocation(line: 108, column: 9, scope: !17832)
!17832 = distinct !DILexicalBlock(scope: !17829, file: !2548, line: 107, column: 19)
!17833 = !DILocation(line: 109, column: 2, scope: !17832)
!17834 = !DILocation(line: 114, column: 1, scope: !17815)
!17835 = distinct !DISubprogram(name: "size_mul_overflow", scope: !17798, file: !17798, line: 105, type: !17799, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17836)
!17836 = !{!17837, !17838, !17839}
!17837 = !DILocalVariable(name: "a", arg: 1, scope: !17835, file: !17798, line: 105, type: !315)
!17838 = !DILocalVariable(name: "b", arg: 2, scope: !17835, file: !17798, line: 105, type: !315)
!17839 = !DILocalVariable(name: "result", arg: 3, scope: !17835, file: !17798, line: 105, type: !2688)
!17840 = !DILocation(line: 0, scope: !17835)
!17841 = !DILocation(line: 107, column: 9, scope: !17835)
!17842 = !DILocation(line: 107, column: 2, scope: !17835)
!17843 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2548, file: !2548, line: 116, type: !17844, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17916)
!17844 = !DISubroutineType(types: !17845)
!17845 = !{null, !17846}
!17846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17847, size: 32)
!17847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !17848)
!17848 = !{!17849, !17889, !17901, !17902, !17903, !17904, !17910, !17911}
!17849 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17847, file: !225, line: 247, baseType: !17850, size: 384)
!17850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !17851)
!17851 = !{!17852, !17863, !17865, !17866, !17867, !17876, !17877, !17878}
!17852 = !DIDerivedType(tag: DW_TAG_member, scope: !17850, file: !225, line: 60, baseType: !17853, size: 64)
!17853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17850, file: !225, line: 60, size: 64, elements: !17854)
!17854 = !{!17855, !17857}
!17855 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17853, file: !225, line: 61, baseType: !17856, size: 64)
!17856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2563)
!17857 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17853, file: !225, line: 62, baseType: !17858, size: 64)
!17858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !17859)
!17859 = !{!17860}
!17860 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17858, file: !251, line: 50, baseType: !17861, size: 64)
!17861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17862, size: 64, elements: !256)
!17862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17858, size: 32)
!17863 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17850, file: !225, line: 68, baseType: !17864, size: 32, offset: 64)
!17864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!17865 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17850, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!17866 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17850, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!17867 = !DIDerivedType(tag: DW_TAG_member, scope: !17850, file: !225, line: 90, baseType: !17868, size: 16, offset: 112)
!17868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17850, file: !225, line: 90, size: 16, elements: !17869)
!17869 = !{!17870, !17875}
!17870 = !DIDerivedType(tag: DW_TAG_member, scope: !17868, file: !225, line: 91, baseType: !17871, size: 16)
!17871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17868, file: !225, line: 91, size: 16, elements: !17872)
!17872 = !{!17873, !17874}
!17873 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17871, file: !225, line: 96, baseType: !275, size: 8)
!17874 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17871, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!17875 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17868, file: !225, line: 100, baseType: !279, size: 16)
!17876 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17850, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!17877 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17850, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!17878 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17850, file: !225, line: 131, baseType: !17879, size: 192, offset: 192)
!17879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !17880)
!17880 = !{!17881, !17882, !17888}
!17881 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17879, file: !261, line: 245, baseType: !17856, size: 64)
!17882 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17879, file: !261, line: 246, baseType: !17883, size: 32, offset: 64)
!17883 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !17884)
!17884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17885, size: 32)
!17885 = !DISubroutineType(types: !17886)
!17886 = !{null, !17887}
!17887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17879, size: 32)
!17888 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17879, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!17889 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17847, file: !225, line: 250, baseType: !17890, size: 288, offset: 384)
!17890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !17891)
!17891 = !{!17892, !17893, !17894, !17895, !17896, !17897, !17898, !17899, !17900}
!17892 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17890, file: !296, line: 26, baseType: !156, size: 32)
!17893 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17890, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!17894 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17890, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!17895 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17890, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!17896 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17890, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!17897 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17890, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!17898 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17890, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!17899 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17890, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!17900 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17890, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!17901 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17847, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!17902 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17847, file: !225, line: 256, baseType: !2558, size: 64, offset: 704)
!17903 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17847, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!17904 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17847, file: !225, line: 300, baseType: !17905, size: 96, offset: 800)
!17905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !17906)
!17906 = !{!17907, !17908, !17909}
!17907 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17905, file: !225, line: 153, baseType: !22, size: 32)
!17908 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17905, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!17909 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17905, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!17910 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17847, file: !225, line: 325, baseType: !17735, size: 32, offset: 896)
!17911 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17847, file: !225, line: 343, baseType: !17912, size: 64, offset: 928)
!17912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !17913)
!17913 = !{!17914, !17915}
!17914 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17912, file: !296, line: 63, baseType: !156, size: 32)
!17915 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17912, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!17916 = !{!17917}
!17917 = !DILocalVariable(name: "thread", arg: 1, scope: !17843, file: !2548, line: 116, type: !17846)
!17918 = !DILocation(line: 0, scope: !17843)
!17919 = !DILocation(line: 118, column: 10, scope: !17843)
!17920 = !DILocation(line: 118, column: 24, scope: !17843)
!17921 = !DILocation(line: 119, column: 1, scope: !17843)
!17922 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2548, file: !2548, line: 124, type: !17747, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !17923)
!17923 = !{!17924, !17925, !17926, !17927}
!17924 = !DILocalVariable(name: "align", arg: 1, scope: !17922, file: !2548, line: 124, type: !315)
!17925 = !DILocalVariable(name: "size", arg: 2, scope: !17922, file: !2548, line: 124, type: !315)
!17926 = !DILocalVariable(name: "ret", scope: !17922, file: !2548, line: 126, type: !117)
!17927 = !DILocalVariable(name: "heap", scope: !17922, file: !2548, line: 127, type: !17735)
!17928 = !DILocation(line: 0, scope: !17922)
!17929 = !DILocation(line: 129, column: 6, scope: !17930)
!17930 = distinct !DILexicalBlock(scope: !17922, file: !2548, line: 129, column: 6)
!17931 = !DILocation(line: 129, column: 6, scope: !17922)
!17932 = !DILocation(line: 132, column: 10, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17930, file: !2548, line: 131, column: 9)
!17934 = !DILocation(line: 132, column: 20, scope: !17933)
!17935 = !DILocation(line: 135, column: 11, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17922, file: !2548, line: 135, column: 6)
!17937 = !DILocation(line: 135, column: 6, scope: !17922)
!17938 = !DILocation(line: 136, column: 9, scope: !17939)
!17939 = distinct !DILexicalBlock(scope: !17936, file: !2548, line: 135, column: 20)
!17940 = !DILocation(line: 137, column: 2, scope: !17939)
!17941 = !DILocation(line: 0, scope: !17936)
!17942 = !DILocation(line: 141, column: 2, scope: !17922)
!17943 = distinct !DISubprogram(name: "main", scope: !17944, file: !17944, line: 27, type: !365, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3242, retainedNodes: !2203)
!17944 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17945 = !DILocation(line: 38, column: 2, scope: !17946, inlinedAt: !17947)
!17946 = distinct !DISubprogram(name: "arch_nop", scope: !17701, file: !17701, line: 36, type: !365, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3242, retainedNodes: !2203)
!17947 = distinct !DILocation(line: 31, column: 2, scope: !17943)
!17948 = !{i64 2282011}
!17949 = !DILocation(line: 36, column: 1, scope: !17943)
!17950 = distinct !DISubprogram(name: "boot_banner", scope: !17951, file: !17951, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3244, retainedNodes: !2203)
!17951 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17952 = !DILocation(line: 34, column: 2, scope: !17950)
!17953 = !DILocation(line: 36, column: 1, scope: !17950)
!17954 = distinct !DISubprogram(name: "statics_init", scope: !2604, file: !2604, line: 21, type: !2610, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !17955)
!17955 = !{!17956, !17957}
!17956 = !DILocalVariable(name: "unused", arg: 1, scope: !17954, file: !2604, line: 21, type: !2612)
!17957 = !DILocalVariable(name: "h", scope: !17958, file: !2604, line: 24, type: !17959)
!17958 = distinct !DILexicalBlock(scope: !17954, file: !2604, line: 24, column: 2)
!17959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17960, size: 32)
!17960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !17961)
!17961 = !{!17962, !17968, !17974}
!17962 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17960, file: !220, line: 5074, baseType: !17963, size: 96)
!17963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !17964)
!17964 = !{!17965, !17966, !17967}
!17965 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17963, file: !324, line: 57, baseType: !327, size: 32)
!17966 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17963, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!17967 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17963, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!17968 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17960, file: !220, line: 5075, baseType: !17969, size: 64, offset: 96)
!17969 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !17970)
!17970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !17971)
!17971 = !{!17972}
!17972 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17970, file: !261, line: 232, baseType: !17973, size: 64)
!17973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2590)
!17974 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17960, file: !220, line: 5076, baseType: !17975, size: 32, offset: 160)
!17975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !17976)
!17976 = !{!17977}
!17977 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !17975, file: !334, line: 52, baseType: !22, size: 32)
!17978 = !DILocation(line: 0, scope: !17954)
!17979 = !DILocation(line: 0, scope: !17958)
!17980 = !DILocation(line: 24, column: 2, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17982, file: !2604, line: 24, column: 2)
!17982 = distinct !DILexicalBlock(scope: !17983, file: !2604, line: 24, column: 2)
!17983 = distinct !DILexicalBlock(scope: !17958, file: !2604, line: 24, column: 2)
!17984 = !DILocation(line: 24, column: 2, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17986, file: !2604, line: 24, column: 2)
!17986 = distinct !DILexicalBlock(scope: !17981, file: !2604, line: 24, column: 2)
!17987 = !DILocation(line: 24, column: 2, scope: !17982)
!17988 = !DILocation(line: 24, column: 2, scope: !17958)
!17989 = !DILocation(line: 52, column: 2, scope: !17954)
!17990 = !DILocation(line: 49, column: 27, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17992, file: !2604, line: 48, column: 3)
!17992 = distinct !DILexicalBlock(scope: !17983, file: !2604, line: 24, column: 36)
!17993 = !DILocation(line: 49, column: 45, scope: !17991)
!17994 = !DILocation(line: 49, column: 4, scope: !17991)
!17995 = !DILocation(line: 24, column: 2, scope: !17983)
!17996 = !DILocation(line: 24, column: 2, scope: !17986)
!17997 = distinct !{!17997, !17988, !17998}
!17998 = !DILocation(line: 51, column: 2, scope: !17958)
!17999 = distinct !DISubprogram(name: "k_heap_init", scope: !2604, file: !2604, line: 13, type: !18000, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18002)
!18000 = !DISubroutineType(types: !18001)
!18001 = !{null, !17959, !117, !315}
!18002 = !{!18003, !18004, !18005}
!18003 = !DILocalVariable(name: "h", arg: 1, scope: !17999, file: !2604, line: 13, type: !17959)
!18004 = !DILocalVariable(name: "mem", arg: 2, scope: !17999, file: !2604, line: 13, type: !117)
!18005 = !DILocalVariable(name: "bytes", arg: 3, scope: !17999, file: !2604, line: 13, type: !315)
!18006 = !DILocation(line: 0, scope: !17999)
!18007 = !DILocation(line: 15, column: 19, scope: !17999)
!18008 = !DILocation(line: 15, column: 2, scope: !17999)
!18009 = !DILocation(line: 16, column: 20, scope: !17999)
!18010 = !DILocation(line: 16, column: 2, scope: !17999)
!18011 = !DILocation(line: 19, column: 1, scope: !17999)
!18012 = distinct !DISubprogram(name: "z_waitq_init", scope: !13395, file: !13395, line: 47, type: !18013, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18016)
!18013 = !DISubroutineType(types: !18014)
!18014 = !{null, !18015}
!18015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17969, size: 32)
!18016 = !{!18017}
!18017 = !DILocalVariable(name: "w", arg: 1, scope: !18012, file: !13395, line: 47, type: !18015)
!18018 = !DILocation(line: 0, scope: !18012)
!18019 = !DILocation(line: 49, column: 21, scope: !18012)
!18020 = !DILocation(line: 49, column: 2, scope: !18012)
!18021 = !DILocation(line: 50, column: 1, scope: !18012)
!18022 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !18023, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18026)
!18023 = !DISubroutineType(types: !18024)
!18024 = !{null, !18025}
!18025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17973, size: 32)
!18026 = !{!18027}
!18027 = !DILocalVariable(name: "list", arg: 1, scope: !18022, file: !235, line: 197, type: !18025)
!18028 = !DILocation(line: 0, scope: !18022)
!18029 = !DILocation(line: 199, column: 8, scope: !18022)
!18030 = !DILocation(line: 199, column: 13, scope: !18022)
!18031 = !DILocation(line: 200, column: 8, scope: !18022)
!18032 = !DILocation(line: 200, column: 13, scope: !18022)
!18033 = !DILocation(line: 201, column: 1, scope: !18022)
!18034 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2604, file: !2604, line: 64, type: !18035, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18041)
!18035 = !DISubroutineType(types: !18036)
!18036 = !{!117, !17959, !315, !315, !18037}
!18037 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !18038)
!18038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !18039)
!18039 = !{!18040}
!18040 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18038, file: !114, line: 66, baseType: !113, size: 64)
!18041 = !{!18042, !18043, !18044, !18045, !18046, !18047, !18048, !18049, !18054}
!18042 = !DILocalVariable(name: "h", arg: 1, scope: !18034, file: !2604, line: 64, type: !17959)
!18043 = !DILocalVariable(name: "align", arg: 2, scope: !18034, file: !2604, line: 64, type: !315)
!18044 = !DILocalVariable(name: "bytes", arg: 3, scope: !18034, file: !2604, line: 64, type: !315)
!18045 = !DILocalVariable(name: "timeout", arg: 4, scope: !18034, file: !2604, line: 65, type: !18037)
!18046 = !DILocalVariable(name: "now", scope: !18034, file: !2604, line: 67, type: !115)
!18047 = !DILocalVariable(name: "end", scope: !18034, file: !2604, line: 67, type: !115)
!18048 = !DILocalVariable(name: "ret", scope: !18034, file: !2604, line: 68, type: !117)
!18049 = !DILocalVariable(name: "key", scope: !18034, file: !2604, line: 72, type: !18050)
!18050 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !18051)
!18051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !18052)
!18052 = !{!18053}
!18053 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18051, file: !334, line: 33, baseType: !118, size: 32)
!18054 = !DILocalVariable(name: "blocked_alloc", scope: !18034, file: !2604, line: 78, type: !146)
!18055 = !DILocation(line: 0, scope: !18034)
!18056 = !DILocation(line: 67, column: 21, scope: !18034)
!18057 = !DILocation(line: 70, column: 8, scope: !18034)
!18058 = !DILocation(line: 72, column: 41, scope: !18034)
!18059 = !DILocalVariable(name: "l", arg: 1, scope: !18060, file: !334, line: 136, type: !18063)
!18060 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !18061, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18064)
!18061 = !DISubroutineType(types: !18062)
!18062 = !{!18050, !18063}
!18063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17975, size: 32)
!18064 = !{!18059, !18065}
!18065 = !DILocalVariable(name: "k", scope: !18060, file: !334, line: 139, type: !18050)
!18066 = !DILocation(line: 0, scope: !18060, inlinedAt: !18067)
!18067 = distinct !DILocation(line: 72, column: 25, scope: !18034)
!18068 = !DILocation(line: 55, column: 2, scope: !18069, inlinedAt: !18073)
!18069 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6236, file: !6236, line: 42, type: !6237, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18070)
!18070 = !{!18071, !18072}
!18071 = !DILocalVariable(name: "key", scope: !18069, file: !6236, line: 44, type: !32)
!18072 = !DILocalVariable(name: "tmp", scope: !18069, file: !6236, line: 53, type: !32)
!18073 = distinct !DILocation(line: 145, column: 10, scope: !18060, inlinedAt: !18067)
!18074 = !{i64 2281154}
!18075 = !DILocation(line: 0, scope: !18069, inlinedAt: !18073)
!18076 = !DILocation(line: 148, column: 2, scope: !18077, inlinedAt: !18067)
!18077 = distinct !DILexicalBlock(scope: !18078, file: !334, line: 148, column: 2)
!18078 = distinct !DILexicalBlock(scope: !18060, file: !334, line: 148, column: 2)
!18079 = !DILocation(line: 148, column: 2, scope: !18078, inlinedAt: !18067)
!18080 = !DILocation(line: 148, column: 2, scope: !18081, inlinedAt: !18067)
!18081 = distinct !DILexicalBlock(scope: !18077, file: !334, line: 148, column: 2)
!18082 = !DILocation(line: 160, column: 2, scope: !18060, inlinedAt: !18067)
!18083 = !DILocation(line: 1031, column: 3, scope: !18084, inlinedAt: !18087)
!18084 = distinct !DISubprogram(name: "__get_IPSR", scope: !6410, file: !6410, line: 1027, type: !6497, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18085)
!18085 = !{!18086}
!18086 = !DILocalVariable(name: "result", scope: !18084, file: !6410, line: 1029, type: !156)
!18087 = distinct !DILocation(line: 48, column: 10, scope: !18088, inlinedAt: !18089)
!18088 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7236, file: !7236, line: 46, type: !7237, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !2203)
!18089 = distinct !DILocation(line: 76, column: 2, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !2604, line: 76, column: 2)
!18091 = distinct !DILexicalBlock(scope: !18034, file: !2604, line: 76, column: 2)
!18092 = !{i64 3727588}
!18093 = !DILocation(line: 0, scope: !18084, inlinedAt: !18087)
!18094 = !DILocation(line: 48, column: 9, scope: !18088, inlinedAt: !18089)
!18095 = !DILocation(line: 76, column: 2, scope: !18090)
!18096 = !DILocation(line: 81, column: 9, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18034, file: !2604, line: 80, column: 22)
!18098 = !DILocation(line: 83, column: 9, scope: !18097)
!18099 = !DILocation(line: 85, column: 12, scope: !18100)
!18100 = distinct !DILexicalBlock(scope: !18097, file: !2604, line: 84, column: 7)
!18101 = !DILocation(line: 85, column: 21, scope: !18100)
!18102 = !DILocation(line: 76, column: 2, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18090, file: !2604, line: 76, column: 2)
!18104 = !DILocation(line: 85, column: 30, scope: !18100)
!18105 = !DILocation(line: 85, column: 37, scope: !18100)
!18106 = !DILocation(line: 84, column: 7, scope: !18097)
!18107 = !DILocation(line: 99, column: 10, scope: !18097)
!18108 = !DILocation(line: 0, scope: !18060, inlinedAt: !18109)
!18109 = distinct !DILocation(line: 101, column: 9, scope: !18097)
!18110 = !DILocation(line: 55, column: 2, scope: !18069, inlinedAt: !18111)
!18111 = distinct !DILocation(line: 145, column: 10, scope: !18060, inlinedAt: !18109)
!18112 = !DILocation(line: 0, scope: !18069, inlinedAt: !18111)
!18113 = !DILocation(line: 148, column: 2, scope: !18077, inlinedAt: !18109)
!18114 = !DILocation(line: 148, column: 2, scope: !18078, inlinedAt: !18109)
!18115 = !DILocation(line: 148, column: 2, scope: !18081, inlinedAt: !18109)
!18116 = !DILocation(line: 160, column: 2, scope: !18060, inlinedAt: !18109)
!18117 = distinct !{!18117, !18118, !18119}
!18118 = !DILocation(line: 80, column: 2, scope: !18034)
!18119 = !DILocation(line: 102, column: 2, scope: !18034)
!18120 = !DILocalVariable(name: "key", arg: 2, scope: !18121, file: !334, line: 190, type: !18050)
!18121 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !18122, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18124)
!18122 = !DISubroutineType(types: !18123)
!18123 = !{null, !18063, !18050}
!18124 = !{!18125, !18120}
!18125 = !DILocalVariable(name: "l", arg: 1, scope: !18121, file: !334, line: 189, type: !18063)
!18126 = !DILocation(line: 0, scope: !18121, inlinedAt: !18127)
!18127 = distinct !DILocation(line: 106, column: 2, scope: !18034)
!18128 = !DILocation(line: 194, column: 2, scope: !18129, inlinedAt: !18127)
!18129 = distinct !DILexicalBlock(scope: !18130, file: !334, line: 194, column: 2)
!18130 = distinct !DILexicalBlock(scope: !18121, file: !334, line: 194, column: 2)
!18131 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18127)
!18132 = !DILocation(line: 194, column: 2, scope: !18133, inlinedAt: !18127)
!18133 = distinct !DILexicalBlock(scope: !18129, file: !334, line: 194, column: 2)
!18134 = !DILocalVariable(name: "key", arg: 1, scope: !18135, file: !6236, line: 84, type: !32)
!18135 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6236, file: !6236, line: 84, type: !6247, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18136)
!18136 = !{!18134}
!18137 = !DILocation(line: 0, scope: !18135, inlinedAt: !18138)
!18138 = distinct !DILocation(line: 215, column: 2, scope: !18121, inlinedAt: !18127)
!18139 = !DILocation(line: 95, column: 2, scope: !18135, inlinedAt: !18138)
!18140 = !{i64 2281971}
!18141 = !DILocation(line: 107, column: 2, scope: !18034)
!18142 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2604, file: !2604, line: 110, type: !18143, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18145)
!18143 = !DISubroutineType(types: !18144)
!18144 = !{!117, !17959, !315, !18037}
!18145 = !{!18146, !18147, !18148, !18149}
!18146 = !DILocalVariable(name: "h", arg: 1, scope: !18142, file: !2604, line: 110, type: !17959)
!18147 = !DILocalVariable(name: "bytes", arg: 2, scope: !18142, file: !2604, line: 110, type: !315)
!18148 = !DILocalVariable(name: "timeout", arg: 3, scope: !18142, file: !2604, line: 110, type: !18037)
!18149 = !DILocalVariable(name: "ret", scope: !18142, file: !2604, line: 114, type: !117)
!18150 = !DILocation(line: 0, scope: !18142)
!18151 = !DILocation(line: 114, column: 14, scope: !18142)
!18152 = !DILocation(line: 118, column: 2, scope: !18142)
!18153 = distinct !DISubprogram(name: "k_heap_free", scope: !2604, file: !2604, line: 121, type: !18154, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18156)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{null, !17959, !117}
!18156 = !{!18157, !18158, !18159}
!18157 = !DILocalVariable(name: "h", arg: 1, scope: !18153, file: !2604, line: 121, type: !17959)
!18158 = !DILocalVariable(name: "mem", arg: 2, scope: !18153, file: !2604, line: 121, type: !117)
!18159 = !DILocalVariable(name: "key", scope: !18153, file: !2604, line: 123, type: !18050)
!18160 = !DILocation(line: 0, scope: !18153)
!18161 = !DILocation(line: 123, column: 41, scope: !18153)
!18162 = !DILocation(line: 0, scope: !18060, inlinedAt: !18163)
!18163 = distinct !DILocation(line: 123, column: 25, scope: !18153)
!18164 = !DILocation(line: 55, column: 2, scope: !18069, inlinedAt: !18165)
!18165 = distinct !DILocation(line: 145, column: 10, scope: !18060, inlinedAt: !18163)
!18166 = !DILocation(line: 0, scope: !18069, inlinedAt: !18165)
!18167 = !DILocation(line: 148, column: 2, scope: !18077, inlinedAt: !18163)
!18168 = !DILocation(line: 148, column: 2, scope: !18078, inlinedAt: !18163)
!18169 = !DILocation(line: 148, column: 2, scope: !18081, inlinedAt: !18163)
!18170 = !DILocation(line: 160, column: 2, scope: !18060, inlinedAt: !18163)
!18171 = !DILocation(line: 125, column: 20, scope: !18153)
!18172 = !DILocation(line: 125, column: 2, scope: !18153)
!18173 = !DILocation(line: 128, column: 60, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18153, file: !2604, line: 128, column: 6)
!18175 = !DILocation(line: 128, column: 43, scope: !18174)
!18176 = !DILocation(line: 128, column: 68, scope: !18174)
!18177 = !DILocation(line: 128, column: 6, scope: !18153)
!18178 = !DILocation(line: 129, column: 3, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18174, file: !2604, line: 128, column: 74)
!18180 = !DILocation(line: 130, column: 2, scope: !18179)
!18181 = !DILocation(line: 0, scope: !18121, inlinedAt: !18182)
!18182 = distinct !DILocation(line: 131, column: 3, scope: !18183)
!18183 = distinct !DILexicalBlock(scope: !18174, file: !2604, line: 130, column: 9)
!18184 = !DILocation(line: 194, column: 2, scope: !18129, inlinedAt: !18182)
!18185 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18182)
!18186 = !DILocation(line: 194, column: 2, scope: !18133, inlinedAt: !18182)
!18187 = !DILocation(line: 0, scope: !18135, inlinedAt: !18188)
!18188 = distinct !DILocation(line: 215, column: 2, scope: !18121, inlinedAt: !18182)
!18189 = !DILocation(line: 95, column: 2, scope: !18135, inlinedAt: !18188)
!18190 = !DILocation(line: 133, column: 1, scope: !18153)
