; ModuleID = 'build/96b_stm32_sensor_mez/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236733 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236713 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236703 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236803 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236793 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236783 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236773 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236763 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236753 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236743 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238100 to i8*), void (i8*)* inttoptr (i32 134236723 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.104 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !801
@.str.4.100 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !762
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !745
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.100, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !718
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !788
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !790
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !792
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !794
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !796
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !837
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !935
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !924
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !976
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !826
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1042
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1320
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1221
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !824
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1322
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1335
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1337
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1339
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1306
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1304
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1256
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1341
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1310
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1308
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1343
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1314
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1312
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1345
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1318
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1316
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1274
@.str.8.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.121 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.117 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.120 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.116 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.118 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.119 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1347
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !834
@.str.1.133 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1527
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1582
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1519
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1584
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.133, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1492
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1494
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !832
@.str.2.140 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1590
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1521
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1600
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.140, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1503
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1505
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !830
@.str.3.141 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1602
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1523
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1612
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.141, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1509
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1511
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !828
@.str.4.144 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1614
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1525
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1624
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.144, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1515
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1517
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1571
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1574
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1576
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1579
@.str.5.135 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.136 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.137 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.138 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.139 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.147 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.149 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.150 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !908
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1592
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1594
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1596
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1598
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1604
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1606
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1608
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1610
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1616
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1618
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1620
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1622
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1631
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1742
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1744
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1740
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1735
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1709
@.str.154 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.155 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.156 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.157 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.158 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.159 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1746
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1219
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1254
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1272
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1836
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1880
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1883
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1890
@.str.191 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.195 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.196 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.197 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.201 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.202 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.203 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.204 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.205 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.200 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.199 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.201, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.202, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.203, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.204, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.205, i32 0, i32 0)], align 4
@.str.207 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1897
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2122
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2110
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2117
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2129
@.str.5.213 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2134
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.217 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.224, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.225, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.226, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.227, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.221, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.228, i32 0, i32 0)], align 4, !dbg !2164
@.str.222 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.223 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.224 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.225 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.226 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.227 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.221 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.228 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2279
@.str.8.220 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.231 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.232 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.233 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.234 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.238 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.239 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.242 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.243 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.252 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.253 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.254 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.259 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.260 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.261 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.262 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.263 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2292
@.str.4.271 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.264 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.265 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.266 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.267 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.268 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2403
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2514
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2517
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2519
@.str.272 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.294 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.279 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.301 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.313 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.282 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.308 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.278 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.318 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.319 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.327 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.328 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.329 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.332 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.273 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.274 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.275 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.276 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.277 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.281 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.298 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.309 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2119
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2127
@.str.23.322 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.337 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2521
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.342 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.343 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.353 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.354 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.355 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.356 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2546
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2576
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2581
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1984
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2579
@.str.4.357 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.358 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.359 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.363 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.364 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.382 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3151 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3209, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3259, !srcloc !3260
  ret void, !dbg !3261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3268, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i8* undef, metadata !3269, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i8* undef, metadata !3270, metadata !DIExpression()), !dbg !3273
  %4 = ptrtoint i8* %0 to i32, !dbg !3274
  call void @llvm.dbg.value(metadata i32 %4, metadata !3272, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.value(metadata i32 0, metadata !3271, metadata !DIExpression()), !dbg !3273
  br label %5, !dbg !3275

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3271, metadata !DIExpression()), !dbg !3273
  tail call fastcc void @k_mutex_lock() #24, !dbg !3277
  %7 = load i32, i32* @count, align 4, !dbg !3280
  %8 = add nsw i32 %7, 1, !dbg !3280
  store i32 %8, i32* @count, align 4, !dbg !3280
  %9 = icmp eq i32 %8, 12, !dbg !3281
  br i1 %9, label %10, label %12, !dbg !3283

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3284
  tail call fastcc void @k_condvar_signal() #24, !dbg !3286
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3287
  %11 = load i32, i32* @count, align 4, !dbg !3288
  br label %12, !dbg !3289

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3288
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3290
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3291
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3292
  %14 = add nuw nsw i32 %6, 1, !dbg !3293
  call void @llvm.dbg.value(metadata i32 %14, metadata !3271, metadata !DIExpression()), !dbg !3273
  %15 = icmp eq i32 %14, 10, !dbg !3294
  br i1 %15, label %16, label %5, !dbg !3275, !llvm.loop !3295

16:                                               ; preds = %12
  ret void, !dbg !3297
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3298 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3309, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3308, metadata !DIExpression()), !dbg !3310
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3311, !srcloc !3313
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3314
  ret void, !dbg !3315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3316 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3321, metadata !DIExpression()), !dbg !3322
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3323, !srcloc !3325
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3326
  ret void, !dbg !3327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3328 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3332, metadata !DIExpression()), !dbg !3333
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3334, !srcloc !3336
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3337
  ret void, !dbg !3338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3339 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3343, metadata !DIExpression()), !dbg !3344
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3345, !srcloc !3347
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3348
  ret void, !dbg !3349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3352, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i8* undef, metadata !3353, metadata !DIExpression()), !dbg !3356
  call void @llvm.dbg.value(metadata i8* undef, metadata !3354, metadata !DIExpression()), !dbg !3356
  %4 = ptrtoint i8* %0 to i32, !dbg !3357
  call void @llvm.dbg.value(metadata i32 %4, metadata !3355, metadata !DIExpression()), !dbg !3356
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3358
  tail call fastcc void @k_mutex_lock() #24, !dbg !3359
  %5 = load i32, i32* @count, align 4, !dbg !3360
  %6 = icmp slt i32 %5, 12, !dbg !3361
  br i1 %6, label %7, label %12, !dbg !3362

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3363
  tail call fastcc void @k_condvar_wait() #24, !dbg !3365
  %9 = load i32, i32* @count, align 4, !dbg !3366
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3367
  %10 = load i32, i32* @count, align 4, !dbg !3360
  %11 = icmp slt i32 %10, 12, !dbg !3361
  br i1 %11, label %7, label %12, !dbg !3362, !llvm.loop !3368

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3370
  %13 = load i32, i32* @count, align 4, !dbg !3371
  %14 = add nsw i32 %13, 125, !dbg !3371
  store i32 %14, i32* @count, align 4, !dbg !3371
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3372
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3373
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3374
  ret void, !dbg !3375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3382, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3380, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3381, metadata !DIExpression()), !dbg !3383
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3384, !srcloc !3386
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3387
  ret void, !dbg !3388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3389 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3391, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i32 2, metadata !3392, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.value(metadata i32 3, metadata !3393, metadata !DIExpression()), !dbg !3395
  store i32 0, i32* @count, align 4, !dbg !3396
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3397
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3398
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3399
  call void @llvm.dbg.value(metadata i32 0, metadata !3394, metadata !DIExpression()), !dbg !3395
  br label %1, !dbg !3400

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3394, metadata !DIExpression()), !dbg !3395
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3402
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3405
  %4 = add nuw nsw i32 %2, 1, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %4, metadata !3394, metadata !DIExpression()), !dbg !3395
  %5 = icmp eq i32 %4, 3, !dbg !3407
  br i1 %5, label %6, label %1, !dbg !3400, !llvm.loop !3408

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3410
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3411
  ret void, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3423, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3424, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i32 1024, metadata !3425, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3426, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i8* %3, metadata !3427, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i8* null, metadata !3428, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i8* null, metadata !3429, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i32 10, metadata !3430, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i32 0, metadata !3431, metadata !DIExpression()), !dbg !3433
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3434, !srcloc !3436
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3437
  ret void, !dbg !3438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3439 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3444, metadata !DIExpression()), !dbg !3445
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3443, metadata !DIExpression()), !dbg !3445
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3446, !srcloc !3448
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3449
  ret void, !dbg !3450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3451 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %0, metadata !3462, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %1, metadata !3463, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %2, metadata !3464, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %3, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %0, metadata !3467, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %0, metadata !3468, metadata !DIExpression()), !dbg !3529
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3530
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3530
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3471, metadata !DIExpression()), !dbg !3531
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3532
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3532
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 0, metadata !3474, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 0, metadata !3475, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 0, metadata !3476, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 -1, metadata !3477, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 0, metadata !3480, metadata !DIExpression()), !dbg !3529
  %12 = and i32 %2, 4, !dbg !3534
  %13 = icmp eq i32 %12, 0, !dbg !3535
  call void @llvm.dbg.value(metadata i1 %13, metadata !3481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3529
  %14 = lshr i32 %2, 3, !dbg !3536
  %15 = and i32 %14, 7, !dbg !3536
  %16 = add nuw nsw i32 %15, 1, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %16, metadata !3482, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 0, metadata !3483, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %0, metadata !3484, metadata !DIExpression()), !dbg !3529
  %17 = ptrtoint i8* %0 to i32, !dbg !3538
  %18 = and i32 %17, 3, !dbg !3540
  %19 = icmp eq i32 %18, 0, !dbg !3540
  br i1 %19, label %20, label %320, !dbg !3541

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3542
  call void @llvm.dbg.value(metadata i8* %21, metadata !3468, metadata !DIExpression()), !dbg !3529
  %22 = icmp eq i8* %0, null, !dbg !3543
  %23 = and i32 %1, 7, !dbg !3545
  %24 = sub nuw nsw i32 8, %23, !dbg !3545
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3545
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3545
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %27, metadata !3463, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %26, metadata !3468, metadata !DIExpression()), !dbg !3529
  br i1 %22, label %33, label %28, !dbg !3546

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3548
  %30 = sub i32 4, %17, !dbg !3548
  %31 = add i32 %30, %29, !dbg !3549
  %32 = icmp ugt i32 %31, %27, !dbg !3550
  br i1 %32, label %320, label %33, !dbg !3551

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3552
  call void @llvm.dbg.value(metadata i8* %34, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %3, metadata !3479, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 4, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 4, metadata !3469, metadata !DIExpression()), !dbg !3529
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3553

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %42, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %43, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %44, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %45, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %72, metadata !3477, metadata !DIExpression()), !dbg !3529
  br i1 %46, label %73, label %47, !dbg !3554

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3555
  %49 = zext i1 %48 to i32, !dbg !3559
  %50 = add nsw i32 %72, %49, !dbg !3559
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3559
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %52, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %51, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %50, metadata !3477, metadata !DIExpression()), !dbg !3529
  br label %53, !dbg !3560

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %40, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %58, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %57, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %56, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %54, metadata !3477, metadata !DIExpression()), !dbg !3529
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %60, metadata !3465, metadata !DIExpression()), !dbg !3529
  %61 = load i8, i8* %60, align 1, !dbg !3563
  %62 = icmp eq i8 %61, 0, !dbg !3564
  br i1 %62, label %226, label %63, !dbg !3565, !llvm.loop !3566

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3554

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3569

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3480, metadata !DIExpression()), !dbg !3529
  %75 = add nsw i32 %72, -1, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %75, metadata !3477, metadata !DIExpression()), !dbg !3529
  br label %53, !dbg !3571

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3572

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 4, metadata !3469, metadata !DIExpression()), !dbg !3529
  br label %53, !dbg !3573

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 4, metadata !3469, metadata !DIExpression()), !dbg !3529
  br label %53, !dbg !3574

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3575
  %81 = icmp eq i8 %80, 108, !dbg !3577
  br i1 %81, label %82, label %109, !dbg !3578

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3579
  %84 = load i8, i8* %83, align 1, !dbg !3579
  %85 = icmp eq i8 %84, 108, !dbg !3582
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3583
  %89 = add i32 %88, 7, !dbg !3583
  %90 = and i32 %89, -8, !dbg !3583
  %91 = inttoptr i32 %90 to i8*, !dbg !3583
  %92 = inttoptr i32 %90 to double*, !dbg !3583
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3583
  %94 = load double, double* %92, align 8, !dbg !3583
  call void @llvm.dbg.value(metadata i8* %93, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 8, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 8, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata double %94, metadata !3497, metadata !DIExpression()), !dbg !3585
  %95 = ptrtoint i8* %43 to i32, !dbg !3586
  %96 = add i32 %95, 7, !dbg !3586
  %97 = and i32 %96, -8, !dbg !3586
  %98 = inttoptr i32 %97 to i8*, !dbg !3587
  call void @llvm.dbg.value(metadata i8* %98, metadata !3468, metadata !DIExpression()), !dbg !3529
  br i1 %22, label %104, label %99, !dbg !3588

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3589
  %101 = icmp ugt i32 %100, %196, !dbg !3593
  br i1 %101, label %320, label %102, !dbg !3594

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3595
  store double %94, double* %103, align 8, !dbg !3595
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %105, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3480, metadata !DIExpression()), !dbg !3529
  br label %53, !dbg !3599

107:                                              ; preds = %73, %73
  br label %109, !dbg !3600

108:                                              ; preds = %73
  br label %109, !dbg !3600

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3529
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3529
  call void @llvm.dbg.value(metadata i32 %113, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %112, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3483, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  %114 = ptrtoint i8* %43 to i32, !dbg !3600
  %115 = add i32 %114, -1, !dbg !3600
  %116 = add i32 %115, %112, !dbg !3600
  %117 = sub i32 0, %112, !dbg !3600
  %118 = and i32 %116, %117, !dbg !3600
  %119 = inttoptr i32 %118 to i8*, !dbg !3601
  call void @llvm.dbg.value(metadata i8* %119, metadata !3468, metadata !DIExpression()), !dbg !3529
  br i1 %22, label %124, label %120, !dbg !3602

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3604
  %122 = add i32 %121, %118, !dbg !3605
  %123 = icmp ugt i32 %122, %196, !dbg !3606
  br i1 %123, label %320, label %124, !dbg !3607

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3608

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3601
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3609
  call void @llvm.dbg.value(metadata i8* %127, metadata !3466, metadata !DIExpression()), !dbg !3529
  %128 = bitcast i8* %41 to i8**, !dbg !3609
  %129 = load i8*, i8** %128, align 4, !dbg !3609
  call void @llvm.dbg.value(metadata i8* %129, metadata !3479, metadata !DIExpression()), !dbg !3529
  br label %130, !dbg !3610

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3529
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3611
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3529
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3612
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3529
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3529
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3529
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3529
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3529
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3529
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3613
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %142, metadata !3463, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %141, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %140, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %139, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %138, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %137, metadata !3474, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %136, metadata !3482, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %135, metadata !3475, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %133, metadata !3479, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %132, metadata !3477, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %131, metadata !3476, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.label(metadata !3528), !dbg !3615
  br i1 %22, label %146, label %144, !dbg !3616

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3617
  store i8* %133, i8** %145, align 4, !dbg !3620
  br label %146, !dbg !3621

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %147, metadata !3482, metadata !DIExpression()), !dbg !3529
  %148 = icmp sgt i32 %136, 0, !dbg !3623
  br i1 %148, label %152, label %149, !dbg !3624

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3625
  %151 = zext i1 %150 to i32, !dbg !3625
  br label %152, !dbg !3624

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3624
  %154 = icmp eq i32 %153, 0, !dbg !3624
  call void @llvm.dbg.value(metadata i1 %154, metadata !3506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3626
  call void @llvm.dbg.value(metadata i1 %36, metadata !3509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3626
  %155 = or i1 %36, %154, !dbg !3627
  br i1 %155, label %156, label %192, !dbg !3627

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3628
  %158 = sub i32 %157, %17, !dbg !3628
  %159 = lshr i32 %158, 2, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %159, metadata !3510, metadata !DIExpression()), !dbg !3630
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3631
  br i1 %161, label %162, label %163, !dbg !3631

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3633
  unreachable, !dbg !3633

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3638
  br i1 %164, label %165, label %166, !dbg !3640

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3641
  unreachable, !dbg !3641

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3646

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3647
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3650
  store i8 %168, i8* %169, align 1, !dbg !3651
  %170 = trunc i32 %132 to i8, !dbg !3652
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3653
  store i8 %170, i8* %171, align 1, !dbg !3654
  br i1 %154, label %175, label %172, !dbg !3655

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3656
  store i8 %173, i8* %169, align 1, !dbg !3656
  %174 = add i32 %131, 1, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %174, metadata !3476, metadata !DIExpression()), !dbg !3529
  br label %187, !dbg !3660

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %176, metadata !3475, metadata !DIExpression()), !dbg !3529
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3663

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %179, metadata !3463, metadata !DIExpression()), !dbg !3529
  br label %187, !dbg !3667

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3668

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %182, metadata !3463, metadata !DIExpression()), !dbg !3529
  br label %187, !dbg !3672

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3673
  %185 = add i32 %142, 2, !dbg !3675
  %186 = add i32 %185, %184, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %186, metadata !3463, metadata !DIExpression()), !dbg !3529
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3529
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3529
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3529
  call void @llvm.dbg.value(metadata i32 %190, metadata !3463, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %189, metadata !3475, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %188, metadata !3476, metadata !DIExpression()), !dbg !3529
  %191 = add nuw nsw i32 %137, 1, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %191, metadata !3474, metadata !DIExpression()), !dbg !3529
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3529
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3612
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3529
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3613
  call void @llvm.dbg.value(metadata i32 %196, metadata !3463, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %195, metadata !3474, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %194, metadata !3475, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %193, metadata !3476, metadata !DIExpression()), !dbg !3529
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3678
  call void @llvm.dbg.value(metadata i8* %197, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %143, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %141, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %139, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %138, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3483, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %132, metadata !3477, metadata !DIExpression()), !dbg !3529
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %198, metadata !3465, metadata !DIExpression()), !dbg !3529
  %199 = load i8, i8* %198, align 1, !dbg !3563
  %200 = icmp eq i8 %199, 0, !dbg !3564
  br i1 %200, label %226, label %63, !dbg !3565

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3679

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3680
  call void @llvm.dbg.value(metadata i8* %203, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 undef, metadata !3513, metadata !DIExpression()), !dbg !3681
  br i1 %22, label %219, label %204, !dbg !3682

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3680
  %206 = load i32, i32* %205, align 4, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %206, metadata !3513, metadata !DIExpression()), !dbg !3681
  %207 = inttoptr i32 %118 to i32*, !dbg !3683
  store i32 %206, i32* %207, align 4, !dbg !3686
  br label %219, !dbg !3687

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3688
  %210 = add i32 %209, 7, !dbg !3688
  %211 = and i32 %210, -8, !dbg !3688
  %212 = inttoptr i32 %211 to i8*, !dbg !3688
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3688
  call void @llvm.dbg.value(metadata i8* %213, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i64 undef, metadata !3519, metadata !DIExpression()), !dbg !3689
  br i1 %22, label %219, label %214, !dbg !3690

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3688
  %216 = load i64, i64* %215, align 8, !dbg !3688
  call void @llvm.dbg.value(metadata i64 %216, metadata !3519, metadata !DIExpression()), !dbg !3689
  %217 = inttoptr i32 %118 to i64*, !dbg !3691
  store i64 %216, i64* %217, align 8, !dbg !3696
  br label %219, !dbg !3697

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3698
  unreachable, !dbg !3698

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3703
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3703
  call void @llvm.dbg.value(metadata i8* %221, metadata !3466, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %40, metadata !3465, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %222, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %113, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %112, metadata !3470, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3483, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8 poison, metadata !3480, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %72, metadata !3477, metadata !DIExpression()), !dbg !3529
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3561
  call void @llvm.dbg.value(metadata i8* %223, metadata !3465, metadata !DIExpression()), !dbg !3529
  %224 = load i8, i8* %223, align 1, !dbg !3563
  %225 = icmp eq i8 %224, 0, !dbg !3564
  br i1 %225, label %226, label %38, !dbg !3565

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3704
  %228 = ptrtoint i8* %227 to i32, !dbg !3705
  %229 = sub i32 %228, %17, !dbg !3705
  %230 = lshr i32 %229, 2, !dbg !3707
  %231 = icmp ugt i32 %229, 1023, !dbg !3708
  br i1 %231, label %232, label %233, !dbg !3709

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3710
  unreachable, !dbg !3710

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3715

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3716
  %236 = add i32 %235, %229, !dbg !3719
  br label %320, !dbg !3720

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3721
  store i8 %238, i8* %0, align 1, !dbg !3722
  %239 = trunc i32 %194 to i8, !dbg !3723
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3725
  store i8 %240, i8* %242, align 1, !dbg !3727
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3728
  store i8 %241, i8* %243, align 1, !dbg !3729
  %244 = trunc i32 %193 to i8, !dbg !3730
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3731
  store i8 %244, i8* %245, align 1, !dbg !3732
  %246 = icmp eq i32 %193, 0, !dbg !3733
  %247 = xor i1 %246, true, !dbg !3734
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3734
  call void @llvm.dbg.value(metadata i8* %227, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 0, metadata !3478, metadata !DIExpression()), !dbg !3529
  br i1 %249, label %250, label %269, !dbg !3734

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3735

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %254, metadata !3478, metadata !DIExpression()), !dbg !3529
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3736
  %256 = load i8, i8* %255, align 1, !dbg !3736
  %257 = icmp sgt i8 %256, -1, !dbg !3738
  br i1 %257, label %265, label %258, !dbg !3739

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3522, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3740
  %259 = ptrtoint i8* %253 to i32, !dbg !3741
  %260 = add i32 %251, %259, !dbg !3743
  %261 = icmp ugt i32 %260, %196, !dbg !3744
  br i1 %261, label %320, label %262, !dbg !3745

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3746
  call void @llvm.dbg.value(metadata i8 %263, metadata !3522, metadata !DIExpression()), !dbg !3740
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3747
  call void @llvm.dbg.value(metadata i8* %264, metadata !3468, metadata !DIExpression()), !dbg !3529
  store i8 %263, i8* %253, align 1, !dbg !3748
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3678
  call void @llvm.dbg.value(metadata i8* %266, metadata !3468, metadata !DIExpression()), !dbg !3529
  %267 = add nuw i32 %254, 1, !dbg !3749
  call void @llvm.dbg.value(metadata i32 %267, metadata !3478, metadata !DIExpression()), !dbg !3529
  %268 = icmp eq i32 %267, %195, !dbg !3750
  br i1 %268, label %269, label %252, !dbg !3735, !llvm.loop !3751

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3678
  call void @llvm.dbg.value(metadata i8* %270, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 0, metadata !3478, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %133, metadata !3479, metadata !DIExpression()), !dbg !3529
  %271 = icmp eq i32 %195, 0, !dbg !3753
  br i1 %271, label %316, label %272, !dbg !3756

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3756

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %276, metadata !3479, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %277, metadata !3478, metadata !DIExpression()), !dbg !3529
  br i1 %246, label %282, label %278, !dbg !3757

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3760
  %280 = load i8, i8* %279, align 1, !dbg !3760
  %281 = icmp sgt i8 %280, -1, !dbg !3761
  br i1 %281, label %282, label %311, !dbg !3762

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3763

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3469, metadata !DIExpression()), !dbg !3529
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3764
  %285 = load i8, i8* %284, align 1, !dbg !3764
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3767
  call void @llvm.dbg.value(metadata i8* %286, metadata !3468, metadata !DIExpression()), !dbg !3529
  store i8 %285, i8* %275, align 1, !dbg !3768
  br label %297, !dbg !3769

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3770
  %289 = load i8, i8* %288, align 1, !dbg !3770
  %290 = zext i8 %289 to i32, !dbg !3770
  %291 = shl nuw nsw i32 %290, 2, !dbg !3772
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3773
  %293 = bitcast i8* %292 to i8**, !dbg !3774
  %294 = load i8*, i8** %293, align 4, !dbg !3774
  call void @llvm.dbg.value(metadata i8* %294, metadata !3479, metadata !DIExpression()), !dbg !3529
  store i8* null, i8** %293, align 4, !dbg !3775
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3776
  %296 = add i32 %295, 1, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %296, metadata !3469, metadata !DIExpression()), !dbg !3529
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3529
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3778
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3529
  call void @llvm.dbg.value(metadata i8* %300, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %299, metadata !3469, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %298, metadata !3479, metadata !DIExpression()), !dbg !3529
  %301 = ptrtoint i8* %300 to i32, !dbg !3779
  %302 = add i32 %273, %299, !dbg !3781
  %303 = add i32 %302, %301, !dbg !3782
  %304 = icmp ugt i32 %303, %196, !dbg !3783
  br i1 %304, label %320, label %305, !dbg !3784

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3785
  %307 = load i8, i8* %306, align 1, !dbg !3785
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3786
  call void @llvm.dbg.value(metadata i8* %308, metadata !3468, metadata !DIExpression()), !dbg !3529
  store i8 %307, i8* %300, align 1, !dbg !3787
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3788
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3789
  call void @llvm.dbg.value(metadata i8* %310, metadata !3468, metadata !DIExpression()), !dbg !3529
  br label %311, !dbg !3790

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3791
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3529
  call void @llvm.dbg.value(metadata i8* %313, metadata !3468, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i8* %312, metadata !3479, metadata !DIExpression()), !dbg !3529
  %314 = add nuw i32 %277, 1, !dbg !3792
  call void @llvm.dbg.value(metadata i32 %314, metadata !3478, metadata !DIExpression()), !dbg !3529
  %315 = icmp eq i32 %314, %195, !dbg !3753
  br i1 %315, label %316, label %274, !dbg !3756, !llvm.loop !3793

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3678
  %318 = ptrtoint i8* %317 to i32, !dbg !3795
  %319 = sub i32 %318, %17, !dbg !3795
  br label %320, !dbg !3796

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3797
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3797
  ret i32 %321, !dbg !3797
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3798 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3802, metadata !DIExpression()), !dbg !3803
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3804
  ret i1 %2, !dbg !3805
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3811, metadata !DIExpression()), !dbg !3812
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3813
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3814
  %4 = and i1 %2, %3, !dbg !3814
  ret i1 %4, !dbg !3815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3816 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3820, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1, metadata !3821, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i32 %2, metadata !3822, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.value(metadata i8* %3, metadata !3823, metadata !DIExpression()), !dbg !3826
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3827
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3824, metadata !DIExpression()), !dbg !3828
  call void @llvm.va_start(i8* nonnull %6), !dbg !3829
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3830
  %8 = load i32, i32* %7, align 4, !dbg !3830
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3830
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %10, metadata !3825, metadata !DIExpression()), !dbg !3826
  call void @llvm.va_end(i8* nonnull %6), !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3832
  ret i32 %10, !dbg !3833
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3834 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3846, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3847, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i8* %2, metadata !3848, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i8* %3, metadata !3849, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i8* %3, metadata !3850, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i8* %3, metadata !3851, metadata !DIExpression()), !dbg !3865
  %5 = icmp eq i8* %3, null, !dbg !3866
  br i1 %5, label %45, label %6, !dbg !3868

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3860, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3865
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3869
  %8 = load i8, i8* %7, align 1, !dbg !3869
  %9 = zext i8 %8 to i32, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %9, metadata !3861, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i8 undef, metadata !3862, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata i8 undef, metadata !3863, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata i32 0, metadata !3859, metadata !DIExpression()), !dbg !3865
  %10 = icmp eq i8 %8, 0, !dbg !3871
  br i1 %10, label %39, label %11, !dbg !3874

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8 %12, metadata !3860, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %13 = zext i8 %12 to i32, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %13, metadata !3860, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %14 = shl nuw nsw i32 %13, 2, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %14, metadata !3860, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3878
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3879
  %17 = load i8, i8* %16, align 1, !dbg !3879
  call void @llvm.dbg.value(metadata i8 %17, metadata !3862, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %18 = zext i8 %17 to i32, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %18, metadata !3862, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3881
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3882
  %21 = load i8, i8* %20, align 1, !dbg !3882
  call void @llvm.dbg.value(metadata i8 %21, metadata !3863, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %22 = zext i8 %21 to i32, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %22, metadata !3863, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %23 = shl nuw nsw i32 %22, 1, !dbg !3884
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3857, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3865
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3885
  call void @llvm.dbg.value(metadata i8* %24, metadata !3857, metadata !DIExpression()), !dbg !3865
  br label %25, !dbg !3874

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3857, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32 %27, metadata !3859, metadata !DIExpression()), !dbg !3865
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3886
  call void @llvm.dbg.value(metadata i8* %28, metadata !3857, metadata !DIExpression()), !dbg !3865
  %29 = load i8, i8* %26, align 1, !dbg !3888
  %30 = zext i8 %29 to i32, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %30, metadata !3864, metadata !DIExpression()), !dbg !3865
  %31 = shl nuw nsw i32 %30, 2, !dbg !3889
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3890
  %33 = bitcast i8* %32 to i8**, !dbg !3891
  call void @llvm.dbg.value(metadata i8** %33, metadata !3858, metadata !DIExpression()), !dbg !3865
  store i8* %28, i8** %33, align 4, !dbg !3892
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3893
  %35 = add i32 %34, 1, !dbg !3894
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3895
  call void @llvm.dbg.value(metadata i8* %36, metadata !3857, metadata !DIExpression()), !dbg !3865
  %37 = add nuw nsw i32 %27, 1, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %37, metadata !3859, metadata !DIExpression()), !dbg !3865
  %38 = icmp eq i32 %37, %9, !dbg !3871
  br i1 %38, label %39, label %25, !dbg !3874, !llvm.loop !3897

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %40, metadata !3850, metadata !DIExpression()), !dbg !3865
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3900
  %42 = bitcast i8* %41 to i8**, !dbg !3900
  %43 = load i8*, i8** %42, align 1, !dbg !3900
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3901
  br label %45, !dbg !3902

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3865
  ret i32 %46, !dbg !3903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3904 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3908, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3909, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %2, metadata !3910, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %3, metadata !3911, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %4, metadata !3912, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %4, metadata !3913, metadata !DIExpression()), !dbg !3918
  %6 = ptrtoint i8* %4 to i32, !dbg !3919
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3919
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3919
  ret i32 %8, !dbg !3920
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3921 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3925, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i32 %1, metadata !3926, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i8 0, metadata !3928, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i8 poison, metadata !3928, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i8* %0, metadata !3925, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3930
  %3 = load i8, i8* %0, align 1, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %3, metadata !3927, metadata !DIExpression()), !dbg !3930
  %4 = icmp eq i8 %3, 0, !dbg !3932
  br i1 %4, label %29, label %5, !dbg !3933

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3934
  call void @llvm.dbg.value(metadata i32 %8, metadata !3929, metadata !DIExpression()), !dbg !3930
  br i1 %9, label %11, label %22, !dbg !3935

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3937
  br i1 %12, label %13, label %17, !dbg !3941

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3942
  br i1 %14, label %29, label %15, !dbg !3945

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3946
  br i1 %16, label %29, label %22, !dbg !3948

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3949
  %19 = xor i1 %18, true, !dbg !3951
  %20 = zext i1 %18 to i32, !dbg !3951
  %21 = add nsw i32 %8, %20, !dbg !3951
  br label %22, !dbg !3951

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3930
  call void @llvm.dbg.value(metadata i32 %24, metadata !3929, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i8 poison, metadata !3928, metadata !DIExpression()), !dbg !3930
  %25 = icmp eq i8 %6, 37, !dbg !3952
  %26 = xor i1 %25, %23, !dbg !3954
  call void @llvm.dbg.value(metadata i8* %10, metadata !3925, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.value(metadata i8* %10, metadata !3925, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3930
  %27 = load i8, i8* %10, align 1, !dbg !3931
  call void @llvm.dbg.value(metadata i8 %27, metadata !3927, metadata !DIExpression()), !dbg !3930
  %28 = icmp eq i8 %27, 0, !dbg !3932
  br i1 %28, label %29, label %5, !dbg !3933, !llvm.loop !3955

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3930
  ret i1 %30, !dbg !3957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3958 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3962, metadata !DIExpression()), !dbg !3963
  %2 = add i8 %0, -64, !dbg !3964
  %3 = icmp ult i8 %2, 59, !dbg !3964
  ret i1 %3, !dbg !3965
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3966 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3974, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %1, metadata !3975, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3976, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %3, metadata !3977, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %4, metadata !3978, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i16* %5, metadata !3979, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %6, metadata !3980, metadata !DIExpression()), !dbg !4043
  %11 = icmp eq i8* %0, null, !dbg !4044
  br i1 %11, label %12, label %13, !dbg !4047

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !4048
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !4048
  unreachable, !dbg !4048

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3981, metadata !DIExpression()), !dbg !4043
  %14 = bitcast i8* %0 to i32*, !dbg !4050
  call void @llvm.dbg.value(metadata i32* %14, metadata !3982, metadata !DIExpression()), !dbg !4043
  %15 = and i32 %4, 8, !dbg !4051
  %16 = icmp eq i32 %15, 0, !dbg !4052
  call void @llvm.dbg.value(metadata i1 %16, metadata !3986, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %0, metadata !3989, metadata !DIExpression()), !dbg !4043
  %17 = icmp eq i32 %1, 0, !dbg !4053
  br i1 %17, label %18, label %20, !dbg !4054

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !4055
  br label %20, !dbg !4054

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4054
  call void @llvm.dbg.value(metadata i32 %21, metadata !3975, metadata !DIExpression()), !dbg !4043
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4056
  %23 = load i8, i8* %22, align 1, !dbg !4056
  %24 = zext i8 %23 to i32, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %24, metadata !3984, metadata !DIExpression()), !dbg !4043
  %25 = icmp ne i8 %23, 0, !dbg !4058
  %26 = and i32 %4, 1, !dbg !4059
  %27 = icmp ne i32 %26, 0, !dbg !4059
  %28 = and i1 %27, %25, !dbg !4059
  call void @llvm.dbg.value(metadata i1 %28, metadata !3988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4043
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4060
  %30 = load i8, i8* %29, align 1, !dbg !4060
  %31 = zext i8 %30 to i32, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %31, metadata !3985, metadata !DIExpression()), !dbg !4043
  %32 = icmp ne i8 %30, 0, !dbg !4062
  %33 = and i32 %4, 2, !dbg !4063
  %34 = icmp ne i32 %33, 0, !dbg !4063
  %35 = and i1 %34, %32, !dbg !4063
  call void @llvm.dbg.value(metadata i1 %35, metadata !3987, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4043
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4064
  br i1 %36, label %41, label %37, !dbg !4064

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4066
  br i1 %38, label %287, label %39, !dbg !4069

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4070
  br label %287, !dbg !4072

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4073
  %43 = zext i8 %42 to i32, !dbg !4074
  %44 = shl nuw nsw i32 %43, 2, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %44, metadata !3983, metadata !DIExpression()), !dbg !4043
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4076
  %46 = bitcast i8* %45 to i8**, !dbg !4077
  %47 = load i8*, i8** %46, align 4, !dbg !4077
  call void @llvm.dbg.value(metadata i8* %47, metadata !3992, metadata !DIExpression()), !dbg !4043
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4078
  call void @llvm.dbg.value(metadata i8* %48, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 0, metadata !3994, metadata !DIExpression()), !dbg !4043
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4079
  br i1 %49, label %50, label %135, !dbg !4080

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3991, metadata !DIExpression()), !dbg !4043
  br i1 %28, label %51, label %76, !dbg !4081

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %48, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 0, metadata !3994, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 0, metadata !3995, metadata !DIExpression()), !dbg !4082
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4083

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %55, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %56, metadata !3994, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %57, metadata !3995, metadata !DIExpression()), !dbg !4082
  %58 = load i8, i8* %55, align 1, !dbg !4084
  %59 = zext i8 %58 to i32, !dbg !4085
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4085
  %61 = bitcast i32* %60 to i8**, !dbg !4086
  %62 = load i8*, i8** %61, align 4, !dbg !4086
  call void @llvm.dbg.value(metadata i8* %62, metadata !4001, metadata !DIExpression()), !dbg !4087
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %63, metadata !4004, metadata !DIExpression()), !dbg !4087
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4089
  br i1 %65, label %66, label %70, !dbg !4089

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4091
  %68 = add nuw i32 %56, 1, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %68, metadata !3994, metadata !DIExpression()), !dbg !4043
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4094
  store i16 %67, i16* %69, align 2, !dbg !4095
  br label %70, !dbg !4096

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4043
  call void @llvm.dbg.value(metadata i32 %71, metadata !3994, metadata !DIExpression()), !dbg !4043
  %72 = add nsw i32 %63, %54, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %72, metadata !3991, metadata !DIExpression()), !dbg !4043
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %73, metadata !3993, metadata !DIExpression()), !dbg !4043
  %74 = add nuw nsw i32 %57, 1, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %74, metadata !3995, metadata !DIExpression()), !dbg !4082
  %75 = icmp eq i32 %74, %24, !dbg !4100
  br i1 %75, label %82, label %53, !dbg !4083, !llvm.loop !4101

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4103
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4103
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4103
  br label %82, !dbg !4103

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4106
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4043
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4107
  call void @llvm.dbg.value(metadata i1 undef, metadata !4005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !4006, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata i32 %85, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %84, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %83, metadata !3994, metadata !DIExpression()), !dbg !4043
  %86 = icmp eq i8 %30, 0, !dbg !4110
  br i1 %86, label %287, label %87, !dbg !4111

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4112
  %89 = icmp eq i32 %88, 0, !dbg !4113
  call void @llvm.dbg.value(metadata i1 %89, metadata !4005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4108
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4111

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8* %96, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %97, metadata !3994, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %98, metadata !4006, metadata !DIExpression()), !dbg !4109
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %99, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 undef, metadata !4008, metadata !DIExpression()), !dbg !4115
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4116
  call void @llvm.dbg.value(metadata i8* %100, metadata !3993, metadata !DIExpression()), !dbg !4043
  %101 = load i8, i8* %99, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %101, metadata !4011, metadata !DIExpression()), !dbg !4115
  %102 = zext i8 %101 to i32, !dbg !4118
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4118
  %104 = bitcast i32* %103 to i8**, !dbg !4119
  %105 = load i8*, i8** %104, align 4, !dbg !4119
  call void @llvm.dbg.value(metadata i8* %105, metadata !4012, metadata !DIExpression()), !dbg !4115
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4120
  call void @llvm.dbg.value(metadata i1 %106, metadata !4013, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4115
  br i1 %16, label %113, label %107, !dbg !4121

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4123
  call void @llvm.dbg.value(metadata i8 %108, metadata !4008, metadata !DIExpression()), !dbg !4115
  %109 = zext i8 %108 to i32, !dbg !4124
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4125
  br i1 %110, label %111, label %113, !dbg !4126

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4127
  %112 = add nsw i32 %95, -2, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %112, metadata !3991, metadata !DIExpression()), !dbg !4043
  br label %130, !dbg !4134

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4135

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4136

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %116, metadata !3991, metadata !DIExpression()), !dbg !4043
  br label %130, !dbg !4141

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4142

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4039), !dbg !4143
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %119, metadata !4014, metadata !DIExpression()), !dbg !4115
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4145
  br i1 %121, label %122, label %126, !dbg !4145

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4147
  %124 = add nuw i32 %97, 1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %124, metadata !3994, metadata !DIExpression()), !dbg !4043
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4150
  store i16 %123, i16* %125, align 2, !dbg !4151
  br label %126, !dbg !4152

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4043
  call void @llvm.dbg.value(metadata i32 %127, metadata !3994, metadata !DIExpression()), !dbg !4043
  %128 = add i32 %95, -1, !dbg !4153
  %129 = add i32 %128, %119, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %129, metadata !3991, metadata !DIExpression()), !dbg !4043
  br label %130, !dbg !4155

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4043
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4115
  call void @llvm.dbg.value(metadata i32 %132, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %131, metadata !3994, metadata !DIExpression()), !dbg !4043
  %133 = add nuw nsw i32 %98, 1, !dbg !4156
  call void @llvm.dbg.value(metadata i8* %100, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %133, metadata !4006, metadata !DIExpression()), !dbg !4109
  %134 = icmp eq i32 %133, %31, !dbg !4110
  br i1 %134, label %287, label %94, !dbg !4111, !llvm.loop !4157

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4016, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4017, metadata !DIExpression()), !dbg !4160
  br i1 %28, label %136, label %138, !dbg !4161

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4018, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 0, metadata !4019, metadata !DIExpression()), !dbg !4043
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %137, metadata !4020, metadata !DIExpression()), !dbg !4043
  br label %143, !dbg !4165

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4166
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4166

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4020, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 undef, metadata !4019, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 0, metadata !4018, metadata !DIExpression()), !dbg !4043
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4168
  br label %148, !dbg !4171

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %151, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 0, metadata !4022, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i8 %149, metadata !4019, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 %150, metadata !4018, metadata !DIExpression()), !dbg !4043
  %152 = icmp eq i8 %30, 0, !dbg !4174
  br i1 %152, label %153, label %155, !dbg !4175

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4176
  br label %160, !dbg !4175

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4175

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4176
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4177
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4178
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4043
  call void @llvm.dbg.value(metadata i8 undef, metadata !4015, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4043
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4179
  %166 = load i8, i8* %165, align 1, !dbg !4179
  %167 = zext i8 %162 to i32, !dbg !4180
  %168 = add i8 %166, %162, !dbg !4181
  call void @llvm.dbg.value(metadata i8 %168, metadata !4015, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4043
  %169 = icmp eq i32 %33, 0, !dbg !4182
  %170 = lshr i8 %163, 1, !dbg !4183
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4183
  call void @llvm.dbg.value(metadata i8 %171, metadata !4015, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4043
  %172 = icmp eq i32 %26, 0, !dbg !4184
  %173 = icmp eq i32 %161, 0, !dbg !4176
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4176
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4176
  call void @llvm.dbg.value(metadata i8 %175, metadata !4015, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4043
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4030, metadata !DIExpression()), !dbg !4185
  %176 = load i32, i32* %14, align 1, !dbg !4186
  store i8 %168, i8* %165, align 1, !dbg !4187
  store i8 %175, i8* %22, align 1, !dbg !4187
  store i8 %171, i8* %29, align 1, !dbg !4187
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %177, metadata !4021, metadata !DIExpression()), !dbg !4043
  %178 = icmp slt i32 %177, 0, !dbg !4189
  br i1 %178, label %287, label %240, !dbg !4191

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %181, metadata !4022, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i8 %182, metadata !4019, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 %183, metadata !4018, metadata !DIExpression()), !dbg !4043
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4192
  call void @llvm.dbg.value(metadata i8* %184, metadata !3993, metadata !DIExpression()), !dbg !4043
  %185 = load i8, i8* %180, align 1, !dbg !4193
  call void @llvm.dbg.value(metadata i8 %185, metadata !4024, metadata !DIExpression()), !dbg !4194
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4195
  call void @llvm.dbg.value(metadata i8* %186, metadata !3993, metadata !DIExpression()), !dbg !4043
  %187 = load i8, i8* %184, align 1, !dbg !4196
  call void @llvm.dbg.value(metadata i8 %187, metadata !4027, metadata !DIExpression()), !dbg !4194
  %188 = zext i8 %187 to i32, !dbg !4197
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4197
  %190 = bitcast i32* %189 to i8**, !dbg !4198
  %191 = load i8*, i8** %190, align 4, !dbg !4198
  call void @llvm.dbg.value(metadata i8* %191, metadata !4028, metadata !DIExpression()), !dbg !4194
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4199
  call void @llvm.dbg.value(metadata i1 %192, metadata !4029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4194
  br i1 %16, label %196, label %193, !dbg !4200

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4202
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4203
  br i1 %195, label %235, label %196, !dbg !4204

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4205

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4206

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4209
  br i1 %199, label %201, label %200, !dbg !4214

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4215
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4215
  unreachable, !dbg !4215

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4209
  %203 = add nuw nsw i8 %183, 1, !dbg !4217
  call void @llvm.dbg.value(metadata i8 %203, metadata !4018, metadata !DIExpression()), !dbg !4043
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4218
  br label %231, !dbg !4219

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4220

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4221
  br i1 %207, label %209, label %208, !dbg !4226

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4227
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4227
  unreachable, !dbg !4227

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4221
  %211 = add nuw nsw i8 %182, 1, !dbg !4229
  call void @llvm.dbg.value(metadata i8 %211, metadata !4019, metadata !DIExpression()), !dbg !4043
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4230
  br label %231, !dbg !4231

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4232

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4234
  br i1 %215, label %217, label %216, !dbg !4239

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4240
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4240
  unreachable, !dbg !4240

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4234
  %219 = add nuw nsw i8 %183, 1, !dbg !4242
  call void @llvm.dbg.value(metadata i8 %219, metadata !4018, metadata !DIExpression()), !dbg !4043
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4243
  br label %231, !dbg !4244

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4245
  br i1 %222, label %224, label %223, !dbg !4249

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4250
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4250
  unreachable, !dbg !4250

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4245
  %226 = add nuw nsw i8 %182, 1, !dbg !4252
  call void @llvm.dbg.value(metadata i8 %226, metadata !4019, metadata !DIExpression()), !dbg !4043
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4253
  store i8 %185, i8* %227, align 1, !dbg !4254
  %228 = add nuw nsw i8 %182, 2, !dbg !4255
  call void @llvm.dbg.value(metadata i8 %228, metadata !4019, metadata !DIExpression()), !dbg !4043
  %229 = zext i8 %226 to i32, !dbg !4256
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4256
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4257
  br label %235, !dbg !4258

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4043
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4178
  call void @llvm.dbg.value(metadata i8 %237, metadata !4019, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i8 %236, metadata !4018, metadata !DIExpression()), !dbg !4043
  %238 = add nuw nsw i32 %181, 1, !dbg !4258
  call void @llvm.dbg.value(metadata i8* %186, metadata !3993, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %238, metadata !4022, metadata !DIExpression()), !dbg !4173
  %239 = icmp eq i32 %238, %31, !dbg !4174
  br i1 %239, label %160, label %179, !dbg !4175, !llvm.loop !4259

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %177, metadata !3991, metadata !DIExpression()), !dbg !4043
  store i32 %176, i32* %14, align 1, !dbg !4261
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4262
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %243, metadata !4021, metadata !DIExpression()), !dbg !4043
  %244 = icmp slt i32 %243, 0, !dbg !4264
  br i1 %244, label %287, label %245, !dbg !4266

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3991, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4043
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4267
  %248 = add nuw nsw i32 %44, %24, !dbg !4267
  %249 = sub i32 %247, %248, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %249, metadata !4031, metadata !DIExpression()), !dbg !4043
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %250, metadata !4021, metadata !DIExpression()), !dbg !4043
  %251 = icmp slt i32 %250, 0, !dbg !4269
  br i1 %251, label %287, label %252, !dbg !4271

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %253, metadata !3991, metadata !DIExpression()), !dbg !4043
  %254 = add nuw nsw i32 %253, %250, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %254, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 0, metadata !4032, metadata !DIExpression()), !dbg !4274
  %255 = icmp eq i8 %162, 0, !dbg !4275
  br i1 %255, label %284, label %256, !dbg !4276

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4276

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4032, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32 %260, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4277
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4278
  %262 = load i8, i8* %261, align 1, !dbg !4278
  call void @llvm.dbg.value(metadata i8 %262, metadata !4034, metadata !DIExpression()), !dbg !4279
  store i8 %262, i8* %10, align 1, !dbg !4280
  %263 = zext i8 %262 to i32, !dbg !4281
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4281
  %265 = bitcast i32* %264 to i8**, !dbg !4282
  %266 = load i8*, i8** %265, align 4, !dbg !4282
  call void @llvm.dbg.value(metadata i8* %266, metadata !4037, metadata !DIExpression()), !dbg !4279
  br i1 %257, label %270, label %267, !dbg !4283

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4284
  %269 = load i16, i16* %268, align 2, !dbg !4284
  br label %270, !dbg !4283

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4283
  call void @llvm.dbg.value(metadata i32 undef, metadata !4038, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4279
  call void @llvm.dbg.value(metadata i8* %10, metadata !4034, metadata !DIExpression(DW_OP_deref)), !dbg !4279
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %272, metadata !4021, metadata !DIExpression()), !dbg !4043
  %273 = icmp slt i32 %272, 0, !dbg !4286
  br i1 %273, label %277, label %274, !dbg !4288

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4038, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3991, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4043
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %275, metadata !4021, metadata !DIExpression()), !dbg !4043
  %276 = icmp slt i32 %275, 0, !dbg !4290
  br i1 %276, label %277, label %279, !dbg !4292

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4293
  call void @llvm.dbg.value(metadata i32 undef, metadata !3991, metadata !DIExpression()), !dbg !4043
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4294
  call void @llvm.dbg.value(metadata i32 %280, metadata !3991, metadata !DIExpression()), !dbg !4043
  %281 = add nsw i32 %280, %275, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %281, metadata !3991, metadata !DIExpression()), !dbg !4043
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4293
  %282 = add nuw nsw i32 %259, 1, !dbg !4296
  call void @llvm.dbg.value(metadata i32 %282, metadata !4032, metadata !DIExpression()), !dbg !4274
  %283 = icmp eq i32 %282, %167, !dbg !4275
  br i1 %283, label %284, label %258, !dbg !4276, !llvm.loop !4297

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4273
  call void @llvm.dbg.value(metadata i32 %285, metadata !3991, metadata !DIExpression()), !dbg !4043
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4299
  br label %287, !dbg !4300

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4043
  ret i32 %288, !dbg !4301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4306, metadata !DIExpression()), !dbg !4314
  %2 = icmp eq i8* %0, null, !dbg !4315
  br i1 %2, label %3, label %4, !dbg !4318

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4319
  unreachable, !dbg !4319

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4307, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8* %0, metadata !4308, metadata !DIExpression()), !dbg !4314
  %5 = load i8, i8* %0, align 1, !dbg !4321
  %6 = zext i8 %5 to i32, !dbg !4321
  %7 = shl nuw nsw i32 %6, 2, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %7, metadata !4309, metadata !DIExpression()), !dbg !4314
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4323
  %9 = load i8, i8* %8, align 1, !dbg !4323
  %10 = zext i8 %9 to i32, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %10, metadata !4310, metadata !DIExpression()), !dbg !4314
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4324
  %12 = load i8, i8* %11, align 1, !dbg !4324
  %13 = zext i8 %12 to i32, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %13, metadata !4311, metadata !DIExpression()), !dbg !4314
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %14, metadata !4307, metadata !DIExpression()), !dbg !4314
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4326
  call void @llvm.dbg.value(metadata i8* %15, metadata !4307, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 0, metadata !4312, metadata !DIExpression()), !dbg !4327
  %16 = icmp eq i8 %9, 0, !dbg !4328
  br i1 %16, label %17, label %22, !dbg !4330

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4314
  %19 = ptrtoint i8* %18 to i32, !dbg !4331
  %20 = ptrtoint i8* %0 to i32, !dbg !4331
  %21 = sub i32 %19, %20, !dbg !4331
  ret i32 %21, !dbg !4332

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4312, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i8* %24, metadata !4307, metadata !DIExpression()), !dbg !4314
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4333
  call void @llvm.dbg.value(metadata i8* %25, metadata !4307, metadata !DIExpression()), !dbg !4314
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4335
  %27 = add i32 %26, 1, !dbg !4336
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4337
  call void @llvm.dbg.value(metadata i8* %28, metadata !4307, metadata !DIExpression()), !dbg !4314
  %29 = add nuw nsw i32 %23, 1, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %29, metadata !4312, metadata !DIExpression()), !dbg !4327
  %30 = icmp eq i32 %29, %10, !dbg !4328
  br i1 %30, label %17, label %22, !dbg !4330, !llvm.loop !4339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4341 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4345, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i8* %1, metadata !4346, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i8* %2, metadata !4347, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i16 %3, metadata !4348, metadata !DIExpression()), !dbg !4349
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4350
  br i1 %5, label %6, label %9, !dbg !4352

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4353
  %8 = add i32 %7, 1, !dbg !4355
  br label %20, !dbg !4356

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4357
  br i1 %10, label %13, label %11, !dbg !4358

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4358
  br label %16, !dbg !4358

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4359
  %15 = add i32 %14, 1, !dbg !4360
  br label %16, !dbg !4358

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4358
  %18 = and i32 %17, 65535, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %17, metadata !4348, metadata !DIExpression()), !dbg !4349
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4362
  br label %20, !dbg !4363

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4349
  ret i32 %21, !dbg !4364
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4367, metadata !DIExpression()), !dbg !4368
  ret i32 0, !dbg !4369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4370 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4374, metadata !DIExpression()), !dbg !4375
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4376
  ret void, !dbg !4377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4378 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4381
  ret i8* %1, !dbg !4382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4383 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4394, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i8* %0, metadata !4393, metadata !DIExpression()), !dbg !4405
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4406
  ret void, !dbg !4408
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4413, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata i8* %1, metadata !4414, metadata !DIExpression()), !dbg !4415
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4416
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4416
  ret i32 %4, !dbg !4417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4418 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4425, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4422, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %1, metadata !4423, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %2, metadata !4424, metadata !DIExpression()), !dbg !4426
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4427
  ret void, !dbg !4428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4433, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 %1, metadata !4434, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 0, metadata !4435, metadata !DIExpression()), !dbg !4436
  %3 = icmp eq i32 %1, 0, !dbg !4437
  br i1 %3, label %13, label %4, !dbg !4440

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4435, metadata !DIExpression()), !dbg !4436
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4441
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4443
  %8 = load i8, i8* %7, align 1, !dbg !4443
  %9 = zext i8 %8 to i32, !dbg !4443
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4441
  %11 = add nuw i32 %5, 1, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %11, metadata !4435, metadata !DIExpression()), !dbg !4436
  %12 = icmp eq i32 %11, %1, !dbg !4437
  br i1 %12, label %13, label %4, !dbg !4440, !llvm.loop !4445

13:                                               ; preds = %4, %2
  ret void, !dbg !4447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4448 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4452, metadata !DIExpression()), !dbg !4454
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4455
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4453, metadata !DIExpression()), !dbg !4456
  call void @llvm.va_start(i8* nonnull %3), !dbg !4457
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4458
  %5 = load i32, i32* %4, align 4, !dbg !4458
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4458
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4458
  call void @llvm.va_end(i8* nonnull %3), !dbg !4459
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4460
  ret void, !dbg !4460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4461 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4465, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata i32 %1, metadata !4466, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata i8* %2, metadata !4467, metadata !DIExpression()), !dbg !4470
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4471
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4471
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4468, metadata !DIExpression()), !dbg !4472
  call void @llvm.va_start(i8* nonnull %5), !dbg !4473
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4474
  %7 = load i32, i32* %6, align 4, !dbg !4474
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4474
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %9, metadata !4469, metadata !DIExpression()), !dbg !4470
  call void @llvm.va_end(i8* nonnull %5), !dbg !4475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4476
  ret i32 %9, !dbg !4477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4478 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4485, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i8* %0, metadata !4482, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i32 %1, metadata !4483, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i8* %2, metadata !4484, metadata !DIExpression()), !dbg !4492
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4493
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4493
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4486, metadata !DIExpression()), !dbg !4494
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4495
  store i8* %0, i8** %7, align 4, !dbg !4495
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4495
  store i32 %1, i32* %8, align 4, !dbg !4495
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4495
  store i32 0, i32* %9, align 4, !dbg !4495
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4496
  %10 = load i32, i32* %9, align 4, !dbg !4497
  %11 = load i32, i32* %8, align 4, !dbg !4499
  %12 = icmp slt i32 %10, %11, !dbg !4500
  br i1 %12, label %13, label %15, !dbg !4501

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4502
  store i8 0, i8* %14, align 1, !dbg !4504
  br label %15, !dbg !4505

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4506
  ret i32 %10, !dbg !4507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4513, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4514, metadata !DIExpression()), !dbg !4515
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4516
  %4 = load i8*, i8** %3, align 4, !dbg !4516
  %5 = icmp eq i8* %4, null, !dbg !4518
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4519
  br i1 %5, label %12, label %8, !dbg !4520

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4521
  %10 = load i32, i32* %9, align 4, !dbg !4521
  %11 = icmp slt i32 %7, %10, !dbg !4522
  br i1 %11, label %15, label %12, !dbg !4523

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4524
  %14 = add nsw i32 %7, 1, !dbg !4526
  store i32 %14, i32* %13, align 4, !dbg !4526
  br label %25, !dbg !4527

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4528
  %17 = icmp eq i32 %7, %16, !dbg !4530
  br i1 %17, label %18, label %21, !dbg !4531

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4532
  store i32 %19, i32* %6, align 4, !dbg !4532
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4534
  store i8 0, i8* %20, align 1, !dbg !4535
  br label %25, !dbg !4536

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4537
  %23 = add nsw i32 %7, 1, !dbg !4539
  store i32 %23, i32* %6, align 4, !dbg !4539
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4540
  store i8 %22, i8* %24, align 1, !dbg !4541
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4542
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4543 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4548, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %1, metadata !4549, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %2, metadata !4550, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %3, metadata !4551, metadata !DIExpression()), !dbg !4552
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4553
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4554
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4555
  unreachable, !dbg !4556
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4557 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4664
  ret %struct.k_thread* %1, !dbg !4665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4670, metadata !DIExpression()), !dbg !4671
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4672, !srcloc !4674
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4675
  ret void, !dbg !4676
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4677 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4678, !srcloc !4680
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4681
  ret %struct.k_thread* %1, !dbg !4682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4683 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4693, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %1, metadata !4694, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %2, metadata !4695, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %4, metadata !4697, metadata !DIExpression()), !dbg !4822
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4823
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4823
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4698, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32 0, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i1 undef, metadata !4704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4822
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4825

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4825

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4826
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %30, metadata !4695, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %29, metadata !4702, metadata !DIExpression()), !dbg !4822
  %31 = load i8, i8* %30, align 1, !dbg !4827
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4825

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4827
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %34, metadata !4695, metadata !DIExpression()), !dbg !4822
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %35, metadata !4706, metadata !DIExpression()), !dbg !4829
  %36 = icmp slt i32 %35, 0, !dbg !4830
  %37 = add i32 %29, 1, !dbg !4828
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %36, label %365, label %28, !llvm.loop !4832

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4834
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4711, metadata !DIExpression()), !dbg !4835
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4835
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4754, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4757, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8* %30, metadata !4760, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 -1, metadata !4761, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 -1, metadata !4762, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8* null, metadata !4763, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8* %14, metadata !4764, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8 0, metadata !4765, metadata !DIExpression()), !dbg !4836
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %39, metadata !4695, metadata !DIExpression()), !dbg !4822
  %40 = load i24, i24* %15, align 8, !dbg !4838
  %41 = and i24 %40, 256, !dbg !4838
  %42 = icmp eq i24 %41, 0, !dbg !4838
  br i1 %42, label %51, label %43, !dbg !4840

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %44, metadata !4696, metadata !DIExpression()), !dbg !4822
  %45 = bitcast i8* %27 to i32*, !dbg !4841
  %46 = load i32, i32* %45, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %46, metadata !4761, metadata !DIExpression()), !dbg !4836
  %47 = icmp slt i32 %46, 0, !dbg !4843
  br i1 %47, label %48, label %56, !dbg !4845

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4846
  store i24 %49, i24* %15, align 8, !dbg !4846
  %50 = sub nsw i32 0, %46, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %50, metadata !4761, metadata !DIExpression()), !dbg !4836
  br label %56, !dbg !4849

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4850
  %53 = icmp eq i24 %52, 0, !dbg !4850
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4852
  br label %56, !dbg !4852

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4853
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4836
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %58, metadata !4761, metadata !DIExpression()), !dbg !4836
  %60 = and i24 %57, 1024, !dbg !4853
  %61 = icmp eq i24 %60, 0, !dbg !4853
  br i1 %61, label %69, label %62, !dbg !4854

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4855
  call void @llvm.dbg.value(metadata i8* %63, metadata !4696, metadata !DIExpression()), !dbg !4822
  %64 = bitcast i8* %59 to i32*, !dbg !4855
  %65 = load i32, i32* %64, align 4, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %65, metadata !4766, metadata !DIExpression()), !dbg !4856
  %66 = icmp slt i32 %65, 0, !dbg !4857
  br i1 %66, label %67, label %74, !dbg !4859

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4860
  store i24 %68, i24* %15, align 8, !dbg !4860
  br label %74, !dbg !4862

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4863
  %71 = icmp eq i24 %70, 0, !dbg !4863
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4865
  br label %74, !dbg !4865

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4866
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4836
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4836
  call void @llvm.dbg.value(metadata i8* %77, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %76, metadata !4762, metadata !DIExpression()), !dbg !4836
  store i32 0, i32* %16, align 4, !dbg !4867
  store i32 0, i32* %17, align 8, !dbg !4868
  %78 = lshr i24 %75, 16, !dbg !4866
  call void @llvm.dbg.value(metadata i24 %78, metadata !4769, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4836
  %79 = lshr i24 %75, 11, !dbg !4869
  %80 = and i24 %79, 15, !dbg !4869
  %81 = zext i24 %80 to i32, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %81, metadata !4770, metadata !DIExpression()), !dbg !4836
  %82 = trunc i24 %78 to i3, !dbg !4870
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4870

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4871

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %85, metadata !4696, metadata !DIExpression()), !dbg !4822
  %86 = bitcast i8* %77 to i32*, !dbg !4874
  %87 = load i32, i32* %86, align 4, !dbg !4874
  %88 = sext i32 %87 to i64, !dbg !4874
  store i64 %88, i64* %20, align 8, !dbg !4876
  br label %115, !dbg !4877

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4878
  call void @llvm.dbg.value(metadata i8* %90, metadata !4696, metadata !DIExpression()), !dbg !4822
  %91 = bitcast i8* %77 to i32*, !dbg !4878
  %92 = load i32, i32* %91, align 4, !dbg !4878
  %93 = sext i32 %92 to i64, !dbg !4878
  store i64 %93, i64* %20, align 8, !dbg !4881
  br label %115, !dbg !4882

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4883
  %96 = add i32 %95, 7, !dbg !4883
  %97 = and i32 %96, -8, !dbg !4883
  %98 = inttoptr i32 %97 to i8*, !dbg !4883
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %99, metadata !4696, metadata !DIExpression()), !dbg !4822
  %100 = inttoptr i32 %97 to i64*, !dbg !4883
  %101 = load i64, i64* %100, align 8, !dbg !4883
  store i64 %101, i64* %20, align 8, !dbg !4884
  br label %115, !dbg !4885

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4886
  %104 = add i32 %103, 7, !dbg !4886
  %105 = and i32 %104, -8, !dbg !4886
  %106 = inttoptr i32 %105 to i8*, !dbg !4886
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %107, metadata !4696, metadata !DIExpression()), !dbg !4822
  %108 = inttoptr i32 %105 to i64*, !dbg !4886
  %109 = load i64, i64* %108, align 8, !dbg !4886
  store i64 %109, i64* %20, align 8, !dbg !4887
  br label %115, !dbg !4888

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %111, metadata !4696, metadata !DIExpression()), !dbg !4822
  %112 = bitcast i8* %77 to i32*, !dbg !4889
  %113 = load i32, i32* %112, align 4, !dbg !4889
  %114 = sext i32 %113 to i64, !dbg !4890
  store i64 %114, i64* %20, align 8, !dbg !4891
  br label %115, !dbg !4892

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4893
  call void @llvm.dbg.value(metadata i8* %117, metadata !4696, metadata !DIExpression()), !dbg !4822
  %118 = trunc i24 %79 to i4, !dbg !4894
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4894

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4895
  %121 = ashr exact i64 %120, 56, !dbg !4895
  store i64 %121, i64* %20, align 8, !dbg !4898
  br label %177, !dbg !4899

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4900
  %124 = ashr exact i64 %123, 48, !dbg !4900
  store i64 %124, i64* %20, align 8, !dbg !4903
  br label %177, !dbg !4904

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4905

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4908
  call void @llvm.dbg.value(metadata i8* %127, metadata !4696, metadata !DIExpression()), !dbg !4822
  %128 = bitcast i8* %77 to i32*, !dbg !4908
  %129 = load i32, i32* %128, align 4, !dbg !4908
  %130 = zext i32 %129 to i64, !dbg !4908
  store i64 %130, i64* %20, align 8, !dbg !4910
  br label %157, !dbg !4911

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %132, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %132, metadata !4696, metadata !DIExpression()), !dbg !4822
  %133 = bitcast i8* %77 to i32*, !dbg !4912
  %134 = load i32, i32* %133, align 4, !dbg !4912
  %135 = zext i32 %134 to i64, !dbg !4912
  store i64 %135, i64* %20, align 8, !dbg !4912
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4914
  %138 = add i32 %137, 7, !dbg !4914
  %139 = and i32 %138, -8, !dbg !4914
  %140 = inttoptr i32 %139 to i8*, !dbg !4914
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4914
  call void @llvm.dbg.value(metadata i8* %141, metadata !4696, metadata !DIExpression()), !dbg !4822
  %142 = inttoptr i32 %139 to i64*, !dbg !4914
  %143 = load i64, i64* %142, align 8, !dbg !4914
  store i64 %143, i64* %20, align 8, !dbg !4915
  br label %157, !dbg !4916

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4917
  %146 = add i32 %145, 7, !dbg !4917
  %147 = and i32 %146, -8, !dbg !4917
  %148 = inttoptr i32 %147 to i8*, !dbg !4917
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4917
  call void @llvm.dbg.value(metadata i8* %149, metadata !4696, metadata !DIExpression()), !dbg !4822
  %150 = inttoptr i32 %147 to i64*, !dbg !4917
  %151 = load i64, i64* %150, align 8, !dbg !4917
  store i64 %151, i64* %20, align 8, !dbg !4918
  br label %157, !dbg !4919

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %153, metadata !4696, metadata !DIExpression()), !dbg !4822
  %154 = bitcast i8* %77 to i32*, !dbg !4920
  %155 = load i32, i32* %154, align 4, !dbg !4920
  %156 = zext i32 %155 to i64, !dbg !4921
  store i64 %156, i64* %20, align 8, !dbg !4922
  br label %157, !dbg !4923

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4924
  call void @llvm.dbg.value(metadata i8* %159, metadata !4696, metadata !DIExpression()), !dbg !4822
  %160 = trunc i24 %79 to i4, !dbg !4925
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4925

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4926
  store i64 %162, i64* %20, align 8, !dbg !4929
  br label %177, !dbg !4930

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4931
  store i64 %164, i64* %20, align 8, !dbg !4934
  br label %177, !dbg !4935

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4936
  %167 = add i32 %166, 7, !dbg !4936
  %168 = and i32 %167, -8, !dbg !4936
  %169 = inttoptr i32 %168 to i8*, !dbg !4936
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4936
  call void @llvm.dbg.value(metadata i8* %170, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %170, metadata !4696, metadata !DIExpression()), !dbg !4822
  %171 = inttoptr i32 %168 to double*, !dbg !4936
  %172 = load double, double* %171, align 8, !dbg !4936
  store double %172, double* %19, align 8, !dbg !4936
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4940
  call void @llvm.dbg.value(metadata i8* %174, metadata !4696, metadata !DIExpression()), !dbg !4822
  %175 = bitcast i8* %77 to i8**, !dbg !4940
  %176 = load i8*, i8** %175, align 4, !dbg !4940
  store i8* %176, i8** %18, align 8, !dbg !4943
  br label %177, !dbg !4944

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4836
  call void @llvm.dbg.value(metadata i8* %178, metadata !4696, metadata !DIExpression()), !dbg !4822
  %179 = and i24 %75, 3, !dbg !4945
  %180 = icmp eq i24 %179, 0, !dbg !4945
  br i1 %180, label %185, label %181, !dbg !4945

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %182, metadata !4771, metadata !DIExpression()), !dbg !4947
  %183 = icmp slt i32 %182, 0, !dbg !4948
  %184 = add i32 %182, %29, !dbg !4946
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4950
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4951

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4952
  call void @llvm.dbg.value(metadata i32 %188, metadata !4775, metadata !DIExpression()), !dbg !4953
  %189 = icmp slt i32 %188, 0, !dbg !4954
  %190 = add i32 %29, 1, !dbg !4952
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %192, metadata !4763, metadata !DIExpression()), !dbg !4836
  %193 = icmp sgt i32 %76, -1, !dbg !4957
  br i1 %193, label %194, label %196, !dbg !4959

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %195, metadata !4778, metadata !DIExpression()), !dbg !4962
  br label %241, !dbg !4963

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %197, metadata !4778, metadata !DIExpression()), !dbg !4962
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4763, metadata !DIExpression()), !dbg !4836
  %199 = load i64, i64* %20, align 8, !dbg !4966
  %200 = trunc i64 %199 to i8, !dbg !4967
  store i8 %200, i8* %10, align 1, !dbg !4968
  call void @llvm.dbg.value(metadata i8* %23, metadata !4764, metadata !DIExpression()), !dbg !4836
  br label %245, !dbg !4969

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4970
  %203 = icmp eq i24 %202, 0, !dbg !4970
  %204 = trunc i24 %75 to i8, !dbg !4972
  %205 = shl i8 %204, 1, !dbg !4972
  %206 = and i8 %205, 32, !dbg !4972
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4972
  call void @llvm.dbg.value(metadata i8 %207, metadata !4765, metadata !DIExpression()), !dbg !4836
  %208 = load i64, i64* %20, align 8, !dbg !4973
  call void @llvm.dbg.value(metadata i64 %208, metadata !4703, metadata !DIExpression()), !dbg !4822
  %209 = icmp slt i64 %208, 0, !dbg !4974
  br i1 %209, label %210, label %212, !dbg !4976

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4765, metadata !DIExpression()), !dbg !4836
  %211 = sub nsw i64 0, %208, !dbg !4977
  store i64 %211, i64* %20, align 8, !dbg !4979
  br label %212, !dbg !4980

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4836
  call void @llvm.dbg.value(metadata i8 %213, metadata !4765, metadata !DIExpression()), !dbg !4836
  %214 = load i64, i64* %20, align 8, !dbg !4981
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4982
  call void @llvm.dbg.value(metadata i8* %215, metadata !4763, metadata !DIExpression()), !dbg !4836
  br label %216, !dbg !4983

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4984
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4985
  call void @llvm.dbg.value(metadata i8* %218, metadata !4763, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8 %217, metadata !4765, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.label(metadata !4821), !dbg !4986
  %219 = icmp sgt i32 %76, -1, !dbg !4987
  br i1 %219, label %222, label %220, !dbg !4988

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4989
  br label %245, !dbg !4988

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4991
  %224 = sub i32 %22, %223, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %224, metadata !4780, metadata !DIExpression()), !dbg !4992
  %225 = load i24, i24* %15, align 8, !dbg !4993
  %226 = and i24 %225, -65, !dbg !4993
  store i24 %226, i24* %15, align 8, !dbg !4993
  %227 = icmp ugt i32 %76, %224, !dbg !4994
  br i1 %227, label %228, label %245, !dbg !4996

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4997
  store i32 %229, i32* %16, align 4, !dbg !4999
  br label %245, !dbg !5000

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5001
  %232 = icmp eq i8* %231, null, !dbg !5003
  br i1 %232, label %245, label %233, !dbg !5004

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5005
  %235 = zext i32 %234 to i64, !dbg !5005
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %236, metadata !4763, metadata !DIExpression()), !dbg !4836
  %237 = load i24, i24* %15, align 8, !dbg !5008
  %238 = or i24 %237, 1048576, !dbg !5008
  store i24 %238, i24* %15, align 8, !dbg !5008
  store i8 120, i8* %21, align 1, !dbg !5009
  br label %216, !dbg !5010

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5011
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5014
  br label %363, !dbg !5015

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5016
  call void @llvm.dbg.value(metadata i32 %242, metadata !4778, metadata !DIExpression()), !dbg !4962
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5017
  call void @llvm.dbg.value(metadata i32 -1, metadata !4762, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 %29, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %192, metadata !4763, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8* %243, metadata !4764, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8 0, metadata !4765, metadata !DIExpression()), !dbg !4836
  %244 = icmp eq i8* %192, null, !dbg !5018
  br i1 %244, label %363, label %245, !dbg !5020, !llvm.loop !4832

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4989
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata i32 0, metadata !4784, metadata !DIExpression()), !dbg !4836
  %250 = zext i8 %249 to i32, !dbg !5021
  %251 = icmp eq i8 %249, 0, !dbg !5023
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata i32 undef, metadata !4783, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata i32 undef, metadata !4783, metadata !DIExpression()), !dbg !4836
  %252 = icmp sgt i32 %58, 0, !dbg !5024
  br i1 %252, label %253, label %302, !dbg !5025

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4989
  %255 = icmp eq i24 %254, 0, !dbg !4989
  %256 = ptrtoint i8* %248 to i32, !dbg !5026
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  %257 = ptrtoint i8* %247 to i32, !dbg !5026
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  %258 = xor i1 %251, true, !dbg !5027
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  %259 = sext i1 %258 to i32, !dbg !5027
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  %260 = lshr i24 %246, 19, !dbg !5028
  %261 = and i24 %260, 1, !dbg !5028
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5028
  %263 = zext i24 %262 to i32, !dbg !5028
  %264 = add i32 %257, %259, !dbg !5028
  %265 = add i32 %256, %263, !dbg !5028
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  %266 = and i24 %246, 4194304, !dbg !5029
  %267 = icmp eq i24 %266, 0, !dbg !5029
  %268 = load i32, i32* %16, align 4, !dbg !5031
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4783, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4836
  call void @llvm.dbg.value(metadata i32 undef, metadata !4783, metadata !DIExpression()), !dbg !4836
  %269 = load i32, i32* %17, align 8, !dbg !5032
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5032
  call void @llvm.dbg.value(metadata i32 undef, metadata !4783, metadata !DIExpression()), !dbg !4836
  %271 = add i32 %264, %58, !dbg !5032
  %272 = add i32 %265, %268, !dbg !5032
  %273 = add i32 %272, %270, !dbg !5033
  %274 = sub i32 %271, %273, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %274, metadata !4761, metadata !DIExpression()), !dbg !4836
  %275 = and i24 %246, 4, !dbg !5034
  %276 = icmp eq i24 %275, 0, !dbg !5034
  br i1 %276, label %277, label %302, !dbg !5035

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4785, metadata !DIExpression()), !dbg !5036
  %278 = and i24 %246, 64, !dbg !5037
  %279 = icmp eq i24 %278, 0, !dbg !5037
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5038
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5038
  %282 = select i1 %279, i32 32, i32 48, !dbg !5038
  br i1 %280, label %287, label %283, !dbg !5038

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5039
  call void @llvm.dbg.value(metadata i32 %284, metadata !4790, metadata !DIExpression()), !dbg !5040
  %285 = icmp slt i32 %284, 0, !dbg !5041
  %286 = add i32 %29, 1, !dbg !5039
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4836
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %290, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8 undef, metadata !4785, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8 %288, metadata !4765, metadata !DIExpression()), !dbg !4836
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5043
  %292 = add i32 %291, -1, !dbg !5043
  br label %293, !dbg !5043

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5044
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %295, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %294, metadata !4761, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i32 %294, metadata !4761, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4836
  %296 = icmp sgt i32 %294, 0, !dbg !5045
  br i1 %296, label %297, label %302, !dbg !5043

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %298, metadata !4761, metadata !DIExpression()), !dbg !4836
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5047
  call void @llvm.dbg.value(metadata i32 %299, metadata !4796, metadata !DIExpression()), !dbg !5048
  %300 = icmp slt i32 %299, 0, !dbg !5049
  %301 = add i32 %295, 1, !dbg !5047
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %300, label %361, label %293, !llvm.loop !5051

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4836
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4836
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %305, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %304, metadata !4761, metadata !DIExpression()), !dbg !4836
  call void @llvm.dbg.value(metadata i8 %303, metadata !4765, metadata !DIExpression()), !dbg !4836
  %306 = icmp eq i8 %303, 0, !dbg !5053
  br i1 %306, label %312, label %307, !dbg !5054

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5055
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %309, metadata !4799, metadata !DIExpression()), !dbg !5057
  %310 = icmp slt i32 %309, 0, !dbg !5058
  %311 = add i32 %305, 1, !dbg !5056
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %313, metadata !4702, metadata !DIExpression()), !dbg !4822
  %314 = lshr i24 %246, 20, !dbg !5060
  %315 = lshr i24 %246, 19, !dbg !5061
  %316 = or i24 %314, %315, !dbg !5062
  %317 = and i24 %316, 1, !dbg !5062
  %318 = icmp eq i24 %317, 0, !dbg !5062
  br i1 %318, label %323, label %319, !dbg !5063

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5064
  call void @llvm.dbg.value(metadata i32 %320, metadata !4803, metadata !DIExpression()), !dbg !5065
  %321 = icmp slt i32 %320, 0, !dbg !5066
  %322 = add i32 %313, 1, !dbg !5064
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %324, metadata !4702, metadata !DIExpression()), !dbg !4822
  %325 = and i24 %246, 1048576, !dbg !5068
  %326 = icmp eq i24 %325, 0, !dbg !5068
  br i1 %326, label %333, label %327, !dbg !5069

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5070
  %329 = zext i8 %328 to i32, !dbg !5070
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %330, metadata !4809, metadata !DIExpression()), !dbg !5071
  %331 = icmp slt i32 %330, 0, !dbg !5072
  %332 = add i32 %324, 1, !dbg !5070
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %334, metadata !4702, metadata !DIExpression()), !dbg !4822
  %335 = load i32, i32* %16, align 4, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %335, metadata !4784, metadata !DIExpression()), !dbg !4836
  br label %336, !dbg !5075

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5076
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %338, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %337, metadata !4784, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4836
  %339 = icmp sgt i32 %337, 0, !dbg !5077
  br i1 %339, label %340, label %345, !dbg !5075

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %341, metadata !4784, metadata !DIExpression()), !dbg !4836
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5079
  call void @llvm.dbg.value(metadata i32 %342, metadata !4813, metadata !DIExpression()), !dbg !5080
  %343 = icmp slt i32 %342, 0, !dbg !5081
  %344 = add i32 %338, 1, !dbg !5079
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %343, label %361, label %336, !llvm.loop !5083

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %346, metadata !4816, metadata !DIExpression()), !dbg !5086
  %347 = icmp slt i32 %346, 0, !dbg !5087
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %349, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %304, metadata !4761, metadata !DIExpression()), !dbg !4836
  %350 = icmp sgt i32 %304, 0, !dbg !5089
  br i1 %350, label %351, label %363, !dbg !5090

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5090
  %353 = add i32 %352, %338, !dbg !5090
  br label %354, !dbg !5090

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %355, metadata !4761, metadata !DIExpression()), !dbg !4836
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %356, metadata !4818, metadata !DIExpression()), !dbg !5092
  %357 = icmp slt i32 %356, 0, !dbg !5093
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5095
  call void @llvm.dbg.value(metadata i32 undef, metadata !4702, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4822
  call void @llvm.dbg.value(metadata i32 %359, metadata !4761, metadata !DIExpression()), !dbg !4836
  %360 = icmp sgt i32 %355, 1, !dbg !5089
  br i1 %360, label %354, label %363, !dbg !5090, !llvm.loop !5096

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4833
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %364, metadata !4702, metadata !DIExpression()), !dbg !4822
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4833
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4822
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5098
  ret i32 %366, !dbg !5098
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5099 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5103, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i8* %1, metadata !5104, metadata !DIExpression()), !dbg !5105
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5106
  store i24 0, i24* %3, align 4, !dbg !5106
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5106
  store i8 0, i8* %4, align 1, !dbg !5106
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5106
  store i32 0, i32* %5, align 4, !dbg !5106
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5106
  store i32 0, i32* %6, align 4, !dbg !5106
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %7, metadata !5104, metadata !DIExpression()), !dbg !5105
  %8 = load i8, i8* %7, align 1, !dbg !5108
  %9 = icmp eq i8 %8, 37, !dbg !5110
  br i1 %9, label %10, label %12, !dbg !5111

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %11, metadata !5104, metadata !DIExpression()), !dbg !5105
  store i8 37, i8* %4, align 1, !dbg !5114
  br label %18, !dbg !5115

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %13, metadata !5104, metadata !DIExpression()), !dbg !5105
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5117
  call void @llvm.dbg.value(metadata i8* %14, metadata !5104, metadata !DIExpression()), !dbg !5105
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %15, metadata !5104, metadata !DIExpression()), !dbg !5105
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5119
  call void @llvm.dbg.value(metadata i8* %16, metadata !5104, metadata !DIExpression()), !dbg !5105
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %17, metadata !5104, metadata !DIExpression()), !dbg !5105
  br label %18, !dbg !5121

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5105
  ret i8* %19, !dbg !5122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5123 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5127, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i8* %1, metadata !5128, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i8* %2, metadata !5129, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i8* %3, metadata !5130, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 0, metadata !5131, metadata !DIExpression()), !dbg !5134
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5135

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5136
  call void @llvm.dbg.value(metadata i32 %9, metadata !5131, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i8* %8, metadata !5129, metadata !DIExpression()), !dbg !5134
  %10 = icmp ult i8* %8, %3, !dbg !5137
  br i1 %10, label %11, label %13, !dbg !5138

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5139
  br label %17, !dbg !5138

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5140

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5141
  %16 = icmp eq i8 %15, 0, !dbg !5140
  br i1 %16, label %24, label %17, !dbg !5135

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5139
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5142
  call void @llvm.dbg.value(metadata i8* %19, metadata !5129, metadata !DIExpression()), !dbg !5134
  %20 = zext i8 %18 to i32, !dbg !5143
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %21, metadata !5132, metadata !DIExpression()), !dbg !5145
  %22 = icmp slt i32 %21, 0, !dbg !5146
  %23 = add i32 %9, 1, !dbg !5148
  call void @llvm.dbg.value(metadata i32 undef, metadata !5131, metadata !DIExpression()), !dbg !5134
  br i1 %22, label %24, label %7, !llvm.loop !5149

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5134
  ret i32 %25, !dbg !5151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5152 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5156, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5157, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata i8* %2, metadata !5158, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata i8* %3, metadata !5159, metadata !DIExpression()), !dbg !5166
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5167
  %6 = load i8, i8* %5, align 1, !dbg !5167
  %7 = zext i8 %6 to i32, !dbg !5168
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5169
  %9 = icmp eq i32 %8, 0, !dbg !5169
  call void @llvm.dbg.value(metadata i1 %9, metadata !5160, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5166
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %10, metadata !5161, metadata !DIExpression()), !dbg !5166
  %11 = ptrtoint i8* %3 to i32, !dbg !5171
  %12 = ptrtoint i8* %2 to i32, !dbg !5171
  %13 = sub i32 %11, %12, !dbg !5171
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %14, metadata !5163, metadata !DIExpression()), !dbg !5166
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5173

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5166
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5156, metadata !DIExpression()), !dbg !5166
  call void @llvm.dbg.value(metadata i8* %18, metadata !5163, metadata !DIExpression()), !dbg !5166
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5174
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %25, metadata !5164, metadata !DIExpression()), !dbg !5176
  %26 = icmp ult i32 %25, 10, !dbg !5177
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5178
  %28 = add i32 %27, %25, !dbg !5176
  %29 = trunc i32 %28 to i8, !dbg !5178
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %30, metadata !5163, metadata !DIExpression()), !dbg !5166
  store i8 %29, i8* %30, align 1, !dbg !5180
  call void @llvm.dbg.value(metadata i64 %22, metadata !5156, metadata !DIExpression()), !dbg !5166
  %31 = icmp uge i64 %19, %15, !dbg !5181
  %32 = icmp ugt i8* %30, %2, !dbg !5182
  %33 = and i1 %31, %32, !dbg !5182
  br i1 %33, label %17, label %34, !dbg !5183, !llvm.loop !5184

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5186
  %36 = load i24, i24* %35, align 4, !dbg !5186
  %37 = and i24 %36, 32, !dbg !5186
  %38 = icmp eq i24 %37, 0, !dbg !5186
  br i1 %38, label %44, label %39, !dbg !5188

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5189

40:                                               ; preds = %39
  br label %41, !dbg !5191

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5195
  store i24 %43, i24* %35, align 4, !dbg !5195
  br label %44, !dbg !5196

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5197 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5203, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i8* %1, metadata !5204, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %2, metadata !5205, metadata !DIExpression()), !dbg !5206
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5207
  %5 = load i24, i24* %4, align 4, !dbg !5207
  %6 = lshr i24 %5, 11, !dbg !5207
  %7 = and i24 %6, 15, !dbg !5207
  %8 = zext i24 %7 to i32, !dbg !5207
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5208

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5209
  store i32 %2, i32* %10, align 4, !dbg !5211
  br label %28, !dbg !5212

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5213
  store i8 %12, i8* %1, align 1, !dbg !5214
  br label %28, !dbg !5215

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5216
  %15 = bitcast i8* %1 to i16*, !dbg !5217
  store i16 %14, i16* %15, align 2, !dbg !5218
  br label %28, !dbg !5219

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5220
  store i32 %2, i32* %17, align 4, !dbg !5221
  br label %28, !dbg !5222

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5223
  %20 = bitcast i8* %1 to i64*, !dbg !5224
  store i64 %19, i64* %20, align 8, !dbg !5225
  br label %28, !dbg !5226

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5227
  %23 = bitcast i8* %1 to i64*, !dbg !5228
  store i64 %22, i64* %23, align 8, !dbg !5229
  br label %28, !dbg !5230

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5231
  store i32 %2, i32* %25, align 4, !dbg !5232
  br label %28, !dbg !5233

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5234
  store i32 %2, i32* %27, align 4, !dbg !5235
  br label %28, !dbg !5236

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5237
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5241, metadata !DIExpression()), !dbg !5242
  %2 = add i32 %0, -65, !dbg !5243
  %3 = icmp ult i32 %2, 26, !dbg !5244
  %4 = zext i1 %3 to i32, !dbg !5244
  ret i32 %4, !dbg !5245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5246 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5250, metadata !DIExpression()), !dbg !5251
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5252

2:                                                ; preds = %1
  br label %4, !dbg !5253

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5255

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5256
  ret i32 %5, !dbg !5257
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5258 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5260, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %1, metadata !5261, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8 1, metadata !5262, metadata !DIExpression()), !dbg !5263
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5264

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %5, metadata !5261, metadata !DIExpression()), !dbg !5263
  %6 = load i8, i8* %5, align 1, !dbg !5265
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5267

7:                                                ; preds = %4
  br label %11, !dbg !5268

8:                                                ; preds = %4
  br label %11, !dbg !5270

9:                                                ; preds = %4
  br label %11, !dbg !5271

10:                                               ; preds = %4
  br label %11, !dbg !5272

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5273
  %14 = or i24 %13, %12, !dbg !5273
  store i24 %14, i24* %3, align 4, !dbg !5273
  call void @llvm.dbg.value(metadata i8 poison, metadata !5262, metadata !DIExpression()), !dbg !5263
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5261, metadata !DIExpression()), !dbg !5263
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %15, metadata !5261, metadata !DIExpression()), !dbg !5263
  %17 = load i24, i24* %3, align 4, !dbg !5274
  %18 = and i24 %17, 68, !dbg !5276
  %19 = icmp eq i24 %18, 68, !dbg !5276
  br i1 %19, label %20, label %22, !dbg !5276

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5277
  store i24 %21, i24* %3, align 4, !dbg !5277
  br label %22, !dbg !5279

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5280
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5281 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5283, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8* %1, metadata !5284, metadata !DIExpression()), !dbg !5287
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5288
  %5 = load i24, i24* %4, align 4, !dbg !5289
  %6 = or i24 %5, 128, !dbg !5289
  store i24 %6, i24* %4, align 4, !dbg !5289
  call void @llvm.dbg.value(metadata i8* %1, metadata !5284, metadata !DIExpression()), !dbg !5287
  %7 = load i8, i8* %1, align 1, !dbg !5290
  %8 = icmp eq i8 %7, 42, !dbg !5292
  br i1 %8, label %9, label %12, !dbg !5293

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5294
  store i24 %10, i24* %4, align 4, !dbg !5294
  call void @llvm.dbg.value(metadata i8* %1, metadata !5284, metadata !DIExpression()), !dbg !5287
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5296
  call void @llvm.dbg.value(metadata i8* %11, metadata !5284, metadata !DIExpression()), !dbg !5287
  store i8* %11, i8** %3, align 4, !dbg !5296
  br label %29, !dbg !5297

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5285, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8** %3, metadata !5284, metadata !DIExpression(DW_OP_deref)), !dbg !5287
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5298
  call void @llvm.dbg.value(metadata i32 %13, metadata !5286, metadata !DIExpression()), !dbg !5287
  %14 = load i8*, i8** %3, align 4, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %14, metadata !5284, metadata !DIExpression()), !dbg !5287
  %15 = icmp eq i8* %14, %1, !dbg !5301
  br i1 %15, label %29, label %16, !dbg !5302

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5303
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5305
  store i32 %13, i32* %18, align 4, !dbg !5306
  %19 = lshr i32 %13, 31, !dbg !5307
  %20 = lshr i24 %17, 1, !dbg !5308
  %21 = and i24 %20, 1, !dbg !5308
  %22 = zext i24 %21 to i32, !dbg !5308
  %23 = or i32 %19, %22, !dbg !5308
  %24 = trunc i32 %23 to i24, !dbg !5308
  %25 = shl nuw nsw i24 %24, 1, !dbg !5308
  %26 = and i24 %17, -131, !dbg !5308
  %27 = or i24 %26, 128, !dbg !5308
  %28 = or i24 %25, %27, !dbg !5308
  store i24 %28, i24* %4, align 4, !dbg !5308
  br label %29, !dbg !5309

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5287
  ret i8* %30, !dbg !5310
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5311 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5313, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %1, metadata !5314, metadata !DIExpression()), !dbg !5316
  %4 = load i8, i8* %1, align 1, !dbg !5317
  %5 = icmp eq i8 %4, 46, !dbg !5318
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5319
  %7 = load i24, i24* %6, align 4, !dbg !5320
  %8 = select i1 %5, i24 512, i24 0, !dbg !5320
  %9 = and i24 %7, -513, !dbg !5320
  %10 = or i24 %9, %8, !dbg !5320
  store i24 %10, i24* %6, align 4, !dbg !5320
  br i1 %5, label %11, label %32, !dbg !5321

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5314, metadata !DIExpression()), !dbg !5316
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %12, metadata !5314, metadata !DIExpression()), !dbg !5316
  store i8* %12, i8** %3, align 4, !dbg !5322
  %13 = load i8, i8* %12, align 1, !dbg !5323
  %14 = icmp eq i8 %13, 42, !dbg !5325
  br i1 %14, label %15, label %18, !dbg !5326

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5327
  store i24 %16, i24* %6, align 4, !dbg !5327
  call void @llvm.dbg.value(metadata i8* %12, metadata !5314, metadata !DIExpression()), !dbg !5316
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %17, metadata !5314, metadata !DIExpression()), !dbg !5316
  store i8* %17, i8** %3, align 4, !dbg !5329
  br label %32, !dbg !5330

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5314, metadata !DIExpression(DW_OP_deref)), !dbg !5316
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %19, metadata !5315, metadata !DIExpression()), !dbg !5316
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5332
  store i32 %19, i32* %20, align 4, !dbg !5333
  %21 = lshr i32 %19, 31, !dbg !5334
  %22 = load i24, i24* %6, align 4, !dbg !5335
  %23 = lshr i24 %22, 1, !dbg !5335
  %24 = and i24 %23, 1, !dbg !5335
  %25 = zext i24 %24 to i32, !dbg !5335
  %26 = or i32 %21, %25, !dbg !5335
  %27 = trunc i32 %26 to i24, !dbg !5335
  %28 = shl nuw nsw i24 %27, 1, !dbg !5335
  %29 = and i24 %22, -3, !dbg !5335
  %30 = or i24 %28, %29, !dbg !5335
  store i24 %30, i24* %6, align 4, !dbg !5335
  %31 = load i8*, i8** %3, align 4, !dbg !5336
  call void @llvm.dbg.value(metadata i8* %31, metadata !5314, metadata !DIExpression()), !dbg !5316
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5316
  ret i8* %33, !dbg !5337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5338 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5340, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i8* %1, metadata !5341, metadata !DIExpression()), !dbg !5342
  %3 = load i8, i8* %1, align 1, !dbg !5343
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5344

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5345
  call void @llvm.dbg.value(metadata i8* %5, metadata !5341, metadata !DIExpression()), !dbg !5342
  %6 = load i8, i8* %5, align 1, !dbg !5348
  %7 = icmp eq i8 %6, 104, !dbg !5349
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5350
  %9 = load i24, i24* %8, align 4, !dbg !5350
  %10 = and i24 %9, -30721, !dbg !5350
  br i1 %7, label %11, label %14, !dbg !5351

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5352
  store i24 %12, i24* %8, align 4, !dbg !5352
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5354
  call void @llvm.dbg.value(metadata i8* %13, metadata !5341, metadata !DIExpression()), !dbg !5342
  br label %56, !dbg !5355

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5356
  store i24 %15, i24* %8, align 4, !dbg !5356
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %17, metadata !5341, metadata !DIExpression()), !dbg !5342
  %18 = load i8, i8* %17, align 1, !dbg !5360
  %19 = icmp eq i8 %18, 108, !dbg !5361
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5362
  %21 = load i24, i24* %20, align 4, !dbg !5362
  %22 = and i24 %21, -30721, !dbg !5362
  br i1 %19, label %23, label %26, !dbg !5363

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5364
  store i24 %24, i24* %20, align 4, !dbg !5364
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5366
  call void @llvm.dbg.value(metadata i8* %25, metadata !5341, metadata !DIExpression()), !dbg !5342
  br label %56, !dbg !5367

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5368
  store i24 %27, i24* %20, align 4, !dbg !5368
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5370
  %30 = load i24, i24* %29, align 4, !dbg !5371
  %31 = and i24 %30, -30721, !dbg !5371
  %32 = or i24 %31, 10240, !dbg !5371
  store i24 %32, i24* %29, align 4, !dbg !5371
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5372
  call void @llvm.dbg.value(metadata i8* %33, metadata !5341, metadata !DIExpression()), !dbg !5342
  br label %56, !dbg !5373

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5374
  %36 = load i24, i24* %35, align 4, !dbg !5375
  %37 = and i24 %36, -30721, !dbg !5375
  %38 = or i24 %37, 12288, !dbg !5375
  store i24 %38, i24* %35, align 4, !dbg !5375
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %39, metadata !5341, metadata !DIExpression()), !dbg !5342
  br label %56, !dbg !5377

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5378
  %42 = load i24, i24* %41, align 4, !dbg !5379
  %43 = and i24 %42, -30721, !dbg !5379
  %44 = or i24 %43, 14336, !dbg !5379
  store i24 %44, i24* %41, align 4, !dbg !5379
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5380
  call void @llvm.dbg.value(metadata i8* %45, metadata !5341, metadata !DIExpression()), !dbg !5342
  br label %56, !dbg !5381

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5382
  %48 = load i24, i24* %47, align 4, !dbg !5383
  %49 = and i24 %48, -30723, !dbg !5383
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5384
  call void @llvm.dbg.value(metadata i8* %50, metadata !5341, metadata !DIExpression()), !dbg !5342
  %51 = or i24 %49, 16386, !dbg !5385
  store i24 %51, i24* %47, align 4, !dbg !5385
  br label %56, !dbg !5386

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5387
  %54 = load i24, i24* %53, align 4, !dbg !5388
  %55 = and i24 %54, -30721, !dbg !5388
  store i24 %55, i24* %53, align 4, !dbg !5388
  br label %56, !dbg !5389

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5341, metadata !DIExpression()), !dbg !5342
  ret i8* %57, !dbg !5390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5391 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5393, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8* %1, metadata !5394, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8 0, metadata !5395, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8* %1, metadata !5394, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5398
  %3 = load i8, i8* %1, align 1, !dbg !5399
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5400
  store i8 %3, i8* %4, align 1, !dbg !5401
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5402

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5403

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5404
  %9 = load i24, i24* %8, align 4, !dbg !5404
  %10 = and i24 %9, -458753, !dbg !5404
  %11 = or i24 %10, %7, !dbg !5404
  call void @llvm.dbg.label(metadata !5396), !dbg !5405
  %12 = and i24 %9, 30720, !dbg !5406
  %13 = icmp eq i24 %12, 16384, !dbg !5406
  %14 = zext i1 %13 to i24, !dbg !5408
  %15 = or i24 %11, %14, !dbg !5408
  %16 = icmp eq i8 %3, 99, !dbg !5409
  br i1 %16, label %17, label %43, !dbg !5411

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5412
  %19 = icmp ne i24 %18, 0, !dbg !5412
  call void @llvm.dbg.value(metadata i1 %19, metadata !5395, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5398
  br label %43, !dbg !5414

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5415
  %22 = load i24, i24* %21, align 4, !dbg !5416
  %23 = and i24 %22, -458753, !dbg !5416
  %24 = or i24 %23, 262144, !dbg !5416
  call void @llvm.dbg.value(metadata i8 1, metadata !5395, metadata !DIExpression()), !dbg !5398
  br label %43, !dbg !5417

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5420
  %27 = load i24, i24* %26, align 4, !dbg !5421
  %28 = and i24 %27, -458753, !dbg !5421
  %29 = or i24 %28, 196608, !dbg !5421
  %30 = and i24 %27, 30720, !dbg !5422
  %31 = icmp eq i24 %30, 16384, !dbg !5422
  br label %43, !dbg !5424

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5425
  %34 = load i24, i24* %33, align 4, !dbg !5426
  %35 = and i24 %34, -458753, !dbg !5426
  %36 = or i24 %35, 196608, !dbg !5426
  %37 = and i24 %34, 30720, !dbg !5427
  %38 = icmp ne i24 %37, 0, !dbg !5427
  br label %43, !dbg !5429

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5430
  %41 = load i24, i24* %40, align 4, !dbg !5431
  %42 = or i24 %41, 1, !dbg !5431
  br label %43, !dbg !5432

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5433
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5434
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5435
  call void @llvm.dbg.value(metadata i8* %48, metadata !5394, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8 poison, metadata !5395, metadata !DIExpression()), !dbg !5398
  %49 = lshr i24 %44, 1, !dbg !5433
  %50 = and i24 %49, 1, !dbg !5433
  %51 = zext i24 %50 to i32, !dbg !5433
  %52 = or i32 %51, %47, !dbg !5433
  %53 = trunc i32 %52 to i24, !dbg !5433
  %54 = shl nuw nsw i24 %53, 1, !dbg !5433
  %55 = and i24 %44, -3, !dbg !5433
  %56 = or i24 %54, %55, !dbg !5433
  store i24 %56, i24* %46, align 4, !dbg !5433
  ret i8* %48, !dbg !5436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5437 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5441, metadata !DIExpression()), !dbg !5444
  %2 = load i8*, i8** %0, align 4, !dbg !5445
  call void @llvm.dbg.value(metadata i8* %2, metadata !5442, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata i32 0, metadata !5443, metadata !DIExpression()), !dbg !5444
  %3 = load i8, i8* %2, align 1, !dbg !5446
  %4 = zext i8 %3 to i32, !dbg !5447
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5448
  %6 = icmp eq i32 %5, 0, !dbg !5449
  br i1 %6, label %19, label %7, !dbg !5449

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5443, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata i8* %10, metadata !5442, metadata !DIExpression()), !dbg !5444
  %11 = mul i32 %9, 10, !dbg !5450
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5452
  call void @llvm.dbg.value(metadata i8* %12, metadata !5442, metadata !DIExpression()), !dbg !5444
  %13 = add i32 %11, -48, !dbg !5453
  %14 = add i32 %13, %8, !dbg !5454
  call void @llvm.dbg.value(metadata i32 %14, metadata !5443, metadata !DIExpression()), !dbg !5444
  %15 = load i8, i8* %12, align 1, !dbg !5446
  %16 = zext i8 %15 to i32, !dbg !5447
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5448
  %18 = icmp eq i32 %17, 0, !dbg !5449
  br i1 %18, label %19, label %7, !dbg !5449, !llvm.loop !5455

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5444
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5444
  store i8* %20, i8** %0, align 4, !dbg !5457
  ret i32 %21, !dbg !5458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5461, metadata !DIExpression()), !dbg !5462
  %2 = add i32 %0, -48, !dbg !5463
  %3 = icmp ult i32 %2, 10, !dbg !5464
  %4 = zext i1 %3 to i32, !dbg !5464
  ret i32 %4, !dbg !5465
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5471, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata i32 %1, metadata !5472, metadata !DIExpression()), !dbg !5473
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5474, !srcloc !5476
  ret void, !dbg !5477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5478 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5480, metadata !DIExpression()), !dbg !5488
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5489
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5481, metadata !DIExpression()), !dbg !5490
  call void @llvm.va_start(i8* nonnull %3), !dbg !5491
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5492
  %5 = load i32, i32* %4, align 4, !dbg !5492
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5492
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5492
  call void @llvm.va_end(i8* nonnull %3), !dbg !5493
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5494
  ret void, !dbg !5494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5495 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6149, !srcloc !6150
  ret void, !dbg !6151
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6154, metadata !DIExpression()), !dbg !6156
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6157
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6158
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6159, !srcloc !6168
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %3, metadata !6165, metadata !DIExpression()) #23, !dbg !6169
  call void @llvm.dbg.value(metadata i32 undef, metadata !6166, metadata !DIExpression()) #23, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %3, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.value(metadata i32 %3, metadata !6170, metadata !DIExpression()) #23, !dbg !6175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6177, !srcloc !6178
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6179
  ret i32 0, !dbg !6180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6181 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6183
  %2 = or i32 %1, 512, !dbg !6183
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6183
  ret void, !dbg !6184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6185 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6186
  %2 = or i32 %1, 1024, !dbg !6186
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6186
  ret void, !dbg !6187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6190, metadata !DIExpression()), !dbg !6191
  ret i32 0, !dbg !6192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6193 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6196, metadata !DIExpression()), !dbg !6204
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6205
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6197, metadata !DIExpression()), !dbg !6206
  call void @llvm.va_start(i8* nonnull %3), !dbg !6207
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6208
  %5 = load i32, i32* %4, align 4, !dbg !6208
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6208
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6208
  call void @llvm.va_end(i8* nonnull %3), !dbg !6209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6210
  ret void, !dbg !6210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6211 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6216, metadata !DIExpression()), !dbg !6217
  call void @llvm.dbg.value(metadata i8* %0, metadata !6215, metadata !DIExpression()), !dbg !6217
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6218
  ret void, !dbg !6219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6224, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.value(metadata i8* %1, metadata !6225, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.value(metadata i32 %2, metadata !6226, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.value(metadata i8* %1, metadata !6227, metadata !DIExpression()), !dbg !6228
  %4 = icmp eq i32 %2, 0, !dbg !6229
  br i1 %4, label %14, label %5, !dbg !6230

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6228
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6230

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.value(metadata i32 %10, metadata !6226, metadata !DIExpression()), !dbg !6228
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6231
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6233
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %11, metadata !6226, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.value(metadata i8* %12, metadata !6227, metadata !DIExpression()), !dbg !6228
  br i1 %13, label %14, label %8, !dbg !6234, !llvm.loop !6235

14:                                               ; preds = %8, %3
  ret void, !dbg !6237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6244
  %2 = add i32 %0, -1, !dbg !6245
  %3 = icmp ult i32 %2, 4, !dbg !6245
  %4 = shl i32 %2, 3, !dbg !6245
  %5 = lshr i32 1145657157, %4, !dbg !6245
  %6 = trunc i32 %5 to i8, !dbg !6245
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6245
  ret i8 %7, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6251, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 %1, metadata !6252, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 0, metadata !6253, metadata !DIExpression()), !dbg !6263
  br label %4, !dbg !6264

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6265
  call void @llvm.dbg.value(metadata i32 0, metadata !6255, metadata !DIExpression()), !dbg !6266
  br label %16, !dbg !6267

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6253, metadata !DIExpression()), !dbg !6263
  %6 = icmp ult i32 %5, %1, !dbg !6268
  br i1 %6, label %7, label %11, !dbg !6272

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6273
  %9 = load i8, i8* %8, align 1, !dbg !6273
  %10 = zext i8 %9 to i32, !dbg !6275
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6276
  br label %12, !dbg !6277

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6278
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6280
  call void @llvm.dbg.value(metadata i32 %13, metadata !6253, metadata !DIExpression()), !dbg !6263
  %14 = icmp eq i32 %13, 8, !dbg !6281
  br i1 %14, label %3, label %4, !dbg !6264, !llvm.loop !6282

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6284
  ret void, !dbg !6285

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6255, metadata !DIExpression()), !dbg !6266
  %18 = icmp ult i32 %17, %1, !dbg !6286
  br i1 %18, label %19, label %26, !dbg !6287

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6288
  %21 = load i8, i8* %20, align 1, !dbg !6288
  call void @llvm.dbg.value(metadata i8 %21, metadata !6257, metadata !DIExpression()), !dbg !6289
  %22 = zext i8 %21 to i32, !dbg !6290
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6291
  %24 = icmp eq i32 %23, 0, !dbg !6292
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6291
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6293
  br label %27, !dbg !6294

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6295
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %28, metadata !6255, metadata !DIExpression()), !dbg !6266
  %29 = icmp eq i32 %28, 8, !dbg !6298
  br i1 %29, label %15, label %16, !dbg !6267, !llvm.loop !6299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6303, metadata !DIExpression()), !dbg !6304
  %2 = add i32 %0, -32, !dbg !6305
  %3 = icmp ult i32 %2, 95, !dbg !6305
  %4 = zext i1 %3 to i32, !dbg !6305
  ret i32 %4, !dbg !6306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6356, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6357, metadata !DIExpression()), !dbg !6358
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6359
  br i1 %3, label %5, label %4, !dbg !6361

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6362
  br label %5, !dbg !6364

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6365
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6367 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6371, metadata !DIExpression()), !dbg !6372
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6373
  %3 = load i32, i32* %2, align 4, !dbg !6373
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6373
  %5 = load i32, i32* %4, align 4, !dbg !6373
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6373
  %7 = load i32, i32* %6, align 4, !dbg !6373
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6373
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6378
  %9 = load i32, i32* %8, align 4, !dbg !6378
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6378
  %11 = load i32, i32* %10, align 4, !dbg !6378
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6378
  %13 = load i32, i32* %12, align 4, !dbg !6378
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6378
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6383
  %15 = load i32, i32* %14, align 4, !dbg !6383
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6383
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6388
  %17 = load i32, i32* %16, align 4, !dbg !6388
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6388
  ret void, !dbg !6393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6394 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6411, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6412, metadata !DIExpression()), !dbg !6414
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6415
  %4 = load i32, i32* %3, align 4, !dbg !6415
  call void @llvm.dbg.value(metadata i32 %4, metadata !6413, metadata !DIExpression()), !dbg !6414
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6416
  ret void, !dbg !6417
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6418 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6422, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.value(metadata i8* %0, metadata !6423, metadata !DIExpression()), !dbg !6425
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6426
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6426
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6424, metadata !DIExpression()), !dbg !6427
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6427
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6428
  %5 = bitcast i8* %4 to i32*, !dbg !6428
  %6 = load i32, i32* %5, align 4, !dbg !6428
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6429
  store i32 %6, i32* %7, align 4, !dbg !6430
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6431
  unreachable, !dbg !6432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6436, metadata !DIExpression()), !dbg !6437
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6438
  ret void, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6444, metadata !DIExpression()), !dbg !6445
  %2 = icmp sgt i32 %0, -1, !dbg !6446
  br i1 %2, label %3, label %8, !dbg !6448

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6449, !srcloc !6451
  %4 = and i32 %0, 31, !dbg !6452
  %5 = shl nuw i32 1, %4, !dbg !6453
  %6 = lshr i32 %0, 5, !dbg !6454
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6455
  store volatile i32 %5, i32* %7, align 4, !dbg !6456
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6457, !srcloc !6458
  br label %8, !dbg !6459

8:                                                ; preds = %3, %1
  ret void, !dbg !6460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6463, metadata !DIExpression()), !dbg !6464
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6465
  ret void, !dbg !6466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6469, metadata !DIExpression()), !dbg !6470
  %2 = icmp sgt i32 %0, -1, !dbg !6471
  br i1 %2, label %3, label %8, !dbg !6473

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6474
  %5 = shl nuw i32 1, %4, !dbg !6476
  %6 = lshr i32 %0, 5, !dbg !6477
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6478
  store volatile i32 %5, i32* %7, align 4, !dbg !6479
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6480, !srcloc !6484
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6485, !srcloc !6488
  br label %8, !dbg !6489

8:                                                ; preds = %3, %1
  ret void, !dbg !6490
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6495, metadata !DIExpression()), !dbg !6496
  %2 = lshr i32 %0, 5, !dbg !6497
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6498
  %4 = load volatile i32, i32* %3, align 4, !dbg !6498
  %5 = and i32 %0, 31, !dbg !6499
  %6 = shl nuw i32 1, %5, !dbg !6499
  %7 = and i32 %4, %6, !dbg !6500
  ret i32 %7, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %1, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %2, metadata !6508, metadata !DIExpression()), !dbg !6509
  %4 = add i32 %1, 1, !dbg !6510
  call void @llvm.dbg.value(metadata i32 %4, metadata !6507, metadata !DIExpression()), !dbg !6509
  %5 = icmp ult i32 %4, 16, !dbg !6513
  br i1 %5, label %7, label %6, !dbg !6516

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6517
  unreachable, !dbg !6517

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6519
  ret void, !dbg !6520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6525, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.value(metadata i32 %1, metadata !6526, metadata !DIExpression()), !dbg !6527
  %3 = trunc i32 %1 to i8, !dbg !6528
  %4 = shl i8 %3, 4, !dbg !6528
  %5 = and i32 %0, 15, !dbg !6530
  %6 = add nsw i32 %5, -4, !dbg !6530
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6530
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6530
  %9 = icmp slt i32 %0, 0, !dbg !6530
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6530
  store volatile i8 %4, i8* %10, align 1, !dbg !6528
  ret void, !dbg !6531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6534, metadata !DIExpression()), !dbg !6535
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6536
  ret void, !dbg !6537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6538 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6540
  tail call void @z_arm_int_exit() #25, !dbg !6541
  ret void, !dbg !6542
}

; Function Attrs: optsize
declare !dbg !6543 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6544 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6546 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6548
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6549
  tail call void @z_bss_zero() #25, !dbg !6550
  tail call void @z_data_copy() #25, !dbg !6551
  tail call void @z_arm_interrupt_init() #25, !dbg !6552
  tail call void @z_cstart() #27, !dbg !6553
  unreachable, !dbg !6553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6554 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6555
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6556, !srcloc !6559
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6560, !srcloc !6563
  ret void, !dbg !6564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6565 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6566
  %2 = and i32 %1, -15728641, !dbg !6566
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6566
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6567, !srcloc !6574
  call void @llvm.dbg.value(metadata i32 %3, metadata !6572, metadata !DIExpression()) #23, !dbg !6575
  %4 = and i32 %3, -5, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %4, metadata !6577, metadata !DIExpression()) #23, !dbg !6582
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6586, !srcloc !6563
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6592, metadata !DIExpression()), !dbg !6593
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6594
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6595
  store i32 %0, i32* %3, align 4, !dbg !6596
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6597
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6598
  store i32 %4, i32* %5, align 4, !dbg !6599
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6600
  %7 = or i32 %6, 268435456, !dbg !6600
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6600
  call void @llvm.dbg.value(metadata i32 0, metadata !6601, metadata !DIExpression()) #23, !dbg !6604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6606, !srcloc !6607
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6608
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6609
  %10 = load i32, i32* %9, align 4, !dbg !6609
  ret i32 %10, !dbg !6610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6724, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6725, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %2, metadata !6726, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6727, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %4, metadata !6728, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %5, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %6, metadata !6730, metadata !DIExpression()), !dbg !6732
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6733
  call void @llvm.dbg.value(metadata i8* %8, metadata !6731, metadata !DIExpression()), !dbg !6732
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6734
  %10 = bitcast i8* %9 to i32*, !dbg !6734
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6735
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6736
  %12 = bitcast i8* %8 to i32*, !dbg !6737
  store i32 %11, i32* %12, align 4, !dbg !6738
  %13 = ptrtoint i8* %4 to i32, !dbg !6739
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6740
  %15 = bitcast i8* %14 to i32*, !dbg !6740
  store i32 %13, i32* %15, align 4, !dbg !6741
  %16 = ptrtoint i8* %5 to i32, !dbg !6742
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6743
  %18 = bitcast i8* %17 to i32*, !dbg !6743
  store i32 %16, i32* %18, align 4, !dbg !6744
  %19 = ptrtoint i8* %6 to i32, !dbg !6745
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6746
  %21 = bitcast i8* %20 to i32*, !dbg !6746
  store i32 %19, i32* %21, align 4, !dbg !6747
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6748
  %23 = bitcast i8* %22 to i32*, !dbg !6748
  store i32 16777216, i32* %23, align 4, !dbg !6749
  %24 = ptrtoint i8* %8 to i32, !dbg !6750
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6751
  store i32 %24, i32* %25, align 8, !dbg !6752
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6753
  store i32 0, i32* %26, align 4, !dbg !6754
  ret void, !dbg !6755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6761, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 %1, metadata !6762, metadata !DIExpression()), !dbg !6767
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6768
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6763, metadata !DIExpression()), !dbg !6767
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6769
  br i1 %4, label %19, label %5, !dbg !6771

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6766, metadata !DIExpression()), !dbg !6767
  %6 = icmp eq i32 %0, -22, !dbg !6772
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6772
  %8 = load i32, i32* %7, align 4, !dbg !6772
  br i1 %6, label %16, label %9, !dbg !6774

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6772
  %11 = icmp ule i32 %10, %0, !dbg !6772
  %12 = icmp ugt i32 %8, %0, !dbg !6772
  %13 = and i1 %12, %11, !dbg !6772
  %14 = icmp ugt i32 %8, %1, !dbg !6772
  %15 = and i1 %14, %13, !dbg !6772
  br i1 %15, label %18, label %19, !dbg !6772

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6772
  br i1 %17, label %18, label %19, !dbg !6774

18:                                               ; preds = %9, %16
  br label %19, !dbg !6775

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6767
  ret i32 %20, !dbg !6777
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6782, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %1, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6784, metadata !DIExpression()), !dbg !6785
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6786
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6787
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6788, !srcloc !6789
  unreachable, !dbg !6790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6791 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6809, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 %1, metadata !6810, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 %2, metadata !6811, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6812, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i32 0, metadata !6813, metadata !DIExpression()), !dbg !6819
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6820
  call void @llvm.dbg.value(metadata i32 %8, metadata !6814, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6819
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6821
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6821
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6822
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6822
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6818, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6824, metadata !DIExpression()) #23, !dbg !6827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6829, !srcloc !6830
  call void @llvm.dbg.value(metadata i8* %6, metadata !6816, metadata !DIExpression(DW_OP_deref)), !dbg !6819
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6831
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6817, metadata !DIExpression()), !dbg !6819
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6832
  br i1 %11, label %12, label %13, !dbg !6835

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6836
  unreachable, !dbg !6836

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %14, metadata !6814, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.value(metadata i8* %5, metadata !6815, metadata !DIExpression(DW_OP_deref)), !dbg !6819
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6839
  call void @llvm.dbg.value(metadata i32 %15, metadata !6813, metadata !DIExpression()), !dbg !6819
  %16 = load i8, i8* %5, align 1, !dbg !6840, !range !6842
  call void @llvm.dbg.value(metadata i8 %16, metadata !6815, metadata !DIExpression()), !dbg !6819
  %17 = icmp eq i8 %16, 0, !dbg !6840
  br i1 %17, label %18, label %35, !dbg !6843

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6844
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6845
  %21 = load i8, i8* %6, align 1, !dbg !6846, !range !6842
  call void @llvm.dbg.value(metadata i8 %21, metadata !6816, metadata !DIExpression()), !dbg !6819
  %22 = icmp eq i8 %21, 0, !dbg !6846
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6848
  %24 = load i32, i32* %23, align 4, !dbg !6848
  br i1 %22, label %30, label %25, !dbg !6849

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6850
  %27 = icmp eq i32 %26, 0, !dbg !6853
  br i1 %27, label %28, label %34, !dbg !6854

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6855
  br label %32, !dbg !6857

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6858
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6848
  br label %34, !dbg !6860

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6860
  br label %35, !dbg !6861

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6861
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6861
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6861
  ret void, !dbg !6861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6867, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i32 %1, metadata !6868, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i32 %2, metadata !6869, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i8* %3, metadata !6870, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata i8 0, metadata !6871, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6872, metadata !DIExpression()), !dbg !6873
  store i8 0, i8* %3, align 1, !dbg !6874
  %5 = icmp ugt i32 %2, -16777217, !dbg !6875
  br i1 %5, label %6, label %17, !dbg !6877

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6878
  %8 = icmp eq i32 %7, 8, !dbg !6878
  br i1 %8, label %9, label %10, !dbg !6878

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6880
  br label %17, !dbg !6886

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6887
  %12 = icmp eq i32 %11, 0, !dbg !6887
  br i1 %12, label %13, label %14, !dbg !6888

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6872, metadata !DIExpression()), !dbg !6873
  store i8 1, i8* %3, align 1, !dbg !6891
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6873
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6872, metadata !DIExpression()), !dbg !6873
  br label %17, !dbg !6894

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6873
  ret %struct.__esf* %18, !dbg !6895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6896 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6900, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 %1, metadata !6901, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i8* %2, metadata !6902, metadata !DIExpression()), !dbg !6904
  call void @llvm.dbg.value(metadata i32 0, metadata !6903, metadata !DIExpression()), !dbg !6904
  store i8 0, i8* %2, align 1, !dbg !6905
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6906

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6907
  call void @llvm.dbg.value(metadata i32 %5, metadata !6903, metadata !DIExpression()), !dbg !6904
  br label %12, !dbg !6909

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %7, metadata !6903, metadata !DIExpression()), !dbg !6904
  br label %12, !dbg !6911

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6912
  call void @llvm.dbg.value(metadata i32 0, metadata !6903, metadata !DIExpression()), !dbg !6904
  br label %12, !dbg !6913

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6914
  call void @llvm.dbg.value(metadata i32 0, metadata !6903, metadata !DIExpression()), !dbg !6904
  br label %12, !dbg !6915

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6916
  br label %12, !dbg !6917

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6918
  br label %12, !dbg !6919

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6904
  call void @llvm.dbg.value(metadata i32 %13, metadata !6903, metadata !DIExpression()), !dbg !6904
  ret i32 %13, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6921 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6925, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i8* %1, metadata !6926, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6928
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6929
  store i8 0, i8* %1, align 1, !dbg !6934
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6935
  %4 = and i32 %3, 2, !dbg !6937
  %5 = icmp eq i32 %4, 0, !dbg !6938
  br i1 %5, label %7, label %6, !dbg !6939

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6940
  br label %38, !dbg !6946

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6947
  %9 = icmp sgt i32 %8, -1, !dbg !6949
  br i1 %9, label %11, label %10, !dbg !6950

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6951
  br label %38, !dbg !6957

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6958
  %13 = and i32 %12, 1073741824, !dbg !6960
  %14 = icmp eq i32 %13, 0, !dbg !6961
  br i1 %14, label %37, label %15, !dbg !6962

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6963
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6969
  br i1 %16, label %17, label %21, !dbg !6971

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6972
  %19 = load i32, i32* %18, align 4, !dbg !6972
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6972
  %20 = load i32, i32* %18, align 4, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %20, metadata !6927, metadata !DIExpression()), !dbg !6928
  br label %38, !dbg !6979

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6980
  %23 = and i32 %22, 255, !dbg !6982
  %24 = icmp eq i32 %23, 0, !dbg !6983
  br i1 %24, label %27, label %25, !dbg !6984

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6985
  call void @llvm.dbg.value(metadata i32 %26, metadata !6927, metadata !DIExpression()), !dbg !6928
  br label %38, !dbg !6987

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6988
  %29 = and i32 %28, 65280, !dbg !6990
  %30 = icmp eq i32 %29, 0, !dbg !6991
  br i1 %30, label %32, label %31, !dbg !6992

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6993
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6928
  br label %38, !dbg !6995

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6996
  %34 = icmp ult i32 %33, 65536, !dbg !6998
  br i1 %34, label %36, label %35, !dbg !6999

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7000
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6928
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !7002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !7002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !7002
  unreachable, !dbg !7002

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !7007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !7007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !7007
  unreachable, !dbg !7007

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6928
  call void @llvm.dbg.value(metadata i32 %39, metadata !6927, metadata !DIExpression()), !dbg !6928
  ret i32 %39, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7013 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7015, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i32 %1, metadata !7016, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i8* %2, metadata !7017, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i32 0, metadata !7018, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i32 -22, metadata !7019, metadata !DIExpression()), !dbg !7028
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7029
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7034
  %5 = and i32 %4, 16, !dbg !7036
  %6 = icmp eq i32 %5, 0, !dbg !7037
  br i1 %6, label %8, label %7, !dbg !7038

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7039
  br label %8, !dbg !7045

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  %10 = and i32 %9, 8, !dbg !7048
  %11 = icmp eq i32 %10, 0, !dbg !7049
  br i1 %11, label %13, label %12, !dbg !7050

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7051
  br label %13, !dbg !7057

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7058
  %15 = and i32 %14, 2, !dbg !7059
  %16 = icmp eq i32 %15, 0, !dbg !7060
  br i1 %16, label %27, label %17, !dbg !7061

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !7062
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %18, metadata !7020, metadata !DIExpression()), !dbg !7068
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7069
  %20 = and i32 %19, 128, !dbg !7071
  %21 = icmp eq i32 %20, 0, !dbg !7072
  br i1 %21, label %27, label %22, !dbg !7073

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7019, metadata !DIExpression()), !dbg !7028
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7074
  %23 = icmp eq i32 %1, 0, !dbg !7080
  br i1 %23, label %27, label %24, !dbg !7082

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7083
  %26 = and i32 %25, -129, !dbg !7083
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7083
  br label %27, !dbg !7085

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7028
  call void @llvm.dbg.value(metadata i32 %28, metadata !7019, metadata !DIExpression()), !dbg !7028
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7086
  %30 = and i32 %29, 1, !dbg !7088
  %31 = icmp eq i32 %30, 0, !dbg !7089
  br i1 %31, label %33, label %32, !dbg !7090

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7091
  br label %33, !dbg !7097

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7098
  %35 = and i32 %34, 32, !dbg !7100
  %36 = icmp eq i32 %35, 0, !dbg !7101
  br i1 %36, label %38, label %37, !dbg !7102

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7103
  br label %38, !dbg !7109

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7110
  %40 = and i32 %39, 16, !dbg !7111
  %41 = icmp eq i32 %40, 0, !dbg !7111
  br i1 %41, label %42, label %46, !dbg !7112

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7113
  %44 = and i32 %43, 2, !dbg !7114
  %45 = icmp eq i32 %44, 0, !dbg !7114
  br i1 %45, label %60, label %46, !dbg !7115

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7116
  %48 = and i32 %47, 2048, !dbg !7117
  %49 = icmp eq i32 %48, 0, !dbg !7117
  br i1 %49, label %60, label %50, !dbg !7118

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7119
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %52, metadata !7023, metadata !DIExpression()), !dbg !7121
  %53 = icmp eq i32 %52, 0, !dbg !7122
  br i1 %53, label %55, label %54, !dbg !7124

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7125, metadata !DIExpression()) #23, !dbg !7128
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7131, !srcloc !7132
  call void @llvm.dbg.value(metadata i32 2, metadata !7018, metadata !DIExpression()), !dbg !7028
  br label %60, !dbg !7133

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7134
  %57 = and i32 %56, 16, !dbg !7134
  %58 = icmp eq i32 %57, 0, !dbg !7134
  br i1 %58, label %60, label %59, !dbg !7138

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7139
  unreachable, !dbg !7139

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !7028
  call void @llvm.dbg.value(metadata i32 %61, metadata !7018, metadata !DIExpression()), !dbg !7028
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7141
  %63 = and i32 %62, 32, !dbg !7143
  %64 = icmp eq i32 %63, 0, !dbg !7144
  br i1 %64, label %68, label %65, !dbg !7145

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7146
  %67 = and i32 %66, -8193, !dbg !7146
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7146
  br label %68, !dbg !7148

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7149
  %70 = or i32 %69, 255, !dbg !7149
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7149
  store i8 0, i8* %2, align 1, !dbg !7150
  ret i32 %61, !dbg !7151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7152 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7156, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 %0, metadata !7157, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i8* %1, metadata !7158, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i32 0, metadata !7159, metadata !DIExpression()), !dbg !7163
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7164
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7169
  %4 = and i32 %3, 4096, !dbg !7171
  %5 = icmp eq i32 %4, 0, !dbg !7171
  br i1 %5, label %7, label %6, !dbg !7172

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7173
  br label %7, !dbg !7179

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7180
  %9 = and i32 %8, 2048, !dbg !7182
  %10 = icmp eq i32 %9, 0, !dbg !7182
  br i1 %10, label %12, label %11, !dbg !7183

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7184
  br label %12, !dbg !7190

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7191
  %14 = and i32 %13, 512, !dbg !7192
  %15 = icmp eq i32 %14, 0, !dbg !7192
  br i1 %15, label %26, label %16, !dbg !7193

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7194
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7199
  call void @llvm.dbg.value(metadata i32 %17, metadata !7160, metadata !DIExpression()), !dbg !7200
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7201
  %19 = and i32 %18, 32768, !dbg !7203
  %20 = icmp eq i32 %19, 0, !dbg !7204
  br i1 %20, label %26, label %21, !dbg !7205

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7206
  %22 = icmp eq i32 %0, 0, !dbg !7212
  br i1 %22, label %26, label %23, !dbg !7214

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7215
  %25 = and i32 %24, -32769, !dbg !7215
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7215
  br label %26, !dbg !7217

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7218
  %28 = and i32 %27, 1024, !dbg !7220
  %29 = icmp eq i32 %28, 0, !dbg !7220
  br i1 %29, label %31, label %30, !dbg !7221

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7222
  br label %31, !dbg !7228

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7229
  %33 = and i32 %32, 256, !dbg !7231
  %34 = icmp eq i32 %33, 0, !dbg !7232
  br i1 %34, label %35, label %39, !dbg !7233

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7234
  %37 = and i32 %36, 8192, !dbg !7236
  %38 = icmp eq i32 %37, 0, !dbg !7236
  br i1 %38, label %41, label %39, !dbg !7237

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7238
  br label %41, !dbg !7239

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7239
  %43 = or i32 %42, 65280, !dbg !7239
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7239
  store i8 0, i8* %1, align 1, !dbg !7240
  ret void, !dbg !7241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7242 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7248, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 0, metadata !7249, metadata !DIExpression()), !dbg !7250
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7251
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7256
  %2 = and i32 %1, 33554432, !dbg !7258
  %3 = icmp eq i32 %2, 0, !dbg !7259
  br i1 %3, label %5, label %4, !dbg !7260

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7261
  br label %5, !dbg !7267

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7268
  %7 = and i32 %6, 16777216, !dbg !7270
  %8 = icmp eq i32 %7, 0, !dbg !7271
  br i1 %8, label %10, label %9, !dbg !7272

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7273
  br label %10, !dbg !7279

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7280
  %12 = and i32 %11, 524288, !dbg !7282
  %13 = icmp eq i32 %12, 0, !dbg !7283
  br i1 %13, label %15, label %14, !dbg !7284

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7285
  br label %15, !dbg !7291

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7292
  %17 = and i32 %16, 262144, !dbg !7294
  %18 = icmp eq i32 %17, 0, !dbg !7295
  br i1 %18, label %20, label %19, !dbg !7296

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7297
  br label %20, !dbg !7303

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7304
  %22 = and i32 %21, 131072, !dbg !7306
  %23 = icmp eq i32 %22, 0, !dbg !7307
  br i1 %23, label %25, label %24, !dbg !7308

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7309
  br label %25, !dbg !7315

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7316
  %27 = and i32 %26, 65536, !dbg !7318
  %28 = icmp eq i32 %27, 0, !dbg !7319
  br i1 %28, label %30, label %29, !dbg !7320

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7321
  br label %30, !dbg !7327

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7328
  %32 = or i32 %31, -65536, !dbg !7328
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7328
  ret void, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7330 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7334, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8* %0, metadata !7335, metadata !DIExpression()), !dbg !7336
  store i8 0, i8* %0, align 1, !dbg !7337
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7338
  ret void, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7344 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7348, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i32 %0, metadata !7349, metadata !DIExpression()), !dbg !7350
  %2 = icmp slt i32 %0, 16, !dbg !7351
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7351
  %4 = add nsw i32 %0, -16, !dbg !7351
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7351
  ret void, !dbg !7356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7357 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7361, metadata !DIExpression()), !dbg !7364
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7365
  %3 = load i32, i32* %2, align 4, !dbg !7365
  %4 = inttoptr i32 %3 to i16*, !dbg !7366
  call void @llvm.dbg.value(metadata i16* %4, metadata !7362, metadata !DIExpression()), !dbg !7364
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7367
  %6 = or i32 %5, 256, !dbg !7367
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7367
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7368, !srcloc !7371
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7372, !srcloc !7375
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7376
  %8 = load i16, i16* %7, align 2, !dbg !7377
  call void @llvm.dbg.value(metadata i16 %8, metadata !7363, metadata !DIExpression()), !dbg !7364
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7378
  %10 = and i32 %9, -257, !dbg !7378
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7378
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7379, !srcloc !7371
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7381, !srcloc !7375
  %11 = icmp eq i16 %8, -8446, !dbg !7383
  ret i1 %11, !dbg !7385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7386 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7387
  %2 = or i32 %1, 16, !dbg !7387
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7387
  ret void, !dbg !7388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7389 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7392, metadata !DIExpression()), !dbg !7393
  br label %1, !dbg !7394

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7392, metadata !DIExpression()), !dbg !7393
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7396
  %3 = add nuw nsw i32 %2, 1, !dbg !7399
  call void @llvm.dbg.value(metadata i32 %3, metadata !7392, metadata !DIExpression()), !dbg !7393
  %4 = icmp eq i32 %3, 97, !dbg !7400
  br i1 %4, label %5, label %1, !dbg !7394, !llvm.loop !7401

5:                                                ; preds = %1
  ret void, !dbg !7403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #14 !dbg !7404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7406, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata i32 1, metadata !7407, metadata !DIExpression()), !dbg !7408
  %2 = and i32 %0, 15, !dbg !7409
  %3 = add nsw i32 %2, -4, !dbg !7409
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7409
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7409
  %6 = icmp slt i32 %0, 0, !dbg !7409
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7409
  store volatile i8 16, i8* %7, align 1, !dbg !7410
  ret void, !dbg !7412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7522, metadata !DIExpression()), !dbg !7523
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7524
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7526
  br i1 %3, label %4, label %12, !dbg !7527

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7528, !srcloc !7540
  call void @llvm.dbg.value(metadata i32 %5, metadata !7531, metadata !DIExpression()) #23, !dbg !7541
  %6 = icmp eq i32 %5, 0, !dbg !7542
  br i1 %6, label %12, label %7, !dbg !7543

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7544
  %9 = or i32 %8, 268435456, !dbg !7544
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7544
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7546
  %11 = and i32 %10, -32769, !dbg !7546
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7546
  br label %12, !dbg !7547

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7548
  ret void, !dbg !7549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7550 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7553
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7554
  %3 = load i32, i32* %2, align 4, !dbg !7554
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7553
  %4 = add i32 %3, -64, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7553
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7557
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7558
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7559
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7553
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7560
  ret void, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7562 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7563
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7564, !srcloc !7567
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7568, !srcloc !7571
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7573 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7574, !srcloc !7577
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7578
  ret void, !dbg !7579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7580 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7595, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i8 %1, metadata !7596, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %2, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %3, metadata !7598, metadata !DIExpression()), !dbg !7599
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7600
  %6 = icmp eq i32 %5, -22, !dbg !7602
  br i1 %6, label %7, label %9, !dbg !7603

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7604
  %8 = zext i8 %1 to i32, !dbg !7604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7604
  unreachable, !dbg !7604

9:                                                ; preds = %4
  ret void, !dbg !7609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7610 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7615, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8 %1, metadata !7616, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 undef, metadata !7617, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 undef, metadata !7618, metadata !DIExpression()), !dbg !7620
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7621
  call void @llvm.dbg.value(metadata i8 %3, metadata !7619, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7620
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7622
  call void @llvm.dbg.value(metadata i32 %4, metadata !7619, metadata !DIExpression()), !dbg !7620
  %5 = trunc i32 %4 to i8, !dbg !7623
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7624
  ret i32 %4, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7626 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7630, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i8 %1, metadata !7631, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i8 %2, metadata !7632, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i1 %3, metadata !7633, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7636
  %5 = zext i8 %2 to i32, !dbg !7637
  call void @llvm.dbg.value(metadata i32 %5, metadata !7635, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i32 0, metadata !7634, metadata !DIExpression()), !dbg !7636
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7635, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i32 0, metadata !7634, metadata !DIExpression()), !dbg !7636
  %7 = icmp eq i8 %1, 0, !dbg !7638
  br i1 %7, label %30, label %8, !dbg !7641

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7635, metadata !DIExpression()), !dbg !7636
  call void @llvm.dbg.value(metadata i32 %10, metadata !7634, metadata !DIExpression()), !dbg !7636
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7642
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7645
  %13 = load i32, i32* %12, align 4, !dbg !7645
  %14 = icmp eq i32 %13, 0, !dbg !7646
  br i1 %14, label %26, label %15, !dbg !7647

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7648

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7650
  %18 = icmp eq i32 %17, 0, !dbg !7650
  br i1 %18, label %19, label %20, !dbg !7651

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7652
  br label %30, !dbg !7658

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7659
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7660
  call void @llvm.dbg.value(metadata i32 %22, metadata !7635, metadata !DIExpression()), !dbg !7636
  %23 = icmp eq i32 %22, -22, !dbg !7661
  br i1 %23, label %30, label %24, !dbg !7663

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7664
  call void @llvm.dbg.value(metadata i32 %25, metadata !7635, metadata !DIExpression()), !dbg !7636
  br label %26, !dbg !7665

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7636
  call void @llvm.dbg.value(metadata i32 %27, metadata !7635, metadata !DIExpression()), !dbg !7636
  %28 = add nuw nsw i32 %10, 1, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %28, metadata !7634, metadata !DIExpression()), !dbg !7636
  %29 = icmp eq i32 %28, %6, !dbg !7638
  br i1 %29, label %30, label %8, !dbg !7641, !llvm.loop !7667

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7636
  ret i32 %31, !dbg !7669
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7670 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7674, metadata !DIExpression()), !dbg !7676
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7677
  %3 = load i32, i32* %2, align 4, !dbg !7677
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7678, !range !7679
  %5 = icmp ult i32 %4, 2, !dbg !7678
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7680
  br i1 %7, label %8, label %15, !dbg !7680

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7681
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7682
  %11 = load i32, i32* %10, align 4, !dbg !7682
  %12 = and i32 %11, %9, !dbg !7683
  %13 = icmp eq i32 %12, 0, !dbg !7684
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7675, metadata !DIExpression()), !dbg !7676
  ret i32 %16, !dbg !7685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7686 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7690, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7691, metadata !DIExpression()), !dbg !7693
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7694
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7694
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7692, metadata !DIExpression()), !dbg !7695
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7696
  %6 = load i32, i32* %5, align 4, !dbg !7696
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7697
  store i32 %6, i32* %7, align 4, !dbg !7698
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7699
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7700
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7701
  %11 = load i32, i32* %10, align 4, !dbg !7701
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7702
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7703
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7704
  ret i32 %12, !dbg !7705
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7706 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7713, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7714, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 undef, metadata !7715, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.value(metadata i32 %2, metadata !7716, metadata !DIExpression()), !dbg !7717
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7718
  %5 = load i32, i32* %4, align 4, !dbg !7718
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7719
  %7 = or i32 %6, %5, !dbg !7720
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7721
  store i32 %7, i32* %8, align 4, !dbg !7722
  ret void, !dbg !7723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7724 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7728, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7729, metadata !DIExpression()), !dbg !7730
  %3 = zext i8 %0 to i32, !dbg !7731
  %4 = icmp ugt i8 %0, 7, !dbg !7733
  br i1 %4, label %5, label %6, !dbg !7734

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7735
  br label %7, !dbg !7741

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7742
  br label %7, !dbg !7743

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7730
  ret i32 %8, !dbg !7744
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7750, metadata !DIExpression()), !dbg !7751
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7752
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7753
  %4 = load i32, i32* %3, align 4, !dbg !7753
  %5 = and i32 %4, -32, !dbg !7754
  %6 = or i32 %5, %0, !dbg !7755
  %7 = or i32 %6, 16, !dbg !7755
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7756
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7757
  %9 = load i32, i32* %8, align 4, !dbg !7757
  %10 = or i32 %9, 1, !dbg !7758
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7773
  %2 = icmp ult i32 %0, 33, !dbg !7774
  br i1 %2, label %11, label %3, !dbg !7776

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7777
  br i1 %4, label %11, label %5, !dbg !7779

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7780
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7781, !range !7679
  %8 = mul nsw i32 %7, -2, !dbg !7782
  %9 = add nsw i32 %8, 62, !dbg !7782
  %10 = and i32 %9, 62, !dbg !7783
  br label %11, !dbg !7784

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7773
  ret i32 %12, !dbg !7785
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7786 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7790, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata i8 %1, metadata !7791, metadata !DIExpression()), !dbg !7792
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7793
  %4 = icmp eq i32 %3, -22, !dbg !7795
  br i1 %4, label %5, label %7, !dbg !7796

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7797
  %6 = zext i8 %1 to i32, !dbg !7797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7797
  unreachable, !dbg !7797

7:                                                ; preds = %2
  ret void, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7803 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7807, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i8 %1, metadata !7808, metadata !DIExpression()), !dbg !7814
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7815
  call void @llvm.dbg.value(metadata i8 %3, metadata !7809, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7814
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %4, metadata !7809, metadata !DIExpression()), !dbg !7814
  %5 = icmp ne i32 %4, -22, !dbg !7817
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7818
  call void @llvm.dbg.value(metadata i32 %4, metadata !7810, metadata !DIExpression()), !dbg !7819
  br i1 %7, label %8, label %12, !dbg !7818

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7810, metadata !DIExpression()), !dbg !7819
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7820
  %10 = add i32 %9, 1, !dbg !7823
  call void @llvm.dbg.value(metadata i32 %10, metadata !7810, metadata !DIExpression()), !dbg !7819
  %11 = icmp eq i32 %10, 8, !dbg !7824
  br i1 %11, label %12, label %8, !dbg !7825, !llvm.loop !7826

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7832, metadata !DIExpression()), !dbg !7833
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7834
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7835
  ret void, !dbg !7836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7837 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7842
  %2 = icmp ugt i32 %1, 8, !dbg !7844
  br i1 %2, label %3, label %4, !dbg !7845

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7846
  unreachable, !dbg !7846

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7851
  call void @llvm.dbg.value(metadata i32 0, metadata !7841, metadata !DIExpression()), !dbg !7852
  %5 = icmp eq i32 %1, 0, !dbg !7853
  br i1 %5, label %13, label %6, !dbg !7856

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7856

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7841, metadata !DIExpression()), !dbg !7852
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7857
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7859
  %11 = add nuw i32 %9, 1, !dbg !7860
  call void @llvm.dbg.value(metadata i32 %11, metadata !7841, metadata !DIExpression()), !dbg !7852
  %12 = icmp eq i32 %11, %1, !dbg !7853
  br i1 %12, label %13, label %8, !dbg !7856, !llvm.loop !7861

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7863
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7864
  tail call void @arm_core_mpu_enable() #24, !dbg !7865
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7866
  %16 = and i32 %15, 65280, !dbg !7866
  %17 = icmp eq i32 %16, 2048, !dbg !7866
  br i1 %17, label %19, label %18, !dbg !7869

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7870
  unreachable, !dbg !7870

19:                                               ; preds = %13
  ret i32 0, !dbg !7872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %0, metadata !7882, metadata !DIExpression()), !dbg !7883
  %3 = load i8, i8* %1, align 1, !dbg !7884
  %4 = icmp eq i8 %3, 0, !dbg !7885
  br i1 %4, label %13, label %5, !dbg !7886

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %8, metadata !7881, metadata !DIExpression()), !dbg !7883
  store i8 %6, i8* %7, align 1, !dbg !7887
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7889
  call void @llvm.dbg.value(metadata i8* %9, metadata !7880, metadata !DIExpression()), !dbg !7883
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %10, metadata !7881, metadata !DIExpression()), !dbg !7883
  %11 = load i8, i8* %10, align 1, !dbg !7884
  %12 = icmp eq i8 %11, 0, !dbg !7885
  br i1 %12, label %13, label %5, !dbg !7886, !llvm.loop !7891

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7893
  ret i8* %0, !dbg !7894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7899, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %1, metadata !7900, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %2, metadata !7901, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %0, metadata !7902, metadata !DIExpression()), !dbg !7903
  %4 = icmp eq i32 %2, 0, !dbg !7904
  br i1 %4, label %22, label %5, !dbg !7905

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7899, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %7, metadata !7901, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %8, metadata !7900, metadata !DIExpression()), !dbg !7903
  %9 = load i8, i8* %8, align 1, !dbg !7906
  %10 = icmp eq i8 %9, 0, !dbg !7907
  br i1 %10, label %16, label %11, !dbg !7908

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7909
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7911
  call void @llvm.dbg.value(metadata i8* %12, metadata !7900, metadata !DIExpression()), !dbg !7903
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7912
  call void @llvm.dbg.value(metadata i8* %13, metadata !7899, metadata !DIExpression()), !dbg !7903
  %14 = add i32 %7, -1, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %14, metadata !7901, metadata !DIExpression()), !dbg !7903
  %15 = icmp eq i32 %14, 0, !dbg !7904
  br i1 %15, label %22, label %5, !dbg !7905, !llvm.loop !7914

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7899, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i32 %18, metadata !7901, metadata !DIExpression()), !dbg !7903
  store i8 0, i8* %17, align 1, !dbg !7916
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7918
  call void @llvm.dbg.value(metadata i8* %19, metadata !7899, metadata !DIExpression()), !dbg !7903
  %20 = add i32 %18, -1, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %20, metadata !7901, metadata !DIExpression()), !dbg !7903
  %21 = icmp eq i32 %20, 0, !dbg !7920
  br i1 %21, label %22, label %16, !dbg !7921, !llvm.loop !7922

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %1, metadata !7930, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i32 %1, metadata !7931, metadata !DIExpression()), !dbg !7932
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7933

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7929, metadata !DIExpression()), !dbg !7932
  %6 = load i8, i8* %5, align 1, !dbg !7934
  %7 = icmp eq i8 %6, %3, !dbg !7935
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7936
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7937
  call void @llvm.dbg.value(metadata i8* %10, metadata !7929, metadata !DIExpression()), !dbg !7932
  br i1 %9, label %11, label %4, !dbg !7936, !llvm.loop !7939

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7941
  ret i8* %12, !dbg !7942
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %1, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* null, metadata !7947, metadata !DIExpression()), !dbg !7948
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7949

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7948
  call void @llvm.dbg.value(metadata i8* %6, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %5, metadata !7945, metadata !DIExpression()), !dbg !7948
  %7 = load i8, i8* %5, align 1, !dbg !7950
  %8 = icmp eq i8 %7, %3, !dbg !7953
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7954
  call void @llvm.dbg.value(metadata i8* %9, metadata !7947, metadata !DIExpression()), !dbg !7948
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7955
  call void @llvm.dbg.value(metadata i8* %10, metadata !7945, metadata !DIExpression()), !dbg !7948
  %11 = icmp eq i8 %7, 0, !dbg !7956
  br i1 %11, label %12, label %4, !dbg !7956, !llvm.loop !7957

12:                                               ; preds = %4
  ret i8* %9, !dbg !7959
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7960 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7964, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i32 0, metadata !7965, metadata !DIExpression()), !dbg !7966
  %2 = load i8, i8* %0, align 1, !dbg !7967
  %3 = icmp eq i8 %2, 0, !dbg !7968
  br i1 %3, label %11, label %4, !dbg !7969

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.value(metadata i8* %6, metadata !7964, metadata !DIExpression()), !dbg !7966
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7970
  call void @llvm.dbg.value(metadata i8* %7, metadata !7964, metadata !DIExpression()), !dbg !7966
  %8 = add i32 %5, 1, !dbg !7972
  call void @llvm.dbg.value(metadata i32 %8, metadata !7965, metadata !DIExpression()), !dbg !7966
  %9 = load i8, i8* %7, align 1, !dbg !7967
  %10 = icmp eq i8 %9, 0, !dbg !7968
  br i1 %10, label %11, label %4, !dbg !7969, !llvm.loop !7973

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7966
  ret i32 %12, !dbg !7975
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7976 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7980, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i32 %1, metadata !7981, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i32 0, metadata !7982, metadata !DIExpression()), !dbg !7983
  %3 = load i8, i8* %0, align 1, !dbg !7984
  %4 = icmp ne i8 %3, 0, !dbg !7985
  %5 = icmp ne i32 %1, 0, !dbg !7986
  %6 = and i1 %4, %5, !dbg !7986
  br i1 %6, label %7, label %16, !dbg !7987

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.value(metadata i8* %9, metadata !7980, metadata !DIExpression()), !dbg !7983
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7988
  call void @llvm.dbg.value(metadata i8* %10, metadata !7980, metadata !DIExpression()), !dbg !7983
  %11 = add nuw i32 %8, 1, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %11, metadata !7982, metadata !DIExpression()), !dbg !7983
  %12 = load i8, i8* %10, align 1, !dbg !7984
  %13 = icmp ne i8 %12, 0, !dbg !7985
  %14 = icmp ult i32 %11, %1, !dbg !7986
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7986
  br i1 %15, label %7, label %16, !dbg !7987, !llvm.loop !7991

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7983
  ret i32 %17, !dbg !7993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %1, metadata !7999, metadata !DIExpression()), !dbg !8000
  %3 = load i8, i8* %0, align 1, !dbg !8001
  %4 = load i8, i8* %1, align 1, !dbg !8002
  %5 = icmp ne i8 %3, %4, !dbg !8003
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8004
  br i1 %7, label %18, label %8, !dbg !8004

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %10, metadata !7998, metadata !DIExpression()), !dbg !8000
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %11, metadata !7998, metadata !DIExpression()), !dbg !8000
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8007
  call void @llvm.dbg.value(metadata i8* %12, metadata !7999, metadata !DIExpression()), !dbg !8000
  %13 = load i8, i8* %11, align 1, !dbg !8001
  %14 = load i8, i8* %12, align 1, !dbg !8002
  %15 = icmp ne i8 %13, %14, !dbg !8003
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8004
  br i1 %17, label %18, label %8, !dbg !8004, !llvm.loop !8008

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8001
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8002
  %21 = zext i8 %19 to i32, !dbg !8011
  %22 = zext i8 %20 to i32, !dbg !8012
  %23 = sub nsw i32 %21, %22, !dbg !8013
  ret i32 %23, !dbg !8014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8019, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %2, metadata !8021, metadata !DIExpression()), !dbg !8022
  %4 = icmp eq i32 %2, 0, !dbg !8023
  br i1 %4, label %23, label %5, !dbg !8023

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %7, metadata !8020, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %8, metadata !8019, metadata !DIExpression()), !dbg !8022
  %9 = load i8, i8* %8, align 1, !dbg !8024
  %10 = load i8, i8* %7, align 1, !dbg !8025
  %11 = icmp ne i8 %9, %10, !dbg !8026
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8027
  br i1 %13, label %19, label %14, !dbg !8027

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8028
  call void @llvm.dbg.value(metadata i8* %15, metadata !8019, metadata !DIExpression()), !dbg !8022
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8030
  call void @llvm.dbg.value(metadata i8* %16, metadata !8020, metadata !DIExpression()), !dbg !8022
  %17 = add i32 %6, -1, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %17, metadata !8021, metadata !DIExpression()), !dbg !8022
  %18 = icmp eq i32 %17, 0, !dbg !8023
  br i1 %18, label %23, label %5, !dbg !8023, !llvm.loop !8032

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8035
  %21 = zext i8 %10 to i32, !dbg !8036
  %22 = sub nsw i32 %20, %21, !dbg !8037
  br label %23, !dbg !8038

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8038
  ret i32 %24, !dbg !8039
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !8040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8044, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i8* %1, metadata !8045, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i8** %2, metadata !8046, metadata !DIExpression()), !dbg !8049
  %4 = icmp eq i8* %0, null, !dbg !8050
  br i1 %4, label %5, label %7, !dbg !8050

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8051
  br label %7, !dbg !8050

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8050
  call void @llvm.dbg.value(metadata i8* %8, metadata !8047, metadata !DIExpression()), !dbg !8049
  %9 = load i8, i8* %8, align 1, !dbg !8052
  %10 = icmp eq i8 %9, 0, !dbg !8052
  br i1 %10, label %33, label %11, !dbg !8053

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8047, metadata !DIExpression()), !dbg !8049
  %14 = zext i8 %12 to i32, !dbg !8052
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8054
  %16 = icmp eq i8* %15, null, !dbg !8053
  br i1 %16, label %21, label %17, !dbg !8055

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8056
  call void @llvm.dbg.value(metadata i8* %18, metadata !8047, metadata !DIExpression()), !dbg !8049
  %19 = load i8, i8* %18, align 1, !dbg !8052
  %20 = icmp eq i8 %19, 0, !dbg !8052
  br i1 %20, label %33, label %11, !dbg !8053, !llvm.loop !8058

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8048, metadata !DIExpression()), !dbg !8049
  %24 = zext i8 %22 to i32, !dbg !8060
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8061
  %26 = icmp eq i8* %25, null, !dbg !8062
  br i1 %26, label %27, label %31, !dbg !8063

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %28, metadata !8048, metadata !DIExpression()), !dbg !8049
  %29 = load i8, i8* %28, align 1, !dbg !8060
  %30 = icmp eq i8 %29, 0, !dbg !8060
  br i1 %30, label %33, label %21, !dbg !8066, !llvm.loop !8067

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8069
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8072
  br label %33, !dbg !8073

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8049
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8049
  store i8* %34, i8** %2, align 4, !dbg !8049
  ret i8* %35, !dbg !8074
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8075 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8077, metadata !DIExpression()), !dbg !8079
  call void @llvm.dbg.value(metadata i8* %1, metadata !8078, metadata !DIExpression()), !dbg !8079
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8080
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8081
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8082
  ret i8* %0, !dbg !8083
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8084 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8086, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i8* %1, metadata !8087, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i32 %2, metadata !8088, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i8* %0, metadata !8089, metadata !DIExpression()), !dbg !8091
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8092
  call void @llvm.dbg.value(metadata i32 %4, metadata !8090, metadata !DIExpression()), !dbg !8091
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8093
  call void @llvm.dbg.value(metadata i8* %5, metadata !8086, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i8* %1, metadata !8087, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i32 %2, metadata !8088, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i32 %2, metadata !8088, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8091
  %6 = icmp eq i32 %2, 0, !dbg !8094
  br i1 %6, label %18, label %7, !dbg !8095

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8096
  call void @llvm.dbg.value(metadata i8* %9, metadata !8086, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i8* %10, metadata !8087, metadata !DIExpression()), !dbg !8091
  %12 = load i8, i8* %10, align 1, !dbg !8097
  %13 = icmp eq i8 %12, 0, !dbg !8098
  br i1 %13, label %18, label %14, !dbg !8099

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8100
  call void @llvm.dbg.value(metadata i8* %15, metadata !8087, metadata !DIExpression()), !dbg !8091
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8102
  call void @llvm.dbg.value(metadata i8* %16, metadata !8086, metadata !DIExpression()), !dbg !8091
  store i8 %12, i8* %9, align 1, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %11, metadata !8088, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.value(metadata i32 %11, metadata !8088, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8091
  %17 = icmp eq i32 %11, 0, !dbg !8094
  br i1 %17, label %18, label %7, !dbg !8095, !llvm.loop !8104

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8091
  store i8 0, i8* %19, align 1, !dbg !8106
  ret i8* %0, !dbg !8107
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8108 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8112, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %1, metadata !8113, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i32 %2, metadata !8114, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %0, metadata !8115, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8117
  %4 = icmp eq i32 %2, 0, !dbg !8118
  br i1 %4, label %31, label %5, !dbg !8120

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8116, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %0, metadata !8115, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i32 %2, metadata !8114, metadata !DIExpression()), !dbg !8117
  %6 = add i32 %2, -1, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %6, metadata !8114, metadata !DIExpression()), !dbg !8117
  %7 = icmp eq i32 %6, 0, !dbg !8122
  br i1 %7, label %23, label %8, !dbg !8123

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8124
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8124
  br label %11, !dbg !8124

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8116, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i8* %14, metadata !8115, metadata !DIExpression()), !dbg !8117
  %15 = load i8, i8* %14, align 1, !dbg !8125
  %16 = load i8, i8* %13, align 1, !dbg !8126
  %17 = icmp eq i8 %15, %16, !dbg !8127
  br i1 %17, label %18, label %23, !dbg !8124

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %19, metadata !8115, metadata !DIExpression()), !dbg !8117
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8130
  call void @llvm.dbg.value(metadata i8* %20, metadata !8116, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i32 %12, metadata !8114, metadata !DIExpression()), !dbg !8117
  %21 = add i32 %12, -1, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %21, metadata !8114, metadata !DIExpression()), !dbg !8117
  %22 = icmp eq i32 %21, 0, !dbg !8122
  br i1 %22, label %23, label %11, !dbg !8123, !llvm.loop !8131

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8117
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8117
  %26 = load i8, i8* %24, align 1, !dbg !8133
  %27 = zext i8 %26 to i32, !dbg !8133
  %28 = load i8, i8* %25, align 1, !dbg !8134
  %29 = zext i8 %28 to i32, !dbg !8134
  %30 = sub nsw i32 %27, %29, !dbg !8135
  br label %31, !dbg !8136

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8117
  ret i32 %32, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8142, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8* %1, metadata !8143, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8* %0, metadata !8145, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8* %1, metadata !8146, metadata !DIExpression()), !dbg !8147
  %4 = ptrtoint i8* %0 to i32, !dbg !8148
  %5 = ptrtoint i8* %1 to i32, !dbg !8148
  %6 = sub i32 %4, %5, !dbg !8148
  %7 = icmp ult i32 %6, %2, !dbg !8150
  br i1 %7, label %10, label %8, !dbg !8151

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8* %0, metadata !8145, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %2, metadata !8144, metadata !DIExpression()), !dbg !8147
  %9 = icmp eq i32 %2, 0, !dbg !8152
  br i1 %9, label %26, label %17, !dbg !8154

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8144, metadata !DIExpression()), !dbg !8147
  %12 = add i32 %11, -1, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %12, metadata !8144, metadata !DIExpression()), !dbg !8147
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8158
  %14 = load i8, i8* %13, align 1, !dbg !8158
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8159
  store i8 %14, i8* %15, align 1, !dbg !8160
  %16 = icmp eq i32 %12, 0, !dbg !8161
  br i1 %16, label %26, label %10, !dbg !8162, !llvm.loop !8163

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8* %19, metadata !8145, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %20, metadata !8144, metadata !DIExpression()), !dbg !8147
  %21 = load i8, i8* %18, align 1, !dbg !8165
  store i8 %21, i8* %19, align 1, !dbg !8167
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8168
  call void @llvm.dbg.value(metadata i8* %22, metadata !8145, metadata !DIExpression()), !dbg !8147
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8169
  call void @llvm.dbg.value(metadata i8* %23, metadata !8146, metadata !DIExpression()), !dbg !8147
  %24 = add i32 %20, -1, !dbg !8170
  call void @llvm.dbg.value(metadata i32 %24, metadata !8144, metadata !DIExpression()), !dbg !8147
  %25 = icmp eq i32 %24, 0, !dbg !8152
  br i1 %25, label %26, label %17, !dbg !8154, !llvm.loop !8171

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8173
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8174 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8180, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i8* %1, metadata !8181, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 %2, metadata !8182, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i8* %0, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i8* %1, metadata !8184, metadata !DIExpression()), !dbg !8185
  %4 = icmp eq i32 %2, 0, !dbg !8186
  br i1 %4, label %14, label %5, !dbg !8187

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8184, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i8* %7, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32 %8, metadata !8182, metadata !DIExpression()), !dbg !8185
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8188
  call void @llvm.dbg.value(metadata i8* %9, metadata !8184, metadata !DIExpression()), !dbg !8185
  %10 = load i8, i8* %6, align 1, !dbg !8190
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8191
  call void @llvm.dbg.value(metadata i8* %11, metadata !8183, metadata !DIExpression()), !dbg !8185
  store i8 %10, i8* %7, align 1, !dbg !8192
  %12 = add i32 %8, -1, !dbg !8193
  call void @llvm.dbg.value(metadata i32 %12, metadata !8182, metadata !DIExpression()), !dbg !8185
  %13 = icmp eq i32 %12, 0, !dbg !8186
  br i1 %13, label %14, label %5, !dbg !8187, !llvm.loop !8194

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8201, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 %1, metadata !8202, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 %2, metadata !8203, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i8* %0, metadata !8204, metadata !DIExpression()), !dbg !8206
  %4 = trunc i32 %1 to i8, !dbg !8207
  call void @llvm.dbg.value(metadata i8 %4, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 %2, metadata !8203, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i8* %0, metadata !8204, metadata !DIExpression()), !dbg !8206
  %5 = icmp eq i32 %2, 0, !dbg !8208
  br i1 %5, label %12, label %6, !dbg !8209

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8203, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i8* %8, metadata !8204, metadata !DIExpression()), !dbg !8206
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8210
  call void @llvm.dbg.value(metadata i8* %9, metadata !8204, metadata !DIExpression()), !dbg !8206
  store i8 %4, i8* %8, align 1, !dbg !8212
  %10 = add i32 %7, -1, !dbg !8213
  call void @llvm.dbg.value(metadata i32 %10, metadata !8203, metadata !DIExpression()), !dbg !8206
  %11 = icmp eq i32 %10, 0, !dbg !8208
  br i1 %11, label %12, label %6, !dbg !8209, !llvm.loop !8214

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8216
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8221, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 %1, metadata !8222, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i32 %2, metadata !8223, metadata !DIExpression()), !dbg !8227
  %4 = icmp eq i32 %2, 0, !dbg !8228
  br i1 %4, label %17, label %5, !dbg !8229

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8230

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8231
  call void @llvm.dbg.value(metadata i8* %9, metadata !8224, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i32 %8, metadata !8223, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i8* %9, metadata !8224, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8231
  %10 = load i8, i8* %9, align 1, !dbg !8232
  %11 = icmp eq i8 %10, %6, !dbg !8235
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8236
  call void @llvm.dbg.value(metadata i8* %12, metadata !8224, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i32 %13, metadata !8223, metadata !DIExpression()), !dbg !8227
  br i1 %15, label %16, label %7, !dbg !8236, !llvm.loop !8237

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8239

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8227
  ret i8* %19, !dbg !8240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8241 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8243, metadata !DIExpression()), !dbg !8244
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8245
  ret void, !dbg !8246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8250
  ret i32 -1, !dbg !8251
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32* %1, metadata !8257, metadata !DIExpression()), !dbg !8258
  %3 = ptrtoint i32* %1 to i32, !dbg !8259
  %4 = and i32 %3, -2, !dbg !8259
  %5 = icmp eq i32 %4, 2, !dbg !8259
  br i1 %5, label %6, label %9, !dbg !8259

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8260
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8260
  br label %9, !dbg !8261

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8261
  ret i32 %10, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32* %1, metadata !8266, metadata !DIExpression()), !dbg !8267
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8268
  ret i32 %3, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8273, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i32* %1, metadata !8274, metadata !DIExpression()), !dbg !8275
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8276, !srcloc !8278
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8279
  ret i32 %3, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8286, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32* %1, metadata !8287, metadata !DIExpression()), !dbg !8290
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %3, metadata !8288, metadata !DIExpression()), !dbg !8290
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8292
  call void @llvm.dbg.value(metadata i32 %4, metadata !8289, metadata !DIExpression()), !dbg !8290
  %5 = icmp ne i32 %3, %4, !dbg !8293
  %6 = sext i1 %5 to i32, !dbg !8294
  ret i32 %6, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8296 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %1, metadata !8301, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32* %3, metadata !8303, metadata !DIExpression()), !dbg !8304
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8305
  ret i32 %5, !dbg !8306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8307 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8309, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8310, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %2, metadata !8311, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32* %3, metadata !8312, metadata !DIExpression()), !dbg !8313
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8314, !srcloc !8316
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8317
  ret i32 %5, !dbg !8318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8319 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8321, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %1, metadata !8322, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %2, metadata !8323, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32* %3, metadata !8324, metadata !DIExpression()), !dbg !8329
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8330
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8332
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8332
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8332
  br i1 %11, label %33, label %12, !dbg !8332

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8329
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8329
  call void @llvm.dbg.value(metadata i8* %14, metadata !8327, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %13, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %1, metadata !8326, metadata !DIExpression()), !dbg !8329
  br label %15, !dbg !8333

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8335
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8329
  call void @llvm.dbg.value(metadata i8* %17, metadata !8327, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %16, metadata !8326, metadata !DIExpression()), !dbg !8329
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8336
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8339
  call void @llvm.dbg.value(metadata i8* %19, metadata !8327, metadata !DIExpression()), !dbg !8329
  %20 = load i8, i8* %17, align 1, !dbg !8340
  %21 = zext i8 %20 to i32, !dbg !8341
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8336
  %23 = icmp eq i32 %22, -1, !dbg !8342
  br i1 %23, label %30, label %24, !dbg !8343

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %25, metadata !8326, metadata !DIExpression()), !dbg !8329
  %26 = icmp eq i32 %25, 0, !dbg !8345
  br i1 %26, label %27, label %15, !dbg !8346, !llvm.loop !8347

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %28, metadata !8325, metadata !DIExpression()), !dbg !8329
  %29 = icmp eq i32 %28, 0, !dbg !8350
  br i1 %29, label %30, label %12, !dbg !8351, !llvm.loop !8352

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8329
  call void @llvm.dbg.value(metadata i32 %31, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.label(metadata !8328), !dbg !8355
  %32 = sub i32 %2, %31, !dbg !8356
  br label %33, !dbg !8357

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8329
  ret i32 %34, !dbg !8358
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8363, metadata !DIExpression()), !dbg !8364
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8365
  %3 = icmp eq i32 %2, -1, !dbg !8367
  br i1 %3, label %8, label %4, !dbg !8368

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8369
  %6 = icmp eq i32 %5, -1, !dbg !8370
  %7 = sext i1 %6 to i32, !dbg !8369
  br label %8, !dbg !8371

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8364
  ret i32 %9, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8375, metadata !DIExpression()), !dbg !8376
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8383, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8385, metadata !DIExpression()), !dbg !8389
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8390
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8390
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8390
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8386, metadata !DIExpression()), !dbg !8389
  call void @llvm.dbg.value(metadata i32 %0, metadata !8388, metadata !DIExpression()), !dbg !8389
  %7 = icmp slt i32 %0, %1, !dbg !8391
  br i1 %7, label %8, label %22, !dbg !8394

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8388, metadata !DIExpression()), !dbg !8389
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8395
  %11 = icmp eq i32 %10, 0, !dbg !8395
  br i1 %11, label %19, label %12, !dbg !8398

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8399
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8401
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8401
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8403
  br i1 %15, label %19, label %16, !dbg !8404

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8405
  %18 = load i8*, i8** %17, align 4, !dbg !8405
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8406
  br label %19, !dbg !8407

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %20, metadata !8388, metadata !DIExpression()), !dbg !8389
  %21 = icmp eq i32 %20, %1, !dbg !8391
  br i1 %21, label %22, label %8, !dbg !8394, !llvm.loop !8409

22:                                               ; preds = %19, %3
  ret void, !dbg !8411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  %2 = shl nuw i32 1, %0, !dbg !8416
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8419
  ret i32 %3, !dbg !8420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8425, metadata !DIExpression()), !dbg !8426
  %2 = shl nuw i32 1, %0, !dbg !8427
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8430
  ret void, !dbg !8431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8435, metadata !DIExpression()), !dbg !8436
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8441, metadata !DIExpression()), !dbg !8442
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8443
  %3 = and i32 %2, %0, !dbg !8443
  %4 = icmp eq i32 %3, %0, !dbg !8444
  %5 = zext i1 %4 to i32, !dbg !8444
  ret i32 %5, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8448, metadata !DIExpression()), !dbg !8449
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8450
  ret void, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8454, metadata !DIExpression()), !dbg !8455
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8460, metadata !DIExpression()), !dbg !8461
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8466, metadata !DIExpression()), !dbg !8467
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8468
  ret void, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8472, metadata !DIExpression()), !dbg !8473
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8474
  ret void, !dbg !8475
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8478, metadata !DIExpression()), !dbg !8479
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8480
  ret void, !dbg !8481
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8484, metadata !DIExpression()), !dbg !8485
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8486
  ret void, !dbg !8487
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8490, metadata !DIExpression()), !dbg !8491
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8492
  ret void, !dbg !8493
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8497
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8502, metadata !DIExpression()), !dbg !8503
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8504
  ret void, !dbg !8505
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8506 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8508, metadata !DIExpression()), !dbg !8509
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8510
  ret i32 0, !dbg !8511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !766 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !770, metadata !DIExpression()), !dbg !8512
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8513
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8515
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8517
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8519
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8521
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8523
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8525
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8527
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8529
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8531
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8533
  ret void, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8538, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata i32 0, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata i32 undef, metadata !8539, metadata !DIExpression()), !dbg !8540
  %2 = lshr i32 6684671, %0, !dbg !8541
  %3 = and i32 %2, 1, !dbg !8541
  %4 = or i32 %3, %0, !dbg !8543
  %5 = icmp eq i32 %4, 0, !dbg !8543
  br i1 %5, label %6, label %7, !dbg !8543

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8544
  unreachable, !dbg !8544

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8549
  %9 = load i32, i32* %8, align 4, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %9, metadata !8539, metadata !DIExpression()), !dbg !8540
  %10 = shl nuw i32 1, %0, !dbg !8550
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8551
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8552
  ret void, !dbg !8553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8556, metadata !DIExpression()), !dbg !8557
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8558
  %3 = or i32 %2, %0, !dbg !8558
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8558
  ret void, !dbg !8559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8562, metadata !DIExpression()), !dbg !8563
  %2 = icmp slt i32 %0, 32, !dbg !8564
  br i1 %2, label %3, label %5, !dbg !8566

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8567
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8569
  br label %5, !dbg !8570

5:                                                ; preds = %1, %3
  ret void, !dbg !8571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8574, metadata !DIExpression()), !dbg !8575
  %2 = xor i32 %0, -1, !dbg !8576
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8576
  %4 = and i32 %3, %2, !dbg !8576
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.value(metadata i32 %1, metadata !8583, metadata !DIExpression()), !dbg !8584
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8585

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8586
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8588
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8589
  br label %11, !dbg !8590

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8591
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8592
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8593
  br label %11, !dbg !8594

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8595
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8596
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8597
  br label %11, !dbg !8598

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8599
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8600
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8601
  br label %11, !dbg !8602

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8606, metadata !DIExpression()), !dbg !8607
  %2 = xor i32 %0, -1, !dbg !8608
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8608
  %4 = and i32 %3, %2, !dbg !8608
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8608
  ret void, !dbg !8609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8612, metadata !DIExpression()), !dbg !8613
  %2 = xor i32 %0, -1, !dbg !8614
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8614
  %4 = and i32 %3, %2, !dbg !8614
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8614
  ret void, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8618, metadata !DIExpression()), !dbg !8619
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8620
  %3 = or i32 %2, %0, !dbg !8620
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8620
  ret void, !dbg !8621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8624, metadata !DIExpression()), !dbg !8625
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8626
  %3 = or i32 %2, %0, !dbg !8626
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8626
  ret void, !dbg !8627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8632, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8633, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %2, metadata !8634, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8637, metadata !DIExpression()), !dbg !8638
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8639
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8639
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8641
  br i1 %6, label %7, label %9, !dbg !8642

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8643
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8644
  store i8* %2, i8** %8, align 4, !dbg !8645
  br label %9, !dbg !8646

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8638
  ret i32 %10, !dbg !8647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8650, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8651, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8652, metadata !DIExpression()), !dbg !8653
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8654
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8655
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8656
  store i8* null, i8** %3, align 4, !dbg !8657
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8661, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i8* %1, metadata !8662, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i8* %1, metadata !8663, metadata !DIExpression()), !dbg !8666
  %3 = bitcast i8* %1 to i32*, !dbg !8667
  %4 = load i32, i32* %3, align 4, !dbg !8667
  %5 = add i32 %4, -169, !dbg !8667
  %6 = icmp ult i32 %5, -121, !dbg !8667
  br i1 %6, label %15, label %7, !dbg !8669

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8670
  %9 = inttoptr i32 %8 to i32*, !dbg !8671
  call void @llvm.dbg.value(metadata i32* %9, metadata !8664, metadata !DIExpression()), !dbg !8666
  %10 = load volatile i32, i32* %9, align 4, !dbg !8672
  call void @llvm.dbg.value(metadata i32 %10, metadata !8665, metadata !DIExpression()), !dbg !8666
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8673
  %12 = bitcast i8* %11 to i32*, !dbg !8673
  %13 = load i32, i32* %12, align 4, !dbg !8673
  %14 = or i32 %13, %10, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %14, metadata !8665, metadata !DIExpression()), !dbg !8666
  store volatile i32 %14, i32* %9, align 4, !dbg !8675
  br label %15, !dbg !8676

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8666
  ret i32 %16, !dbg !8677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8678 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8680, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* %1, metadata !8681, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i8* %1, metadata !8682, metadata !DIExpression()), !dbg !8685
  %3 = bitcast i8* %1 to i32*, !dbg !8686
  %4 = load i32, i32* %3, align 4, !dbg !8686
  %5 = add i32 %4, -169, !dbg !8686
  %6 = icmp ult i32 %5, -121, !dbg !8686
  br i1 %6, label %16, label %7, !dbg !8688

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8689
  %9 = inttoptr i32 %8 to i32*, !dbg !8690
  call void @llvm.dbg.value(metadata i32* %9, metadata !8683, metadata !DIExpression()), !dbg !8685
  %10 = load volatile i32, i32* %9, align 4, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %10, metadata !8684, metadata !DIExpression()), !dbg !8685
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8692
  %12 = bitcast i8* %11 to i32*, !dbg !8692
  %13 = load i32, i32* %12, align 4, !dbg !8692
  %14 = xor i32 %13, -1, !dbg !8693
  %15 = and i32 %10, %14, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %15, metadata !8684, metadata !DIExpression()), !dbg !8685
  store volatile i32 %15, i32* %9, align 4, !dbg !8695
  br label %16, !dbg !8696

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8685
  ret i32 %17, !dbg !8697
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8700, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %1, metadata !8701, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32* %2, metadata !8702, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %1, metadata !8703, metadata !DIExpression()), !dbg !8708
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %4, metadata !8704, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 undef, metadata !8705, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 undef, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %4, metadata !8707, metadata !DIExpression()), !dbg !8708
  %5 = bitcast i8* %1 to i32*, !dbg !8710
  %6 = load i32, i32* %5, align 4, !dbg !8710
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8711

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %8, metadata !8705, metadata !DIExpression()), !dbg !8708
  br label %19, !dbg !8713

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %10, metadata !8706, metadata !DIExpression()), !dbg !8708
  br label %19, !dbg !8716

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8717
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !8718
  br label %19, !dbg !8719

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8720
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !8721
  br label %19, !dbg !8722

17:                                               ; preds = %3
  br label %19, !dbg !8723

18:                                               ; preds = %3
  br label %19, !dbg !8724

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8725
  br label %21, !dbg !8726

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8708
  ret i32 %22, !dbg !8726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8729, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8730, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %2, metadata !8731, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8732, metadata !DIExpression()), !dbg !8737
  %4 = bitcast i8* %1 to i32*, !dbg !8738
  %5 = load i32, i32* %4, align 4, !dbg !8738
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %6, metadata !8736, metadata !DIExpression()), !dbg !8737
  %7 = icmp slt i32 %6, 0, !dbg !8740
  br i1 %7, label %22, label %8, !dbg !8742

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8732, metadata !DIExpression()), !dbg !8737
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8743
  %10 = bitcast i8* %9 to i32*, !dbg !8743
  %11 = load i32, i32* %10, align 4, !dbg !8743
  %12 = lshr i32 %11, 16, !dbg !8743
  %13 = and i32 %12, 7, !dbg !8743
  %14 = lshr i32 %11, 8, !dbg !8744
  %15 = and i32 %14, 31, !dbg !8744
  %16 = shl i32 %13, %15, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %16, metadata !8735, metadata !DIExpression()), !dbg !8737
  %17 = and i32 %11, 255, !dbg !8746
  %18 = or i32 %17, 1073887232, !dbg !8747
  %19 = inttoptr i32 %18 to i32*, !dbg !8748
  call void @llvm.dbg.value(metadata i32* %19, metadata !8733, metadata !DIExpression()), !dbg !8737
  %20 = load volatile i32, i32* %19, align 4, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %20, metadata !8734, metadata !DIExpression()), !dbg !8737
  %21 = or i32 %16, %20, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %21, metadata !8734, metadata !DIExpression()), !dbg !8737
  store volatile i32 %21, i32* %19, align 4, !dbg !8751
  br label %22, !dbg !8752

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8737
  ret i32 %23, !dbg !8753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8758, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i32 0, metadata !8759, metadata !DIExpression()), !dbg !8760
  %2 = add i32 %0, -1, !dbg !8761
  %3 = icmp ult i32 %2, 6, !dbg !8761
  br i1 %3, label %4, label %7, !dbg !8761

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8761
  %6 = load i32, i32* %5, align 4, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %6, metadata !8759, metadata !DIExpression()), !dbg !8760
  br label %7, !dbg !8762

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8760
  ret i32 %8, !dbg !8763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8768, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 %1, metadata !8769, metadata !DIExpression()), !dbg !8770
  %3 = udiv i32 %0, %1, !dbg !8771
  ret i32 %3, !dbg !8772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8777, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 8, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 84, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %1, metadata !8780, metadata !DIExpression()), !dbg !8781
  %3 = mul i32 %0, 84, !dbg !8782
  %4 = shl nsw i32 %1, 3, !dbg !8783
  %5 = udiv i32 %3, %4, !dbg !8784
  ret i32 %5, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8786 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8788, metadata !DIExpression()), !dbg !8791
  tail call void @config_enable_default_clocks() #25, !dbg !8792
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8793
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8793
  %4 = lshr i32 %3, 4, !dbg !8793
  %5 = and i32 %4, 15, !dbg !8793
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8793
  %7 = load i8, i8* %6, align 1, !dbg !8793
  %8 = zext i8 %7 to i32, !dbg !8793
  %9 = lshr i32 %2, %8, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %9, metadata !8789, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8790, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8791
  %10 = icmp ult i32 %9, 84000000, !dbg !8794
  br i1 %10, label %11, label %13, !dbg !8796

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8797
  br label %13, !dbg !8799

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8800
  tail call fastcc void @set_up_plls() #24, !dbg !8801
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8802
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8805
  br label %14, !dbg !8806

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8807
  %16 = icmp eq i32 %15, 8, !dbg !8808
  br i1 %16, label %17, label %14, !dbg !8806, !llvm.loop !8809

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8811
  br i1 %18, label %19, label %21, !dbg !8813

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8814
  br label %21, !dbg !8816

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8817
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8818
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8819
  ret i32 0, !dbg !8820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8821 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8823
  %2 = and i32 %1, 240, !dbg !8823
  ret i32 %2, !dbg !8824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8825 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8826
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8831
  br label %1, !dbg !8832

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8833
  %3 = icmp eq i32 %2, 1, !dbg !8834
  br i1 %3, label %4, label %1, !dbg !8832, !llvm.loop !8835

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8837
  br label %5, !dbg !8840

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8841
  %7 = icmp eq i32 %6, 1, !dbg !8842
  br i1 %7, label %8, label %5, !dbg !8840, !llvm.loop !8843

8:                                                ; preds = %5
  ret void, !dbg !8845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8846 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8847
  %2 = icmp eq i32 %1, 8, !dbg !8849
  br i1 %2, label %3, label %4, !dbg !8850

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8851
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8853
  br label %4, !dbg !8854

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8855
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  %6 = and i32 %5, -196609, !dbg !8856
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8857
  %8 = and i32 %7, -251658241, !dbg !8857
  %9 = or i32 %8, 134217728, !dbg !8857
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8857
  tail call void @config_pll_sysclock() #25, !dbg !8858
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8859
  br label %10, !dbg !8860

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8861
  %12 = icmp eq i32 %11, 1, !dbg !8862
  br i1 %12, label %13, label %10, !dbg !8860, !llvm.loop !8863

13:                                               ; preds = %10
  ret void, !dbg !8865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8866 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8869
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8870
  %2 = and i32 %1, -241, !dbg !8870
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8870
  ret void, !dbg !8871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8874, metadata !DIExpression()), !dbg !8875
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8876
  %3 = and i32 %2, -4, !dbg !8876
  %4 = or i32 %3, %0, !dbg !8876
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8876
  ret void, !dbg !8877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8879
  %2 = and i32 %1, 12, !dbg !8879
  ret i32 %2, !dbg !8880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8881 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8883, metadata !DIExpression()), !dbg !8884
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8885
  %2 = and i32 %1, -7169, !dbg !8885
  %3 = or i32 %2, 4096, !dbg !8885
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8887 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8891
  %2 = and i32 %1, -57345, !dbg !8891
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8891
  ret void, !dbg !8892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8893 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8894
  %2 = icmp eq i32 %1, 1, !dbg !8896
  br i1 %2, label %7, label %3, !dbg !8897

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8898
  br label %4, !dbg !8900

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8901
  %6 = icmp eq i32 %5, 1, !dbg !8902
  br i1 %6, label %7, label %4, !dbg !8900, !llvm.loop !8903

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8905
  br label %8, !dbg !8906

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8907
  %10 = icmp eq i32 %9, 0, !dbg !8908
  br i1 %10, label %11, label %8, !dbg !8906, !llvm.loop !8909

11:                                               ; preds = %8
  ret void, !dbg !8911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8912 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8913
  %2 = and i32 %1, -16777217, !dbg !8913
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8913
  ret void, !dbg !8914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8915 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8916
  %2 = or i32 %1, 16777216, !dbg !8916
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8918 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8919
  %2 = lshr i32 %1, 25, !dbg !8920
  %3 = and i32 %2, 1, !dbg !8920
  ret i32 %3, !dbg !8921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8922 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8923
  %2 = lshr i32 %1, 1, !dbg !8924
  %3 = and i32 %2, 1, !dbg !8924
  ret i32 %3, !dbg !8925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8927
  %2 = or i32 %1, 1, !dbg !8927
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8927
  ret void, !dbg !8928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8930
  %2 = and i32 %1, -262145, !dbg !8930
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8930
  ret void, !dbg !8931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8932 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8933
  %2 = or i32 %1, 65536, !dbg !8933
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8933
  ret void, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8936
  %2 = lshr i32 %1, 17, !dbg !8937
  %3 = and i32 %2, 1, !dbg !8937
  ret i32 %3, !dbg !8938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8939 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8940
  %2 = or i32 %1, 1, !dbg !8940
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8942 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8943
  %2 = lshr i32 %1, 1, !dbg !8944
  %3 = and i32 %2, 1, !dbg !8944
  ret i32 %3, !dbg !8945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8946 {
  ret i32 16000000, !dbg !8948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8952 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8953
  ret void, !dbg !8954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8955 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8959, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i32 8, metadata !8960, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i32 84, metadata !8961, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i32 0, metadata !8962, metadata !DIExpression()), !dbg !8963
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8964
  %2 = and i32 %1, -4227072, !dbg !8964
  %3 = or i32 %2, 4199688, !dbg !8964
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8964
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8965
  %5 = and i32 %4, -196609, !dbg !8965
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8965
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8966
  %7 = and i32 %6, -1879048193, !dbg !8966
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8968 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8969
  ret void, !dbg !8970
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8971 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8974, metadata !DIExpression()), !dbg !8976
  %2 = bitcast i32* %1 to i8*, !dbg !8977
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8977
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8975, metadata !DIExpression()), !dbg !8978
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8979
  %4 = or i32 %3, 268435456, !dbg !8979
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8979
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8980
  %6 = and i32 %5, 268435456, !dbg !8980
  store volatile i32 %6, i32* %1, align 4, !dbg !8981
  %7 = load volatile i32, i32* %1, align 4, !dbg !8982
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8983
  ret void, !dbg !8983
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8986, metadata !DIExpression()), !dbg !8987
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8988
  br i1 %2, label %3, label %4, !dbg !8990

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8991
  br label %4, !dbg !8992

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8987
  ret i32 %5, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8994 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8999, metadata !DIExpression()), !dbg !9000
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9001, !srcloc !9003
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9004
  ret i1 %1, !dbg !9005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9006 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9007
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9008
  ret void, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9012, metadata !DIExpression()), !dbg !9013
  %2 = icmp eq i32 %0, 10, !dbg !9014
  br i1 %2, label %3, label %4, !dbg !9016

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9017
  br label %4, !dbg !9019

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9020
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9021
  ret i32 %0, !dbg !9022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9023 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9026, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata i8 %0, metadata !9027, metadata !DIExpression()), !dbg !9028
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9029, !srcloc !9031
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9034 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9036, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.value(metadata i8 %0, metadata !9037, metadata !DIExpression()), !dbg !9039
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9040
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9038, metadata !DIExpression()), !dbg !9039
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9041
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9041
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9046, metadata !DIExpression()), !dbg !9047
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9048
  ret i1 %1, !dbg !9049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9099, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9101, metadata !DIExpression()), !dbg !9102
  ret void, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9104 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9106, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i8 %1, metadata !9107, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i32 %2, metadata !9108, metadata !DIExpression()), !dbg !9111
  %5 = bitcast i32* %4 to i8*, !dbg !9112
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9112
  call void @llvm.dbg.value(metadata i32* %4, metadata !9110, metadata !DIExpression(DW_OP_deref)), !dbg !9111
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9113
  call void @llvm.dbg.value(metadata i32 %6, metadata !9109, metadata !DIExpression()), !dbg !9111
  %7 = icmp eq i32 %6, 0, !dbg !9114
  br i1 %7, label %8, label %31, !dbg !9116

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9111
  %9 = and i32 %2, 131072, !dbg !9117
  %10 = icmp eq i32 %9, 0, !dbg !9119
  br i1 %10, label %28, label %11, !dbg !9120

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9121
  %13 = icmp eq i32 %12, 0, !dbg !9124
  br i1 %13, label %18, label %14, !dbg !9125

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9126
  %16 = shl nuw i32 1, %15, !dbg !9126
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9128
  br label %25, !dbg !9129

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9130
  %20 = icmp eq i32 %19, 0, !dbg !9132
  %21 = zext i8 %1 to i32, !dbg !9111
  br i1 %20, label %25, label %22, !dbg !9133

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9134
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9136
  br label %25, !dbg !9137

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9138
  %27 = load i32, i32* %4, align 4, !dbg !9139
  call void @llvm.dbg.value(metadata i32 %30, metadata !9110, metadata !DIExpression()), !dbg !9111
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9140
  br label %31, !dbg !9141

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9138
  %30 = load i32, i32* %4, align 4, !dbg !9139
  call void @llvm.dbg.value(metadata i32 %30, metadata !9110, metadata !DIExpression()), !dbg !9111
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9140
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9111
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9142
  ret i32 %6, !dbg !9142
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9147, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata i32* %1, metadata !9148, metadata !DIExpression()), !dbg !9152
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9153
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9153
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9149, metadata !DIExpression()), !dbg !9152
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9154
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9154
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9154
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9151, metadata !DIExpression()), !dbg !9152
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9155
  store i32 %9, i32* %1, align 4, !dbg !9156
  ret i32 0, !dbg !9157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9160, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %2, metadata !9162, metadata !DIExpression()), !dbg !9166
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9167
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9167
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9167
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9163, metadata !DIExpression()), !dbg !9166
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9168
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9168
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9168
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9164, metadata !DIExpression()), !dbg !9166
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %10, metadata !9165, metadata !DIExpression()), !dbg !9166
  %11 = xor i32 %1, -1, !dbg !9170
  %12 = and i32 %10, %11, !dbg !9171
  %13 = and i32 %2, %1, !dbg !9172
  %14 = or i32 %12, %13, !dbg !9173
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9174
  ret i32 0, !dbg !9175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9176 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9178, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 %1, metadata !9179, metadata !DIExpression()), !dbg !9182
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9183
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9183
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9183
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9180, metadata !DIExpression()), !dbg !9182
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9184
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9184
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9184
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9181, metadata !DIExpression()), !dbg !9182
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9185
  store volatile i32 %1, i32* %9, align 4, !dbg !9185
  ret i32 0, !dbg !9186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9189, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 %1, metadata !9190, metadata !DIExpression()), !dbg !9193
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9194
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9194
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9194
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9191, metadata !DIExpression()), !dbg !9193
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9195
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9195
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9192, metadata !DIExpression()), !dbg !9193
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9196
  ret i32 0, !dbg !9197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9198 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9200, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.value(metadata i32 %1, metadata !9201, metadata !DIExpression()), !dbg !9204
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9205
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9205
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9202, metadata !DIExpression()), !dbg !9204
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9206
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9206
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9206
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9203, metadata !DIExpression()), !dbg !9204
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9207
  %10 = load volatile i32, i32* %9, align 4, !dbg !9207
  %11 = xor i32 %10, %1, !dbg !9207
  store volatile i32 %11, i32* %9, align 4, !dbg !9207
  ret i32 0, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9211, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i8 %1, metadata !9212, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i32 %2, metadata !9213, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i32 %3, metadata !9214, metadata !DIExpression()), !dbg !9221
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9222
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9222
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9222
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9215, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i8* undef, metadata !9216, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i32 0, metadata !9218, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.value(metadata i32 0, metadata !9219, metadata !DIExpression()), !dbg !9221
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9223

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9224
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9228
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9229
  %12 = load i32, i32* %11, align 4, !dbg !9229
  %13 = icmp eq i32 %10, %12, !dbg !9230
  br i1 %13, label %14, label %29, !dbg !9231

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9232
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9234
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9235
  br label %29, !dbg !9236

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9237
  %17 = load i8*, i8** %16, align 4, !dbg !9237
  call void @llvm.dbg.value(metadata i8* %17, metadata !9216, metadata !DIExpression()), !dbg !9221
  %18 = zext i8 %1 to i32, !dbg !9238
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9240
  %20 = icmp eq i32 %19, 0, !dbg !9241
  br i1 %20, label %21, label %29, !dbg !9242

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9243
  %23 = load i32, i32* %22, align 4, !dbg !9243
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9244
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9245

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9218, metadata !DIExpression()), !dbg !9221
  br label %27, !dbg !9246

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9218, metadata !DIExpression()), !dbg !9221
  br label %27, !dbg !9248

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9218, metadata !DIExpression()), !dbg !9221
  br label %27, !dbg !9249

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9221
  call void @llvm.dbg.value(metadata i32 %28, metadata !9218, metadata !DIExpression()), !dbg !9221
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9250
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9251
  br label %29, !dbg !9251

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9221
  call void @llvm.dbg.value(metadata i32 %30, metadata !9219, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.label(metadata !9220), !dbg !9252
  ret i32 %30, !dbg !9253
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9256, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9257, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata i1 %2, metadata !9258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9260
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9261
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9261
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9261
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9259, metadata !DIExpression()), !dbg !9260
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9262
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9263
  ret i32 %8, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9271, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i1 %2, metadata !9273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9274
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9275
  br i1 %4, label %5, label %6, !dbg !9278

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.118, i32 0, i32 0)) #25, !dbg !9279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9279
  unreachable, !dbg !9279

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9281
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9281
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9281
  br i1 %9, label %10, label %11, !dbg !9284

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9285
  unreachable, !dbg !9285

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9287
  br i1 %12, label %18, label %13, !dbg !9289

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9290
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9293
  %16 = or i1 %15, %2, !dbg !9294
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9294
  br i1 %2, label %19, label %21, !dbg !9294

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9295

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9296
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9299
  br label %21, !dbg !9300

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9274
  ret i32 %22, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9306, metadata !DIExpression()), !dbg !9307
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9308
  %3 = icmp eq %struct._snode* %2, null, !dbg !9308
  ret i1 %3, !dbg !9308
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9309 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9313, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9314, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9315, metadata !DIExpression()), !dbg !9317
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9318
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9315, metadata !DIExpression()), !dbg !9317
  %4 = icmp eq %struct._snode* %3, null, !dbg !9320
  br i1 %4, label %15, label %5, !dbg !9318

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9315, metadata !DIExpression()), !dbg !9317
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9322
  br i1 %6, label %9, label %11, !dbg !9325

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9315, metadata !DIExpression()), !dbg !9317
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9322
  br i1 %8, label %9, label %11, !dbg !9325, !llvm.loop !9326

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9327
  br label %15, !dbg !9327

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9316, metadata !DIExpression()), !dbg !9317
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9315, metadata !DIExpression()), !dbg !9317
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9320
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9316, metadata !DIExpression()), !dbg !9317
  %14 = icmp eq %struct._snode* %13, null, !dbg !9320
  br i1 %14, label %15, label %7, !dbg !9318, !llvm.loop !9326

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9330 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9334, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9335, metadata !DIExpression()), !dbg !9336
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9337
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9337
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9337
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9338
  %5 = icmp eq %struct._snode* %4, null, !dbg !9338
  br i1 %5, label %6, label %8, !dbg !9337

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9340
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9340
  br label %8, !dbg !9340

8:                                                ; preds = %6, %2
  ret void, !dbg !9337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9346, metadata !DIExpression()), !dbg !9347
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9348
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9348
  ret %struct._snode* %3, !dbg !9349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9350 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9354, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9355, metadata !DIExpression()), !dbg !9356
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9357
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9358
  ret void, !dbg !9359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9360 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9362, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9363, metadata !DIExpression()), !dbg !9364
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9365
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9366
  ret void, !dbg !9367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9368 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9370, metadata !DIExpression()), !dbg !9371
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9372
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9372
  ret %struct._snode* %3, !dbg !9373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9374 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9376, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9377, metadata !DIExpression()), !dbg !9378
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9379
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9380
  ret void, !dbg !9381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9382 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9386, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9387, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9388, metadata !DIExpression()), !dbg !9389
  %4 = icmp eq %struct._snode* %1, null, !dbg !9390
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9392
  br i1 %4, label %6, label %11, !dbg !9393

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9394
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9396
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9396
  br i1 %8, label %9, label %15, !dbg !9394

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9398
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9398
  br label %15, !dbg !9398

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9400
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9402
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9402
  br i1 %13, label %14, label %15, !dbg !9400

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9404
  br label %15, !dbg !9404

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9393
  ret void, !dbg !9393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9406 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9410, metadata !DIExpression()), !dbg !9411
  %2 = icmp eq %struct._snode* %0, null, !dbg !9412
  br i1 %2, label %5, label %3, !dbg !9412

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9412
  br label %5, !dbg !9412

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9412
  ret %struct._snode* %6, !dbg !9412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9413 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9415, metadata !DIExpression()), !dbg !9416
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9417
  ret %struct._snode* %2, !dbg !9417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9418 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9420, metadata !DIExpression()), !dbg !9421
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9422
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9422
  ret %struct._snode* %3, !dbg !9423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9426, metadata !DIExpression()), !dbg !9429
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9430, !range !9431
  call void @llvm.dbg.value(metadata i32 %2, metadata !9427, metadata !DIExpression()), !dbg !9429
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %3, metadata !9428, metadata !DIExpression()), !dbg !9429
  ret i32 %3, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9436, metadata !DIExpression()), !dbg !9439
  call void @llvm.dbg.value(metadata i8* %1, metadata !9437, metadata !DIExpression()), !dbg !9439
  call void @llvm.dbg.value(metadata i8* %1, metadata !9438, metadata !DIExpression()), !dbg !9439
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9440
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9440
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9441
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9441
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9441
  %8 = shl nuw i32 1, %0, !dbg !9442
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9443
  ret void, !dbg !9444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9445 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9449, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %1, metadata !9450, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9451, metadata !DIExpression()), !dbg !9455
  %4 = bitcast i64* %3 to i8*, !dbg !9456
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9456
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9453, metadata !DIExpression()), !dbg !9455
  store i64 70368744177732, i64* %3, align 8, !dbg !9457
  call void @llvm.dbg.value(metadata i64* %3, metadata !9453, metadata !DIExpression(DW_OP_deref)), !dbg !9455
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %5, metadata !9454, metadata !DIExpression()), !dbg !9455
  %6 = icmp eq i32 %5, 0, !dbg !9459
  br i1 %6, label %7, label %8, !dbg !9461

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9462
  br label %8, !dbg !9463

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9464
  ret void, !dbg !9464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9465 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9467, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i8* %0, metadata !9468, metadata !DIExpression()), !dbg !9470
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9471
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9469, metadata !DIExpression()), !dbg !9470
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9472
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9472
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9473
  ret i32 %5, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %1, metadata !9478, metadata !DIExpression()), !dbg !9480
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %3, metadata !9479, metadata !DIExpression()), !dbg !9480
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9482
  ret void, !dbg !9483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9488, metadata !DIExpression()), !dbg !9489
  %2 = sdiv i32 %0, 4, !dbg !9490
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9491
  %6 = add nsw i32 %5, 16, !dbg !9492
  %7 = shl i32 15, %6, !dbg !9493
  %8 = or i32 %7, %2, !dbg !9494
  ret i32 %8, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9500, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 %1, metadata !9501, metadata !DIExpression()), !dbg !9502
  %3 = and i32 %1, 255, !dbg !9503
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9503
  %5 = load volatile i32, i32* %4, align 4, !dbg !9503
  %6 = lshr i32 %1, 16, !dbg !9503
  %7 = xor i32 %6, -1, !dbg !9503
  %8 = and i32 %5, %7, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()) #23, !dbg !9508
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9510, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %9, metadata !9507, metadata !DIExpression()) #23, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %9, metadata !9512, metadata !DIExpression()) #23, !dbg !9517
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9519, !range !7679
  %11 = shl i32 %0, %10, !dbg !9503
  %12 = or i32 %11, %8, !dbg !9503
  store volatile i32 %12, i32* %4, align 4, !dbg !9503
  ret void, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9521 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9525, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9526, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %2, metadata !9527, metadata !DIExpression()), !dbg !9530
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9531
  %5 = icmp eq %struct._snode* %4, null, !dbg !9531
  br i1 %5, label %24, label %6, !dbg !9531

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9533
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9529, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9528, metadata !DIExpression()), !dbg !9530
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9534
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9534
  %12 = load i32, i32* %11, align 4, !dbg !9534
  %13 = and i32 %12, %2, !dbg !9538
  %14 = icmp eq i32 %13, 0, !dbg !9538
  br i1 %14, label %22, label %15, !dbg !9539

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9540
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9540
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9540
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9540
  br i1 %19, label %20, label %21, !dbg !9544

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9545
  unreachable, !dbg !9545

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9547
  br label %22, !dbg !9548

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9528, metadata !DIExpression()), !dbg !9530
  %23 = icmp eq %struct._snode* %8, null, !dbg !9549
  br i1 %23, label %24, label %6, !dbg !9549

24:                                               ; preds = %22, %3
  ret void, !dbg !9550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9553, metadata !DIExpression()), !dbg !9554
  %2 = and i32 %0, 255, !dbg !9555
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9555
  %4 = load volatile i32, i32* %3, align 4, !dbg !9555
  %5 = lshr i32 %0, 16, !dbg !9555
  %6 = and i32 %4, %5, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %5, metadata !9504, metadata !DIExpression()) #23, !dbg !9556
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9558, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %7, metadata !9512, metadata !DIExpression()) #23, !dbg !9559
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9561, !range !7679
  %9 = lshr i32 %6, %8, !dbg !9562
  ret i32 %9, !dbg !9563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i32 %1, metadata !9570, metadata !DIExpression()), !dbg !9571
  %3 = shl i32 %1, 16, !dbg !9572
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9572
  store volatile i32 %3, i32* %4, align 4, !dbg !9572
  ret void, !dbg !9573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9578, metadata !DIExpression()), !dbg !9579
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9580
  %3 = load volatile i32, i32* %2, align 4, !dbg !9580
  ret i32 %3, !dbg !9581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9582 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9584, metadata !DIExpression()), !dbg !9586
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9586
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9587
  store volatile i32 %1, i32* %3, align 4, !dbg !9587
  ret void, !dbg !9588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9589 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9591, metadata !DIExpression()), !dbg !9592
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9593
  %3 = load volatile i32, i32* %2, align 4, !dbg !9593
  ret i32 %3, !dbg !9594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9599, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.value(metadata i32* %1, metadata !9600, metadata !DIExpression()), !dbg !9601
  %3 = and i32 %0, 131072, !dbg !9602
  %4 = icmp eq i32 %3, 0, !dbg !9604
  br i1 %4, label %22, label %5, !dbg !9605

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9606
  %6 = and i32 %0, 2, !dbg !9608
  %7 = icmp eq i32 %6, 0, !dbg !9610
  br i1 %7, label %11, label %8, !dbg !9611

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9612
  %10 = icmp eq i32 %9, 0, !dbg !9612
  br i1 %10, label %33, label %11, !dbg !9615

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9616
  store i32 %12, i32* %1, align 4, !dbg !9616
  %13 = and i32 %0, 16, !dbg !9617
  %14 = icmp eq i32 %13, 0, !dbg !9619
  br i1 %14, label %17, label %15, !dbg !9620

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9621
  br label %31, !dbg !9623

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9624
  %19 = icmp eq i32 %18, 0, !dbg !9626
  br i1 %19, label %33, label %20, !dbg !9627

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9628
  br label %31, !dbg !9630

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9631
  %24 = icmp eq i32 %23, 0, !dbg !9633
  br i1 %24, label %31, label %25, !dbg !9634

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9635
  %27 = icmp eq i32 %26, 0, !dbg !9638
  br i1 %27, label %28, label %31, !dbg !9639

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9640
  br label %33, !dbg !9641

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9601
  ret i32 %34, !dbg !9641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9646, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9647, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9648, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %3, metadata !9649, metadata !DIExpression()), !dbg !9657
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9658
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9658
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9650, metadata !DIExpression()), !dbg !9657
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9659
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9659
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9659
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9651, metadata !DIExpression()), !dbg !9657
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %11, metadata !9652, metadata !DIExpression()), !dbg !9657
  %12 = and i32 %2, 48, !dbg !9661
  call void @llvm.dbg.value(metadata i32 %12, metadata !9653, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9654, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9655, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9656, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9657
  %13 = lshr i32 %2, 6, !dbg !9662
  %14 = and i32 %13, 1, !dbg !9662
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9663
  %15 = lshr i32 %2, 7, !dbg !9664
  %16 = and i32 %15, 3, !dbg !9664
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9665
  %17 = lshr i32 %2, 9, !dbg !9666
  %18 = and i32 %17, 3, !dbg !9666
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9667
  %19 = icmp eq i32 %12, 32, !dbg !9668
  br i1 %19, label %20, label %24, !dbg !9670

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9671
  br i1 %21, label %22, label %23, !dbg !9674

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9675
  br label %24, !dbg !9677

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9678
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9680
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9685, metadata !DIExpression()), !dbg !9687
  %2 = shl nuw i32 1, %0, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %2, metadata !9686, metadata !DIExpression()), !dbg !9687
  ret i32 %2, !dbg !9689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %2, metadata !9696, metadata !DIExpression()), !dbg !9697
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9698
  %5 = load volatile i32, i32* %4, align 4, !dbg !9698
  %6 = xor i32 %1, -1, !dbg !9698
  %7 = and i32 %5, %6, !dbg !9698
  %8 = mul i32 %2, %1, !dbg !9698
  %9 = or i32 %7, %8, !dbg !9698
  store volatile i32 %9, i32* %4, align 4, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9700 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9702, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata i32 %1, metadata !9703, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.value(metadata i32 %2, metadata !9704, metadata !DIExpression()), !dbg !9705
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9706
  %5 = load volatile i32, i32* %4, align 4, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9707
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9709, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9710
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9712, !range !7679
  %8 = shl nuw nsw i32 %7, 1, !dbg !9706
  %9 = shl i32 3, %8, !dbg !9706
  %10 = xor i32 %9, -1, !dbg !9706
  %11 = and i32 %5, %10, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9715
  %12 = shl i32 %2, %8, !dbg !9706
  %13 = or i32 %11, %12, !dbg !9706
  store volatile i32 %13, i32* %4, align 4, !dbg !9706
  ret void, !dbg !9717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9720, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %1, metadata !9721, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %2, metadata !9722, metadata !DIExpression()), !dbg !9723
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9724
  %5 = load volatile i32, i32* %4, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9725
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9727, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9728
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9730, !range !7679
  %8 = shl nuw nsw i32 %7, 1, !dbg !9724
  %9 = shl i32 3, %8, !dbg !9724
  %10 = xor i32 %9, -1, !dbg !9724
  %11 = and i32 %5, %10, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9733
  %12 = shl i32 %2, %8, !dbg !9724
  %13 = or i32 %11, %12, !dbg !9724
  store volatile i32 %13, i32* %4, align 4, !dbg !9724
  ret void, !dbg !9735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9736 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9738, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %1, metadata !9739, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %2, metadata !9740, metadata !DIExpression()), !dbg !9741
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9742
  %5 = load volatile i32, i32* %4, align 4, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9743
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9745, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9746
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9748, !range !7679
  %8 = shl nuw nsw i32 %7, 2, !dbg !9742
  %9 = shl i32 15, %8, !dbg !9742
  %10 = xor i32 %9, -1, !dbg !9742
  %11 = and i32 %5, %10, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9751
  %12 = shl i32 %2, %8, !dbg !9742
  %13 = or i32 %11, %12, !dbg !9742
  store volatile i32 %13, i32* %4, align 4, !dbg !9742
  ret void, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9756, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.value(metadata i32 %1, metadata !9757, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.value(metadata i32 %2, metadata !9758, metadata !DIExpression()), !dbg !9759
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9760
  %5 = load volatile i32, i32* %4, align 4, !dbg !9760
  %6 = lshr i32 %1, 8, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()) #23, !dbg !9761
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9763, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %7, metadata !9512, metadata !DIExpression()) #23, !dbg !9764
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9766, !range !7679
  %9 = shl nuw nsw i32 %8, 2, !dbg !9760
  %10 = shl i32 15, %9, !dbg !9760
  %11 = xor i32 %10, -1, !dbg !9760
  %12 = and i32 %5, %11, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()) #23, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %7, metadata !9507, metadata !DIExpression()) #23, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %7, metadata !9512, metadata !DIExpression()) #23, !dbg !9769
  %13 = shl i32 %2, %9, !dbg !9760
  %14 = or i32 %12, %13, !dbg !9760
  store volatile i32 %14, i32* %4, align 4, !dbg !9760
  ret void, !dbg !9771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9772 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9774, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %1, metadata !9775, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %2, metadata !9776, metadata !DIExpression()), !dbg !9777
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9778
  %5 = load volatile i32, i32* %4, align 4, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9779
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9781, !srcloc !9511
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9779
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9782
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9784, !range !7679
  %8 = shl nuw nsw i32 %7, 1, !dbg !9778
  %9 = shl i32 3, %8, !dbg !9778
  %10 = xor i32 %9, -1, !dbg !9778
  %11 = and i32 %5, %10, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()) #23, !dbg !9785
  call void @llvm.dbg.value(metadata i32 %6, metadata !9507, metadata !DIExpression()) #23, !dbg !9785
  call void @llvm.dbg.value(metadata i32 %6, metadata !9512, metadata !DIExpression()) #23, !dbg !9787
  %12 = shl i32 %2, %8, !dbg !9778
  %13 = or i32 %11, %12, !dbg !9778
  store volatile i32 %13, i32* %4, align 4, !dbg !9778
  ret void, !dbg !9789
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9792, metadata !DIExpression()), !dbg !9795
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9796
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9796
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9796
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9793, metadata !DIExpression()), !dbg !9795
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9797
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9798
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !9799
  br i1 %6, label %7, label %11, !dbg !9801

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %8, metadata !9794, metadata !DIExpression()), !dbg !9795
  %9 = icmp slt i32 %8, 0, !dbg !9803
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9805
  br label %11, !dbg !9805

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9795
  ret i32 %12, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9811, metadata !DIExpression()), !dbg !9812
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9813, !srcloc !9815
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !9816
  ret i1 %1, !dbg !9817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9822, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i8 1, metadata !9823, metadata !DIExpression()), !dbg !9827
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9828
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9828
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9828
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9824, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i32 0, metadata !9825, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9826, metadata !DIExpression()), !dbg !9827
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9829
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9832
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9833
  call void @llvm.dbg.value(metadata i32 %7, metadata !9825, metadata !DIExpression()), !dbg !9827
  ret i32 %7, !dbg !9834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !9835 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9837, metadata !DIExpression()), !dbg !9838
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9839
  ret i1 %1, !dbg !9840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9845, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %1, metadata !9846, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %2, metadata !9847, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %3, metadata !9848, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 0, metadata !9849, metadata !DIExpression()), !dbg !9853
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9854
  %5 = icmp eq i32 %3, 17, !dbg !9855
  br i1 %5, label %6, label %14, !dbg !9856

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %7, metadata !9850, metadata !DIExpression()), !dbg !9858
  %8 = icmp eq i32 %7, 0, !dbg !9859
  %9 = shl nuw i32 1, %1, !dbg !9861
  br i1 %8, label %12, label %10, !dbg !9862

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9863
  br label %14, !dbg !9865

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9866
  br label %14, !dbg !9869

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9870
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9873, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.value(metadata i8* %1, metadata !9874, metadata !DIExpression()), !dbg !9877
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9878
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9878
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9875, metadata !DIExpression()), !dbg !9877
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9879
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9879
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9881
  %9 = icmp eq i32 %8, 0, !dbg !9881
  br i1 %9, label %12, label %10, !dbg !9882

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9883
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9885
  br label %12, !dbg !9886

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9887
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9889
  %15 = icmp eq i32 %14, 0, !dbg !9889
  br i1 %15, label %19, label %16, !dbg !9890

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9891
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9892
  store i8 %18, i8* %1, align 1, !dbg !9893
  br label %19, !dbg !9894

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9877
  ret i32 %20, !dbg !9895
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9898, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i8 %1, metadata !9899, metadata !DIExpression()), !dbg !9902
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9903
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9900, metadata !DIExpression()), !dbg !9902
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9904

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9905
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9908
  %10 = icmp eq i32 %9, 0, !dbg !9908
  br i1 %10, label %18, label %11, !dbg !9909

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9910, !srcloc !9917
  call void @llvm.dbg.value(metadata i32 undef, metadata !9913, metadata !DIExpression()) #23, !dbg !9918
  call void @llvm.dbg.value(metadata i32 undef, metadata !9914, metadata !DIExpression()) #23, !dbg !9918
  call void @llvm.dbg.value(metadata i32 undef, metadata !9901, metadata !DIExpression()), !dbg !9902
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9919
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9921
  %15 = icmp eq i32 %14, 0, !dbg !9921
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9910
  br i1 %15, label %17, label %19, !dbg !9922

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9913, metadata !DIExpression()) #23, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %16, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 undef, metadata !9923, metadata !DIExpression()) #23, !dbg !9926
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9928, !srcloc !9929
  br label %18, !dbg !9930

18:                                               ; preds = %17, %7
  br label %7, !dbg !9905, !llvm.loop !9931

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9910
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9933
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9934
  call void @llvm.dbg.value(metadata i32 %20, metadata !9923, metadata !DIExpression()) #23, !dbg !9935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9937, !srcloc !9929
  ret void, !dbg !9938
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9941, metadata !DIExpression()), !dbg !9944
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9945
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9945
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9945
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9944
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9946
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9946
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9948
  %8 = icmp ne i32 %7, 0, !dbg !9948
  %9 = zext i1 %8 to i32, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %9, metadata !9943, metadata !DIExpression()), !dbg !9944
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9950
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9952
  %12 = icmp eq i32 %11, 0, !dbg !9952
  %13 = or i32 %9, 2, !dbg !9953
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %14, metadata !9943, metadata !DIExpression()), !dbg !9944
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9956
  %17 = icmp eq i32 %16, 0, !dbg !9956
  %18 = or i32 %14, 4, !dbg !9957
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9957
  call void @llvm.dbg.value(metadata i32 %19, metadata !9943, metadata !DIExpression()), !dbg !9944
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9958
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9960
  %22 = icmp eq i32 %21, 0, !dbg !9960
  %23 = or i32 %19, 8, !dbg !9961
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %24, metadata !9943, metadata !DIExpression()), !dbg !9944
  %25 = and i32 %24, 8, !dbg !9962
  %26 = icmp eq i32 %25, 0, !dbg !9962
  br i1 %26, label %29, label %27, !dbg !9964

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9965
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9967
  br label %29, !dbg !9968

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9969
  %31 = icmp eq i32 %30, 0, !dbg !9969
  br i1 %31, label %34, label %32, !dbg !9971

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9972
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9974
  br label %34, !dbg !9975

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9976
  %36 = icmp eq i32 %35, 0, !dbg !9976
  br i1 %36, label %39, label %37, !dbg !9978

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9979
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9981
  br label %39, !dbg !9982

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9983
  %41 = icmp eq i32 %40, 0, !dbg !9983
  br i1 %41, label %44, label %42, !dbg !9985

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9986
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9988
  br label %44, !dbg !9989

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9990
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9991
  ret i32 %24, !dbg !9992
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9995, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9996, metadata !DIExpression()), !dbg !10004
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10005
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10005
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9997, metadata !DIExpression()), !dbg !10004
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10006
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10006
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10006
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9998, metadata !DIExpression()), !dbg !10004
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10007
  %10 = load i8, i8* %9, align 4, !dbg !10007
  %11 = zext i8 %10 to i32, !dbg !10008
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %12, metadata !10000, metadata !DIExpression()), !dbg !10004
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10010
  %14 = load i8, i8* %13, align 1, !dbg !10010
  %15 = zext i8 %14 to i32, !dbg !10011
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10012
  call void @llvm.dbg.value(metadata i32 %16, metadata !10001, metadata !DIExpression()), !dbg !10004
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10013
  %18 = load i8, i8* %17, align 2, !dbg !10013
  %19 = zext i8 %18 to i32, !dbg !10014
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10015
  call void @llvm.dbg.value(metadata i32 %20, metadata !10002, metadata !DIExpression()), !dbg !10004
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10016
  %22 = load i8, i8* %21, align 1, !dbg !10016
  %23 = zext i8 %22 to i32, !dbg !10017
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10018
  call void @llvm.dbg.value(metadata i32 %24, metadata !10003, metadata !DIExpression()), !dbg !10004
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10019

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10021
  br i1 %26, label %69, label %27, !dbg !10023

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10024

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10025
  br i1 %29, label %65, label %30, !dbg !10025

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10027
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10004
  br i1 %31, label %38, label %34, !dbg !10029

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10030
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10030

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10033
  br i1 %37, label %38, label %69, !dbg !10034

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10035
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10036
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10037
  %41 = icmp eq i32 %12, %40, !dbg !10039
  br i1 %41, label %43, label %42, !dbg !10040

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10041
  br label %43, !dbg !10043

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10044
  %45 = icmp eq i32 %16, %44, !dbg !10046
  br i1 %45, label %47, label %46, !dbg !10047

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10048
  br label %47, !dbg !10050

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10051
  %49 = icmp eq i32 %20, %48, !dbg !10053
  br i1 %49, label %51, label %50, !dbg !10054

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10055
  br label %51, !dbg !10057

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10058
  %53 = icmp eq i32 %24, %52, !dbg !10060
  br i1 %53, label %55, label %54, !dbg !10061

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10062
  br label %55, !dbg !10064

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10065
  %57 = load i32, i32* %56, align 4, !dbg !10065
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10067
  %59 = load i32, i32* %58, align 4, !dbg !10067
  %60 = icmp eq i32 %57, %59, !dbg !10068
  br i1 %60, label %63, label %61, !dbg !10069

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10070
  %62 = load i32, i32* %56, align 4, !dbg !10072
  store i32 %62, i32* %58, align 4, !dbg !10073
  br label %63, !dbg !10074

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10075
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10076
  br label %69, !dbg !10077

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10025
  %67 = and i8 %66, 1, !dbg !10025
  %68 = icmp eq i8 %67, 0, !dbg !10025
  br i1 %68, label %30, label %69, !dbg !10025

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10004
  ret i32 %70, !dbg !10078
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10081, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10082, metadata !DIExpression()), !dbg !10084
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10085
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10085
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10085
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10083, metadata !DIExpression()), !dbg !10084
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10086
  %7 = load i32, i32* %6, align 4, !dbg !10086
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10087
  store i32 %7, i32* %8, align 4, !dbg !10088
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10089, !range !10090
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10091
  %11 = trunc i32 %10 to i8, !dbg !10091
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10092
  store i8 %11, i8* %12, align 4, !dbg !10093
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10094, !range !10095
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10096
  %15 = trunc i32 %14 to i8, !dbg !10096
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10097
  store i8 %15, i8* %16, align 1, !dbg !10098
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10099
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10100, !range !10090
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10101
  %20 = trunc i32 %19 to i8, !dbg !10101
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10102
  store i8 %20, i8* %21, align 2, !dbg !10103
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10104, !range !10105
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10106
  %24 = trunc i32 %23 to i8, !dbg !10106
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10107
  store i8 %24, i8* %25, align 1, !dbg !10108
  ret i32 0, !dbg !10109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10110 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10114, metadata !DIExpression()), !dbg !10116
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10117
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10117
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10117
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10115, metadata !DIExpression()), !dbg !10116
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10118
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10118
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10119
  ret i32 %7, !dbg !10120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10125, metadata !DIExpression()), !dbg !10126
  %2 = icmp eq i32 %0, 1024, !dbg !10127
  %3 = select i1 %2, i32 2, i32 0, !dbg !10127
  %4 = icmp eq i32 %0, 1536, !dbg !10127
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10127
  ret i32 %5, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10131, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10134
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10134
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10134
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10132, metadata !DIExpression()), !dbg !10133
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10135
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10135
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10136
  ret i32 %7, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10142, metadata !DIExpression()), !dbg !10143
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10144
  %3 = icmp ult i32 %2, 4, !dbg !10144
  br i1 %3, label %4, label %7, !dbg !10144

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10144
  %6 = load i32, i32* %5, align 4, !dbg !10144
  br label %7, !dbg !10144

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10145
  ret i32 %8, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10150, metadata !DIExpression()), !dbg !10152
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10153
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10153
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10151, metadata !DIExpression()), !dbg !10152
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10154
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10154
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10155
  ret i32 %7, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %1, metadata !10162, metadata !DIExpression()), !dbg !10163
  %3 = icmp eq i32 %0, 4096, !dbg !10164
  %4 = icmp eq i32 %1, 0, !dbg !10164
  %5 = select i1 %4, i32 4, i32 3, !dbg !10164
  %6 = select i1 %4, i32 3, i32 2, !dbg !10164
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10164
  ret i32 %7, !dbg !10165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10168, metadata !DIExpression()), !dbg !10170
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10171
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10171
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10171
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10169, metadata !DIExpression()), !dbg !10170
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10172
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10172
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10173
  ret i32 %7, !dbg !10174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10179, metadata !DIExpression()), !dbg !10180
  %2 = icmp eq i32 %0, 768, !dbg !10181
  %3 = zext i1 %2 to i32, !dbg !10180
  ret i32 %3, !dbg !10183
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10184 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10189, metadata !DIExpression()), !dbg !10190
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10191
  %3 = load volatile i32, i32* %2, align 4, !dbg !10191
  %4 = and i32 %3, 768, !dbg !10191
  ret i32 %4, !dbg !10192
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10197
  %3 = load volatile i32, i32* %2, align 4, !dbg !10197
  %4 = and i32 %3, 4096, !dbg !10197
  ret i32 %4, !dbg !10198
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10201, metadata !DIExpression()), !dbg !10202
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10203
  %3 = load volatile i32, i32* %2, align 4, !dbg !10203
  %4 = and i32 %3, 12288, !dbg !10203
  ret i32 %4, !dbg !10204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10207, metadata !DIExpression()), !dbg !10208
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10209
  %3 = load volatile i32, i32* %2, align 4, !dbg !10209
  %4 = and i32 %3, 1536, !dbg !10209
  ret i32 %4, !dbg !10210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10215, metadata !DIExpression()), !dbg !10216
  %2 = icmp eq i32 %0, 2, !dbg !10217
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10217
  %4 = icmp eq i32 %0, 1, !dbg !10217
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10217
  ret i32 %5, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10223, metadata !DIExpression()), !dbg !10224
  %2 = icmp ult i32 %0, 3, !dbg !10225
  br i1 %2, label %3, label %6, !dbg !10225

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10225
  %5 = load i32, i32* %4, align 4, !dbg !10225
  br label %6, !dbg !10225

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10226
  ret i32 %7, !dbg !10228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10233, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 %1, metadata !10234, metadata !DIExpression()), !dbg !10235
  %3 = icmp eq i32 %0, 4, !dbg !10236
  %4 = icmp eq i32 %1, 0, !dbg !10236
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10236
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10236
  ret i32 %6, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10242, metadata !DIExpression()), !dbg !10243
  %2 = icmp eq i32 %0, 1, !dbg !10244
  %3 = select i1 %2, i32 768, i32 0, !dbg !10243
  ret i32 %3, !dbg !10246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10251, metadata !DIExpression()), !dbg !10252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10253
  %3 = load volatile i32, i32* %2, align 4, !dbg !10253
  %4 = and i32 %3, -8193, !dbg !10253
  store volatile i32 %4, i32* %2, align 4, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10259, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.value(metadata i32 %1, metadata !10260, metadata !DIExpression()), !dbg !10262
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10263
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10263
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10263
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10261, metadata !DIExpression()), !dbg !10262
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10264
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10264
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10265
  ret void, !dbg !10266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10269, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i32 %1, metadata !10270, metadata !DIExpression()), !dbg !10272
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10273
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10273
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10271, metadata !DIExpression()), !dbg !10272
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10274
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10274
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10279, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10280, metadata !DIExpression()), !dbg !10282
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10283
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10283
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10281, metadata !DIExpression()), !dbg !10282
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10284
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10284
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10285
  ret void, !dbg !10286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10289, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %1, metadata !10290, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10293
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10291, metadata !DIExpression()), !dbg !10292
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10294
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10294
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10297 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10299, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata i32 %1, metadata !10300, metadata !DIExpression()), !dbg !10304
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10305
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10305
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10305
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10301, metadata !DIExpression()), !dbg !10304
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10306
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10306
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10306
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10302, metadata !DIExpression()), !dbg !10304
  %10 = bitcast i32* %3 to i8*, !dbg !10307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10307
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10308
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10308
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10312
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10312
  %15 = load i8*, i8** %14, align 4, !dbg !10312
  call void @llvm.dbg.value(metadata i32* %3, metadata !10303, metadata !DIExpression(DW_OP_deref)), !dbg !10304
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10313
  %17 = icmp slt i32 %16, 0, !dbg !10314
  br i1 %17, label %18, label %21, !dbg !10315

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !10316
  %20 = zext i8 %19 to i32, !dbg !10316
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.135, i32 0, i32 0), i32 noundef %20) #25, !dbg !10316
  br label %31, !dbg !10322

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10323
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10323
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10324
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10325
  %25 = load i32, i32* %3, align 4, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %25, metadata !10303, metadata !DIExpression()), !dbg !10304
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10327
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10328
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10328
  %28 = load volatile i32, i32* %27, align 4, !dbg !10328
  %29 = icmp ugt i32 %28, 16, !dbg !10328
  br i1 %29, label %31, label %30, !dbg !10331

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef 190) #25, !dbg !10332
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.139, i32 0, i32 0)) #25, !dbg !10332
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef 190) #25, !dbg !10332
  unreachable, !dbg !10332

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10334
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10337, metadata !DIExpression()), !dbg !10338
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10339
  %3 = load volatile i32, i32* %2, align 4, !dbg !10339
  %4 = or i32 %3, 8192, !dbg !10339
  store volatile i32 %4, i32* %2, align 4, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10343, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i8* %1, metadata !10344, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.value(metadata i32* %2, metadata !10345, metadata !DIExpression()), !dbg !10347
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10348
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10348
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10346, metadata !DIExpression()), !dbg !10347
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10349
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10349
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10351
  br i1 %9, label %12, label %10, !dbg !10352

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10353
  br label %12, !dbg !10354

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10347
  ret i32 %13, !dbg !10355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef %0) unnamed_addr #4 !dbg !10356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = icmp eq i32 %0, 2, !dbg !10360
  %3 = select i1 %2, i8 87, i8 63, !dbg !10360
  %4 = icmp eq i32 %0, 1, !dbg !10360
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10360
  ret i8 %5, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10366, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i32 0, metadata !10367, metadata !DIExpression()), !dbg !10368
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10369
  %3 = load volatile i32, i32* %2, align 4, !dbg !10369
  %4 = and i32 %3, -32769, !dbg !10369
  store volatile i32 %4, i32* %2, align 4, !dbg !10369
  ret void, !dbg !10370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10375, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 %1, metadata !10376, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 0, metadata !10377, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.value(metadata i32 %2, metadata !10378, metadata !DIExpression()), !dbg !10379
  %4 = zext i32 %1 to i64, !dbg !10380
  %5 = mul nuw nsw i64 %4, 25, !dbg !10380
  %6 = zext i32 %2 to i64, !dbg !10380
  %7 = shl nuw nsw i64 %6, 2, !dbg !10380
  %8 = udiv i64 %5, %7, !dbg !10380
  %9 = trunc i64 %8 to i32, !dbg !10380
  %10 = udiv i32 %9, 100, !dbg !10380
  %11 = shl nuw nsw i32 %10, 4, !dbg !10380
  %12 = mul i32 %10, -100, !dbg !10380
  %13 = add i32 %12, %9, !dbg !10380
  %14 = shl i32 %13, 4, !dbg !10380
  %15 = add i32 %14, 50, !dbg !10380
  %16 = udiv i32 %15, 100, !dbg !10380
  %17 = and i32 %16, 240, !dbg !10380
  %18 = add nuw nsw i32 %17, %11, !dbg !10380
  %19 = and i32 %16, 15, !dbg !10380
  %20 = and i32 %18, 65520, !dbg !10383
  %21 = or i32 %20, %19, !dbg !10383
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10384
  store volatile i32 %21, i32* %22, align 4, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10387 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10389, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i32 %1, metadata !10390, metadata !DIExpression()), !dbg !10391
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10392
  %4 = load volatile i32, i32* %3, align 4, !dbg !10392
  %5 = and i32 %4, -769, !dbg !10392
  %6 = or i32 %5, %1, !dbg !10392
  store volatile i32 %6, i32* %3, align 4, !dbg !10392
  ret void, !dbg !10393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10396, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.value(metadata i32 %1, metadata !10397, metadata !DIExpression()), !dbg !10398
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10399
  %4 = load volatile i32, i32* %3, align 4, !dbg !10399
  %5 = and i32 %4, -4097, !dbg !10399
  %6 = or i32 %5, %1, !dbg !10399
  store volatile i32 %6, i32* %3, align 4, !dbg !10399
  ret void, !dbg !10400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10401 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10403, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10404, metadata !DIExpression()), !dbg !10405
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10406
  %4 = load volatile i32, i32* %3, align 4, !dbg !10406
  %5 = and i32 %4, -12289, !dbg !10406
  %6 = or i32 %5, %1, !dbg !10406
  store volatile i32 %6, i32* %3, align 4, !dbg !10406
  ret void, !dbg !10407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10408 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10410, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10412
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10413
  %4 = load volatile i32, i32* %3, align 4, !dbg !10413
  %5 = and i32 %4, -1537, !dbg !10413
  %6 = or i32 %5, %1, !dbg !10413
  store volatile i32 %6, i32* %3, align 4, !dbg !10413
  ret void, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10415 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10417, metadata !DIExpression()), !dbg !10418
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10419
  %3 = load volatile i32, i32* %2, align 4, !dbg !10419
  %4 = lshr i32 %3, 3, !dbg !10420
  %5 = and i32 %4, 1, !dbg !10420
  ret i32 %5, !dbg !10421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10422 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10424, metadata !DIExpression()), !dbg !10425
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10426
  %3 = load volatile i32, i32* %2, align 4, !dbg !10426
  %4 = and i32 %3, 1, !dbg !10426
  ret i32 %4, !dbg !10427
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10430, metadata !DIExpression()), !dbg !10431
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10432
  %3 = load volatile i32, i32* %2, align 4, !dbg !10432
  %4 = lshr i32 %3, 1, !dbg !10433
  %5 = and i32 %4, 1, !dbg !10433
  ret i32 %5, !dbg !10434
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10437, metadata !DIExpression()), !dbg !10438
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10439
  %3 = load volatile i32, i32* %2, align 4, !dbg !10439
  %4 = lshr i32 %3, 8, !dbg !10440
  %5 = and i32 %4, 1, !dbg !10440
  ret i32 %5, !dbg !10441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10442 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10446
  store volatile i32 -257, i32* %2, align 4, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10448 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10450, metadata !DIExpression()), !dbg !10452
  %3 = bitcast i32* %2 to i8*, !dbg !10453
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10453
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10451, metadata !DIExpression()), !dbg !10454
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10455
  %5 = load volatile i32, i32* %4, align 4, !dbg !10455
  store volatile i32 %5, i32* %2, align 4, !dbg !10456
  %6 = load volatile i32, i32* %2, align 4, !dbg !10457
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10458
  %8 = load volatile i32, i32* %7, align 4, !dbg !10458
  store volatile i32 %8, i32* %2, align 4, !dbg !10459
  %9 = load volatile i32, i32* %2, align 4, !dbg !10460
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10461
  ret void, !dbg !10461
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10462 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10464, metadata !DIExpression()), !dbg !10466
  %3 = bitcast i32* %2 to i8*, !dbg !10467
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10467
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10465, metadata !DIExpression()), !dbg !10468
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10469
  %5 = load volatile i32, i32* %4, align 4, !dbg !10469
  store volatile i32 %5, i32* %2, align 4, !dbg !10470
  %6 = load volatile i32, i32* %2, align 4, !dbg !10471
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10472
  %8 = load volatile i32, i32* %7, align 4, !dbg !10472
  store volatile i32 %8, i32* %2, align 4, !dbg !10473
  %9 = load volatile i32, i32* %2, align 4, !dbg !10474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10475
  ret void, !dbg !10475
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10476 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10478, metadata !DIExpression()), !dbg !10480
  %3 = bitcast i32* %2 to i8*, !dbg !10481
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10481
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10479, metadata !DIExpression()), !dbg !10482
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10483
  %5 = load volatile i32, i32* %4, align 4, !dbg !10483
  store volatile i32 %5, i32* %2, align 4, !dbg !10484
  %6 = load volatile i32, i32* %2, align 4, !dbg !10485
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10486
  %8 = load volatile i32, i32* %7, align 4, !dbg !10486
  store volatile i32 %8, i32* %2, align 4, !dbg !10487
  %9 = load volatile i32, i32* %2, align 4, !dbg !10488
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10489
  ret void, !dbg !10489
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10490 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10492, metadata !DIExpression()), !dbg !10494
  %3 = bitcast i32* %2 to i8*, !dbg !10495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10495
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10493, metadata !DIExpression()), !dbg !10496
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10497
  %5 = load volatile i32, i32* %4, align 4, !dbg !10497
  store volatile i32 %5, i32* %2, align 4, !dbg !10498
  %6 = load volatile i32, i32* %2, align 4, !dbg !10499
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10500
  %8 = load volatile i32, i32* %7, align 4, !dbg !10500
  store volatile i32 %8, i32* %2, align 4, !dbg !10501
  %9 = load volatile i32, i32* %2, align 4, !dbg !10502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10503
  ret void, !dbg !10503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10506, metadata !DIExpression()), !dbg !10507
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10508
  %3 = load volatile i32, i32* %2, align 4, !dbg !10508
  %4 = lshr i32 %3, 7, !dbg !10509
  %5 = and i32 %4, 1, !dbg !10509
  ret i32 %5, !dbg !10510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i8 %1, metadata !10516, metadata !DIExpression()), !dbg !10517
  %3 = zext i8 %1 to i32, !dbg !10518
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10519
  store volatile i32 %3, i32* %4, align 4, !dbg !10520
  ret void, !dbg !10521
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10524, metadata !DIExpression()), !dbg !10525
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10526
  %3 = load volatile i32, i32* %2, align 4, !dbg !10526
  %4 = lshr i32 %3, 5, !dbg !10527
  %5 = and i32 %4, 1, !dbg !10527
  ret i32 %5, !dbg !10528
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10533, metadata !DIExpression()), !dbg !10534
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10535
  %3 = load volatile i32, i32* %2, align 4, !dbg !10535
  %4 = trunc i32 %3 to i8, !dbg !10536
  ret i8 %4, !dbg !10537
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10540, metadata !DIExpression()), !dbg !10546
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10547
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10547
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10547
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10541, metadata !DIExpression()), !dbg !10546
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10548
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10548
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10548
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10542, metadata !DIExpression()), !dbg !10546
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10549
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10550
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10550
  %10 = tail call fastcc zeroext i1 @device_is_ready.146(%struct.device* noundef %9) #24, !dbg !10552
  br i1 %10, label %14, label %11, !dbg !10553

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !10554
  %13 = zext i8 %12 to i32, !dbg !10554
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.147, i32 0, i32 0), i32 noundef %13) #25, !dbg !10554
  br label %62, !dbg !10560

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10561
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10562
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10562
  %18 = load i8*, i8** %17, align 4, !dbg !10562
  %19 = tail call fastcc i32 @clock_control_on.148(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %19, metadata !10545, metadata !DIExpression()), !dbg !10546
  %20 = icmp eq i32 %19, 0, !dbg !10564
  br i1 %20, label %24, label %21, !dbg !10566

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 1) #24, !dbg !10567
  %23 = zext i8 %22 to i32, !dbg !10567
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.149, i32 0, i32 0), i32 noundef %23) #25, !dbg !10567
  br label %62, !dbg !10573

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10574
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10574
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %27, metadata !10545, metadata !DIExpression()), !dbg !10546
  %28 = icmp slt i32 %27, 0, !dbg !10576
  br i1 %28, label %62, label %29, !dbg !10578

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10579
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10579
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10580
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10581
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10582
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10583
  %34 = load i32, i32* %33, align 4, !dbg !10583
  %35 = icmp ult i32 %34, 3, !dbg !10585
  br i1 %35, label %39, label %36, !dbg !10585

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.134(i32 noundef 2) #24, !dbg !10586
  %38 = zext i8 %37 to i32, !dbg !10586
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.150, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10586
  call void @llvm.dbg.value(metadata i32 0, metadata !10543, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.value(metadata i32 0, metadata !10544, metadata !DIExpression()), !dbg !10546
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10585
  %41 = load i32, i32* %40, align 4, !dbg !10585
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !10585
  %43 = load i32, i32* %42, align 4, !dbg !10585
  br label %44, !dbg !10585

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10595
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10595
  call void @llvm.dbg.value(metadata i32 %46, metadata !10544, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.value(metadata i32 %45, metadata !10543, metadata !DIExpression()), !dbg !10546
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10596
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10597
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10598
  %49 = load i8, i8* %48, align 4, !dbg !10598, !range !6842
  %50 = icmp eq i8 %49, 0, !dbg !10598
  br i1 %50, label %52, label %51, !dbg !10600

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10601
  br label %52, !dbg !10603

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10604
  %54 = load i32, i32* %53, align 4, !dbg !10604
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10605
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10606
  %56 = load i8, i8* %55, align 4, !dbg !10606, !range !6842
  %57 = icmp eq i8 %56, 0, !dbg !10606
  br i1 %57, label %60, label %58, !dbg !10608

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10609
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10611
  br label %60, !dbg !10612

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10613
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10614
  br label %62, !dbg !10615

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10546
  ret i32 %63, !dbg !10616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10621, metadata !DIExpression()), !dbg !10625
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10626
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10626
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10626
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10622, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10623, metadata !DIExpression()), !dbg !10625
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10627
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10628
  ret void, !dbg !10629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.146(%struct.device* noundef %0) unnamed_addr #1 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10634, metadata !DIExpression()), !dbg !10635
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10636, !srcloc !10638
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.151(%struct.device* noundef %0) #24, !dbg !10639
  ret i1 %2, !dbg !10640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.148(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10641 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10643, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i8* %1, metadata !10644, metadata !DIExpression()), !dbg !10646
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10647
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10647
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10647
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10645, metadata !DIExpression()), !dbg !10646
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10648
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10648
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10649
  ret i32 %8, !dbg !10650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10651 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10655, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.value(metadata i8 0, metadata !10656, metadata !DIExpression()), !dbg !10659
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10660
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10660
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10658, metadata !DIExpression(DW_OP_deref)), !dbg !10659
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %4, metadata !10657, metadata !DIExpression()), !dbg !10659
  %5 = icmp slt i32 %4, 0, !dbg !10662
  br i1 %5, label %9, label %6, !dbg !10664

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10665
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10658, metadata !DIExpression()), !dbg !10659
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10666
  br label %9, !dbg !10667

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10668
  ret i32 %10, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10671, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i32 12, metadata !10672, metadata !DIExpression()), !dbg !10675
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10676

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10677, metadata !DIExpression()) #23, !dbg !10683
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10686, !srcloc !10687
  call void @llvm.dbg.value(metadata i32 %4, metadata !10682, metadata !DIExpression()) #23, !dbg !10683
  %5 = or i32 %4, 12, !dbg !10688
  call void @llvm.dbg.value(metadata i32 %5, metadata !10673, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 %5, metadata !10690, metadata !DIExpression()) #23, !dbg !10697
  call void @llvm.dbg.value(metadata i32* %2, metadata !10695, metadata !DIExpression()) #23, !dbg !10697
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10699, !srcloc !10700
  call void @llvm.dbg.value(metadata i32 %6, metadata !10696, metadata !DIExpression()) #23, !dbg !10697
  %7 = icmp eq i32 %6, 0, !dbg !10676
  br i1 %7, label %8, label %3, !dbg !10688, !llvm.loop !10701

8:                                                ; preds = %3
  ret void, !dbg !10702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10703 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10705, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %1, metadata !10706, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %2, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 0, metadata !10708, metadata !DIExpression()), !dbg !10709
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10710
  %5 = load volatile i32, i32* %4, align 4, !dbg !10710
  %6 = and i32 %5, -5633, !dbg !10710
  %7 = or i32 %2, %1, !dbg !10710
  %8 = or i32 %7, %6, !dbg !10710
  store volatile i32 %8, i32* %4, align 4, !dbg !10710
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10711
  %10 = load volatile i32, i32* %9, align 4, !dbg !10711
  %11 = and i32 %10, -12289, !dbg !10711
  store volatile i32 %11, i32* %9, align 4, !dbg !10711
  ret void, !dbg !10712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10713 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10715, metadata !DIExpression()), !dbg !10716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10717
  %3 = load volatile i32, i32* %2, align 4, !dbg !10717
  %4 = or i32 %3, 8, !dbg !10717
  store volatile i32 %4, i32* %2, align 4, !dbg !10717
  ret void, !dbg !10718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10719 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10723, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10724, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i32 0, metadata !10725, metadata !DIExpression()), !dbg !10726
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10727
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10727
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10728
  %5 = load i8, i8* %4, align 4, !dbg !10728
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10729
  ret i32 %6, !dbg !10730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.151(%struct.device* noundef %0) unnamed_addr #1 !dbg !10731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10733, metadata !DIExpression()), !dbg !10734
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10735
  ret i1 %2, !dbg !10736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10739, metadata !DIExpression()), !dbg !10740
  tail call fastcc void @__NVIC_SetPriority.153() #24, !dbg !10741
  store i32 8399, i32* @last_load, align 4, !dbg !10742
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10743
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10744
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10745
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10746
  %3 = or i32 %2, 7, !dbg !10746
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10746
  ret i32 0, !dbg !10747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.153() unnamed_addr #14 !dbg !10748 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10750, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.value(metadata i32 1, metadata !10751, metadata !DIExpression()), !dbg !10752
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10753
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10759, metadata !DIExpression()), !dbg !10761
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10762
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10763
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10764
  %5 = add i32 %4, %3, !dbg !10764
  store i32 %5, i32* @cycle_count, align 4, !dbg !10764
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10765
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10766
  %7 = sub i32 %5, %6, !dbg !10769
  %8 = udiv i32 %7, 8400, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %8, metadata !10760, metadata !DIExpression()), !dbg !10761
  %9 = mul nuw i32 %8, 8400, !dbg !10771
  %10 = add i32 %9, %6, !dbg !10772
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10772
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10773
  tail call void @z_arm_int_exit() #25, !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10776 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %1, metadata !10778, metadata !DIExpression()), !dbg !10782
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10783
  call void @llvm.dbg.value(metadata i32 %2, metadata !10779, metadata !DIExpression()), !dbg !10782
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %3, metadata !10780, metadata !DIExpression()), !dbg !10782
  %4 = and i32 %2, 65536, !dbg !10785
  %5 = icmp ne i32 %4, 0, !dbg !10785
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10787
  %8 = load i32, i32* @last_load, align 4, !dbg !10782
  br i1 %7, label %9, label %13, !dbg !10787

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10788
  %11 = add i32 %10, %8, !dbg !10788
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10788
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10790
  br label %13, !dbg !10791

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10792
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10793
  %16 = add i32 %14, %15, !dbg !10794
  ret i32 %16, !dbg !10795
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10800, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i1 %1, metadata !10801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10813
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10814
  br i1 %4, label %5, label %8, !dbg !10814

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10816
  %7 = and i32 %6, -2, !dbg !10816
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10816
  store i32 -16777216, i32* @last_load, align 4, !dbg !10818
  br label %60, !dbg !10819

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %9, metadata !10805, metadata !DIExpression()), !dbg !10813
  br i1 %3, label %18, label %10, !dbg !10821

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10821
  call void @llvm.dbg.value(metadata i32 undef, metadata !10800, metadata !DIExpression()), !dbg !10813
  %12 = icmp slt i32 %11, 1, !dbg !10822
  br i1 %12, label %18, label %13, !dbg !10822

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10822
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10822
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10822
  %17 = add nuw nsw i32 %16, 8399, !dbg !10822
  br label %18, !dbg !10822

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10800, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10823, metadata !DIExpression()) #23, !dbg !10830
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10832, !srcloc !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10839
  call void @llvm.dbg.value(metadata i32 undef, metadata !10836, metadata !DIExpression()) #23, !dbg !10839
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10830
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10840
  br i1 %21, label %23, label %22, !dbg !10843

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10844
  unreachable, !dbg !10844

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %24, metadata !10835, metadata !DIExpression()) #23, !dbg !10839
  call void @llvm.dbg.value(metadata i32 %24, metadata !10829, metadata !DIExpression()) #23, !dbg !10830
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10846
  call void @llvm.dbg.value(metadata i32 %24, metadata !10806, metadata !DIExpression()), !dbg !10813
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %25, metadata !10811, metadata !DIExpression()), !dbg !10813
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %26, metadata !10803, metadata !DIExpression()), !dbg !10813
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10849
  %28 = add i32 %27, %25, !dbg !10849
  store i32 %28, i32* @cycle_count, align 4, !dbg !10849
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10850
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10851
  %30 = sub i32 %28, %29, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %30, metadata !10812, metadata !DIExpression()), !dbg !10813
  %31 = icmp slt i32 %30, 0, !dbg !10853
  br i1 %31, label %41, label %32, !dbg !10855

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10802, metadata !DIExpression()), !dbg !10813
  %33 = add nuw i32 %19, %30, !dbg !10856
  %34 = urem i32 %33, 8400, !dbg !10858
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10813
  %35 = sub nuw nsw i32 %19, %34, !dbg !10859
  call void @llvm.dbg.value(metadata i32 %35, metadata !10802, metadata !DIExpression()), !dbg !10813
  %36 = icmp ugt i32 %35, 1024, !dbg !10860
  br i1 %36, label %37, label %39, !dbg !10860

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10802, metadata !DIExpression()), !dbg !10813
  %38 = icmp ugt i32 %35, 16766400, !dbg !10861
  br i1 %38, label %41, label %39, !dbg !10863

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10864
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %43, metadata !10804, metadata !DIExpression()), !dbg !10813
  %44 = add nsw i32 %42, -1, !dbg !10866
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10867
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10868
  %45 = icmp ult i32 %26, %43, !dbg !10869
  br i1 %45, label %46, label %51, !dbg !10871

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10872
  %48 = add i32 %26, %9, !dbg !10874
  %49 = sub i32 %48, %43, !dbg !10875
  %50 = add i32 %49, %47, !dbg !10872
  br label %55, !dbg !10876

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10877
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10879
  %54 = add i32 %52, %53, !dbg !10879
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10880
  store i32 %56, i32* @cycle_count, align 4, !dbg !10880
  call void @llvm.dbg.value(metadata i32 undef, metadata !10881, metadata !DIExpression()) #23, !dbg !10887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10886, metadata !DIExpression()) #23, !dbg !10887
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10889
  br i1 %57, label %59, label %58, !dbg !10892

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10893
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.159, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10893
  unreachable, !dbg !10893

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10881, metadata !DIExpression()) #23, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %24, metadata !10895, metadata !DIExpression()) #23, !dbg !10898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10900, !srcloc !10901
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10903 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10823, metadata !DIExpression()) #23, !dbg !10907
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10909, !srcloc !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10836, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10907
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10912
  br i1 %2, label %4, label %3, !dbg !10913

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10914
  unreachable, !dbg !10914

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10907
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10905, metadata !DIExpression()), !dbg !10916
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10917
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10918
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10916
  call void @llvm.dbg.value(metadata i32 undef, metadata !10881, metadata !DIExpression()) #23, !dbg !10920
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10886, metadata !DIExpression()) #23, !dbg !10920
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10922
  br i1 %8, label %10, label %9, !dbg !10923

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.159, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10924
  unreachable, !dbg !10924

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10925
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10916
  %12 = sub i32 %11, %7, !dbg !10926
  call void @llvm.dbg.value(metadata i32 %12, metadata !10906, metadata !DIExpression()), !dbg !10916
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %13, metadata !10835, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %13, metadata !10829, metadata !DIExpression()) #23, !dbg !10907
  call void @llvm.dbg.value(metadata i32 %13, metadata !10905, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 undef, metadata !10881, metadata !DIExpression()) #23, !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10895, metadata !DIExpression()) #23, !dbg !10927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10929, !srcloc !10901
  %14 = udiv i32 %12, 8400, !dbg !10930
  ret i32 %14, !dbg !10931
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10932 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10823, metadata !DIExpression()) #23, !dbg !10936
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10938, !srcloc !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 undef, metadata !10836, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10936
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10941
  br i1 %2, label %4, label %3, !dbg !10942

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.157, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 148) #25, !dbg !10943
  unreachable, !dbg !10943

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10835, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10936
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10944
  call void @llvm.dbg.value(metadata i32 undef, metadata !10934, metadata !DIExpression()), !dbg !10945
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10946
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10935, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10945
  call void @llvm.dbg.value(metadata i32 undef, metadata !10881, metadata !DIExpression()) #23, !dbg !10948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10886, metadata !DIExpression()) #23, !dbg !10948
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10950
  br i1 %7, label %9, label %8, !dbg !10951

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.159, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.156, i32 0, i32 0), i32 noundef 194) #25, !dbg !10952
  unreachable, !dbg !10952

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %10, metadata !10935, metadata !DIExpression()), !dbg !10945
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %11, metadata !10835, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %11, metadata !10829, metadata !DIExpression()) #23, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %11, metadata !10934, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 undef, metadata !10881, metadata !DIExpression()) #23, !dbg !10948
  call void @llvm.dbg.value(metadata i32 undef, metadata !10895, metadata !DIExpression()) #23, !dbg !10954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10956, !srcloc !10901
  ret i32 %10, !dbg !10957
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10958 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10959
  %2 = icmp eq i32 %1, -16777216, !dbg !10961
  br i1 %2, label %3, label %6, !dbg !10962

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10963
  %5 = or i32 %4, 1, !dbg !10963
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10963
  br label %6, !dbg !10965

6:                                                ; preds = %3, %0
  ret void, !dbg !10966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10967 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10968
  %2 = and i32 %1, -2, !dbg !10968
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10968
  ret void, !dbg !10969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10970 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10996, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata i8 %1, metadata !10997, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10998, metadata !DIExpression()), !dbg !10999
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11000
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11000
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10999
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11001
  %8 = load i8, i8* %6, align 4, !dbg !11002
  %9 = zext i8 %8 to i32, !dbg !11003
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11003
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11004
  br i1 %11, label %18, label %24, !dbg !11005

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10999
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11001
  %14 = load i8, i8* %6, align 4, !dbg !11002
  %15 = zext i8 %14 to i32, !dbg !11003
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11003
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11004
  br i1 %17, label %18, label %24, !dbg !11005, !llvm.loop !11006

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11008
  %21 = load i8, i8* %20, align 1, !dbg !11008
  %22 = icmp eq i8 %21, %1, !dbg !11011
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11012
  br i1 %22, label %24, label %12, !dbg !11013

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10999
  ret i32 %25, !dbg !11014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11026, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i8 %1, metadata !11027, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32 %2, metadata !11028, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32 0, metadata !11031, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32 0, metadata !11032, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i8 0, metadata !11033, metadata !DIExpression()), !dbg !11043
  %4 = icmp eq i8 %1, 0, !dbg !11044
  br i1 %4, label %35, label %5, !dbg !11045

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11044
  br label %9, !dbg !11045

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11033, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32 %29, metadata !11031, metadata !DIExpression()), !dbg !11042
  %8 = icmp eq i32 %34, %6, !dbg !11044
  br i1 %8, label %35, label %9, !dbg !11045, !llvm.loop !11046

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11033, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32 %11, metadata !11031, metadata !DIExpression()), !dbg !11042
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11048
  %13 = load i32, i32* %12, align 4, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %13, metadata !11030, metadata !DIExpression()), !dbg !11042
  %14 = and i32 %13, 31, !dbg !11049
  %15 = icmp ult i32 %14, 16, !dbg !11050
  br i1 %15, label %16, label %20, !dbg !11051

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11052
  %18 = load i32, i32* %17, align 4, !dbg !11052
  %19 = or i32 %18, 32, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %19, metadata !11031, metadata !DIExpression()), !dbg !11042
  br label %28, !dbg !11055

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11056

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11057
  %23 = load i32, i32* %22, align 4, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %23, metadata !11035, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11058
  %24 = lshr i32 %23, 7, !dbg !11059
  %25 = and i32 %24, 16, !dbg !11059
  %26 = or i32 %25, %23, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %26, metadata !11031, metadata !DIExpression()), !dbg !11042
  br label %28, !dbg !11060

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11042
  call void @llvm.dbg.value(metadata i32 %29, metadata !11031, metadata !DIExpression()), !dbg !11042
  %30 = lshr i32 %13, 5, !dbg !11061
  %31 = and i32 %30, 255, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %31, metadata !11029, metadata !DIExpression()), !dbg !11042
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %32, metadata !11032, metadata !DIExpression()), !dbg !11042
  %33 = icmp slt i32 %32, 0, !dbg !11063
  %34 = add nuw nsw i32 %10, 1, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %34, metadata !11033, metadata !DIExpression()), !dbg !11043
  br i1 %33, label %35, label %7, !dbg !11066

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11072, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 %1, metadata !11073, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 %2, metadata !11074, metadata !DIExpression()), !dbg !11076
  %4 = icmp ugt i32 %0, 175, !dbg !11077
  br i1 %4, label %16, label %5, !dbg !11079

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11080
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11081
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11081
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11075, metadata !DIExpression()), !dbg !11076
  %9 = add nsw i32 %6, -8, !dbg !11082
  %10 = icmp ult i32 %9, 3, !dbg !11082
  br i1 %10, label %16, label %11, !dbg !11084

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.164(%struct.device* noundef %8) #24, !dbg !11085
  br i1 %12, label %13, label %16, !dbg !11086

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11087
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11088
  br label %16, !dbg !11089

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11076
  ret i32 %17, !dbg !11090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.164(%struct.device* noundef %0) unnamed_addr #1 !dbg !11091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11095, metadata !DIExpression()), !dbg !11096
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11097, !srcloc !11099
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.165(%struct.device* noundef %0) #24, !dbg !11100
  ret i1 %2, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.165(%struct.device* noundef %0) unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11104, metadata !DIExpression()), !dbg !11105
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11106
  ret i1 %2, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11108 {
  ret void, !dbg !11109
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11110 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11112, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 0, metadata !11113, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 2, metadata !11114, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 0, metadata !11115, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 2, metadata !11116, metadata !DIExpression()), !dbg !11117
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11118
  %2 = and i32 %1, 12, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %2, metadata !11112, metadata !DIExpression()), !dbg !11117
  %3 = icmp eq i32 %2, 8, !dbg !11120
  br i1 %3, label %4, label %18, !dbg !11120

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %5, metadata !11115, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11117
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11123
  %7 = and i32 %6, 63, !dbg !11124
  call void @llvm.dbg.value(metadata i32 %7, metadata !11116, metadata !DIExpression()), !dbg !11117
  %8 = udiv i32 16000000, %7, !dbg !11125
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11125
  %10 = lshr i32 %9, 6, !dbg !11125
  %11 = and i32 %10, 511, !dbg !11125
  %12 = mul i32 %11, %8, !dbg !11125
  call void @llvm.dbg.value(metadata i32 %12, metadata !11113, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %12, metadata !11113, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %12, metadata !11113, metadata !DIExpression()), !dbg !11117
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11127
  %14 = lshr i32 %13, 15, !dbg !11128
  %15 = and i32 %14, 6, !dbg !11128
  %16 = add nuw nsw i32 %15, 2, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %16, metadata !11114, metadata !DIExpression()), !dbg !11117
  %17 = udiv i32 %12, %16, !dbg !11129
  br label %18, !dbg !11130

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11131
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11132
  %21 = lshr i32 %20, 4, !dbg !11133
  %22 = and i32 %21, 15, !dbg !11133
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11134
  %24 = load i8, i8* %23, align 1, !dbg !11134
  %25 = zext i8 %24 to i32, !dbg !11134
  call void @llvm.dbg.value(metadata i32 %25, metadata !11112, metadata !DIExpression()), !dbg !11117
  %26 = lshr i32 %19, %25, !dbg !11135
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11135
  ret void, !dbg !11136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11137 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11179, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11180, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11181, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11182, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11183, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11184, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11185, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11186, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 0, metadata !11188, metadata !DIExpression()), !dbg !11193
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11194
  %4 = load i32, i32* %3, align 4, !dbg !11194
  %5 = and i32 %4, 1, !dbg !11196
  %6 = icmp eq i32 %5, 0, !dbg !11197
  br i1 %6, label %17, label %7, !dbg !11198

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11199
  %9 = and i32 %8, -100663297, !dbg !11199
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11199
  %11 = load i32, i32* %10, align 4, !dbg !11199
  %12 = or i32 %9, %11, !dbg !11199
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11199
  %13 = load i32, i32* %10, align 4, !dbg !11201
  %14 = icmp eq i32 %13, 0, !dbg !11203
  %15 = zext i1 %14 to i32, !dbg !11204
  %16 = load i32, i32* %3, align 4, !dbg !11205
  br label %17, !dbg !11204

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !11205
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !11193
  call void @llvm.dbg.value(metadata i32 %19, metadata !11187, metadata !DIExpression()), !dbg !11193
  %20 = and i32 %18, 2, !dbg !11207
  %21 = icmp eq i32 %20, 0, !dbg !11208
  br i1 %21, label %32, label %22, !dbg !11209

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11210
  %24 = and i32 %23, -402653185, !dbg !11210
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11210
  %26 = load i32, i32* %25, align 4, !dbg !11210
  %27 = or i32 %24, %26, !dbg !11210
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11210
  %28 = load i32, i32* %25, align 4, !dbg !11212
  %29 = icmp eq i32 %28, 0, !dbg !11214
  %30 = select i1 %29, i32 1, i32 %19, !dbg !11215
  %31 = load i32, i32* %3, align 4, !dbg !11216
  br label %32, !dbg !11215

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !11216
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !11193
  call void @llvm.dbg.value(metadata i32 %34, metadata !11187, metadata !DIExpression()), !dbg !11193
  %35 = and i32 %33, 4, !dbg !11218
  %36 = icmp eq i32 %35, 0, !dbg !11219
  br i1 %36, label %49, label %37, !dbg !11220

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11221
  %39 = and i32 %38, -3145729, !dbg !11221
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11221
  %41 = load i32, i32* %40, align 4, !dbg !11221
  %42 = or i32 %39, %41, !dbg !11221
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11221
  %43 = load i32, i32* %40, align 4, !dbg !11223
  %44 = icmp eq i32 %43, 1048576, !dbg !11225
  %45 = select i1 %44, i32 1, i32 %34, !dbg !11226
  call void @llvm.dbg.value(metadata i32 %45, metadata !11187, metadata !DIExpression()), !dbg !11193
  %46 = icmp eq i32 %43, 0, !dbg !11227
  %47 = zext i1 %46 to i32, !dbg !11229
  %48 = load i32, i32* %3, align 4, !dbg !11230
  br label %49, !dbg !11229

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !11230
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !11193
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !11193
  call void @llvm.dbg.value(metadata i32 %52, metadata !11188, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 %51, metadata !11187, metadata !DIExpression()), !dbg !11193
  %53 = and i32 %50, 8, !dbg !11232
  %54 = icmp eq i32 %53, 0, !dbg !11233
  br i1 %54, label %67, label %55, !dbg !11234

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11235
  %57 = and i32 %56, -12582913, !dbg !11235
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11235
  %59 = load i32, i32* %58, align 4, !dbg !11235
  %60 = or i32 %57, %59, !dbg !11235
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11235
  %61 = load i32, i32* %58, align 4, !dbg !11237
  %62 = icmp eq i32 %61, 4194304, !dbg !11239
  %63 = select i1 %62, i32 1, i32 %51, !dbg !11240
  call void @llvm.dbg.value(metadata i32 %63, metadata !11187, metadata !DIExpression()), !dbg !11193
  %64 = icmp eq i32 %61, 0, !dbg !11241
  %65 = select i1 %64, i32 1, i32 %52, !dbg !11243
  %66 = load i32, i32* %3, align 4, !dbg !11244
  br label %67, !dbg !11243

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !11244
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !11193
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !11193
  call void @llvm.dbg.value(metadata i32 %70, metadata !11188, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 %69, metadata !11187, metadata !DIExpression()), !dbg !11193
  %71 = and i32 %68, 32, !dbg !11245
  %72 = icmp eq i32 %71, 0, !dbg !11246
  br i1 %72, label %131, label %73, !dbg !11247

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !11248
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !11248
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11189, metadata !DIExpression()), !dbg !11248
  store volatile i32 0, i32* %2, align 4, !dbg !11248
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11248
  %76 = or i32 %75, 268435456, !dbg !11248
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11248
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11248
  %78 = and i32 %77, 268435456, !dbg !11248
  store volatile i32 %78, i32* %2, align 4, !dbg !11248
  %79 = load volatile i32, i32* %2, align 4, !dbg !11248
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !11249
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11250
  %81 = or i32 %80, 256, !dbg !11250
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11250
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %82, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %83, !dbg !11252

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11253
  %85 = and i32 %84, 256, !dbg !11254
  %86 = icmp eq i32 %85, 0, !dbg !11255
  br i1 %86, label %87, label %91, !dbg !11252

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !11256
  %89 = sub i32 %88, %82, !dbg !11259
  %90 = icmp ugt i32 %89, 2, !dbg !11260
  br i1 %90, label %439, label %83, !dbg !11261, !llvm.loop !11262

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11264
  %93 = and i32 %92, 768, !dbg !11265
  call void @llvm.dbg.value(metadata i32 %93, metadata !11181, metadata !DIExpression()), !dbg !11193
  %94 = icmp eq i32 %93, 0, !dbg !11266
  br i1 %94, label %116, label %95, !dbg !11268

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11269
  %97 = load i32, i32* %96, align 4, !dbg !11269
  %98 = and i32 %97, 768, !dbg !11270
  %99 = icmp eq i32 %93, %98, !dbg !11271
  br i1 %99, label %116, label %100, !dbg !11272

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11273
  %102 = and i32 %101, -769, !dbg !11275
  call void @llvm.dbg.value(metadata i32 %102, metadata !11181, metadata !DIExpression()), !dbg !11193
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11276
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11277
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11278
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11279
  %104 = and i32 %103, 1, !dbg !11279
  %105 = icmp eq i32 %104, 0, !dbg !11279
  br i1 %105, label %116, label %106, !dbg !11281

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !11282
  call void @llvm.dbg.value(metadata i32 %107, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %108, !dbg !11284

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11285
  %110 = and i32 %109, 2, !dbg !11286
  %111 = icmp eq i32 %110, 0, !dbg !11286
  br i1 %111, label %112, label %116, !dbg !11284

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !11287
  %114 = sub i32 %113, %107, !dbg !11290
  %115 = icmp ugt i32 %114, 5000, !dbg !11291
  br i1 %115, label %439, label %108, !dbg !11292, !llvm.loop !11293

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11295
  %118 = load i32, i32* %117, align 4, !dbg !11295
  %119 = and i32 %118, 768, !dbg !11295
  %120 = icmp eq i32 %119, 768, !dbg !11295
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11295
  %122 = and i32 %121, -2031617, !dbg !11295
  %123 = and i32 %118, 268434687, !dbg !11295
  %124 = select i1 %120, i32 %123, i32 0, !dbg !11295
  %125 = or i32 %122, %124, !dbg !11295
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11295
  %126 = load i32, i32* %117, align 4, !dbg !11295
  %127 = and i32 %126, 4095, !dbg !11295
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11295
  %129 = or i32 %128, %127, !dbg !11295
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11295
  %130 = load i32, i32* %3, align 4, !dbg !11297
  br label %131, !dbg !11299

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11297
  %133 = and i32 %132, 16, !dbg !11300
  %134 = icmp eq i32 %133, 0, !dbg !11301
  br i1 %134, label %140, label %135, !dbg !11302

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11303
  %137 = load i8, i8* %136, align 4, !dbg !11303
  %138 = zext i8 %137 to i32, !dbg !11303
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11303
  %139 = load i32, i32* %3, align 4, !dbg !11305
  br label %140, !dbg !11307

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11305
  %142 = and i32 %141, 128, !dbg !11308
  %143 = icmp eq i32 %142, 0, !dbg !11309
  br i1 %143, label %151, label %144, !dbg !11310

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11311
  %146 = and i32 %145, -12582913, !dbg !11311
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11311
  %148 = load i32, i32* %147, align 4, !dbg !11311
  %149 = or i32 %146, %148, !dbg !11311
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11311
  %150 = load i32, i32* %3, align 4, !dbg !11313
  br label %151, !dbg !11315

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11313
  %153 = and i32 %152, 64, !dbg !11316
  %154 = icmp eq i32 %153, 0, !dbg !11317
  br i1 %154, label %162, label %155, !dbg !11318

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11319
  %157 = and i32 %156, -67108865, !dbg !11319
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11319
  %159 = load i32, i32* %158, align 4, !dbg !11319
  %160 = or i32 %157, %159, !dbg !11319
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11319
  %161 = load i32, i32* %3, align 4, !dbg !11321
  br label %162, !dbg !11323

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11321
  %164 = and i32 %163, 256, !dbg !11324
  %165 = icmp eq i32 %164, 0, !dbg !11325
  br i1 %165, label %176, label %166, !dbg !11326

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11327
  %168 = and i32 %167, -134217729, !dbg !11327
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11327
  %170 = load i32, i32* %169, align 4, !dbg !11327
  %171 = or i32 %168, %170, !dbg !11327
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11327
  %172 = load i32, i32* %169, align 4, !dbg !11329
  %173 = icmp eq i32 %172, 134217728, !dbg !11331
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11332
  %175 = load i32, i32* %3, align 4, !dbg !11333
  br label %176, !dbg !11332

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11333
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !11193
  call void @llvm.dbg.value(metadata i32 %178, metadata !11188, metadata !DIExpression()), !dbg !11193
  %179 = and i32 %177, 512, !dbg !11335
  %180 = icmp eq i32 %179, 0, !dbg !11336
  br i1 %180, label %188, label %181, !dbg !11337

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11338
  %183 = and i32 %182, -268435457, !dbg !11338
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11338
  %185 = load i32, i32* %184, align 4, !dbg !11338
  %186 = or i32 %183, %185, !dbg !11338
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11338
  %187 = load i32, i32* %3, align 4, !dbg !11340
  br label %188, !dbg !11342

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11340
  %190 = and i32 %189, 1024, !dbg !11343
  %191 = icmp eq i32 %190, 0, !dbg !11344
  br i1 %191, label %204, label %192, !dbg !11345

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11346
  %194 = and i32 %193, -536870913, !dbg !11346
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11346
  %196 = load i32, i32* %195, align 4, !dbg !11346
  %197 = or i32 %194, %196, !dbg !11346
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11346
  %198 = load i32, i32* %195, align 4, !dbg !11348
  %199 = icmp eq i32 %198, 536870912, !dbg !11350
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %69, metadata !11187, metadata !DIExpression()), !dbg !11193
  br i1 %201, label %209, label %202, !dbg !11351

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11352
  br label %206, !dbg !11351

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !11187, metadata !DIExpression()), !dbg !11193
  %205 = icmp eq i32 %69, 1, !dbg !11354
  br i1 %205, label %209, label %206, !dbg !11355

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11352
  %208 = icmp eq i32 %207, 2048, !dbg !11356
  br i1 %208, label %209, label %356, !dbg !11357

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11358
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %210, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %211, !dbg !11361

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11362
  %213 = and i32 %212, 134217728, !dbg !11362
  %214 = icmp eq i32 %213, 0, !dbg !11362
  br i1 %214, label %219, label %215, !dbg !11361

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !11363
  %217 = sub i32 %216, %210, !dbg !11366
  %218 = icmp ugt i32 %217, 2, !dbg !11367
  br i1 %218, label %439, label %211, !dbg !11368, !llvm.loop !11369

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11371
  %221 = and i32 %220, 1, !dbg !11373
  %222 = icmp eq i32 %221, 0, !dbg !11374
  br i1 %222, label %227, label %223, !dbg !11375

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11376
  %225 = load i32, i32* %224, align 4, !dbg !11376
  %226 = icmp eq i32 %225, 0, !dbg !11377
  br i1 %226, label %234, label %227, !dbg !11378

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11379
  %229 = icmp eq i32 %228, 0, !dbg !11380
  br i1 %229, label %252, label %230, !dbg !11381

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11382
  %232 = load i32, i32* %231, align 4, !dbg !11382
  %233 = icmp eq i32 %232, 0, !dbg !11383
  br i1 %233, label %234, label %252, !dbg !11384

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11385
  %236 = and i32 %235, 196608, !dbg !11387
  call void @llvm.dbg.value(metadata i32 %236, metadata !11182, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11193
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11388
  %238 = and i32 %237, 251658240, !dbg !11389
  call void @llvm.dbg.value(metadata i32 %238, metadata !11183, metadata !DIExpression()), !dbg !11193
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11390
  %240 = load i32, i32* %239, align 4, !dbg !11390
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11390
  %242 = load i32, i32* %241, align 4, !dbg !11390
  %243 = shl i32 %242, 6, !dbg !11390
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11390
  %245 = load i32, i32* %244, align 4, !dbg !11390
  %246 = shl i32 %245, 28, !dbg !11390
  %247 = or i32 %240, %236, !dbg !11390
  %248 = or i32 %247, %238, !dbg !11390
  %249 = or i32 %248, %243, !dbg !11390
  %250 = or i32 %249, %246, !dbg !11390
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11390
  %251 = load i32, i32* %3, align 4, !dbg !11391
  br label %252, !dbg !11393

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11391
  %254 = and i32 %253, 4, !dbg !11394
  %255 = icmp eq i32 %254, 0, !dbg !11395
  br i1 %255, label %260, label %256, !dbg !11396

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11397
  %258 = load i32, i32* %257, align 4, !dbg !11397
  %259 = icmp eq i32 %258, 1048576, !dbg !11398
  br i1 %259, label %267, label %260, !dbg !11399

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11400
  %262 = icmp eq i32 %261, 0, !dbg !11401
  br i1 %262, label %291, label %263, !dbg !11402

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11403
  %265 = load i32, i32* %264, align 4, !dbg !11403
  %266 = icmp eq i32 %265, 4194304, !dbg !11404
  br i1 %266, label %267, label %291, !dbg !11405

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11406
  %269 = and i32 %268, 196608, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %269, metadata !11182, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11193
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11409
  %271 = and i32 %270, 1879048192, !dbg !11410
  call void @llvm.dbg.value(metadata i32 %271, metadata !11184, metadata !DIExpression()), !dbg !11193
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11411
  %273 = load i32, i32* %272, align 4, !dbg !11411
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11411
  %275 = load i32, i32* %274, align 4, !dbg !11411
  %276 = shl i32 %275, 6, !dbg !11411
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11411
  %278 = load i32, i32* %277, align 4, !dbg !11411
  %279 = shl i32 %278, 24, !dbg !11411
  %280 = or i32 %273, %269, !dbg !11411
  %281 = or i32 %280, %271, !dbg !11411
  %282 = or i32 %281, %276, !dbg !11411
  %283 = or i32 %282, %279, !dbg !11411
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11411
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11412
  %285 = and i32 %284, -32, !dbg !11412
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11412
  %287 = load i32, i32* %286, align 4, !dbg !11412
  %288 = add i32 %287, -1, !dbg !11412
  %289 = or i32 %288, %285, !dbg !11412
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11412
  %290 = load i32, i32* %3, align 4, !dbg !11413
  br label %291, !dbg !11415

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11413
  %293 = and i32 %292, 1024, !dbg !11416
  %294 = icmp eq i32 %293, 0, !dbg !11417
  br i1 %294, label %321, label %295, !dbg !11418

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11419
  %297 = load i32, i32* %296, align 4, !dbg !11419
  %298 = icmp eq i32 %297, 536870912, !dbg !11420
  br i1 %298, label %299, label %321, !dbg !11421

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11422
  call void @llvm.dbg.value(metadata i32 %300, metadata !11183, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11193
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11424
  %302 = and i32 %301, 1879048192, !dbg !11425
  call void @llvm.dbg.value(metadata i32 %302, metadata !11184, metadata !DIExpression()), !dbg !11193
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11426
  %304 = load i32, i32* %303, align 4, !dbg !11426
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11426
  %306 = load i32, i32* %305, align 4, !dbg !11426
  %307 = shl i32 %306, 6, !dbg !11426
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11426
  %309 = load i32, i32* %308, align 4, !dbg !11426
  %310 = shl i32 %309, 15, !dbg !11426
  %311 = add i32 %310, -65536, !dbg !11426
  %312 = and i32 %311, -65536, !dbg !11426
  %313 = shl i32 %300, 9, !dbg !11426
  %314 = and i32 %313, 100663296, !dbg !11426
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11426
  %316 = or i32 %302, %304, !dbg !11426
  %317 = or i32 %316, %315, !dbg !11426
  %318 = or i32 %317, %307, !dbg !11426
  %319 = or i32 %318, %312, !dbg !11426
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11426
  %320 = load i32, i32* %3, align 4, !dbg !11427
  br label %321, !dbg !11429

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11427
  %323 = and i32 %322, 2048, !dbg !11430
  %324 = icmp eq i32 %323, 0, !dbg !11431
  br i1 %324, label %346, label %325, !dbg !11432

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11433
  %327 = load i32, i32* %326, align 4, !dbg !11433
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11433
  %329 = load i32, i32* %328, align 4, !dbg !11433
  %330 = shl i32 %329, 6, !dbg !11433
  %331 = or i32 %330, %327, !dbg !11433
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11433
  %333 = load i32, i32* %332, align 4, !dbg !11433
  %334 = shl i32 %333, 15, !dbg !11433
  %335 = add i32 %334, -65536, !dbg !11433
  %336 = and i32 %335, -65536, !dbg !11433
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11433
  %338 = load i32, i32* %337, align 4, !dbg !11433
  %339 = shl i32 %338, 24, !dbg !11433
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11433
  %341 = load i32, i32* %340, align 4, !dbg !11433
  %342 = shl i32 %341, 28, !dbg !11433
  %343 = or i32 %331, %339, !dbg !11433
  %344 = or i32 %343, %336, !dbg !11433
  %345 = or i32 %344, %342, !dbg !11433
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11433
  br label %346, !dbg !11435

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11436
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !11437
  call void @llvm.dbg.value(metadata i32 %347, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %348, !dbg !11438

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11439
  %350 = and i32 %349, 134217728, !dbg !11440
  %351 = icmp eq i32 %350, 0, !dbg !11440
  br i1 %351, label %352, label %356, !dbg !11438

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !11441
  %354 = sub i32 %353, %347, !dbg !11444
  %355 = icmp ugt i32 %354, 2, !dbg !11445
  br i1 %355, label %439, label %348, !dbg !11446, !llvm.loop !11447

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11449
  br i1 %357, label %358, label %439, !dbg !11451

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11452
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !11454
  call void @llvm.dbg.value(metadata i32 %359, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %360, !dbg !11455

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11456
  %362 = and i32 %361, 536870912, !dbg !11456
  %363 = icmp eq i32 %362, 0, !dbg !11456
  br i1 %363, label %368, label %364, !dbg !11455

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !11457
  %366 = sub i32 %365, %359, !dbg !11460
  %367 = icmp ugt i32 %366, 2, !dbg !11461
  br i1 %367, label %439, label %360, !dbg !11462, !llvm.loop !11463

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11465
  %370 = and i32 %369, 4, !dbg !11467
  %371 = icmp eq i32 %370, 0, !dbg !11468
  br i1 %371, label %376, label %372, !dbg !11469

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11470
  %374 = load i32, i32* %373, align 4, !dbg !11470
  %375 = icmp eq i32 %374, 0, !dbg !11471
  br i1 %375, label %383, label %376, !dbg !11472

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11473
  %378 = icmp eq i32 %377, 0, !dbg !11474
  br i1 %378, label %405, label %379, !dbg !11475

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11476
  %381 = load i32, i32* %380, align 4, !dbg !11476
  %382 = icmp eq i32 %381, 0, !dbg !11477
  br i1 %382, label %383, label %405, !dbg !11478

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11479
  %385 = and i32 %384, 196608, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %385, metadata !11185, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11193
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11482
  %387 = load i32, i32* %386, align 4, !dbg !11482
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11482
  %389 = load i32, i32* %388, align 4, !dbg !11482
  %390 = shl i32 %389, 6, !dbg !11482
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11482
  %392 = load i32, i32* %391, align 4, !dbg !11482
  %393 = shl i32 %392, 24, !dbg !11482
  %394 = or i32 %385, %387, !dbg !11482
  %395 = or i32 %394, %390, !dbg !11482
  %396 = or i32 %395, %393, !dbg !11482
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11482
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11483
  %398 = and i32 %397, -7937, !dbg !11483
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11483
  %400 = load i32, i32* %399, align 4, !dbg !11483
  %401 = shl i32 %400, 8, !dbg !11483
  %402 = add i32 %401, -256, !dbg !11483
  %403 = or i32 %402, %398, !dbg !11483
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11483
  %404 = load i32, i32* %3, align 4, !dbg !11484
  br label %405, !dbg !11486

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11484
  %407 = and i32 %406, 256, !dbg !11487
  %408 = icmp eq i32 %407, 0, !dbg !11488
  br i1 %408, label %429, label %409, !dbg !11489

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11490
  %411 = load i32, i32* %410, align 4, !dbg !11490
  %412 = icmp eq i32 %411, 134217728, !dbg !11491
  br i1 %412, label %413, label %429, !dbg !11492

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11493
  %415 = and i32 %414, 251658240, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %415, metadata !11186, metadata !DIExpression()), !dbg !11193
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11496
  %417 = load i32, i32* %416, align 4, !dbg !11496
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11496
  %419 = load i32, i32* %418, align 4, !dbg !11496
  %420 = shl i32 %419, 6, !dbg !11496
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11496
  %422 = load i32, i32* %421, align 4, !dbg !11496
  %423 = shl i32 %422, 15, !dbg !11496
  %424 = add i32 %423, -65536, !dbg !11496
  %425 = and i32 %424, -65536, !dbg !11496
  %426 = or i32 %415, %417, !dbg !11496
  %427 = or i32 %426, %420, !dbg !11496
  %428 = or i32 %427, %425, !dbg !11496
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11496
  br label %429, !dbg !11497

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11498
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !11499
  call void @llvm.dbg.value(metadata i32 %430, metadata !11180, metadata !DIExpression()), !dbg !11193
  br label %431, !dbg !11500

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11501
  %433 = and i32 %432, 536870912, !dbg !11502
  %434 = icmp eq i32 %433, 0, !dbg !11502
  br i1 %434, label %435, label %439, !dbg !11500

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !11503
  %437 = sub i32 %436, %430, !dbg !11506
  %438 = icmp ugt i32 %437, 2, !dbg !11507
  br i1 %438, label %439, label %431, !dbg !11508, !llvm.loop !11509

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !11193
  ret i32 %440, !dbg !11511
}

; Function Attrs: optsize
declare !dbg !11512 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !11514 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11518, metadata !DIExpression()), !dbg !11520
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11521
  store i32 2047, i32* %2, align 4, !dbg !11522
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11523
  %4 = and i32 %3, 63, !dbg !11524
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11525
  store i32 %4, i32* %5, align 4, !dbg !11526
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11527
  %7 = lshr i32 %6, 6, !dbg !11528
  %8 = and i32 %7, 511, !dbg !11528
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11529
  store i32 %8, i32* %9, align 4, !dbg !11530
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11531
  %11 = lshr i32 %10, 15, !dbg !11532
  %12 = and i32 %11, 6, !dbg !11532
  %13 = add nuw nsw i32 %12, 2, !dbg !11532
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11533
  store i32 %13, i32* %14, align 4, !dbg !11534
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11535
  %16 = lshr i32 %15, 24, !dbg !11536
  %17 = and i32 %16, 15, !dbg !11536
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11537
  store i32 %17, i32* %18, align 4, !dbg !11538
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11539
  %20 = lshr i32 %19, 28, !dbg !11540
  %21 = and i32 %20, 7, !dbg !11540
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11541
  store i32 %21, i32* %22, align 4, !dbg !11542
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11543
  %24 = and i32 %23, 63, !dbg !11544
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11545
  store i32 %24, i32* %25, align 4, !dbg !11546
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11547
  %27 = lshr i32 %26, 6, !dbg !11548
  %28 = and i32 %27, 511, !dbg !11548
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11549
  store i32 %28, i32* %29, align 4, !dbg !11550
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11551
  %31 = lshr i32 %30, 15, !dbg !11552
  %32 = and i32 %31, 6, !dbg !11552
  %33 = add nuw nsw i32 %32, 2, !dbg !11552
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11553
  store i32 %33, i32* %34, align 4, !dbg !11554
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11555
  %36 = lshr i32 %35, 24, !dbg !11556
  %37 = and i32 %36, 15, !dbg !11556
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11557
  store i32 %37, i32* %38, align 4, !dbg !11558
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11559
  %40 = and i32 %39, 31, !dbg !11560
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11561
  store i32 %40, i32* %41, align 4, !dbg !11562
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11563
  %43 = lshr i32 %42, 8, !dbg !11564
  %44 = and i32 %43, 31, !dbg !11564
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11565
  store i32 %44, i32* %45, align 4, !dbg !11566
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11567
  %47 = and i32 %46, 3145728, !dbg !11567
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11568
  store i32 %47, i32* %48, align 4, !dbg !11569
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11570
  %50 = and i32 %49, 12582912, !dbg !11570
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11571
  store i32 %50, i32* %51, align 4, !dbg !11572
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11573
  %53 = and i32 %52, 100663296, !dbg !11573
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11574
  store i32 %53, i32* %54, align 4, !dbg !11575
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11576
  %56 = and i32 %55, 402653184, !dbg !11576
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11577
  store i32 %56, i32* %57, align 4, !dbg !11578
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11579
  %59 = and i32 %58, 2031616, !dbg !11580
  call void @llvm.dbg.value(metadata i32 %59, metadata !11519, metadata !DIExpression()), !dbg !11520
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11581
  %61 = and i32 %60, 768, !dbg !11582
  %62 = or i32 %61, %59, !dbg !11583
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11584
  store i32 %62, i32* %63, align 4, !dbg !11585
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11586
  %65 = and i32 %64, 67108864, !dbg !11586
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11587
  store i32 %65, i32* %66, align 4, !dbg !11588
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11589
  %68 = and i32 %67, 12582912, !dbg !11589
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11590
  store i32 %68, i32* %69, align 4, !dbg !11591
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11592
  %71 = and i32 %70, 134217728, !dbg !11592
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11593
  store i32 %71, i32* %72, align 4, !dbg !11594
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11595
  %74 = and i32 %73, 268435456, !dbg !11595
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11596
  store i32 %74, i32* %75, align 4, !dbg !11597
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11598
  %77 = and i32 %76, 536870912, !dbg !11598
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11599
  store i32 %77, i32* %78, align 4, !dbg !11600
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11601
  %80 = lshr i32 %79, 24, !dbg !11603
  %81 = trunc i32 %80 to i8, !dbg !11603
  %82 = and i8 %81, 1, !dbg !11603
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11604
  store i8 %82, i8* %83, align 4, !dbg !11606
  ret void, !dbg !11607
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #15 !dbg !11608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11610, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11611, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11612, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11614, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11615, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 0, metadata !11616, metadata !DIExpression()), !dbg !11617
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11618

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %3, metadata !11614, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 %3, metadata !11614, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11617
  %4 = lshr i32 %3, 20, !dbg !11622
  %5 = and i32 %4, 15, !dbg !11622
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11622

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11623
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11627
  %9 = and i32 %8, 63, !dbg !11627
  %10 = udiv i32 16000000, %9, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %10, metadata !11613, metadata !DIExpression()), !dbg !11617
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11628
  %12 = lshr i32 %11, 24, !dbg !11629
  %13 = and i32 %12, 15, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %13, metadata !11611, metadata !DIExpression()), !dbg !11617
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11630
  %15 = lshr i32 %14, 6, !dbg !11631
  %16 = and i32 %15, 511, !dbg !11631
  %17 = mul i32 %16, %10, !dbg !11632
  %18 = udiv i32 %17, %13, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %18, metadata !11612, metadata !DIExpression()), !dbg !11617
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11634
  %20 = lshr i32 %19, 8, !dbg !11635
  %21 = and i32 %20, 31, !dbg !11635
  %22 = add nuw nsw i32 %21, 1, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %22, metadata !11611, metadata !DIExpression()), !dbg !11617
  %23 = udiv i32 %18, %22, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %23, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11638

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11639
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11642
  %27 = and i32 %26, 63, !dbg !11642
  %28 = udiv i32 16000000, %27, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %28, metadata !11613, metadata !DIExpression()), !dbg !11617
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11643
  %30 = lshr i32 %29, 24, !dbg !11644
  %31 = and i32 %30, 15, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %31, metadata !11611, metadata !DIExpression()), !dbg !11617
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11645
  %33 = lshr i32 %32, 6, !dbg !11646
  %34 = and i32 %33, 511, !dbg !11646
  %35 = mul i32 %34, %28, !dbg !11647
  %36 = udiv i32 %35, %31, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %36, metadata !11612, metadata !DIExpression()), !dbg !11617
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11649
  %38 = and i32 %37, 31, !dbg !11650
  %39 = add nuw nsw i32 %38, 1, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %39, metadata !11611, metadata !DIExpression()), !dbg !11617
  %40 = udiv i32 %36, %39, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %40, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11653

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11654
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11657
  %44 = and i32 %43, 63, !dbg !11657
  %45 = udiv i32 16000000, %44, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %45, metadata !11613, metadata !DIExpression()), !dbg !11617
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11658
  %47 = lshr i32 %46, 28, !dbg !11659
  %48 = and i32 %47, 7, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %48, metadata !11611, metadata !DIExpression()), !dbg !11617
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11660
  %50 = lshr i32 %49, 6, !dbg !11661
  %51 = and i32 %50, 511, !dbg !11661
  %52 = mul i32 %51, %45, !dbg !11662
  %53 = udiv i32 %52, %48, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %53, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11664

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11665

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11667
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %58, metadata !11615, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11617
  %59 = lshr i32 %58, 25, !dbg !11672
  %60 = and i32 %59, 3, !dbg !11672
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11672

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11677
  %64 = and i32 %63, 63, !dbg !11677
  %65 = udiv i32 16000000, %64, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %65, metadata !11613, metadata !DIExpression()), !dbg !11617
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11678
  %67 = lshr i32 %66, 6, !dbg !11679
  %68 = and i32 %67, 511, !dbg !11679
  %69 = mul i32 %68, %65, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %69, metadata !11616, metadata !DIExpression()), !dbg !11617
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11681
  %71 = lshr i32 %70, 28, !dbg !11682
  %72 = and i32 %71, 7, !dbg !11682
  %73 = udiv i32 %69, %72, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %73, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11684

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11685
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11688
  %77 = and i32 %76, 63, !dbg !11688
  %78 = udiv i32 16000000, %77, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %78, metadata !11613, metadata !DIExpression()), !dbg !11617
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11689
  %80 = lshr i32 %79, 6, !dbg !11690
  %81 = and i32 %80, 511, !dbg !11690
  %82 = mul i32 %81, %78, !dbg !11691
  call void @llvm.dbg.value(metadata i32 %82, metadata !11616, metadata !DIExpression()), !dbg !11617
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11692
  %84 = lshr i32 %83, 28, !dbg !11693
  %85 = and i32 %84, 7, !dbg !11693
  %86 = udiv i32 %82, %85, !dbg !11694
  call void @llvm.dbg.value(metadata i32 %86, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11695

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11696
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11699
  call void @llvm.dbg.value(metadata i32 %91, metadata !11615, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11617
  %92 = lshr i32 %91, 27, !dbg !11701
  %93 = and i32 %92, 3, !dbg !11701
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11701

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11702
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11706
  %97 = and i32 %96, 63, !dbg !11706
  %98 = udiv i32 16000000, %97, !dbg !11706
  call void @llvm.dbg.value(metadata i32 %98, metadata !11613, metadata !DIExpression()), !dbg !11617
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11707
  %100 = lshr i32 %99, 6, !dbg !11708
  %101 = and i32 %100, 511, !dbg !11708
  %102 = mul i32 %101, %98, !dbg !11709
  call void @llvm.dbg.value(metadata i32 %102, metadata !11616, metadata !DIExpression()), !dbg !11617
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11710
  %104 = lshr i32 %103, 28, !dbg !11711
  %105 = and i32 %104, 7, !dbg !11711
  %106 = udiv i32 %102, %105, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %106, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11713

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11714
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()), !dbg !11617
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11717
  %110 = and i32 %109, 63, !dbg !11717
  %111 = udiv i32 16000000, %110, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %111, metadata !11613, metadata !DIExpression()), !dbg !11617
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11718
  %113 = lshr i32 %112, 6, !dbg !11719
  %114 = and i32 %113, 511, !dbg !11719
  %115 = mul i32 %114, %111, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %115, metadata !11616, metadata !DIExpression()), !dbg !11617
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11721
  %117 = lshr i32 %116, 28, !dbg !11722
  %118 = and i32 %117, 7, !dbg !11722
  %119 = udiv i32 %115, %118, !dbg !11723
  call void @llvm.dbg.value(metadata i32 %119, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123, !dbg !11724

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11725
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11612, metadata !DIExpression()), !dbg !11617
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11617
  call void @llvm.dbg.value(metadata i32 %124, metadata !11612, metadata !DIExpression()), !dbg !11617
  ret i32 %124, !dbg !11728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !11729 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = icmp eq i8 %0, 1, !dbg !11735
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11737
  %4 = and i32 %3, -9, !dbg !11738
  %5 = select i1 %2, i32 8, i32 0, !dbg !11738
  %6 = or i32 %4, %5, !dbg !11738
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11737
  ret void, !dbg !11739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11740 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11745, metadata !DIExpression()), !dbg !11747
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11748
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11749
  call void @llvm.dbg.value(metadata i32 %2, metadata !11746, metadata !DIExpression()), !dbg !11747
  br label %3, !dbg !11750

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11751
  %5 = and i32 %4, 134217728, !dbg !11751
  %6 = icmp eq i32 %5, 0, !dbg !11751
  br i1 %6, label %11, label %7, !dbg !11750

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11752
  %9 = sub i32 %8, %2, !dbg !11755
  %10 = icmp ugt i32 %9, 2, !dbg !11756
  br i1 %10, label %41, label %3, !dbg !11757, !llvm.loop !11758

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11760
  %13 = load i32, i32* %12, align 4, !dbg !11760
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11760
  %15 = load i32, i32* %14, align 4, !dbg !11760
  %16 = shl i32 %15, 6, !dbg !11760
  %17 = or i32 %16, %13, !dbg !11760
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11760
  %19 = load i32, i32* %18, align 4, !dbg !11760
  %20 = shl i32 %19, 15, !dbg !11760
  %21 = add i32 %20, -65536, !dbg !11760
  %22 = and i32 %21, -65536, !dbg !11760
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11760
  %24 = load i32, i32* %23, align 4, !dbg !11760
  %25 = shl i32 %24, 24, !dbg !11760
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11760
  %27 = load i32, i32* %26, align 4, !dbg !11760
  %28 = shl i32 %27, 28, !dbg !11760
  %29 = or i32 %17, %25, !dbg !11760
  %30 = or i32 %29, %22, !dbg !11760
  %31 = or i32 %30, %28, !dbg !11760
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11760
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11761
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !11762
  call void @llvm.dbg.value(metadata i32 %32, metadata !11746, metadata !DIExpression()), !dbg !11747
  br label %33, !dbg !11763

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11764
  %35 = and i32 %34, 134217728, !dbg !11765
  %36 = icmp eq i32 %35, 0, !dbg !11765
  br i1 %36, label %37, label %41, !dbg !11763

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !11766
  %39 = sub i32 %38, %32, !dbg !11769
  %40 = icmp ugt i32 %39, 2, !dbg !11770
  br i1 %40, label %41, label %33, !dbg !11771, !llvm.loop !11772

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11747
  ret i32 %42, !dbg !11774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11775 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11780
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11781
  call void @llvm.dbg.value(metadata i32 %1, metadata !11779, metadata !DIExpression()), !dbg !11782
  br label %2, !dbg !11783

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  %4 = and i32 %3, 134217728, !dbg !11784
  %5 = icmp eq i32 %4, 0, !dbg !11785
  br i1 %5, label %10, label %6, !dbg !11783

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11786
  %8 = sub i32 %7, %1, !dbg !11789
  %9 = icmp ugt i32 %8, 2, !dbg !11790
  br i1 %9, label %10, label %2, !dbg !11791, !llvm.loop !11792

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11782
  ret i32 %11, !dbg !11794
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11795 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11800, metadata !DIExpression()), !dbg !11802
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11803
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %2, metadata !11801, metadata !DIExpression()), !dbg !11802
  br label %3, !dbg !11805

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11806
  %5 = and i32 %4, 536870912, !dbg !11806
  %6 = icmp eq i32 %5, 0, !dbg !11806
  br i1 %6, label %11, label %7, !dbg !11805

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11807
  %9 = sub i32 %8, %2, !dbg !11810
  %10 = icmp ugt i32 %9, 2, !dbg !11811
  br i1 %10, label %37, label %3, !dbg !11812, !llvm.loop !11813

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11815
  %13 = load i32, i32* %12, align 4, !dbg !11815
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11815
  %15 = load i32, i32* %14, align 4, !dbg !11815
  %16 = shl i32 %15, 6, !dbg !11815
  %17 = or i32 %16, %13, !dbg !11815
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11815
  %19 = load i32, i32* %18, align 4, !dbg !11815
  %20 = shl i32 %19, 15, !dbg !11815
  %21 = add i32 %20, -65536, !dbg !11815
  %22 = and i32 %21, -65536, !dbg !11815
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11815
  %24 = load i32, i32* %23, align 4, !dbg !11815
  %25 = shl i32 %24, 24, !dbg !11815
  %26 = or i32 %17, %25, !dbg !11815
  %27 = or i32 %26, %22, !dbg !11815
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11815
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11816
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !11817
  call void @llvm.dbg.value(metadata i32 %28, metadata !11801, metadata !DIExpression()), !dbg !11802
  br label %29, !dbg !11818

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11819
  %31 = and i32 %30, 536870912, !dbg !11820
  %32 = icmp eq i32 %31, 0, !dbg !11820
  br i1 %32, label %33, label %37, !dbg !11818

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !11821
  %35 = sub i32 %34, %28, !dbg !11824
  %36 = icmp ugt i32 %35, 2, !dbg !11825
  br i1 %36, label %37, label %29, !dbg !11826, !llvm.loop !11827

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11802
  ret i32 %38, !dbg !11829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11830 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11833
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %1, metadata !11832, metadata !DIExpression()), !dbg !11835
  br label %2, !dbg !11836

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11837
  %4 = and i32 %3, 536870912, !dbg !11837
  %5 = icmp eq i32 %4, 0, !dbg !11837
  br i1 %5, label %10, label %6, !dbg !11836

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11838
  %8 = sub i32 %7, %1, !dbg !11841
  %9 = icmp ugt i32 %8, 2, !dbg !11842
  br i1 %9, label %10, label %2, !dbg !11843, !llvm.loop !11844

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11835
  ret i32 %11, !dbg !11846
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !11847 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11849, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 0, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 0, metadata !11851, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 0, metadata !11852, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 0, metadata !11853, metadata !DIExpression()), !dbg !11854
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11855
  %2 = lshr i32 %1, 2, !dbg !11856
  %3 = and i32 %2, 3, !dbg !11856
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11856

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11857
  %6 = and i32 %5, 63, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %6, metadata !11849, metadata !DIExpression()), !dbg !11854
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11861
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11863
  %9 = lshr i32 %8, 6, !dbg !11863
  %10 = and i32 %9, 511, !dbg !11863
  %11 = zext i32 %10 to i64, !dbg !11863
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11863
  %13 = zext i32 %6 to i64, !dbg !11863
  %14 = udiv i64 %12, %13, !dbg !11863
  %15 = trunc i64 %14 to i32, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %15, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %15, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %15, metadata !11850, metadata !DIExpression()), !dbg !11854
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11864
  %17 = lshr i32 %16, 15, !dbg !11865
  %18 = and i32 %17, 6, !dbg !11865
  %19 = add nuw nsw i32 %18, 2, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %19, metadata !11851, metadata !DIExpression()), !dbg !11854
  %20 = udiv i32 %15, %19, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %20, metadata !11853, metadata !DIExpression()), !dbg !11854
  br label %38, !dbg !11867

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11868
  %23 = and i32 %22, 63, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %23, metadata !11849, metadata !DIExpression()), !dbg !11854
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11871
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11873
  %26 = lshr i32 %25, 6, !dbg !11873
  %27 = and i32 %26, 511, !dbg !11873
  %28 = zext i32 %27 to i64, !dbg !11873
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11873
  %30 = zext i32 %23 to i64, !dbg !11873
  %31 = udiv i64 %29, %30, !dbg !11873
  %32 = trunc i64 %31 to i32, !dbg !11873
  call void @llvm.dbg.value(metadata i32 %32, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %32, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %32, metadata !11850, metadata !DIExpression()), !dbg !11854
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11874
  %34 = lshr i32 %33, 28, !dbg !11875
  %35 = and i32 %34, 7, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %35, metadata !11852, metadata !DIExpression()), !dbg !11854
  %36 = udiv i32 %32, %35, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %36, metadata !11853, metadata !DIExpression()), !dbg !11854
  br label %38, !dbg !11877

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11878
  call void @llvm.dbg.value(metadata i32 %39, metadata !11853, metadata !DIExpression()), !dbg !11854
  ret i32 %39, !dbg !11879
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11880 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11882, metadata !DIExpression()), !dbg !11884
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11885
  %3 = or i32 %2, 1, !dbg !11885
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11885
  br label %4, !dbg !11886

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11887
  %6 = and i32 %5, 2, !dbg !11887
  %7 = icmp eq i32 %6, 0, !dbg !11888
  br i1 %7, label %8, label %12, !dbg !11886

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !11889
  %10 = sub i32 %9, %1, !dbg !11892
  %11 = icmp ugt i32 %10, 2, !dbg !11893
  br i1 %11, label %89, label %4, !dbg !11894, !llvm.loop !11895

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11897
  %14 = or i32 %13, 128, !dbg !11897
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11897
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %15, metadata !11882, metadata !DIExpression()), !dbg !11884
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11899
  br label %16, !dbg !11900

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11901
  %18 = and i32 %17, 12, !dbg !11901
  %19 = icmp eq i32 %18, 0, !dbg !11902
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !11884
  br i1 %19, label %24, label %21, !dbg !11900

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11903
  %23 = icmp ugt i32 %22, 5000, !dbg !11906
  br i1 %23, label %89, label %16, !dbg !11907, !llvm.loop !11908

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11882, metadata !DIExpression()), !dbg !11884
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11910
  %26 = and i32 %25, -851969, !dbg !11910
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11910
  br label %27, !dbg !11911

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11912
  %29 = and i32 %28, 131072, !dbg !11912
  %30 = icmp eq i32 %29, 0, !dbg !11913
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !11884
  br i1 %30, label %35, label %32, !dbg !11911

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11914
  %34 = icmp ugt i32 %33, 100, !dbg !11917
  br i1 %34, label %89, label %27, !dbg !11918, !llvm.loop !11919

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11882, metadata !DIExpression()), !dbg !11884
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11921
  %37 = and i32 %36, -16777217, !dbg !11921
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11921
  br label %38, !dbg !11922

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11923
  %40 = and i32 %39, 33554432, !dbg !11923
  %41 = icmp eq i32 %40, 0, !dbg !11924
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !11884
  br i1 %41, label %46, label %43, !dbg !11922

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11925
  %45 = icmp ugt i32 %44, 2, !dbg !11928
  br i1 %45, label %89, label %38, !dbg !11929, !llvm.loop !11930

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11882, metadata !DIExpression()), !dbg !11884
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11932
  %48 = and i32 %47, -67108865, !dbg !11932
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11932
  br label %49, !dbg !11933

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11934
  %51 = and i32 %50, 134217728, !dbg !11934
  %52 = icmp eq i32 %51, 0, !dbg !11935
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !11884
  br i1 %52, label %57, label %54, !dbg !11933

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11936
  %56 = icmp ugt i32 %55, 2, !dbg !11939
  br i1 %56, label %89, label %49, !dbg !11940, !llvm.loop !11941

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11882, metadata !DIExpression()), !dbg !11884
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11943
  %59 = and i32 %58, -268435457, !dbg !11943
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11943
  br label %60, !dbg !11944

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11945
  %62 = and i32 %61, 536870912, !dbg !11945
  %63 = icmp eq i32 %62, 0, !dbg !11946
  br i1 %63, label %68, label %64, !dbg !11944

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !11947
  %66 = sub i32 %65, %53, !dbg !11950
  %67 = icmp ugt i32 %66, 2, !dbg !11951
  br i1 %67, label %89, label %60, !dbg !11952, !llvm.loop !11953

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11955
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11956
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11957
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11958
  %70 = and i32 %69, -7937, !dbg !11958
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11958
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11959
  %72 = and i32 %71, -8193, !dbg !11959
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11959
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11960
  %74 = and i32 %73, -16385, !dbg !11960
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11960
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11961
  %76 = or i32 %75, 10420224, !dbg !11961
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11961
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11962
  %78 = or i32 %77, 2097152, !dbg !11962
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11962
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11963
  %80 = or i32 %79, 4194304, !dbg !11963
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11963
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11964
  %82 = and i32 %81, -2, !dbg !11964
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11964
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11965
  %84 = or i32 %83, 16777216, !dbg !11965
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11965
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11966
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11967
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !11969
  %87 = icmp ne i32 %86, 0, !dbg !11970
  %88 = zext i1 %87 to i32, !dbg !11971
  br label %89, !dbg !11971

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11884
  ret i32 %90, !dbg !11972
}

; Function Attrs: optsize
declare !dbg !11973 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11976 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12002, metadata !DIExpression()), !dbg !12013
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12014
  br i1 %3, label %337, label %4, !dbg !12016

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12017
  %6 = load i32, i32* %5, align 4, !dbg !12017
  %7 = and i32 %6, 1, !dbg !12019
  %8 = icmp eq i32 %7, 0, !dbg !12020
  br i1 %8, label %74, label %9, !dbg !12021

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12022
  %11 = and i32 %10, 12, !dbg !12022
  %12 = icmp eq i32 %11, 4, !dbg !12025
  br i1 %12, label %29, label %13, !dbg !12026

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12027
  %15 = and i32 %14, 12, !dbg !12027
  %16 = icmp eq i32 %15, 8, !dbg !12028
  br i1 %16, label %17, label %21, !dbg !12029

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %19 = and i32 %18, 4194304, !dbg !12031
  %20 = icmp eq i32 %19, 0, !dbg !12032
  br i1 %20, label %21, label %29, !dbg !12033

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12034
  %23 = and i32 %22, 12, !dbg !12034
  %24 = icmp eq i32 %23, 12, !dbg !12035
  br i1 %24, label %25, label %37, !dbg !12036

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12037
  %27 = and i32 %26, 4194304, !dbg !12038
  %28 = icmp eq i32 %27, 0, !dbg !12039
  br i1 %28, label %37, label %29, !dbg !12040

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12041
  %31 = and i32 %30, 131072, !dbg !12041
  %32 = icmp eq i32 %31, 0, !dbg !12041
  br i1 %32, label %74, label %33, !dbg !12044

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12045
  %35 = load i32, i32* %34, align 4, !dbg !12045
  %36 = icmp eq i32 %35, 0, !dbg !12046
  br i1 %36, label %337, label %74, !dbg !12047

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12048
  %39 = load i32, i32* %38, align 4, !dbg !12048
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12052

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12053
  %42 = or i32 %41, 65536, !dbg !12053
  br label %53, !dbg !12053

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12055
  %45 = or i32 %44, 262144, !dbg !12055
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12055
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12055
  %47 = or i32 %46, 65536, !dbg !12055
  br label %53, !dbg !12055

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  %50 = and i32 %49, -65537, !dbg !12058
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12058
  %52 = and i32 %51, -262145, !dbg !12058
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12060
  %55 = load i32, i32* %38, align 4, !dbg !12061
  %56 = icmp eq i32 %55, 0, !dbg !12063
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %57, metadata !12003, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %57, metadata !12003, metadata !DIExpression()), !dbg !12013
  br i1 %56, label %66, label %58, !dbg !12065

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12066
  %60 = and i32 %59, 131072, !dbg !12068
  %61 = icmp eq i32 %60, 0, !dbg !12068
  br i1 %61, label %62, label %74, !dbg !12069

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12070
  %64 = sub i32 %63, %57, !dbg !12073
  %65 = icmp ugt i32 %64, 100, !dbg !12074
  br i1 %65, label %337, label %58, !dbg !12075, !llvm.loop !12076

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12078
  %68 = and i32 %67, 131072, !dbg !12078
  %69 = icmp eq i32 %68, 0, !dbg !12078
  br i1 %69, label %74, label %70, !dbg !12080

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !12081
  %72 = sub i32 %71, %57, !dbg !12084
  %73 = icmp ugt i32 %72, 100, !dbg !12085
  br i1 %73, label %337, label %66, !dbg !12086, !llvm.loop !12087

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12089
  %76 = and i32 %75, 2, !dbg !12091
  %77 = icmp eq i32 %76, 0, !dbg !12092
  br i1 %77, label %137, label %78, !dbg !12093

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12094
  %80 = and i32 %79, 12, !dbg !12094
  %81 = icmp eq i32 %80, 0, !dbg !12097
  br i1 %81, label %98, label %82, !dbg !12098

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12099
  %84 = and i32 %83, 12, !dbg !12099
  %85 = icmp eq i32 %84, 8, !dbg !12100
  br i1 %85, label %86, label %90, !dbg !12101

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12102
  %88 = and i32 %87, 4194304, !dbg !12103
  %89 = icmp eq i32 %88, 0, !dbg !12104
  br i1 %89, label %98, label %90, !dbg !12105

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12106
  %92 = and i32 %91, 12, !dbg !12106
  %93 = icmp eq i32 %92, 12, !dbg !12107
  br i1 %93, label %94, label %106, !dbg !12108

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12109
  %96 = and i32 %95, 4194304, !dbg !12110
  %97 = icmp eq i32 %96, 0, !dbg !12111
  br i1 %97, label %98, label %106, !dbg !12112

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12113
  %100 = and i32 %99, 2, !dbg !12113
  %101 = icmp eq i32 %100, 0, !dbg !12113
  br i1 %101, label %130, label %102, !dbg !12116

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12117
  %104 = load i32, i32* %103, align 4, !dbg !12117
  %105 = icmp eq i32 %104, 1, !dbg !12118
  br i1 %105, label %130, label %337, !dbg !12119

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12120
  %108 = load i32, i32* %107, align 4, !dbg !12120
  %109 = icmp eq i32 %108, 0, !dbg !12123
  br i1 %109, label %120, label %110, !dbg !12124

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12125
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %111, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %112, !dbg !12128

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12129
  %114 = and i32 %113, 2, !dbg !12130
  %115 = icmp eq i32 %114, 0, !dbg !12130
  br i1 %115, label %116, label %130, !dbg !12128

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !12131
  %118 = sub i32 %117, %111, !dbg !12134
  %119 = icmp ugt i32 %118, 2, !dbg !12135
  br i1 %119, label %337, label %112, !dbg !12136, !llvm.loop !12137

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12139
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %121, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %122, !dbg !12142

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12143
  %124 = and i32 %123, 2, !dbg !12143
  %125 = icmp eq i32 %124, 0, !dbg !12143
  br i1 %125, label %137, label %126, !dbg !12142

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !12144
  %128 = sub i32 %127, %121, !dbg !12147
  %129 = icmp ugt i32 %128, 2, !dbg !12148
  br i1 %129, label %337, label %122, !dbg !12149, !llvm.loop !12150

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  %132 = and i32 %131, -249, !dbg !12152
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12152
  %134 = load i32, i32* %133, align 4, !dbg !12152
  %135 = shl i32 %134, 3, !dbg !12152
  %136 = or i32 %135, %132, !dbg !12152
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  br label %137, !dbg !12153

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12153
  %139 = and i32 %138, 8, !dbg !12155
  %140 = icmp eq i32 %139, 0, !dbg !12156
  br i1 %140, label %165, label %141, !dbg !12157

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12158
  %143 = load i32, i32* %142, align 4, !dbg !12158
  %144 = icmp eq i32 %143, 0, !dbg !12161
  br i1 %144, label %155, label %145, !dbg !12162

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12163
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12165
  call void @llvm.dbg.value(metadata i32 %146, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %147, !dbg !12166

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12167
  %149 = and i32 %148, 2, !dbg !12168
  %150 = icmp eq i32 %149, 0, !dbg !12168
  br i1 %150, label %151, label %165, !dbg !12166

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !12169
  %153 = sub i32 %152, %146, !dbg !12172
  %154 = icmp ugt i32 %153, 2, !dbg !12173
  br i1 %154, label %337, label %147, !dbg !12174, !llvm.loop !12175

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12177
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !12179
  call void @llvm.dbg.value(metadata i32 %156, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %157, !dbg !12180

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12181
  %159 = and i32 %158, 2, !dbg !12181
  %160 = icmp eq i32 %159, 0, !dbg !12181
  br i1 %160, label %165, label %161, !dbg !12180

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !12182
  %163 = sub i32 %162, %156, !dbg !12185
  %164 = icmp ugt i32 %163, 2, !dbg !12186
  br i1 %164, label %337, label %157, !dbg !12187, !llvm.loop !12188

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !12190
  %167 = and i32 %166, 4, !dbg !12191
  %168 = icmp eq i32 %167, 0, !dbg !12192
  br i1 %168, label %237, label %169, !dbg !12193

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12005, metadata !DIExpression()), !dbg !12194
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12195
  %171 = and i32 %170, 268435456, !dbg !12195
  %172 = icmp eq i32 %171, 0, !dbg !12195
  br i1 %172, label %173, label %180, !dbg !12196

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !12197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !12197
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12009, metadata !DIExpression()), !dbg !12197
  store volatile i32 0, i32* %2, align 4, !dbg !12197
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12197
  %176 = or i32 %175, 268435456, !dbg !12197
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12197
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12197
  %178 = and i32 %177, 268435456, !dbg !12197
  store volatile i32 %178, i32* %2, align 4, !dbg !12197
  %179 = load volatile i32, i32* %2, align 4, !dbg !12197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !12198
  call void @llvm.dbg.value(metadata i32 1, metadata !12005, metadata !DIExpression()), !dbg !12194
  br label %180, !dbg !12199

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12005, metadata !DIExpression()), !dbg !12194
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12200
  %182 = and i32 %181, 256, !dbg !12200
  %183 = icmp eq i32 %182, 0, !dbg !12200
  br i1 %183, label %184, label %196, !dbg !12202

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12203
  %186 = or i32 %185, 256, !dbg !12203
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12203
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %187, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %188, !dbg !12206

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12207
  %190 = and i32 %189, 256, !dbg !12207
  %191 = icmp eq i32 %190, 0, !dbg !12207
  br i1 %191, label %192, label %196, !dbg !12206

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !12208
  %194 = sub i32 %193, %187, !dbg !12211
  %195 = icmp ugt i32 %194, 2, !dbg !12212
  br i1 %195, label %337, label %188, !dbg !12213, !llvm.loop !12214

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12216
  %198 = load i32, i32* %197, align 4, !dbg !12216
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !12219

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12220
  %201 = or i32 %200, 1, !dbg !12220
  br label %212, !dbg !12220

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12222
  %204 = or i32 %203, 4, !dbg !12222
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12222
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12222
  %206 = or i32 %205, 1, !dbg !12222
  br label %212, !dbg !12222

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12225
  %209 = and i32 %208, -2, !dbg !12225
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12225
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12225
  %211 = and i32 %210, -5, !dbg !12225
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12227
  %214 = load i32, i32* %197, align 4, !dbg !12228
  %215 = icmp eq i32 %214, 0, !dbg !12230
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12231
  call void @llvm.dbg.value(metadata i32 %216, metadata !12003, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %216, metadata !12003, metadata !DIExpression()), !dbg !12013
  br i1 %215, label %225, label %217, !dbg !12232

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12233
  %219 = and i32 %218, 2, !dbg !12235
  %220 = icmp eq i32 %219, 0, !dbg !12235
  br i1 %220, label %221, label %233, !dbg !12236

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !12237
  %223 = sub i32 %222, %216, !dbg !12240
  %224 = icmp ugt i32 %223, 5000, !dbg !12241
  br i1 %224, label %337, label %217, !dbg !12242, !llvm.loop !12243

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12245
  %227 = and i32 %226, 2, !dbg !12245
  %228 = icmp eq i32 %227, 0, !dbg !12245
  br i1 %228, label %233, label %229, !dbg !12247

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12248
  %231 = sub i32 %230, %216, !dbg !12251
  %232 = icmp ugt i32 %231, 5000, !dbg !12252
  br i1 %232, label %337, label %225, !dbg !12253, !llvm.loop !12254

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !12256

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12257
  %236 = and i32 %235, -268435457, !dbg !12257
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12257
  br label %237, !dbg !12260

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12261
  %239 = load i32, i32* %238, align 4, !dbg !12261
  %240 = icmp eq i32 %239, 0, !dbg !12263
  br i1 %240, label %336, label %241, !dbg !12264

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12265
  %243 = and i32 %242, 12, !dbg !12265
  %244 = icmp eq i32 %243, 8, !dbg !12268
  br i1 %244, label %297, label %245, !dbg !12269

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !12270
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12273
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %247, metadata !12003, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %247, metadata !12003, metadata !DIExpression()), !dbg !12013
  br i1 %246, label %248, label %289, !dbg !12274

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12275
  %250 = and i32 %249, 33554432, !dbg !12275
  %251 = icmp eq i32 %250, 0, !dbg !12275
  br i1 %251, label %256, label %252, !dbg !12277

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !12278
  %254 = sub i32 %253, %247, !dbg !12281
  %255 = icmp ugt i32 %254, 2, !dbg !12282
  br i1 %255, label %337, label %248, !dbg !12283, !llvm.loop !12284

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12286
  %258 = load i32, i32* %257, align 4, !dbg !12286
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12286
  %260 = load i32, i32* %259, align 4, !dbg !12286
  %261 = or i32 %260, %258, !dbg !12286
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12286
  %263 = load i32, i32* %262, align 4, !dbg !12286
  %264 = shl i32 %263, 6, !dbg !12286
  %265 = or i32 %261, %264, !dbg !12286
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12286
  %267 = load i32, i32* %266, align 4, !dbg !12286
  %268 = shl i32 %267, 15, !dbg !12286
  %269 = add i32 %268, -65536, !dbg !12286
  %270 = and i32 %269, -65536, !dbg !12286
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12286
  %272 = load i32, i32* %271, align 4, !dbg !12286
  %273 = shl i32 %272, 24, !dbg !12286
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12286
  %275 = load i32, i32* %274, align 4, !dbg !12286
  %276 = shl i32 %275, 28, !dbg !12286
  %277 = or i32 %265, %273, !dbg !12286
  %278 = or i32 %277, %270, !dbg !12286
  %279 = or i32 %278, %276, !dbg !12286
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12286
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12287
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %280, metadata !12003, metadata !DIExpression()), !dbg !12013
  br label %281, !dbg !12289

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12290
  %283 = and i32 %282, 33554432, !dbg !12291
  %284 = icmp eq i32 %283, 0, !dbg !12291
  br i1 %284, label %285, label %336, !dbg !12289

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !12292
  %287 = sub i32 %286, %280, !dbg !12295
  %288 = icmp ugt i32 %287, 2, !dbg !12296
  br i1 %288, label %337, label %281, !dbg !12297, !llvm.loop !12298

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12300
  %291 = and i32 %290, 33554432, !dbg !12300
  %292 = icmp eq i32 %291, 0, !dbg !12300
  br i1 %292, label %336, label %293, !dbg !12302

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !12303
  %295 = sub i32 %294, %247, !dbg !12306
  %296 = icmp ugt i32 %295, 2, !dbg !12307
  br i1 %296, label %337, label %289, !dbg !12308, !llvm.loop !12309

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12311
  br i1 %298, label %337, label %299, !dbg !12314

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %300, metadata !12004, metadata !DIExpression()), !dbg !12013
  %301 = and i32 %300, 4194304, !dbg !12317
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12319
  %303 = load i32, i32* %302, align 4, !dbg !12319
  %304 = icmp eq i32 %301, %303, !dbg !12320
  br i1 %304, label %305, label %337, !dbg !12321

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12322
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12323
  %308 = load i32, i32* %307, align 4, !dbg !12323
  %309 = icmp eq i32 %306, %308, !dbg !12324
  br i1 %309, label %310, label %337, !dbg !12325

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12326
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12327
  %313 = load i32, i32* %312, align 4, !dbg !12327
  %314 = shl i32 %313, 6, !dbg !12328
  %315 = icmp eq i32 %311, %314, !dbg !12329
  br i1 %315, label %316, label %337, !dbg !12330

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12331
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12332
  %319 = load i32, i32* %318, align 4, !dbg !12332
  %320 = shl i32 %319, 15, !dbg !12333
  %321 = add i32 %320, -65536, !dbg !12333
  %322 = and i32 %321, -65536, !dbg !12333
  %323 = icmp eq i32 %317, %322, !dbg !12334
  br i1 %323, label %324, label %337, !dbg !12335

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12336
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12337
  %327 = load i32, i32* %326, align 4, !dbg !12337
  %328 = shl i32 %327, 24, !dbg !12338
  %329 = icmp eq i32 %325, %328, !dbg !12339
  br i1 %329, label %330, label %337, !dbg !12340

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12341
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12342
  %333 = load i32, i32* %332, align 4, !dbg !12342
  %334 = shl i32 %333, 28, !dbg !12343
  %335 = icmp eq i32 %331, %334, !dbg !12344
  br i1 %335, label %336, label %337, !dbg !12345

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12346

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12013
  ret i32 %338, !dbg !12347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !12348 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12352, metadata !DIExpression()), !dbg !12353
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12354
  store i32 15, i32* %2, align 4, !dbg !12355
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12356
  %4 = and i32 %3, 262144, !dbg !12358
  %5 = icmp eq i32 %4, 0, !dbg !12359
  br i1 %5, label %8, label %6, !dbg !12360

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12361
  store i32 327680, i32* %7, align 4, !dbg !12363
  br label %15, !dbg !12364

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12365
  %10 = and i32 %9, 65536, !dbg !12367
  %11 = icmp eq i32 %10, 0, !dbg !12368
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12369
  br i1 %11, label %14, label %13, !dbg !12370

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12371
  br label %15, !dbg !12373

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12374
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %17 = and i32 %16, 1, !dbg !12378
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12379
  store i32 %17, i32* %18, align 4, !dbg !12381
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12382
  %20 = lshr i32 %19, 3, !dbg !12383
  %21 = and i32 %20, 31, !dbg !12383
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12384
  store i32 %21, i32* %22, align 4, !dbg !12385
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12386
  %24 = and i32 %23, 4, !dbg !12388
  %25 = icmp eq i32 %24, 0, !dbg !12389
  br i1 %25, label %28, label %26, !dbg !12390

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12391
  store i32 5, i32* %27, align 4, !dbg !12393
  br label %35, !dbg !12394

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12395
  %30 = and i32 %29, 1, !dbg !12397
  %31 = icmp eq i32 %30, 0, !dbg !12398
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12399
  br i1 %31, label %34, label %33, !dbg !12400

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12401
  br label %35, !dbg !12403

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12404
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12406
  %37 = and i32 %36, 1, !dbg !12408
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12409
  store i32 %37, i32* %38, align 4, !dbg !12411
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12412
  %40 = and i32 %39, 16777216, !dbg !12414
  %41 = icmp eq i32 %40, 0, !dbg !12415
  %42 = select i1 %41, i32 1, i32 2, !dbg !12416
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12417
  store i32 %42, i32* %43, align 4, !dbg !12419
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12420
  %45 = and i32 %44, 4194304, !dbg !12421
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12422
  store i32 %45, i32* %46, align 4, !dbg !12423
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12424
  %48 = and i32 %47, 63, !dbg !12425
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12426
  store i32 %48, i32* %49, align 4, !dbg !12427
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12428
  %51 = lshr i32 %50, 6, !dbg !12429
  %52 = and i32 %51, 511, !dbg !12429
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12430
  store i32 %52, i32* %53, align 4, !dbg !12431
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12432
  %55 = shl i32 %54, 1, !dbg !12433
  %56 = and i32 %55, 393216, !dbg !12433
  %57 = add nuw nsw i32 %56, 131072, !dbg !12433
  %58 = lshr exact i32 %57, 16, !dbg !12434
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12435
  store i32 %58, i32* %59, align 4, !dbg !12436
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12437
  %61 = lshr i32 %60, 24, !dbg !12438
  %62 = and i32 %61, 15, !dbg !12438
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12439
  store i32 %62, i32* %63, align 4, !dbg !12440
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12441
  %65 = lshr i32 %64, 28, !dbg !12442
  %66 = and i32 %65, 7, !dbg !12442
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12443
  store i32 %66, i32* %67, align 4, !dbg !12444
  ret void, !dbg !12445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12449, metadata !DIExpression()), !dbg !12450
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12451
  ret void, !dbg !12452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12456, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 1000, metadata !12457, metadata !DIExpression()), !dbg !12458
  %2 = udiv i32 %0, 1000, !dbg !12459
  %3 = add nsw i32 %2, -1, !dbg !12460
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12461
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12462
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12463
  ret void, !dbg !12464
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12465 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12467, metadata !DIExpression()), !dbg !12469
  %3 = bitcast i32* %2 to i8*, !dbg !12470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12470
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12468, metadata !DIExpression()), !dbg !12471
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12472
  store volatile i32 %4, i32* %2, align 4, !dbg !12471
  %5 = load volatile i32, i32* %2, align 4, !dbg !12473
  %6 = icmp eq i32 %0, -1, !dbg !12474
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12467, metadata !DIExpression()), !dbg !12469
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %8, metadata !12467, metadata !DIExpression()), !dbg !12469
  br label %9, !dbg !12476

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12467, metadata !DIExpression()), !dbg !12469
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12477
  call void @llvm.dbg.value(metadata i32 undef, metadata !12467, metadata !DIExpression()), !dbg !12469
  %12 = shl i32 %11, 15, !dbg !12469
  %13 = ashr i32 %12, 31, !dbg !12469
  %14 = add i32 %13, %10, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %14, metadata !12467, metadata !DIExpression()), !dbg !12469
  %15 = icmp eq i32 %14, 0, !dbg !12476
  br i1 %15, label %16, label %9, !dbg !12476

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12480
  ret void, !dbg !12480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12483, metadata !DIExpression()), !dbg !12484
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12492, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32 0, metadata !12495, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.value(metadata i32 0, metadata !12496, metadata !DIExpression()), !dbg !12497
  %2 = icmp eq i32 %0, 0, !dbg !12498
  br i1 %2, label %72, label %3, !dbg !12500

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12501
  %5 = icmp eq i32 %4, 49152, !dbg !12504
  br i1 %5, label %6, label %21, !dbg !12505

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12506
  %8 = select i1 %7, i32 0, i32 5, !dbg !12509
  call void @llvm.dbg.value(metadata i32 %8, metadata !12495, metadata !DIExpression()), !dbg !12497
  %9 = add i32 %0, -120000001, !dbg !12510
  %10 = icmp ult i32 %9, 30000000, !dbg !12510
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12510
  call void @llvm.dbg.value(metadata i32 %11, metadata !12495, metadata !DIExpression()), !dbg !12497
  %12 = icmp ult i32 %9, -30000000, !dbg !12512
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12512
  call void @llvm.dbg.value(metadata i32 %13, metadata !12495, metadata !DIExpression()), !dbg !12497
  %14 = icmp ugt i32 %0, 60000000, !dbg !12514
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12516
  br i1 %16, label %21, label %17, !dbg !12516

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12517
  %19 = and i1 %18, %15, !dbg !12520
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12520
  br label %21, !dbg !12520

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12497
  call void @llvm.dbg.value(metadata i32 %22, metadata !12495, metadata !DIExpression()), !dbg !12497
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12521
  %24 = icmp eq i32 %23, 32768, !dbg !12523
  br i1 %24, label %25, label %45, !dbg !12524

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12525
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12528
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12528
  call void @llvm.dbg.value(metadata i32 %29, metadata !12495, metadata !DIExpression()), !dbg !12497
  %30 = icmp ugt i32 %0, 12000000, !dbg !12529
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12531
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12531
  call void @llvm.dbg.value(metadata i32 %33, metadata !12495, metadata !DIExpression()), !dbg !12497
  %34 = icmp ugt i32 %0, 90000000, !dbg !12532
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12534
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12534
  call void @llvm.dbg.value(metadata i32 %37, metadata !12495, metadata !DIExpression()), !dbg !12497
  %38 = icmp ugt i32 %0, 60000000, !dbg !12535
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12537
  br i1 %40, label %45, label %41, !dbg !12537

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12538
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12541
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12541
  br label %45, !dbg !12541

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12542
  call void @llvm.dbg.value(metadata i32 %46, metadata !12495, metadata !DIExpression()), !dbg !12497
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12543
  %48 = icmp eq i32 %47, 16384, !dbg !12545
  br i1 %48, label %49, label %61, !dbg !12546

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12547
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12550
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12550
  call void @llvm.dbg.value(metadata i32 %53, metadata !12495, metadata !DIExpression()), !dbg !12497
  %54 = icmp ugt i32 %0, 60000000, !dbg !12551
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12553
  br i1 %56, label %61, label %57, !dbg !12553

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12554
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12557
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12557
  br label %61, !dbg !12557

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12542
  call void @llvm.dbg.value(metadata i32 %62, metadata !12495, metadata !DIExpression()), !dbg !12497
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !12558
  call void @llvm.dbg.value(metadata i32 2, metadata !12493, metadata !DIExpression()), !dbg !12497
  br label %63, !dbg !12559

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12542
  call void @llvm.dbg.value(metadata i32 %64, metadata !12493, metadata !DIExpression()), !dbg !12497
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %65, metadata !12494, metadata !DIExpression()), !dbg !12497
  %66 = add nsw i32 %64, -1, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %66, metadata !12493, metadata !DIExpression()), !dbg !12497
  %67 = icmp ne i32 %65, %62, !dbg !12563
  %68 = icmp ne i32 %66, 0, !dbg !12564
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12564
  br i1 %69, label %63, label %70, !dbg !12565, !llvm.loop !12566

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12568
  call void @llvm.dbg.value(metadata i32 %73, metadata !12496, metadata !DIExpression()), !dbg !12497
  ret i32 %73, !dbg !12569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12570 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12572
  %2 = and i32 %1, 49152, !dbg !12572
  ret i32 %2, !dbg !12573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12576, metadata !DIExpression()), !dbg !12577
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12578
  %3 = and i32 %2, -16, !dbg !12578
  %4 = or i32 %3, %0, !dbg !12578
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12578
  ret void, !dbg !12579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12580 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12581
  %2 = and i32 %1, 15, !dbg !12581
  ret i32 %2, !dbg !12582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12583 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12601, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12602, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i32 0, metadata !12603, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata i32 0, metadata !12604, metadata !DIExpression()), !dbg !12605
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12606
  %4 = icmp eq i32 %3, 0, !dbg !12608
  br i1 %4, label %5, label %21, !dbg !12609

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !12610
  call void @llvm.dbg.value(metadata i32 %6, metadata !12604, metadata !DIExpression()), !dbg !12605
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.174() #24, !dbg !12612
  %8 = icmp eq i32 %7, 1, !dbg !12614
  br i1 %8, label %13, label %9, !dbg !12615

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.175() #24, !dbg !12616
  br label %10, !dbg !12618

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.174() #24, !dbg !12619
  %12 = icmp eq i32 %11, 1, !dbg !12620
  br i1 %12, label %13, label %10, !dbg !12618, !llvm.loop !12621

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12623
  %15 = load i32, i32* %14, align 4, !dbg !12623
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12624
  %17 = load i32, i32* %16, align 4, !dbg !12624
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12625
  %19 = load i32, i32* %18, align 4, !dbg !12625
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.176(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12626
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !12627
  call void @llvm.dbg.value(metadata i32 %20, metadata !12603, metadata !DIExpression()), !dbg !12605
  br label %21, !dbg !12628

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12629
  call void @llvm.dbg.value(metadata i32 %22, metadata !12603, metadata !DIExpression()), !dbg !12605
  ret i32 %22, !dbg !12630
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12631 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12635, metadata !DIExpression()), !dbg !12636
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.178() #24, !dbg !12637
  %2 = icmp ne i32 %1, 0, !dbg !12639
  call void @llvm.dbg.value(metadata i1 %2, metadata !12635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12636
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !12640
  %4 = icmp ne i32 %3, 0, !dbg !12642
  call void @llvm.dbg.value(metadata i1 undef, metadata !12635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12636
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12643
  %6 = icmp ne i32 %5, 0, !dbg !12645
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12646
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12646
  %9 = zext i1 %8 to i32, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %9, metadata !12635, metadata !DIExpression()), !dbg !12636
  ret i32 %9, !dbg !12647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12652, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12653, metadata !DIExpression()), !dbg !12655
  call void @llvm.dbg.value(metadata i32 0, metadata !12654, metadata !DIExpression()), !dbg !12655
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12656
  %4 = load i32, i32* %3, align 4, !dbg !12656
  %5 = and i32 %4, 63, !dbg !12657
  %6 = udiv i32 %0, %5, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %6, metadata !12654, metadata !DIExpression()), !dbg !12655
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12659
  %8 = load i32, i32* %7, align 4, !dbg !12659
  %9 = and i32 %8, 511, !dbg !12660
  %10 = mul i32 %9, %6, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %10, metadata !12654, metadata !DIExpression()), !dbg !12655
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12662
  %12 = load i32, i32* %11, align 4, !dbg !12662
  %13 = lshr i32 %12, 15, !dbg !12663
  %14 = and i32 %13, 131070, !dbg !12663
  %15 = add nuw nsw i32 %14, 2, !dbg !12663
  %16 = udiv i32 %10, %15, !dbg !12664
  call void @llvm.dbg.value(metadata i32 %16, metadata !12654, metadata !DIExpression()), !dbg !12655
  ret i32 %16, !dbg !12665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.174() unnamed_addr #15 !dbg !12666 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12667
  %2 = lshr i32 %1, 1, !dbg !12668
  %3 = and i32 %2, 1, !dbg !12668
  ret i32 %3, !dbg !12669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.175() unnamed_addr #14 !dbg !12670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12671
  %2 = or i32 %1, 1, !dbg !12671
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12671
  ret void, !dbg !12672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.176(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12675, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata i32 %1, metadata !12676, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata i32 %2, metadata !12677, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.value(metadata i32 %3, metadata !12678, metadata !DIExpression()), !dbg !12679
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12680
  %6 = and i32 %5, -4227072, !dbg !12680
  %7 = or i32 %1, %0, !dbg !12680
  %8 = shl i32 %2, 6, !dbg !12680
  %9 = or i32 %7, %8, !dbg !12680
  %10 = or i32 %9, %6, !dbg !12680
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12680
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12681
  %12 = and i32 %11, -196609, !dbg !12681
  %13 = or i32 %12, %3, !dbg !12681
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12681
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12682
  %15 = and i32 %14, -1879048193, !dbg !12682
  %16 = or i32 %15, %3, !dbg !12682
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12689, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 0, metadata !12690, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 0, metadata !12691, metadata !DIExpression()), !dbg !12692
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12693
  %4 = load i32, i32* %3, align 4, !dbg !12693
  %5 = lshr i32 %4, 4, !dbg !12693
  %6 = and i32 %5, 15, !dbg !12693
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12693
  %8 = load i8, i8* %7, align 1, !dbg !12693
  %9 = zext i8 %8 to i32, !dbg !12693
  %10 = lshr i32 %0, %9, !dbg !12693
  call void @llvm.dbg.value(metadata i32 %10, metadata !12691, metadata !DIExpression()), !dbg !12692
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12694
  %12 = icmp ult i32 %11, %10, !dbg !12696
  br i1 %12, label %13, label %16, !dbg !12697

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %14, metadata !12690, metadata !DIExpression()), !dbg !12692
  %15 = icmp eq i32 %14, 0, !dbg !12700
  br i1 %15, label %16, label %30, !dbg !12702

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.177() #24, !dbg !12703
  br label %17, !dbg !12705

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.178() #24, !dbg !12706
  %19 = icmp eq i32 %18, 1, !dbg !12707
  br i1 %19, label %20, label %17, !dbg !12705, !llvm.loop !12708

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12710
  tail call fastcc void @LL_RCC_SetAHBPrescaler.179(i32 noundef %21) #24, !dbg !12711
  tail call fastcc void @LL_RCC_SetSysClkSource.180() #24, !dbg !12712
  br label %22, !dbg !12713

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.181() #24, !dbg !12714
  %24 = icmp eq i32 %23, 8, !dbg !12715
  br i1 %24, label %25, label %22, !dbg !12713, !llvm.loop !12716

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12718
  %27 = load i32, i32* %26, align 4, !dbg !12718
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.182(i32 noundef %27) #24, !dbg !12719
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12720
  %29 = load i32, i32* %28, align 4, !dbg !12720
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.183(i32 noundef %29) #24, !dbg !12721
  br label %30, !dbg !12722

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12723
  %33 = icmp ugt i32 %32, %10, !dbg !12725
  br i1 %33, label %34, label %36, !dbg !12726

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12727
  call void @llvm.dbg.value(metadata i32 %35, metadata !12690, metadata !DIExpression()), !dbg !12692
  br label %36, !dbg !12729

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12692
  call void @llvm.dbg.value(metadata i32 %37, metadata !12690, metadata !DIExpression()), !dbg !12692
  %38 = icmp eq i32 %37, 0, !dbg !12730
  br i1 %38, label %39, label %40, !dbg !12732

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12733
  br label %40, !dbg !12735

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.177() unnamed_addr #14 !dbg !12737 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12738
  %2 = or i32 %1, 16777216, !dbg !12738
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.178() unnamed_addr #15 !dbg !12740 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12741
  %2 = lshr i32 %1, 25, !dbg !12742
  %3 = and i32 %2, 1, !dbg !12742
  ret i32 %3, !dbg !12743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.179(i32 noundef %0) unnamed_addr #14 !dbg !12744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12746, metadata !DIExpression()), !dbg !12747
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12748
  %3 = and i32 %2, -241, !dbg !12748
  %4 = or i32 %3, %0, !dbg !12748
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12748
  ret void, !dbg !12749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.180() unnamed_addr #14 !dbg !12750 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12752, metadata !DIExpression()), !dbg !12753
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12754
  %2 = and i32 %1, -4, !dbg !12754
  %3 = or i32 %2, 2, !dbg !12754
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12754
  ret void, !dbg !12755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.181() unnamed_addr #15 !dbg !12756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12757
  %2 = and i32 %1, 12, !dbg !12757
  ret i32 %2, !dbg !12758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.182(i32 noundef %0) unnamed_addr #14 !dbg !12759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12761, metadata !DIExpression()), !dbg !12762
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12763
  %3 = and i32 %2, -7169, !dbg !12763
  %4 = or i32 %3, %0, !dbg !12763
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12763
  ret void, !dbg !12764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.183(i32 noundef %0) unnamed_addr #14 !dbg !12765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12767, metadata !DIExpression()), !dbg !12768
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12769
  %3 = and i32 %2, -57345, !dbg !12769
  %4 = or i32 %3, %0, !dbg !12769
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12769
  ret void, !dbg !12770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !12771 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12772
  %2 = lshr i32 %1, 29, !dbg !12773
  %3 = and i32 %2, 1, !dbg !12773
  ret i32 %3, !dbg !12774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12776
  %2 = lshr i32 %1, 27, !dbg !12777
  %3 = and i32 %2, 1, !dbg !12777
  ret i32 %3, !dbg !12778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12783, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i32 %1, metadata !12784, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12785, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12786, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i32 0, metadata !12787, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.value(metadata i32 0, metadata !12788, metadata !DIExpression()), !dbg !12789
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12790
  %6 = icmp eq i32 %5, 0, !dbg !12792
  br i1 %6, label %7, label %27, !dbg !12793

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12794
  call void @llvm.dbg.value(metadata i32 %8, metadata !12788, metadata !DIExpression()), !dbg !12789
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.184() #24, !dbg !12796
  %10 = icmp eq i32 %9, 1, !dbg !12798
  br i1 %10, label %19, label %11, !dbg !12799

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12800
  br i1 %12, label %13, label %14, !dbg !12803

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12804
  br label %15, !dbg !12806

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.185() #24, !dbg !12807
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.186() #24, !dbg !12809
  br label %16, !dbg !12810

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.184() #24, !dbg !12811
  %18 = icmp eq i32 %17, 1, !dbg !12812
  br i1 %18, label %19, label %16, !dbg !12810, !llvm.loop !12813

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12815
  %21 = load i32, i32* %20, align 4, !dbg !12815
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12816
  %23 = load i32, i32* %22, align 4, !dbg !12816
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12817
  %25 = load i32, i32* %24, align 4, !dbg !12817
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.176(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12818
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12819
  call void @llvm.dbg.value(metadata i32 %26, metadata !12787, metadata !DIExpression()), !dbg !12789
  br label %27, !dbg !12820

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12821
  call void @llvm.dbg.value(metadata i32 %28, metadata !12787, metadata !DIExpression()), !dbg !12789
  ret i32 %28, !dbg !12822
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.184() unnamed_addr #15 !dbg !12823 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12824
  %2 = lshr i32 %1, 17, !dbg !12825
  %3 = and i32 %2, 1, !dbg !12825
  ret i32 %3, !dbg !12826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12828
  %2 = or i32 %1, 262144, !dbg !12828
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12828
  ret void, !dbg !12829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.185() unnamed_addr #14 !dbg !12830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12831
  %2 = and i32 %1, -262145, !dbg !12831
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12831
  ret void, !dbg !12832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.186() unnamed_addr #14 !dbg !12833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12834
  %2 = or i32 %1, 65536, !dbg !12834
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12834
  ret void, !dbg !12835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12836 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12839, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.value(metadata i32 undef, metadata !12839, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12855
  ret void, !dbg !12856
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12861, metadata !DIExpression()), !dbg !12863
  %2 = icmp eq i8* %0, null, !dbg !12864
  br i1 %2, label %29, label %3, !dbg !12866

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12867
  %5 = icmp eq i8 %4, 0, !dbg !12868
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12869
  br i1 %6, label %29, label %8, !dbg !12869

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12862, metadata !DIExpression()), !dbg !12863
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12870

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12862, metadata !DIExpression()), !dbg !12863
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12872
  br i1 %10, label %11, label %15, !dbg !12877

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12878
  %13 = load i8*, i8** %12, align 4, !dbg !12878
  %14 = icmp eq i8* %13, %0, !dbg !12879
  br i1 %14, label %29, label %15, !dbg !12880

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12881
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12862, metadata !DIExpression()), !dbg !12863
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12882
  br i1 %17, label %7, label %8, !dbg !12883, !llvm.loop !12884

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12862, metadata !DIExpression()), !dbg !12863
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12886
  br i1 %20, label %21, label %26, !dbg !12890

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12891
  %23 = load i8*, i8** %22, align 4, !dbg !12891
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12892
  %25 = icmp eq i32 %24, 0, !dbg !12893
  br i1 %25, label %29, label %26, !dbg !12894

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12895
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12862, metadata !DIExpression()), !dbg !12863
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12896
  br i1 %28, label %29, label %18, !dbg !12870, !llvm.loop !12897

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12863
  ret %struct.device* %30, !dbg !12899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = icmp eq %struct.device* %0, null, !dbg !12906
  br i1 %2, label %14, label %3, !dbg !12908

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12909
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12909
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12910
  %7 = load i8, i8* %6, align 1, !dbg !12910
  %8 = and i8 %7, 1, !dbg !12910
  %9 = icmp eq i8 %8, 0, !dbg !12910
  br i1 %9, label %14, label %10, !dbg !12911

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12912
  %12 = load i8, i8* %11, align 1, !dbg !12912
  %13 = icmp eq i8 %12, 0, !dbg !12913
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12905
  ret i1 %15, !dbg !12914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12915 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12920, metadata !DIExpression()), !dbg !12921
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12922
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12924 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12932, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12933, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.value(metadata i8* %2, metadata !12934, metadata !DIExpression()), !dbg !12937
  %5 = bitcast i32* %4 to i8*, !dbg !12938
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12938
  call void @llvm.dbg.value(metadata i32 0, metadata !12935, metadata !DIExpression()), !dbg !12937
  store i32 0, i32* %4, align 4, !dbg !12939
  call void @llvm.dbg.value(metadata i32* %4, metadata !12935, metadata !DIExpression(DW_OP_deref)), !dbg !12937
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12940
  call void @llvm.dbg.value(metadata i16* %6, metadata !12936, metadata !DIExpression()), !dbg !12937
  %7 = load i32, i32* %4, align 4, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %7, metadata !12935, metadata !DIExpression()), !dbg !12937
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12943
  ret i32 %8, !dbg !12944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12949, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata i32* %1, metadata !12950, metadata !DIExpression()), !dbg !12955
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12956
  %4 = load i16*, i16** %3, align 4, !dbg !12956
  call void @llvm.dbg.value(metadata i16* %4, metadata !12951, metadata !DIExpression()), !dbg !12955
  %5 = icmp eq i16* %4, null, !dbg !12957
  br i1 %5, label %14, label %6, !dbg !12958

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12959
  call void @llvm.dbg.value(metadata i32 %7, metadata !12952, metadata !DIExpression()), !dbg !12959
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12960
  %9 = load i16, i16* %8, align 2, !dbg !12960
  %10 = add i16 %9, -32767, !dbg !12961
  %11 = icmp ult i16 %10, 2, !dbg !12961
  %12 = add i32 %7, 1, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %12, metadata !12952, metadata !DIExpression()), !dbg !12959
  br i1 %11, label %13, label %6, !dbg !12961, !llvm.loop !12964

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12967
  br label %14, !dbg !12968

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12970 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12974, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i32 %1, metadata !12975, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12976, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i8* %3, metadata !12977, metadata !DIExpression()), !dbg !12985
  call void @llvm.dbg.value(metadata i32 0, metadata !12978, metadata !DIExpression()), !dbg !12986
  %5 = icmp eq i32 %1, 0, !dbg !12987
  br i1 %5, label %16, label %8, !dbg !12988

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12978, metadata !DIExpression()), !dbg !12986
  %7 = icmp eq i32 %15, %1, !dbg !12987
  br i1 %7, label %16, label %8, !dbg !12988, !llvm.loop !12989

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12978, metadata !DIExpression()), !dbg !12986
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12991
  %11 = load i16, i16* %10, align 2, !dbg !12991
  call void @llvm.dbg.value(metadata i16 %11, metadata !12980, metadata !DIExpression()), !dbg !12992
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12993
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12983, metadata !DIExpression()), !dbg !12992
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %13, metadata !12984, metadata !DIExpression()), !dbg !12992
  %14 = icmp slt i32 %13, 0, !dbg !12995
  %15 = add nuw i32 %9, 1, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %15, metadata !12978, metadata !DIExpression()), !dbg !12986
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12999 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13003, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13004, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13005, metadata !DIExpression()), !dbg !13006
  %2 = sext i16 %0 to i32, !dbg !13007
  %3 = icmp slt i16 %0, 1, !dbg !13009
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13010
  %6 = add nsw i32 %2, -1, !dbg !13010
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13010
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13010
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13004, metadata !DIExpression()), !dbg !13006
  ret %struct.device* %8, !dbg !13011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13012 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13014, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13015, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.value(metadata i8* %2, metadata !13016, metadata !DIExpression()), !dbg !13019
  %5 = bitcast i32* %4 to i8*, !dbg !13020
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13020
  call void @llvm.dbg.value(metadata i32 0, metadata !13017, metadata !DIExpression()), !dbg !13019
  store i32 0, i32* %4, align 4, !dbg !13021
  call void @llvm.dbg.value(metadata i32* %4, metadata !13017, metadata !DIExpression(DW_OP_deref)), !dbg !13019
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13022
  call void @llvm.dbg.value(metadata i16* %6, metadata !13018, metadata !DIExpression()), !dbg !13019
  %7 = load i32, i32* %4, align 4, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %7, metadata !13017, metadata !DIExpression()), !dbg !13019
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13024
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13025
  ret i32 %8, !dbg !13026
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13029, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32* %1, metadata !13030, metadata !DIExpression()), !dbg !13034
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13035
  %4 = load i16*, i16** %3, align 4, !dbg !13035
  call void @llvm.dbg.value(metadata i16* %4, metadata !13031, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13033, metadata !DIExpression()), !dbg !13034
  %5 = icmp eq i16* %4, null, !dbg !13036
  br i1 %5, label %22, label %6, !dbg !13038

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i16* %8, metadata !13031, metadata !DIExpression()), !dbg !13034
  %9 = load i16, i16* %8, align 2, !dbg !13039
  %10 = icmp eq i16 %9, -32768, !dbg !13043
  call void @llvm.dbg.value(metadata i32 undef, metadata !13032, metadata !DIExpression()), !dbg !13034
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13044
  call void @llvm.dbg.value(metadata i16* %11, metadata !13031, metadata !DIExpression()), !dbg !13034
  %12 = zext i1 %10 to i32, !dbg !13045
  %13 = add i32 %7, %12, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %13, metadata !13032, metadata !DIExpression()), !dbg !13034
  %14 = icmp eq i32 %13, 2, !dbg !13046
  br i1 %14, label %15, label %6, !dbg !13047

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13034
  call void @llvm.dbg.value(metadata i32 %16, metadata !13033, metadata !DIExpression()), !dbg !13034
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13048
  %18 = load i16, i16* %17, align 2, !dbg !13048
  %19 = icmp eq i16 %18, 32767, !dbg !13049
  %20 = add i32 %16, 1, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %20, metadata !13033, metadata !DIExpression()), !dbg !13034
  br i1 %19, label %21, label %15, !dbg !13052, !llvm.loop !13053

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13055
  br label %22, !dbg !13056

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13057
  call void @llvm.dbg.value(metadata i16* %23, metadata !13031, metadata !DIExpression()), !dbg !13034
  ret i16* %23, !dbg !13058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13059 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13062
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13063
  ret i32* %2, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13065 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13216, metadata !DIExpression()), !dbg !13219
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13217, metadata !DIExpression()), !dbg !13219
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13218, metadata !DIExpression()), !dbg !13219
  ret void, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13225, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata i32 %1, metadata !13226, metadata !DIExpression()), !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13229 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13233, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i32 %1, metadata !13234, metadata !DIExpression()), !dbg !13235
  ret void, !dbg !13236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13241, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.value(metadata i8* %1, metadata !13242, metadata !DIExpression()), !dbg !13243
  ret i32 -134, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13249, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.value(metadata i8* %1, metadata !13250, metadata !DIExpression()), !dbg !13251
  ret i32 -134, !dbg !13252
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13256, metadata !DIExpression()), !dbg !13257
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13258, !srcloc !13264
  call void @llvm.dbg.value(metadata i32 undef, metadata !13261, metadata !DIExpression()) #23, !dbg !13265
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()) #23, !dbg !13265
  br label %3, !dbg !13266

3:                                                ; preds = %3, %1
  br label %3, !dbg !13267, !llvm.loop !13270
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13277, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13278, metadata !DIExpression()), !dbg !13279
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.191, i32 0, i32 0), i32 noundef 69) #25, !dbg !13280
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13285
  unreachable, !dbg !13285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13288, metadata !DIExpression()), !dbg !13289
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13290
  unreachable, !dbg !13290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13293, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13294, metadata !DIExpression()), !dbg !13297
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13298, !srcloc !13264
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13298
  call void @llvm.dbg.value(metadata i32 %4, metadata !13261, metadata !DIExpression()) #23, !dbg !13300
  call void @llvm.dbg.value(metadata i32 undef, metadata !13262, metadata !DIExpression()) #23, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %4, metadata !13295, metadata !DIExpression()), !dbg !13297
  %5 = tail call fastcc %struct.k_thread* @k_current_get.194() #26, !dbg !13301
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13296, metadata !DIExpression()), !dbg !13297
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13302
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.195, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13302
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13307
  br i1 %7, label %20, label %8, !dbg !13309

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13310, metadata !DIExpression()), !dbg !13315
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13317
  %10 = load i32, i32* %9, align 4, !dbg !13317
  %11 = and i32 %10, 511, !dbg !13318
  %12 = icmp eq i32 %11, 0, !dbg !13319
  br i1 %12, label %14, label %13, !dbg !13320

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.196, i32 0, i32 0), i32 noundef 69) #25, !dbg !13321
  br label %14, !dbg !13327

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.197, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13328
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13333
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13310, metadata !DIExpression()), !dbg !13334
  %16 = load i32, i32* %9, align 4, !dbg !13339
  %17 = and i32 %16, 511, !dbg !13340
  %18 = icmp eq i32 %17, 0, !dbg !13341
  br i1 %18, label %22, label %19, !dbg !13342

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13343, metadata !DIExpression()) #23, !dbg !13346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13349, !srcloc !13350
  br label %25, !dbg !13351

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.197, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13328
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13333
  br label %22, !dbg !13352

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13353
  call void @llvm.dbg.value(metadata i32 %4, metadata !13343, metadata !DIExpression()) #23, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %4, metadata !13343, metadata !DIExpression()) #23, !dbg !13359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13297
  br i1 %23, label %25, label %24, !dbg !13361

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.198(%struct.k_thread* noundef %5) #24, !dbg !13362
  br label %25, !dbg !13365

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13365
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.194() unnamed_addr #11 !dbg !13366 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.206() #26, !dbg !13370
  ret %struct.k_thread* %1, !dbg !13371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13376, metadata !DIExpression()), !dbg !13377
  %2 = icmp ult i32 %0, 5, !dbg !13378
  br i1 %2, label %3, label %6, !dbg !13378

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13378
  %5 = load i8*, i8** %4, align 4, !dbg !13378
  br label %6, !dbg !13378

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.200, i32 0, i32 0), %1 ], !dbg !13379
  ret i8* %7, !dbg !13381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13386, metadata !DIExpression()), !dbg !13388
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13389
  br i1 %2, label %9, label %3, !dbg !13390

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13391
  call void @llvm.dbg.value(metadata i8* %4, metadata !13387, metadata !DIExpression()), !dbg !13388
  %5 = icmp eq i8* %4, null, !dbg !13392
  br i1 %5, label %9, label %6, !dbg !13394

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13395
  %8 = icmp eq i8 %7, 0, !dbg !13396
  br i1 %8, label %9, label %10, !dbg !13397

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.199, i32 0, i32 0), metadata !13387, metadata !DIExpression()), !dbg !13388
  br label %10, !dbg !13398

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.199, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13388
  call void @llvm.dbg.value(metadata i8* %11, metadata !13387, metadata !DIExpression()), !dbg !13388
  ret i8* %11, !dbg !13400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.198(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13405, metadata !DIExpression()), !dbg !13406
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13407, !srcloc !13409
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13410
  ret void, !dbg !13411
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.206() unnamed_addr #11 !dbg !13412 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13413, !srcloc !13415
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13416
  ret %struct.k_thread* %1, !dbg !13417
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13422, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %1, metadata !13423, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.value(metadata i32 %2, metadata !13424, metadata !DIExpression()), !dbg !13425
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13426
  ret void, !dbg !13427
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13432, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i8* %1, metadata !13433, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32 %2, metadata !13434, metadata !DIExpression()), !dbg !13435
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13436
  ret void, !dbg !13437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13438 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13439
  ret void, !dbg !13440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13443, metadata !DIExpression()), !dbg !13444
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13445
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13446
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13447
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13448
  %4 = trunc i32 %0 to i8, !dbg !13449
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13450
  store i8 %4, i8* %5, align 4, !dbg !13451
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13452
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13453
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13454
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13455
  store i8* %8, i8** %9, align 4, !dbg !13456
  ret void, !dbg !13457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13460, metadata !DIExpression()), !dbg !13466
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13467
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13461, metadata !DIExpression()), !dbg !13466
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13468
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13462, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.213, i32 0, i32 0), metadata !13465, metadata !DIExpression()), !dbg !13466
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13469
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13470
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.213, i32 0, i32 0)) #25, !dbg !13471
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13472
  ret void, !dbg !13473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13474 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13478, metadata !DIExpression()), !dbg !13479
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13480
  ret i8* %2, !dbg !13481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13487, metadata !DIExpression()), !dbg !13488
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13489
  %3 = load i8, i8* %2, align 1, !dbg !13490
  %4 = and i8 %3, -5, !dbg !13490
  store i8 %4, i8* %2, align 1, !dbg !13490
  ret void, !dbg !13491
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13492 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13495
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13496
  %3 = ptrtoint i8* %2 to i32, !dbg !13505
  %4 = add i32 %3, 2048, !dbg !13506
  call void @llvm.dbg.value(metadata i32 %4, metadata !13500, metadata !DIExpression()) #23, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %4, metadata !13508, metadata !DIExpression()) #23, !dbg !13511
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13513, !srcloc !13514
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13515
  %6 = or i32 %5, 512, !dbg !13515
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13515
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -2, i32 noundef 255) #25, !dbg !13516
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -5, i32 noundef 0) #25, !dbg !13519
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -12, i32 noundef 0) #25, !dbg !13520
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -11, i32 noundef 0) #25, !dbg !13521
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -10, i32 noundef 0) #25, !dbg !13522
  tail call fastcc void @__NVIC_SetPriority.216(i32 noundef -4, i32 noundef 0) #25, !dbg !13523
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13524
  %8 = or i32 %7, 458752, !dbg !13524
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13524
  tail call void @z_arm_fault_init() #25, !dbg !13525
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13526
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13527
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13530
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13531
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13532
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13533
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13533
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13494, metadata !DIExpression()), !dbg !13534
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13535
  call void @z_device_state_init() #25, !dbg !13536
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13537
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13538
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13539
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13540
  unreachable, !dbg !13540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2140, metadata !DIExpression()), !dbg !13541
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13542
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13542
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2141, metadata !DIExpression()), !dbg !13541
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2141, metadata !DIExpression()), !dbg !13541
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13543
  br i1 %7, label %8, label %35, !dbg !13544

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2141, metadata !DIExpression()), !dbg !13541
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13545
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13545
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2151, metadata !DIExpression()), !dbg !13546
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13547
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13547
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13548
  call void @llvm.dbg.value(metadata i32 %14, metadata !2155, metadata !DIExpression()), !dbg !13546
  %15 = icmp eq %struct.device* %11, null, !dbg !13549
  br i1 %15, label %32, label %16, !dbg !13551

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13552
  br i1 %17, label %26, label %18, !dbg !13555

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13556
  call void @llvm.dbg.value(metadata i32 %19, metadata !2155, metadata !DIExpression()), !dbg !13546
  %20 = icmp ult i32 %19, 255, !dbg !13558
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %21, metadata !2155, metadata !DIExpression()), !dbg !13546
  %22 = trunc i32 %21 to i8, !dbg !13559
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13560
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13560
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13561
  store i8 %22, i8* %25, align 1, !dbg !13562
  br label %26, !dbg !13563

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13564
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13564
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13565
  %30 = load i8, i8* %29, align 1, !dbg !13566
  %31 = or i8 %30, 1, !dbg !13566
  store i8 %31, i8* %29, align 1, !dbg !13566
  br label %32, !dbg !13567

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13568
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2141, metadata !DIExpression()), !dbg !13541
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13543
  br i1 %34, label %8, label %35, !dbg !13544, !llvm.loop !13569

35:                                               ; preds = %32, %1
  ret void, !dbg !13571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.216(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 %1, metadata !13575, metadata !DIExpression()), !dbg !13576
  %3 = trunc i32 %1 to i8, !dbg !13577
  %4 = shl i8 %3, 4, !dbg !13577
  %5 = and i32 %0, 15, !dbg !13580
  %6 = add nsw i32 %5, -4, !dbg !13581
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13582
  store volatile i8 %4, i8* %7, align 1, !dbg !13583
  ret void, !dbg !13584
}

; Function Attrs: optsize
declare !dbg !13585 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13589, metadata !DIExpression()), !dbg !13590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13591
  store i8 1, i8* %2, align 1, !dbg !13592
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13593
  store i8 1, i8* %3, align 4, !dbg !13594
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13595
  store i32 0, i32* %4, align 4, !dbg !13596
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13597
  store i32 0, i32* %5, align 4, !dbg !13598
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13599
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13600
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13601
  ret void, !dbg !13602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13603 {
  tail call void @z_sched_init() #25, !dbg !13608
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13609
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.217, i32 0, i32 0)) #25, !dbg !13610
  call void @llvm.dbg.value(metadata i8* %1, metadata !13607, metadata !DIExpression()), !dbg !13611
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13612
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13613
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13614
  ret i8* %1, !dbg !13615
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13620, metadata !DIExpression()), !dbg !13621
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13622
  unreachable, !dbg !13623
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13624 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13626, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %1, metadata !13627, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %2, metadata !13628, metadata !DIExpression()), !dbg !13629
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13630
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13631
  tail call void @boot_banner() #25, !dbg !13632
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13633
  tail call void @z_init_static_threads() #25, !dbg !13634
  tail call void @main() #25, !dbg !13635
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13636
  %5 = and i8 %4, -2, !dbg !13636
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13636
  ret void, !dbg !13637
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13638 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13648, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.value(metadata i8* %1, metadata !13649, metadata !DIExpression()), !dbg !13650
  ret void, !dbg !13651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13652 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13654, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata i8* %1, metadata !13655, metadata !DIExpression()), !dbg !13656
  ret void, !dbg !13657
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13658 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13659, !srcloc !13666
  call void @llvm.dbg.value(metadata i32 %1, metadata !13662, metadata !DIExpression()) #23, !dbg !13667
  %2 = icmp ne i32 %1, 0, !dbg !13668
  ret i1 %2, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13670 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13671
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13672
  %3 = load i8, i8* %2, align 4, !dbg !13673
  %4 = or i8 %3, 1, !dbg !13673
  store i8 %4, i8* %2, align 4, !dbg !13673
  ret void, !dbg !13674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13675 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13676
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13677
  %3 = load i8, i8* %2, align 4, !dbg !13678
  %4 = and i8 %3, -2, !dbg !13678
  store i8 %4, i8* %2, align 4, !dbg !13678
  ret void, !dbg !13679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13680 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13681
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13682
  %3 = load i8, i8* %2, align 4, !dbg !13682
  %4 = and i8 %3, 1, !dbg !13683
  %5 = icmp ne i8 %4, 0, !dbg !13684
  ret i1 %5, !dbg !13685
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13690, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.value(metadata i8* %1, metadata !13691, metadata !DIExpression()), !dbg !13692
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13693
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13690, metadata !DIExpression()), !dbg !13692
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13696
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13697
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13698
  store i8 0, i8* %8, align 1, !dbg !13699
  ret i32 0, !dbg !13700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13705, metadata !DIExpression()), !dbg !13706
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13707
  ret i8* %2, !dbg !13708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13713, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i8* %1, metadata !13714, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i32 %2, metadata !13715, metadata !DIExpression()), !dbg !13716
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13717
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13718
  ret i32 0, !dbg !13719
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2283, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i8* %1, metadata !2284, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 %2, metadata !2285, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 0, metadata !2286, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i8 undef, metadata !2288, metadata !DIExpression()), !dbg !13720
  %4 = icmp eq i8* %1, null, !dbg !13721
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13723
  br i1 %6, label %46, label %7, !dbg !13723

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13724
  %9 = load i8, i8* %8, align 1, !dbg !13724
  call void @llvm.dbg.value(metadata i8 %9, metadata !2288, metadata !DIExpression()), !dbg !13720
  %10 = add i32 %2, -1, !dbg !13725
  call void @llvm.dbg.value(metadata i32 %10, metadata !2285, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i8 0, metadata !2289, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i8 %9, metadata !2288, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 0, metadata !2286, metadata !DIExpression()), !dbg !13720
  %11 = icmp eq i8 %9, 0, !dbg !13727
  br i1 %11, label %12, label %15, !dbg !13729

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13730
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13731
  store i8 0, i8* %14, align 1, !dbg !13732
  br label %46, !dbg !13733

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2289, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata i8 %17, metadata !2288, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 %18, metadata !2286, metadata !DIExpression()), !dbg !13720
  %19 = zext i8 %17 to i32, !dbg !13734
  %20 = zext i8 %16 to i32, !dbg !13735
  %21 = shl nuw i32 1, %20, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %21, metadata !2287, metadata !DIExpression()), !dbg !13720
  %22 = and i32 %21, %19, !dbg !13737
  %23 = icmp eq i32 %22, 0, !dbg !13739
  br i1 %23, label %42, label %24, !dbg !13740

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13741
  %26 = sub i32 %10, %18, !dbg !13742
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13743
  %28 = load i8*, i8** %27, align 4, !dbg !13743
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13744
  %30 = load i32, i32* %29, align 4, !dbg !13744
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13745
  %32 = add i32 %31, %18, !dbg !13746
  call void @llvm.dbg.value(metadata i32 %32, metadata !2286, metadata !DIExpression()), !dbg !13720
  %33 = trunc i32 %21 to i8, !dbg !13747
  %34 = xor i8 %33, -1, !dbg !13747
  %35 = and i8 %17, %34, !dbg !13747
  call void @llvm.dbg.value(metadata i8 %35, metadata !2288, metadata !DIExpression()), !dbg !13720
  %36 = icmp eq i8 %35, 0, !dbg !13748
  br i1 %36, label %12, label %37, !dbg !13750

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13751
  %39 = sub i32 %10, %32, !dbg !13753
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.220, i32 0, i32 0), i32 noundef 1) #24, !dbg !13754
  %41 = add i32 %40, %32, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %41, metadata !2286, metadata !DIExpression()), !dbg !13720
  br label %42, !dbg !13756

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13720
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13720
  call void @llvm.dbg.value(metadata i8 %44, metadata !2288, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 %43, metadata !2286, metadata !DIExpression()), !dbg !13720
  %45 = add i8 %16, 1, !dbg !13757
  call void @llvm.dbg.value(metadata i8 %45, metadata !2289, metadata !DIExpression()), !dbg !13726
  br label %15, !dbg !13729

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.221, i32 0, i32 0), %3 ], !dbg !13720
  ret i8* %47, !dbg !13758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13763, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %1, metadata !13764, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i8* %2, metadata !13765, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i32 %3, metadata !13766, metadata !DIExpression()), !dbg !13768
  %5 = icmp ult i32 %1, %3, !dbg !13769
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %6, metadata !13767, metadata !DIExpression()), !dbg !13768
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13770
  ret i32 %6, !dbg !13771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13776, metadata !DIExpression()), !dbg !13777
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13778
  ret void, !dbg !13779
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13789, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13790, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %2, metadata !13791, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13792, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8* %4, metadata !13793, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8* %5, metadata !13794, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8* %6, metadata !13795, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %7, metadata !13796, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i32 %8, metadata !13797, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata i8* %9, metadata !13798, metadata !DIExpression()), !dbg !13800
  %11 = icmp eq i32 %7, 15, !dbg !13801
  br i1 %11, label %12, label %15, !dbg !13801

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13801
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13801
  br i1 %14, label %19, label %18, !dbg !13801

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13801
  %17 = icmp ult i32 %16, 31, !dbg !13801
  br i1 %17, label %19, label %18, !dbg !13801

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 536) #25, !dbg !13805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.234, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 536) #25, !dbg !13805
  unreachable, !dbg !13805

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13807
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13808
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13809
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13810
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13811
  call void @llvm.dbg.value(metadata i8* %22, metadata !13799, metadata !DIExpression()), !dbg !13800
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13812
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13813
  store i8* null, i8** %23, align 4, !dbg !13814
  %24 = icmp eq i8* %9, null, !dbg !13815
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13817
  br i1 %24, label %29, label %26, !dbg !13818

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13819
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13821
  store i8 0, i8* %28, align 1, !dbg !13822
  br label %30, !dbg !13823

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13824
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13826
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13826
  br i1 %32, label %36, label %33, !dbg !13828

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13829
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13829
  br label %36, !dbg !13830

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13800
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13831
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13833
  ret i8* %22, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13839, metadata !DIExpression()), !dbg !13840
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13841
  ret i1 %2, !dbg !13842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13843 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13848, metadata !DIExpression()), !dbg !13849
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13850
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13851
  ret void, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13858, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i32 %1, metadata !13859, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i32 %2, metadata !13860, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i32 %3, metadata !13861, metadata !DIExpression()), !dbg !13862
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13863
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13864
  %6 = trunc i32 %3 to i8, !dbg !13865
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13866
  store i8 %6, i8* %7, align 4, !dbg !13867
  %8 = trunc i32 %2 to i8, !dbg !13868
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13869
  store i8 %8, i8* %9, align 1, !dbg !13870
  %10 = trunc i32 %1 to i8, !dbg !13871
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13872
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13872
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13872
  store i8 %10, i8* %13, align 2, !dbg !13873
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13874
  store i8 0, i8* %14, align 1, !dbg !13875
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13876
  ret void, !dbg !13877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13882, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13883, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i32 %2, metadata !13884, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i32 0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %4 = add i32 %2, 7, !dbg !13891
  %5 = and i32 %4, -8, !dbg !13891
  %6 = add i32 %5, 64, !dbg !13891
  call void @llvm.dbg.value(metadata i32 %6, metadata !13885, metadata !DIExpression()), !dbg !13890
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.235(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13893
  call void @llvm.dbg.value(metadata i8* %7, metadata !13888, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i32 %5, metadata !13886, metadata !DIExpression()), !dbg !13890
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13894
  call void @llvm.dbg.value(metadata i8* %8, metadata !13887, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i32 0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %9 = ptrtoint i8* %7 to i32, !dbg !13895
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13896
  store i32 %9, i32* %10, align 4, !dbg !13897
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13898
  store i32 %5, i32* %11, align 4, !dbg !13899
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13900
  store i32 0, i32* %12, align 4, !dbg !13901
  call void @llvm.dbg.value(metadata i8* %8, metadata !13887, metadata !DIExpression()), !dbg !13890
  ret i8* %8, !dbg !13902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.235(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13903 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13907, metadata !DIExpression()), !dbg !13908
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13909
  ret i8* %2, !dbg !13910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13911 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13916, metadata !DIExpression()), !dbg !13917
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13918
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13919
  ret void, !dbg !13920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13921 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13923, metadata !DIExpression()), !dbg !13924
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13925
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13926
  ret void, !dbg !13927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13928 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13932, metadata !DIExpression()), !dbg !13933
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13934
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13935
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13936
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13939 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13944, metadata !DIExpression()), !dbg !13945
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13946
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13947
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13948
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13949
  ret void, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13951 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13968, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13959, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13960, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 %2, metadata !13961, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13962, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i8* %4, metadata !13963, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i8* %5, metadata !13964, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i8* %6, metadata !13965, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 %7, metadata !13966, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 %8, metadata !13967, metadata !DIExpression()), !dbg !13969
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13970, !srcloc !13666
  call void @llvm.dbg.value(metadata i32 %11, metadata !13662, metadata !DIExpression()) #23, !dbg !13975
  %12 = icmp eq i32 %11, 0, !dbg !13976
  br i1 %12, label %14, label %13, !dbg !13977

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.238, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 647) #25, !dbg !13978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.239, i32 0, i32 0)) #25, !dbg !13978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 647) #25, !dbg !13978
  unreachable, !dbg !13978

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13968, metadata !DIExpression()), !dbg !13969
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13980
  %17 = icmp eq i64 %15, -1, !dbg !13981
  br i1 %17, label %19, label %18, !dbg !13983

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13984
  br label %19, !dbg !13986

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13988 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13993, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13992, metadata !DIExpression()), !dbg !13994
  %4 = icmp eq i64 %3, 0, !dbg !13995
  br i1 %4, label %5, label %6, !dbg !13997

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13998
  br label %7, !dbg !14000

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14001
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14008, metadata !DIExpression()), !dbg !14009
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14010, !srcloc !14012
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14013
  ret void, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14015 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14018, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14017, metadata !DIExpression()), !dbg !14019
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14020
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14021
  ret void, !dbg !14022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14023 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14025, metadata !DIExpression()), !dbg !14045
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14046

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 750) #25, !dbg !14050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.243, i32 0, i32 0)) #25, !dbg !14050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 750) #25, !dbg !14050
  unreachable, !dbg !14050

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14025, metadata !DIExpression()), !dbg !14045
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14053
  br i1 %4, label %6, label %5, !dbg !14054

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14055
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14043, metadata !DIExpression()), !dbg !14056
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14057

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14061
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14061
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14063
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14063
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14064
  %12 = load i32, i32* %11, align 4, !dbg !14064
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14065
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14065
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14066
  %16 = load i8*, i8** %15, align 4, !dbg !14066
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14067
  %18 = load i8*, i8** %17, align 4, !dbg !14067
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14068
  %20 = load i8*, i8** %19, align 4, !dbg !14068
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14069
  %22 = load i32, i32* %21, align 4, !dbg !14069
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14070
  %24 = load i32, i32* %23, align 4, !dbg !14070
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14071
  %26 = load i8*, i8** %25, align 4, !dbg !14071
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14072
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14073
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14074
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14075
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14075
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14076
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14025, metadata !DIExpression()), !dbg !14045
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14077
  br i1 %32, label %1, label %2, !dbg !14046, !llvm.loop !14078

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 781) #25, !dbg !14080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.243, i32 0, i32 0)) #25, !dbg !14080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.233, i32 0, i32 0), i32 noundef 781) #25, !dbg !14080
  unreachable, !dbg !14080

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14043, metadata !DIExpression()), !dbg !14056
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14083
  br i1 %36, label %38, label %37, !dbg !14084

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14085
  ret void, !dbg !14086

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14087
  %40 = load i32, i32* %39, align 4, !dbg !14087
  %41 = icmp eq i32 %40, -1, !dbg !14090
  br i1 %41, label %50, label %42, !dbg !14091

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14092
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14092
  %45 = icmp sgt i32 %40, 0, !dbg !14094
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14094
  %47 = zext i32 %46 to i64, !dbg !14094
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14094
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14095
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14095
  br label %50, !dbg !14096

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14097
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14043, metadata !DIExpression()), !dbg !14056
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14098
  br i1 %52, label %33, label %34, !dbg !14057, !llvm.loop !14099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14101 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14106, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i64 %0, metadata !14108, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 1000, metadata !14113, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i32 10000, metadata !14114, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 1, metadata !14115, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 0, metadata !14116, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 1, metadata !14117, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 0, metadata !14118, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 1, metadata !14119, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i8 0, metadata !14120, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i64 0, metadata !14121, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata i64 0, metadata !14121, metadata !DIExpression()), !dbg !14125
  %2 = mul i64 %0, 10, !dbg !14127
  ret i64 %2, !dbg !14133
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14134 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14136, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.value(metadata i8* %1, metadata !14137, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.value(metadata i8* %2, metadata !14138, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.value(metadata i8* %3, metadata !14139, metadata !DIExpression()), !dbg !14140
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14141
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14142
  %7 = load i8, i8* %6, align 4, !dbg !14143
  %8 = or i8 %7, 4, !dbg !14143
  store i8 %8, i8* %6, align 4, !dbg !14143
  tail call void @z_thread_essential_clear() #24, !dbg !14144
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14145
  unreachable, !dbg !14145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14146 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14151, metadata !DIExpression()), !dbg !14153
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14154
  %3 = load i32, i32* %2, align 4, !dbg !14154
  call void @llvm.dbg.value(metadata i32 %3, metadata !14152, metadata !DIExpression()), !dbg !14153
  %4 = icmp eq i32 %3, 0, !dbg !14155
  br i1 %4, label %10, label %5, !dbg !14157

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14158
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14161
  %8 = zext i8 %7 to i32, !dbg !14162
  %9 = icmp eq i32 %6, %8, !dbg !14163
  br i1 %9, label %11, label %10, !dbg !14164

10:                                               ; preds = %5, %1
  br label %11, !dbg !14165

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14153
  ret i1 %12, !dbg !14166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14167 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14169, metadata !DIExpression()), !dbg !14170
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14171
  %3 = load i32, i32* %2, align 4, !dbg !14171
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14173
  %5 = zext i8 %4 to i32, !dbg !14174
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14175
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14176
  %8 = or i32 %7, %5, !dbg !14177
  %9 = icmp eq i32 %3, %8, !dbg !14178
  br i1 %9, label %10, label %11, !dbg !14179

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14180
  br label %11, !dbg !14181

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14183 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14187, metadata !DIExpression()), !dbg !14188
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14189
  %3 = zext i8 %2 to i32, !dbg !14190
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14191
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14192
  %6 = or i32 %5, %3, !dbg !14193
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14194
  store i32 %6, i32* %7, align 4, !dbg !14195
  ret void, !dbg !14196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()), !dbg !14202
  ret i32 -134, !dbg !14203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14208, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.value(metadata i32 %1, metadata !14209, metadata !DIExpression()), !dbg !14210
  ret i32 -134, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14220, metadata !DIExpression()), !dbg !14221
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14222
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14224
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14221
  ret i32 %6, !dbg !14225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14226 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14230, metadata !DIExpression()), !dbg !14231
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14232
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14231
  ret i32 %3, !dbg !14234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14235 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14237
  ret void, !dbg !14238
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14241, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata i8* %1, metadata !14242, metadata !DIExpression()), !dbg !14244
  call void @llvm.dbg.value(metadata i8* %2, metadata !14243, metadata !DIExpression()), !dbg !14244
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14245
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14245
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14245
  %7 = load i8, i8* %6, align 2, !dbg !14245
  %8 = icmp sgt i8 %7, -1, !dbg !14245
  br i1 %8, label %10, label %9, !dbg !14248

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 39) #25, !dbg !14249
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 39) #25, !dbg !14249
  unreachable, !dbg !14249

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14251, !srcloc !14258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()) #23, !dbg !14259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14255, metadata !DIExpression()) #23, !dbg !14259
  tail call fastcc void @k_cpu_idle() #24, !dbg !14260
  br label %10, !dbg !14261, !llvm.loop !14262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14264 {
  tail call void @arch_cpu_idle() #25, !dbg !14265
  ret void, !dbg !14266
}

; Function Attrs: optsize
declare !dbg !14267 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !14268 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14279, metadata !DIExpression()), !dbg !14280
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14281
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !14282
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14283
  store i32 0, i32* %3, align 4, !dbg !14284
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14285
  tail call fastcc void @z_waitq_init.255(%struct._wait_q_t* noundef %4) #24, !dbg !14286
  ret i32 0, !dbg !14287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.255(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !14288 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14292, metadata !DIExpression()), !dbg !14293
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14294
  tail call fastcc void @sys_dlist_init.256(%struct._dnode* noundef %2) #24, !dbg !14295
  ret void, !dbg !14296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.256(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14297 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14302, metadata !DIExpression()), !dbg !14303
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14304
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14305
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14306
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14307
  ret void, !dbg !14308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14309 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14318, metadata !DIExpression()), !dbg !14330
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14317, metadata !DIExpression()), !dbg !14330
  call void @llvm.dbg.value(metadata i8 0, metadata !14325, metadata !DIExpression()), !dbg !14330
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14331, !srcloc !14340
  call void @llvm.dbg.value(metadata i32 %4, metadata !14334, metadata !DIExpression()) #23, !dbg !14341
  %5 = icmp eq i32 %4, 0, !dbg !14342
  br i1 %5, label %7, label %6, !dbg !14343

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 101) #25, !dbg !14344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.262, i32 0, i32 0)) #25, !dbg !14344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 101) #25, !dbg !14344
  unreachable, !dbg !14344

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14346, metadata !DIExpression()) #23, !dbg !14353
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14355, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !14359, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata i32 undef, metadata !14352, metadata !DIExpression()) #23, !dbg !14353
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14363
  br i1 %9, label %11, label %10, !dbg !14366

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14367
  unreachable, !dbg !14367

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !14355
  call void @llvm.dbg.value(metadata i32 %12, metadata !14358, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %12, metadata !14352, metadata !DIExpression()) #23, !dbg !14353
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %12, metadata !14320, metadata !DIExpression()), !dbg !14330
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14370
  %14 = load i32, i32* %13, align 4, !dbg !14370
  %15 = icmp eq i32 %14, 0, !dbg !14370
  br i1 %15, label %21, label %16, !dbg !14370

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14370
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14370
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14370
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !14370
  br i1 %20, label %27, label %39, !dbg !14372, !prof !14373

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14374
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !14376
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !14376
  %25 = load i8, i8* %24, align 2, !dbg !14376
  %26 = sext i8 %25 to i32, !dbg !14374
  br label %30, !dbg !14377

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14378
  %29 = load i32, i32* %28, align 4, !dbg !14378
  br label %30, !dbg !14377

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !14379
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !14377
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14380
  store i32 %32, i32* %33, align 4, !dbg !14381
  %34 = add i32 %14, 1, !dbg !14382
  store i32 %34, i32* %13, align 4, !dbg !14382
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14383
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !14384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #23, !dbg !14391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14390, metadata !DIExpression()) #23, !dbg !14391
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14393
  br i1 %36, label %38, label %37, !dbg !14396

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14397
  unreachable, !dbg !14397

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !14385, metadata !DIExpression()) #23, !dbg !14391
  call void @llvm.dbg.value(metadata i32 %12, metadata !14399, metadata !DIExpression()) #23, !dbg !14402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14404, !srcloc !14405
  br label %97, !dbg !14406

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !14407
  br i1 %40, label %41, label %45, !dbg !14409, !prof !14410

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14390, metadata !DIExpression()) #23, !dbg !14411
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14414
  br i1 %42, label %44, label %43, !dbg !14415

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14416
  unreachable, !dbg !14416

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !14385, metadata !DIExpression()) #23, !dbg !14411
  call void @llvm.dbg.value(metadata i32 %12, metadata !14399, metadata !DIExpression()) #23, !dbg !14417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14419, !srcloc !14405
  br label %97, !dbg !14420

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !14421
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !14421
  %48 = load i8, i8* %47, align 2, !dbg !14421
  %49 = sext i8 %48 to i32, !dbg !14422
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !14423
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !14423
  %52 = load i8, i8* %51, align 2, !dbg !14423
  %53 = sext i8 %52 to i32, !dbg !14424
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !14425
  call void @llvm.dbg.value(metadata i32 %54, metadata !14319, metadata !DIExpression()), !dbg !14330
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !14426
  br i1 %55, label %56, label %58, !dbg !14428

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !14429
  call void @llvm.dbg.value(metadata i1 %57, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14330
  br label %58, !dbg !14431

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !14325, metadata !DIExpression()), !dbg !14330
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14432
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14433
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.263, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !14433
  call void @llvm.dbg.value(metadata i32 %62, metadata !14326, metadata !DIExpression()), !dbg !14330
  %63 = icmp eq i32 %62, 0, !dbg !14434
  br i1 %63, label %97, label %64, !dbg !14436

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14346, metadata !DIExpression()) #23, !dbg !14437
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14439, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata i32 undef, metadata !14359, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata i32 undef, metadata !14352, metadata !DIExpression()) #23, !dbg !14437
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14442
  br i1 %66, label %68, label %67, !dbg !14443

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14444
  unreachable, !dbg !14444

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !14439
  call void @llvm.dbg.value(metadata i32 %69, metadata !14358, metadata !DIExpression()) #23, !dbg !14441
  call void @llvm.dbg.value(metadata i32 %69, metadata !14352, metadata !DIExpression()) #23, !dbg !14437
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %69, metadata !14320, metadata !DIExpression()), !dbg !14330
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14446
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !14446
  br i1 %71, label %90, label %72, !dbg !14447, !prof !14410

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !14448
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !14327, metadata !DIExpression()), !dbg !14449
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !14450
  br i1 %74, label %83, label %75, !dbg !14451

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !14452
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !14452
  %78 = load i8, i8* %77, align 2, !dbg !14452
  %79 = sext i8 %78 to i32, !dbg !14453
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14454
  %81 = load i32, i32* %80, align 4, !dbg !14454
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !14455
  br label %86, !dbg !14451

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14456
  %85 = load i32, i32* %84, align 4, !dbg !14456
  br label %86, !dbg !14451

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !14451
  call void @llvm.dbg.value(metadata i32 %87, metadata !14319, metadata !DIExpression()), !dbg !14330
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !14457
  %89 = select i1 %88, i1 true, i1 %59, !dbg !14458
  call void @llvm.dbg.value(metadata i1 %89, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14330
  call void @llvm.dbg.value(metadata i8 poison, metadata !14325, metadata !DIExpression()), !dbg !14330
  br i1 %89, label %91, label %93, !dbg !14459

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !14325, metadata !DIExpression()), !dbg !14330
  br i1 %59, label %91, label %93, !dbg !14459

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !14460
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.263, [1 x i32] %92) #25, !dbg !14460
  br label %97, !dbg !14463

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14390, metadata !DIExpression()) #23, !dbg !14464
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14467
  br i1 %94, label %96, label %95, !dbg !14468

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14469
  unreachable, !dbg !14469

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !14385, metadata !DIExpression()) #23, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %69, metadata !14399, metadata !DIExpression()) #23, !dbg !14470
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !14472, !srcloc !14405
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !14330
  ret i32 %98, !dbg !14473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14478, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.value(metadata i32 %1, metadata !14479, metadata !DIExpression()), !dbg !14481
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !14482
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %4, metadata !14480, metadata !DIExpression()), !dbg !14481
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !14483
  call void @llvm.dbg.value(metadata i32 %5, metadata !14480, metadata !DIExpression()), !dbg !14481
  ret i32 %5, !dbg !14484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14489, metadata !DIExpression()), !dbg !14491
  call void @llvm.dbg.value(metadata i32 %1, metadata !14490, metadata !DIExpression()), !dbg !14491
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14492
  ret i1 %3, !dbg !14493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !14494 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14498, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 %1, metadata !14499, metadata !DIExpression()), !dbg !14500
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14501
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !14501
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14503
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14503
  %7 = load i8, i8* %6, align 2, !dbg !14503
  %8 = sext i8 %7 to i32, !dbg !14504
  %9 = icmp eq i32 %8, %1, !dbg !14505
  br i1 %9, label %12, label %10, !dbg !14506

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !14507
  br label %12, !dbg !14509

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !14500
  ret i1 %13, !dbg !14510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !14511 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14515, metadata !DIExpression()), !dbg !14516
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14517
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !14518
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14519
  ret %struct.k_thread* %4, !dbg !14520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14521 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14525, metadata !DIExpression()), !dbg !14526
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14527
  br i1 %2, label %6, label %3, !dbg !14527

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14528
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14528
  br label %6, !dbg !14527

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14527
  ret %struct._dnode* %7, !dbg !14529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14530 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14534, metadata !DIExpression()), !dbg !14535
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14536
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14536
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14537
  ret i1 %4, !dbg !14538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14541, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata i32 %1, metadata !14542, metadata !DIExpression()), !dbg !14543
  %3 = icmp slt i32 %0, %1, !dbg !14544
  ret i1 %3, !dbg !14545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14548, metadata !DIExpression()), !dbg !14549
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !14550
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14550
  ret i32 %3, !dbg !14551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14556, metadata !DIExpression()), !dbg !14557
  %2 = icmp sgt i32 %0, -128, !dbg !14558
  ret i1 %2, !dbg !14559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14560 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14562, metadata !DIExpression()), !dbg !14566
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14567, !srcloc !14340
  call void @llvm.dbg.value(metadata i32 %2, metadata !14334, metadata !DIExpression()) #23, !dbg !14572
  %3 = icmp eq i32 %2, 0, !dbg !14573
  br i1 %3, label %5, label %4, !dbg !14574

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 205) #25, !dbg !14575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.262, i32 0, i32 0)) #25, !dbg !14575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 205) #25, !dbg !14575
  unreachable, !dbg !14575

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14577
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14577
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14577
  br i1 %8, label %41, label %9, !dbg !14579

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14580
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14580
  br i1 %11, label %12, label %41, !dbg !14582

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14583
  %14 = load i32, i32* %13, align 4, !dbg !14583
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14586

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 229) #25, !dbg !14587
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 229) #25, !dbg !14587
  unreachable, !dbg !14587

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14589
  store i32 %17, i32* %13, align 4, !dbg !14589
  br label %41, !dbg !14592

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14346, metadata !DIExpression()) #23, !dbg !14593
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14595, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14359, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14352, metadata !DIExpression()) #23, !dbg !14593
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14598
  br i1 %20, label %22, label %21, !dbg !14599

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14600
  unreachable, !dbg !14600

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14595
  call void @llvm.dbg.value(metadata i32 %23, metadata !14358, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %23, metadata !14352, metadata !DIExpression()) #23, !dbg !14593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %23, metadata !14564, metadata !DIExpression()), !dbg !14566
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14602
  %25 = load i32, i32* %24, align 4, !dbg !14602
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !14603
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14604
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14563, metadata !DIExpression()), !dbg !14566
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14606
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14607
  br i1 %29, label %37, label %30, !dbg !14609

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14610
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14610
  %33 = load i8, i8* %32, align 2, !dbg !14610
  %34 = sext i8 %33 to i32, !dbg !14612
  store i32 %34, i32* %24, align 4, !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14614, metadata !DIExpression()), !dbg !14620
  call void @llvm.dbg.value(metadata i32 0, metadata !14619, metadata !DIExpression()), !dbg !14620
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !14622
  store i32 0, i32* %35, align 4, !dbg !14623
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !14624
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14625
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.263, [1 x i32] %36) #25, !dbg !14625
  br label %41, !dbg !14626

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14385, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.263, metadata !14390, metadata !DIExpression()) #23, !dbg !14629
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14631
  br i1 %38, label %40, label %39, !dbg !14632

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.263) #25, !dbg !14633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14633
  unreachable, !dbg !14633

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !14385, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata i32 %23, metadata !14399, metadata !DIExpression()) #23, !dbg !14634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14636, !srcloc !14405
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14566
  ret i32 %42, !dbg !14637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14643, metadata !DIExpression()), !dbg !14646
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14647
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14647
  %5 = load i8, i8* %4, align 2, !dbg !14647
  call void @llvm.dbg.value(metadata i8 %5, metadata !14644, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14646
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14648
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14648
  %8 = load i8, i8* %7, align 2, !dbg !14648
  call void @llvm.dbg.value(metadata i8 %8, metadata !14645, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14646
  %9 = icmp eq i8 %8, %5, !dbg !14649
  %10 = sext i8 %5 to i32, !dbg !14651
  %11 = sext i8 %8 to i32, !dbg !14651
  %12 = sub nsw i32 %11, %10, !dbg !14651
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14651
  ret i32 %13, !dbg !14652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14657, metadata !DIExpression()), !dbg !14658
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14659
  %3 = icmp eq i32 %2, 0, !dbg !14661
  br i1 %3, label %8, label %4, !dbg !14662

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14663
  %6 = add i32 %5, %2, !dbg !14665
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14666
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14667
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14668
  br label %8, !dbg !14669

8:                                                ; preds = %4, %1
  ret void, !dbg !14670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14675, metadata !DIExpression()), !dbg !14677
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14678
  call void @llvm.dbg.value(metadata i32 %1, metadata !14676, metadata !DIExpression()), !dbg !14677
  ret i32 %1, !dbg !14679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14684, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 %1, metadata !14685, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 0, metadata !14686, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !14702
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14704, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14702
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14712
  br i1 %4, label %6, label %5, !dbg !14715

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !14716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !14716
  unreachable, !dbg !14716

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14702
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14692, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14686, metadata !DIExpression()), !dbg !14694
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14719
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14722
  %8 = icmp sgt i32 %0, 0, !dbg !14723
  %9 = icmp sgt i32 %7, 2, !dbg !14725
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14725
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14725
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14726
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14727
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !14735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !14735
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14737
  br i1 %12, label %14, label %13, !dbg !14740

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14741
  unreachable, !dbg !14741

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14704
  call void @llvm.dbg.value(metadata i32 %15, metadata !14707, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %15, metadata !14701, metadata !DIExpression()) #23, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %15, metadata !14692, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !14735
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !14746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14748, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !14686, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14686, metadata !DIExpression()), !dbg !14694
  ret void, !dbg !14750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14753, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.value(metadata i32 %0, metadata !14755, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  call void @llvm.dbg.value(metadata i32 1000, metadata !14758, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i32 10000, metadata !14759, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i8 1, metadata !14760, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i1 true, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  call void @llvm.dbg.value(metadata i1 true, metadata !14762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  call void @llvm.dbg.value(metadata i8 0, metadata !14763, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i1 true, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  call void @llvm.dbg.value(metadata i1 false, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !14770
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !14770
  %2 = mul i32 %0, 10, !dbg !14772
  ret i32 %2, !dbg !14778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14781, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !14784
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14786, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !14784
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14789
  br i1 %3, label %5, label %4, !dbg !14790

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !14791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !14791
  unreachable, !dbg !14791

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %6, metadata !14707, metadata !DIExpression()) #23, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %6, metadata !14701, metadata !DIExpression()) #23, !dbg !14784
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %6, metadata !14782, metadata !DIExpression()), !dbg !14783
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14793
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14795
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14796
  br i1 %9, label %10, label %14, !dbg !14797

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !14800
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14802
  br i1 %11, label %13, label %12, !dbg !14803

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14804
  unreachable, !dbg !14804

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !14805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14807, !srcloc !14749
  br label %33, !dbg !14808

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14809
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14810
  %16 = icmp eq i32 %15, 0, !dbg !14810
  br i1 %16, label %27, label %17, !dbg !14812

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14813
  br i1 %18, label %19, label %27, !dbg !14814

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14815
  %21 = icmp sgt i32 %20, %0, !dbg !14818
  br i1 %21, label %25, label %22, !dbg !14819

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14820
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %24, metadata !14782, metadata !DIExpression()), !dbg !14783
  br label %28, !dbg !14822

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14823
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14823
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14825
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14783
  call void @llvm.dbg.value(metadata i32 %29, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !14827
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14829
  br i1 %30, label %32, label %31, !dbg !14830

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !14831
  unreachable, !dbg !14831

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14729, metadata !DIExpression()) #23, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %29, metadata !14743, metadata !DIExpression()) #23, !dbg !14832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14834, !srcloc !14749
  br label %33, !dbg !14835

33:                                               ; preds = %32, %13
  ret void, !dbg !14835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14840, metadata !DIExpression()), !dbg !14842
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14843
  %3 = icmp eq i32 %2, 0, !dbg !14843
  br i1 %3, label %16, label %4, !dbg !14844

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14845
  br i1 %5, label %16, label %6, !dbg !14846

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14847
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14847
  %9 = load i8, i8* %8, align 2, !dbg !14847
  %10 = sext i8 %9 to i32, !dbg !14848
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14849
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.285(i32 noundef %10, i32 noundef %11) #24, !dbg !14850
  br i1 %12, label %16, label %13, !dbg !14851

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14852
  %15 = xor i1 %14, true, !dbg !14853
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14842
  call void @llvm.dbg.value(metadata i1 %17, metadata !14841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14842
  ret i1 %17, !dbg !14854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14855 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14861
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14862
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14860, metadata !DIExpression()), !dbg !14861
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14863
  br i1 %3, label %5, label %4, !dbg !14865

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14866
  br label %5, !dbg !14868

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14859, metadata !DIExpression()), !dbg !14861
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14869
  ret i32 %6, !dbg !14870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14873, metadata !DIExpression()), !dbg !14875
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14876
  %3 = load i8, i8* %2, align 1, !dbg !14876
  call void @llvm.dbg.value(metadata i8 %3, metadata !14874, metadata !DIExpression()), !dbg !14875
  %4 = and i8 %3, 31, !dbg !14877
  %5 = icmp ne i8 %4, 0, !dbg !14878
  ret i1 %5, !dbg !14879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14883
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14884
  br i1 %2, label %3, label %7, !dbg !14886

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !14890
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14893
  %5 = load i8, i8* %4, align 1, !dbg !14894
  %6 = and i8 %5, 127, !dbg !14894
  store i8 %6, i8* %4, align 1, !dbg !14894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !14898
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14902
  br label %7, !dbg !14903

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !14907
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14909
  %9 = load i8, i8* %8, align 1, !dbg !14910
  %10 = or i8 %9, -128, !dbg !14910
  store i8 %10, i8* %8, align 1, !dbg !14910
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !14914
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !14926
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14928
  br i1 %11, label %12, label %13, !dbg !14931

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !14932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !14932
  unreachable, !dbg !14932

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14934
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14936
  br i1 %15, label %26, label %16, !dbg !14934

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14939
  %20 = icmp sgt i32 %19, 0, !dbg !14942
  br i1 %20, label %21, label %23, !dbg !14943

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14944
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14946
  br label %28, !dbg !14947

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14936
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14925, metadata !DIExpression()) #23, !dbg !14926
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14936
  br i1 %25, label %26, label %16, !dbg !14934, !llvm.loop !14948

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14950
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14951
  br label %28, !dbg !14952

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14953
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14954
  %31 = zext i1 %30 to i32, !dbg !14954
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14955
  ret void, !dbg !14956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14959, metadata !DIExpression()), !dbg !14960
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14961
  ret i1 %2, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14963 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14966, metadata !DIExpression()), !dbg !14967
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14968
  br i1 %3, label %4, label %5, !dbg !14971

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14972
  unreachable, !dbg !14972

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14974
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14975
  ret void, !dbg !14976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14979, metadata !DIExpression()), !dbg !14980
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14981
  ret i1 %2, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14987, metadata !DIExpression()), !dbg !14988
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.283(%struct._dnode* noundef %0) #24, !dbg !14989
  br i1 %2, label %6, label %3, !dbg !14989

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14990
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14990
  br label %6, !dbg !14989

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14989
  ret %struct._dnode* %7, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14996, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14997, metadata !DIExpression()), !dbg !15000
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15001
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15001
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14998, metadata !DIExpression()), !dbg !15000
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15002
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15003
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15004
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15005
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15006
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15007
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15008
  ret void, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15014, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15015, metadata !DIExpression()), !dbg !15016
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15017
  br i1 %3, label %6, label %4, !dbg !15018

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15019
  br label %6, !dbg !15018

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15018
  ret %struct._dnode* %7, !dbg !15020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15025, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15026, metadata !DIExpression()), !dbg !15028
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15029
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15029
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15027, metadata !DIExpression()), !dbg !15028
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15030
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15031
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15032
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15033
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15034
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15035
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15040, metadata !DIExpression()), !dbg !15042
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15043
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15050, metadata !DIExpression()) #23, !dbg !15052
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15053
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15054
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15054
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15055, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %0, metadata !15060, metadata !DIExpression()) #23, !dbg !15061
  %6 = icmp eq i32 %0, 0, !dbg !15064
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15066
  br i1 %6, label %8, label %18, !dbg !15067

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15068
  br i1 %9, label %10, label %11, !dbg !15071

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 137) #25, !dbg !15072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !15072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 137) #25, !dbg !15072
  unreachable, !dbg !15072

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !15074
  br i1 %12, label %18, label %13, !dbg !15076

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15077
  br i1 %14, label %18, label %15, !dbg !15079

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !15080
  %17 = icmp eq i32 %16, 0, !dbg !15080
  br i1 %17, label %21, label %18, !dbg !15082

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15083
  br i1 %19, label %21, label %20, !dbg !15086

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15087
  br label %21, !dbg !15089

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15066
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15066
  ret void, !dbg !15090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15091 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15095, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15096, metadata !DIExpression()), !dbg !15098
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef %0) #24, !dbg !15099
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15097, metadata !DIExpression()), !dbg !15098
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15096, metadata !DIExpression()), !dbg !15098
  ret %struct.k_thread* %3, !dbg !15100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15103, metadata !DIExpression()), !dbg !15104
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15105
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15106
  %4 = xor i1 %3, true, !dbg !15107
  ret i1 %4, !dbg !15108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15111, metadata !DIExpression()), !dbg !15112
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15113
  %3 = load i16, i16* %2, align 2, !dbg !15113
  %4 = icmp ult i16 %3, 128, !dbg !15114
  %5 = zext i1 %4 to i32, !dbg !15114
  ret i32 %5, !dbg !15115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15116 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15122, metadata !DIExpression()), !dbg !15123
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15124
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15125
  %4 = xor i1 %3, true, !dbg !15126
  ret i1 %4, !dbg !15127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15128 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15134, metadata !DIExpression()), !dbg !15135
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15136
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15136
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15137
  ret i1 %4, !dbg !15138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15139 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15141, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15142, metadata !DIExpression()), !dbg !15143
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15144
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15144
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15145
  br i1 %5, label %9, label %6, !dbg !15146

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15147
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15147
  br label %9, !dbg !15146

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15146
  ret %struct._dnode* %10, !dbg !15148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.283(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15153, metadata !DIExpression()), !dbg !15154
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15155
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15155
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15156
  ret i1 %4, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15162, metadata !DIExpression()), !dbg !15165
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15166
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15166
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15163, metadata !DIExpression()), !dbg !15165
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15167
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15167
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15164, metadata !DIExpression()), !dbg !15165
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15168
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15169
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15170
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15171
  tail call fastcc void @sys_dnode_init.284(%struct._dnode* noundef %0) #24, !dbg !15172
  ret void, !dbg !15173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.284(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15174 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15176, metadata !DIExpression()), !dbg !15177
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15178
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15179
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15180
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15181
  ret void, !dbg !15182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15187, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i32 %1, metadata !15188, metadata !DIExpression()), !dbg !15189
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15190
  %4 = load i8, i8* %3, align 1, !dbg !15190
  %5 = zext i8 %4 to i32, !dbg !15191
  %6 = and i32 %5, %1, !dbg !15192
  %7 = icmp ne i32 %6, 0, !dbg !15193
  ret i1 %7, !dbg !15194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.285(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15197, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata i32 %1, metadata !15198, metadata !DIExpression()), !dbg !15199
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.286(i32 noundef %0, i32 noundef %1) #24, !dbg !15200
  ret i1 %3, !dbg !15201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.286(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15204, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.value(metadata i32 %1, metadata !15205, metadata !DIExpression()), !dbg !15206
  %3 = icmp slt i32 %0, %1, !dbg !15207
  ret i1 %3, !dbg !15208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15211, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 0, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15217
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15219, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15217
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15222
  br i1 %3, label %5, label %4, !dbg !15223

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15224
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15224
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15224
  unreachable, !dbg !15224

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15221
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15217
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !15214, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15216
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15231
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15233
  br i1 %6, label %8, label %7, !dbg !15234

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15235
  unreachable, !dbg !15235

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %9, metadata !14707, metadata !DIExpression()) #23, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %9, metadata !14701, metadata !DIExpression()) #23, !dbg !15217
  call void @llvm.dbg.value(metadata i32 %9, metadata !15214, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15231
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15238, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15212, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15216
  ret void, !dbg !15239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15242, metadata !DIExpression()), !dbg !15243
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15244
  br i1 %2, label %27, label %3, !dbg !15246

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15247
  br i1 %4, label %5, label %27, !dbg !15248

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !15249
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15252
  %7 = load i8, i8* %6, align 1, !dbg !15253
  %8 = or i8 %7, -128, !dbg !15253
  store i8 %8, i8* %6, align 1, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !15256
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15256
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15258
  br i1 %9, label %10, label %11, !dbg !15259

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !15260
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !15260
  unreachable, !dbg !15260

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15261
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14925, metadata !DIExpression()) #23, !dbg !15256
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15262
  br i1 %13, label %24, label %14, !dbg !15261

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14925, metadata !DIExpression()) #23, !dbg !15256
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15263
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14925, metadata !DIExpression()) #23, !dbg !15256
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15264
  %18 = icmp sgt i32 %17, 0, !dbg !15265
  br i1 %18, label %19, label %21, !dbg !15266

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15267
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15268
  br label %26, !dbg !15269

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15262
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14925, metadata !DIExpression()) #23, !dbg !15256
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15262
  br i1 %23, label %24, label %14, !dbg !15261, !llvm.loop !15270

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15272
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15273
  br label %26, !dbg !15274

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15275
  br label %27, !dbg !15276

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15280, metadata !DIExpression()), !dbg !15281
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15282
  br i1 %2, label %6, label %3, !dbg !15283

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15284
  %5 = xor i1 %4, true, !dbg !15283
  br label %6, !dbg !15283

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15288, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 0, metadata !15289, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15294
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15296, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15294
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15299
  br i1 %3, label %5, label %4, !dbg !15300

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15301
  unreachable, !dbg !15301

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15294
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()), !dbg !15293
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15306
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15308
  br i1 %6, label %8, label %7, !dbg !15309

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15310
  unreachable, !dbg !15310

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %9, metadata !14707, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata i32 %9, metadata !14701, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %9, metadata !15291, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15313, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15289, metadata !DIExpression()), !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15289, metadata !DIExpression()), !dbg !15293
  ret void, !dbg !15314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15317, metadata !DIExpression()), !dbg !15319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15320
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15322, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15320
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15325
  br i1 %3, label %5, label %4, !dbg !15326

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15327
  unreachable, !dbg !15327

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %6, metadata !14707, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %6, metadata !14701, metadata !DIExpression()) #23, !dbg !15320
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %6, metadata !15318, metadata !DIExpression()), !dbg !15319
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15329
  br i1 %7, label %8, label %12, !dbg !15331

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15332
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15335
  br i1 %9, label %11, label %10, !dbg !15336

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15337
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15337
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15337
  unreachable, !dbg !15337

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !15338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15340, !srcloc !14749
  br label %14, !dbg !15341

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.291(%struct.k_thread* noundef %0) #24, !dbg !15342
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15343
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15344
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15344
  br label %14, !dbg !15345

14:                                               ; preds = %12, %11
  ret void, !dbg !15345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()), !dbg !15349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15350
  %3 = load i8, i8* %2, align 1, !dbg !15350
  %4 = and i8 %3, 4, !dbg !15351
  %5 = icmp eq i8 %4, 0, !dbg !15352
  ret i1 %5, !dbg !15353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.291(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15358
  %3 = load i8, i8* %2, align 1, !dbg !15359
  %4 = and i8 %3, -5, !dbg !15359
  store i8 %4, i8* %2, align 1, !dbg !15359
  ret void, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15361 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15364, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15363, metadata !DIExpression()), !dbg !15365
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15366
  br i1 %4, label %5, label %12, !dbg !15368

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15369
  br i1 %6, label %7, label %12, !dbg !15370

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15376, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15380, metadata !DIExpression()) #23, !dbg !15385
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15387
  br i1 %8, label %10, label %9, !dbg !15390

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15391
  unreachable, !dbg !15391

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15371, metadata !DIExpression()) #23, !dbg !15377
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15393
  br label %16, !dbg !15394

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14734, metadata !DIExpression()) #23, !dbg !15395
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15398
  br i1 %13, label %15, label %14, !dbg !15399

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15400
  unreachable, !dbg !15400

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14729, metadata !DIExpression()) #23, !dbg !15395
  call void @llvm.dbg.value(metadata i32 %3, metadata !14743, metadata !DIExpression()) #23, !dbg !15401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15403, !srcloc !14749
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15409, metadata !DIExpression()), !dbg !15410
  call void @llvm.dbg.value(metadata i32 %0, metadata !15411, metadata !DIExpression()), !dbg !15416
  %2 = icmp eq i32 %0, 0, !dbg !15418
  br i1 %2, label %3, label %6, !dbg !15419

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15420, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %4, metadata !15423, metadata !DIExpression()) #23, !dbg !15428
  %5 = icmp eq i32 %4, 0, !dbg !15429
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15410
  ret i1 %7, !dbg !15430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15431 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15433, metadata !DIExpression()), !dbg !15435
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15436
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15437
  ret i1 %3, !dbg !15438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15441, metadata !DIExpression()), !dbg !15443
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %2, metadata !15442, metadata !DIExpression()), !dbg !15443
  ret i32 %2, !dbg !15445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15448, metadata !DIExpression()), !dbg !15452
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15453
  call void @llvm.dbg.value(metadata i32 0, metadata !15449, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15455
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15457, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15455
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15460
  br i1 %4, label %6, label %5, !dbg !15461

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15462
  unreachable, !dbg !15462

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %7, metadata !14707, metadata !DIExpression()) #23, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %7, metadata !14701, metadata !DIExpression()) #23, !dbg !15455
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15463
  call void @llvm.dbg.value(metadata i32 %7, metadata !15451, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()), !dbg !15454
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15464
  br i1 %8, label %9, label %13, !dbg !15468

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !15469
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15472
  %11 = load i8, i8* %10, align 1, !dbg !15473
  %12 = and i8 %11, 127, !dbg !15473
  store i8 %12, i8* %10, align 1, !dbg !15473
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !15474
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15476
  br label %13, !dbg !15477

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15478
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15479
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15480
  %16 = zext i1 %15 to i32, !dbg !15480
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15482
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15484
  br i1 %17, label %19, label %18, !dbg !15485

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15486
  unreachable, !dbg !15486

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14729, metadata !DIExpression()) #23, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %7, metadata !14743, metadata !DIExpression()) #23, !dbg !15487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15489, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15449, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()), !dbg !15454
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15490
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15492
  br i1 %21, label %22, label %23, !dbg !15493

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15494
  br label %23, !dbg !15496

23:                                               ; preds = %22, %19
  ret void, !dbg !15497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15500, metadata !DIExpression()), !dbg !15501
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15502
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15503
  ret i32 %3, !dbg !15504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15507, metadata !DIExpression()), !dbg !15508
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15509
  %3 = load i8, i8* %2, align 1, !dbg !15510
  %4 = or i8 %3, 16, !dbg !15510
  store i8 %4, i8* %2, align 1, !dbg !15510
  ret void, !dbg !15511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15512 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15513, !srcloc !14710
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15513
  call void @llvm.dbg.value(metadata i32 %2, metadata !14707, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15515
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15516
  ret void, !dbg !15517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15520, metadata !DIExpression()), !dbg !15521
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15522
  br i1 %2, label %3, label %5, !dbg !15524

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15525
  br label %6, !dbg !15527

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14743, metadata !DIExpression()) #23, !dbg !15528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15531, !srcloc !14749
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15535, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15538
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15540, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15538
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15543
  br i1 %3, label %5, label %4, !dbg !15544

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15545
  unreachable, !dbg !15545

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15540
  call void @llvm.dbg.value(metadata i32 %6, metadata !14707, metadata !DIExpression()) #23, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %6, metadata !14701, metadata !DIExpression()) #23, !dbg !15538
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %6, metadata !15536, metadata !DIExpression()), !dbg !15537
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15547
  br i1 %7, label %12, label %8, !dbg !15549

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15550
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15553
  br i1 %9, label %11, label %10, !dbg !15554

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15555
  unreachable, !dbg !15555

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !15556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15558, !srcloc !14749
  br label %14, !dbg !15559

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15560
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15561
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15562
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15562
  br label %14, !dbg !15563

14:                                               ; preds = %12, %11
  ret void, !dbg !15563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15566, metadata !DIExpression()), !dbg !15567
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15568
  %3 = load i8, i8* %2, align 1, !dbg !15568
  %4 = and i8 %3, 16, !dbg !15569
  %5 = icmp ne i8 %4, 0, !dbg !15570
  ret i1 %5, !dbg !15571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15574, metadata !DIExpression()), !dbg !15575
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15576
  %3 = load i8, i8* %2, align 1, !dbg !15577
  %4 = and i8 %3, -17, !dbg !15577
  store i8 %4, i8* %2, align 1, !dbg !15577
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15579 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15589, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15587, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15588, metadata !DIExpression()), !dbg !15593
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15594
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15594
  br i1 %5, label %9, label %6, !dbg !15594

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15594
  br i1 %7, label %9, label %8, !dbg !15597

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 773) #25, !dbg !15598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 773) #25, !dbg !15598
  unreachable, !dbg !15598

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15590, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15601
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15603, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15601
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15606
  br i1 %11, label %13, label %12, !dbg !15607

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15608
  unreachable, !dbg !15608

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15601
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15600
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15613
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15615
  br i1 %14, label %16, label %15, !dbg !15616

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15617
  unreachable, !dbg !15617

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %17, metadata !14707, metadata !DIExpression()) #23, !dbg !15605
  call void @llvm.dbg.value(metadata i32 %17, metadata !14701, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %17, metadata !15592, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15618
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15620, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15590, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()), !dbg !15600
  ret void, !dbg !15621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15624, metadata !DIExpression()), !dbg !15625
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15626
  %3 = load i8, i8* %2, align 1, !dbg !15626
  %4 = and i8 %3, 1, !dbg !15627
  %5 = icmp ne i8 %4, 0, !dbg !15628
  ret i1 %5, !dbg !15629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15630 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15634, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15632, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15633, metadata !DIExpression()), !dbg !15635
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15636
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15637
  ret void, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15643, metadata !DIExpression()), !dbg !15645
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15644, metadata !DIExpression()), !dbg !15645
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15646
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15647
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15648
  br i1 %3, label %24, label %4, !dbg !15650

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15651
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15653
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15654
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14918, metadata !DIExpression()) #23, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !15655
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15657
  br i1 %7, label %8, label %9, !dbg !15658

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !15659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !15659
  unreachable, !dbg !15659

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef nonnull %6) #25, !dbg !15660
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14925, metadata !DIExpression()) #23, !dbg !15655
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15661
  br i1 %11, label %22, label %12, !dbg !15660

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14925, metadata !DIExpression()) #23, !dbg !15655
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15662
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14925, metadata !DIExpression()) #23, !dbg !15655
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15663
  %16 = icmp sgt i32 %15, 0, !dbg !15664
  br i1 %16, label %17, label %19, !dbg !15665

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15666
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15667
  br label %24, !dbg !15668

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15661
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14925, metadata !DIExpression()) #23, !dbg !15655
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15661
  br i1 %21, label %22, label %12, !dbg !15660, !llvm.loop !15669

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15671
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15672
  br label %24, !dbg !15673

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15675 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15680, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15679, metadata !DIExpression()), !dbg !15681
  %4 = icmp eq i64 %3, -1, !dbg !15682
  br i1 %4, label %6, label %5, !dbg !15684

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.295(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15685
  br label %6, !dbg !15687

6:                                                ; preds = %5, %2
  ret void, !dbg !15688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.295(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15689 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15692, metadata !DIExpression()), !dbg !15693
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15691, metadata !DIExpression()), !dbg !15693
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15694
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15695
  ret void, !dbg !15696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15699, metadata !DIExpression()), !dbg !15707
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15708
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15700, metadata !DIExpression()), !dbg !15707
  call void @llvm.dbg.value(metadata i32 0, metadata !15701, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15710
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15712, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15710
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15715
  br i1 %5, label %7, label %6, !dbg !15716

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15717
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15717
  unreachable, !dbg !15717

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15710
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !15703, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15701, metadata !DIExpression()), !dbg !15709
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15719
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15720
  %10 = load i8, i8* %9, align 1, !dbg !15720
  %11 = and i8 %10, 40, !dbg !15721
  %12 = icmp eq i8 %11, 0, !dbg !15721
  call void @llvm.dbg.value(metadata i1 %12, metadata !15704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15722
  br i1 %12, label %13, label %20, !dbg !15723

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15724
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15724
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15724
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15728
  br i1 %17, label %19, label %18, !dbg !15729

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15730
  br label %19, !dbg !15732

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.291(%struct.k_thread* noundef nonnull %3) #24, !dbg !15733
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15734
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15735
  br label %20, !dbg !15736

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15737
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15739
  br i1 %21, label %23, label %22, !dbg !15740

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15741
  unreachable, !dbg !15741

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %24, metadata !14707, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %24, metadata !14701, metadata !DIExpression()) #23, !dbg !15710
  call void @llvm.dbg.value(metadata i32 %24, metadata !15703, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15737
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15744, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15701, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 undef, metadata !15701, metadata !DIExpression()), !dbg !15709
  ret void, !dbg !15745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15748, metadata !DIExpression()), !dbg !15749
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15750
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15751
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15752
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15753
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15754
  ret void, !dbg !15755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15760, metadata !DIExpression()), !dbg !15761
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15762
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15762
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15762
  br i1 %4, label %5, label %6, !dbg !15765

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 726) #25, !dbg !15766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 726) #25, !dbg !15766
  unreachable, !dbg !15766

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15771, metadata !DIExpression()), !dbg !15772
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15773
  %3 = load i8, i8* %2, align 1, !dbg !15774
  %4 = and i8 %3, -3, !dbg !15774
  store i8 %4, i8* %2, align 1, !dbg !15774
  ret void, !dbg !15775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15778, metadata !DIExpression()), !dbg !15779
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15780
  br i1 %2, label %3, label %7, !dbg !15782

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !15783
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15786
  %5 = load i8, i8* %4, align 1, !dbg !15787
  %6 = and i8 %5, 127, !dbg !15787
  store i8 %6, i8* %4, align 1, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !15788
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15790
  br label %7, !dbg !15791

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15792
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15793
  %10 = zext i1 %9 to i32, !dbg !15793
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15794
  ret void, !dbg !15795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15798, metadata !DIExpression()), !dbg !15799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15800
  %3 = load i8, i8* %2, align 1, !dbg !15801
  %4 = or i8 %3, 2, !dbg !15801
  store i8 %4, i8* %2, align 1, !dbg !15801
  ret void, !dbg !15802
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15805, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.value(metadata i32 0, metadata !15806, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15811
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15813, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15811
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15816
  br i1 %3, label %5, label %4, !dbg !15817

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15818
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15818
  unreachable, !dbg !15818

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15811
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()), !dbg !15810
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15823
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15825
  br i1 %6, label %8, label %7, !dbg !15826

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15827
  unreachable, !dbg !15827

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %9, metadata !14707, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %9, metadata !14701, metadata !DIExpression()) #23, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %9, metadata !15808, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15828
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15830, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15806, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()), !dbg !15810
  ret void, !dbg !15831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15832 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15838, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i32 %0, metadata !15836, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15837, metadata !DIExpression()), !dbg !15843
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15844
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15845
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15846
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15847
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15848
  call void @llvm.dbg.value(metadata i32 %6, metadata !15839, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i32 0, metadata !15840, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15850
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15852, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15850
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15855
  br i1 %8, label %10, label %9, !dbg !15856

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15857
  unreachable, !dbg !15857

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15850
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15842, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !15840, metadata !DIExpression()), !dbg !15849
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15859
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15863
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15864
  br i1 %13, label %14, label %15, !dbg !15865

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15866
  br label %15, !dbg !15868

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15869
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15871
  br i1 %16, label %18, label %17, !dbg !15872

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15873
  unreachable, !dbg !15873

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15852
  call void @llvm.dbg.value(metadata i32 %19, metadata !14707, metadata !DIExpression()) #23, !dbg !15854
  call void @llvm.dbg.value(metadata i32 %19, metadata !14701, metadata !DIExpression()) #23, !dbg !15850
  call void @llvm.dbg.value(metadata i32 %19, metadata !15842, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15869
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15874
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15876, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15840, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !15840, metadata !DIExpression()), !dbg !15849
  ret i32 %6, !dbg !15877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15878 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15883, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata i64 undef, metadata !15885, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15882, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15884, metadata !DIExpression()), !dbg !15886
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15887
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15888
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15889
  br i1 %6, label %7, label %8, !dbg !15892

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 846) #25, !dbg !15893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 846) #25, !dbg !15893
  unreachable, !dbg !15893

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15895
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15897, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15895
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15900
  br i1 %10, label %12, label %11, !dbg !15901

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15902
  unreachable, !dbg !15902

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15895
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15903
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15904
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15380, metadata !DIExpression()) #23, !dbg !15906
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15908
  br i1 %14, label %16, label %15, !dbg !15909

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15910
  unreachable, !dbg !15910

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15376, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15380, metadata !DIExpression()) #23, !dbg !15913
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15915
  br i1 %17, label %19, label %18, !dbg !15916

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15917
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15917
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !15917
  unreachable, !dbg !15917

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15371, metadata !DIExpression()) #23, !dbg !15911
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15918
  ret i32 %21, !dbg !15919
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15920 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15924, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 0, metadata !15926, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15933, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15931
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15936
  br i1 %3, label %5, label %4, !dbg !15937

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15938
  unreachable, !dbg !15938

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15931
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !15926, metadata !DIExpression()), !dbg !15930
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15925, metadata !DIExpression()), !dbg !15929
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15943
  br i1 %8, label %10, label %9, !dbg !15945

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15946
  br label %10, !dbg !15948

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15949
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15951
  br i1 %11, label %13, label %12, !dbg !15952

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15953
  unreachable, !dbg !15953

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %14, metadata !14707, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %14, metadata !14701, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %14, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15954
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15956, !srcloc !14749
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !15926, metadata !DIExpression()), !dbg !15930
  ret %struct.k_thread* %7, !dbg !15957
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15958 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15960, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15961, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata i32 0, metadata !15962, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !15967
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15969, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15967
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15972
  br i1 %3, label %5, label %4, !dbg !15973

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !15974
  unreachable, !dbg !15974

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !15967
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15975
  call void @llvm.dbg.value(metadata i32 undef, metadata !15964, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15961, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()), !dbg !15966
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15961, metadata !DIExpression()), !dbg !15965
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15979
  br i1 %8, label %11, label %9, !dbg !15981

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15982
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15984
  br label %11, !dbg !15985

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !15986
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15988
  br i1 %12, label %14, label %13, !dbg !15989

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !15990
  unreachable, !dbg !15990

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %15, metadata !14707, metadata !DIExpression()) #23, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %15, metadata !14701, metadata !DIExpression()) #23, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %15, metadata !15964, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !15986
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !15991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15993, !srcloc !14749
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15961, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15962, metadata !DIExpression()), !dbg !15966
  ret %struct.k_thread* %7, !dbg !15994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15997, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15805, metadata !DIExpression()) #23, !dbg !15999
  call void @llvm.dbg.value(metadata i32 0, metadata !15806, metadata !DIExpression()) #23, !dbg !16001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16002
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16004, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16002
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16007
  br i1 %3, label %5, label %4, !dbg !16008

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16009
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16009
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16009
  unreachable, !dbg !16009

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16002
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16010
  call void @llvm.dbg.value(metadata i32 undef, metadata !15808, metadata !DIExpression()) #23, !dbg !16001
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()) #23, !dbg !16001
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16012
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16014
  br i1 %6, label %8, label %7, !dbg !16015

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16016
  unreachable, !dbg !16016

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %9, metadata !14707, metadata !DIExpression()) #23, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %9, metadata !14701, metadata !DIExpression()) #23, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %9, metadata !15808, metadata !DIExpression()) #23, !dbg !16001
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !16017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16019, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !15806, metadata !DIExpression()) #23, !dbg !16001
  call void @llvm.dbg.value(metadata i32 undef, metadata !15806, metadata !DIExpression()) #23, !dbg !16001
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16020
  ret void, !dbg !16021
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16022 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 %1, metadata !16025, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i8 0, metadata !16026, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 0, metadata !16027, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16032
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16034, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16032
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16037
  br i1 %4, label %6, label %5, !dbg !16038

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16039
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16039
  unreachable, !dbg !16039

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16032
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16040
  call void @llvm.dbg.value(metadata i32 undef, metadata !16029, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i8 poison, metadata !16026, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16027, metadata !DIExpression()), !dbg !16031
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16041
  call void @llvm.dbg.value(metadata i1 %9, metadata !16026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16030
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16044

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !16045
  %14 = load i8, i8* %7, align 1, !dbg !16051
  %15 = and i8 %14, 127, !dbg !16051
  store i8 %15, i8* %7, align 1, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !16052
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16054
  store i8 %12, i8* %11, align 2, !dbg !16055
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()) #23, !dbg !16056
  %16 = load i8, i8* %7, align 1, !dbg !16058
  %17 = or i8 %16, -128, !dbg !16058
  store i8 %17, i8* %7, align 1, !dbg !16058
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()) #23, !dbg !16059
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()) #23, !dbg !16061
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16063
  br i1 %18, label %19, label %20, !dbg !16064

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !16065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !16065
  unreachable, !dbg !16065

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14925, metadata !DIExpression()) #23, !dbg !16061
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16067
  br i1 %22, label %32, label %23, !dbg !16066

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14925, metadata !DIExpression()) #23, !dbg !16061
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16068
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14925, metadata !DIExpression()) #23, !dbg !16061
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !16069
  %27 = icmp sgt i32 %26, 0, !dbg !16070
  br i1 %27, label %28, label %29, !dbg !16071

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !16072
  br label %33, !dbg !16073

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !16067
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14925, metadata !DIExpression()) #23, !dbg !16061
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16067
  br i1 %31, label %32, label %23, !dbg !16066, !llvm.loop !16074

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !16076
  br label %33, !dbg !16077

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16078
  br label %35, !dbg !16079

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16080
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16082
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16084
  br i1 %36, label %38, label %37, !dbg !16085

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16086
  unreachable, !dbg !16086

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16034
  call void @llvm.dbg.value(metadata i32 %39, metadata !14707, metadata !DIExpression()) #23, !dbg !16036
  call void @llvm.dbg.value(metadata i32 %39, metadata !14701, metadata !DIExpression()) #23, !dbg !16032
  call void @llvm.dbg.value(metadata i32 %39, metadata !16029, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16082
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !16087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16089, !srcloc !14749
  call void @llvm.dbg.value(metadata i8 poison, metadata !16026, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16027, metadata !DIExpression()), !dbg !16031
  ret i1 %9, !dbg !16090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16095, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i32 %1, metadata !16096, metadata !DIExpression()), !dbg !16098
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16099
  call void @llvm.dbg.value(metadata i1 %3, metadata !16097, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16098
  br i1 %3, label %4, label %12, !dbg !16100

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16102
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16103
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16103
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16103
  %9 = load i8, i8* %8, align 1, !dbg !16103
  %10 = icmp eq i8 %9, 0, !dbg !16104
  br i1 %10, label %11, label %12, !dbg !16105

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16106
  br label %12, !dbg !16108

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16110 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16112, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16116
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16118, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16116
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16121
  br i1 %2, label %4, label %3, !dbg !16122

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16123
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16123
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16123
  unreachable, !dbg !16123

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16116
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16124
  call void @llvm.dbg.value(metadata i32 undef, metadata !16114, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16112, metadata !DIExpression()), !dbg !16115
  tail call fastcc void @z_sched_lock() #24, !dbg !16125
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16128
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16130
  br i1 %5, label %7, label %6, !dbg !16131

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16132
  unreachable, !dbg !16132

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %8, metadata !14707, metadata !DIExpression()) #23, !dbg !16120
  call void @llvm.dbg.value(metadata i32 %8, metadata !14701, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %8, metadata !16114, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !16133
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16135, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !16112, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16112, metadata !DIExpression()), !dbg !16115
  ret void, !dbg !16136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16137 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16138, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %1, metadata !15423, metadata !DIExpression()) #23, !dbg !16143
  %2 = icmp eq i32 %1, 0, !dbg !16144
  br i1 %2, label %4, label %3, !dbg !16145

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !16146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 253) #25, !dbg !16146
  unreachable, !dbg !16146

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16148
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16148
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16148
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16148
  %9 = load i8, i8* %8, align 1, !dbg !16148
  %10 = icmp eq i8 %9, 1, !dbg !16148
  br i1 %10, label %11, label %12, !dbg !16151

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !16152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.309, i32 0, i32 0), i32 noundef 254) #25, !dbg !16152
  unreachable, !dbg !16152

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16154
  store i8 %13, i8* %8, align 1, !dbg !16154
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16155, !srcloc !16157
  ret void, !dbg !16158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16159 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16161, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16165
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16167, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16165
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16170
  br i1 %2, label %4, label %3, !dbg !16171

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16172
  unreachable, !dbg !16172

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16165
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16173
  call void @llvm.dbg.value(metadata i32 undef, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16161, metadata !DIExpression()), !dbg !16164
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16174
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16174
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16174
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16174
  %9 = load i8, i8* %8, align 1, !dbg !16174
  %10 = icmp eq i8 %9, 0, !dbg !16174
  br i1 %10, label %11, label %12, !dbg !16179

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 999) #25, !dbg !16180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 999) #25, !dbg !16180
  unreachable, !dbg !16180

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16182, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %13, metadata !15423, metadata !DIExpression()) #23, !dbg !16187
  %14 = icmp eq i32 %13, 0, !dbg !16188
  br i1 %14, label %16, label %15, !dbg !16189

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16190
  unreachable, !dbg !16190

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16192
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16193
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16193
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16193
  %21 = load i8, i8* %20, align 1, !dbg !16194
  %22 = add i8 %21, 1, !dbg !16194
  store i8 %22, i8* %20, align 1, !dbg !16194
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16196
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16198
  br i1 %23, label %25, label %24, !dbg !16199

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16200
  unreachable, !dbg !16200

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16167
  call void @llvm.dbg.value(metadata i32 %26, metadata !14707, metadata !DIExpression()) #23, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %26, metadata !14701, metadata !DIExpression()) #23, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %26, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !16201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16203, !srcloc !14749
  call void @llvm.dbg.value(metadata i32 1, metadata !16161, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16161, metadata !DIExpression()), !dbg !16164
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16204
  ret void, !dbg !16205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16206 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16207
  ret %struct.k_thread* %1, !dbg !16208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16209 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16213, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16214, metadata !DIExpression()), !dbg !16218
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16219
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16215, metadata !DIExpression()), !dbg !16218
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16220
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16216, metadata !DIExpression()), !dbg !16218
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16221
  call void @llvm.dbg.value(metadata i32 %5, metadata !16217, metadata !DIExpression()), !dbg !16218
  %6 = icmp sgt i32 %5, 0, !dbg !16222
  br i1 %6, label %17, label %7, !dbg !16224

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16225
  br i1 %8, label %17, label %9, !dbg !16227

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16228
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16228
  %12 = load i32, i32* %11, align 8, !dbg !16228
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16230
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16230
  %15 = load i32, i32* %14, align 8, !dbg !16230
  %16 = icmp ult i32 %12, %15, !dbg !16231
  br label %17, !dbg !16232

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16233
  ret i1 %18, !dbg !16234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16235 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16252, metadata !DIExpression()), !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16253, metadata !DIExpression()), !dbg !16267
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16268
  br i1 %4, label %5, label %6, !dbg !16271

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16272
  unreachable, !dbg !16272

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16274
  %8 = load i32, i32* %7, align 4, !dbg !16275
  %9 = add nsw i32 %8, 1, !dbg !16275
  store i32 %9, i32* %7, align 4, !dbg !16275
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16276
  store i32 %8, i32* %10, align 8, !dbg !16277
  %11 = load i32, i32* %7, align 4, !dbg !16278
  %12 = icmp eq i32 %11, 0, !dbg !16279
  br i1 %12, label %13, label %35, !dbg !16280

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16281
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16281
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16255, metadata !DIExpression()), !dbg !16281
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16281
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16281
  %17 = load i32, i32* %16, align 4, !dbg !16281
  %18 = shl i32 %17, 2, !dbg !16281
  %19 = alloca i8, i32 %18, align 8, !dbg !16281
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16281
  store i8* %19, i8** %20, align 4, !dbg !16281
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16281
  %22 = alloca i8, i32 %17, align 8, !dbg !16281
  store i8* %22, i8** %21, align 4, !dbg !16281
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16281
  store i32 -1, i32* %23, align 4, !dbg !16281
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16264, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16254, metadata !DIExpression()), !dbg !16267
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16284
  br i1 %25, label %26, label %27, !dbg !16281

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16284
  br label %35, !dbg !16285

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16254, metadata !DIExpression()), !dbg !16267
  %29 = load i32, i32* %7, align 4, !dbg !16286
  %30 = add nsw i32 %29, 1, !dbg !16286
  store i32 %30, i32* %7, align 4, !dbg !16286
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16288
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16288
  store i32 %29, i32* %32, align 8, !dbg !16289
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16264, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16254, metadata !DIExpression()), !dbg !16267
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16284
  br i1 %34, label %26, label %27, !dbg !16281, !llvm.loop !16290

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16292
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16293
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16294
  ret void, !dbg !16295
}

; Function Attrs: optsize
declare !dbg !16296 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16301 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16304 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16306, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16307, metadata !DIExpression()), !dbg !16308
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16309
  br i1 %3, label %4, label %5, !dbg !16312

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16313
  unreachable, !dbg !16313

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16315
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16316
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16317
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16318
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16318
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16320
  br i1 %10, label %11, label %13, !dbg !16321

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16322
  store i32 0, i32* %12, align 4, !dbg !16324
  br label %13, !dbg !16325

13:                                               ; preds = %11, %5
  ret void, !dbg !16326
}

; Function Attrs: optsize
declare !dbg !16327 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16332, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16333, metadata !DIExpression()), !dbg !16335
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16336
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16337
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16334, metadata !DIExpression()), !dbg !16335
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16333, metadata !DIExpression()), !dbg !16335
  ret %struct.k_thread* %4, !dbg !16338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16339 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16343, metadata !DIExpression()), !dbg !16344
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16345
  ret %struct.rbnode* %2, !dbg !16346
}

; Function Attrs: optsize
declare !dbg !16347 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16350 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16360, metadata !DIExpression()), !dbg !16364
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16365
  %3 = load i32, i32* %2, align 4, !dbg !16365
  %4 = icmp eq i32 %3, 0, !dbg !16367
  br i1 %4, label %10, label %5, !dbg !16368

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16361, metadata !DIExpression()), !dbg !16364
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16369, !range !7679
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16370
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16362, metadata !DIExpression()), !dbg !16364
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef %7) #24, !dbg !16371
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16363, metadata !DIExpression()), !dbg !16364
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16361, metadata !DIExpression()), !dbg !16364
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16364
  ret %struct.k_thread* %11, !dbg !16372
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16373 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16377, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.value(metadata i32 0, metadata !16378, metadata !DIExpression()), !dbg !16380
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.314(%struct._wait_q_t* noundef %0) #24, !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16379, metadata !DIExpression()), !dbg !16380
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16382
  br i1 %3, label %8, label %4, !dbg !16383

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16384
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16386
  call void @llvm.dbg.value(metadata i32 1, metadata !16378, metadata !DIExpression()), !dbg !16380
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.314(%struct._wait_q_t* noundef %0) #24, !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16379, metadata !DIExpression()), !dbg !16380
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16382
  br i1 %7, label %8, label %4, !dbg !16383, !llvm.loop !16387

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16380
  ret i32 %9, !dbg !16389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.314(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16390 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16392, metadata !DIExpression()), !dbg !16393
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16394
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef %2) #24, !dbg !16395
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16396
  ret %struct.k_thread* %4, !dbg !16397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16398 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16407, metadata !DIExpression()), !dbg !16408
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16409
  tail call fastcc void @sys_dlist_init.315(%struct._dnode* noundef nonnull %2) #24, !dbg !16410
  ret void, !dbg !16411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.315(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16412 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16416, metadata !DIExpression()), !dbg !16417
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16418
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16419
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16420
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16421
  ret void, !dbg !16422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16423 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16424
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16425
  ret void, !dbg !16426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16432, metadata !DIExpression()), !dbg !16433
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16434
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16434
  %4 = load i8, i8* %3, align 2, !dbg !16434
  %5 = sext i8 %4 to i32, !dbg !16435
  ret i32 %5, !dbg !16436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16441, metadata !DIExpression()), !dbg !16444
  call void @llvm.dbg.value(metadata i32 %1, metadata !16442, metadata !DIExpression()), !dbg !16444
  %3 = add i32 %1, 16, !dbg !16445
  %4 = icmp ult i32 %3, 31, !dbg !16445
  br i1 %4, label %6, label %5, !dbg !16445

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.319, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16449
  unreachable, !dbg !16449

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16451, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %7, metadata !15423, metadata !DIExpression()) #23, !dbg !16456
  %8 = icmp eq i32 %7, 0, !dbg !16457
  br i1 %8, label %10, label %9, !dbg !16458

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16459
  unreachable, !dbg !16459

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16443, metadata !DIExpression()), !dbg !16444
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16461
  ret void, !dbg !16462
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16463 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16464
  br i1 %1, label %8, label %2, !dbg !16465

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16466
  br i1 %3, label %8, label %4, !dbg !16467

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16468
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16469
  %7 = xor i1 %6, true, !dbg !16467
  br label %8, !dbg !16467

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16471 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16472, !range !6842
  %2 = icmp eq i8 %1, 0, !dbg !16472
  ret i1 %2, !dbg !16473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16474 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16477, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %1, metadata !15423, metadata !DIExpression()) #23, !dbg !16482
  %2 = icmp eq i32 %1, 0, !dbg !16483
  br i1 %2, label %4, label %3, !dbg !16484

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16485
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16485
  unreachable, !dbg !16485

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16487
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16489, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16487
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16492
  br i1 %6, label %8, label %7, !dbg !16493

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16494
  unreachable, !dbg !16494

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16476, metadata !DIExpression()), !dbg !16496
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14887, metadata !DIExpression()) #23, !dbg !16500
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16502
  %11 = load i8, i8* %10, align 1, !dbg !16503
  %12 = and i8 %11, 127, !dbg !16503
  store i8 %12, i8* %10, align 1, !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14895, metadata !DIExpression()) #23, !dbg !16504
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16506
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14904, metadata !DIExpression()) #23, !dbg !16508
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16510
  %15 = load i8, i8* %14, align 1, !dbg !16511
  %16 = or i8 %15, -128, !dbg !16511
  store i8 %16, i8* %14, align 1, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14911, metadata !DIExpression()) #23, !dbg !16512
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14918, metadata !DIExpression()) #23, !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14924, metadata !DIExpression()) #23, !dbg !16514
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16516
  br i1 %17, label %18, label %19, !dbg !16517

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !16518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 186) #25, !dbg !16518
  unreachable, !dbg !16518

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.280(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16519
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14925, metadata !DIExpression()) #23, !dbg !16514
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16520
  br i1 %21, label %32, label %22, !dbg !16519

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14925, metadata !DIExpression()) #23, !dbg !16514
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14925, metadata !DIExpression()) #23, !dbg !16514
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16522
  %26 = icmp sgt i32 %25, 0, !dbg !16523
  br i1 %26, label %27, label %29, !dbg !16524

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16525
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16526
  br label %34, !dbg !16527

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16520
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14925, metadata !DIExpression()) #23, !dbg !16514
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16520
  br i1 %31, label %32, label %22, !dbg !16519, !llvm.loop !16528

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16530
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16531
  br label %34, !dbg !16532

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15376, metadata !DIExpression()) #23, !dbg !16534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15380, metadata !DIExpression()) #23, !dbg !16536
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16538
  br i1 %35, label %37, label %36, !dbg !16539

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16540
  unreachable, !dbg !16540

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16489
  call void @llvm.dbg.value(metadata i32 %38, metadata !14707, metadata !DIExpression()) #23, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %38, metadata !14701, metadata !DIExpression()) #23, !dbg !16487
  call void @llvm.dbg.value(metadata i32 %38, metadata !16476, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16534
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16541
  ret void, !dbg !16542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16543 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16547, metadata !DIExpression()), !dbg !16550
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16551, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %3, metadata !15423, metadata !DIExpression()) #23, !dbg !16556
  %4 = icmp eq i32 %3, 0, !dbg !16557
  br i1 %4, label %6, label %5, !dbg !16558

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16559
  unreachable, !dbg !16559

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16561
  br i1 %7, label %8, label %10, !dbg !16563

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16564
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16566
  br label %15, !dbg !16567

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16548, metadata !DIExpression()), !dbg !16550
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16568
  %12 = sext i32 %11 to i64, !dbg !16568
  call void @llvm.dbg.value(metadata i64 %12, metadata !16548, metadata !DIExpression()), !dbg !16550
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16569
  %14 = trunc i64 %13 to i32, !dbg !16569
  call void @llvm.dbg.value(metadata i32 %14, metadata !16549, metadata !DIExpression()), !dbg !16550
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16550
  ret i32 %16, !dbg !16570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16575, metadata !DIExpression()), !dbg !16576
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16577, !srcloc !16579
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16580
  ret void, !dbg !16581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16582 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16586, metadata !DIExpression()), !dbg !16590
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16591, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %2, metadata !15423, metadata !DIExpression()) #23, !dbg !16596
  %3 = icmp eq i32 %2, 0, !dbg !16597
  br i1 %3, label %5, label %4, !dbg !16598

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16599
  unreachable, !dbg !16599

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16601
  br i1 %6, label %7, label %8, !dbg !16603

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16604
  br label %43, !dbg !16606

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16588, metadata !DIExpression()), !dbg !16590
  %9 = icmp sgt i64 %0, -3, !dbg !16607
  br i1 %9, label %10, label %14, !dbg !16609

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16610
  %12 = trunc i64 %0 to i32, !dbg !16612
  %13 = add i32 %11, %12, !dbg !16612
  call void @llvm.dbg.value(metadata i32 %13, metadata !16587, metadata !DIExpression()), !dbg !16590
  br label %17, !dbg !16613

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16614
  %16 = sub i32 -2, %15, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %16, metadata !16587, metadata !DIExpression()), !dbg !16590
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16616
  call void @llvm.dbg.value(metadata i32 %18, metadata !16587, metadata !DIExpression()), !dbg !16590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16617
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16619, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16617
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16622
  br i1 %20, label %22, label %21, !dbg !16623

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16624
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16624
  unreachable, !dbg !16624

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16617
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16625
  call void @llvm.dbg.value(metadata i32 undef, metadata !16589, metadata !DIExpression()), !dbg !16590
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16626
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16627
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16628
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16629
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16630
  tail call fastcc void @z_add_thread_timeout.295(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16630
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16631
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15376, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15380, metadata !DIExpression()) #23, !dbg !16635
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16637
  br i1 %27, label %29, label %28, !dbg !16638

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16639
  unreachable, !dbg !16639

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %30, metadata !14707, metadata !DIExpression()) #23, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %30, metadata !14701, metadata !DIExpression()) #23, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %30, metadata !16589, metadata !DIExpression()), !dbg !16590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16633
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16640
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16641
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16641
  br i1 %33, label %34, label %35, !dbg !16644

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.282, i32 0, i32 0)) #25, !dbg !16645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16645
  unreachable, !dbg !16645

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16647
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16648
  %38 = zext i32 %37 to i64, !dbg !16648
  %39 = sub nsw i64 %36, %38, !dbg !16649
  call void @llvm.dbg.value(metadata i64 %39, metadata !16586, metadata !DIExpression()), !dbg !16590
  %40 = icmp sgt i64 %39, 0, !dbg !16650
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16650
  %42 = trunc i64 %41 to i32, !dbg !16650
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16590
  ret i32 %44, !dbg !16651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16652 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16654, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i64 %0, metadata !14755, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 10000, metadata !14758, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i32 1000, metadata !14759, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i8 1, metadata !14760, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i1 false, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16656
  call void @llvm.dbg.value(metadata i1 false, metadata !14762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16656
  call void @llvm.dbg.value(metadata i8 0, metadata !14763, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i1 false, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16656
  call void @llvm.dbg.value(metadata i1 true, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16656
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16656
  call void @llvm.dbg.value(metadata i64 %0, metadata !14755, metadata !DIExpression()), !dbg !16656
  %2 = udiv i64 %0, 10, !dbg !16658
  ret i64 %2, !dbg !16662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16663 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16664, !srcloc !16666
  tail call void @z_impl_k_yield() #24, !dbg !16667
  ret void, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16673, metadata !DIExpression()), !dbg !16675
  %2 = sext i32 %0 to i64, !dbg !16676
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16677
  call void @llvm.dbg.value(metadata i64 %3, metadata !16674, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16675
  %4 = shl i64 %3, 32, !dbg !16678
  %5 = ashr exact i64 %4, 32, !dbg !16678
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %6, metadata !16674, metadata !DIExpression()), !dbg !16675
  %7 = sext i32 %6 to i64, !dbg !16680
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16681
  %9 = trunc i64 %8 to i32, !dbg !16681
  ret i32 %9, !dbg !16682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16683 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16685, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i64 %0, metadata !14755, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14758, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i32 10000, metadata !14759, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i8 1, metadata !14760, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i1 false, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16687
  call void @llvm.dbg.value(metadata i1 true, metadata !14762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16687
  call void @llvm.dbg.value(metadata i8 0, metadata !14763, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i1 false, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16687
  call void @llvm.dbg.value(metadata i1 true, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16687
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16687
  %2 = add i64 %0, 99, !dbg !16689
  call void @llvm.dbg.value(metadata i64 %2, metadata !14755, metadata !DIExpression()), !dbg !16687
  %3 = udiv i64 %2, 100, !dbg !16690
  ret i64 %3, !dbg !16691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16692 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16694, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i64 %0, metadata !14755, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i32 10000, metadata !14758, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14759, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i8 1, metadata !14760, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i1 false, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16696
  call void @llvm.dbg.value(metadata i1 false, metadata !14762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16696
  call void @llvm.dbg.value(metadata i8 0, metadata !14763, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i1 true, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16696
  call void @llvm.dbg.value(metadata i1 false, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16696
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16696
  call void @llvm.dbg.value(metadata i64 0, metadata !14766, metadata !DIExpression()), !dbg !16696
  %2 = mul i64 %0, 100, !dbg !16698
  ret i64 %2, !dbg !16700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16703, metadata !DIExpression()), !dbg !16704
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16705
  br i1 %2, label %14, label %3, !dbg !16707

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16708
  %5 = icmp slt i32 %4, 0, !dbg !16710
  br i1 %5, label %6, label %10, !dbg !16711

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16712
  %8 = load i8, i8* %7, align 1, !dbg !16712
  %9 = icmp eq i8 %8, 16, !dbg !16715
  br i1 %9, label %10, label %14, !dbg !16716

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16717
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16718
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16719, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %11, metadata !15423, metadata !DIExpression()) #23, !dbg !16723
  %12 = icmp eq i32 %11, 0, !dbg !16724
  br i1 %12, label %13, label %14, !dbg !16725

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16726
  br label %14, !dbg !16728

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()), !dbg !16733
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16734
  %3 = load i8, i8* %2, align 1, !dbg !16734
  %4 = and i8 %3, 2, !dbg !16735
  %5 = icmp ne i8 %4, 0, !dbg !16736
  ret i1 %5, !dbg !16737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16738 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16743
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16742, metadata !DIExpression()), !dbg !16744
  ret %struct.k_thread* %1, !dbg !16745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16746 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16747, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %1, metadata !15423, metadata !DIExpression()) #23, !dbg !16750
  %2 = icmp eq i32 %1, 0, !dbg !16751
  br i1 %2, label %3, label %8, !dbg !16752

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16753
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16754
  %6 = icmp ne i32 %5, 0, !dbg !16752
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16758, metadata !DIExpression()), !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16761
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16763, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16761
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16766
  br i1 %3, label %5, label %4, !dbg !16767

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16768
  unreachable, !dbg !16768

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %6, metadata !14707, metadata !DIExpression()) #23, !dbg !16765
  call void @llvm.dbg.value(metadata i32 %6, metadata !14701, metadata !DIExpression()) #23, !dbg !16761
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %6, metadata !16759, metadata !DIExpression()), !dbg !16760
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16770
  %8 = load i8, i8* %7, align 4, !dbg !16770
  %9 = and i8 %8, 1, !dbg !16772
  %10 = icmp eq i8 %9, 0, !dbg !16773
  br i1 %10, label %15, label %11, !dbg !16774

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16775
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16778
  br i1 %12, label %14, label %13, !dbg !16779

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16780
  unreachable, !dbg !16780

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !16781
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16783, !srcloc !14749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.328, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16784
  unreachable, !dbg !16784

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16788
  %17 = load i8, i8* %16, align 1, !dbg !16788
  %18 = and i8 %17, 8, !dbg !16790
  %19 = icmp eq i8 %18, 0, !dbg !16791
  br i1 %19, label %24, label %20, !dbg !16792

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16793
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16796
  br i1 %21, label %23, label %22, !dbg !16797

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16798
  unreachable, !dbg !16798

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !16793
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !16799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16801, !srcloc !14749
  br label %39, !dbg !16802

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16803
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16804
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16806
  br i1 %26, label %27, label %35, !dbg !16807

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16808, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %28, metadata !15423, metadata !DIExpression()) #23, !dbg !16811
  %29 = icmp eq i32 %28, 0, !dbg !16812
  br i1 %29, label %30, label %35, !dbg !16813

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15376, metadata !DIExpression()) #23, !dbg !16814
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15380, metadata !DIExpression()) #23, !dbg !16817
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16819
  br i1 %31, label %33, label %32, !dbg !16820

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16821
  unreachable, !dbg !16821

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15371, metadata !DIExpression()) #23, !dbg !16814
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.329, i32 0, i32 0)) #25, !dbg !16823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16823
  unreachable, !dbg !16823

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16827
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16829
  br i1 %36, label %38, label %37, !dbg !16830

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16831
  unreachable, !dbg !16831

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14729, metadata !DIExpression()) #23, !dbg !16827
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()) #23, !dbg !16832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16834, !srcloc !14749
  br label %39, !dbg !16835

39:                                               ; preds = %38, %23
  ret void, !dbg !16835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16838, metadata !DIExpression()), !dbg !16839
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16840
  %3 = load i8, i8* %2, align 1, !dbg !16840
  %4 = and i8 %3, 8, !dbg !16842
  %5 = icmp eq i8 %4, 0, !dbg !16843
  br i1 %5, label %6, label %20, !dbg !16844

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16845
  %8 = or i8 %7, 8, !dbg !16845
  store i8 %8, i8* %2, align 1, !dbg !16845
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16847
  br i1 %9, label %10, label %12, !dbg !16849

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()) #23, !dbg !16850
  %11 = and i8 %8, 95, !dbg !16853
  store i8 %11, i8* %2, align 1, !dbg !16853
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14895, metadata !DIExpression()) #23, !dbg !16854
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16856
  br label %12, !dbg !16857

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16858
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16858
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16860
  br i1 %15, label %17, label %16, !dbg !16861

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16862
  br label %17, !dbg !16864

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16865
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16866
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16867
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16868
  br label %20, !dbg !16869

20:                                               ; preds = %17, %1
  ret void, !dbg !16870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16871 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16875, metadata !DIExpression()), !dbg !16877
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.314(%struct._wait_q_t* noundef %0) #24, !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16876, metadata !DIExpression()), !dbg !16877
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16879
  br i1 %3, label %10, label %4, !dbg !16880

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16881
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16883
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16884, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata i32 0, metadata !16889, metadata !DIExpression()), !dbg !16890
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16892
  store i32 0, i32* %7, align 4, !dbg !16893
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16894
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.314(%struct._wait_q_t* noundef %0) #24, !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16876, metadata !DIExpression()), !dbg !16877
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16879
  br i1 %9, label %10, label %4, !dbg !16880, !llvm.loop !16895

10:                                               ; preds = %4, %1
  ret void, !dbg !16897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16898 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16903, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16902, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16907
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16909, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16907
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16912
  br i1 %4, label %6, label %5, !dbg !16913

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16914
  unreachable, !dbg !16914

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16909
  call void @llvm.dbg.value(metadata i32 %7, metadata !14707, metadata !DIExpression()) #23, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %7, metadata !14701, metadata !DIExpression()) #23, !dbg !16907
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16915
  call void @llvm.dbg.value(metadata i32 %7, metadata !16904, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata i32 0, metadata !16905, metadata !DIExpression()), !dbg !16906
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16916
  %9 = load i8, i8* %8, align 1, !dbg !16916
  %10 = and i8 %9, 8, !dbg !16918
  %11 = icmp eq i8 %10, 0, !dbg !16919
  br i1 %11, label %12, label %35, !dbg !16920

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16903, metadata !DIExpression()), !dbg !16906
  %14 = icmp eq i64 %13, 0, !dbg !16921
  br i1 %14, label %35, label %15, !dbg !16923

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16924
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16926
  br i1 %17, label %35, label %18, !dbg !16927

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16928
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16928
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16929
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16930
  br i1 %22, label %35, label %23, !dbg !16931

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16932, !srcloc !15427
  call void @llvm.dbg.value(metadata i32 %24, metadata !15423, metadata !DIExpression()) #23, !dbg !16938
  %25 = icmp eq i32 %24, 0, !dbg !16939
  br i1 %25, label %27, label %26, !dbg !16940

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.332, i32 0, i32 0)) #25, !dbg !16941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.279, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16941
  unreachable, !dbg !16941

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16943
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16944
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16945
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16946
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15376, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15380, metadata !DIExpression()) #23, !dbg !16950
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16952
  br i1 %31, label %33, label %32, !dbg !16953

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 225) #25, !dbg !16954
  unreachable, !dbg !16954

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15371, metadata !DIExpression()) #23, !dbg !16948
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16955
  call void @llvm.dbg.value(metadata i32 %34, metadata !16905, metadata !DIExpression()), !dbg !16906
  br label %40, !dbg !16956

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16957
  call void @llvm.dbg.value(metadata i32 %36, metadata !16905, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !16958
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16960
  br i1 %37, label %39, label %38, !dbg !16961

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !16962
  unreachable, !dbg !16962

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14729, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 %7, metadata !14743, metadata !DIExpression()) #23, !dbg !16963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16965, !srcloc !14749
  br label %40, !dbg !16966

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16906
  ret i32 %41, !dbg !16967
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16968 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16972, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 %1, metadata !16973, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i8* %2, metadata !16974, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i8 0, metadata !16976, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 0, metadata !16977, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14695, metadata !DIExpression()) #23, !dbg !16982
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16984, !srcloc !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !14708, metadata !DIExpression()) #23, !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16982
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16987
  br i1 %5, label %7, label %6, !dbg !16988

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16989
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.275, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 148) #25, !dbg !16989
  unreachable, !dbg !16989

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16986
  call void @llvm.dbg.value(metadata i32 undef, metadata !14701, metadata !DIExpression()) #23, !dbg !16982
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16990
  call void @llvm.dbg.value(metadata i32 undef, metadata !16979, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata i8 poison, metadata !16976, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()), !dbg !16981
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16991
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16975, metadata !DIExpression()), !dbg !16980
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16994
  br i1 %10, label %15, label %11, !dbg !16996

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16997, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata i32 %1, metadata !17003, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata i8* %2, metadata !17004, metadata !DIExpression()), !dbg !17005
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16884, metadata !DIExpression()), !dbg !17008
  call void @llvm.dbg.value(metadata i32 %1, metadata !16889, metadata !DIExpression()), !dbg !17008
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !17010
  store i32 %1, i32* %12, align 4, !dbg !17011
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17012
  store i8* %2, i8** %13, align 4, !dbg !17013
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17014
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17015
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !17016
  call void @llvm.dbg.value(metadata i8 1, metadata !16976, metadata !DIExpression()), !dbg !16980
  br label %15, !dbg !17017

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16976, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !17018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14734, metadata !DIExpression()) #23, !dbg !17018
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17020
  br i1 %16, label %18, label %17, !dbg !17021

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !17022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.277, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.274, i32 0, i32 0), i32 noundef 194) #25, !dbg !17022
  unreachable, !dbg !17022

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16980
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16984
  call void @llvm.dbg.value(metadata i32 %20, metadata !14707, metadata !DIExpression()) #23, !dbg !16986
  call void @llvm.dbg.value(metadata i32 %20, metadata !14701, metadata !DIExpression()) #23, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %20, metadata !16979, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata i32 undef, metadata !14729, metadata !DIExpression()) #23, !dbg !17018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14743, metadata !DIExpression()) #23, !dbg !17023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !17025, !srcloc !14749
  call void @llvm.dbg.value(metadata i8 poison, metadata !16976, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()), !dbg !16981
  ret i1 %19, !dbg !17026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17027 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17033, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata i64 undef, metadata !17035, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17032, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17034, metadata !DIExpression()), !dbg !17038
  call void @llvm.dbg.value(metadata i8** %4, metadata !17036, metadata !DIExpression()), !dbg !17038
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !17039
  call void @llvm.dbg.value(metadata i32 %6, metadata !17037, metadata !DIExpression()), !dbg !17038
  %7 = icmp eq i8** %4, null, !dbg !17040
  br i1 %7, label %12, label %8, !dbg !17042

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17043
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17045
  %11 = load i8*, i8** %10, align 4, !dbg !17045
  store i8* %11, i8** %4, align 4, !dbg !17046
  br label %12, !dbg !17047

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !17049 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17062, metadata !DIExpression()), !dbg !17063
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17064
  tail call fastcc void @z_waitq_init.333(%struct._wait_q_t* noundef %2) #24, !dbg !17065
  ret i32 0, !dbg !17066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.333(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !17067 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17072, metadata !DIExpression()), !dbg !17073
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17074
  tail call fastcc void @sys_dlist_init.334(%struct._dnode* noundef %2) #24, !dbg !17075
  ret void, !dbg !17076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.334(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !17077 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17082, metadata !DIExpression()), !dbg !17083
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17084
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17085
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17086
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17087
  ret void, !dbg !17088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !17089 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17091, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.337, metadata !17179, metadata !DIExpression()) #23, !dbg !17186
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17188, !srcloc !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17192, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17185, metadata !DIExpression()) #23, !dbg !17186
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17196
  br i1 %3, label %5, label %4, !dbg !17199

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17200
  unreachable, !dbg !17200

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %6, metadata !17191, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %6, metadata !17185, metadata !DIExpression()) #23, !dbg !17186
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17202
  call void @llvm.dbg.value(metadata i32 %6, metadata !17092, metadata !DIExpression()), !dbg !17178
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17203
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !17204
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17097, metadata !DIExpression()), !dbg !17178
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17205
  br i1 %9, label %13, label %10, !dbg !17207

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17208, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.value(metadata i32 0, metadata !17213, metadata !DIExpression()), !dbg !17214
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !17217
  store i32 0, i32* %11, align 4, !dbg !17218
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !17219
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17220
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.337, [1 x i32] %12) #25, !dbg !17220
  br label %17, !dbg !17221

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17222, metadata !DIExpression()) #23, !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.337, metadata !17227, metadata !DIExpression()) #23, !dbg !17228
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17231
  br i1 %14, label %16, label %15, !dbg !17234

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 194) #25, !dbg !17235
  unreachable, !dbg !17235

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !17222, metadata !DIExpression()) #23, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %6, metadata !17237, metadata !DIExpression()) #23, !dbg !17240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17242, !srcloc !17243
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !17244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !17245 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17247, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata i32 0, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.337, metadata !17179, metadata !DIExpression()) #23, !dbg !17252
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17254, !srcloc !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17192, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17185, metadata !DIExpression()) #23, !dbg !17252
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17257
  br i1 %3, label %5, label %4, !dbg !17258

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17259
  unreachable, !dbg !17259

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17185, metadata !DIExpression()) #23, !dbg !17252
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17251
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !17250, metadata !DIExpression()), !dbg !17251
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17248, metadata !DIExpression()), !dbg !17251
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17262
  br i1 %8, label %16, label %9, !dbg !17263

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !17250, metadata !DIExpression()), !dbg !17251
  %12 = add nuw nsw i32 %11, 1, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %12, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !17208, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 0, metadata !17213, metadata !DIExpression()), !dbg !17266
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !17268
  store i32 0, i32* %13, align 4, !dbg !17269
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !17270
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !17248, metadata !DIExpression()), !dbg !17251
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !17262
  br i1 %15, label %16, label %9, !dbg !17263, !llvm.loop !17271

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !17251
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %18, metadata !17191, metadata !DIExpression()) #23, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %18, metadata !17185, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %18, metadata !17249, metadata !DIExpression()), !dbg !17251
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !17273
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.337, [1 x i32] %19) #25, !dbg !17273
  ret i32 %17, !dbg !17274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17275 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17292, metadata !DIExpression()), !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17290, metadata !DIExpression()), !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !17291, metadata !DIExpression()), !dbg !17295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.337, metadata !17179, metadata !DIExpression()) #23, !dbg !17296
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17298, !srcloc !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata i32 undef, metadata !17192, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata i32 undef, metadata !17185, metadata !DIExpression()) #23, !dbg !17296
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17301
  br i1 %5, label %7, label %6, !dbg !17302

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.341, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 148) #25, !dbg !17303
  unreachable, !dbg !17303

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %8, metadata !17191, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata i32 %8, metadata !17185, metadata !DIExpression()) #23, !dbg !17296
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.337) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %8, metadata !17293, metadata !DIExpression()), !dbg !17295
  tail call fastcc void @k_mutex_unlock.346(%struct.k_mutex* noundef %1) #24, !dbg !17305
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17306
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17307
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.337, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %11, metadata !17294, metadata !DIExpression()), !dbg !17295
  tail call fastcc void @k_mutex_lock.347(%struct.k_mutex* noundef %1) #24, !dbg !17308
  ret i32 %11, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.346(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !17310 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17314, metadata !DIExpression()), !dbg !17315
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17316, !srcloc !17318
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !17319
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.347(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !17321 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17326, metadata !DIExpression()), !dbg !17327
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17325, metadata !DIExpression()), !dbg !17327
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17328, !srcloc !17330
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !17331
  ret void, !dbg !17332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17333 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17335
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17336
  ret void, !dbg !17337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17338 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17348, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17346, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17347, metadata !DIExpression()), !dbg !17365
  %5 = icmp eq i64 %4, -1, !dbg !17366
  br i1 %5, label %63, label %6, !dbg !17368

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17369
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.352(%struct._dnode* noundef %7) #24, !dbg !17369
  br i1 %8, label %9, label %10, !dbg !17372

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 99) #25, !dbg !17373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.356, i32 0, i32 0)) #25, !dbg !17373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.355, i32 0, i32 0), i32 noundef 99) #25, !dbg !17373
  unreachable, !dbg !17373

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17375
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17376
  call void @llvm.dbg.value(metadata i32 0, metadata !17349, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17385
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17387, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17394
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17394
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17385
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17395
  br i1 %13, label %15, label %14, !dbg !17398

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17399
  unreachable, !dbg !17399

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17387
  call void @llvm.dbg.value(metadata i32 %16, metadata !17390, metadata !DIExpression()) #23, !dbg !17394
  call void @llvm.dbg.value(metadata i32 %16, metadata !17384, metadata !DIExpression()) #23, !dbg !17385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17401
  call void @llvm.dbg.value(metadata i32 %16, metadata !17355, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17377
  %17 = icmp slt i64 %4, -1, !dbg !17402
  br i1 %17, label %18, label %24, !dbg !17403

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17404
  %20 = add i64 %4, %19, !dbg !17405
  %21 = sub i64 -2, %20, !dbg !17405
  call void @llvm.dbg.value(metadata i64 %21, metadata !17359, metadata !DIExpression()), !dbg !17406
  %22 = icmp sgt i64 %21, 1, !dbg !17407
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17407
  br label %29, !dbg !17408

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17409
  %26 = tail call fastcc i32 @elapsed.360() #24, !dbg !17411
  %27 = sext i32 %26 to i64, !dbg !17411
  %28 = add nsw i64 %25, %27, !dbg !17412
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17413
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17414
  store i64 %30, i64* %31, align 8, !dbg !17415
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17416
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17356, metadata !DIExpression()), !dbg !17418
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17419
  br i1 %33, label %48, label %34, !dbg !17419

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17420
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17356, metadata !DIExpression()), !dbg !17418
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17424
  %38 = load i64, i64* %37, align 8, !dbg !17424
  %39 = icmp slt i64 %35, %38, !dbg !17425
  br i1 %39, label %40, label %44, !dbg !17426

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17424
  %42 = sub nsw i64 %38, %35, !dbg !17427
  store i64 %42, i64* %41, align 8, !dbg !17427
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17429
  tail call fastcc void @sys_dlist_insert.361(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17430
  br label %49, !dbg !17431

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17432
  store i64 %45, i64* %31, align 8, !dbg !17432
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17433
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17356, metadata !DIExpression()), !dbg !17418
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17419
  br i1 %47, label %48, label %34, !dbg !17419, !llvm.loop !17434

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.362(%struct._dnode* noundef nonnull %7) #24, !dbg !17436
  br label %49, !dbg !17439

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17440
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17441
  br i1 %51, label %52, label %59, !dbg !17442

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17443
  call void @llvm.dbg.value(metadata i32 %53, metadata !17362, metadata !DIExpression()), !dbg !17444
  %54 = icmp ne i32 %53, 0, !dbg !17445
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17447
  br i1 %57, label %59, label %58, !dbg !17447

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17448
  br label %59, !dbg !17450

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17457
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17459
  br i1 %60, label %62, label %61, !dbg !17462

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  unreachable, !dbg !17463

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17451, metadata !DIExpression()) #23, !dbg !17457
  call void @llvm.dbg.value(metadata i32 %16, metadata !17465, metadata !DIExpression()) #23, !dbg !17468
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17470, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17349, metadata !DIExpression()), !dbg !17377
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.352(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17473 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17479, metadata !DIExpression()), !dbg !17480
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17481
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17481
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17482
  ret i1 %4, !dbg !17483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.360() unnamed_addr #1 !dbg !17484 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17487
  %2 = icmp eq i32 %1, 0, !dbg !17488
  br i1 %2, label %3, label %5, !dbg !17487

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17489
  br label %5, !dbg !17487

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17487
  ret i32 %6, !dbg !17490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17491 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.367() #24, !dbg !17497
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17495, metadata !DIExpression()), !dbg !17498
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17499
  ret %struct._timeout* %2, !dbg !17500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.361(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17501 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17505, metadata !DIExpression()), !dbg !17509
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17506, metadata !DIExpression()), !dbg !17509
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17510
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17510
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17507, metadata !DIExpression()), !dbg !17509
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17511
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17512
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17513
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17514
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17515
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17516
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17517
  ret void, !dbg !17518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17519 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17523, metadata !DIExpression()), !dbg !17525
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17526
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.365(%struct._dnode* noundef %2) #24, !dbg !17527
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17524, metadata !DIExpression()), !dbg !17525
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17528
  ret %struct._timeout* %4, !dbg !17529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.362(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17530 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17535, metadata !DIExpression()), !dbg !17538
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17536, metadata !DIExpression()), !dbg !17538
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17539
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17537, metadata !DIExpression()), !dbg !17538
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17540
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17541
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17542
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17543
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17544
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17545
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17546
  ret void, !dbg !17547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17548 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17553
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17550, metadata !DIExpression()), !dbg !17554
  %2 = tail call fastcc i32 @elapsed.360() #24, !dbg !17555
  call void @llvm.dbg.value(metadata i32 %2, metadata !17551, metadata !DIExpression()), !dbg !17554
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17556
  br i1 %3, label %14, label %4, !dbg !17558

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17559
  %6 = load i64, i64* %5, align 8, !dbg !17559
  %7 = sext i32 %2 to i64, !dbg !17560
  %8 = sub nsw i64 %6, %7, !dbg !17561
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17562
  br i1 %9, label %14, label %10, !dbg !17563

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17564
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17564
  %13 = trunc i64 %12 to i32, !dbg !17564
  call void @llvm.dbg.value(metadata i32 %13, metadata !17552, metadata !DIExpression()), !dbg !17554
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17566
  call void @llvm.dbg.value(metadata i32 %15, metadata !17552, metadata !DIExpression()), !dbg !17554
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17567
  %17 = icmp ne i32 %16, 0, !dbg !17569
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17570
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17570
  call void @llvm.dbg.value(metadata i32 %20, metadata !17552, metadata !DIExpression()), !dbg !17554
  ret i32 %20, !dbg !17571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.365(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17572 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17576, metadata !DIExpression()), !dbg !17578
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17577, metadata !DIExpression()), !dbg !17578
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17579
  br i1 %2, label %5, label %3, !dbg !17580

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.366(%struct._dnode* noundef nonnull %0) #24, !dbg !17581
  br label %5, !dbg !17580

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17580
  ret %struct._dnode* %6, !dbg !17582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.366(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17583 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17585, metadata !DIExpression()), !dbg !17587
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17586, metadata !DIExpression()), !dbg !17587
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17588
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17589
  br i1 %3, label %7, label %4, !dbg !17590

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17591
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17591
  br label %7, !dbg !17590

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17590
  ret %struct._dnode* %8, !dbg !17592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.367() unnamed_addr #8 !dbg !17593 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17597, metadata !DIExpression()), !dbg !17598
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.368() #24, !dbg !17599
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17599
  ret %struct._dnode* %3, !dbg !17600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.368() unnamed_addr #8 !dbg !17601 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17605, metadata !DIExpression()), !dbg !17606
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17607
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17608
  ret i1 %2, !dbg !17609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17610 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17614, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 -22, metadata !17615, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 0, metadata !17616, metadata !DIExpression()), !dbg !17620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17621
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17623, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17625
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17625
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17621
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17626
  br i1 %3, label %5, label %4, !dbg !17627

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17628
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17628
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17628
  unreachable, !dbg !17628

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17625
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17621
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17629
  call void @llvm.dbg.value(metadata i32 undef, metadata !17618, metadata !DIExpression()), !dbg !17620
  call void @llvm.dbg.value(metadata i32 -22, metadata !17615, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17616, metadata !DIExpression()), !dbg !17620
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17615, metadata !DIExpression()), !dbg !17619
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.352(%struct._dnode* noundef %6) #24, !dbg !17630
  br i1 %7, label %8, label %9, !dbg !17634

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17635
  call void @llvm.dbg.value(metadata i32 0, metadata !17615, metadata !DIExpression()), !dbg !17619
  br label %9, !dbg !17637

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17619
  call void @llvm.dbg.value(metadata i32 %10, metadata !17615, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17638
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17640
  br i1 %11, label %13, label %12, !dbg !17641

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17642
  unreachable, !dbg !17642

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17623
  call void @llvm.dbg.value(metadata i32 %14, metadata !17390, metadata !DIExpression()) #23, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %14, metadata !17384, metadata !DIExpression()) #23, !dbg !17621
  call void @llvm.dbg.value(metadata i32 %14, metadata !17618, metadata !DIExpression()), !dbg !17620
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17638
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17645, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 %10, metadata !17615, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17616, metadata !DIExpression()), !dbg !17620
  ret i32 %10, !dbg !17646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17647 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17649, metadata !DIExpression()), !dbg !17650
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17651
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17653
  br i1 %3, label %10, label %4, !dbg !17654

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17655
  %6 = load i64, i64* %5, align 8, !dbg !17655
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17657
  %8 = load i64, i64* %7, align 8, !dbg !17658
  %9 = add nsw i64 %8, %6, !dbg !17658
  store i64 %9, i64* %7, align 8, !dbg !17658
  br label %10, !dbg !17659

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17660
  tail call fastcc void @sys_dlist_remove.371(%struct._dnode* noundef %11) #24, !dbg !17661
  ret void, !dbg !17662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.371(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17663 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17667, metadata !DIExpression()), !dbg !17670
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17671
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17671
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17668, metadata !DIExpression()), !dbg !17670
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17672
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17672
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17669, metadata !DIExpression()), !dbg !17670
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17673
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17674
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17675
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17676
  tail call fastcc void @sys_dnode_init.372(%struct._dnode* noundef %0) #24, !dbg !17677
  ret void, !dbg !17678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.372(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17679 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17681, metadata !DIExpression()), !dbg !17682
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17683
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17684
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17685
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17686
  ret void, !dbg !17687
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17688 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17694, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i64 0, metadata !17695, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i32 0, metadata !17696, metadata !DIExpression()), !dbg !17700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17701
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17703, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17705
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17705
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17701
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17706
  br i1 %3, label %5, label %4, !dbg !17707

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17708
  unreachable, !dbg !17708

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17705
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17701
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17709
  call void @llvm.dbg.value(metadata i32 undef, metadata !17698, metadata !DIExpression()), !dbg !17700
  call void @llvm.dbg.value(metadata i64 0, metadata !17695, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !17696, metadata !DIExpression()), !dbg !17700
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17710
  call void @llvm.dbg.value(metadata i64 %6, metadata !17695, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17713
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17715
  br i1 %7, label %9, label %8, !dbg !17716

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17717
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17717
  unreachable, !dbg !17717

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17703
  call void @llvm.dbg.value(metadata i32 %10, metadata !17390, metadata !DIExpression()) #23, !dbg !17705
  call void @llvm.dbg.value(metadata i32 %10, metadata !17384, metadata !DIExpression()) #23, !dbg !17701
  call void @llvm.dbg.value(metadata i32 %10, metadata !17698, metadata !DIExpression()), !dbg !17700
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17713
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17718
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17720, !srcloc !17471
  call void @llvm.dbg.value(metadata i64 %6, metadata !17695, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !17696, metadata !DIExpression()), !dbg !17700
  ret i64 %6, !dbg !17721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17722 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17724, metadata !DIExpression()), !dbg !17728
  call void @llvm.dbg.value(metadata i64 0, metadata !17725, metadata !DIExpression()), !dbg !17728
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.373(%struct._timeout* noundef %0) #24, !dbg !17729
  br i1 %2, label %21, label %3, !dbg !17731

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17732
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17726, metadata !DIExpression()), !dbg !17733
  call void @llvm.dbg.value(metadata i64 0, metadata !17725, metadata !DIExpression()), !dbg !17728
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17734
  br i1 %5, label %16, label %6, !dbg !17736

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17726, metadata !DIExpression()), !dbg !17733
  call void @llvm.dbg.value(metadata i64 %8, metadata !17725, metadata !DIExpression()), !dbg !17728
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17737
  %10 = load i64, i64* %9, align 8, !dbg !17737
  %11 = add nsw i64 %10, %8, !dbg !17739
  call void @llvm.dbg.value(metadata i64 %11, metadata !17725, metadata !DIExpression()), !dbg !17728
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17740
  br i1 %12, label %16, label %13, !dbg !17742

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17743
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17726, metadata !DIExpression()), !dbg !17733
  call void @llvm.dbg.value(metadata i64 %11, metadata !17725, metadata !DIExpression()), !dbg !17728
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17734
  br i1 %15, label %16, label %6, !dbg !17736, !llvm.loop !17744

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17728
  call void @llvm.dbg.value(metadata i64 %17, metadata !17725, metadata !DIExpression()), !dbg !17728
  %18 = tail call fastcc i32 @elapsed.360() #24, !dbg !17746
  %19 = sext i32 %18 to i64, !dbg !17746
  %20 = sub nsw i64 %17, %19, !dbg !17747
  br label %21, !dbg !17748

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17728
  ret i64 %22, !dbg !17749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.373(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17750 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17754, metadata !DIExpression()), !dbg !17755
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17756
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.352(%struct._dnode* noundef %2) #24, !dbg !17757
  %4 = xor i1 %3, true, !dbg !17758
  ret i1 %4, !dbg !17759
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17760 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17762, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata i64 0, metadata !17763, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata i32 0, metadata !17764, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17769
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17771, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17769
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17774
  br i1 %3, label %5, label %4, !dbg !17775

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17776
  unreachable, !dbg !17776

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17773
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17777
  call void @llvm.dbg.value(metadata i32 undef, metadata !17766, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.value(metadata i64 0, metadata !17763, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()), !dbg !17768
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17778
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17781
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17763, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17782
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17784
  br i1 %8, label %10, label %9, !dbg !17785

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17786
  unreachable, !dbg !17786

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17771
  call void @llvm.dbg.value(metadata i32 %11, metadata !17390, metadata !DIExpression()) #23, !dbg !17773
  call void @llvm.dbg.value(metadata i32 %11, metadata !17384, metadata !DIExpression()) #23, !dbg !17769
  call void @llvm.dbg.value(metadata i32 %11, metadata !17766, metadata !DIExpression()), !dbg !17768
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17763, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17767
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17782
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17787
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17789, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17764, metadata !DIExpression()), !dbg !17768
  %12 = add i64 %7, %6, !dbg !17790
  ret i64 %12, !dbg !17791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17792 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 0, metadata !17795, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17800
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17802, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17800
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17805
  br i1 %2, label %4, label %3, !dbg !17806

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17807
  unreachable, !dbg !17807

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17804
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17800
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17808
  call void @llvm.dbg.value(metadata i32 undef, metadata !17797, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata i32 -1, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !17795, metadata !DIExpression()), !dbg !17799
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17809
  call void @llvm.dbg.value(metadata i32 %5, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17812
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17814
  br i1 %6, label %8, label %7, !dbg !17815

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17816
  unreachable, !dbg !17816

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17802
  call void @llvm.dbg.value(metadata i32 %9, metadata !17390, metadata !DIExpression()) #23, !dbg !17804
  call void @llvm.dbg.value(metadata i32 %9, metadata !17384, metadata !DIExpression()) #23, !dbg !17800
  call void @llvm.dbg.value(metadata i32 %9, metadata !17797, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17812
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17819, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 %5, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !17795, metadata !DIExpression()), !dbg !17799
  ret i32 %5, !dbg !17820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17823, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.value(metadata i1 %1, metadata !17824, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17833
  call void @llvm.dbg.value(metadata i32 0, metadata !17825, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17835
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17837, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17835
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17840
  br i1 %4, label %6, label %5, !dbg !17841

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17842
  unreachable, !dbg !17842

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17839
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17835
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17843
  call void @llvm.dbg.value(metadata i32 undef, metadata !17827, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17825, metadata !DIExpression()), !dbg !17834
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17844
  call void @llvm.dbg.value(metadata i32 %7, metadata !17828, metadata !DIExpression()), !dbg !17845
  call void @llvm.dbg.value(metadata i1 undef, metadata !17831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17845
  %8 = icmp slt i32 %7, 2, !dbg !17846
  call void @llvm.dbg.value(metadata i1 %8, metadata !17832, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17845
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17847
  call void @llvm.dbg.value(metadata i1 %9, metadata !17831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17845
  br i1 %10, label %14, label %11, !dbg !17847

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17849
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17849
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17851
  br label %14, !dbg !17852

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17853
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17855
  br i1 %15, label %17, label %16, !dbg !17856

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17857
  unreachable, !dbg !17857

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17837
  call void @llvm.dbg.value(metadata i32 %18, metadata !17390, metadata !DIExpression()) #23, !dbg !17839
  call void @llvm.dbg.value(metadata i32 %18, metadata !17384, metadata !DIExpression()) #23, !dbg !17835
  call void @llvm.dbg.value(metadata i32 %18, metadata !17827, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17860, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 1, metadata !17825, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.value(metadata i32 undef, metadata !17825, metadata !DIExpression()), !dbg !17834
  ret void, !dbg !17861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17866, metadata !DIExpression()), !dbg !17871
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17872
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17873
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17875, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17877
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17877
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17873
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17878
  br i1 %3, label %5, label %4, !dbg !17879

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17880
  unreachable, !dbg !17880

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17877
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17873
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17881
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17882
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17883
  br i1 %7, label %37, label %8, !dbg !17884

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17871
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17885
  %14 = load i64, i64* %13, align 8, !dbg !17885
  %15 = sext i32 %11 to i64, !dbg !17886
  %16 = icmp sgt i64 %14, %15, !dbg !17887
  br i1 %16, label %35, label %17, !dbg !17888

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17868, metadata !DIExpression()), !dbg !17889
  %18 = trunc i64 %14 to i32, !dbg !17890
  call void @llvm.dbg.value(metadata i32 %18, metadata !17870, metadata !DIExpression()), !dbg !17889
  %19 = sext i32 %18 to i64, !dbg !17891
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17892
  %21 = add i64 %20, %19, !dbg !17892
  store i64 %21, i64* @curr_tick, align 8, !dbg !17892
  store i64 0, i64* %13, align 8, !dbg !17893
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17894
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17895
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17897
  br i1 %22, label %24, label %23, !dbg !17898

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17899
  unreachable, !dbg !17899

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17451, metadata !DIExpression()) #23, !dbg !17895
  call void @llvm.dbg.value(metadata i32 %12, metadata !17465, metadata !DIExpression()) #23, !dbg !17900
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17902, !srcloc !17471
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17903
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17903
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17905
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17907, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17905
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17910
  br i1 %28, label %30, label %29, !dbg !17911

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17912
  unreachable, !dbg !17912

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17909
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17905
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17913
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17914
  %32 = sub nsw i32 %31, %18, !dbg !17914
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17867, metadata !DIExpression()), !dbg !17871
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17882
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17883
  br i1 %34, label %37, label %8, !dbg !17884, !llvm.loop !17915

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17917
  store i64 %36, i64* %13, align 8, !dbg !17917
  br label %41, !dbg !17920

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17871
  %40 = sext i32 %39 to i64, !dbg !17921
  br label %41, !dbg !17921

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17921
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17922
  %45 = add i64 %44, %42, !dbg !17922
  store i64 %45, i64* @curr_tick, align 8, !dbg !17922
  store i32 0, i32* @announce_remaining, align 4, !dbg !17923
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17924
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17925
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17926
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17928
  br i1 %47, label %49, label %48, !dbg !17929

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17930
  unreachable, !dbg !17930

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %50, metadata !17451, metadata !DIExpression()) #23, !dbg !17926
  call void @llvm.dbg.value(metadata i32 %50, metadata !17465, metadata !DIExpression()) #23, !dbg !17931
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17933, !srcloc !17471
  ret void, !dbg !17934
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17935 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17939, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata i32 0, metadata !17940, metadata !DIExpression()), !dbg !17944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17378, metadata !DIExpression()) #23, !dbg !17945
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17947, !srcloc !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17391, metadata !DIExpression()) #23, !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17945
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17950
  br i1 %2, label %4, label %3, !dbg !17951

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.359, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 148) #25, !dbg !17952
  unreachable, !dbg !17952

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17949
  call void @llvm.dbg.value(metadata i32 undef, metadata !17384, metadata !DIExpression()) #23, !dbg !17945
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17953
  call void @llvm.dbg.value(metadata i32 undef, metadata !17942, metadata !DIExpression()), !dbg !17944
  call void @llvm.dbg.value(metadata i64 0, metadata !17939, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata i32 undef, metadata !17940, metadata !DIExpression()), !dbg !17944
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17954
  %6 = tail call fastcc i32 @elapsed.360() #24, !dbg !17957
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17943
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17456, metadata !DIExpression()) #23, !dbg !17958
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17960
  br i1 %7, label %9, label %8, !dbg !17961

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.364, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.358, i32 0, i32 0), i32 noundef 194) #25, !dbg !17962
  unreachable, !dbg !17962

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17947
  call void @llvm.dbg.value(metadata i32 %10, metadata !17390, metadata !DIExpression()) #23, !dbg !17949
  call void @llvm.dbg.value(metadata i32 %10, metadata !17384, metadata !DIExpression()) #23, !dbg !17945
  call void @llvm.dbg.value(metadata i32 %10, metadata !17942, metadata !DIExpression()), !dbg !17944
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17943
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17943
  call void @llvm.dbg.value(metadata i32 undef, metadata !17451, metadata !DIExpression()) #23, !dbg !17958
  call void @llvm.dbg.value(metadata i32 undef, metadata !17465, metadata !DIExpression()) #23, !dbg !17963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17965, !srcloc !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17940, metadata !DIExpression()), !dbg !17944
  %11 = sext i32 %6 to i64, !dbg !17957
  %12 = add i64 %5, %11, !dbg !17966
  ret i64 %12, !dbg !17967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17968 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17969
  %2 = trunc i64 %1 to i32, !dbg !17970
  ret i32 %2, !dbg !17971
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17972 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17973
  ret i64 %1, !dbg !17974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17977, metadata !DIExpression()), !dbg !17984
  %2 = icmp eq i32 %0, 0, !dbg !17985
  br i1 %2, label %10, label %3, !dbg !17987

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17988
  call void @llvm.dbg.value(metadata i32 %4, metadata !17978, metadata !DIExpression()), !dbg !17984
  %5 = mul i32 %0, 84, !dbg !17989
  call void @llvm.dbg.value(metadata i32 %5, metadata !17979, metadata !DIExpression()), !dbg !17984
  br label %6, !dbg !17990

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17991
  call void @llvm.dbg.value(metadata i32 %7, metadata !17980, metadata !DIExpression()), !dbg !17992
  %8 = sub i32 %7, %4, !dbg !17993
  %9 = icmp ult i32 %8, %5, !dbg !17995
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17997 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17998
  ret i32 %1, !dbg !17999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18000 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !18002
  ret i32 %1, !dbg !18003
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18004 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18008, metadata !DIExpression()), !dbg !18010
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18011

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !18012
  br label %14, !dbg !18016

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18009, metadata !DIExpression()), !dbg !18010
  %6 = icmp slt i64 %2, -1, !dbg !18017
  br i1 %6, label %7, label %9, !dbg !18020

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18021
  br label %14, !dbg !18022

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !18024
  %11 = icmp ugt i64 %2, 1, !dbg !18025
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18025
  %13 = add nsw i64 %10, %12, !dbg !18026
  br label %14, !dbg !18027

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18028
  ret i64 %15, !dbg !18029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18030 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.382, i32 0, i32 0)) #25, !dbg !18032
  ret void, !dbg !18033
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!803, !2, !2587, !27, !271, !297, !2589, !2591, !2625, !2627, !307, !358, !2629, !2632, !2643, !2689, !2691, !2719, !2747, !2790, !2862, !2907, !387, !530, !2935, !566, !576, !601, !839, !2940, !978, !1044, !1349, !1633, !2981, !1748, !1838, !2983, !3046, !3113, !1892, !3116, !1899, !2274, !3134, !2294, !2405, !2523, !3136, !2548, !3139}
!llvm.ident = !{!3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141, !3141}
!llvm.module.flags = !{!3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 407, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 398, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 400, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 401, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 402, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 403, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 404, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 405, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 406, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !180, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !180, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!389 = !{!234, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !158, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !158, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !158, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !170, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !175)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !158, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !158, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !158, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !158, line: 96, baseType: !190, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !158, line: 100, baseType: !194, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !158, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !158, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !211, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !158, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !158, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !158, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !158, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !243, line: 57, baseType: !246, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !253, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !158, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !211, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !180)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !234)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !180, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!532 = !{!533, !107, !109, !550, !180}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !175)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !714, line: 72, type: !798, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !700, globals: !711, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!663 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!664 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!665 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!666 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!667 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!668 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!669 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!670 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!671 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!672 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!673 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!674 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!675 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!676 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!677 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!678 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!679 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!680 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!681 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!682 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!683 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!684 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!685 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!686 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!687 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!688 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!689 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!690 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!691 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!692 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!693 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!694 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!695 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!696 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!697 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!698 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!699 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!700 = !{!234, !109, !107, !701}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 392, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 384, size: 192, elements: !704)
!704 = !{!705, !706, !707, !708, !709, !710}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !703, file: !312, line: 386, baseType: !316, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !703, file: !312, line: 387, baseType: !316, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !703, file: !312, line: 388, baseType: !316, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !703, file: !312, line: 389, baseType: !316, size: 32, offset: 96)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !703, file: !312, line: 390, baseType: !316, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !703, file: !312, line: 391, baseType: !316, size: 32, offset: 160)
!711 = !{!712, !718, !734, !745, !762, !599, !764, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796}
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !601, file: !714, line: 424, type: !715, isLocal: false, isDefinition: true, align: 16)
!714 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 4)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !601, file: !714, line: 424, type: !720, isLocal: false, isDefinition: true, align: 32)
!720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !722)
!722 = !{!723, !724, !725, !726, !732, !733}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !721, file: !336, line: 380, baseType: !279, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !721, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !721, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !721, file: !336, line: 386, baseType: !727, size: 32, offset: 96)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !728, file: !336, line: 359, baseType: !180, size: 8)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !728, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !721, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !721, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !601, file: !714, line: 424, type: !736, isLocal: true, isDefinition: true, align: 32)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !738)
!738 = !{!739, !744}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !737, file: !327, line: 60, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = !DISubroutineType(types: !742)
!742 = !{!109, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !737, file: !327, line: 65, baseType: !743, size: 32, offset: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !714, line: 423, type: !747, isLocal: true, isDefinition: true)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !714, line: 107, size: 1472, elements: !748)
!748 = !{!749}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !747, file: !714, line: 109, baseType: !750, size: 1472)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 1472, elements: !760)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !714, line: 101, size: 64, elements: !752)
!752 = !{!753, !759}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !751, file: !714, line: 102, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !755, line: 63, baseType: !756)
!755 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !109, !107}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !751, file: !714, line: 103, baseType: !107, size: 32, offset: 32)
!760 = !{!761}
!761 = !DISubrange(count: 23)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !601, file: !714, line: 424, type: !728, isLocal: true, isDefinition: true, align: 8)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !766, file: !714, line: 493, type: !771, isLocal: true, isDefinition: true, align: 32)
!766 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !714, file: !714, line: 460, type: !767, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !769)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !743}
!769 = !{!770}
!770 = !DILocalVariable(name: "dev", arg: 1, scope: !766, file: !714, line: 460, type: !743)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !772)
!772 = !{!773, !775, !776, !777}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !771, file: !10, line: 55, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !771, file: !10, line: 57, baseType: !774, size: 32, offset: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !771, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !771, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !766, file: !714, line: 497, type: !771, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !766, file: !714, line: 507, type: !771, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !766, file: !714, line: 512, type: !771, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !766, file: !714, line: 516, type: !771, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !766, file: !714, line: 523, type: !771, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !766, file: !714, line: 527, type: !771, isLocal: true, isDefinition: true, align: 32)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !766, file: !714, line: 581, type: !771, isLocal: true, isDefinition: true, align: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !766, file: !714, line: 586, type: !771, isLocal: true, isDefinition: true, align: 32)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !766, file: !714, line: 591, type: !771, isLocal: true, isDefinition: true, align: 32)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !766, file: !714, line: 595, type: !771, isLocal: true, isDefinition: true, align: 32)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 736, elements: !760)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 163, baseType: !604)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !803, file: !808, line: 25, type: !836, isLocal: false, isDefinition: true, align: 16)
!803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !805, splitDebugInlining: false, nameTableKind: None)
!804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!805 = !{!806, !801, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834}
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !803, file: !808, line: 20, type: !809, isLocal: false, isDefinition: true, align: 16)
!808 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 240, elements: !810)
!810 = !{!811}
!811 = !DISubrange(count: 15)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !803, file: !808, line: 32, type: !715, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !803, file: !808, line: 39, type: !715, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !803, file: !808, line: 46, type: !715, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !803, file: !808, line: 53, type: !715, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !803, file: !808, line: 60, type: !715, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !803, file: !808, line: 67, type: !715, isLocal: false, isDefinition: true, align: 16)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !803, file: !808, line: 74, type: !715, isLocal: false, isDefinition: true, align: 16)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !803, file: !808, line: 81, type: !715, isLocal: false, isDefinition: true, align: 16)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !803, file: !808, line: 88, type: !715, isLocal: false, isDefinition: true, align: 16)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !803, file: !808, line: 95, type: !715, isLocal: false, isDefinition: true, align: 16)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !803, file: !808, line: 102, type: !715, isLocal: false, isDefinition: true, align: 16)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !803, file: !808, line: 109, type: !715, isLocal: false, isDefinition: true, align: 16)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !261)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !839, file: !904, line: 398, type: !937, isLocal: true, isDefinition: true)
!839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !841, retainedTypes: !854, globals: !901, splitDebugInlining: false, nameTableKind: None)
!840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!841 = !{!842, !30, !847}
!842 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 197, baseType: !32, size: 32, elements: !844)
!843 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!844 = !{!845, !846}
!845 = !DIEnumerator(name: "SUCCESS", value: 0)
!846 = !DIEnumerator(name: "ERROR", value: 1)
!847 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !848, line: 44, baseType: !32, size: 32, elements: !849)
!848 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!849 = !{!850, !851, !852, !853}
!850 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!851 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!852 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!853 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!854 = !{!107, !109, !110, !855, !894, !900}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !858)
!858 = !{!859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !857, file: !312, line: 552, baseType: !316, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !857, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !857, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !857, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !857, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !857, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !857, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !857, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !857, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !857, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !857, file: !312, line: 562, baseType: !870, size: 64, offset: 320)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !175)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !857, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !857, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !857, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !857, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !857, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !857, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !857, file: !312, line: 569, baseType: !870, size: 64, offset: 576)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !857, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !857, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !857, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !857, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !857, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !857, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !857, file: !312, line: 576, baseType: !870, size: 64, offset: 832)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !857, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !857, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !857, file: !312, line: 579, baseType: !870, size: 64, offset: 960)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !857, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !857, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !857, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !857, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !857, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !857, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !897)
!896 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !895, file: !896, line: 344, baseType: !110, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !895, file: !896, line: 345, baseType: !110, size: 32, offset: 32)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!901 = !{!902, !908, !924, !935, !837}
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !839, file: !904, line: 752, type: !905, isLocal: false, isDefinition: true, align: 16)
!904 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 800, elements: !906)
!906 = !{!907}
!907 = !DISubrange(count: 50)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !839, file: !904, line: 752, type: !910, isLocal: false, isDefinition: true, align: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !912)
!912 = !{!913, !914, !915, !916, !922, !923}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !911, file: !336, line: 380, baseType: !279, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !911, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !911, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !911, file: !336, line: 386, baseType: !917, size: 32, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !919)
!919 = !{!920, !921}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !918, file: !336, line: 359, baseType: !180, size: 8)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !918, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !911, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !911, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !839, file: !904, line: 752, type: !926, isLocal: true, isDefinition: true, align: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !928)
!928 = !{!929, !934}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !927, file: !327, line: 60, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!109, !933}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !927, file: !327, line: 65, baseType: !933, size: 32, offset: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !839, file: !904, line: 752, type: !918, isLocal: true, isDefinition: true, align: 8)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !938)
!938 = !{!939, !945, !946, !955, !960, !965, !971}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !937, file: !848, line: 101, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!109, !933, !944}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !848, line: 56, baseType: !107)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !937, file: !848, line: 102, baseType: !940, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !937, file: !848, line: 103, baseType: !947, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !948)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!109, !933, !944, !951, !107}
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !933, !944, !107}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !937, file: !848, line: 104, baseType: !956, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!109, !933, !944, !900}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !937, file: !848, line: 105, baseType: !961, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!847, !933, !944}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !937, file: !848, line: 106, baseType: !966, size: 32, offset: 160)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!109, !933, !944, !970}
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !848, line: 64, baseType: !107)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !937, file: !848, line: 107, baseType: !972, size: 32, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!109, !933, !944, !107}
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !978, file: !1035, line: 603, type: !1037, isLocal: true, isDefinition: true, align: 32)
!978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !980, globals: !1032, splitDebugInlining: false, nameTableKind: None)
!979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!980 = !{!107, !109, !981}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !984, line: 336, size: 160, elements: !985)
!984 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!985 = !{!986, !1006, !1010, !1014, !1027}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !983, file: !984, line: 365, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{!109, !990, !1005}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !993)
!993 = !{!994, !995, !996, !997, !1003, !1004}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !992, file: !336, line: 380, baseType: !279, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !992, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !992, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !992, file: !336, line: 386, baseType: !998, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !999, file: !336, line: 359, baseType: !180, size: 8)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !999, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !992, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !992, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !983, file: !984, line: 366, baseType: !1007, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !990, !181}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !983, file: !984, line: 374, baseType: !1011, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!109, !990}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !983, file: !984, line: 377, baseType: !1015, size: 32, offset: 96)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!109, !990, !1018}
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !984, line: 122, size: 64, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025, !1026}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1020, file: !984, line: 123, baseType: !110, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1020, file: !984, line: 124, baseType: !180, size: 8, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1020, file: !984, line: 125, baseType: !180, size: 8, offset: 40)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1020, file: !984, line: 126, baseType: !180, size: 8, offset: 48)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1020, file: !984, line: 127, baseType: !180, size: 8, offset: 56)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !983, file: !984, line: 379, baseType: !1028, size: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!109, !990, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1032 = !{!976, !1033}
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !978, file: !1035, line: 38, type: !1036, isLocal: true, isDefinition: true)
!1035 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1038, file: !327, line: 60, baseType: !1011, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1038, file: !327, line: 65, baseType: !990, size: 32, offset: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1044, file: !1215, line: 762, type: !1324, isLocal: true, isDefinition: true)
!1044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1046, retainedTypes: !1064, globals: !1212, splitDebugInlining: false, nameTableKind: None)
!1045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1046 = !{!30, !1047, !1053, !1058, !847}
!1047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1048, line: 506, baseType: !32, size: 32, elements: !1049)
!1048 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1049 = !{!1050, !1051, !1052}
!1050 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1051 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1052 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1053 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1048, line: 512, baseType: !32, size: 32, elements: !1054)
!1054 = !{!1055, !1056, !1057}
!1055 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1056 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1057 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1058 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !755, line: 43, baseType: !32, size: 32, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063}
!1060 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1061 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1062 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1063 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1064 = !{!107, !109, !1065, !1135, !1140, !1100, !1053, !1047, !1145, !1146, !110, !1160, !1115, !285, !1172, !1173}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1048, line: 523, size: 288, elements: !1068)
!1068 = !{!1069, !1090, !1096, !1101, !1105, !1106, !1107, !1111, !1131}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1067, file: !1048, line: 524, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!109, !1073, !1088, !1089}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1086, !1087}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1075, file: !336, line: 380, baseType: !279, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1075, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1075, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1075, file: !336, line: 386, baseType: !1081, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1082, file: !336, line: 359, baseType: !180, size: 8)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1082, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1075, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1075, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1048, line: 237, baseType: !180)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1048, line: 257, baseType: !110)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1067, file: !1048, line: 530, baseType: !1091, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!109, !1073, !1094}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1048, line: 229, baseType: !110)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1067, file: !1048, line: 532, baseType: !1097, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!109, !1073, !1100, !1095}
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1048, line: 216, baseType: !110)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1067, file: !1048, line: 535, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!109, !1073, !1100}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1067, file: !1048, line: 537, baseType: !1102, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1067, file: !1048, line: 539, baseType: !1102, size: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1067, file: !1048, line: 541, baseType: !1108, size: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!109, !1073, !1088, !1047, !1053}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1067, file: !1048, line: 544, baseType: !1112, size: 32, offset: 224)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!109, !1073, !1115, !347}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1048, line: 478, size: 96, elements: !1117)
!1117 = !{!1118, !1125, !1130}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1116, file: !1048, line: 482, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1120, line: 33, baseType: !1121)
!1120 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1120, line: 29, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1121, file: !1120, line: 30, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1116, file: !1048, line: 485, baseType: !1126, size: 32, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1048, line: 464, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !1073, !1115, !1100}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1116, file: !1048, line: 493, baseType: !1100, size: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1067, file: !1048, line: 547, baseType: !1132, size: 32, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!110, !1073}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1048, line: 428, size: 32, elements: !1138)
!1138 = !{!1139}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1137, file: !1048, line: 434, baseType: !1100, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1048, line: 441, size: 32, elements: !1143)
!1143 = !{!1144}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1142, file: !1048, line: 447, baseType: !1100, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 469, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 458, size: 320, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1148, file: !312, line: 460, baseType: !316, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1148, file: !312, line: 461, baseType: !316, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1148, file: !312, line: 462, baseType: !316, size: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1148, file: !312, line: 463, baseType: !316, size: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1148, file: !312, line: 464, baseType: !316, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1148, file: !312, line: 465, baseType: !316, size: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1148, file: !312, line: 466, baseType: !316, size: 32, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1148, file: !312, line: 467, baseType: !316, size: 32, offset: 224)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1148, file: !312, line: 468, baseType: !1159, size: 64, offset: 256)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 484, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 475, size: 384, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1168, !1169, !1170, !1171}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1162, file: !312, line: 477, baseType: !316, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1162, file: !312, line: 478, baseType: !316, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1162, file: !312, line: 479, baseType: !1167, size: 128, offset: 64)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !716)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1162, file: !312, line: 480, baseType: !870, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1162, file: !312, line: 481, baseType: !316, size: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1162, file: !312, line: 482, baseType: !870, size: 64, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1162, file: !312, line: 483, baseType: !316, size: 32, offset: 352)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !1176)
!1176 = !{!1177, !1182, !1183, !1192, !1197, !1202, !1207}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1175, file: !848, line: 101, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !1179)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!109, !1073, !944}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1175, file: !848, line: 102, baseType: !1178, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1175, file: !848, line: 103, baseType: !1184, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!109, !1073, !944, !1188, !107}
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{null, !1073, !944, !107}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1175, file: !848, line: 104, baseType: !1193, size: 32, offset: 96)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !1194)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!109, !1073, !944, !900}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1175, file: !848, line: 105, baseType: !1198, size: 32, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!847, !1073, !944}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1175, file: !848, line: 106, baseType: !1203, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !1204)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!109, !1073, !944, !970}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1175, file: !848, line: 107, baseType: !1208, size: 32, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!109, !1073, !944, !107}
!1212 = !{!1213, !1219, !1221, !1231, !1233, !1235, !1237, !1239, !1241, !1243, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1042, !1320, !1322, !1335, !1337, !1339, !1341, !1343, !1345}
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1215 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 5)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1225)
!1225 = !{!1226, !1230}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1224, file: !327, line: 60, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!109, !1073}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1224, file: !327, line: 65, baseType: !1073, size: 32, offset: 32)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1245, isLocal: false, isDefinition: true, align: 16)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 144, elements: !1246)
!1246 = !{!1247}
!1247 = !DISubrange(count: 9)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1044, file: !1215, line: 762, type: !1278, isLocal: true, isDefinition: true)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1279, line: 237, size: 128, elements: !1280)
!1279 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1280 = !{!1281, !1282, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1278, file: !1279, line: 239, baseType: !1142, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1278, file: !1279, line: 241, baseType: !1073, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1278, file: !1279, line: 243, baseType: !1284, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1120, line: 40, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1120, line: 35, size: 64, elements: !1286)
!1286 = !{!1287, !1289}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1285, file: !1120, line: 36, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1285, file: !1120, line: 37, baseType: !1288, size: 32, offset: 32)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1044, file: !1215, line: 766, type: !1278, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1044, file: !1215, line: 770, type: !1278, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1044, file: !1215, line: 774, type: !1278, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1044, file: !1215, line: 778, type: !1278, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1044, file: !1215, line: 782, type: !1278, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1044, file: !1215, line: 786, type: !1278, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1044, file: !1215, line: 790, type: !1278, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1044, file: !1215, line: 656, type: !1066, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1044, file: !1215, line: 766, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1279, line: 224, size: 160, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1325, file: !1279, line: 226, baseType: !1137, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1325, file: !1279, line: 228, baseType: !900, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1325, file: !1279, line: 230, baseType: !109, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1325, file: !1279, line: 231, baseType: !1331, size: 64, offset: 96)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1331, file: !896, line: 344, baseType: !110, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1331, file: !896, line: 345, baseType: !110, size: 32, offset: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1044, file: !1215, line: 770, type: !1324, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1044, file: !1215, line: 774, type: !1324, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1044, file: !1215, line: 778, type: !1324, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1044, file: !1215, line: 782, type: !1324, isLocal: true, isDefinition: true)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1044, file: !1215, line: 786, type: !1324, isLocal: true, isDefinition: true)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1044, file: !1215, line: 790, type: !1324, isLocal: true, isDefinition: true)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1349, file: !1488, line: 44, type: !1626, isLocal: false, isDefinition: true)
!1349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1351, retainedTypes: !1384, globals: !1485, splitDebugInlining: false, nameTableKind: None)
!1350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1351 = !{!30, !1352, !1359, !1366, !1373, !1379, !847}
!1352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !984, line: 47, baseType: !32, size: 32, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357, !1358}
!1354 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1355 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1356 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1357 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1358 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !984, line: 75, baseType: !32, size: 32, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365}
!1361 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1362 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1363 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1364 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1365 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !984, line: 92, baseType: !32, size: 32, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1369 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1370 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1371 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1372 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !984, line: 84, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378}
!1375 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1378 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !984, line: 107, baseType: !32, size: 32, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1382 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1383 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1384 = !{!107, !109, !1385, !181, !180, !1434, !110, !944, !1445, !194, !111, !1484}
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !984, line: 336, size: 160, elements: !1388)
!1388 = !{!1389, !1408, !1412, !1416, !1429}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1387, file: !984, line: 365, baseType: !1390, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!109, !1393, !1005}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400, !1406, !1407}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1395, file: !336, line: 380, baseType: !279, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1395, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1395, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1395, file: !336, line: 386, baseType: !1401, size: 32, offset: 96)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1402, file: !336, line: 359, baseType: !180, size: 8)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1402, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1395, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1395, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1387, file: !984, line: 366, baseType: !1409, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1393, !181}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1387, file: !984, line: 374, baseType: !1413, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!109, !1393}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1387, file: !984, line: 377, baseType: !1417, size: 32, offset: 96)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!109, !1393, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !984, line: 122, size: 64, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1422, file: !984, line: 123, baseType: !110, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1422, file: !984, line: 124, baseType: !180, size: 8, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1422, file: !984, line: 125, baseType: !180, size: 8, offset: 40)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1422, file: !984, line: 126, baseType: !180, size: 8, offset: 48)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1422, file: !984, line: 127, baseType: !180, size: 8, offset: 56)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1387, file: !984, line: 379, baseType: !1430, size: 32, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!109, !1393, !1433}
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 783, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 774, size: 224, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1444}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1436, file: !312, line: 776, baseType: !316, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1436, file: !312, line: 777, baseType: !316, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1436, file: !312, line: 778, baseType: !316, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1436, file: !312, line: 779, baseType: !316, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1436, file: !312, line: 780, baseType: !316, size: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1436, file: !312, line: 781, baseType: !316, size: 32, offset: 160)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1436, file: !312, line: 782, baseType: !316, size: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !1448)
!1448 = !{!1449, !1454, !1455, !1464, !1469, !1474, !1479}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1447, file: !848, line: 101, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!109, !1393, !944}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1447, file: !848, line: 102, baseType: !1450, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1447, file: !848, line: 103, baseType: !1456, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!109, !1393, !944, !1460, !107}
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !1393, !944, !107}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1447, file: !848, line: 104, baseType: !1465, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!109, !1393, !944, !900}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1447, file: !848, line: 105, baseType: !1470, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!847, !1393, !944}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1447, file: !848, line: 106, baseType: !1475, size: 32, offset: 160)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!109, !1393, !944, !970}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1447, file: !848, line: 107, baseType: !1480, size: 32, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!109, !1393, !944, !107}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1485 = !{!1347, !1486, !1492, !1494, !1501, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1571, !1574, !1576, !1579, !1582, !1584, !1590, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616, !1618, !1620, !1622, !1624}
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1488 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1490)
!1490 = !{!1491}
!1491 = !DISubrange(count: 8)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1497, file: !327, line: 60, baseType: !1413, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1497, file: !327, line: 65, baseType: !1393, size: 32, offset: 32)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1531, line: 22, size: 224, elements: !1532)
!1531 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1532 = !{!1533, !1534, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1530, file: !1531, line: 24, baseType: !1434, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1530, file: !1531, line: 26, baseType: !1535, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !1538)
!1538 = !{!1539, !1540}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1537, file: !896, line: 344, baseType: !110, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1537, file: !896, line: 345, baseType: !110, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1530, file: !1531, line: 28, baseType: !234, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1530, file: !1531, line: 30, baseType: !347, size: 8, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1530, file: !1531, line: 32, baseType: !109, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1530, file: !1531, line: 34, baseType: !347, size: 8, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1530, file: !1531, line: 36, baseType: !347, size: 8, offset: 168)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1530, file: !1531, line: 38, baseType: !347, size: 8, offset: 176)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1530, file: !1531, line: 40, baseType: !347, size: 8, offset: 184)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1530, file: !1531, line: 41, baseType: !1549, size: 32, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1552, line: 60, size: 64, elements: !1553)
!1552 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1553 = !{!1554, !1570}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1551, file: !1552, line: 69, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1552, line: 50, size: 64, elements: !1558)
!1558 = !{!1559, !1568, !1569}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1557, file: !1552, line: 52, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !1564)
!1563 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !1565)
!1565 = !{!1566, !1567}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1564, file: !1563, line: 34, baseType: !110, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1564, file: !1563, line: 36, baseType: !110, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1557, file: !1552, line: 54, baseType: !180, size: 8, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1557, file: !1552, line: 56, baseType: !180, size: 8, offset: 40)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1551, file: !1552, line: 71, baseType: !180, size: 8, offset: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1536, size: 64, elements: !517)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1556, size: 64, elements: !517)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 128, elements: !175)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1349, file: !1488, line: 1539, type: !1386, isLocal: true, isDefinition: true)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1531, line: 74, size: 64, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1586, file: !1531, line: 76, baseType: !110, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1586, file: !1531, line: 78, baseType: !1393, size: 32, offset: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1627, file: !291, line: 17, baseType: !279, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1627, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1633, file: !1711, line: 65, type: !316, isLocal: true, isDefinition: true)
!1633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1635, retainedTypes: !1636, globals: !1708, splitDebugInlining: false, nameTableKind: None)
!1634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1635 = !{!604}
!1636 = !{!103, !1637, !774, !180, !110, !1645, !1676}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1639, file: !535, line: 766, baseType: !316, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1639, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1639, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1639, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1648)
!1648 = !{!1649, !1651, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1666, !1671, !1675}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1647, file: !535, line: 413, baseType: !1650, size: 256)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1490)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1647, file: !535, line: 414, baseType: !1652, size: 768, offset: 256)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 24)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1647, file: !535, line: 415, baseType: !1650, size: 256, offset: 1024)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1647, file: !535, line: 416, baseType: !1652, size: 768, offset: 1280)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1647, file: !535, line: 417, baseType: !1650, size: 256, offset: 2048)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1647, file: !535, line: 418, baseType: !1652, size: 768, offset: 2304)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1647, file: !535, line: 419, baseType: !1650, size: 256, offset: 3072)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1647, file: !535, line: 420, baseType: !1652, size: 768, offset: 3328)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1647, file: !535, line: 421, baseType: !1650, size: 256, offset: 4096)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1647, file: !535, line: 422, baseType: !1663, size: 1792, offset: 4352)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 56)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1647, file: !535, line: 423, baseType: !1667, size: 1920, offset: 6144)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 1920, elements: !1669)
!1668 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1669 = !{!1670}
!1670 = !DISubrange(count: 240)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1647, file: !535, line: 424, baseType: !1672, size: 20608, offset: 8064)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1673)
!1673 = !{!1674}
!1674 = !DISubrange(count: 644)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1647, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1699, !1700, !1701, !1703, !1705, !1707}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1678, file: !535, line: 447, baseType: !539, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1678, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1678, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1678, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1678, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1678, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1678, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 96, elements: !1688)
!1688 = !{!1689}
!1689 = !DISubrange(count: 12)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1678, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1678, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1678, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1678, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1678, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1678, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1678, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1678, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !175)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1678, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1678, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1678, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !716)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1678, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1217)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1678, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1217)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1678, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1708 = !{!1709, !1735, !1740, !1742, !1744, !1631}
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1633, file: !1711, line: 285, type: !1712, isLocal: true, isDefinition: true, align: 32)
!1711 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1714)
!1714 = !{!1715, !1734}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1713, file: !327, line: 60, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!109, !1719}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1726, !1732, !1733}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1721, file: !336, line: 380, baseType: !279, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1721, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1721, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1721, file: !336, line: 386, baseType: !1727, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1728, file: !336, line: 359, baseType: !180, size: 8)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1728, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1721, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1721, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1713, file: !327, line: 65, baseType: !1719, size: 32, offset: 32)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "lock", scope: !1633, file: !1711, line: 34, type: !1737, isLocal: true, isDefinition: true)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1738)
!1738 = !{!1739}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1737, file: !253, line: 52, baseType: !22, size: 32)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "last_load", scope: !1633, file: !1711, line: 36, type: !110, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1633, file: !1711, line: 48, type: !110, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1633, file: !1711, line: 54, type: !110, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1748, file: !1830, line: 22, type: !1832, isLocal: true, isDefinition: true)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !1751, globals: !1827, splitDebugInlining: false, nameTableKind: None)
!1749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1750 = !{!1047, !1053}
!1751 = !{!1752, !1816, !1821, !1100, !1053, !1047, !1826, !107}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1048, line: 523, size: 288, elements: !1755)
!1755 = !{!1756, !1775, !1779, !1783, !1787, !1788, !1789, !1793, !1812}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1754, file: !1048, line: 524, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!109, !1760, !1088, !1089}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1773, !1774}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1762, file: !336, line: 380, baseType: !279, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1762, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1762, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1762, file: !336, line: 386, baseType: !1768, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1769, file: !336, line: 359, baseType: !180, size: 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1769, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1762, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1762, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1754, file: !1048, line: 530, baseType: !1776, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!109, !1760, !1094}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1754, file: !1048, line: 532, baseType: !1780, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!109, !1760, !1100, !1095}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1754, file: !1048, line: 535, baseType: !1784, size: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!109, !1760, !1100}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1754, file: !1048, line: 537, baseType: !1784, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1754, file: !1048, line: 539, baseType: !1784, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1754, file: !1048, line: 541, baseType: !1790, size: 32, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!109, !1760, !1088, !1047, !1053}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1754, file: !1048, line: 544, baseType: !1794, size: 32, offset: 224)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!109, !1760, !1797, !347}
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1048, line: 478, size: 96, elements: !1799)
!1799 = !{!1800, !1806, !1811}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1798, file: !1048, line: 482, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1120, line: 33, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1120, line: 29, size: 32, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1802, file: !1120, line: 30, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1798, file: !1048, line: 485, baseType: !1807, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1048, line: 464, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1760, !1797, !1100}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1798, file: !1048, line: 493, baseType: !1100, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1754, file: !1048, line: 547, baseType: !1813, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!110, !1760}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1048, line: 428, size: 32, elements: !1819)
!1819 = !{!1820}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1818, file: !1048, line: 434, baseType: !1100, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1048, line: 441, size: 32, elements: !1824)
!1824 = !{!1825}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1823, file: !1048, line: 447, baseType: !1100, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1827 = !{!1828, !1746}
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1829 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1748, file: !1830, line: 37, type: !1831, isLocal: true, isDefinition: true)
!1830 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 352, elements: !1834)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1834 = !{!1835}
!1835 = !DISubrange(count: 11)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1838, file: !1882, line: 139, type: !1889, isLocal: false, isDefinition: true)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1840, globals: !1879, splitDebugInlining: false, nameTableKind: None)
!1839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1843, file: !312, line: 552, baseType: !316, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1843, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1843, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1843, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1843, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1843, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1843, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1843, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1843, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1843, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1843, file: !312, line: 562, baseType: !870, size: 64, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1843, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1843, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1843, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1843, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1843, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1843, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1843, file: !312, line: 569, baseType: !870, size: 64, offset: 576)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1843, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1843, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1843, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1843, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1843, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1843, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1843, file: !312, line: 576, baseType: !870, size: 64, offset: 832)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1843, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1843, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1843, file: !312, line: 579, baseType: !870, size: 64, offset: 960)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1843, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1843, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1843, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1843, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1843, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1843, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!1879 = !{!1880, !1883, !1836}
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1838, file: !1882, line: 137, type: !110, isLocal: false, isDefinition: true)
!1882 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1838, file: !1882, line: 138, type: !1885, isLocal: false, isDefinition: true)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 128, elements: !1887)
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1887 = !{!1888}
!1888 = !DISubrange(count: 16)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 64, elements: !1490)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1892, file: !1895, line: 23, type: !1896, isLocal: false, isDefinition: true)
!1892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1894, splitDebugInlining: false, nameTableKind: None)
!1893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1894 = !{!1890}
!1895 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1899, file: !1903, line: 37, type: !2159, isLocal: false, isDefinition: true)
!1899 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1900, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1901, retainedTypes: !1910, globals: !1983, splitDebugInlining: false, nameTableKind: None)
!1900 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!1901 = !{!1902, !30, !604}
!1902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1903, line: 63, baseType: !32, size: 32, elements: !1904)
!1903 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1904 = !{!1905, !1906, !1907, !1908, !1909}
!1905 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1906 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1907 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1908 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1909 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1910 = !{!234, !107, !109, !1911, !285, !110, !1941, !774, !180, !1966}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1914, line: 51, size: 64, elements: !1915)
!1914 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1915 = !{!1916, !1936}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1913, file: !1914, line: 52, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1914, line: 38, baseType: !1918)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1919 = !DISubroutineType(types: !1920)
!1920 = !{!109, !1921, !286, !194}
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1934, !1935}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1923, file: !336, line: 380, baseType: !279, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1923, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1923, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1923, file: !336, line: 386, baseType: !1929, size: 32, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1930, file: !336, line: 359, baseType: !180, size: 8)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1930, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1923, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1923, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1913, file: !1914, line: 53, baseType: !1937, size: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1914, line: 47, baseType: !1938)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!109, !1921, !286, !194, !110}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1943, file: !535, line: 447, baseType: !539, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1943, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1943, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1943, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1943, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1943, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1943, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1943, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1943, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1943, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1943, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1943, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1943, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1943, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1943, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1943, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1943, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1943, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1943, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1943, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1943, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1968, file: !535, line: 413, baseType: !1650, size: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1968, file: !535, line: 414, baseType: !1652, size: 768, offset: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1968, file: !535, line: 415, baseType: !1650, size: 256, offset: 1024)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1968, file: !535, line: 416, baseType: !1652, size: 768, offset: 1280)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1968, file: !535, line: 417, baseType: !1650, size: 256, offset: 2048)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1968, file: !535, line: 418, baseType: !1652, size: 768, offset: 2304)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1968, file: !535, line: 419, baseType: !1650, size: 256, offset: 3072)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1968, file: !535, line: 420, baseType: !1652, size: 768, offset: 3328)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1968, file: !535, line: 421, baseType: !1650, size: 256, offset: 4096)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1968, file: !535, line: 422, baseType: !1663, size: 1792, offset: 4352)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1968, file: !535, line: 423, baseType: !1667, size: 1920, offset: 6144)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1968, file: !535, line: 424, baseType: !1672, size: 20608, offset: 8064)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1968, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1983 = !{!1897, !1984, !2110, !2117, !2119, !2122, !2127, !2129, !2134}
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(name: "_kernel", scope: !1899, file: !1903, line: 40, type: !1986, isLocal: false, isDefinition: true)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1987)
!1987 = !{!1988, !2105}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1986, file: !122, line: 159, baseType: !1989, size: 192)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1990, size: 192, elements: !517)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1991)
!1991 = !{!1992, !1993, !1994, !2098, !2099, !2100, !2101}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1990, file: !122, line: 102, baseType: !110, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1990, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1990, file: !122, line: 108, baseType: !1995, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1997)
!1997 = !{!1998, !2056, !2068, !2069, !2070, !2071, !2072, !2078, !2093}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1996, file: !158, line: 247, baseType: !1999, size: 384)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2000)
!2000 = !{!2001, !2025, !2032, !2033, !2034, !2043, !2044, !2045}
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1999, file: !158, line: 60, baseType: !2002, size: 64)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1999, file: !158, line: 60, size: 64, elements: !2003)
!2003 = !{!2004, !2019}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2002, file: !158, line: 61, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2007)
!2007 = !{!2008, !2014}
!2008 = !DIDerivedType(tag: DW_TAG_member, scope: !2006, file: !127, line: 38, baseType: !2009, size: 32)
!2009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2006, file: !127, line: 38, size: 32, elements: !2010)
!2010 = !{!2011, !2013}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2009, file: !127, line: 39, baseType: !2012, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2009, file: !127, line: 40, baseType: !2012, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, scope: !2006, file: !127, line: 42, baseType: !2015, size: 32, offset: 32)
!2015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2006, file: !127, line: 42, size: 32, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2015, file: !127, line: 43, baseType: !2012, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2015, file: !127, line: 44, baseType: !2012, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2002, file: !158, line: 62, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2021)
!2021 = !{!2022}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2020, file: !170, line: 50, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2024, size: 64, elements: !175)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1999, file: !158, line: 68, baseType: !2026, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2029)
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2028, file: !122, line: 232, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2006)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1999, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1999, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !1999, file: !158, line: 90, baseType: !2035, size: 16, offset: 112)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1999, file: !158, line: 90, size: 16, elements: !2036)
!2036 = !{!2037, !2042}
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !2035, file: !158, line: 91, baseType: !2038, size: 16)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !158, line: 91, size: 16, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2038, file: !158, line: 96, baseType: !190, size: 8)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2038, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2035, file: !158, line: 100, baseType: !194, size: 16)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1999, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1999, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1999, file: !158, line: 131, baseType: !2046, size: 192, offset: 192)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2047)
!2047 = !{!2048, !2049, !2055}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2046, file: !122, line: 245, baseType: !2005, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2046, file: !122, line: 246, baseType: !2050, size: 32, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{null, !2054}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2046, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1996, file: !158, line: 250, baseType: !2057, size: 288, offset: 384)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2057, file: !211, line: 26, baseType: !110, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2057, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2057, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2057, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2057, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2057, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2057, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2057, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2057, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1996, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1996, file: !158, line: 256, baseType: !2027, size: 64, offset: 704)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1996, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1996, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1996, file: !158, line: 300, baseType: !2073, size: 96, offset: 1056)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2074)
!2074 = !{!2075, !2076, !2077}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2073, file: !158, line: 153, baseType: !22, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2073, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2073, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1996, file: !158, line: 325, baseType: !2079, size: 32, offset: 1152)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2081)
!2081 = !{!2082, !2088, !2089}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2080, file: !118, line: 5074, baseType: !2083, size: 96)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2084)
!2084 = !{!2085, !2086, !2087}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2083, file: !243, line: 57, baseType: !246, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2083, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2083, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2080, file: !118, line: 5075, baseType: !2027, size: 64, offset: 96)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2080, file: !118, line: 5076, baseType: !2090, size: 32, offset: 160)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2091)
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2090, file: !253, line: 52, baseType: !22, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1996, file: !158, line: 343, baseType: !2094, size: 64, offset: 1184)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2095)
!2095 = !{!2096, !2097}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2094, file: !211, line: 63, baseType: !110, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2094, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1990, file: !122, line: 111, baseType: !1995, size: 32, offset: 96)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1990, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1990, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1990, file: !122, line: 153, baseType: !2102, offset: 168)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2103, line: 33, elements: !2104)
!2103 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2104 = !{}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1986, file: !122, line: 170, baseType: !2106, size: 96, offset: 192)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2106, file: !122, line: 86, baseType: !1995, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2106, file: !122, line: 90, baseType: !2031, size: 64, offset: 32)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1899, file: !1903, line: 43, type: !2112, isLocal: false, isDefinition: true, align: 512)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2113, size: 8704, elements: !2116)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2113, file: !147, line: 48, baseType: !150, size: 8)
!2116 = !{!153}
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1899, file: !1903, line: 44, type: !1996, isLocal: false, isDefinition: true)
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1899, file: !1903, line: 48, type: !2121, isLocal: false, isDefinition: true)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1996, size: 1280, elements: !517)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1899, file: !1903, line: 86, type: !2124, isLocal: false, isDefinition: true, align: 512)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2113, size: 16896, elements: !2125)
!2125 = !{!518, !2126}
!2126 = !DISubrange(count: 2112)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1899, file: !1903, line: 217, type: !347, isLocal: false, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1899, file: !1903, line: 50, type: !2131, isLocal: true, isDefinition: true, align: 512)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2113, size: 3072, elements: !2132)
!2132 = !{!518, !2133}
!2133 = !DISubrange(count: 384)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "levels", scope: !2136, file: !1903, line: 232, type: !2156, isLocal: true, isDefinition: true)
!2136 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1903, file: !1903, line: 230, type: !2137, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !2139)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !1902}
!2139 = !{!2140, !2141, !2151, !2155}
!2140 = !DILocalVariable(name: "level", arg: 1, scope: !2136, file: !1903, line: 230, type: !1902)
!2141 = !DILocalVariable(name: "entry", scope: !2136, file: !1903, line: 244, type: !2142)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2145)
!2145 = !{!2146, !2150}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2144, file: !327, line: 60, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!109, !1921}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2144, file: !327, line: 65, baseType: !1921, size: 32, offset: 32)
!2151 = !DILocalVariable(name: "dev", scope: !2152, file: !1903, line: 247, type: !1921)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !1903, line: 246, column: 64)
!2153 = distinct !DILexicalBlock(scope: !2154, file: !1903, line: 246, column: 2)
!2154 = distinct !DILexicalBlock(scope: !2136, file: !1903, line: 246, column: 2)
!2155 = !DILocalVariable(name: "rc", scope: !2152, file: !1903, line: 248, type: !109)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2142, size: 192, elements: !2157)
!2157 = !{!2158}
!2158 = !DISubrange(count: 6)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2160, file: !291, line: 17, baseType: !279, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2160, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "states_str", scope: !2166, file: !2167, line: 276, type: !2291, isLocal: true, isDefinition: true)
!2166 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2167, file: !2167, line: 271, type: !2168, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2282)
!2167 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!279, !2170, !285, !234}
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2173)
!2173 = !{!2174, !2232, !2244, !2245, !2246, !2247, !2248, !2254, !2269}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2172, file: !158, line: 247, baseType: !2175, size: 384)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2176)
!2176 = !{!2177, !2201, !2208, !2209, !2210, !2219, !2220, !2221}
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !2175, file: !158, line: 60, baseType: !2178, size: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2175, file: !158, line: 60, size: 64, elements: !2179)
!2179 = !{!2180, !2195}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2178, file: !158, line: 61, baseType: !2181, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2182)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2183)
!2183 = !{!2184, !2190}
!2184 = !DIDerivedType(tag: DW_TAG_member, scope: !2182, file: !127, line: 38, baseType: !2185, size: 32)
!2185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2182, file: !127, line: 38, size: 32, elements: !2186)
!2186 = !{!2187, !2189}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2185, file: !127, line: 39, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2185, file: !127, line: 40, baseType: !2188, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, scope: !2182, file: !127, line: 42, baseType: !2191, size: 32, offset: 32)
!2191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2182, file: !127, line: 42, size: 32, elements: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2191, file: !127, line: 43, baseType: !2188, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2191, file: !127, line: 44, baseType: !2188, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2178, file: !158, line: 62, baseType: !2196, size: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2197)
!2197 = !{!2198}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2196, file: !170, line: 50, baseType: !2199, size: 64)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2200, size: 64, elements: !175)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2175, file: !158, line: 68, baseType: !2202, size: 32, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2205)
!2205 = !{!2206}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2204, file: !122, line: 232, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2182)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2175, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2175, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2210 = !DIDerivedType(tag: DW_TAG_member, scope: !2175, file: !158, line: 90, baseType: !2211, size: 16, offset: 112)
!2211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2175, file: !158, line: 90, size: 16, elements: !2212)
!2212 = !{!2213, !2218}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !158, line: 91, baseType: !2214, size: 16)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2211, file: !158, line: 91, size: 16, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2214, file: !158, line: 96, baseType: !190, size: 8)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2214, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2211, file: !158, line: 100, baseType: !194, size: 16)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2175, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2175, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2175, file: !158, line: 131, baseType: !2222, size: 192, offset: 192)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2223)
!2223 = !{!2224, !2225, !2231}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2222, file: !122, line: 245, baseType: !2181, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2222, file: !122, line: 246, baseType: !2226, size: 32, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2227)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{null, !2230}
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2222, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2172, file: !158, line: 250, baseType: !2233, size: 288, offset: 384)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2233, file: !211, line: 26, baseType: !110, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2233, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2233, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2233, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2233, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2233, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2233, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2233, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2233, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2172, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2172, file: !158, line: 256, baseType: !2203, size: 64, offset: 704)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2172, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2172, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2172, file: !158, line: 300, baseType: !2249, size: 96, offset: 1056)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2250)
!2250 = !{!2251, !2252, !2253}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2249, file: !158, line: 153, baseType: !22, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2249, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2249, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2172, file: !158, line: 325, baseType: !2255, size: 32, offset: 1152)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2257)
!2257 = !{!2258, !2264, !2265}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2256, file: !118, line: 5074, baseType: !2259, size: 96)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2260)
!2260 = !{!2261, !2262, !2263}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2259, file: !243, line: 57, baseType: !246, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2259, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2259, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2256, file: !118, line: 5075, baseType: !2203, size: 64, offset: 96)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2256, file: !118, line: 5076, baseType: !2266, size: 32, offset: 160)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2267)
!2267 = !{!2268}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2266, file: !253, line: 52, baseType: !22, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2172, file: !158, line: 343, baseType: !2270, size: 64, offset: 1184)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2271)
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2270, file: !211, line: 63, baseType: !110, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2270, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2276, globals: !2278, splitDebugInlining: false, nameTableKind: None)
!2275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2276 = !{!107, !279, !103, !180, !22, !109, !2277, !24, !234, !285, !110, !111}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2278 = !{!2164, !2279}
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "states_sz", scope: !2166, file: !2167, line: 279, type: !2281, isLocal: true, isDefinition: true)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 256, elements: !1490)
!2282 = !{!2283, !2284, !2285, !2286, !2287, !2288, !2289}
!2283 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2166, file: !2167, line: 271, type: !2170)
!2284 = !DILocalVariable(name: "buf", arg: 2, scope: !2166, file: !2167, line: 271, type: !285)
!2285 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2166, file: !2167, line: 271, type: !234)
!2286 = !DILocalVariable(name: "off", scope: !2166, file: !2167, line: 273, type: !234)
!2287 = !DILocalVariable(name: "bit", scope: !2166, file: !2167, line: 274, type: !180)
!2288 = !DILocalVariable(name: "thread_state", scope: !2166, file: !2167, line: 275, type: !180)
!2289 = !DILocalVariable(name: "index", scope: !2290, file: !2167, line: 293, type: !180)
!2290 = distinct !DILexicalBlock(scope: !2166, file: !2167, line: 293, column: 2)
!2291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1490)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "lock", scope: !2294, file: !2402, line: 47, type: !2393, isLocal: true, isDefinition: true)
!2294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2296, globals: !2401, splitDebugInlining: false, nameTableKind: None)
!2295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2296 = !{!347, !107, !109, !2297, !2312}
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2300)
!2300 = !{!2301, !2307}
!2301 = !DIDerivedType(tag: DW_TAG_member, scope: !2299, file: !127, line: 38, baseType: !2302, size: 32)
!2302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2299, file: !127, line: 38, size: 32, elements: !2303)
!2303 = !{!2304, !2306}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2302, file: !127, line: 39, baseType: !2305, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2302, file: !127, line: 40, baseType: !2305, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, scope: !2299, file: !127, line: 42, baseType: !2308, size: 32, offset: 32)
!2308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2299, file: !127, line: 42, size: 32, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2308, file: !127, line: 43, baseType: !2305, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2308, file: !127, line: 44, baseType: !2305, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2314)
!2314 = !{!2315, !2359, !2371, !2372, !2373, !2374, !2375, !2381, !2396}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2313, file: !158, line: 247, baseType: !2316, size: 384)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2317)
!2317 = !{!2318, !2328, !2335, !2336, !2337, !2346, !2347, !2348}
!2318 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !158, line: 60, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !158, line: 60, size: 64, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2319, file: !158, line: 61, baseType: !2298, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2319, file: !158, line: 62, baseType: !2323, size: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2324)
!2324 = !{!2325}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2323, file: !170, line: 50, baseType: !2326, size: 64)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2327, size: 64, elements: !175)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2316, file: !158, line: 68, baseType: !2329, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2331, file: !122, line: 232, baseType: !2334, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2299)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2316, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2316, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2337 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !158, line: 90, baseType: !2338, size: 16, offset: 112)
!2338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2316, file: !158, line: 90, size: 16, elements: !2339)
!2339 = !{!2340, !2345}
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2338, file: !158, line: 91, baseType: !2341, size: 16)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2338, file: !158, line: 91, size: 16, elements: !2342)
!2342 = !{!2343, !2344}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2341, file: !158, line: 96, baseType: !190, size: 8)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2341, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2338, file: !158, line: 100, baseType: !194, size: 16)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2316, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2316, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2316, file: !158, line: 131, baseType: !2349, size: 192, offset: 192)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2350)
!2350 = !{!2351, !2352, !2358}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2349, file: !122, line: 245, baseType: !2298, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2349, file: !122, line: 246, baseType: !2353, size: 32, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2354)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{null, !2357}
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2349, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2313, file: !158, line: 250, baseType: !2360, size: 288, offset: 384)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2360, file: !211, line: 26, baseType: !110, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2360, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2360, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2360, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2360, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2360, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2360, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2360, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2360, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2313, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2313, file: !158, line: 256, baseType: !2330, size: 64, offset: 704)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2313, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2313, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2313, file: !158, line: 300, baseType: !2376, size: 96, offset: 1056)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2377)
!2377 = !{!2378, !2379, !2380}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2376, file: !158, line: 153, baseType: !22, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2376, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2376, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2313, file: !158, line: 325, baseType: !2382, size: 32, offset: 1152)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2384)
!2384 = !{!2385, !2391, !2392}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2383, file: !118, line: 5074, baseType: !2386, size: 96)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2387)
!2387 = !{!2388, !2389, !2390}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2386, file: !243, line: 57, baseType: !246, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2386, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2386, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2383, file: !118, line: 5075, baseType: !2330, size: 64, offset: 96)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2383, file: !118, line: 5076, baseType: !2393, size: 32, offset: 160)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2394)
!2394 = !{!2395}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2393, file: !253, line: 52, baseType: !22, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2313, file: !158, line: 343, baseType: !2397, size: 64, offset: 1184)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2398)
!2398 = !{!2399, !2400}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2397, file: !211, line: 63, baseType: !110, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2397, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2401 = !{!2292}
!2402 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2405, file: !2516, line: 56, type: !2503, isLocal: false, isDefinition: true)
!2405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2407, globals: !2513, splitDebugInlining: false, nameTableKind: None)
!2406 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2407 = !{!2408, !285, !107, !2511, !286, !103, !774, !109, !110, !111, !2512}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2410)
!2410 = !{!2411, !2469, !2481, !2482, !2483, !2484, !2485, !2491, !2506}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2409, file: !158, line: 247, baseType: !2412, size: 384)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2413)
!2413 = !{!2414, !2438, !2445, !2446, !2447, !2456, !2457, !2458}
!2414 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !158, line: 60, baseType: !2415, size: 64)
!2415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !158, line: 60, size: 64, elements: !2416)
!2416 = !{!2417, !2432}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2415, file: !158, line: 61, baseType: !2418, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2419)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2420)
!2420 = !{!2421, !2427}
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !127, line: 38, baseType: !2422, size: 32)
!2422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !127, line: 38, size: 32, elements: !2423)
!2423 = !{!2424, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2422, file: !127, line: 39, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2422, file: !127, line: 40, baseType: !2425, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !127, line: 42, baseType: !2428, size: 32, offset: 32)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !127, line: 42, size: 32, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2428, file: !127, line: 43, baseType: !2425, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2428, file: !127, line: 44, baseType: !2425, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2415, file: !158, line: 62, baseType: !2433, size: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2434)
!2434 = !{!2435}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2433, file: !170, line: 50, baseType: !2436, size: 64)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2437, size: 64, elements: !175)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2412, file: !158, line: 68, baseType: !2439, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2441, file: !122, line: 232, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2419)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2412, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2412, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2412, file: !158, line: 90, baseType: !2448, size: 16, offset: 112)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2412, file: !158, line: 90, size: 16, elements: !2449)
!2449 = !{!2450, !2455}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !158, line: 91, baseType: !2451, size: 16)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2448, file: !158, line: 91, size: 16, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2451, file: !158, line: 96, baseType: !190, size: 8)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2451, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2448, file: !158, line: 100, baseType: !194, size: 16)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2412, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2412, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2412, file: !158, line: 131, baseType: !2459, size: 192, offset: 192)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2460)
!2460 = !{!2461, !2462, !2468}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2459, file: !122, line: 245, baseType: !2418, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2459, file: !122, line: 246, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !2467}
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2459, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2409, file: !158, line: 250, baseType: !2470, size: 288, offset: 384)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2470, file: !211, line: 26, baseType: !110, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2470, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2470, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2470, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2470, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2470, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2470, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2470, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2470, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2409, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2409, file: !158, line: 256, baseType: !2440, size: 64, offset: 704)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2409, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2409, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2409, file: !158, line: 300, baseType: !2486, size: 96, offset: 1056)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2487)
!2487 = !{!2488, !2489, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2486, file: !158, line: 153, baseType: !22, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2486, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2486, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2409, file: !158, line: 325, baseType: !2492, size: 32, offset: 1152)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2494)
!2494 = !{!2495, !2501, !2502}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2493, file: !118, line: 5074, baseType: !2496, size: 96)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2497)
!2497 = !{!2498, !2499, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2496, file: !243, line: 57, baseType: !246, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2496, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2496, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2493, file: !118, line: 5075, baseType: !2440, size: 64, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2493, file: !118, line: 5076, baseType: !2503, size: 32, offset: 160)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2504)
!2504 = !{!2505}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2503, file: !253, line: 52, baseType: !22, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2409, file: !158, line: 343, baseType: !2507, size: 64, offset: 1184)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2508)
!2508 = !{!2509, !2510}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2507, file: !211, line: 63, baseType: !110, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2507, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2513 = !{!2403, !2514, !2517, !2519}
!2514 = !DIGlobalVariableExpression(var: !2515, expr: !DIExpression())
!2515 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2405, file: !2516, line: 404, type: !109, isLocal: true, isDefinition: true)
!2516 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2517 = !DIGlobalVariableExpression(var: !2518, expr: !DIExpression())
!2518 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2405, file: !2516, line: 405, type: !109, isLocal: true, isDefinition: true)
!2519 = !DIGlobalVariableExpression(var: !2520, expr: !DIExpression())
!2520 = distinct !DIGlobalVariable(name: "pending_current", scope: !2405, file: !2516, line: 425, type: !2408, isLocal: true, isDefinition: true)
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "lock", scope: !2523, file: !2542, line: 14, type: !2543, isLocal: true, isDefinition: true)
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2525, globals: !2541, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2525 = !{!107, !103, !109, !2526}
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2529)
!2529 = !{!2530, !2536}
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2528, file: !127, line: 38, baseType: !2531, size: 32)
!2531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2528, file: !127, line: 38, size: 32, elements: !2532)
!2532 = !{!2533, !2535}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2531, file: !127, line: 39, baseType: !2534, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2531, file: !127, line: 40, baseType: !2534, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2528, file: !127, line: 42, baseType: !2537, size: 32, offset: 32)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2528, file: !127, line: 42, size: 32, elements: !2538)
!2538 = !{!2539, !2540}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2537, file: !127, line: 43, baseType: !2534, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2537, file: !127, line: 44, baseType: !2534, size: 32)
!2541 = !{!2521}
!2542 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2544)
!2544 = !{!2545}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2543, file: !253, line: 52, baseType: !22, size: 32)
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2548, file: !2578, line: 19, type: !2584, isLocal: true, isDefinition: true)
!2548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2550, globals: !2575, splitDebugInlining: false, nameTableKind: None)
!2549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2550 = !{!103, !107, !774, !110, !111, !109, !2551, !285, !105}
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2553)
!2553 = !{!2554, !2569, !2574}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2552, file: !122, line: 245, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2556)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2557)
!2557 = !{!2558, !2564}
!2558 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !127, line: 38, baseType: !2559, size: 32)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !127, line: 38, size: 32, elements: !2560)
!2560 = !{!2561, !2563}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2559, file: !127, line: 39, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2559, file: !127, line: 40, baseType: !2562, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, scope: !2556, file: !127, line: 42, baseType: !2565, size: 32, offset: 32)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2556, file: !127, line: 42, size: 32, elements: !2566)
!2566 = !{!2567, !2568}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2565, file: !127, line: 43, baseType: !2562, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2565, file: !127, line: 44, baseType: !2562, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2552, file: !122, line: 246, baseType: !2570, size: 32, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{null, !2551}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2552, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2575 = !{!2576, !2546, !2579, !2581}
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2548, file: !2578, line: 15, type: !111, isLocal: true, isDefinition: true)
!2578 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2548, file: !2578, line: 25, type: !109, isLocal: true, isDefinition: true)
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2548, file: !2578, line: 17, type: !2583, isLocal: true, isDefinition: true)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2556)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2585)
!2585 = !{!2586}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2584, file: !253, line: 52, baseType: !22, size: 32)
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2593, retainedTypes: !2613, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2593 = !{!2594, !2602}
!2594 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2595, line: 69, baseType: !32, size: 32, elements: !2596)
!2595 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2596 = !{!2597, !2598, !2599, !2600, !2601}
!2597 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2598 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2599 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2600 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2601 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2602 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2595, line: 56, baseType: !32, size: 32, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!2604 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2605 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2606 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2607 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2608 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2609 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2610 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2611 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2612 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2613 = !{!109, !2594, !2602, !2614, !191, !354, !2616, !2617, !181, !195, !279, !234, !107, !22, !32, !281, !2619, !2620, !102, !282, !106, !283, !2615, !2621, !2622, !2623, !2624}
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2595, line: 31, baseType: !2615)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2595, line: 32, baseType: !2618)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2631, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2631 = !{!279, !181, !109, !32}
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2634, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2634 = !{!2635, !30}
!2635 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2636, line: 27, baseType: !32, size: 32, elements: !2637)
!2636 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2637 = !{!2638, !2639, !2640, !2641, !2642}
!2638 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2639 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2640 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2641 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2642 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2644, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2645, retainedTypes: !2646, splitDebugInlining: false, nameTableKind: None)
!2644 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2645 = !{!604, !2635, !30}
!2646 = !{!800, !2647, !107, !109, !774, !110, !180, !2664}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2649, file: !535, line: 413, baseType: !1650, size: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2649, file: !535, line: 414, baseType: !1652, size: 768, offset: 256)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2649, file: !535, line: 415, baseType: !1650, size: 256, offset: 1024)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2649, file: !535, line: 416, baseType: !1652, size: 768, offset: 1280)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2649, file: !535, line: 417, baseType: !1650, size: 256, offset: 2048)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2649, file: !535, line: 418, baseType: !1652, size: 768, offset: 2304)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2649, file: !535, line: 419, baseType: !1650, size: 256, offset: 3072)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2649, file: !535, line: 420, baseType: !1652, size: 768, offset: 3328)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2649, file: !535, line: 421, baseType: !1650, size: 256, offset: 4096)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2649, file: !535, line: 422, baseType: !1663, size: 1792, offset: 4352)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2649, file: !535, line: 423, baseType: !1667, size: 1920, offset: 6144)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2649, file: !535, line: 424, baseType: !1672, size: 20608, offset: 8064)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2649, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2666, file: !535, line: 447, baseType: !539, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2666, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2666, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2666, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2666, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2666, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2666, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2666, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2666, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2666, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2666, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2666, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2666, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2666, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2666, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2666, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2666, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2666, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2666, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2666, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2666, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2690 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2693, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2693 = !{!107, !109, !22, !2694}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2696)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2697)
!2697 = !{!2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2696, file: !535, line: 447, baseType: !539, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2696, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2696, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2696, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2696, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2696, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2696, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2696, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2696, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2696, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2696, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2696, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2696, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2696, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2696, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2696, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2696, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2696, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2696, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2696, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2696, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2721, splitDebugInlining: false, nameTableKind: None)
!2720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2721 = !{!2722, !107, !109}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2724, file: !535, line: 447, baseType: !539, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2724, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2724, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2724, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2724, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2724, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2724, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2724, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2724, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2724, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2724, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2724, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2724, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2724, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2724, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2724, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2724, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2724, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2724, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2724, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2724, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2749, splitDebugInlining: false, nameTableKind: None)
!2748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2749 = !{!2750, !110, !107, !109}
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2752, line: 98, size: 256, elements: !2753)
!2752 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2753 = !{!2754, !2759, !2764, !2769, !2774, !2779, !2784, !2789}
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 99, baseType: !2755, size: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 99, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2755, file: !2752, line: 99, baseType: !110, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2755, file: !2752, line: 99, baseType: !110, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 100, baseType: !2760, size: 32, offset: 32)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 100, size: 32, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2760, file: !2752, line: 100, baseType: !110, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2760, file: !2752, line: 100, baseType: !110, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 101, baseType: !2765, size: 32, offset: 64)
!2765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 101, size: 32, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2765, file: !2752, line: 101, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2765, file: !2752, line: 101, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 102, baseType: !2770, size: 32, offset: 96)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 102, size: 32, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2770, file: !2752, line: 102, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2770, file: !2752, line: 102, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 103, baseType: !2775, size: 32, offset: 128)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 103, size: 32, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2775, file: !2752, line: 103, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2775, file: !2752, line: 103, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 104, baseType: !2780, size: 32, offset: 160)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 104, size: 32, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2780, file: !2752, line: 104, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2780, file: !2752, line: 104, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2752, line: 105, baseType: !2785, size: 32, offset: 192)
!2785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2751, file: !2752, line: 105, size: 32, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2785, file: !2752, line: 105, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2785, file: !2752, line: 105, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2751, file: !2752, line: 106, baseType: !110, size: 32, offset: 224)
!2790 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2791, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2634, retainedTypes: !2792, splitDebugInlining: false, nameTableKind: None)
!2791 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2792 = !{!2793, !107, !109, !2818, !2861, !110}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2795)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2796)
!2796 = !{!2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2795, file: !535, line: 447, baseType: !539, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2795, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2795, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2795, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2795, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2795, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2795, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2795, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2795, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2795, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2795, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2795, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2795, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2795, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2795, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2795, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2795, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2795, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2795, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2795, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2795, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2752, line: 141, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2752, line: 97, size: 256, elements: !2821)
!2821 = !{!2822}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2820, file: !2752, line: 107, baseType: !2823, size: 256)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2752, line: 98, size: 256, elements: !2824)
!2824 = !{!2825, !2830, !2835, !2840, !2845, !2850, !2855, !2860}
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 99, baseType: !2826, size: 32)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 99, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2826, file: !2752, line: 99, baseType: !110, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2826, file: !2752, line: 99, baseType: !110, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 100, baseType: !2831, size: 32, offset: 32)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 100, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2831, file: !2752, line: 100, baseType: !110, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2831, file: !2752, line: 100, baseType: !110, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 101, baseType: !2836, size: 32, offset: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 101, size: 32, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2836, file: !2752, line: 101, baseType: !110, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2836, file: !2752, line: 101, baseType: !110, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 102, baseType: !2841, size: 32, offset: 96)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 102, size: 32, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2841, file: !2752, line: 102, baseType: !110, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2841, file: !2752, line: 102, baseType: !110, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 103, baseType: !2846, size: 32, offset: 128)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 103, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2846, file: !2752, line: 103, baseType: !110, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2846, file: !2752, line: 103, baseType: !110, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 104, baseType: !2851, size: 32, offset: 160)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 104, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2851, file: !2752, line: 104, baseType: !110, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2851, file: !2752, line: 104, baseType: !110, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2823, file: !2752, line: 105, baseType: !2856, size: 32, offset: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2823, file: !2752, line: 105, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2856, file: !2752, line: 105, baseType: !110, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2856, file: !2752, line: 105, baseType: !110, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2823, file: !2752, line: 106, baseType: !110, size: 32, offset: 224)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2863, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1635, retainedTypes: !2864, splitDebugInlining: false, nameTableKind: None)
!2863 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2864 = !{!800, !774, !180, !110, !2865, !2882}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2867, file: !535, line: 413, baseType: !1650, size: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2867, file: !535, line: 414, baseType: !1652, size: 768, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2867, file: !535, line: 415, baseType: !1650, size: 256, offset: 1024)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2867, file: !535, line: 416, baseType: !1652, size: 768, offset: 1280)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2867, file: !535, line: 417, baseType: !1650, size: 256, offset: 2048)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2867, file: !535, line: 418, baseType: !1652, size: 768, offset: 2304)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2867, file: !535, line: 419, baseType: !1650, size: 256, offset: 3072)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2867, file: !535, line: 420, baseType: !1652, size: 768, offset: 3328)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2867, file: !535, line: 421, baseType: !1650, size: 256, offset: 4096)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2867, file: !535, line: 422, baseType: !1663, size: 1792, offset: 4352)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2867, file: !535, line: 423, baseType: !1667, size: 1920, offset: 6144)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2867, file: !535, line: 424, baseType: !1672, size: 20608, offset: 8064)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2867, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2884)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2884, file: !535, line: 447, baseType: !539, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2884, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2884, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2884, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2884, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2884, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2884, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2884, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2884, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2884, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2884, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2884, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2884, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2884, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2884, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2884, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2884, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2884, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2884, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2884, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2884, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2908, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2909, splitDebugInlining: false, nameTableKind: None)
!2908 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2909 = !{!2910, !107, !109}
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2912)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2912, file: !535, line: 447, baseType: !539, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2912, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2912, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2912, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2912, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2912, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2912, file: !535, line: 453, baseType: !1687, size: 96, offset: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2912, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2912, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2912, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2912, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2912, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2912, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2912, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2912, file: !535, line: 461, baseType: !1698, size: 64, offset: 512)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2912, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2912, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2912, file: !535, line: 464, baseType: !1702, size: 128, offset: 640)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2912, file: !535, line: 465, baseType: !1704, size: 160, offset: 768)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2912, file: !535, line: 466, baseType: !1706, size: 160, offset: 928)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2912, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2937, splitDebugInlining: false, nameTableKind: None)
!2936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2937 = !{!150, !285, !234, !1005, !2938, !181, !107}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2942, splitDebugInlining: false, nameTableKind: None)
!2941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2942 = !{!2943}
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !2945)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2945, file: !312, line: 552, baseType: !316, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2945, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2945, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2945, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2945, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2945, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2945, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2945, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2945, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2945, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2945, file: !312, line: 562, baseType: !870, size: 64, offset: 320)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2945, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2945, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2945, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2945, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2945, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2945, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2945, file: !312, line: 569, baseType: !870, size: 64, offset: 576)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2945, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2945, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2945, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2945, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2945, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2945, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2945, file: !312, line: 576, baseType: !870, size: 64, offset: 832)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2945, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2945, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2945, file: !312, line: 579, baseType: !870, size: 64, offset: 960)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2945, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2945, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2945, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2945, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2945, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2945, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!2981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2985, retainedTypes: !3001, splitDebugInlining: false, nameTableKind: None)
!2984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!2985 = !{!2986, !2993, !2997}
!2986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2987, line: 38, baseType: !32, size: 32, elements: !2988)
!2987 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2988 = !{!2989, !2990, !2991, !2992}
!2989 = !DIEnumerator(name: "HAL_OK", value: 0)
!2990 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2991 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2992 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 184, baseType: !32, size: 32, elements: !2994)
!2994 = !{!2995, !2996}
!2995 = !DIEnumerator(name: "RESET", value: 0)
!2996 = !DIEnumerator(name: "SET", value: 1)
!2997 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 190, baseType: !32, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIEnumerator(name: "DISABLE", value: 0)
!3000 = !DIEnumerator(name: "ENABLE", value: 1)
!3001 = !{!3002, !110, !3040, !1484, !180, !111, !107}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3004, file: !312, line: 552, baseType: !316, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3004, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3004, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3004, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3004, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3004, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3004, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3004, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3004, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3004, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3004, file: !312, line: 562, baseType: !870, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3004, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3004, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3004, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3004, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3004, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3004, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3004, file: !312, line: 569, baseType: !870, size: 64, offset: 576)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3004, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3004, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3004, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3004, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3004, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3004, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3004, file: !312, line: 576, baseType: !870, size: 64, offset: 832)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3004, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3004, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3004, file: !312, line: 579, baseType: !870, size: 64, offset: 960)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3004, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3004, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3004, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3004, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3004, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3004, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 544, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 540, size: 64, elements: !3043)
!3043 = !{!3044, !3045}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3042, file: !312, line: 542, baseType: !316, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3042, file: !312, line: 543, baseType: !316, size: 32, offset: 32)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3048, retainedTypes: !3049, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3048 = !{!842}
!3049 = !{!3050, !110, !3058, !3064, !3075}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !3053)
!3053 = !{!3054, !3055, !3056, !3057}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3052, file: !535, line: 766, baseType: !316, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3052, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3052, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3052, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 32)
!3059 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 544, baseType: !3060)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 540, size: 64, elements: !3061)
!3061 = !{!3062, !3063}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3060, file: !312, line: 542, baseType: !316, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3060, file: !312, line: 543, baseType: !316, size: 32, offset: 32)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 407, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 398, size: 224, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071, !3072, !3073, !3074}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3066, file: !312, line: 400, baseType: !316, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3066, file: !312, line: 401, baseType: !316, size: 32, offset: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3066, file: !312, line: 402, baseType: !316, size: 32, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3066, file: !312, line: 403, baseType: !316, size: 32, offset: 96)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3066, file: !312, line: 404, baseType: !316, size: 32, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3066, file: !312, line: 405, baseType: !316, size: 32, offset: 160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3066, file: !312, line: 406, baseType: !316, size: 32, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !3077)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3077, file: !312, line: 552, baseType: !316, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3077, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3077, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3077, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3077, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3077, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3077, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3077, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3077, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3077, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3077, file: !312, line: 562, baseType: !870, size: 64, offset: 320)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3077, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3077, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3077, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3077, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3077, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3077, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3077, file: !312, line: 569, baseType: !870, size: 64, offset: 576)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3077, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3077, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3077, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3077, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3077, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3077, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3077, file: !312, line: 576, baseType: !870, size: 64, offset: 832)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3077, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3077, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3077, file: !312, line: 579, baseType: !870, size: 64, offset: 960)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3077, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3077, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3077, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3077, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3077, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3077, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!3113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3115, splitDebugInlining: false, nameTableKind: None)
!3114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3115 = !{!107, !234}
!3116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3118, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3117 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3118 = !{!3119, !3126, !2635, !30}
!3119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3120, line: 14, baseType: !32, size: 32, elements: !3121)
!3120 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3121 = !{!3122, !3123, !3124, !3125}
!3122 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3123 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3124 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3125 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3120, line: 42, baseType: !32, size: 32, elements: !3127)
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133}
!3128 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3129 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3130 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3131 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3132 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3133 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3135 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3138, splitDebugInlining: false, nameTableKind: None)
!3137 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3138 = !{!22, !107, !109}
!3139 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3140, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3140 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3141 = !{!"Ubuntu clang version 14.0.6"}
!3142 = !{i32 7, !"Dwarf Version", i32 4}
!3143 = !{i32 2, !"Debug Info Version", i32 3}
!3144 = !{i32 1, !"wchar_size", i32 4}
!3145 = !{i32 1, !"min_enum_size", i32 4}
!3146 = !{i32 1, !"branch-target-enforcement", i32 0}
!3147 = !{i32 1, !"sign-return-address", i32 0}
!3148 = !{i32 1, !"sign-return-address-all", i32 0}
!3149 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3150 = !{i32 7, !"frame-pointer", i32 2}
!3151 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3152, file: !3152, line: 26, type: !3153, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !2104)
!3152 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null}
!3155 = !DILocation(line: 28, column: 1, scope: !3151)
!3156 = !{i64 2155376023, i64 2155376043, i64 2155376106}
!3157 = !DILocation(line: 29, column: 1, scope: !3151)
!3158 = !{i64 2155376438, i64 2155376458, i64 2155376521}
!3159 = !DILocation(line: 30, column: 1, scope: !3151)
!3160 = !{i64 2155376857, i64 2155376877, i64 2155376940}
!3161 = !DILocation(line: 31, column: 1, scope: !3151)
!3162 = !{i64 2155377276, i64 2155377296, i64 2155377359}
!3163 = !DILocation(line: 33, column: 1, scope: !3151)
!3164 = !{i64 2155377568, i64 2155377588, i64 2155377651}
!3165 = !DILocation(line: 35, column: 1, scope: !3151)
!3166 = !{i64 2155377893, i64 2155377913, i64 2155377976}
!3167 = !DILocation(line: 50, column: 1, scope: !3151)
!3168 = !{i64 2155378320, i64 2155378340, i64 2155378403}
!3169 = !DILocation(line: 54, column: 1, scope: !3151)
!3170 = !{i64 2155378759, i64 2155378779, i64 2155378842}
!3171 = !DILocation(line: 61, column: 1, scope: !3151)
!3172 = !{i64 2155379076, i64 2155379096, i64 2155379159}
!3173 = !DILocation(line: 63, column: 1, scope: !3151)
!3174 = !{i64 2155379456, i64 2155379476, i64 2155379539}
!3175 = !DILocation(line: 64, column: 1, scope: !3151)
!3176 = !{i64 2155379978, i64 2155379998, i64 2155380061}
!3177 = !DILocation(line: 65, column: 1, scope: !3151)
!3178 = !{i64 2155380476, i64 2155380496, i64 2155380559}
!3179 = !DILocation(line: 66, column: 1, scope: !3151)
!3180 = !{i64 2155380958, i64 2155380978, i64 2155381041}
!3181 = !DILocation(line: 67, column: 1, scope: !3151)
!3182 = !{i64 2155381465, i64 2155381485, i64 2155381548}
!3183 = !DILocation(line: 68, column: 1, scope: !3151)
!3184 = !{i64 2155381953, i64 2155381973, i64 2155382036}
!3185 = !DILocation(line: 70, column: 1, scope: !3151)
!3186 = !{i64 2155382421, i64 2155382441, i64 2155382504}
!3187 = !DILocation(line: 71, column: 1, scope: !3151)
!3188 = !{i64 2155382863, i64 2155382883, i64 2155382946}
!3189 = !DILocation(line: 72, column: 1, scope: !3151)
!3190 = !{i64 2155383321, i64 2155383341, i64 2155383404}
!3191 = !DILocation(line: 79, column: 1, scope: !3151)
!3192 = !{i64 2155383775, i64 2155383795, i64 2155383858}
!3193 = !DILocation(line: 80, column: 1, scope: !3151)
!3194 = !{i64 2155384286, i64 2155384306, i64 2155384369}
!3195 = !DILocation(line: 82, column: 1, scope: !3151)
!3196 = !{i64 2155384777, i64 2155384797, i64 2155384860}
!3197 = !DILocation(line: 97, column: 1, scope: !3151)
!3198 = !{i64 2155385114, i64 2155385134, i64 2155385197}
!3199 = !DILocation(line: 99, column: 1, scope: !3151)
!3200 = !{i64 2155385332, i64 2155385352, i64 2155385415}
!3201 = !DILocation(line: 102, column: 1, scope: !3151)
!3202 = !{i64 2155389650, i64 2155389670, i64 2155389733}
!3203 = !DILocation(line: 105, column: 1, scope: !3151)
!3204 = !{i64 2155389890, i64 2155389910, i64 2155389973}
!3205 = !DILocation(line: 115, column: 1, scope: !3151)
!3206 = !{i64 2155390229, i64 2155390249, i64 2155390312}
!3207 = !DILocation(line: 118, column: 1, scope: !3151)
!3208 = !{i64 2155390573, i64 2155390593, i64 2155390656}
!3209 = !DILocation(line: 32, column: 1, scope: !3210)
!3210 = !DILexicalBlockFile(scope: !3151, file: !3211, discriminator: 0)
!3211 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3212 = !{i64 2155390929, i64 2155390949, i64 2155391012}
!3213 = !DILocation(line: 33, column: 1, scope: !3210)
!3214 = !{i64 2155391441, i64 2155391461, i64 2155391524}
!3215 = !DILocation(line: 53, column: 1, scope: !3210)
!3216 = !{i64 2155391949, i64 2155391969, i64 2155392032}
!3217 = !DILocation(line: 54, column: 1, scope: !3210)
!3218 = !{i64 2155392367, i64 2155392387, i64 2155392450}
!3219 = !DILocation(line: 55, column: 1, scope: !3210)
!3220 = !{i64 2155392785, i64 2155392805, i64 2155392868}
!3221 = !DILocation(line: 56, column: 1, scope: !3210)
!3222 = !{i64 2155393203, i64 2155393223, i64 2155393286}
!3223 = !DILocation(line: 57, column: 1, scope: !3210)
!3224 = !{i64 2155393621, i64 2155393641, i64 2155393704}
!3225 = !DILocation(line: 58, column: 1, scope: !3210)
!3226 = !{i64 2155394039, i64 2155394059, i64 2155394122}
!3227 = !DILocation(line: 59, column: 1, scope: !3210)
!3228 = !{i64 2155394457, i64 2155394477, i64 2155394540}
!3229 = !DILocation(line: 60, column: 1, scope: !3210)
!3230 = !{i64 2155394881, i64 2155394901, i64 2155394964}
!3231 = !DILocation(line: 61, column: 1, scope: !3210)
!3232 = !{i64 2155395198, i64 2155395218, i64 2155395281}
!3233 = !DILocation(line: 70, column: 1, scope: !3210)
!3234 = !{i64 2155395427, i64 2155395447, i64 2155395510}
!3235 = !DILocation(line: 72, column: 1, scope: !3210)
!3236 = !{i64 2155395759, i64 2155395779, i64 2155395842}
!3237 = !DILocation(line: 73, column: 1, scope: !3210)
!3238 = !{i64 2155396209, i64 2155396229, i64 2155396292}
!3239 = !DILocation(line: 74, column: 1, scope: !3210)
!3240 = !{i64 2155396659, i64 2155396679, i64 2155396742}
!3241 = !DILocation(line: 75, column: 1, scope: !3210)
!3242 = !{i64 2155397109, i64 2155397129, i64 2155397192}
!3243 = !DILocation(line: 76, column: 1, scope: !3210)
!3244 = !{i64 2155397559, i64 2155397579, i64 2155397642}
!3245 = !DILocation(line: 77, column: 1, scope: !3210)
!3246 = !{i64 2155398009, i64 2155398029, i64 2155398092}
!3247 = !DILocation(line: 78, column: 1, scope: !3210)
!3248 = !{i64 2155398459, i64 2155398479, i64 2155398542}
!3249 = !DILocation(line: 79, column: 1, scope: !3210)
!3250 = !{i64 2155398909, i64 2155398929, i64 2155398992}
!3251 = !DILocation(line: 80, column: 1, scope: !3210)
!3252 = !{i64 2155403423, i64 2155403443, i64 2155403506}
!3253 = !DILocation(line: 84, column: 1, scope: !3210)
!3254 = !{i64 2155403755, i64 2155403775, i64 2155403838}
!3255 = !DILocation(line: 91, column: 1, scope: !3210)
!3256 = !{i64 2155404152, i64 2155404172, i64 2155404235}
!3257 = !DILocation(line: 93, column: 1, scope: !3210)
!3258 = !{i64 2155404519, i64 2155404539, i64 2155404602}
!3259 = !DILocation(line: 106, column: 1, scope: !3210)
!3260 = !{i64 2155404789, i64 2155404809, i64 2155404872}
!3261 = !DILocation(line: 11, column: 1, scope: !3262)
!3262 = !DILexicalBlockFile(scope: !3151, file: !3263, discriminator: 0)
!3263 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3264 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3265, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3267)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{null, !107, !107, !107}
!3267 = !{!3268, !3269, !3270, !3271, !3272}
!3268 = !DILocalVariable(name: "p1", arg: 1, scope: !3264, file: !116, line: 25, type: !107)
!3269 = !DILocalVariable(name: "p2", arg: 2, scope: !3264, file: !116, line: 25, type: !107)
!3270 = !DILocalVariable(name: "p3", arg: 3, scope: !3264, file: !116, line: 25, type: !107)
!3271 = !DILocalVariable(name: "i", scope: !3264, file: !116, line: 27, type: !109)
!3272 = !DILocalVariable(name: "my_id", scope: !3264, file: !116, line: 28, type: !102)
!3273 = !DILocation(line: 0, scope: !3264)
!3274 = !DILocation(line: 28, column: 15, scope: !3264)
!3275 = !DILocation(line: 30, column: 2, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3264, file: !116, line: 30, column: 2)
!3277 = !DILocation(line: 31, column: 3, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !116, line: 30, column: 31)
!3279 = distinct !DILexicalBlock(scope: !3276, file: !116, line: 30, column: 2)
!3280 = !DILocation(line: 32, column: 8, scope: !3278)
!3281 = !DILocation(line: 40, column: 13, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3278, file: !116, line: 40, column: 7)
!3283 = !DILocation(line: 40, column: 7, scope: !3278)
!3284 = !DILocation(line: 41, column: 4, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3282, file: !116, line: 40, column: 29)
!3286 = !DILocation(line: 43, column: 4, scope: !3285)
!3287 = !DILocation(line: 44, column: 4, scope: !3285)
!3288 = !DILocation(line: 47, column: 27, scope: !3278)
!3289 = !DILocation(line: 45, column: 3, scope: !3285)
!3290 = !DILocation(line: 46, column: 3, scope: !3278)
!3291 = !DILocation(line: 48, column: 3, scope: !3278)
!3292 = !DILocation(line: 51, column: 3, scope: !3278)
!3293 = !DILocation(line: 30, column: 27, scope: !3279)
!3294 = !DILocation(line: 30, column: 16, scope: !3279)
!3295 = distinct !{!3295, !3275, !3296}
!3296 = !DILocation(line: 52, column: 2, scope: !3276)
!3297 = !DILocation(line: 53, column: 1, scope: !3264)
!3298 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3299, file: !3299, line: 927, type: !3300, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3307)
!3299 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!109, !3302, !3303}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3304)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3305)
!3305 = !{!3306}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3304, file: !104, line: 66, baseType: !103, size: 64)
!3307 = !{!3308, !3309}
!3308 = !DILocalVariable(name: "mutex", arg: 1, scope: !3298, file: !3299, line: 927, type: !3302)
!3309 = !DILocalVariable(name: "timeout", arg: 2, scope: !3298, file: !3299, line: 927, type: !3303)
!3310 = !DILocation(line: 0, scope: !3298)
!3311 = !DILocation(line: 936, column: 2, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3298, file: !3299, line: 936, column: 2)
!3313 = !{i64 2155070732}
!3314 = !DILocation(line: 937, column: 9, scope: !3298)
!3315 = !DILocation(line: 937, column: 2, scope: !3298)
!3316 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3299, file: !3299, line: 976, type: !3317, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3320)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!109, !3319}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3320 = !{!3321}
!3321 = !DILocalVariable(name: "condvar", arg: 1, scope: !3316, file: !3299, line: 976, type: !3319)
!3322 = !DILocation(line: 0, scope: !3316)
!3323 = !DILocation(line: 984, column: 2, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3316, file: !3299, line: 984, column: 2)
!3325 = !{i64 2155070936}
!3326 = !DILocation(line: 985, column: 9, scope: !3316)
!3327 = !DILocation(line: 985, column: 2, scope: !3316)
!3328 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3299, file: !3299, line: 944, type: !3329, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!109, !3302}
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "mutex", arg: 1, scope: !3328, file: !3299, line: 944, type: !3302)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 952, column: 2, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3328, file: !3299, line: 952, column: 2)
!3336 = !{i64 2155070800}
!3337 = !DILocation(line: 953, column: 9, scope: !3328)
!3338 = !DILocation(line: 953, column: 2, scope: !3328)
!3339 = distinct !DISubprogram(name: "k_sleep", scope: !3299, file: !3299, line: 91, type: !3340, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3342)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!774, !3303}
!3342 = !{!3343}
!3343 = !DILocalVariable(name: "timeout", arg: 1, scope: !3339, file: !3299, line: 91, type: !3303)
!3344 = !DILocation(line: 0, scope: !3339)
!3345 = !DILocation(line: 99, column: 2, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3339, file: !3299, line: 99, column: 2)
!3347 = !{i64 2155067364}
!3348 = !DILocation(line: 100, column: 9, scope: !3339)
!3349 = !DILocation(line: 100, column: 2, scope: !3339)
!3350 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3265, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3351)
!3351 = !{!3352, !3353, !3354, !3355}
!3352 = !DILocalVariable(name: "p1", arg: 1, scope: !3350, file: !116, line: 55, type: !107)
!3353 = !DILocalVariable(name: "p2", arg: 2, scope: !3350, file: !116, line: 55, type: !107)
!3354 = !DILocalVariable(name: "p3", arg: 3, scope: !3350, file: !116, line: 55, type: !107)
!3355 = !DILocalVariable(name: "my_id", scope: !3350, file: !116, line: 57, type: !102)
!3356 = !DILocation(line: 0, scope: !3350)
!3357 = !DILocation(line: 57, column: 15, scope: !3350)
!3358 = !DILocation(line: 59, column: 2, scope: !3350)
!3359 = !DILocation(line: 61, column: 2, scope: !3350)
!3360 = !DILocation(line: 62, column: 9, scope: !3350)
!3361 = !DILocation(line: 62, column: 15, scope: !3350)
!3362 = !DILocation(line: 62, column: 2, scope: !3350)
!3363 = !DILocation(line: 63, column: 3, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3350, file: !116, line: 62, column: 30)
!3365 = !DILocation(line: 65, column: 3, scope: !3364)
!3366 = !DILocation(line: 68, column: 27, scope: !3364)
!3367 = !DILocation(line: 67, column: 3, scope: !3364)
!3368 = distinct !{!3368, !3362, !3369}
!3369 = !DILocation(line: 69, column: 2, scope: !3350)
!3370 = !DILocation(line: 70, column: 2, scope: !3350)
!3371 = !DILocation(line: 72, column: 8, scope: !3350)
!3372 = !DILocation(line: 73, column: 2, scope: !3350)
!3373 = !DILocation(line: 74, column: 2, scope: !3350)
!3374 = !DILocation(line: 75, column: 2, scope: !3350)
!3375 = !DILocation(line: 76, column: 1, scope: !3350)
!3376 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3299, file: !3299, line: 1008, type: !3377, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3379)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!109, !3319, !3302, !3303}
!3379 = !{!3380, !3381, !3382}
!3380 = !DILocalVariable(name: "condvar", arg: 1, scope: !3376, file: !3299, line: 1008, type: !3319)
!3381 = !DILocalVariable(name: "mutex", arg: 2, scope: !3376, file: !3299, line: 1008, type: !3302)
!3382 = !DILocalVariable(name: "timeout", arg: 3, scope: !3376, file: !3299, line: 1008, type: !3303)
!3383 = !DILocation(line: 0, scope: !3376)
!3384 = !DILocation(line: 1018, column: 2, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3376, file: !3299, line: 1018, column: 2)
!3386 = !{i64 2155071072}
!3387 = !DILocation(line: 1019, column: 9, scope: !3376)
!3388 = !DILocation(line: 1019, column: 2, scope: !3376)
!3389 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3153, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3390)
!3390 = !{!3391, !3392, !3393, !3394}
!3391 = !DILocalVariable(name: "t1", scope: !3389, file: !116, line: 80, type: !102)
!3392 = !DILocalVariable(name: "t2", scope: !3389, file: !116, line: 80, type: !102)
!3393 = !DILocalVariable(name: "t3", scope: !3389, file: !116, line: 80, type: !102)
!3394 = !DILocalVariable(name: "i", scope: !3389, file: !116, line: 81, type: !109)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 83, column: 8, scope: !3389)
!3397 = !DILocation(line: 85, column: 2, scope: !3389)
!3398 = !DILocation(line: 89, column: 2, scope: !3389)
!3399 = !DILocation(line: 93, column: 2, scope: !3389)
!3400 = !DILocation(line: 98, column: 2, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3389, file: !116, line: 98, column: 2)
!3402 = !DILocation(line: 99, column: 18, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !116, line: 98, column: 36)
!3404 = distinct !DILexicalBlock(scope: !3401, file: !116, line: 98, column: 2)
!3405 = !DILocation(line: 99, column: 3, scope: !3403)
!3406 = !DILocation(line: 98, column: 32, scope: !3404)
!3407 = !DILocation(line: 98, column: 16, scope: !3404)
!3408 = distinct !{!3408, !3400, !3409}
!3409 = !DILocation(line: 100, column: 2, scope: !3401)
!3410 = !DILocation(line: 103, column: 22, scope: !3389)
!3411 = !DILocation(line: 102, column: 2, scope: !3389)
!3412 = !DILocation(line: 104, column: 1, scope: !3389)
!3413 = distinct !DISubprogram(name: "k_thread_create", scope: !3299, file: !3299, line: 24, type: !3414, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!3416, !266, !3417, !234, !3420, !107, !107, !107, !109, !110, !3303}
!3416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3419, line: 44, baseType: !146)
!3419 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3419, line: 46, baseType: !3421)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!3422 = !{!3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432}
!3423 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3413, file: !3299, line: 24, type: !266)
!3424 = !DILocalVariable(name: "stack", arg: 2, scope: !3413, file: !3299, line: 24, type: !3417)
!3425 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3413, file: !3299, line: 24, type: !234)
!3426 = !DILocalVariable(name: "entry", arg: 4, scope: !3413, file: !3299, line: 24, type: !3420)
!3427 = !DILocalVariable(name: "p1", arg: 5, scope: !3413, file: !3299, line: 24, type: !107)
!3428 = !DILocalVariable(name: "p2", arg: 6, scope: !3413, file: !3299, line: 24, type: !107)
!3429 = !DILocalVariable(name: "p3", arg: 7, scope: !3413, file: !3299, line: 24, type: !107)
!3430 = !DILocalVariable(name: "prio", arg: 8, scope: !3413, file: !3299, line: 24, type: !109)
!3431 = !DILocalVariable(name: "options", arg: 9, scope: !3413, file: !3299, line: 24, type: !110)
!3432 = !DILocalVariable(name: "delay", arg: 10, scope: !3413, file: !3299, line: 24, type: !3303)
!3433 = !DILocation(line: 0, scope: !3413)
!3434 = !DILocation(line: 49, column: 2, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3413, file: !3299, line: 49, column: 2)
!3436 = !{i64 2155067160}
!3437 = !DILocation(line: 50, column: 9, scope: !3413)
!3438 = !DILocation(line: 50, column: 2, scope: !3413)
!3439 = distinct !DISubprogram(name: "k_thread_join", scope: !3299, file: !3299, line: 74, type: !3440, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3442)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!109, !266, !3303}
!3442 = !{!3443, !3444}
!3443 = !DILocalVariable(name: "thread", arg: 1, scope: !3439, file: !3299, line: 74, type: !266)
!3444 = !DILocalVariable(name: "timeout", arg: 2, scope: !3439, file: !3299, line: 74, type: !3303)
!3445 = !DILocation(line: 0, scope: !3439)
!3446 = !DILocation(line: 83, column: 2, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3439, file: !3299, line: 83, column: 2)
!3448 = !{i64 2155067296}
!3449 = !DILocation(line: 84, column: 9, scope: !3439)
!3450 = !DILocation(line: 84, column: 2, scope: !3439)
!3451 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3452, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3461)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!109, !107, !234, !110, !279, !3454}
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3455, line: 99, baseType: !3456)
!3455 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3455, line: 40, baseType: !3457)
!3457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3458)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3459)
!3459 = !{!3460}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3458, file: !288, line: 18, baseType: !107, size: 32)
!3461 = !{!3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3497, !3506, !3509, !3510, !3513, !3516, !3519, !3522, !3528}
!3462 = !DILocalVariable(name: "packaged", arg: 1, scope: !3451, file: !288, line: 233, type: !107)
!3463 = !DILocalVariable(name: "len", arg: 2, scope: !3451, file: !288, line: 233, type: !234)
!3464 = !DILocalVariable(name: "flags", arg: 3, scope: !3451, file: !288, line: 233, type: !110)
!3465 = !DILocalVariable(name: "fmt", arg: 4, scope: !3451, file: !288, line: 234, type: !279)
!3466 = !DILocalVariable(name: "ap", arg: 5, scope: !3451, file: !288, line: 234, type: !3454)
!3467 = !DILocalVariable(name: "buf0", scope: !3451, file: !288, line: 247, type: !286)
!3468 = !DILocalVariable(name: "buf", scope: !3451, file: !288, line: 248, type: !286)
!3469 = !DILocalVariable(name: "size", scope: !3451, file: !288, line: 249, type: !32)
!3470 = !DILocalVariable(name: "align", scope: !3451, file: !288, line: 250, type: !32)
!3471 = !DILocalVariable(name: "str_ptr_pos", scope: !3451, file: !288, line: 251, type: !3472)
!3472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !1887)
!3473 = !DILocalVariable(name: "str_ptr_arg", scope: !3451, file: !288, line: 252, type: !3472)
!3474 = !DILocalVariable(name: "s_idx", scope: !3451, file: !288, line: 253, type: !32)
!3475 = !DILocalVariable(name: "s_rw_cnt", scope: !3451, file: !288, line: 254, type: !32)
!3476 = !DILocalVariable(name: "s_ro_cnt", scope: !3451, file: !288, line: 255, type: !32)
!3477 = !DILocalVariable(name: "arg_idx", scope: !3451, file: !288, line: 256, type: !109)
!3478 = !DILocalVariable(name: "i", scope: !3451, file: !288, line: 257, type: !32)
!3479 = !DILocalVariable(name: "s", scope: !3451, file: !288, line: 258, type: !279)
!3480 = !DILocalVariable(name: "parsing", scope: !3451, file: !288, line: 259, type: !347)
!3481 = !DILocalVariable(name: "rws_pos_en", scope: !3451, file: !288, line: 263, type: !347)
!3482 = !DILocalVariable(name: "fros_cnt", scope: !3451, file: !288, line: 268, type: !109)
!3483 = !DILocalVariable(name: "is_str_arg", scope: !3451, file: !288, line: 269, type: !347)
!3484 = !DILocalVariable(name: "pkg_hdr", scope: !3451, file: !288, line: 270, type: !3485)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 32)
!3486 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3487, line: 78, size: 32, elements: !3488)
!3487 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3488 = !{!3489, !3496}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3486, file: !3487, line: 80, baseType: !3490, size: 32)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3487, line: 45, size: 32, elements: !3491)
!3491 = !{!3492, !3493, !3494, !3495}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3490, file: !3487, line: 47, baseType: !180, size: 8)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3490, file: !3487, line: 50, baseType: !180, size: 8, offset: 8)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3490, file: !3487, line: 53, baseType: !180, size: 8, offset: 16)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3490, file: !3487, line: 56, baseType: !180, size: 8, offset: 24)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3486, file: !3487, line: 82, baseType: !107, size: 32)
!3497 = !DILocalVariable(name: "v", scope: !3498, file: !288, line: 567, type: !3502)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !288, line: 562, column: 14)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !288, line: 481, column: 18)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !288, line: 466, column: 3)
!3501 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 343, column: 15)
!3502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3451, file: !288, line: 567, size: 64, elements: !3503)
!3503 = !{!3504, !3505}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3502, file: !288, line: 567, baseType: !277, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3502, file: !288, line: 567, baseType: !275, size: 64)
!3506 = !DILocalVariable(name: "is_ro", scope: !3507, file: !288, line: 620, type: !347)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !288, line: 613, column: 19)
!3508 = distinct !DILexicalBlock(scope: !3501, file: !288, line: 613, column: 7)
!3509 = !DILocalVariable(name: "do_ro", scope: !3507, file: !288, line: 621, type: !347)
!3510 = !DILocalVariable(name: "s_ptr_idx", scope: !3511, file: !288, line: 626, type: !110)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !288, line: 625, column: 11)
!3512 = distinct !DILexicalBlock(scope: !3507, file: !288, line: 623, column: 8)
!3513 = !DILocalVariable(name: "v", scope: !3514, file: !288, line: 684, type: !109)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 683, column: 35)
!3515 = distinct !DILexicalBlock(scope: !3508, file: !288, line: 683, column: 14)
!3516 = !DILocalVariable(name: "v", scope: !3517, file: !288, line: 691, type: !102)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !288, line: 690, column: 36)
!3518 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 690, column: 14)
!3519 = !DILocalVariable(name: "v", scope: !3520, file: !288, line: 698, type: !106)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !288, line: 697, column: 41)
!3521 = distinct !DILexicalBlock(scope: !3518, file: !288, line: 697, column: 14)
!3522 = !DILocalVariable(name: "pos", scope: !3523, file: !288, line: 762, type: !180)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !288, line: 757, column: 31)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !288, line: 757, column: 3)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !288, line: 757, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !288, line: 756, column: 16)
!3527 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 756, column: 6)
!3528 = !DILabel(scope: !3507, name: "process_string", file: !288, line: 615)
!3529 = !DILocation(line: 0, scope: !3451)
!3530 = !DILocation(line: 251, column: 2, scope: !3451)
!3531 = !DILocation(line: 251, column: 10, scope: !3451)
!3532 = !DILocation(line: 252, column: 2, scope: !3451)
!3533 = !DILocation(line: 252, column: 10, scope: !3451)
!3534 = !DILocation(line: 263, column: 29, scope: !3451)
!3535 = !DILocation(line: 263, column: 21, scope: !3451)
!3536 = !DILocation(line: 268, column: 21, scope: !3451)
!3537 = !DILocation(line: 268, column: 19, scope: !3451)
!3538 = !DILocation(line: 273, column: 6, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 273, column: 6)
!3540 = !DILocation(line: 273, column: 26, scope: !3539)
!3541 = !DILocation(line: 273, column: 6, scope: !3451)
!3542 = !DILocation(line: 297, column: 6, scope: !3451)
!3543 = !DILocation(line: 305, column: 11, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 305, column: 6)
!3545 = !DILocation(line: 305, column: 6, scope: !3451)
!3546 = !DILocation(line: 327, column: 19, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 327, column: 6)
!3548 = !DILocation(line: 327, column: 22, scope: !3547)
!3549 = !DILocation(line: 327, column: 33, scope: !3547)
!3550 = !DILocation(line: 327, column: 50, scope: !3547)
!3551 = !DILocation(line: 327, column: 6, scope: !3451)
!3552 = !DILocation(line: 338, column: 9, scope: !3451)
!3553 = !DILocation(line: 341, column: 2, scope: !3451)
!3554 = !DILocation(line: 472, column: 8, scope: !3500)
!3555 = !DILocation(line: 473, column: 14, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !288, line: 473, column: 9)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !288, line: 472, column: 18)
!3558 = distinct !DILexicalBlock(scope: !3500, file: !288, line: 472, column: 8)
!3559 = !DILocation(line: 473, column: 9, scope: !3557)
!3560 = !DILocation(line: 479, column: 5, scope: !3557)
!3561 = !DILocation(line: 468, column: 9, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3500, file: !288, line: 468, column: 8)
!3563 = !DILocation(line: 468, column: 8, scope: !3562)
!3564 = !DILocation(line: 468, column: 15, scope: !3562)
!3565 = !DILocation(line: 468, column: 8, scope: !3500)
!3566 = distinct !{!3566, !3567, !3568}
!3567 = !DILocation(line: 343, column: 2, scope: !3451)
!3568 = !DILocation(line: 712, column: 2, scope: !3451)
!3569 = !DILocation(line: 481, column: 4, scope: !3500)
!3570 = !DILocation(line: 484, column: 12, scope: !3499)
!3571 = !DILocation(line: 485, column: 5, scope: !3499)
!3572 = !DILocation(line: 505, column: 5, scope: !3499)
!3573 = !DILocation(line: 518, column: 5, scope: !3499)
!3574 = !DILocation(line: 523, column: 5, scope: !3499)
!3575 = !DILocation(line: 532, column: 9, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3499, file: !288, line: 532, column: 9)
!3577 = !DILocation(line: 532, column: 17, scope: !3576)
!3578 = !DILocation(line: 532, column: 9, scope: !3499)
!3579 = !DILocation(line: 533, column: 10, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !288, line: 533, column: 10)
!3581 = distinct !DILexicalBlock(scope: !3576, file: !288, line: 532, column: 25)
!3582 = !DILocation(line: 533, column: 18, scope: !3580)
!3583 = !DILocation(line: 0, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 569, column: 9)
!3585 = !DILocation(line: 0, scope: !3498)
!3586 = !DILocation(line: 579, column: 20, scope: !3498)
!3587 = !DILocation(line: 579, column: 11, scope: !3498)
!3588 = !DILocation(line: 580, column: 9, scope: !3498)
!3589 = !DILocation(line: 582, column: 21, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !288, line: 582, column: 10)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 580, column: 23)
!3592 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 580, column: 9)
!3593 = !DILocation(line: 582, column: 28, scope: !3590)
!3594 = !DILocation(line: 582, column: 10, scope: !3591)
!3595 = !DILocation(line: 0, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !288, line: 587, column: 17)
!3597 = distinct !DILexicalBlock(scope: !3591, file: !288, line: 585, column: 10)
!3598 = !DILocation(line: 593, column: 9, scope: !3498)
!3599 = !DILocation(line: 600, column: 5, scope: !3499)
!3600 = !DILocation(line: 605, column: 18, scope: !3501)
!3601 = !DILocation(line: 605, column: 9, scope: !3501)
!3602 = !DILocation(line: 608, column: 20, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3501, file: !288, line: 608, column: 7)
!3604 = !DILocation(line: 608, column: 23, scope: !3603)
!3605 = !DILocation(line: 608, column: 34, scope: !3603)
!3606 = !DILocation(line: 608, column: 41, scope: !3603)
!3607 = !DILocation(line: 608, column: 7, scope: !3501)
!3608 = !DILocation(line: 613, column: 7, scope: !3501)
!3609 = !DILocation(line: 614, column: 8, scope: !3507)
!3610 = !DILocation(line: 614, column: 4, scope: !3507)
!3611 = !DILocation(line: 256, column: 6, scope: !3451)
!3612 = !DILocation(line: 254, column: 15, scope: !3451)
!3613 = !DILocation(line: 320, column: 7, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3544, file: !288, line: 305, column: 20)
!3615 = !DILocation(line: 615, column: 1, scope: !3507)
!3616 = !DILocation(line: 616, column: 8, scope: !3507)
!3617 = !DILocation(line: 617, column: 5, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !288, line: 616, column: 22)
!3619 = distinct !DILexicalBlock(scope: !3507, file: !288, line: 616, column: 8)
!3620 = !DILocation(line: 617, column: 25, scope: !3618)
!3621 = !DILocation(line: 618, column: 4, scope: !3618)
!3622 = !DILocation(line: 620, column: 26, scope: !3507)
!3623 = !DILocation(line: 620, column: 29, scope: !3507)
!3624 = !DILocation(line: 620, column: 17, scope: !3507)
!3625 = !DILocation(line: 620, column: 43, scope: !3507)
!3626 = !DILocation(line: 0, scope: !3507)
!3627 = !DILocation(line: 623, column: 14, scope: !3512)
!3628 = !DILocation(line: 626, column: 26, scope: !3511)
!3629 = !DILocation(line: 626, column: 37, scope: !3511)
!3630 = !DILocation(line: 0, scope: !3511)
!3631 = !DILocation(line: 634, column: 15, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3511, file: !288, line: 634, column: 9)
!3633 = !DILocation(line: 635, column: 6, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 635, column: 6)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !288, line: 635, column: 6)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !288, line: 635, column: 6)
!3637 = distinct !DILexicalBlock(scope: !3632, file: !288, line: 634, column: 44)
!3638 = !DILocation(line: 639, column: 15, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3511, file: !288, line: 639, column: 9)
!3640 = !DILocation(line: 639, column: 9, scope: !3511)
!3641 = !DILocation(line: 640, column: 6, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !288, line: 640, column: 6)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !288, line: 640, column: 6)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !288, line: 640, column: 6)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !288, line: 639, column: 43)
!3646 = !DILocation(line: 644, column: 9, scope: !3511)
!3647 = !DILocation(line: 649, column: 27, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !288, line: 644, column: 23)
!3649 = distinct !DILexicalBlock(scope: !3511, file: !288, line: 644, column: 9)
!3650 = !DILocation(line: 649, column: 6, scope: !3648)
!3651 = !DILocation(line: 649, column: 25, scope: !3648)
!3652 = !DILocation(line: 650, column: 27, scope: !3648)
!3653 = !DILocation(line: 650, column: 6, scope: !3648)
!3654 = !DILocation(line: 650, column: 25, scope: !3648)
!3655 = !DILocation(line: 651, column: 10, scope: !3648)
!3656 = !DILocation(line: 653, column: 26, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !288, line: 651, column: 17)
!3658 = distinct !DILexicalBlock(scope: !3648, file: !288, line: 651, column: 10)
!3659 = !DILocation(line: 654, column: 15, scope: !3657)
!3660 = !DILocation(line: 655, column: 6, scope: !3657)
!3661 = !DILocation(line: 656, column: 15, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !288, line: 655, column: 13)
!3663 = !DILocation(line: 658, column: 16, scope: !3649)
!3664 = !DILocation(line: 663, column: 10, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 658, column: 23)
!3666 = distinct !DILexicalBlock(scope: !3649, file: !288, line: 658, column: 16)
!3667 = !DILocation(line: 664, column: 5, scope: !3665)
!3668 = !DILocation(line: 664, column: 16, scope: !3666)
!3669 = !DILocation(line: 669, column: 10, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !288, line: 664, column: 28)
!3671 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 664, column: 16)
!3672 = !DILocation(line: 670, column: 5, scope: !3670)
!3673 = !DILocation(line: 675, column: 13, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3671, file: !288, line: 670, column: 12)
!3675 = !DILocation(line: 675, column: 27, scope: !3674)
!3676 = !DILocation(line: 675, column: 10, scope: !3674)
!3677 = !DILocation(line: 678, column: 10, scope: !3511)
!3678 = !DILocation(line: 680, column: 8, scope: !3507)
!3679 = !DILocation(line: 683, column: 14, scope: !3508)
!3680 = !DILocation(line: 684, column: 12, scope: !3514)
!3681 = !DILocation(line: 0, scope: !3514)
!3682 = !DILocation(line: 686, column: 8, scope: !3514)
!3683 = !DILocation(line: 687, column: 5, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !288, line: 686, column: 22)
!3685 = distinct !DILexicalBlock(scope: !3514, file: !288, line: 686, column: 8)
!3686 = !DILocation(line: 687, column: 17, scope: !3684)
!3687 = !DILocation(line: 688, column: 4, scope: !3684)
!3688 = !DILocation(line: 698, column: 18, scope: !3520)
!3689 = !DILocation(line: 0, scope: !3520)
!3690 = !DILocation(line: 700, column: 8, scope: !3520)
!3691 = !DILocation(line: 704, column: 6, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !288, line: 703, column: 12)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !288, line: 701, column: 9)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !288, line: 700, column: 22)
!3695 = distinct !DILexicalBlock(scope: !3520, file: !288, line: 700, column: 8)
!3696 = !DILocation(line: 704, column: 24, scope: !3692)
!3697 = !DILocation(line: 706, column: 4, scope: !3694)
!3698 = !DILocation(line: 709, column: 4, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 709, column: 4)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !288, line: 709, column: 4)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !288, line: 709, column: 4)
!3702 = distinct !DILexicalBlock(scope: !3521, file: !288, line: 708, column: 10)
!3703 = !DILocation(line: 0, scope: !3515)
!3704 = !DILocation(line: 0, scope: !3501)
!3705 = !DILocation(line: 720, column: 6, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 720, column: 6)
!3707 = !DILocation(line: 720, column: 17, scope: !3706)
!3708 = !DILocation(line: 720, column: 31, scope: !3706)
!3709 = !DILocation(line: 720, column: 6, scope: !3451)
!3710 = !DILocation(line: 721, column: 3, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !288, line: 721, column: 3)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !288, line: 721, column: 3)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !288, line: 721, column: 3)
!3714 = distinct !DILexicalBlock(scope: !3706, file: !288, line: 720, column: 38)
!3715 = !DILocation(line: 729, column: 6, scope: !3451)
!3716 = !DILocation(line: 730, column: 21, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !288, line: 729, column: 20)
!3718 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 729, column: 6)
!3719 = !DILocation(line: 730, column: 27, scope: !3717)
!3720 = !DILocation(line: 730, column: 3, scope: !3717)
!3721 = !DILocation(line: 737, column: 22, scope: !3451)
!3722 = !DILocation(line: 737, column: 20, scope: !3451)
!3723 = !DILocation(line: 0, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 739, column: 6)
!3725 = !DILocation(line: 745, column: 17, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3724, file: !288, line: 743, column: 9)
!3727 = !DILocation(line: 745, column: 25, scope: !3726)
!3728 = !DILocation(line: 746, column: 17, scope: !3726)
!3729 = !DILocation(line: 746, column: 28, scope: !3726)
!3730 = !DILocation(line: 749, column: 29, scope: !3451)
!3731 = !DILocation(line: 749, column: 16, scope: !3451)
!3732 = !DILocation(line: 749, column: 27, scope: !3451)
!3733 = !DILocation(line: 756, column: 6, scope: !3527)
!3734 = !DILocation(line: 756, column: 6, scope: !3451)
!3735 = !DILocation(line: 757, column: 3, scope: !3525)
!3736 = !DILocation(line: 758, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3523, file: !288, line: 758, column: 8)
!3738 = !DILocation(line: 758, column: 25, scope: !3737)
!3739 = !DILocation(line: 758, column: 8, scope: !3523)
!3740 = !DILocation(line: 0, scope: !3523)
!3741 = !DILocation(line: 765, column: 8, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3523, file: !288, line: 765, column: 8)
!3743 = !DILocation(line: 765, column: 19, scope: !3742)
!3744 = !DILocation(line: 765, column: 23, scope: !3742)
!3745 = !DILocation(line: 765, column: 8, scope: !3523)
!3746 = !DILocation(line: 762, column: 33, scope: !3523)
!3747 = !DILocation(line: 769, column: 8, scope: !3523)
!3748 = !DILocation(line: 769, column: 11, scope: !3523)
!3749 = !DILocation(line: 757, column: 27, scope: !3524)
!3750 = !DILocation(line: 757, column: 17, scope: !3524)
!3751 = distinct !{!3751, !3735, !3752}
!3752 = !DILocation(line: 770, column: 3, scope: !3525)
!3753 = !DILocation(line: 774, column: 16, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !288, line: 774, column: 2)
!3755 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 774, column: 2)
!3756 = !DILocation(line: 774, column: 2, scope: !3755)
!3757 = !DILocation(line: 776, column: 16, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !288, line: 776, column: 7)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !288, line: 774, column: 30)
!3760 = !DILocation(line: 776, column: 19, scope: !3758)
!3761 = !DILocation(line: 776, column: 34, scope: !3758)
!3762 = !DILocation(line: 776, column: 7, scope: !3759)
!3763 = !DILocation(line: 780, column: 7, scope: !3759)
!3764 = !DILocation(line: 782, column: 13, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !288, line: 780, column: 19)
!3766 = distinct !DILexicalBlock(scope: !3759, file: !288, line: 780, column: 7)
!3767 = !DILocation(line: 782, column: 8, scope: !3765)
!3768 = !DILocation(line: 782, column: 11, scope: !3765)
!3769 = !DILocation(line: 783, column: 3, scope: !3765)
!3770 = !DILocation(line: 785, column: 26, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3766, file: !288, line: 783, column: 10)
!3772 = !DILocation(line: 785, column: 41, scope: !3771)
!3773 = !DILocation(line: 785, column: 24, scope: !3771)
!3774 = !DILocation(line: 785, column: 8, scope: !3771)
!3775 = !DILocation(line: 787, column: 52, scope: !3771)
!3776 = !DILocation(line: 789, column: 11, scope: !3771)
!3777 = !DILocation(line: 789, column: 21, scope: !3771)
!3778 = !DILocation(line: 0, scope: !3766)
!3779 = !DILocation(line: 793, column: 7, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3759, file: !288, line: 793, column: 7)
!3781 = !DILocation(line: 793, column: 18, scope: !3780)
!3782 = !DILocation(line: 793, column: 22, scope: !3780)
!3783 = !DILocation(line: 793, column: 29, scope: !3780)
!3784 = !DILocation(line: 793, column: 7, scope: !3759)
!3785 = !DILocation(line: 797, column: 12, scope: !3759)
!3786 = !DILocation(line: 797, column: 7, scope: !3759)
!3787 = !DILocation(line: 797, column: 10, scope: !3759)
!3788 = !DILocation(line: 799, column: 3, scope: !3759)
!3789 = !DILocation(line: 800, column: 7, scope: !3759)
!3790 = !DILocation(line: 801, column: 2, scope: !3759)
!3791 = !DILocation(line: 338, column: 4, scope: !3451)
!3792 = !DILocation(line: 774, column: 26, scope: !3754)
!3793 = distinct !{!3793, !3756, !3794}
!3794 = !DILocation(line: 801, column: 2, scope: !3755)
!3795 = !DILocation(line: 808, column: 9, scope: !3451)
!3796 = !DILocation(line: 808, column: 2, scope: !3451)
!3797 = !DILocation(line: 813, column: 1, scope: !3451)
!3798 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3799, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3801)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!347, !279}
!3801 = !{!3802}
!3802 = !DILocalVariable(name: "addr", arg: 1, scope: !3798, file: !288, line: 33, type: !279)
!3803 = !DILocation(line: 0, scope: !3798)
!3804 = !DILocation(line: 41, column: 9, scope: !3798)
!3805 = !DILocation(line: 41, column: 2, scope: !3798)
!3806 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3807, file: !3807, line: 24, type: !3808, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3810)
!3807 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3808 = !DISubroutineType(types: !3809)
!3809 = !{!347, !13}
!3810 = !{!3811}
!3811 = !DILocalVariable(name: "addr", arg: 1, scope: !3806, file: !3807, line: 24, type: !13)
!3812 = !DILocation(line: 0, scope: !3806)
!3813 = !DILocation(line: 49, column: 30, scope: !3806)
!3814 = !DILocation(line: 49, column: 57, scope: !3806)
!3815 = !DILocation(line: 49, column: 2, scope: !3806)
!3816 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3817, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!109, !107, !234, !110, !279, null}
!3819 = !{!3820, !3821, !3822, !3823, !3824, !3825}
!3820 = !DILocalVariable(name: "packaged", arg: 1, scope: !3816, file: !288, line: 815, type: !107)
!3821 = !DILocalVariable(name: "len", arg: 2, scope: !3816, file: !288, line: 815, type: !234)
!3822 = !DILocalVariable(name: "flags", arg: 3, scope: !3816, file: !288, line: 815, type: !110)
!3823 = !DILocalVariable(name: "format", arg: 4, scope: !3816, file: !288, line: 816, type: !279)
!3824 = !DILocalVariable(name: "ap", scope: !3816, file: !288, line: 818, type: !3454)
!3825 = !DILocalVariable(name: "ret", scope: !3816, file: !288, line: 819, type: !109)
!3826 = !DILocation(line: 0, scope: !3816)
!3827 = !DILocation(line: 818, column: 2, scope: !3816)
!3828 = !DILocation(line: 818, column: 10, scope: !3816)
!3829 = !DILocation(line: 821, column: 2, scope: !3816)
!3830 = !DILocation(line: 822, column: 8, scope: !3816)
!3831 = !DILocation(line: 823, column: 2, scope: !3816)
!3832 = !DILocation(line: 825, column: 1, scope: !3816)
!3833 = !DILocation(line: 824, column: 2, scope: !3816)
!3834 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3835, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3845)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!109, !3837, !3841, !107, !107}
!3837 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3487, line: 297, baseType: !3838)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 32)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!109, null}
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3487, line: 328, baseType: !3842)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 32)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!109, !3837, !107, !279, !3454}
!3845 = !{!3846, !3847, !3848, !3849, !3850, !3851, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864}
!3846 = !DILocalVariable(name: "out", arg: 1, scope: !3834, file: !288, line: 827, type: !3837)
!3847 = !DILocalVariable(name: "formatter", arg: 2, scope: !3834, file: !288, line: 828, type: !3841)
!3848 = !DILocalVariable(name: "ctx", arg: 3, scope: !3834, file: !288, line: 829, type: !107)
!3849 = !DILocalVariable(name: "packaged", arg: 4, scope: !3834, file: !288, line: 829, type: !107)
!3850 = !DILocalVariable(name: "buf", scope: !3834, file: !288, line: 831, type: !286)
!3851 = !DILocalVariable(name: "hdr", scope: !3834, file: !288, line: 832, type: !3852)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 32)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3487, line: 96, size: 64, elements: !3854)
!3854 = !{!3855, !3856}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3853, file: !3487, line: 98, baseType: !3486, size: 32)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3853, file: !3487, line: 101, baseType: !285, size: 32, offset: 32)
!3857 = !DILocalVariable(name: "s", scope: !3834, file: !288, line: 833, type: !285)
!3858 = !DILocalVariable(name: "ps", scope: !3834, file: !288, line: 833, type: !284)
!3859 = !DILocalVariable(name: "i", scope: !3834, file: !288, line: 834, type: !32)
!3860 = !DILocalVariable(name: "args_size", scope: !3834, file: !288, line: 834, type: !32)
!3861 = !DILocalVariable(name: "s_nbr", scope: !3834, file: !288, line: 834, type: !32)
!3862 = !DILocalVariable(name: "ros_nbr", scope: !3834, file: !288, line: 834, type: !32)
!3863 = !DILocalVariable(name: "rws_nbr", scope: !3834, file: !288, line: 834, type: !32)
!3864 = !DILocalVariable(name: "s_idx", scope: !3834, file: !288, line: 834, type: !32)
!3865 = !DILocation(line: 0, scope: !3834)
!3866 = !DILocation(line: 836, column: 10, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3834, file: !288, line: 836, column: 6)
!3868 = !DILocation(line: 836, column: 6, scope: !3834)
!3869 = !DILocation(line: 842, column: 28, scope: !3834)
!3870 = !DILocation(line: 842, column: 14, scope: !3834)
!3871 = !DILocation(line: 852, column: 16, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 852, column: 2)
!3873 = distinct !DILexicalBlock(scope: !3834, file: !288, line: 852, column: 2)
!3874 = !DILocation(line: 852, column: 2, scope: !3873)
!3875 = !DILocation(line: 841, column: 28, scope: !3834)
!3876 = !DILocation(line: 841, column: 14, scope: !3834)
!3877 = !DILocation(line: 841, column: 32, scope: !3834)
!3878 = !DILocation(line: 847, column: 19, scope: !3834)
!3879 = !DILocation(line: 843, column: 28, scope: !3834)
!3880 = !DILocation(line: 843, column: 14, scope: !3834)
!3881 = !DILocation(line: 847, column: 31, scope: !3834)
!3882 = !DILocation(line: 844, column: 28, scope: !3834)
!3883 = !DILocation(line: 844, column: 14, scope: !3834)
!3884 = !DILocation(line: 847, column: 45, scope: !3834)
!3885 = !DILocation(line: 847, column: 41, scope: !3834)
!3886 = !DILocation(line: 854, column: 24, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3872, file: !288, line: 852, column: 30)
!3888 = !DILocation(line: 854, column: 11, scope: !3887)
!3889 = !DILocation(line: 855, column: 30, scope: !3887)
!3890 = !DILocation(line: 855, column: 22, scope: !3887)
!3891 = !DILocation(line: 855, column: 8, scope: !3887)
!3892 = !DILocation(line: 857, column: 7, scope: !3887)
!3893 = !DILocation(line: 859, column: 8, scope: !3887)
!3894 = !DILocation(line: 859, column: 18, scope: !3887)
!3895 = !DILocation(line: 859, column: 5, scope: !3887)
!3896 = !DILocation(line: 852, column: 26, scope: !3872)
!3897 = distinct !{!3897, !3874, !3898}
!3898 = !DILocation(line: 860, column: 2, scope: !3873)
!3899 = !DILocation(line: 863, column: 6, scope: !3834)
!3900 = !DILocation(line: 866, column: 56, scope: !3834)
!3901 = !DILocation(line: 866, column: 9, scope: !3834)
!3902 = !DILocation(line: 866, column: 2, scope: !3834)
!3903 = !DILocation(line: 867, column: 1, scope: !3834)
!3904 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3905, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3907)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!109, !3837, !3841, !107, !279, !107}
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913}
!3908 = !DILocalVariable(name: "out", arg: 1, scope: !3904, file: !288, line: 179, type: !3837)
!3909 = !DILocalVariable(name: "formatter", arg: 2, scope: !3904, file: !288, line: 180, type: !3841)
!3910 = !DILocalVariable(name: "ctx", arg: 3, scope: !3904, file: !288, line: 181, type: !107)
!3911 = !DILocalVariable(name: "fmt", arg: 4, scope: !3904, file: !288, line: 182, type: !279)
!3912 = !DILocalVariable(name: "buf", arg: 5, scope: !3904, file: !288, line: 182, type: !107)
!3913 = !DILocalVariable(name: "u", scope: !3904, file: !288, line: 187, type: !3914)
!3914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3904, file: !288, line: 184, size: 32, elements: !3915)
!3915 = !{!3916, !3917}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3914, file: !288, line: 185, baseType: !3454, size: 32)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3914, file: !288, line: 186, baseType: !107, size: 32)
!3918 = !DILocation(line: 0, scope: !3904)
!3919 = !DILocation(line: 191, column: 9, scope: !3904)
!3920 = !DILocation(line: 191, column: 2, scope: !3904)
!3921 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3922, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!347, !279, !109}
!3924 = !{!3925, !3926, !3927, !3928, !3929}
!3925 = !DILocalVariable(name: "fmt", arg: 1, scope: !3921, file: !288, line: 881, type: !279)
!3926 = !DILocalVariable(name: "n", arg: 2, scope: !3921, file: !288, line: 881, type: !109)
!3927 = !DILocalVariable(name: "c", scope: !3921, file: !288, line: 883, type: !150)
!3928 = !DILocalVariable(name: "mod", scope: !3921, file: !288, line: 884, type: !347)
!3929 = !DILocalVariable(name: "cnt", scope: !3921, file: !288, line: 885, type: !109)
!3930 = !DILocation(line: 0, scope: !3921)
!3931 = !DILocation(line: 887, column: 14, scope: !3921)
!3932 = !DILocation(line: 887, column: 22, scope: !3921)
!3933 = !DILocation(line: 887, column: 2, scope: !3921)
!3934 = !DILocation(line: 887, column: 18, scope: !3921)
!3935 = !DILocation(line: 888, column: 7, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3921, file: !288, line: 887, column: 31)
!3937 = !DILocation(line: 889, column: 12, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !288, line: 889, column: 8)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 888, column: 12)
!3940 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 888, column: 7)
!3941 = !DILocation(line: 889, column: 8, scope: !3939)
!3942 = !DILocation(line: 890, column: 11, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 890, column: 9)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !288, line: 889, column: 18)
!3945 = !DILocation(line: 890, column: 9, scope: !3944)
!3946 = !DILocation(line: 892, column: 16, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 892, column: 16)
!3948 = !DILocation(line: 892, column: 16, scope: !3943)
!3949 = !DILocation(line: 895, column: 15, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3938, file: !288, line: 895, column: 15)
!3951 = !DILocation(line: 895, column: 15, scope: !3938)
!3952 = !DILocation(line: 900, column: 9, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 900, column: 7)
!3954 = !DILocation(line: 900, column: 7, scope: !3936)
!3955 = distinct !{!3955, !3933, !3956}
!3956 = !DILocation(line: 903, column: 2, scope: !3921)
!3957 = !DILocation(line: 906, column: 1, scope: !3921)
!3958 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3959, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3961)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!347, !150}
!3961 = !{!3962}
!3962 = !DILocalVariable(name: "c", arg: 1, scope: !3958, file: !288, line: 873, type: !150)
!3963 = !DILocation(line: 0, scope: !3958)
!3964 = !DILocation(line: 875, column: 19, scope: !3958)
!3965 = !DILocation(line: 875, column: 2, scope: !3958)
!3966 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3967, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3973)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!109, !107, !234, !3969, !107, !110, !2861, !234}
!3969 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3487, line: 308, baseType: !3970)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 32)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!109, !13, !234, !107}
!3973 = !{!3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3991, !3992, !3993, !3994, !3995, !4001, !4004, !4005, !4006, !4008, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4024, !4027, !4028, !4029, !4030, !4031, !4032, !4034, !4037, !4038, !4039}
!3974 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3966, file: !288, line: 908, type: !107)
!3975 = !DILocalVariable(name: "in_len", arg: 2, scope: !3966, file: !288, line: 909, type: !234)
!3976 = !DILocalVariable(name: "cb", arg: 3, scope: !3966, file: !288, line: 910, type: !3969)
!3977 = !DILocalVariable(name: "ctx", arg: 4, scope: !3966, file: !288, line: 911, type: !107)
!3978 = !DILocalVariable(name: "flags", arg: 5, scope: !3966, file: !288, line: 912, type: !110)
!3979 = !DILocalVariable(name: "strl", arg: 6, scope: !3966, file: !288, line: 913, type: !2861)
!3980 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3966, file: !288, line: 914, type: !234)
!3981 = !DILocalVariable(name: "buf", scope: !3966, file: !288, line: 918, type: !286)
!3982 = !DILocalVariable(name: "buf32", scope: !3966, file: !288, line: 919, type: !900)
!3983 = !DILocalVariable(name: "args_size", scope: !3966, file: !288, line: 920, type: !32)
!3984 = !DILocalVariable(name: "ros_nbr", scope: !3966, file: !288, line: 920, type: !32)
!3985 = !DILocalVariable(name: "rws_nbr", scope: !3966, file: !288, line: 920, type: !32)
!3986 = !DILocalVariable(name: "fmt_present", scope: !3966, file: !288, line: 921, type: !347)
!3987 = !DILocalVariable(name: "rw_cpy", scope: !3966, file: !288, line: 922, type: !347)
!3988 = !DILocalVariable(name: "ro_cpy", scope: !3966, file: !288, line: 923, type: !347)
!3989 = !DILocalVariable(name: "in_desc", scope: !3966, file: !288, line: 924, type: !3990)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 32)
!3991 = !DILocalVariable(name: "out_len", scope: !3966, file: !288, line: 960, type: !109)
!3992 = !DILocalVariable(name: "fmt", scope: !3966, file: !288, line: 965, type: !279)
!3993 = !DILocalVariable(name: "str_pos", scope: !3966, file: !288, line: 966, type: !286)
!3994 = !DILocalVariable(name: "strl_cnt", scope: !3966, file: !288, line: 967, type: !234)
!3995 = !DILocalVariable(name: "i", scope: !3996, file: !288, line: 973, type: !109)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !288, line: 973, column: 4)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !288, line: 972, column: 15)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !288, line: 972, column: 7)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !288, line: 970, column: 18)
!4000 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 970, column: 6)
!4001 = !DILocalVariable(name: "str", scope: !4002, file: !288, line: 974, type: !279)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !288, line: 973, column: 38)
!4003 = distinct !DILexicalBlock(scope: !3996, file: !288, line: 973, column: 4)
!4004 = !DILocalVariable(name: "len", scope: !4002, file: !288, line: 975, type: !109)
!4005 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3999, file: !288, line: 990, type: !347)
!4006 = !DILocalVariable(name: "i", scope: !4007, file: !288, line: 995, type: !109)
!4007 = distinct !DILexicalBlock(scope: !3999, file: !288, line: 995, column: 3)
!4008 = !DILocalVariable(name: "arg_idx", scope: !4009, file: !288, line: 996, type: !180)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !288, line: 995, column: 37)
!4010 = distinct !DILexicalBlock(scope: !4007, file: !288, line: 995, column: 3)
!4011 = !DILocalVariable(name: "arg_pos", scope: !4009, file: !288, line: 997, type: !180)
!4012 = !DILocalVariable(name: "str", scope: !4009, file: !288, line: 998, type: !279)
!4013 = !DILocalVariable(name: "is_ro", scope: !4009, file: !288, line: 999, type: !347)
!4014 = !DILocalVariable(name: "len", scope: !4009, file: !288, line: 1000, type: !109)
!4015 = !DILocalVariable(name: "out_desc", scope: !3966, file: !288, line: 1038, type: !3490)
!4016 = !DILocalVariable(name: "cpy_str_pos", scope: !3966, file: !288, line: 1040, type: !3472)
!4017 = !DILocalVariable(name: "keep_str_pos", scope: !3966, file: !288, line: 1042, type: !3472)
!4018 = !DILocalVariable(name: "scpy_cnt", scope: !3966, file: !288, line: 1043, type: !180)
!4019 = !DILocalVariable(name: "keep_cnt", scope: !3966, file: !288, line: 1044, type: !180)
!4020 = !DILocalVariable(name: "dst", scope: !3966, file: !288, line: 1045, type: !286)
!4021 = !DILocalVariable(name: "rv", scope: !3966, file: !288, line: 1046, type: !109)
!4022 = !DILocalVariable(name: "i", scope: !4023, file: !288, line: 1074, type: !109)
!4023 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1074, column: 2)
!4024 = !DILocalVariable(name: "arg_idx", scope: !4025, file: !288, line: 1075, type: !180)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !288, line: 1074, column: 36)
!4026 = distinct !DILexicalBlock(scope: !4023, file: !288, line: 1074, column: 2)
!4027 = !DILocalVariable(name: "arg_pos", scope: !4025, file: !288, line: 1076, type: !180)
!4028 = !DILocalVariable(name: "str", scope: !4025, file: !288, line: 1077, type: !279)
!4029 = !DILocalVariable(name: "is_ro", scope: !4025, file: !288, line: 1078, type: !347)
!4030 = !DILocalVariable(name: "in_desc_backup", scope: !3966, file: !288, line: 1114, type: !3490)
!4031 = !DILocalVariable(name: "strs_len", scope: !3966, file: !288, line: 1134, type: !234)
!4032 = !DILocalVariable(name: "i", scope: !4033, file: !288, line: 1143, type: !109)
!4033 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1143, column: 2)
!4034 = !DILocalVariable(name: "loc", scope: !4035, file: !288, line: 1144, type: !180)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !288, line: 1143, column: 37)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !288, line: 1143, column: 2)
!4037 = !DILocalVariable(name: "str", scope: !4035, file: !288, line: 1145, type: !279)
!4038 = !DILocalVariable(name: "str_len", scope: !4035, file: !288, line: 1146, type: !194)
!4039 = !DILabel(scope: !4040, name: "calculate_string_length", file: !288, line: 1021)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !288, line: 1020, column: 56)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !288, line: 1020, column: 15)
!4042 = distinct !DILexicalBlock(scope: !4009, file: !288, line: 1014, column: 8)
!4043 = !DILocation(line: 0, scope: !3966)
!4044 = !DILocation(line: 916, column: 2, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !288, line: 916, column: 2)
!4046 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 916, column: 2)
!4047 = !DILocation(line: 916, column: 2, scope: !4046)
!4048 = !DILocation(line: 916, column: 2, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4045, file: !288, line: 916, column: 2)
!4050 = !DILocation(line: 919, column: 20, scope: !3966)
!4051 = !DILocation(line: 921, column: 27, scope: !3966)
!4052 = !DILocation(line: 921, column: 21, scope: !3966)
!4053 = !DILocation(line: 926, column: 18, scope: !3966)
!4054 = !DILocation(line: 926, column: 11, scope: !3966)
!4055 = !DILocation(line: 926, column: 34, scope: !3966)
!4056 = !DILocation(line: 931, column: 21, scope: !3966)
!4057 = !DILocation(line: 931, column: 12, scope: !3966)
!4058 = !DILocation(line: 932, column: 11, scope: !3966)
!4059 = !DILocation(line: 932, column: 19, scope: !3966)
!4060 = !DILocation(line: 938, column: 21, scope: !3966)
!4061 = !DILocation(line: 938, column: 12, scope: !3966)
!4062 = !DILocation(line: 939, column: 19, scope: !3966)
!4063 = !DILocation(line: 939, column: 23, scope: !3966)
!4064 = !DILocation(line: 946, column: 14, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 946, column: 6)
!4066 = !DILocation(line: 947, column: 7, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !288, line: 947, column: 7)
!4068 = distinct !DILexicalBlock(scope: !4065, file: !288, line: 946, column: 26)
!4069 = !DILocation(line: 947, column: 7, scope: !4068)
!4070 = !DILocation(line: 948, column: 4, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4067, file: !288, line: 947, column: 11)
!4072 = !DILocation(line: 949, column: 3, scope: !4071)
!4073 = !DILocation(line: 958, column: 23, scope: !3966)
!4074 = !DILocation(line: 958, column: 14, scope: !3966)
!4075 = !DILocation(line: 958, column: 27, scope: !3966)
!4076 = !DILocation(line: 965, column: 41, scope: !3966)
!4077 = !DILocation(line: 965, column: 20, scope: !3966)
!4078 = !DILocation(line: 966, column: 22, scope: !3966)
!4079 = !DILocation(line: 970, column: 9, scope: !4000)
!4080 = !DILocation(line: 970, column: 6, scope: !3966)
!4081 = !DILocation(line: 972, column: 7, scope: !3999)
!4082 = !DILocation(line: 0, scope: !3996)
!4083 = !DILocation(line: 973, column: 4, scope: !3996)
!4084 = !DILocation(line: 974, column: 46, scope: !4002)
!4085 = !DILocation(line: 974, column: 40, scope: !4002)
!4086 = !DILocation(line: 974, column: 23, scope: !4002)
!4087 = !DILocation(line: 0, scope: !4002)
!4088 = !DILocation(line: 975, column: 15, scope: !4002)
!4089 = !DILocation(line: 978, column: 14, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4002, file: !288, line: 978, column: 9)
!4091 = !DILocation(line: 979, column: 25, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4090, file: !288, line: 978, column: 38)
!4093 = !DILocation(line: 979, column: 19, scope: !4092)
!4094 = !DILocation(line: 979, column: 6, scope: !4092)
!4095 = !DILocation(line: 979, column: 23, scope: !4092)
!4096 = !DILocation(line: 980, column: 5, scope: !4092)
!4097 = !DILocation(line: 981, column: 13, scope: !4002)
!4098 = !DILocation(line: 982, column: 12, scope: !4002)
!4099 = !DILocation(line: 973, column: 34, scope: !4003)
!4100 = !DILocation(line: 973, column: 22, scope: !4003)
!4101 = distinct !{!4101, !4083, !4102}
!4102 = !DILocation(line: 983, column: 4, scope: !3996)
!4103 = !DILocation(line: 985, column: 16, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !288, line: 985, column: 8)
!4105 = distinct !DILexicalBlock(scope: !3998, file: !288, line: 984, column: 10)
!4106 = !DILocation(line: 967, column: 9, scope: !3966)
!4107 = !DILocation(line: 971, column: 11, scope: !3999)
!4108 = !DILocation(line: 0, scope: !3999)
!4109 = !DILocation(line: 0, scope: !4007)
!4110 = !DILocation(line: 995, column: 21, scope: !4010)
!4111 = !DILocation(line: 995, column: 3, scope: !4007)
!4112 = !DILocation(line: 990, column: 34, scope: !3999)
!4113 = !DILocation(line: 990, column: 26, scope: !3999)
!4114 = !DILocation(line: 996, column: 30, scope: !4009)
!4115 = !DILocation(line: 0, scope: !4009)
!4116 = !DILocation(line: 997, column: 30, scope: !4009)
!4117 = !DILocation(line: 997, column: 22, scope: !4009)
!4118 = !DILocation(line: 998, column: 39, scope: !4009)
!4119 = !DILocation(line: 998, column: 22, scope: !4009)
!4120 = !DILocation(line: 999, column: 17, scope: !4009)
!4121 = !DILocation(line: 1002, column: 20, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4009, file: !288, line: 1002, column: 8)
!4123 = !DILocation(line: 996, column: 22, scope: !4009)
!4124 = !DILocation(line: 1002, column: 35, scope: !4122)
!4125 = !DILocation(line: 1002, column: 23, scope: !4122)
!4126 = !DILocation(line: 1002, column: 8, scope: !4009)
!4127 = !DILocation(line: 1003, column: 5, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !288, line: 1003, column: 5)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !288, line: 1003, column: 5)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !288, line: 1003, column: 5)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !288, line: 1003, column: 5)
!4132 = distinct !DILexicalBlock(scope: !4122, file: !288, line: 1002, column: 45)
!4133 = !DILocation(line: 1010, column: 13, scope: !4132)
!4134 = !DILocation(line: 1011, column: 5, scope: !4132)
!4135 = !DILocation(line: 1014, column: 8, scope: !4009)
!4136 = !DILocation(line: 1015, column: 9, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4042, file: !288, line: 1014, column: 15)
!4138 = !DILocation(line: 1018, column: 14, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !288, line: 1017, column: 12)
!4140 = distinct !DILexicalBlock(scope: !4137, file: !288, line: 1015, column: 9)
!4141 = !DILocation(line: 1020, column: 4, scope: !4137)
!4142 = !DILocation(line: 1020, column: 15, scope: !4042)
!4143 = !DILocation(line: 1021, column: 1, scope: !4040)
!4144 = !DILocation(line: 1022, column: 11, scope: !4040)
!4145 = !DILocation(line: 1025, column: 14, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4040, file: !288, line: 1025, column: 9)
!4147 = !DILocation(line: 1026, column: 25, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1025, column: 38)
!4149 = !DILocation(line: 1026, column: 19, scope: !4148)
!4150 = !DILocation(line: 1026, column: 6, scope: !4148)
!4151 = !DILocation(line: 1026, column: 23, scope: !4148)
!4152 = !DILocation(line: 1027, column: 5, scope: !4148)
!4153 = !DILocation(line: 1031, column: 21, scope: !4040)
!4154 = !DILocation(line: 1031, column: 13, scope: !4040)
!4155 = !DILocation(line: 1032, column: 4, scope: !4040)
!4156 = !DILocation(line: 995, column: 33, scope: !4010)
!4157 = distinct !{!4157, !4111, !4158}
!4158 = !DILocation(line: 1033, column: 3, scope: !4007)
!4159 = !DILocation(line: 1040, column: 10, scope: !3966)
!4160 = !DILocation(line: 1042, column: 10, scope: !3966)
!4161 = !DILocation(line: 1052, column: 6, scope: !3966)
!4162 = !DILocation(line: 1055, column: 9, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !288, line: 1052, column: 14)
!4164 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1052, column: 6)
!4165 = !DILocation(line: 1056, column: 2, scope: !4163)
!4166 = !DILocation(line: 1056, column: 21, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4164, file: !288, line: 1056, column: 13)
!4168 = !DILocation(line: 1066, column: 3, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !288, line: 1065, column: 11)
!4170 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1065, column: 6)
!4171 = !DILocation(line: 1067, column: 2, scope: !4169)
!4172 = !DILocation(line: 1068, column: 10, scope: !3966)
!4173 = !DILocation(line: 0, scope: !4023)
!4174 = !DILocation(line: 1074, column: 20, scope: !4026)
!4175 = !DILocation(line: 1074, column: 2, scope: !4023)
!4176 = !DILocation(line: 1110, column: 24, scope: !3966)
!4177 = !DILocation(line: 1053, column: 12, scope: !4163)
!4178 = !DILocation(line: 1054, column: 12, scope: !4163)
!4179 = !DILocation(line: 1108, column: 30, scope: !3966)
!4180 = !DILocation(line: 1108, column: 40, scope: !3966)
!4181 = !DILocation(line: 1108, column: 38, scope: !3966)
!4182 = !DILocation(line: 1109, column: 31, scope: !3966)
!4183 = !DILocation(line: 1109, column: 24, scope: !3966)
!4184 = !DILocation(line: 1110, column: 31, scope: !3966)
!4185 = !DILocation(line: 1114, column: 31, scope: !3966)
!4186 = !DILocation(line: 1114, column: 48, scope: !3966)
!4187 = !DILocation(line: 1115, column: 13, scope: !3966)
!4188 = !DILocation(line: 1118, column: 7, scope: !3966)
!4189 = !DILocation(line: 1119, column: 9, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1119, column: 6)
!4191 = !DILocation(line: 1119, column: 6, scope: !3966)
!4192 = !DILocation(line: 1075, column: 29, scope: !4025)
!4193 = !DILocation(line: 1075, column: 21, scope: !4025)
!4194 = !DILocation(line: 0, scope: !4025)
!4195 = !DILocation(line: 1076, column: 29, scope: !4025)
!4196 = !DILocation(line: 1076, column: 21, scope: !4025)
!4197 = !DILocation(line: 1077, column: 38, scope: !4025)
!4198 = !DILocation(line: 1077, column: 21, scope: !4025)
!4199 = !DILocation(line: 1078, column: 16, scope: !4025)
!4200 = !DILocation(line: 1080, column: 19, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4025, file: !288, line: 1080, column: 7)
!4202 = !DILocation(line: 1080, column: 34, scope: !4201)
!4203 = !DILocation(line: 1080, column: 22, scope: !4201)
!4204 = !DILocation(line: 1080, column: 7, scope: !4025)
!4205 = !DILocation(line: 1084, column: 7, scope: !4025)
!4206 = !DILocation(line: 1085, column: 8, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !288, line: 1084, column: 14)
!4208 = distinct !DILexicalBlock(scope: !4025, file: !288, line: 1084, column: 7)
!4209 = !DILocation(line: 1086, column: 5, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !288, line: 1086, column: 5)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !288, line: 1086, column: 5)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !288, line: 1085, column: 49)
!4213 = distinct !DILexicalBlock(scope: !4207, file: !288, line: 1085, column: 8)
!4214 = !DILocation(line: 1086, column: 5, scope: !4211)
!4215 = !DILocation(line: 1086, column: 5, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4210, file: !288, line: 1086, column: 5)
!4217 = !DILocation(line: 1087, column: 25, scope: !4212)
!4218 = !DILocation(line: 1087, column: 5, scope: !4212)
!4219 = !DILocation(line: 1088, column: 4, scope: !4212)
!4220 = !DILocation(line: 1088, column: 15, scope: !4213)
!4221 = !DILocation(line: 1089, column: 5, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !288, line: 1089, column: 5)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !288, line: 1089, column: 5)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !288, line: 1088, column: 61)
!4225 = distinct !DILexicalBlock(scope: !4213, file: !288, line: 1088, column: 15)
!4226 = !DILocation(line: 1089, column: 5, scope: !4223)
!4227 = !DILocation(line: 1089, column: 5, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4222, file: !288, line: 1089, column: 5)
!4229 = !DILocation(line: 1090, column: 26, scope: !4224)
!4230 = !DILocation(line: 1090, column: 5, scope: !4224)
!4231 = !DILocation(line: 1091, column: 4, scope: !4224)
!4232 = !DILocation(line: 1095, column: 8, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4208, file: !288, line: 1094, column: 10)
!4234 = !DILocation(line: 1096, column: 5, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !288, line: 1096, column: 5)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !288, line: 1096, column: 5)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !288, line: 1095, column: 49)
!4238 = distinct !DILexicalBlock(scope: !4233, file: !288, line: 1095, column: 8)
!4239 = !DILocation(line: 1096, column: 5, scope: !4236)
!4240 = !DILocation(line: 1096, column: 5, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4235, file: !288, line: 1096, column: 5)
!4242 = !DILocation(line: 1097, column: 25, scope: !4237)
!4243 = !DILocation(line: 1097, column: 5, scope: !4237)
!4244 = !DILocation(line: 1098, column: 4, scope: !4237)
!4245 = !DILocation(line: 1099, column: 5, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !288, line: 1099, column: 5)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !288, line: 1099, column: 5)
!4248 = distinct !DILexicalBlock(scope: !4238, file: !288, line: 1098, column: 11)
!4249 = !DILocation(line: 1099, column: 5, scope: !4247)
!4250 = !DILocation(line: 1099, column: 5, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !288, line: 1099, column: 5)
!4252 = !DILocation(line: 1100, column: 26, scope: !4248)
!4253 = !DILocation(line: 1100, column: 5, scope: !4248)
!4254 = !DILocation(line: 1100, column: 30, scope: !4248)
!4255 = !DILocation(line: 1101, column: 26, scope: !4248)
!4256 = !DILocation(line: 1101, column: 5, scope: !4248)
!4257 = !DILocation(line: 0, scope: !4208)
!4258 = !DILocation(line: 1074, column: 32, scope: !4026)
!4259 = distinct !{!4259, !4175, !4260}
!4260 = !DILocation(line: 1104, column: 2, scope: !4023)
!4261 = !DILocation(line: 1124, column: 13, scope: !3966)
!4262 = !DILocation(line: 1127, column: 10, scope: !3966)
!4263 = !DILocation(line: 1127, column: 7, scope: !3966)
!4264 = !DILocation(line: 1128, column: 9, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1128, column: 6)
!4266 = !DILocation(line: 1128, column: 6, scope: !3966)
!4267 = !DILocation(line: 1134, column: 27, scope: !3966)
!4268 = !DILocation(line: 1136, column: 7, scope: !3966)
!4269 = !DILocation(line: 1137, column: 9, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 1137, column: 6)
!4271 = !DILocation(line: 1137, column: 6, scope: !3966)
!4272 = !DILocation(line: 1131, column: 10, scope: !3966)
!4273 = !DILocation(line: 1140, column: 10, scope: !3966)
!4274 = !DILocation(line: 0, scope: !4033)
!4275 = !DILocation(line: 1143, column: 20, scope: !4036)
!4276 = !DILocation(line: 1143, column: 2, scope: !4033)
!4277 = !DILocation(line: 1144, column: 3, scope: !4035)
!4278 = !DILocation(line: 1144, column: 17, scope: !4035)
!4279 = !DILocation(line: 0, scope: !4035)
!4280 = !DILocation(line: 1144, column: 11, scope: !4035)
!4281 = !DILocation(line: 1145, column: 38, scope: !4035)
!4282 = !DILocation(line: 1145, column: 21, scope: !4035)
!4283 = !DILocation(line: 1146, column: 22, scope: !4035)
!4284 = !DILocation(line: 1146, column: 29, scope: !4035)
!4285 = !DILocation(line: 1148, column: 8, scope: !4035)
!4286 = !DILocation(line: 1149, column: 10, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4035, file: !288, line: 1149, column: 7)
!4288 = !DILocation(line: 1149, column: 7, scope: !4035)
!4289 = !DILocation(line: 1154, column: 8, scope: !4035)
!4290 = !DILocation(line: 1155, column: 10, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4035, file: !288, line: 1155, column: 7)
!4292 = !DILocation(line: 1155, column: 7, scope: !4035)
!4293 = !DILocation(line: 1159, column: 2, scope: !4036)
!4294 = !DILocation(line: 1152, column: 11, scope: !4035)
!4295 = !DILocation(line: 1158, column: 11, scope: !4035)
!4296 = !DILocation(line: 1143, column: 33, scope: !4036)
!4297 = distinct !{!4297, !4276, !4298}
!4298 = !DILocation(line: 1159, column: 2, scope: !4033)
!4299 = !DILocation(line: 1162, column: 8, scope: !3966)
!4300 = !DILocation(line: 1164, column: 2, scope: !3966)
!4301 = !DILocation(line: 1165, column: 1, scope: !3966)
!4302 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4303, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4305)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{!234, !107}
!4305 = !{!4306, !4307, !4308, !4309, !4310, !4311, !4312}
!4306 = !DILocalVariable(name: "packaged", arg: 1, scope: !4302, file: !288, line: 196, type: !107)
!4307 = !DILocalVariable(name: "buf", scope: !4302, file: !288, line: 200, type: !286)
!4308 = !DILocalVariable(name: "start", scope: !4302, file: !288, line: 201, type: !286)
!4309 = !DILocalVariable(name: "args_size", scope: !4302, file: !288, line: 202, type: !32)
!4310 = !DILocalVariable(name: "s_nbr", scope: !4302, file: !288, line: 202, type: !32)
!4311 = !DILocalVariable(name: "ros_nbr", scope: !4302, file: !288, line: 202, type: !32)
!4312 = !DILocalVariable(name: "i", scope: !4313, file: !288, line: 215, type: !109)
!4313 = distinct !DILexicalBlock(scope: !4302, file: !288, line: 215, column: 2)
!4314 = !DILocation(line: 0, scope: !4302)
!4315 = !DILocation(line: 198, column: 2, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !288, line: 198, column: 2)
!4317 = distinct !DILexicalBlock(scope: !4302, file: !288, line: 198, column: 2)
!4318 = !DILocation(line: 198, column: 2, scope: !4317)
!4319 = !DILocation(line: 198, column: 2, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4316, file: !288, line: 198, column: 2)
!4321 = !DILocation(line: 204, column: 14, scope: !4302)
!4322 = !DILocation(line: 204, column: 21, scope: !4302)
!4323 = !DILocation(line: 205, column: 14, scope: !4302)
!4324 = !DILocation(line: 206, column: 14, scope: !4302)
!4325 = !DILocation(line: 209, column: 6, scope: !4302)
!4326 = !DILocation(line: 212, column: 6, scope: !4302)
!4327 = !DILocation(line: 0, scope: !4313)
!4328 = !DILocation(line: 215, column: 20, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4313, file: !288, line: 215, column: 2)
!4330 = !DILocation(line: 215, column: 2, scope: !4313)
!4331 = !DILocation(line: 220, column: 33, scope: !4302)
!4332 = !DILocation(line: 220, column: 2, scope: !4302)
!4333 = !DILocation(line: 216, column: 6, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4329, file: !288, line: 215, column: 34)
!4335 = !DILocation(line: 217, column: 10, scope: !4334)
!4336 = !DILocation(line: 217, column: 36, scope: !4334)
!4337 = !DILocation(line: 217, column: 7, scope: !4334)
!4338 = !DILocation(line: 215, column: 30, scope: !4329)
!4339 = distinct !{!4339, !4330, !4340}
!4340 = !DILocation(line: 218, column: 2, scope: !4313)
!4341 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4342, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4344)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!109, !3969, !107, !279, !194}
!4344 = !{!4345, !4346, !4347, !4348}
!4345 = !DILocalVariable(name: "cb", arg: 1, scope: !4341, file: !288, line: 223, type: !3969)
!4346 = !DILocalVariable(name: "ctx", arg: 2, scope: !4341, file: !288, line: 223, type: !107)
!4347 = !DILocalVariable(name: "str", arg: 3, scope: !4341, file: !288, line: 223, type: !279)
!4348 = !DILocalVariable(name: "strl", arg: 4, scope: !4341, file: !288, line: 223, type: !194)
!4349 = !DILocation(line: 0, scope: !4341)
!4350 = !DILocation(line: 225, column: 9, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4341, file: !288, line: 225, column: 6)
!4352 = !DILocation(line: 225, column: 6, scope: !4341)
!4353 = !DILocation(line: 226, column: 14, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4351, file: !288, line: 225, column: 18)
!4355 = !DILocation(line: 226, column: 12, scope: !4354)
!4356 = !DILocation(line: 226, column: 3, scope: !4354)
!4357 = !DILocation(line: 229, column: 14, scope: !4341)
!4358 = !DILocation(line: 229, column: 9, scope: !4341)
!4359 = !DILocation(line: 229, column: 27, scope: !4341)
!4360 = !DILocation(line: 229, column: 39, scope: !4341)
!4361 = !DILocation(line: 230, column: 17, scope: !4341)
!4362 = !DILocation(line: 230, column: 9, scope: !4341)
!4363 = !DILocation(line: 230, column: 2, scope: !4341)
!4364 = !DILocation(line: 231, column: 1, scope: !4341)
!4365 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4366)
!4366 = !{!4367}
!4367 = !DILocalVariable(name: "c", arg: 1, scope: !4365, file: !301, line: 45, type: !109)
!4368 = !DILocation(line: 0, scope: !4365)
!4369 = !DILocation(line: 50, column: 2, scope: !4365)
!4370 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4371, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{null, !302}
!4373 = !{!4374}
!4374 = !DILocalVariable(name: "fn", arg: 1, scope: !4370, file: !301, line: 63, type: !302)
!4375 = !DILocation(line: 0, scope: !4370)
!4376 = !DILocation(line: 65, column: 12, scope: !4370)
!4377 = !DILocation(line: 66, column: 1, scope: !4370)
!4378 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4379, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2104)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!107}
!4381 = !DILocation(line: 78, column: 9, scope: !4378)
!4382 = !DILocation(line: 78, column: 2, scope: !4378)
!4383 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4384, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4392)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !279, !4386}
!4386 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3455, line: 99, baseType: !4387)
!4387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3455, line: 40, baseType: !4388)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4389)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4390)
!4390 = !{!4391}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4389, file: !301, line: 79, baseType: !107, size: 32)
!4392 = !{!4393, !4394, !4395}
!4393 = !DILocalVariable(name: "fmt", arg: 1, scope: !4383, file: !301, line: 113, type: !279)
!4394 = !DILocalVariable(name: "ap", arg: 2, scope: !4383, file: !301, line: 113, type: !4386)
!4395 = !DILocalVariable(name: "ctx", scope: !4396, file: !301, line: 121, type: !4398)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !301, line: 120, column: 27)
!4397 = distinct !DILexicalBlock(scope: !4383, file: !301, line: 120, column: 6)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4399)
!4399 = !{!4400, !4401}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4398, file: !301, line: 85, baseType: !32, size: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4398, file: !301, line: 86, baseType: !4402, offset: 32)
!4402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4403)
!4403 = !{!4404}
!4404 = !DISubrange(count: 0)
!4405 = !DILocation(line: 0, scope: !4383)
!4406 = !DILocation(line: 148, column: 3, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4397, file: !301, line: 138, column: 9)
!4408 = !DILocation(line: 155, column: 1, scope: !4383)
!4409 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4410, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4412)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!109, !109, !107}
!4412 = !{!4413, !4414}
!4413 = !DILocalVariable(name: "c", arg: 1, scope: !4409, file: !301, line: 107, type: !109)
!4414 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4409, file: !301, line: 107, type: !107)
!4415 = !DILocation(line: 0, scope: !4409)
!4416 = !DILocation(line: 110, column: 9, scope: !4409)
!4417 = !DILocation(line: 110, column: 2, scope: !4409)
!4418 = distinct !DISubprogram(name: "cbvprintf", scope: !3487, file: !3487, line: 739, type: !4419, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4421)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!109, !3837, !107, !279, !4386}
!4421 = !{!4422, !4423, !4424, !4425}
!4422 = !DILocalVariable(name: "out", arg: 1, scope: !4418, file: !3487, line: 739, type: !3837)
!4423 = !DILocalVariable(name: "ctx", arg: 2, scope: !4418, file: !3487, line: 739, type: !107)
!4424 = !DILocalVariable(name: "format", arg: 3, scope: !4418, file: !3487, line: 739, type: !279)
!4425 = !DILocalVariable(name: "ap", arg: 4, scope: !4418, file: !3487, line: 739, type: !4386)
!4426 = !DILocation(line: 0, scope: !4418)
!4427 = !DILocation(line: 741, column: 9, scope: !4418)
!4428 = !DILocation(line: 741, column: 2, scope: !4418)
!4429 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4430, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4432)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{null, !285, !234}
!4432 = !{!4433, !4434, !4435}
!4433 = !DILocalVariable(name: "c", arg: 1, scope: !4429, file: !301, line: 157, type: !285)
!4434 = !DILocalVariable(name: "n", arg: 2, scope: !4429, file: !301, line: 157, type: !234)
!4435 = !DILocalVariable(name: "i", scope: !4429, file: !301, line: 159, type: !234)
!4436 = !DILocation(line: 0, scope: !4429)
!4437 = !DILocation(line: 164, column: 16, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !301, line: 164, column: 2)
!4439 = distinct !DILexicalBlock(scope: !4429, file: !301, line: 164, column: 2)
!4440 = !DILocation(line: 164, column: 2, scope: !4439)
!4441 = !DILocation(line: 165, column: 3, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !301, line: 164, column: 26)
!4443 = !DILocation(line: 165, column: 13, scope: !4442)
!4444 = !DILocation(line: 164, column: 22, scope: !4438)
!4445 = distinct !{!4445, !4440, !4446}
!4446 = !DILocation(line: 166, column: 2, scope: !4439)
!4447 = !DILocation(line: 171, column: 1, scope: !4429)
!4448 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4449, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4451)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{null, !279, null}
!4451 = !{!4452, !4453}
!4452 = !DILocalVariable(name: "fmt", arg: 1, scope: !4448, file: !301, line: 203, type: !279)
!4453 = !DILocalVariable(name: "ap", scope: !4448, file: !301, line: 205, type: !4386)
!4454 = !DILocation(line: 0, scope: !4448)
!4455 = !DILocation(line: 205, column: 2, scope: !4448)
!4456 = !DILocation(line: 205, column: 10, scope: !4448)
!4457 = !DILocation(line: 207, column: 2, scope: !4448)
!4458 = !DILocation(line: 209, column: 2, scope: !4448)
!4459 = !DILocation(line: 211, column: 2, scope: !4448)
!4460 = !DILocation(line: 212, column: 1, scope: !4448)
!4461 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4462, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4464)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!109, !285, !234, !279, null}
!4464 = !{!4465, !4466, !4467, !4468, !4469}
!4465 = !DILocalVariable(name: "str", arg: 1, scope: !4461, file: !301, line: 239, type: !285)
!4466 = !DILocalVariable(name: "size", arg: 2, scope: !4461, file: !301, line: 239, type: !234)
!4467 = !DILocalVariable(name: "fmt", arg: 3, scope: !4461, file: !301, line: 239, type: !279)
!4468 = !DILocalVariable(name: "ap", scope: !4461, file: !301, line: 241, type: !4386)
!4469 = !DILocalVariable(name: "ret", scope: !4461, file: !301, line: 242, type: !109)
!4470 = !DILocation(line: 0, scope: !4461)
!4471 = !DILocation(line: 241, column: 2, scope: !4461)
!4472 = !DILocation(line: 241, column: 10, scope: !4461)
!4473 = !DILocation(line: 244, column: 2, scope: !4461)
!4474 = !DILocation(line: 245, column: 8, scope: !4461)
!4475 = !DILocation(line: 246, column: 2, scope: !4461)
!4476 = !DILocation(line: 249, column: 1, scope: !4461)
!4477 = !DILocation(line: 248, column: 2, scope: !4461)
!4478 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4479, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4481)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!109, !285, !234, !279, !4386}
!4481 = !{!4482, !4483, !4484, !4485, !4486}
!4482 = !DILocalVariable(name: "str", arg: 1, scope: !4478, file: !301, line: 251, type: !285)
!4483 = !DILocalVariable(name: "size", arg: 2, scope: !4478, file: !301, line: 251, type: !234)
!4484 = !DILocalVariable(name: "fmt", arg: 3, scope: !4478, file: !301, line: 251, type: !279)
!4485 = !DILocalVariable(name: "ap", arg: 4, scope: !4478, file: !301, line: 251, type: !4386)
!4486 = !DILocalVariable(name: "ctx", scope: !4478, file: !301, line: 253, type: !4487)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4488)
!4488 = !{!4489, !4490, !4491}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4487, file: !301, line: 218, baseType: !285, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4487, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4487, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4492 = !DILocation(line: 0, scope: !4478)
!4493 = !DILocation(line: 253, column: 2, scope: !4478)
!4494 = !DILocation(line: 253, column: 21, scope: !4478)
!4495 = !DILocation(line: 253, column: 27, scope: !4478)
!4496 = !DILocation(line: 255, column: 2, scope: !4478)
!4497 = !DILocation(line: 257, column: 10, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4478, file: !301, line: 257, column: 6)
!4499 = !DILocation(line: 257, column: 22, scope: !4498)
!4500 = !DILocation(line: 257, column: 16, scope: !4498)
!4501 = !DILocation(line: 257, column: 6, scope: !4478)
!4502 = !DILocation(line: 258, column: 3, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4498, file: !301, line: 257, column: 27)
!4504 = !DILocation(line: 258, column: 18, scope: !4503)
!4505 = !DILocation(line: 259, column: 2, scope: !4503)
!4506 = !DILocation(line: 262, column: 1, scope: !4478)
!4507 = !DILocation(line: 261, column: 2, scope: !4478)
!4508 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4509, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4512)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!109, !109, !4511}
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 32)
!4512 = !{!4513, !4514}
!4513 = !DILocalVariable(name: "c", arg: 1, scope: !4508, file: !301, line: 223, type: !109)
!4514 = !DILocalVariable(name: "ctx", arg: 2, scope: !4508, file: !301, line: 223, type: !4511)
!4515 = !DILocation(line: 0, scope: !4508)
!4516 = !DILocation(line: 225, column: 11, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4508, file: !301, line: 225, column: 6)
!4518 = !DILocation(line: 225, column: 15, scope: !4517)
!4519 = !DILocation(line: 0, scope: !4517)
!4520 = !DILocation(line: 225, column: 23, scope: !4517)
!4521 = !DILocation(line: 225, column: 45, scope: !4517)
!4522 = !DILocation(line: 225, column: 37, scope: !4517)
!4523 = !DILocation(line: 225, column: 6, scope: !4508)
!4524 = !DILocation(line: 226, column: 8, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4517, file: !301, line: 225, column: 50)
!4526 = !DILocation(line: 226, column: 13, scope: !4525)
!4527 = !DILocation(line: 227, column: 3, scope: !4525)
!4528 = !DILocation(line: 230, column: 29, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4508, file: !301, line: 230, column: 6)
!4530 = !DILocation(line: 230, column: 17, scope: !4529)
!4531 = !DILocation(line: 230, column: 6, scope: !4508)
!4532 = !DILocation(line: 231, column: 22, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4529, file: !301, line: 230, column: 34)
!4534 = !DILocation(line: 231, column: 3, scope: !4533)
!4535 = !DILocation(line: 231, column: 26, scope: !4533)
!4536 = !DILocation(line: 232, column: 2, scope: !4533)
!4537 = !DILocation(line: 233, column: 28, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4529, file: !301, line: 232, column: 9)
!4539 = !DILocation(line: 233, column: 22, scope: !4538)
!4540 = !DILocation(line: 233, column: 3, scope: !4538)
!4541 = !DILocation(line: 233, column: 26, scope: !4538)
!4542 = !DILocation(line: 237, column: 1, scope: !4508)
!4543 = distinct !DISubprogram(name: "z_thread_entry", scope: !4544, file: !4544, line: 30, type: !4545, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !4547)
!4544 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4545 = !DISubroutineType(types: !4546)
!4546 = !{null, !3420, !107, !107, !107}
!4547 = !{!4548, !4549, !4550, !4551}
!4548 = !DILocalVariable(name: "entry", arg: 1, scope: !4543, file: !4544, line: 30, type: !3420)
!4549 = !DILocalVariable(name: "p1", arg: 2, scope: !4543, file: !4544, line: 31, type: !107)
!4550 = !DILocalVariable(name: "p2", arg: 3, scope: !4543, file: !4544, line: 31, type: !107)
!4551 = !DILocalVariable(name: "p3", arg: 4, scope: !4543, file: !4544, line: 31, type: !107)
!4552 = !DILocation(line: 0, scope: !4543)
!4553 = !DILocation(line: 36, column: 2, scope: !4543)
!4554 = !DILocation(line: 38, column: 17, scope: !4543)
!4555 = !DILocation(line: 38, column: 2, scope: !4543)
!4556 = !DILocation(line: 45, column: 2, scope: !4543)
!4557 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4558, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2104)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!4560}
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4561)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 32)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4563)
!4563 = !{!4564, !4622, !4634, !4635, !4636, !4637, !4638, !4644, !4659}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4562, file: !158, line: 247, baseType: !4565, size: 384)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4566)
!4566 = !{!4567, !4591, !4598, !4599, !4600, !4609, !4610, !4611}
!4567 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !158, line: 60, baseType: !4568, size: 64)
!4568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !158, line: 60, size: 64, elements: !4569)
!4569 = !{!4570, !4585}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4568, file: !158, line: 61, baseType: !4571, size: 64)
!4571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4572)
!4572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4573)
!4573 = !{!4574, !4580}
!4574 = !DIDerivedType(tag: DW_TAG_member, scope: !4572, file: !127, line: 38, baseType: !4575, size: 32)
!4575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4572, file: !127, line: 38, size: 32, elements: !4576)
!4576 = !{!4577, !4579}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4575, file: !127, line: 39, baseType: !4578, size: 32)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 32)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4575, file: !127, line: 40, baseType: !4578, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, scope: !4572, file: !127, line: 42, baseType: !4581, size: 32, offset: 32)
!4581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4572, file: !127, line: 42, size: 32, elements: !4582)
!4582 = !{!4583, !4584}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4581, file: !127, line: 43, baseType: !4578, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4581, file: !127, line: 44, baseType: !4578, size: 32)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4568, file: !158, line: 62, baseType: !4586, size: 64)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4587)
!4587 = !{!4588}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4586, file: !170, line: 50, baseType: !4589, size: 64)
!4589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4590, size: 64, elements: !175)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4565, file: !158, line: 68, baseType: !4592, size: 32, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4594)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4595)
!4595 = !{!4596}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4594, file: !122, line: 232, baseType: !4597, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4572)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4565, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4565, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4600 = !DIDerivedType(tag: DW_TAG_member, scope: !4565, file: !158, line: 90, baseType: !4601, size: 16, offset: 112)
!4601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4565, file: !158, line: 90, size: 16, elements: !4602)
!4602 = !{!4603, !4608}
!4603 = !DIDerivedType(tag: DW_TAG_member, scope: !4601, file: !158, line: 91, baseType: !4604, size: 16)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4601, file: !158, line: 91, size: 16, elements: !4605)
!4605 = !{!4606, !4607}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4604, file: !158, line: 96, baseType: !190, size: 8)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4604, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4601, file: !158, line: 100, baseType: !194, size: 16)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4565, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4565, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4565, file: !158, line: 131, baseType: !4612, size: 192, offset: 192)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4613)
!4613 = !{!4614, !4615, !4621}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4612, file: !122, line: 245, baseType: !4571, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4612, file: !122, line: 246, baseType: !4616, size: 32, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4617)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 32)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{null, !4620}
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4612, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4562, file: !158, line: 250, baseType: !4623, size: 288, offset: 384)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4624)
!4624 = !{!4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4623, file: !211, line: 26, baseType: !110, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4623, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4623, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4623, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4623, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4623, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4623, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4623, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4623, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4562, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4562, file: !158, line: 256, baseType: !4593, size: 64, offset: 704)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4562, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4562, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4562, file: !158, line: 300, baseType: !4639, size: 96, offset: 1056)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4640)
!4640 = !{!4641, !4642, !4643}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4639, file: !158, line: 153, baseType: !22, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4639, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4639, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4562, file: !158, line: 325, baseType: !4645, size: 32, offset: 1152)
!4645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4646, size: 32)
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4647)
!4647 = !{!4648, !4654, !4655}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4646, file: !118, line: 5074, baseType: !4649, size: 96)
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4650)
!4650 = !{!4651, !4652, !4653}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4649, file: !243, line: 57, baseType: !246, size: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4649, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4649, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4646, file: !118, line: 5075, baseType: !4593, size: 64, offset: 96)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4646, file: !118, line: 5076, baseType: !4656, size: 32, offset: 160)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4657)
!4657 = !{!4658}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4656, file: !253, line: 52, baseType: !22, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4562, file: !158, line: 343, baseType: !4660, size: 64, offset: 1184)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4661)
!4661 = !{!4662, !4663}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4660, file: !211, line: 63, baseType: !110, size: 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4660, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4664 = !DILocation(line: 535, column: 9, scope: !4557)
!4665 = !DILocation(line: 535, column: 2, scope: !4557)
!4666 = distinct !DISubprogram(name: "k_thread_abort", scope: !3299, file: !3299, line: 188, type: !4667, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !4669)
!4667 = !DISubroutineType(types: !4668)
!4668 = !{null, !4560}
!4669 = !{!4670}
!4670 = !DILocalVariable(name: "thread", arg: 1, scope: !4666, file: !3299, line: 188, type: !4560)
!4671 = !DILocation(line: 0, scope: !4666)
!4672 = !DILocation(line: 197, column: 2, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4666, file: !3299, line: 197, column: 2)
!4674 = !{i64 2155066239}
!4675 = !DILocation(line: 198, column: 2, scope: !4666)
!4676 = !DILocation(line: 199, column: 1, scope: !4666)
!4677 = distinct !DISubprogram(name: "z_current_get", scope: !3299, file: !3299, line: 173, type: !4558, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2104)
!4678 = !DILocation(line: 180, column: 2, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4677, file: !3299, line: 180, column: 2)
!4680 = !{i64 2155066171}
!4681 = !DILocation(line: 181, column: 9, scope: !4677)
!4682 = !DILocation(line: 181, column: 2, scope: !4677)
!4683 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2595, file: !2595, line: 1338, type: !4684, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4692)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!109, !3837, !107, !279, !4686, !110}
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3455, line: 99, baseType: !4687)
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3455, line: 40, baseType: !4688)
!4688 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2595, baseType: !4689)
!4689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4690)
!4690 = !{!4691}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4689, file: !2595, baseType: !107, size: 32)
!4692 = !{!4693, !4694, !4695, !4696, !4697, !4698, !4702, !4703, !4704, !4706, !4711, !4754, !4757, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4769, !4770, !4771, !4775, !4778, !4780, !4783, !4784, !4785, !4790, !4796, !4799, !4803, !4809, !4813, !4816, !4818, !4821}
!4693 = !DILocalVariable(name: "out", arg: 1, scope: !4683, file: !2595, line: 1338, type: !3837)
!4694 = !DILocalVariable(name: "ctx", arg: 2, scope: !4683, file: !2595, line: 1338, type: !107)
!4695 = !DILocalVariable(name: "fp", arg: 3, scope: !4683, file: !2595, line: 1338, type: !279)
!4696 = !DILocalVariable(name: "ap", arg: 4, scope: !4683, file: !2595, line: 1339, type: !4686)
!4697 = !DILocalVariable(name: "flags", arg: 5, scope: !4683, file: !2595, line: 1339, type: !110)
!4698 = !DILocalVariable(name: "buf", scope: !4683, file: !2595, line: 1341, type: !4699)
!4699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4700)
!4700 = !{!4701}
!4701 = !DISubrange(count: 22)
!4702 = !DILocalVariable(name: "count", scope: !4683, file: !2595, line: 1342, type: !234)
!4703 = !DILocalVariable(name: "sint", scope: !4683, file: !2595, line: 1343, type: !2614)
!4704 = !DILocalVariable(name: "tagged_ap", scope: !4683, file: !2595, line: 1345, type: !4705)
!4705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4706 = !DILocalVariable(name: "rc", scope: !4707, file: !2595, line: 1377, type: !109)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2595, line: 1377, column: 4)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2595, line: 1376, column: 19)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1376, column: 7)
!4710 = distinct !DILexicalBlock(scope: !4683, file: !2595, line: 1375, column: 19)
!4711 = !DILocalVariable(name: "state", scope: !4710, file: !2595, line: 1395, type: !4712)
!4712 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4683, file: !2595, line: 1392, size: 192, elements: !4713)
!4713 = !{!4714, !4722}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4712, file: !2595, line: 1393, baseType: !4715, size: 64)
!4715 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2595, line: 166, size: 64, elements: !4716)
!4716 = !{!4717, !4718, !4719, !4720, !4721}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4715, file: !2595, line: 168, baseType: !2614, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4715, file: !2595, line: 171, baseType: !2617, size: 64)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4715, file: !2595, line: 174, baseType: !277, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4715, file: !2595, line: 177, baseType: !275, size: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4715, file: !2595, line: 180, baseType: !107, size: 32)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4712, file: !2595, line: 1394, baseType: !4723, size: 96, offset: 64)
!4723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2595, line: 189, size: 96, elements: !4724)
!4724 = !{!4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4749}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4723, file: !2595, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4723, file: !2595, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4723, file: !2595, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4723, file: !2595, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4723, file: !2595, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4723, file: !2595, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4723, file: !2595, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4723, file: !2595, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4723, file: !2595, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4723, file: !2595, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4723, file: !2595, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4723, file: !2595, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4723, file: !2595, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4723, file: !2595, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4723, file: !2595, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4723, file: !2595, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4723, file: !2595, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4723, file: !2595, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4723, file: !2595, line: 260, baseType: !181, size: 8, offset: 24)
!4744 = !DIDerivedType(tag: DW_TAG_member, scope: !4723, file: !2595, line: 262, baseType: !4745, size: 32, offset: 32)
!4745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4723, file: !2595, line: 262, size: 32, elements: !4746)
!4746 = !{!4747, !4748}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4745, file: !2595, line: 267, baseType: !109, size: 32)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4745, file: !2595, line: 289, baseType: !109, size: 32)
!4749 = !DIDerivedType(tag: DW_TAG_member, scope: !4723, file: !2595, line: 292, baseType: !4750, size: 32, offset: 64)
!4750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4723, file: !2595, line: 292, size: 32, elements: !4751)
!4751 = !{!4752, !4753}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4750, file: !2595, line: 297, baseType: !109, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4750, file: !2595, line: 306, baseType: !109, size: 32)
!4754 = !DILocalVariable(name: "conv", scope: !4710, file: !2595, line: 1400, type: !4755)
!4755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4756)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 32)
!4757 = !DILocalVariable(name: "value", scope: !4710, file: !2595, line: 1401, type: !4758)
!4758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4759)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 32)
!4760 = !DILocalVariable(name: "sp", scope: !4710, file: !2595, line: 1402, type: !279)
!4761 = !DILocalVariable(name: "width", scope: !4710, file: !2595, line: 1403, type: !109)
!4762 = !DILocalVariable(name: "precision", scope: !4710, file: !2595, line: 1404, type: !109)
!4763 = !DILocalVariable(name: "bps", scope: !4710, file: !2595, line: 1405, type: !279)
!4764 = !DILocalVariable(name: "bpe", scope: !4710, file: !2595, line: 1406, type: !279)
!4765 = !DILocalVariable(name: "sign", scope: !4710, file: !2595, line: 1407, type: !150)
!4766 = !DILocalVariable(name: "arg", scope: !4767, file: !2595, line: 1432, type: !109)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !2595, line: 1431, column: 24)
!4768 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1431, column: 7)
!4769 = !DILocalVariable(name: "specifier_cat", scope: !4710, file: !2595, line: 1468, type: !2594)
!4770 = !DILocalVariable(name: "length_mod", scope: !4710, file: !2595, line: 1470, type: !2602)
!4771 = !DILocalVariable(name: "rc", scope: !4772, file: !2595, line: 1575, type: !109)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !2595, line: 1575, column: 4)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2595, line: 1574, column: 43)
!4774 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1574, column: 7)
!4775 = !DILocalVariable(name: "rc", scope: !4776, file: !2595, line: 1584, type: !109)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1584, column: 4)
!4777 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1582, column: 28)
!4778 = !DILocalVariable(name: "len", scope: !4779, file: !2595, line: 1589, type: !234)
!4779 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1586, column: 13)
!4780 = !DILocalVariable(name: "len", scope: !4781, file: !2595, line: 1641, type: !234)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !2595, line: 1640, column: 24)
!4782 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1640, column: 8)
!4783 = !DILocalVariable(name: "nj_len", scope: !4710, file: !2595, line: 1722, type: !234)
!4784 = !DILocalVariable(name: "pad_len", scope: !4710, file: !2595, line: 1723, type: !109)
!4785 = !DILocalVariable(name: "pad", scope: !4786, file: !2595, line: 1751, type: !150)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !2595, line: 1750, column: 26)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2595, line: 1750, column: 8)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2595, line: 1747, column: 18)
!4789 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1747, column: 7)
!4790 = !DILocalVariable(name: "rc", scope: !4791, file: !2595, line: 1758, type: !109)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !2595, line: 1758, column: 7)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !2595, line: 1757, column: 21)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2595, line: 1757, column: 10)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !2595, line: 1756, column: 26)
!4795 = distinct !DILexicalBlock(scope: !4786, file: !2595, line: 1756, column: 9)
!4796 = !DILocalVariable(name: "rc", scope: !4797, file: !2595, line: 1765, type: !109)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !2595, line: 1765, column: 6)
!4798 = distinct !DILexicalBlock(scope: !4786, file: !2595, line: 1764, column: 25)
!4799 = !DILocalVariable(name: "rc", scope: !4800, file: !2595, line: 1774, type: !109)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2595, line: 1774, column: 4)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2595, line: 1773, column: 18)
!4802 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1773, column: 7)
!4803 = !DILocalVariable(name: "rc", scope: !4804, file: !2595, line: 1819, type: !109)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !2595, line: 1819, column: 5)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !2595, line: 1818, column: 44)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !2595, line: 1818, column: 8)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !2595, line: 1817, column: 10)
!4808 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1777, column: 7)
!4809 = !DILocalVariable(name: "rc", scope: !4810, file: !2595, line: 1823, type: !109)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2595, line: 1823, column: 5)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !2595, line: 1822, column: 26)
!4812 = distinct !DILexicalBlock(scope: !4807, file: !2595, line: 1822, column: 8)
!4813 = !DILocalVariable(name: "rc", scope: !4814, file: !2595, line: 1828, type: !109)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !2595, line: 1828, column: 5)
!4815 = distinct !DILexicalBlock(scope: !4807, file: !2595, line: 1827, column: 26)
!4816 = !DILocalVariable(name: "rc", scope: !4817, file: !2595, line: 1831, type: !109)
!4817 = distinct !DILexicalBlock(scope: !4807, file: !2595, line: 1831, column: 4)
!4818 = !DILocalVariable(name: "rc", scope: !4819, file: !2595, line: 1836, type: !109)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !2595, line: 1836, column: 4)
!4820 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1835, column: 21)
!4821 = !DILabel(scope: !4777, name: "prec_int_pad0", file: !2595, line: 1634)
!4822 = !DILocation(line: 0, scope: !4683)
!4823 = !DILocation(line: 1341, column: 2, scope: !4683)
!4824 = !DILocation(line: 1341, column: 7, scope: !4683)
!4825 = !DILocation(line: 1375, column: 2, scope: !4683)
!4826 = !DILocation(line: 1342, column: 9, scope: !4683)
!4827 = !DILocation(line: 1375, column: 9, scope: !4683)
!4828 = !DILocation(line: 1377, column: 4, scope: !4707)
!4829 = !DILocation(line: 0, scope: !4707)
!4830 = !DILocation(line: 1377, column: 4, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4707, file: !2595, line: 1377, column: 4)
!4832 = distinct !{!4832, !4825, !4833}
!4833 = !DILocation(line: 1839, column: 2, scope: !4683)
!4834 = !DILocation(line: 1392, column: 3, scope: !4710)
!4835 = !DILocation(line: 1395, column: 5, scope: !4710)
!4836 = !DILocation(line: 0, scope: !4710)
!4837 = !DILocation(line: 1409, column: 8, scope: !4710)
!4838 = !DILocation(line: 1414, column: 13, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1414, column: 7)
!4840 = !DILocation(line: 1414, column: 7, scope: !4710)
!4841 = !DILocation(line: 1415, column: 12, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4839, file: !2595, line: 1414, column: 25)
!4843 = !DILocation(line: 1417, column: 14, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4842, file: !2595, line: 1417, column: 8)
!4845 = !DILocation(line: 1417, column: 8, scope: !4842)
!4846 = !DILocation(line: 1418, column: 21, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !2595, line: 1417, column: 19)
!4848 = !DILocation(line: 1419, column: 13, scope: !4847)
!4849 = !DILocation(line: 1420, column: 4, scope: !4847)
!4850 = !DILocation(line: 1421, column: 20, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4839, file: !2595, line: 1421, column: 14)
!4852 = !DILocation(line: 1421, column: 14, scope: !4839)
!4853 = !DILocation(line: 1431, column: 13, scope: !4768)
!4854 = !DILocation(line: 1431, column: 7, scope: !4710)
!4855 = !DILocation(line: 1432, column: 14, scope: !4767)
!4856 = !DILocation(line: 0, scope: !4767)
!4857 = !DILocation(line: 1434, column: 12, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4767, file: !2595, line: 1434, column: 8)
!4859 = !DILocation(line: 1434, column: 8, scope: !4767)
!4860 = !DILocation(line: 1435, column: 24, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !2595, line: 1434, column: 17)
!4862 = !DILocation(line: 1436, column: 4, scope: !4861)
!4863 = !DILocation(line: 1439, column: 20, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4768, file: !2595, line: 1439, column: 14)
!4865 = !DILocation(line: 1439, column: 14, scope: !4768)
!4866 = !DILocation(line: 1469, column: 37, scope: !4710)
!4867 = !DILocation(line: 1448, column: 20, scope: !4710)
!4868 = !DILocation(line: 1449, column: 22, scope: !4710)
!4869 = !DILocation(line: 1471, column: 34, scope: !4710)
!4870 = !DILocation(line: 1478, column: 7, scope: !4710)
!4871 = !DILocation(line: 1479, column: 4, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2595, line: 1478, column: 40)
!4873 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1478, column: 7)
!4874 = !DILocation(line: 1484, column: 19, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4872, file: !2595, line: 1479, column: 24)
!4876 = !DILocation(line: 1484, column: 17, scope: !4875)
!4877 = !DILocation(line: 1485, column: 5, scope: !4875)
!4878 = !DILocation(line: 1492, column: 20, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !2595, line: 1491, column: 12)
!4880 = distinct !DILexicalBlock(scope: !4875, file: !2595, line: 1487, column: 9)
!4881 = !DILocation(line: 1492, column: 18, scope: !4879)
!4882 = !DILocation(line: 1494, column: 5, scope: !4875)
!4883 = !DILocation(line: 1497, column: 23, scope: !4875)
!4884 = !DILocation(line: 1496, column: 17, scope: !4875)
!4885 = !DILocation(line: 1498, column: 5, scope: !4875)
!4886 = !DILocation(line: 1501, column: 23, scope: !4875)
!4887 = !DILocation(line: 1500, column: 17, scope: !4875)
!4888 = !DILocation(line: 1502, column: 5, scope: !4875)
!4889 = !DILocation(line: 1513, column: 23, scope: !4875)
!4890 = !DILocation(line: 1513, column: 6, scope: !4875)
!4891 = !DILocation(line: 1512, column: 17, scope: !4875)
!4892 = !DILocation(line: 1514, column: 5, scope: !4875)
!4893 = !DILocation(line: 0, scope: !4875)
!4894 = !DILocation(line: 1516, column: 8, scope: !4872)
!4895 = !DILocation(line: 1517, column: 19, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !2595, line: 1516, column: 33)
!4897 = distinct !DILexicalBlock(scope: !4872, file: !2595, line: 1516, column: 8)
!4898 = !DILocation(line: 1517, column: 17, scope: !4896)
!4899 = !DILocation(line: 1518, column: 4, scope: !4896)
!4900 = !DILocation(line: 1519, column: 19, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2595, line: 1518, column: 39)
!4902 = distinct !DILexicalBlock(scope: !4897, file: !2595, line: 1518, column: 15)
!4903 = !DILocation(line: 1519, column: 17, scope: !4901)
!4904 = !DILocation(line: 1520, column: 4, scope: !4901)
!4905 = !DILocation(line: 1522, column: 4, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !2595, line: 1521, column: 47)
!4907 = distinct !DILexicalBlock(scope: !4873, file: !2595, line: 1521, column: 14)
!4908 = !DILocation(line: 1527, column: 19, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !2595, line: 1522, column: 24)
!4910 = !DILocation(line: 1527, column: 17, scope: !4909)
!4911 = !DILocation(line: 1528, column: 5, scope: !4909)
!4912 = !DILocation(line: 0, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !2595, line: 1530, column: 9)
!4914 = !DILocation(line: 1540, column: 23, scope: !4909)
!4915 = !DILocation(line: 1539, column: 17, scope: !4909)
!4916 = !DILocation(line: 1542, column: 5, scope: !4909)
!4917 = !DILocation(line: 1545, column: 23, scope: !4909)
!4918 = !DILocation(line: 1544, column: 17, scope: !4909)
!4919 = !DILocation(line: 1547, column: 5, scope: !4909)
!4920 = !DILocation(line: 1551, column: 23, scope: !4909)
!4921 = !DILocation(line: 1551, column: 6, scope: !4909)
!4922 = !DILocation(line: 1550, column: 17, scope: !4909)
!4923 = !DILocation(line: 1552, column: 5, scope: !4909)
!4924 = !DILocation(line: 0, scope: !4909)
!4925 = !DILocation(line: 1554, column: 8, scope: !4906)
!4926 = !DILocation(line: 1555, column: 19, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !2595, line: 1554, column: 33)
!4928 = distinct !DILexicalBlock(scope: !4906, file: !2595, line: 1554, column: 8)
!4929 = !DILocation(line: 1555, column: 17, scope: !4927)
!4930 = !DILocation(line: 1556, column: 4, scope: !4927)
!4931 = !DILocation(line: 1557, column: 19, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !2595, line: 1556, column: 39)
!4933 = distinct !DILexicalBlock(scope: !4928, file: !2595, line: 1556, column: 15)
!4934 = !DILocation(line: 1557, column: 17, scope: !4932)
!4935 = !DILocation(line: 1558, column: 4, scope: !4932)
!4936 = !DILocation(line: 0, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !2595, line: 1560, column: 8)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !2595, line: 1559, column: 45)
!4939 = distinct !DILexicalBlock(scope: !4907, file: !2595, line: 1559, column: 14)
!4940 = !DILocation(line: 1566, column: 17, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2595, line: 1565, column: 46)
!4942 = distinct !DILexicalBlock(scope: !4939, file: !2595, line: 1565, column: 14)
!4943 = !DILocation(line: 1566, column: 15, scope: !4941)
!4944 = !DILocation(line: 1567, column: 3, scope: !4941)
!4945 = !DILocation(line: 1574, column: 21, scope: !4774)
!4946 = !DILocation(line: 1575, column: 4, scope: !4772)
!4947 = !DILocation(line: 0, scope: !4772)
!4948 = !DILocation(line: 1575, column: 4, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4772, file: !2595, line: 1575, column: 4)
!4950 = !DILocation(line: 1582, column: 17, scope: !4710)
!4951 = !DILocation(line: 1582, column: 3, scope: !4710)
!4952 = !DILocation(line: 1584, column: 4, scope: !4776)
!4953 = !DILocation(line: 0, scope: !4776)
!4954 = !DILocation(line: 1584, column: 4, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4776, file: !2595, line: 1584, column: 4)
!4956 = !DILocation(line: 1587, column: 31, scope: !4779)
!4957 = !DILocation(line: 1591, column: 18, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4779, file: !2595, line: 1591, column: 8)
!4959 = !DILocation(line: 1591, column: 8, scope: !4779)
!4960 = !DILocation(line: 1592, column: 11, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !2595, line: 1591, column: 24)
!4962 = !DILocation(line: 0, scope: !4779)
!4963 = !DILocation(line: 1593, column: 4, scope: !4961)
!4964 = !DILocation(line: 1594, column: 11, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4958, file: !2595, line: 1593, column: 11)
!4966 = !DILocation(line: 1604, column: 51, scope: !4777)
!4967 = !DILocation(line: 1604, column: 13, scope: !4777)
!4968 = !DILocation(line: 1604, column: 11, scope: !4777)
!4969 = !DILocation(line: 1606, column: 4, scope: !4777)
!4970 = !DILocation(line: 1609, column: 14, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1609, column: 8)
!4972 = !DILocation(line: 1609, column: 8, scope: !4777)
!4973 = !DILocation(line: 1619, column: 18, scope: !4777)
!4974 = !DILocation(line: 1620, column: 13, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1620, column: 8)
!4976 = !DILocation(line: 1620, column: 8, scope: !4777)
!4977 = !DILocation(line: 1622, column: 36, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4975, file: !2595, line: 1620, column: 18)
!4979 = !DILocation(line: 1622, column: 17, scope: !4978)
!4980 = !DILocation(line: 1623, column: 4, scope: !4978)
!4981 = !DILocation(line: 1632, column: 29, scope: !4777)
!4982 = !DILocation(line: 1632, column: 10, scope: !4777)
!4983 = !DILocation(line: 1632, column: 4, scope: !4777)
!4984 = !DILocation(line: 1407, column: 8, scope: !4710)
!4985 = !DILocation(line: 0, scope: !4777)
!4986 = !DILocation(line: 1634, column: 3, scope: !4777)
!4987 = !DILocation(line: 1640, column: 18, scope: !4782)
!4988 = !DILocation(line: 1640, column: 8, scope: !4777)
!4989 = !DILocation(line: 1729, column: 13, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1729, column: 7)
!4991 = !DILocation(line: 1641, column: 22, scope: !4781)
!4992 = !DILocation(line: 0, scope: !4781)
!4993 = !DILocation(line: 1646, column: 21, scope: !4781)
!4994 = !DILocation(line: 1649, column: 13, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4781, file: !2595, line: 1649, column: 9)
!4996 = !DILocation(line: 1649, column: 9, scope: !4781)
!4997 = !DILocation(line: 1650, column: 35, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !2595, line: 1649, column: 34)
!4999 = !DILocation(line: 1650, column: 23, scope: !4998)
!5000 = !DILocation(line: 1651, column: 5, scope: !4998)
!5001 = !DILocation(line: 1660, column: 15, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1660, column: 8)
!5003 = !DILocation(line: 1660, column: 19, scope: !5002)
!5004 = !DILocation(line: 1660, column: 8, scope: !4777)
!5005 = !DILocation(line: 1661, column: 23, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !2595, line: 1660, column: 28)
!5007 = !DILocation(line: 1661, column: 11, scope: !5006)
!5008 = !DILocation(line: 1665, column: 22, scope: !5006)
!5009 = !DILocation(line: 1666, column: 21, scope: !5006)
!5010 = !DILocation(line: 1668, column: 5, scope: !5006)
!5011 = !DILocation(line: 1677, column: 30, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !2595, line: 1676, column: 49)
!5013 = distinct !DILexicalBlock(scope: !4777, file: !2595, line: 1676, column: 8)
!5014 = !DILocation(line: 1677, column: 5, scope: !5012)
!5015 = !DILocation(line: 1680, column: 4, scope: !4777)
!5016 = !DILocation(line: 0, scope: !4958)
!5017 = !DILocation(line: 1597, column: 14, scope: !4779)
!5018 = !DILocation(line: 1699, column: 11, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1699, column: 7)
!5020 = !DILocation(line: 1699, column: 7, scope: !4710)
!5021 = !DILocation(line: 1725, column: 7, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1725, column: 7)
!5023 = !DILocation(line: 1725, column: 12, scope: !5022)
!5024 = !DILocation(line: 1747, column: 13, scope: !4789)
!5025 = !DILocation(line: 1747, column: 7, scope: !4710)
!5026 = !DILocation(line: 1722, column: 24, scope: !4710)
!5027 = !DILocation(line: 1725, column: 7, scope: !4710)
!5028 = !DILocation(line: 1729, column: 7, scope: !4710)
!5029 = !DILocation(line: 1736, column: 13, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4710, file: !2595, line: 1736, column: 7)
!5031 = !DILocation(line: 1735, column: 19, scope: !4710)
!5032 = !DILocation(line: 1736, column: 7, scope: !4710)
!5033 = !DILocation(line: 1748, column: 10, scope: !4788)
!5034 = !DILocation(line: 1750, column: 15, scope: !4787)
!5035 = !DILocation(line: 1750, column: 8, scope: !4788)
!5036 = !DILocation(line: 0, scope: !4786)
!5037 = !DILocation(line: 1756, column: 15, scope: !4795)
!5038 = !DILocation(line: 1756, column: 9, scope: !4786)
!5039 = !DILocation(line: 1758, column: 7, scope: !4791)
!5040 = !DILocation(line: 0, scope: !4791)
!5041 = !DILocation(line: 1758, column: 7, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4791, file: !2595, line: 1758, column: 7)
!5043 = !DILocation(line: 1764, column: 5, scope: !4786)
!5044 = !DILocation(line: 0, scope: !4788)
!5045 = !DILocation(line: 1764, column: 20, scope: !4786)
!5046 = !DILocation(line: 1764, column: 17, scope: !4786)
!5047 = !DILocation(line: 1765, column: 6, scope: !4797)
!5048 = !DILocation(line: 0, scope: !4797)
!5049 = !DILocation(line: 1765, column: 6, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !4797, file: !2595, line: 1765, column: 6)
!5051 = distinct !{!5051, !5043, !5052}
!5052 = !DILocation(line: 1766, column: 5, scope: !4786)
!5053 = !DILocation(line: 1773, column: 12, scope: !4802)
!5054 = !DILocation(line: 1773, column: 7, scope: !4710)
!5055 = !DILocation(line: 1773, column: 7, scope: !4802)
!5056 = !DILocation(line: 1774, column: 4, scope: !4800)
!5057 = !DILocation(line: 0, scope: !4800)
!5058 = !DILocation(line: 1774, column: 4, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !4800, file: !2595, line: 1774, column: 4)
!5060 = !DILocation(line: 1818, column: 8, scope: !4806)
!5061 = !DILocation(line: 1818, column: 27, scope: !4806)
!5062 = !DILocation(line: 1818, column: 25, scope: !4806)
!5063 = !DILocation(line: 1818, column: 8, scope: !4807)
!5064 = !DILocation(line: 1819, column: 5, scope: !4804)
!5065 = !DILocation(line: 0, scope: !4804)
!5066 = !DILocation(line: 1819, column: 5, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !4804, file: !2595, line: 1819, column: 5)
!5068 = !DILocation(line: 1822, column: 14, scope: !4812)
!5069 = !DILocation(line: 1822, column: 8, scope: !4807)
!5070 = !DILocation(line: 1823, column: 5, scope: !4810)
!5071 = !DILocation(line: 0, scope: !4810)
!5072 = !DILocation(line: 1823, column: 5, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4810, file: !2595, line: 1823, column: 5)
!5074 = !DILocation(line: 1826, column: 20, scope: !4807)
!5075 = !DILocation(line: 1827, column: 4, scope: !4807)
!5076 = !DILocation(line: 0, scope: !4807)
!5077 = !DILocation(line: 1827, column: 21, scope: !4807)
!5078 = !DILocation(line: 1827, column: 18, scope: !4807)
!5079 = !DILocation(line: 1828, column: 5, scope: !4814)
!5080 = !DILocation(line: 0, scope: !4814)
!5081 = !DILocation(line: 1828, column: 5, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !4814, file: !2595, line: 1828, column: 5)
!5083 = distinct !{!5083, !5075, !5084}
!5084 = !DILocation(line: 1829, column: 4, scope: !4807)
!5085 = !DILocation(line: 1831, column: 4, scope: !4817)
!5086 = !DILocation(line: 0, scope: !4817)
!5087 = !DILocation(line: 1831, column: 4, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !4817, file: !2595, line: 1831, column: 4)
!5089 = !DILocation(line: 1835, column: 16, scope: !4710)
!5090 = !DILocation(line: 1835, column: 3, scope: !4710)
!5091 = !DILocation(line: 1836, column: 4, scope: !4819)
!5092 = !DILocation(line: 0, scope: !4819)
!5093 = !DILocation(line: 1836, column: 4, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !4819, file: !2595, line: 1836, column: 4)
!5095 = !DILocation(line: 1837, column: 4, scope: !4820)
!5096 = distinct !{!5096, !5090, !5097}
!5097 = !DILocation(line: 1838, column: 3, scope: !4710)
!5098 = !DILocation(line: 1844, column: 1, scope: !4683)
!5099 = distinct !DISubprogram(name: "extract_conversion", scope: !2595, file: !2595, line: 642, type: !5100, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!279, !4756, !279}
!5102 = !{!5103, !5104}
!5103 = !DILocalVariable(name: "conv", arg: 1, scope: !5099, file: !2595, line: 642, type: !4756)
!5104 = !DILocalVariable(name: "sp", arg: 2, scope: !5099, file: !2595, line: 643, type: !279)
!5105 = !DILocation(line: 0, scope: !5099)
!5106 = !DILocation(line: 645, column: 10, scope: !5099)
!5107 = !DILocation(line: 653, column: 2, scope: !5099)
!5108 = !DILocation(line: 654, column: 6, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !2595, line: 654, column: 6)
!5110 = !DILocation(line: 654, column: 10, scope: !5109)
!5111 = !DILocation(line: 654, column: 6, scope: !5099)
!5112 = !DILocation(line: 655, column: 24, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !2595, line: 654, column: 18)
!5114 = !DILocation(line: 655, column: 19, scope: !5113)
!5115 = !DILocation(line: 656, column: 3, scope: !5113)
!5116 = !DILocation(line: 659, column: 7, scope: !5099)
!5117 = !DILocation(line: 660, column: 7, scope: !5099)
!5118 = !DILocation(line: 661, column: 7, scope: !5099)
!5119 = !DILocation(line: 662, column: 7, scope: !5099)
!5120 = !DILocation(line: 663, column: 7, scope: !5099)
!5121 = !DILocation(line: 665, column: 2, scope: !5099)
!5122 = !DILocation(line: 666, column: 1, scope: !5099)
!5123 = distinct !DISubprogram(name: "outs", scope: !2595, file: !2595, line: 1319, type: !5124, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5126)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!109, !3837, !107, !279, !279}
!5126 = !{!5127, !5128, !5129, !5130, !5131, !5132}
!5127 = !DILocalVariable(name: "out", arg: 1, scope: !5123, file: !2595, line: 1319, type: !3837)
!5128 = !DILocalVariable(name: "ctx", arg: 2, scope: !5123, file: !2595, line: 1320, type: !107)
!5129 = !DILocalVariable(name: "sp", arg: 3, scope: !5123, file: !2595, line: 1321, type: !279)
!5130 = !DILocalVariable(name: "ep", arg: 4, scope: !5123, file: !2595, line: 1322, type: !279)
!5131 = !DILocalVariable(name: "count", scope: !5123, file: !2595, line: 1324, type: !234)
!5132 = !DILocalVariable(name: "rc", scope: !5133, file: !2595, line: 1327, type: !109)
!5133 = distinct !DILexicalBlock(scope: !5123, file: !2595, line: 1326, column: 45)
!5134 = !DILocation(line: 0, scope: !5123)
!5135 = !DILocation(line: 1326, column: 2, scope: !5123)
!5136 = !DILocation(line: 1324, column: 9, scope: !5123)
!5137 = !DILocation(line: 1326, column: 13, scope: !5123)
!5138 = !DILocation(line: 1326, column: 19, scope: !5123)
!5139 = !DILocation(line: 1327, column: 21, scope: !5133)
!5140 = !DILocation(line: 1326, column: 36, scope: !5123)
!5141 = !DILocation(line: 1326, column: 39, scope: !5123)
!5142 = !DILocation(line: 1327, column: 24, scope: !5133)
!5143 = !DILocation(line: 1327, column: 16, scope: !5133)
!5144 = !DILocation(line: 1327, column: 12, scope: !5133)
!5145 = !DILocation(line: 0, scope: !5133)
!5146 = !DILocation(line: 1329, column: 10, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5133, file: !2595, line: 1329, column: 7)
!5148 = !DILocation(line: 1329, column: 7, scope: !5133)
!5149 = distinct !{!5149, !5135, !5150}
!5150 = !DILocation(line: 1333, column: 2, scope: !5123)
!5151 = !DILocation(line: 1336, column: 1, scope: !5123)
!5152 = distinct !DISubprogram(name: "encode_uint", scope: !2595, file: !2595, line: 788, type: !5153, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5155)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!285, !2617, !4756, !285, !279}
!5155 = !{!5156, !5157, !5158, !5159, !5160, !5161, !5163, !5164}
!5156 = !DILocalVariable(name: "value", arg: 1, scope: !5152, file: !2595, line: 788, type: !2617)
!5157 = !DILocalVariable(name: "conv", arg: 2, scope: !5152, file: !2595, line: 789, type: !4756)
!5158 = !DILocalVariable(name: "bps", arg: 3, scope: !5152, file: !2595, line: 790, type: !285)
!5159 = !DILocalVariable(name: "bpe", arg: 4, scope: !5152, file: !2595, line: 791, type: !279)
!5160 = !DILocalVariable(name: "upcase", scope: !5152, file: !2595, line: 793, type: !347)
!5161 = !DILocalVariable(name: "radix", scope: !5152, file: !2595, line: 794, type: !5162)
!5162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5163 = !DILocalVariable(name: "bp", scope: !5152, file: !2595, line: 795, type: !285)
!5164 = !DILocalVariable(name: "lsv", scope: !5165, file: !2595, line: 798, type: !32)
!5165 = distinct !DILexicalBlock(scope: !5152, file: !2595, line: 797, column: 5)
!5166 = !DILocation(line: 0, scope: !5152)
!5167 = !DILocation(line: 793, column: 35, scope: !5152)
!5168 = !DILocation(line: 793, column: 24, scope: !5152)
!5169 = !DILocation(line: 793, column: 16, scope: !5152)
!5170 = !DILocation(line: 794, column: 29, scope: !5152)
!5171 = !DILocation(line: 795, column: 24, scope: !5152)
!5172 = !DILocation(line: 795, column: 17, scope: !5152)
!5173 = !DILocation(line: 797, column: 2, scope: !5152)
!5174 = !DILocation(line: 802, column: 9, scope: !5165)
!5175 = !DILocation(line: 798, column: 22, scope: !5165)
!5176 = !DILocation(line: 0, scope: !5165)
!5177 = !DILocation(line: 800, column: 16, scope: !5165)
!5178 = !DILocation(line: 800, column: 11, scope: !5165)
!5179 = !DILocation(line: 800, column: 4, scope: !5165)
!5180 = !DILocation(line: 800, column: 9, scope: !5165)
!5181 = !DILocation(line: 803, column: 18, scope: !5152)
!5182 = !DILocation(line: 803, column: 24, scope: !5152)
!5183 = !DILocation(line: 803, column: 2, scope: !5165)
!5184 = distinct !{!5184, !5173, !5185}
!5185 = !DILocation(line: 803, column: 37, scope: !5152)
!5186 = !DILocation(line: 808, column: 12, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5152, file: !2595, line: 808, column: 6)
!5188 = !DILocation(line: 808, column: 6, scope: !5152)
!5189 = !DILocation(line: 809, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !2595, line: 808, column: 23)
!5191 = !DILocation(line: 813, column: 3, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !2595, line: 811, column: 27)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !2595, line: 811, column: 14)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !2595, line: 809, column: 7)
!5195 = !DILocation(line: 0, scope: !5194)
!5196 = !DILocation(line: 818, column: 2, scope: !5152)
!5197 = distinct !DISubprogram(name: "store_count", scope: !2595, file: !2595, line: 1280, type: !5198, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5202)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{null, !5200, !107, !109}
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5201, size: 32)
!5201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4723)
!5202 = !{!5203, !5204, !5205}
!5203 = !DILocalVariable(name: "conv", arg: 1, scope: !5197, file: !2595, line: 1280, type: !5200)
!5204 = !DILocalVariable(name: "dp", arg: 2, scope: !5197, file: !2595, line: 1281, type: !107)
!5205 = !DILocalVariable(name: "count", arg: 3, scope: !5197, file: !2595, line: 1282, type: !109)
!5206 = !DILocation(line: 0, scope: !5197)
!5207 = !DILocation(line: 1284, column: 38, scope: !5197)
!5208 = !DILocation(line: 1284, column: 2, scope: !5197)
!5209 = !DILocation(line: 1286, column: 4, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5197, file: !2595, line: 1284, column: 50)
!5211 = !DILocation(line: 1286, column: 14, scope: !5210)
!5212 = !DILocation(line: 1287, column: 3, scope: !5210)
!5213 = !DILocation(line: 1289, column: 24, scope: !5210)
!5214 = !DILocation(line: 1289, column: 22, scope: !5210)
!5215 = !DILocation(line: 1290, column: 3, scope: !5210)
!5216 = !DILocation(line: 1292, column: 18, scope: !5210)
!5217 = !DILocation(line: 1292, column: 4, scope: !5210)
!5218 = !DILocation(line: 1292, column: 16, scope: !5210)
!5219 = !DILocation(line: 1293, column: 3, scope: !5210)
!5220 = !DILocation(line: 1295, column: 4, scope: !5210)
!5221 = !DILocation(line: 1295, column: 15, scope: !5210)
!5222 = !DILocation(line: 1296, column: 3, scope: !5210)
!5223 = !DILocation(line: 1298, column: 22, scope: !5210)
!5224 = !DILocation(line: 1298, column: 4, scope: !5210)
!5225 = !DILocation(line: 1298, column: 20, scope: !5210)
!5226 = !DILocation(line: 1299, column: 3, scope: !5210)
!5227 = !DILocation(line: 1301, column: 21, scope: !5210)
!5228 = !DILocation(line: 1301, column: 4, scope: !5210)
!5229 = !DILocation(line: 1301, column: 19, scope: !5210)
!5230 = !DILocation(line: 1302, column: 3, scope: !5210)
!5231 = !DILocation(line: 1304, column: 4, scope: !5210)
!5232 = !DILocation(line: 1304, column: 17, scope: !5210)
!5233 = !DILocation(line: 1305, column: 3, scope: !5210)
!5234 = !DILocation(line: 1307, column: 4, scope: !5210)
!5235 = !DILocation(line: 1307, column: 20, scope: !5210)
!5236 = !DILocation(line: 1308, column: 3, scope: !5210)
!5237 = !DILocation(line: 1316, column: 1, scope: !5197)
!5238 = distinct !DISubprogram(name: "isupper", scope: !5239, file: !5239, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5240)
!5239 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5240 = !{!5241}
!5241 = !DILocalVariable(name: "a", arg: 1, scope: !5238, file: !5239, line: 16, type: !109)
!5242 = !DILocation(line: 0, scope: !5238)
!5243 = !DILocation(line: 18, column: 29, scope: !5238)
!5244 = !DILocation(line: 18, column: 45, scope: !5238)
!5245 = !DILocation(line: 18, column: 2, scope: !5238)
!5246 = distinct !DISubprogram(name: "conversion_radix", scope: !2595, file: !2595, line: 761, type: !5247, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5249)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!234, !150}
!5249 = !{!5250}
!5250 = !DILocalVariable(name: "specifier", arg: 1, scope: !5246, file: !2595, line: 761, type: !150)
!5251 = !DILocation(line: 0, scope: !5246)
!5252 = !DILocation(line: 763, column: 2, scope: !5246)
!5253 = !DILocation(line: 770, column: 3, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5246, file: !2595, line: 763, column: 21)
!5255 = !DILocation(line: 774, column: 3, scope: !5254)
!5256 = !DILocation(line: 0, scope: !5254)
!5257 = !DILocation(line: 776, column: 1, scope: !5246)
!5258 = distinct !DISubprogram(name: "extract_flags", scope: !2595, file: !2595, line: 339, type: !5100, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5259)
!5259 = !{!5260, !5261, !5262}
!5260 = !DILocalVariable(name: "conv", arg: 1, scope: !5258, file: !2595, line: 339, type: !4756)
!5261 = !DILocalVariable(name: "sp", arg: 2, scope: !5258, file: !2595, line: 340, type: !279)
!5262 = !DILocalVariable(name: "loop", scope: !5258, file: !2595, line: 342, type: !347)
!5263 = !DILocation(line: 0, scope: !5258)
!5264 = !DILocation(line: 344, column: 2, scope: !5258)
!5265 = !DILocation(line: 345, column: 11, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5258, file: !2595, line: 344, column: 5)
!5267 = !DILocation(line: 345, column: 3, scope: !5266)
!5268 = !DILocation(line: 351, column: 4, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5266, file: !2595, line: 345, column: 16)
!5270 = !DILocation(line: 354, column: 4, scope: !5269)
!5271 = !DILocation(line: 357, column: 4, scope: !5269)
!5272 = !DILocation(line: 360, column: 4, scope: !5269)
!5273 = !DILocation(line: 0, scope: !5269)
!5274 = !DILocation(line: 370, column: 12, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5258, file: !2595, line: 370, column: 6)
!5276 = !DILocation(line: 370, column: 22, scope: !5275)
!5277 = !DILocation(line: 371, column: 19, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5275, file: !2595, line: 370, column: 42)
!5279 = !DILocation(line: 372, column: 2, scope: !5278)
!5280 = !DILocation(line: 376, column: 2, scope: !5258)
!5281 = distinct !DISubprogram(name: "extract_width", scope: !2595, file: !2595, line: 388, type: !5100, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5282)
!5282 = !{!5283, !5284, !5285, !5286}
!5283 = !DILocalVariable(name: "conv", arg: 1, scope: !5281, file: !2595, line: 388, type: !4756)
!5284 = !DILocalVariable(name: "sp", arg: 2, scope: !5281, file: !2595, line: 389, type: !279)
!5285 = !DILocalVariable(name: "wp", scope: !5281, file: !2595, line: 398, type: !279)
!5286 = !DILocalVariable(name: "width", scope: !5281, file: !2595, line: 399, type: !234)
!5287 = !DILocation(line: 0, scope: !5281)
!5288 = !DILocation(line: 391, column: 8, scope: !5281)
!5289 = !DILocation(line: 391, column: 22, scope: !5281)
!5290 = !DILocation(line: 393, column: 6, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5281, file: !2595, line: 393, column: 6)
!5292 = !DILocation(line: 393, column: 10, scope: !5291)
!5293 = !DILocation(line: 393, column: 6, scope: !5281)
!5294 = !DILocation(line: 394, column: 20, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5291, file: !2595, line: 393, column: 18)
!5296 = !DILocation(line: 395, column: 10, scope: !5295)
!5297 = !DILocation(line: 395, column: 3, scope: !5295)
!5298 = !DILocation(line: 399, column: 17, scope: !5281)
!5299 = !DILocation(line: 401, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5281, file: !2595, line: 401, column: 6)
!5301 = !DILocation(line: 401, column: 9, scope: !5300)
!5302 = !DILocation(line: 401, column: 6, scope: !5281)
!5303 = !DILocation(line: 402, column: 23, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !2595, line: 401, column: 16)
!5305 = !DILocation(line: 403, column: 9, scope: !5304)
!5306 = !DILocation(line: 403, column: 21, scope: !5304)
!5307 = !DILocation(line: 405, column: 11, scope: !5304)
!5308 = !DILocation(line: 404, column: 21, scope: !5304)
!5309 = !DILocation(line: 406, column: 2, scope: !5304)
!5310 = !DILocation(line: 409, column: 1, scope: !5281)
!5311 = distinct !DISubprogram(name: "extract_prec", scope: !2595, file: !2595, line: 420, type: !5100, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5312)
!5312 = !{!5313, !5314, !5315}
!5313 = !DILocalVariable(name: "conv", arg: 1, scope: !5311, file: !2595, line: 420, type: !4756)
!5314 = !DILocalVariable(name: "sp", arg: 2, scope: !5311, file: !2595, line: 421, type: !279)
!5315 = !DILocalVariable(name: "prec", scope: !5311, file: !2595, line: 435, type: !234)
!5316 = !DILocation(line: 0, scope: !5311)
!5317 = !DILocation(line: 423, column: 24, scope: !5311)
!5318 = !DILocation(line: 423, column: 28, scope: !5311)
!5319 = !DILocation(line: 423, column: 8, scope: !5311)
!5320 = !DILocation(line: 423, column: 21, scope: !5311)
!5321 = !DILocation(line: 425, column: 6, scope: !5311)
!5322 = !DILocation(line: 428, column: 2, scope: !5311)
!5323 = !DILocation(line: 430, column: 6, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5311, file: !2595, line: 430, column: 6)
!5325 = !DILocation(line: 430, column: 10, scope: !5324)
!5326 = !DILocation(line: 430, column: 6, scope: !5311)
!5327 = !DILocation(line: 431, column: 19, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !2595, line: 430, column: 18)
!5329 = !DILocation(line: 432, column: 10, scope: !5328)
!5330 = !DILocation(line: 432, column: 3, scope: !5328)
!5331 = !DILocation(line: 435, column: 16, scope: !5311)
!5332 = !DILocation(line: 437, column: 8, scope: !5311)
!5333 = !DILocation(line: 437, column: 19, scope: !5311)
!5334 = !DILocation(line: 439, column: 10, scope: !5311)
!5335 = !DILocation(line: 438, column: 20, scope: !5311)
!5336 = !DILocation(line: 441, column: 9, scope: !5311)
!5337 = !DILocation(line: 442, column: 1, scope: !5311)
!5338 = distinct !DISubprogram(name: "extract_length", scope: !2595, file: !2595, line: 453, type: !5100, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5339)
!5339 = !{!5340, !5341}
!5340 = !DILocalVariable(name: "conv", arg: 1, scope: !5338, file: !2595, line: 453, type: !4756)
!5341 = !DILocalVariable(name: "sp", arg: 2, scope: !5338, file: !2595, line: 454, type: !279)
!5342 = !DILocation(line: 0, scope: !5338)
!5343 = !DILocation(line: 456, column: 10, scope: !5338)
!5344 = !DILocation(line: 456, column: 2, scope: !5338)
!5345 = !DILocation(line: 458, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !2595, line: 458, column: 7)
!5347 = distinct !DILexicalBlock(scope: !5338, file: !2595, line: 456, column: 15)
!5348 = !DILocation(line: 458, column: 7, scope: !5346)
!5349 = !DILocation(line: 458, column: 13, scope: !5346)
!5350 = !DILocation(line: 0, scope: !5346)
!5351 = !DILocation(line: 458, column: 7, scope: !5347)
!5352 = !DILocation(line: 459, column: 21, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5346, file: !2595, line: 458, column: 21)
!5354 = !DILocation(line: 460, column: 4, scope: !5353)
!5355 = !DILocation(line: 461, column: 3, scope: !5353)
!5356 = !DILocation(line: 462, column: 21, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5346, file: !2595, line: 461, column: 10)
!5358 = !DILocation(line: 466, column: 8, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5347, file: !2595, line: 466, column: 7)
!5360 = !DILocation(line: 466, column: 7, scope: !5359)
!5361 = !DILocation(line: 466, column: 13, scope: !5359)
!5362 = !DILocation(line: 0, scope: !5359)
!5363 = !DILocation(line: 466, column: 7, scope: !5347)
!5364 = !DILocation(line: 467, column: 21, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5359, file: !2595, line: 466, column: 21)
!5366 = !DILocation(line: 468, column: 4, scope: !5365)
!5367 = !DILocation(line: 469, column: 3, scope: !5365)
!5368 = !DILocation(line: 470, column: 21, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5359, file: !2595, line: 469, column: 10)
!5370 = !DILocation(line: 474, column: 9, scope: !5347)
!5371 = !DILocation(line: 474, column: 20, scope: !5347)
!5372 = !DILocation(line: 475, column: 3, scope: !5347)
!5373 = !DILocation(line: 476, column: 3, scope: !5347)
!5374 = !DILocation(line: 478, column: 9, scope: !5347)
!5375 = !DILocation(line: 478, column: 20, scope: !5347)
!5376 = !DILocation(line: 479, column: 3, scope: !5347)
!5377 = !DILocation(line: 480, column: 3, scope: !5347)
!5378 = !DILocation(line: 482, column: 9, scope: !5347)
!5379 = !DILocation(line: 482, column: 20, scope: !5347)
!5380 = !DILocation(line: 483, column: 3, scope: !5347)
!5381 = !DILocation(line: 484, column: 3, scope: !5347)
!5382 = !DILocation(line: 486, column: 9, scope: !5347)
!5383 = !DILocation(line: 486, column: 20, scope: !5347)
!5384 = !DILocation(line: 487, column: 3, scope: !5347)
!5385 = !DILocation(line: 492, column: 21, scope: !5347)
!5386 = !DILocation(line: 493, column: 3, scope: !5347)
!5387 = !DILocation(line: 495, column: 9, scope: !5347)
!5388 = !DILocation(line: 495, column: 20, scope: !5347)
!5389 = !DILocation(line: 496, column: 3, scope: !5347)
!5390 = !DILocation(line: 498, column: 2, scope: !5338)
!5391 = distinct !DISubprogram(name: "extract_specifier", scope: !2595, file: !2595, line: 513, type: !5100, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5392)
!5392 = !{!5393, !5394, !5395, !5396}
!5393 = !DILocalVariable(name: "conv", arg: 1, scope: !5391, file: !2595, line: 513, type: !4756)
!5394 = !DILocalVariable(name: "sp", arg: 2, scope: !5391, file: !2595, line: 514, type: !279)
!5395 = !DILocalVariable(name: "unsupported", scope: !5391, file: !2595, line: 516, type: !347)
!5396 = !DILabel(scope: !5397, name: "int_conv", file: !2595, line: 526)
!5397 = distinct !DILexicalBlock(scope: !5391, file: !2595, line: 520, column: 27)
!5398 = !DILocation(line: 0, scope: !5391)
!5399 = !DILocation(line: 518, column: 20, scope: !5391)
!5400 = !DILocation(line: 518, column: 8, scope: !5391)
!5401 = !DILocation(line: 518, column: 18, scope: !5391)
!5402 = !DILocation(line: 520, column: 2, scope: !5391)
!5403 = !DILocation(line: 525, column: 3, scope: !5397)
!5404 = !DILocation(line: 0, scope: !5397)
!5405 = !DILocation(line: 526, column: 1, scope: !5397)
!5406 = !DILocation(line: 528, column: 24, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5397, file: !2595, line: 528, column: 7)
!5408 = !DILocation(line: 528, column: 7, scope: !5397)
!5409 = !DILocation(line: 535, column: 23, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5397, file: !2595, line: 535, column: 7)
!5411 = !DILocation(line: 535, column: 7, scope: !5397)
!5412 = !DILocation(line: 536, column: 36, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5410, file: !2595, line: 535, column: 31)
!5414 = !DILocation(line: 537, column: 3, scope: !5413)
!5415 = !DILocation(line: 570, column: 9, scope: !5397)
!5416 = !DILocation(line: 570, column: 23, scope: !5397)
!5417 = !DILocation(line: 575, column: 4, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !2595, line: 573, column: 48)
!5419 = distinct !DILexicalBlock(scope: !5397, file: !2595, line: 573, column: 7)
!5420 = !DILocation(line: 603, column: 9, scope: !5397)
!5421 = !DILocation(line: 603, column: 23, scope: !5397)
!5422 = !DILocation(line: 605, column: 24, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5397, file: !2595, line: 605, column: 7)
!5424 = !DILocation(line: 605, column: 7, scope: !5397)
!5425 = !DILocation(line: 612, column: 9, scope: !5397)
!5426 = !DILocation(line: 612, column: 23, scope: !5397)
!5427 = !DILocation(line: 619, column: 24, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5397, file: !2595, line: 619, column: 7)
!5429 = !DILocation(line: 619, column: 7, scope: !5397)
!5430 = !DILocation(line: 625, column: 9, scope: !5397)
!5431 = !DILocation(line: 625, column: 17, scope: !5397)
!5432 = !DILocation(line: 626, column: 3, scope: !5397)
!5433 = !DILocation(line: 629, column: 20, scope: !5391)
!5434 = !DILocation(line: 629, column: 8, scope: !5391)
!5435 = !DILocation(line: 518, column: 23, scope: !5391)
!5436 = !DILocation(line: 631, column: 2, scope: !5391)
!5437 = distinct !DISubprogram(name: "extract_decimal", scope: !2595, file: !2595, line: 318, type: !5438, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5440)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!234, !278}
!5440 = !{!5441, !5442, !5443}
!5441 = !DILocalVariable(name: "str", arg: 1, scope: !5437, file: !2595, line: 318, type: !278)
!5442 = !DILocalVariable(name: "sp", scope: !5437, file: !2595, line: 320, type: !279)
!5443 = !DILocalVariable(name: "val", scope: !5437, file: !2595, line: 321, type: !234)
!5444 = !DILocation(line: 0, scope: !5437)
!5445 = !DILocation(line: 320, column: 19, scope: !5437)
!5446 = !DILocation(line: 323, column: 37, scope: !5437)
!5447 = !DILocation(line: 323, column: 17, scope: !5437)
!5448 = !DILocation(line: 323, column: 9, scope: !5437)
!5449 = !DILocation(line: 323, column: 2, scope: !5437)
!5450 = !DILocation(line: 324, column: 13, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5437, file: !2595, line: 323, column: 43)
!5452 = !DILocation(line: 324, column: 24, scope: !5451)
!5453 = !DILocation(line: 324, column: 19, scope: !5451)
!5454 = !DILocation(line: 324, column: 27, scope: !5451)
!5455 = distinct !{!5455, !5449, !5456}
!5456 = !DILocation(line: 325, column: 2, scope: !5437)
!5457 = !DILocation(line: 326, column: 7, scope: !5437)
!5458 = !DILocation(line: 327, column: 2, scope: !5437)
!5459 = distinct !DISubprogram(name: "isdigit", scope: !5239, file: !5239, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !5460)
!5460 = !{!5461}
!5461 = !DILocalVariable(name: "a", arg: 1, scope: !5459, file: !5239, line: 43, type: !109)
!5462 = !DILocation(line: 0, scope: !5459)
!5463 = !DILocation(line: 45, column: 29, scope: !5459)
!5464 = !DILocation(line: 45, column: 45, scope: !5459)
!5465 = !DILocation(line: 45, column: 2, scope: !5459)
!5466 = distinct !DISubprogram(name: "assert_post_action", scope: !5467, file: !5467, line: 26, type: !5468, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !5470)
!5467 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5468 = !DISubroutineType(types: !5469)
!5469 = !{null, !279, !32}
!5470 = !{!5471, !5472}
!5471 = !DILocalVariable(name: "file", arg: 1, scope: !5466, file: !5467, line: 26, type: !279)
!5472 = !DILocalVariable(name: "line", arg: 2, scope: !5466, file: !5467, line: 26, type: !32)
!5473 = !DILocation(line: 0, scope: !5466)
!5474 = !DILocation(line: 43, column: 2, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5466, file: !5467, line: 43, column: 2)
!5476 = !{i64 2155071583, i64 2155071599, i64 2155071625, i64 2155071653, i64 2155071673}
!5477 = !DILocation(line: 44, column: 1, scope: !5466)
!5478 = distinct !DISubprogram(name: "assert_print", scope: !5467, file: !5467, line: 46, type: !4449, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !5479)
!5479 = !{!5480, !5481}
!5480 = !DILocalVariable(name: "fmt", arg: 1, scope: !5478, file: !5467, line: 46, type: !279)
!5481 = !DILocalVariable(name: "ap", scope: !5478, file: !5467, line: 48, type: !5482)
!5482 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3455, line: 99, baseType: !5483)
!5483 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3455, line: 40, baseType: !5484)
!5484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5467, baseType: !5485)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5486)
!5486 = !{!5487}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5485, file: !5467, line: 48, baseType: !107, size: 32)
!5488 = !DILocation(line: 0, scope: !5478)
!5489 = !DILocation(line: 48, column: 2, scope: !5478)
!5490 = !DILocation(line: 48, column: 10, scope: !5478)
!5491 = !DILocation(line: 50, column: 2, scope: !5478)
!5492 = !DILocation(line: 52, column: 2, scope: !5478)
!5493 = !DILocation(line: 54, column: 2, scope: !5478)
!5494 = !DILocation(line: 55, column: 1, scope: !5478)
!5495 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5496, file: !5496, line: 9, type: !3153, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !2104)
!5496 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!5497 = !DILocation(line: 11, column: 1, scope: !5495)
!5498 = !{i64 2147565733, i64 2147565776, i64 2147565816}
!5499 = !DILocation(line: 12, column: 1, scope: !5495)
!5500 = !{i64 2147569960, i64 2147570003, i64 2147570043}
!5501 = !DILocation(line: 13, column: 1, scope: !5495)
!5502 = !{i64 2147570169, i64 2147570212, i64 2147570252}
!5503 = !DILocation(line: 14, column: 1, scope: !5495)
!5504 = !{i64 2147570338, i64 2147570381, i64 2147570421}
!5505 = !DILocation(line: 15, column: 1, scope: !5495)
!5506 = !{i64 2147570501, i64 2147570544, i64 2147570584}
!5507 = !DILocation(line: 16, column: 1, scope: !5495)
!5508 = !{i64 2147570685, i64 2147570728, i64 2147570768}
!5509 = !DILocation(line: 17, column: 1, scope: !5495)
!5510 = !{i64 2147570864, i64 2147570907, i64 2147570947}
!5511 = !DILocation(line: 18, column: 1, scope: !5495)
!5512 = !{i64 2147571106, i64 2147571149, i64 2147571189}
!5513 = !DILocation(line: 19, column: 1, scope: !5495)
!5514 = !{i64 2147571341, i64 2147571384, i64 2147571424}
!5515 = !DILocation(line: 20, column: 1, scope: !5495)
!5516 = !{i64 2147571527, i64 2147571570, i64 2147571610}
!5517 = !DILocation(line: 21, column: 1, scope: !5495)
!5518 = !{i64 2147571743, i64 2147571786, i64 2147571826}
!5519 = !DILocation(line: 22, column: 1, scope: !5495)
!5520 = !{i64 2147571946, i64 2147571989, i64 2147572029}
!5521 = !DILocation(line: 23, column: 1, scope: !5495)
!5522 = !{i64 2147572149, i64 2147572192, i64 2147572232}
!5523 = !DILocation(line: 24, column: 1, scope: !5495)
!5524 = !{i64 2147572324, i64 2147572367, i64 2147572407}
!5525 = !DILocation(line: 25, column: 1, scope: !5495)
!5526 = !{i64 2147572532, i64 2147572575, i64 2147572615}
!5527 = !DILocation(line: 26, column: 1, scope: !5495)
!5528 = !{i64 2147572736, i64 2147572779, i64 2147572819}
!5529 = !DILocation(line: 27, column: 1, scope: !5495)
!5530 = !{i64 2147572929, i64 2147572972, i64 2147573012}
!5531 = !DILocation(line: 28, column: 1, scope: !5495)
!5532 = !{i64 2147573131, i64 2147573174, i64 2147573214}
!5533 = !DILocation(line: 29, column: 1, scope: !5495)
!5534 = !{i64 2147573330, i64 2147573373, i64 2147573413}
!5535 = !DILocation(line: 30, column: 1, scope: !5495)
!5536 = !{i64 2147573557, i64 2147573600, i64 2147573640}
!5537 = !DILocation(line: 31, column: 1, scope: !5495)
!5538 = !{i64 2147573759, i64 2147573802, i64 2147573842}
!5539 = !DILocation(line: 32, column: 1, scope: !5495)
!5540 = !{i64 2147573974, i64 2147574017, i64 2147574057}
!5541 = !DILocation(line: 33, column: 1, scope: !5495)
!5542 = !{i64 2147574191, i64 2147574234, i64 2147574274}
!5543 = !DILocation(line: 34, column: 1, scope: !5495)
!5544 = !{i64 2147574363, i64 2147574406, i64 2147574446}
!5545 = !DILocation(line: 35, column: 1, scope: !5495)
!5546 = !{i64 2147574565, i64 2147574608, i64 2147574648}
!5547 = !DILocation(line: 36, column: 1, scope: !5495)
!5548 = !{i64 2147574791, i64 2147574834, i64 2147574874}
!5549 = !DILocation(line: 37, column: 1, scope: !5495)
!5550 = !{i64 2147574990, i64 2147575033, i64 2147575073}
!5551 = !DILocation(line: 38, column: 1, scope: !5495)
!5552 = !{i64 2147575165, i64 2147575208, i64 2147575248}
!5553 = !DILocation(line: 39, column: 1, scope: !5495)
!5554 = !{i64 2147575418, i64 2147575461, i64 2147575501}
!5555 = !DILocation(line: 40, column: 1, scope: !5495)
!5556 = !{i64 2147575659, i64 2147575702, i64 2147575742}
!5557 = !DILocation(line: 41, column: 1, scope: !5495)
!5558 = !{i64 2147575894, i64 2147575937, i64 2147575977}
!5559 = !DILocation(line: 42, column: 1, scope: !5495)
!5560 = !{i64 2147576126, i64 2147576169, i64 2147576209}
!5561 = !DILocation(line: 43, column: 1, scope: !5495)
!5562 = !{i64 2147576352, i64 2147576395, i64 2147576435}
!5563 = !DILocation(line: 44, column: 1, scope: !5495)
!5564 = !{i64 2147576578, i64 2147576621, i64 2147576661}
!5565 = !DILocation(line: 45, column: 1, scope: !5495)
!5566 = !{i64 2147576804, i64 2147576847, i64 2147576887}
!5567 = !DILocation(line: 46, column: 1, scope: !5495)
!5568 = !{i64 2147577039, i64 2147577082, i64 2147577122}
!5569 = !DILocation(line: 47, column: 1, scope: !5495)
!5570 = !{i64 2147577283, i64 2147577326, i64 2147577366}
!5571 = !DILocation(line: 48, column: 1, scope: !5495)
!5572 = !{i64 2147577530, i64 2147577573, i64 2147577613}
!5573 = !DILocation(line: 49, column: 1, scope: !5495)
!5574 = !{i64 2147577762, i64 2147577805, i64 2147577845}
!5575 = !DILocation(line: 50, column: 1, scope: !5495)
!5576 = !{i64 2147578006, i64 2147578049, i64 2147578089}
!5577 = !DILocation(line: 51, column: 1, scope: !5495)
!5578 = !{i64 2147578244, i64 2147578287, i64 2147578327}
!5579 = !DILocation(line: 52, column: 1, scope: !5495)
!5580 = !{i64 2147578518, i64 2147578561, i64 2147578601}
!5581 = !DILocation(line: 53, column: 1, scope: !5495)
!5582 = !{i64 2147582817, i64 2147582860, i64 2147582900}
!5583 = !DILocation(line: 54, column: 1, scope: !5495)
!5584 = !{i64 2147583070, i64 2147583113, i64 2147583153}
!5585 = !DILocation(line: 55, column: 1, scope: !5495)
!5586 = !{i64 2147583314, i64 2147583357, i64 2147583397}
!5587 = !DILocation(line: 56, column: 1, scope: !5495)
!5588 = !{i64 2147583549, i64 2147583592, i64 2147583632}
!5589 = !DILocation(line: 57, column: 1, scope: !5495)
!5590 = !{i64 2147583799, i64 2147583842, i64 2147583882}
!5591 = !DILocation(line: 58, column: 1, scope: !5495)
!5592 = !{i64 2147584046, i64 2147584089, i64 2147584129}
!5593 = !DILocation(line: 59, column: 1, scope: !5495)
!5594 = !{i64 2147584281, i64 2147584324, i64 2147584364}
!5595 = !DILocation(line: 60, column: 1, scope: !5495)
!5596 = !{i64 2147584516, i64 2147584559, i64 2147584599}
!5597 = !DILocation(line: 61, column: 1, scope: !5495)
!5598 = !{i64 2147584751, i64 2147584794, i64 2147584834}
!5599 = !DILocation(line: 62, column: 1, scope: !5495)
!5600 = !{i64 2147584986, i64 2147585029, i64 2147585069}
!5601 = !DILocation(line: 63, column: 1, scope: !5495)
!5602 = !{i64 2147585230, i64 2147585273, i64 2147585313}
!5603 = !DILocation(line: 64, column: 1, scope: !5495)
!5604 = !{i64 2147585468, i64 2147585511, i64 2147585551}
!5605 = !DILocation(line: 65, column: 1, scope: !5495)
!5606 = !{i64 2147585709, i64 2147585752, i64 2147585792}
!5607 = !DILocation(line: 66, column: 1, scope: !5495)
!5608 = !{i64 2147585989, i64 2147586032, i64 2147586072}
!5609 = !DILocation(line: 67, column: 1, scope: !5495)
!5610 = !{i64 2147586248, i64 2147586291, i64 2147586331}
!5611 = !DILocation(line: 68, column: 1, scope: !5495)
!5612 = !{i64 2147586486, i64 2147586529, i64 2147586569}
!5613 = !DILocation(line: 69, column: 1, scope: !5495)
!5614 = !{i64 2147586715, i64 2147586758, i64 2147586798}
!5615 = !DILocation(line: 70, column: 1, scope: !5495)
!5616 = !{i64 2147586923, i64 2147586966, i64 2147587006}
!5617 = !DILocation(line: 71, column: 1, scope: !5495)
!5618 = !{i64 2147587134, i64 2147587177, i64 2147587217}
!5619 = !DILocation(line: 72, column: 1, scope: !5495)
!5620 = !{i64 2147587369, i64 2147587412, i64 2147587452}
!5621 = !DILocation(line: 73, column: 1, scope: !5495)
!5622 = !{i64 2147587598, i64 2147587641, i64 2147587681}
!5623 = !DILocation(line: 74, column: 1, scope: !5495)
!5624 = !{i64 2147587815, i64 2147587858, i64 2147587898}
!5625 = !DILocation(line: 75, column: 1, scope: !5495)
!5626 = !{i64 2147588044, i64 2147588087, i64 2147588127}
!5627 = !DILocation(line: 76, column: 1, scope: !5495)
!5628 = !{i64 2147588282, i64 2147588325, i64 2147588365}
!5629 = !DILocation(line: 77, column: 1, scope: !5495)
!5630 = !{i64 2147588514, i64 2147588557, i64 2147588597}
!5631 = !DILocation(line: 78, column: 1, scope: !5495)
!5632 = !{i64 2147588740, i64 2147588783, i64 2147588823}
!5633 = !DILocation(line: 79, column: 1, scope: !5495)
!5634 = !{i64 2147588957, i64 2147589000, i64 2147589040}
!5635 = !DILocation(line: 80, column: 1, scope: !5495)
!5636 = !{i64 2147589189, i64 2147589232, i64 2147589272}
!5637 = !DILocation(line: 81, column: 1, scope: !5495)
!5638 = !{i64 2147589415, i64 2147589458, i64 2147589498}
!5639 = !DILocation(line: 82, column: 1, scope: !5495)
!5640 = !{i64 2147589629, i64 2147589672, i64 2147589712}
!5641 = !DILocation(line: 83, column: 1, scope: !5495)
!5642 = !{i64 2147589849, i64 2147589892, i64 2147589932}
!5643 = !DILocation(line: 84, column: 1, scope: !5495)
!5644 = !{i64 2147590081, i64 2147590124, i64 2147590164}
!5645 = !DILocation(line: 85, column: 1, scope: !5495)
!5646 = !{i64 2147590289, i64 2147590332, i64 2147590372}
!5647 = !DILocation(line: 86, column: 1, scope: !5495)
!5648 = !{i64 2147590494, i64 2147590537, i64 2147590577}
!5649 = !DILocation(line: 87, column: 1, scope: !5495)
!5650 = !{i64 2147590711, i64 2147590754, i64 2147590794}
!5651 = !DILocation(line: 88, column: 1, scope: !5495)
!5652 = !{i64 2147594986, i64 2147595029, i64 2147595069}
!5653 = !DILocation(line: 89, column: 1, scope: !5495)
!5654 = !{i64 2147595212, i64 2147595255, i64 2147595295}
!5655 = !DILocation(line: 90, column: 1, scope: !5495)
!5656 = !{i64 2147595432, i64 2147595475, i64 2147595515}
!5657 = !DILocation(line: 91, column: 1, scope: !5495)
!5658 = !{i64 2147595637, i64 2147595680, i64 2147595720}
!5659 = !DILocation(line: 92, column: 1, scope: !5495)
!5660 = !{i64 2147595869, i64 2147595912, i64 2147595952}
!5661 = !DILocation(line: 93, column: 1, scope: !5495)
!5662 = !{i64 2147596104, i64 2147596147, i64 2147596187}
!5663 = !DILocation(line: 94, column: 1, scope: !5495)
!5664 = !{i64 2147596354, i64 2147596397, i64 2147596437}
!5665 = !DILocation(line: 95, column: 1, scope: !5495)
!5666 = !{i64 2147596604, i64 2147596647, i64 2147596687}
!5667 = !DILocation(line: 96, column: 1, scope: !5495)
!5668 = !{i64 2147596842, i64 2147596885, i64 2147596925}
!5669 = !DILocation(line: 97, column: 1, scope: !5495)
!5670 = !{i64 2147597053, i64 2147597096, i64 2147597136}
!5671 = !DILocation(line: 98, column: 1, scope: !5495)
!5672 = !{i64 2147597270, i64 2147597313, i64 2147597353}
!5673 = !DILocation(line: 99, column: 1, scope: !5495)
!5674 = !{i64 2147597466, i64 2147597509, i64 2147597549}
!5675 = !DILocation(line: 100, column: 1, scope: !5495)
!5676 = !{i64 2147597668, i64 2147597711, i64 2147597751}
!5677 = !DILocation(line: 101, column: 1, scope: !5495)
!5678 = !{i64 2147597861, i64 2147597904, i64 2147597944}
!5679 = !DILocation(line: 102, column: 1, scope: !5495)
!5680 = !{i64 2147598069, i64 2147598112, i64 2147598152}
!5681 = !DILocation(line: 103, column: 1, scope: !5495)
!5682 = !{i64 2147598265, i64 2147598308, i64 2147598348}
!5683 = !DILocation(line: 104, column: 1, scope: !5495)
!5684 = !{i64 2147598497, i64 2147598540, i64 2147598580}
!5685 = !DILocation(line: 105, column: 1, scope: !5495)
!5686 = !{i64 2147598708, i64 2147598751, i64 2147598791}
!5687 = !DILocation(line: 106, column: 1, scope: !5495)
!5688 = !{i64 2147598907, i64 2147598950, i64 2147598990}
!5689 = !DILocation(line: 107, column: 1, scope: !5495)
!5690 = !{i64 2147599082, i64 2147599125, i64 2147599165}
!5691 = !DILocation(line: 108, column: 1, scope: !5495)
!5692 = !{i64 2147599266, i64 2147599309, i64 2147599349}
!5693 = !DILocation(line: 109, column: 1, scope: !5495)
!5694 = !{i64 2147599468, i64 2147599511, i64 2147599551}
!5695 = !DILocation(line: 110, column: 1, scope: !5495)
!5696 = !{i64 2147599667, i64 2147599710, i64 2147599750}
!5697 = !DILocation(line: 111, column: 1, scope: !5495)
!5698 = !{i64 2147599872, i64 2147599915, i64 2147599955}
!5699 = !DILocation(line: 112, column: 1, scope: !5495)
!5700 = !{i64 2147600065, i64 2147600108, i64 2147600148}
!5701 = !DILocation(line: 113, column: 1, scope: !5495)
!5702 = !{i64 2147600231, i64 2147600274, i64 2147600314}
!5703 = !DILocation(line: 114, column: 1, scope: !5495)
!5704 = !{i64 2147600415, i64 2147600458, i64 2147600498}
!5705 = !DILocation(line: 115, column: 1, scope: !5495)
!5706 = !{i64 2147600605, i64 2147600648, i64 2147600688}
!5707 = !DILocation(line: 116, column: 1, scope: !5495)
!5708 = !{i64 2147600789, i64 2147600832, i64 2147600872}
!5709 = !DILocation(line: 117, column: 1, scope: !5495)
!5710 = !{i64 2147601003, i64 2147601046, i64 2147601086}
!5711 = !DILocation(line: 118, column: 1, scope: !5495)
!5712 = !{i64 2147601214, i64 2147601257, i64 2147601297}
!5713 = !DILocation(line: 119, column: 1, scope: !5495)
!5714 = !{i64 2147601437, i64 2147601480, i64 2147601520}
!5715 = !DILocation(line: 120, column: 1, scope: !5495)
!5716 = !{i64 2147601621, i64 2147601664, i64 2147601704}
!5717 = !DILocation(line: 121, column: 1, scope: !5495)
!5718 = !{i64 2147601835, i64 2147601878, i64 2147601918}
!5719 = !DILocation(line: 122, column: 1, scope: !5495)
!5720 = !{i64 2147602001, i64 2147602044, i64 2147602084}
!5721 = !DILocation(line: 123, column: 1, scope: !5495)
!5722 = !{i64 2147602182, i64 2147602225, i64 2147602265}
!5723 = !DILocation(line: 124, column: 1, scope: !5495)
!5724 = !{i64 2147602375, i64 2147602418, i64 2147602458}
!5725 = !DILocation(line: 125, column: 1, scope: !5495)
!5726 = !{i64 2147602601, i64 2147602644, i64 2147602684}
!5727 = !DILocation(line: 126, column: 1, scope: !5495)
!5728 = !{i64 2147602815, i64 2147602858, i64 2147602898}
!5729 = !DILocation(line: 127, column: 1, scope: !5495)
!5730 = !{i64 2147603041, i64 2147603084, i64 2147603124}
!5731 = !DILocation(line: 128, column: 1, scope: !5495)
!5732 = !{i64 2147603258, i64 2147603301, i64 2147603341}
!5733 = !DILocation(line: 129, column: 1, scope: !5495)
!5734 = !{i64 2147603535, i64 2147603578, i64 2147603618}
!5735 = !DILocation(line: 130, column: 1, scope: !5495)
!5736 = !{i64 2147603761, i64 2147603804, i64 2147603844}
!5737 = !DILocation(line: 131, column: 1, scope: !5495)
!5738 = !{i64 2147603969, i64 2147604012, i64 2147604052}
!5739 = !DILocation(line: 132, column: 1, scope: !5495)
!5740 = !{i64 2147608226, i64 2147608269, i64 2147608309}
!5741 = !DILocation(line: 133, column: 1, scope: !5495)
!5742 = !{i64 2147608491, i64 2147608534, i64 2147608574}
!5743 = !DILocation(line: 134, column: 1, scope: !5495)
!5744 = !{i64 2147608705, i64 2147608748, i64 2147608788}
!5745 = !DILocation(line: 135, column: 1, scope: !5495)
!5746 = !{i64 2147608880, i64 2147608923, i64 2147608963}
!5747 = !DILocation(line: 136, column: 1, scope: !5495)
!5748 = !{i64 2147609134, i64 2147609177, i64 2147609217}
!5749 = !DILocation(line: 137, column: 1, scope: !5495)
!5750 = !{i64 2147609333, i64 2147609376, i64 2147609416}
!5751 = !DILocation(line: 138, column: 1, scope: !5495)
!5752 = !{i64 2147609575, i64 2147609618, i64 2147609658}
!5753 = !DILocation(line: 139, column: 1, scope: !5495)
!5754 = !{i64 2147609738, i64 2147609781, i64 2147609821}
!5755 = !DILocation(line: 140, column: 1, scope: !5495)
!5756 = !{i64 2147609925, i64 2147609968, i64 2147610008}
!5757 = !DILocation(line: 141, column: 1, scope: !5495)
!5758 = !{i64 2147610133, i64 2147610176, i64 2147610216}
!5759 = !DILocation(line: 142, column: 1, scope: !5495)
!5760 = !{i64 2147610329, i64 2147610372, i64 2147610412}
!5761 = !DILocation(line: 143, column: 1, scope: !5495)
!5762 = !{i64 2147610522, i64 2147610565, i64 2147610605}
!5763 = !DILocation(line: 144, column: 1, scope: !5495)
!5764 = !{i64 2147610705, i64 2147610748, i64 2147610788}
!5765 = !DILocation(line: 145, column: 1, scope: !5495)
!5766 = !{i64 2147610919, i64 2147610962, i64 2147611002}
!5767 = !DILocation(line: 146, column: 1, scope: !5495)
!5768 = !{i64 2147611130, i64 2147611173, i64 2147611213}
!5769 = !DILocation(line: 147, column: 1, scope: !5495)
!5770 = !{i64 2147611350, i64 2147611393, i64 2147611433}
!5771 = !DILocation(line: 148, column: 1, scope: !5495)
!5772 = !{i64 2147611557, i64 2147611600, i64 2147611640}
!5773 = !DILocation(line: 149, column: 1, scope: !5495)
!5774 = !{i64 2147611830, i64 2147611873, i64 2147611913}
!5775 = !DILocation(line: 150, column: 1, scope: !5495)
!5776 = !{i64 2147612078, i64 2147612121, i64 2147612161}
!5777 = !DILocation(line: 151, column: 1, scope: !5495)
!5778 = !{i64 2147612277, i64 2147612320, i64 2147612360}
!5779 = !DILocation(line: 152, column: 1, scope: !5495)
!5780 = !{i64 2147612512, i64 2147612555, i64 2147612595}
!5781 = !DILocation(line: 153, column: 1, scope: !5495)
!5782 = !{i64 2147612762, i64 2147612805, i64 2147612845}
!5783 = !DILocation(line: 154, column: 1, scope: !5495)
!5784 = !{i64 2147612964, i64 2147613007, i64 2147613047}
!5785 = !DILocation(line: 155, column: 1, scope: !5495)
!5786 = !{i64 2147613187, i64 2147613230, i64 2147613270}
!5787 = !DILocation(line: 156, column: 1, scope: !5495)
!5788 = !{i64 2147613401, i64 2147613444, i64 2147613484}
!5789 = !DILocation(line: 157, column: 1, scope: !5495)
!5790 = !{i64 2147613645, i64 2147613688, i64 2147613728}
!5791 = !DILocation(line: 158, column: 1, scope: !5495)
!5792 = !{i64 2147613874, i64 2147613917, i64 2147613957}
!5793 = !DILocation(line: 159, column: 1, scope: !5495)
!5794 = !{i64 2147614103, i64 2147614146, i64 2147614186}
!5795 = !DILocation(line: 160, column: 1, scope: !5495)
!5796 = !{i64 2147614311, i64 2147614354, i64 2147614394}
!5797 = !DILocation(line: 161, column: 1, scope: !5495)
!5798 = !{i64 2147614549, i64 2147614592, i64 2147614632}
!5799 = !DILocation(line: 162, column: 1, scope: !5495)
!5800 = !{i64 2147614775, i64 2147614818, i64 2147614858}
!5801 = !DILocation(line: 163, column: 1, scope: !5495)
!5802 = !{i64 2147615034, i64 2147615077, i64 2147615117}
!5803 = !DILocation(line: 164, column: 1, scope: !5495)
!5804 = !{i64 2147615254, i64 2147615297, i64 2147615337}
!5805 = !DILocation(line: 165, column: 1, scope: !5495)
!5806 = !{i64 2147615486, i64 2147615529, i64 2147615569}
!5807 = !DILocation(line: 166, column: 1, scope: !5495)
!5808 = !{i64 2147615727, i64 2147615770, i64 2147615810}
!5809 = !DILocation(line: 167, column: 1, scope: !5495)
!5810 = !{i64 2147615968, i64 2147616011, i64 2147616051}
!5811 = !DILocation(line: 168, column: 1, scope: !5495)
!5812 = !{i64 2147616191, i64 2147616234, i64 2147616274}
!5813 = !DILocation(line: 169, column: 1, scope: !5495)
!5814 = !{i64 2147616408, i64 2147616451, i64 2147616491}
!5815 = !DILocation(line: 170, column: 1, scope: !5495)
!5816 = !{i64 2147620710, i64 2147620753, i64 2147620793}
!5817 = !DILocation(line: 171, column: 1, scope: !5495)
!5818 = !{i64 2147620897, i64 2147620940, i64 2147620980}
!5819 = !DILocation(line: 172, column: 1, scope: !5495)
!5820 = !{i64 2147621084, i64 2147621127, i64 2147621167}
!5821 = !DILocation(line: 173, column: 1, scope: !5495)
!5822 = !{i64 2147621247, i64 2147621290, i64 2147621330}
!5823 = !DILocation(line: 174, column: 1, scope: !5495)
!5824 = !{i64 2147621452, i64 2147621495, i64 2147621535}
!5825 = !DILocation(line: 175, column: 1, scope: !5495)
!5826 = !{i64 2147621645, i64 2147621688, i64 2147621728}
!5827 = !DILocation(line: 176, column: 1, scope: !5495)
!5828 = !{i64 2147621904, i64 2147621947, i64 2147621987}
!5829 = !DILocation(line: 177, column: 1, scope: !5495)
!5830 = !{i64 2147622127, i64 2147622170, i64 2147622210}
!5831 = !DILocation(line: 178, column: 1, scope: !5495)
!5832 = !{i64 2147622356, i64 2147622399, i64 2147622439}
!5833 = !DILocation(line: 179, column: 1, scope: !5495)
!5834 = !{i64 2147622570, i64 2147622613, i64 2147622653}
!5835 = !DILocation(line: 180, column: 1, scope: !5495)
!5836 = !{i64 2147622772, i64 2147622815, i64 2147622855}
!5837 = !DILocation(line: 181, column: 1, scope: !5495)
!5838 = !{i64 2147622968, i64 2147623011, i64 2147623051}
!5839 = !DILocation(line: 182, column: 1, scope: !5495)
!5840 = !{i64 2147623180, i64 2147623223, i64 2147623263}
!5841 = !DILocation(line: 183, column: 1, scope: !5495)
!5842 = !{i64 2147623401, i64 2147623444, i64 2147623484}
!5843 = !DILocation(line: 184, column: 1, scope: !5495)
!5844 = !{i64 2147623615, i64 2147623658, i64 2147623698}
!5845 = !DILocation(line: 185, column: 1, scope: !5495)
!5846 = !{i64 2147623805, i64 2147623848, i64 2147623888}
!5847 = !DILocation(line: 186, column: 1, scope: !5495)
!5848 = !{i64 2147624004, i64 2147624047, i64 2147624087}
!5849 = !DILocation(line: 187, column: 1, scope: !5495)
!5850 = !{i64 2147624209, i64 2147624252, i64 2147624292}
!5851 = !DILocation(line: 188, column: 1, scope: !5495)
!5852 = !{i64 2147624429, i64 2147624472, i64 2147624512}
!5853 = !DILocation(line: 189, column: 1, scope: !5495)
!5854 = !{i64 2147624630, i64 2147624673, i64 2147624713}
!5855 = !DILocation(line: 190, column: 1, scope: !5495)
!5856 = !{i64 2147624829, i64 2147624872, i64 2147624912}
!5857 = !DILocation(line: 191, column: 1, scope: !5495)
!5858 = !{i64 2147625034, i64 2147625077, i64 2147625117}
!5859 = !DILocation(line: 192, column: 1, scope: !5495)
!5860 = !{i64 2147625203, i64 2147625246, i64 2147625286}
!5861 = !DILocation(line: 193, column: 1, scope: !5495)
!5862 = !{i64 2147625387, i64 2147625430, i64 2147625470}
!5863 = !DILocation(line: 194, column: 1, scope: !5495)
!5864 = !{i64 2147625571, i64 2147625614, i64 2147625654}
!5865 = !DILocation(line: 195, column: 1, scope: !5495)
!5866 = !{i64 2147625758, i64 2147625801, i64 2147625841}
!5867 = !DILocation(line: 196, column: 1, scope: !5495)
!5868 = !{i64 2147625942, i64 2147625985, i64 2147626025}
!5869 = !DILocation(line: 197, column: 1, scope: !5495)
!5870 = !{i64 2147626129, i64 2147626172, i64 2147626212}
!5871 = !DILocation(line: 198, column: 1, scope: !5495)
!5872 = !{i64 2147626341, i64 2147626384, i64 2147626424}
!5873 = !DILocation(line: 199, column: 1, scope: !5495)
!5874 = !{i64 2147626579, i64 2147626622, i64 2147626662}
!5875 = !DILocation(line: 200, column: 1, scope: !5495)
!5876 = !{i64 2147626809, i64 2147626852, i64 2147626892}
!5877 = !DILocation(line: 201, column: 1, scope: !5495)
!5878 = !{i64 2147627038, i64 2147627081, i64 2147627121}
!5879 = !DILocation(line: 202, column: 1, scope: !5495)
!5880 = !{i64 2147627225, i64 2147627268, i64 2147627308}
!5881 = !DILocation(line: 203, column: 1, scope: !5495)
!5882 = !{i64 2147627421, i64 2147627464, i64 2147627504}
!5883 = !DILocation(line: 204, column: 1, scope: !5495)
!5884 = !{i64 2147627629, i64 2147627672, i64 2147627712}
!5885 = !DILocation(line: 205, column: 1, scope: !5495)
!5886 = !{i64 2147627841, i64 2147627884, i64 2147627924}
!5887 = !DILocation(line: 206, column: 1, scope: !5495)
!5888 = !{i64 2147628040, i64 2147628083, i64 2147628123}
!5889 = !DILocation(line: 207, column: 1, scope: !5495)
!5890 = !{i64 2147628278, i64 2147628321, i64 2147628361}
!5891 = !DILocation(line: 208, column: 1, scope: !5495)
!5892 = !{i64 2147628474, i64 2147628517, i64 2147628557}
!5893 = !DILocation(line: 209, column: 1, scope: !5495)
!5894 = !{i64 2147628676, i64 2147628719, i64 2147628759}
!5895 = !DILocation(line: 210, column: 1, scope: !5495)
!5896 = !{i64 2147628869, i64 2147628912, i64 2147628952}
!5897 = !DILocation(line: 211, column: 1, scope: !5495)
!5898 = !{i64 2147629103, i64 2147629146, i64 2147629186}
!5899 = !DILocation(line: 212, column: 1, scope: !5495)
!5900 = !{i64 2147629266, i64 2147629309, i64 2147629349}
!5901 = !DILocation(line: 213, column: 1, scope: !5495)
!5902 = !{i64 2147629505, i64 2147629548, i64 2147629588}
!5903 = !DILocation(line: 214, column: 1, scope: !5495)
!5904 = !{i64 2147629744, i64 2147629787, i64 2147629827}
!5905 = !DILocation(line: 215, column: 1, scope: !5495)
!5906 = !{i64 2147634041, i64 2147634084, i64 2147634124}
!5907 = !DILocation(line: 216, column: 1, scope: !5495)
!5908 = !{i64 2147634271, i64 2147634314, i64 2147634354}
!5909 = !DILocation(line: 217, column: 1, scope: !5495)
!5910 = !{i64 2147634458, i64 2147634501, i64 2147634541}
!5911 = !DILocation(line: 218, column: 1, scope: !5495)
!5912 = !{i64 2147634657, i64 2147634700, i64 2147634740}
!5913 = !DILocation(line: 219, column: 1, scope: !5495)
!5914 = !{i64 2147634928, i64 2147634971, i64 2147635011}
!5915 = !DILocation(line: 220, column: 1, scope: !5495)
!5916 = !{i64 2147635103, i64 2147635146, i64 2147635186}
!5917 = !DILocation(line: 221, column: 1, scope: !5495)
!5918 = !{i64 2147635337, i64 2147635380, i64 2147635420}
!5919 = !DILocation(line: 222, column: 1, scope: !5495)
!5920 = !{i64 2147635545, i64 2147635588, i64 2147635628}
!5921 = !DILocation(line: 223, column: 1, scope: !5495)
!5922 = !{i64 2147635763, i64 2147635806, i64 2147635846}
!5923 = !DILocation(line: 224, column: 1, scope: !5495)
!5924 = !{i64 2147635953, i64 2147635996, i64 2147636036}
!5925 = !DILocation(line: 225, column: 1, scope: !5495)
!5926 = !{i64 2147636185, i64 2147636228, i64 2147636268}
!5927 = !DILocation(line: 226, column: 1, scope: !5495)
!5928 = !{i64 2147636405, i64 2147636448, i64 2147636488}
!5929 = !DILocation(line: 227, column: 1, scope: !5495)
!5930 = !{i64 2147636601, i64 2147636644, i64 2147636684}
!5931 = !DILocation(line: 228, column: 1, scope: !5495)
!5932 = !{i64 2147636807, i64 2147636850, i64 2147636890}
!5933 = !DILocation(line: 229, column: 1, scope: !5495)
!5934 = !{i64 2147637012, i64 2147637055, i64 2147637095}
!5935 = !DILocation(line: 230, column: 1, scope: !5495)
!5936 = !{i64 2147637226, i64 2147637269, i64 2147637309}
!5937 = !DILocation(line: 231, column: 1, scope: !5495)
!5938 = !{i64 2147637452, i64 2147637495, i64 2147637535}
!5939 = !DILocation(line: 232, column: 1, scope: !5495)
!5940 = !{i64 2147637660, i64 2147637703, i64 2147637743}
!5941 = !DILocation(line: 233, column: 1, scope: !5495)
!5942 = !{i64 2147637856, i64 2147637899, i64 2147637939}
!5943 = !DILocation(line: 234, column: 1, scope: !5495)
!5944 = !{i64 2147638088, i64 2147638131, i64 2147638171}
!5945 = !DILocation(line: 235, column: 1, scope: !5495)
!5946 = !{i64 2147638272, i64 2147638315, i64 2147638355}
!5947 = !DILocation(line: 236, column: 1, scope: !5495)
!5948 = !{i64 2147638481, i64 2147638524, i64 2147638564}
!5949 = !DILocation(line: 237, column: 1, scope: !5495)
!5950 = !{i64 2147638689, i64 2147638732, i64 2147638772}
!5951 = !DILocation(line: 238, column: 1, scope: !5495)
!5952 = !{i64 2147638885, i64 2147638928, i64 2147638968}
!5953 = !DILocation(line: 239, column: 1, scope: !5495)
!5954 = !{i64 2147639069, i64 2147639112, i64 2147639152}
!5955 = !DILocation(line: 240, column: 1, scope: !5495)
!5956 = !{i64 2147639295, i64 2147639338, i64 2147639378}
!5957 = !DILocation(line: 241, column: 1, scope: !5495)
!5958 = !{i64 2147639521, i64 2147639564, i64 2147639604}
!5959 = !DILocation(line: 242, column: 1, scope: !5495)
!5960 = !{i64 2147639747, i64 2147639790, i64 2147639830}
!5961 = !DILocation(line: 243, column: 1, scope: !5495)
!5962 = !{i64 2147639973, i64 2147640016, i64 2147640056}
!5963 = !DILocation(line: 244, column: 1, scope: !5495)
!5964 = !{i64 2147640199, i64 2147640242, i64 2147640282}
!5965 = !DILocation(line: 245, column: 1, scope: !5495)
!5966 = !{i64 2147640431, i64 2147640474, i64 2147640514}
!5967 = !DILocation(line: 246, column: 1, scope: !5495)
!5968 = !{i64 2147640669, i64 2147640712, i64 2147640752}
!5969 = !DILocation(line: 247, column: 1, scope: !5495)
!5970 = !{i64 2147640889, i64 2147640932, i64 2147640972}
!5971 = !DILocation(line: 248, column: 1, scope: !5495)
!5972 = !{i64 2147641133, i64 2147641176, i64 2147641216}
!5973 = !DILocation(line: 249, column: 1, scope: !5495)
!5974 = !{i64 2147641374, i64 2147641417, i64 2147641457}
!5975 = !DILocation(line: 250, column: 1, scope: !5495)
!5976 = !{i64 2147641609, i64 2147641652, i64 2147641692}
!5977 = !DILocation(line: 251, column: 1, scope: !5495)
!5978 = !{i64 2147641841, i64 2147641884, i64 2147641924}
!5979 = !DILocation(line: 252, column: 1, scope: !5495)
!5980 = !{i64 2147642043, i64 2147642086, i64 2147642126}
!5981 = !DILocation(line: 253, column: 1, scope: !5495)
!5982 = !{i64 2147642293, i64 2147642336, i64 2147642376}
!5983 = !DILocation(line: 254, column: 1, scope: !5495)
!5984 = !{i64 2147642531, i64 2147642574, i64 2147642614}
!5985 = !DILocation(line: 255, column: 1, scope: !5495)
!5986 = !{i64 2147646800, i64 2147646843, i64 2147646883}
!5987 = !DILocation(line: 256, column: 1, scope: !5495)
!5988 = !{i64 2147646996, i64 2147647039, i64 2147647079}
!5989 = !DILocation(line: 257, column: 1, scope: !5495)
!5990 = !{i64 2147647180, i64 2147647223, i64 2147647263}
!5991 = !DILocation(line: 258, column: 1, scope: !5495)
!5992 = !{i64 2147647397, i64 2147647440, i64 2147647480}
!5993 = !DILocation(line: 259, column: 1, scope: !5495)
!5994 = !{i64 2147647602, i64 2147647645, i64 2147647685}
!5995 = !DILocation(line: 260, column: 1, scope: !5495)
!5996 = !{i64 2147647837, i64 2147647880, i64 2147647920}
!5997 = !DILocation(line: 261, column: 1, scope: !5495)
!5998 = !{i64 2147648060, i64 2147648103, i64 2147648143}
!5999 = !DILocation(line: 262, column: 1, scope: !5495)
!6000 = !{i64 2147648284, i64 2147648327, i64 2147648367}
!6001 = !DILocation(line: 263, column: 1, scope: !5495)
!6002 = !{i64 2147648522, i64 2147648565, i64 2147648605}
!6003 = !DILocation(line: 264, column: 1, scope: !5495)
!6004 = !{i64 2147648760, i64 2147648803, i64 2147648843}
!6005 = !DILocation(line: 265, column: 1, scope: !5495)
!6006 = !{i64 2147648977, i64 2147649020, i64 2147649060}
!6007 = !DILocation(line: 266, column: 1, scope: !5495)
!6008 = !{i64 2147649182, i64 2147649225, i64 2147649265}
!6009 = !DILocation(line: 267, column: 1, scope: !5495)
!6010 = !{i64 2147649375, i64 2147649418, i64 2147649458}
!6011 = !DILocation(line: 268, column: 1, scope: !5495)
!6012 = !{i64 2147649628, i64 2147649671, i64 2147649711}
!6013 = !DILocation(line: 269, column: 1, scope: !5495)
!6014 = !{i64 2147649836, i64 2147649879, i64 2147649919}
!6015 = !DILocation(line: 270, column: 1, scope: !5495)
!6016 = !{i64 2147650032, i64 2147650075, i64 2147650115}
!6017 = !DILocation(line: 271, column: 1, scope: !5495)
!6018 = !{i64 2147650246, i64 2147650289, i64 2147650329}
!6019 = !DILocation(line: 272, column: 1, scope: !5495)
!6020 = !{i64 2147650454, i64 2147650497, i64 2147650537}
!6021 = !DILocation(line: 273, column: 1, scope: !5495)
!6022 = !{i64 2147650644, i64 2147650687, i64 2147650727}
!6023 = !DILocation(line: 274, column: 1, scope: !5495)
!6024 = !{i64 2147650858, i64 2147650901, i64 2147650941}
!6025 = !DILocation(line: 275, column: 1, scope: !5495)
!6026 = !{i64 2147651120, i64 2147651163, i64 2147651203}
!6027 = !DILocation(line: 276, column: 1, scope: !5495)
!6028 = !{i64 2147651331, i64 2147651374, i64 2147651414}
!6029 = !DILocation(line: 277, column: 1, scope: !5495)
!6030 = !{i64 2147651575, i64 2147651618, i64 2147651658}
!6031 = !DILocation(line: 278, column: 1, scope: !5495)
!6032 = !{i64 2147651786, i64 2147651829, i64 2147651869}
!6033 = !DILocation(line: 279, column: 1, scope: !5495)
!6034 = !{i64 2147652015, i64 2147652058, i64 2147652098}
!6035 = !DILocation(line: 280, column: 1, scope: !5495)
!6036 = !{i64 2147652280, i64 2147652323, i64 2147652363}
!6037 = !DILocation(line: 281, column: 1, scope: !5495)
!6038 = !{i64 2147652485, i64 2147652528, i64 2147652568}
!6039 = !DILocation(line: 282, column: 1, scope: !5495)
!6040 = !{i64 2147652681, i64 2147652724, i64 2147652764}
!6041 = !DILocation(line: 283, column: 1, scope: !5495)
!6042 = !{i64 2147652904, i64 2147652947, i64 2147652987}
!6043 = !DILocation(line: 284, column: 1, scope: !5495)
!6044 = !{i64 2147653067, i64 2147653110, i64 2147653150}
!6045 = !DILocation(line: 285, column: 1, scope: !5495)
!6046 = !{i64 2147653272, i64 2147653315, i64 2147653355}
!6047 = !DILocation(line: 286, column: 1, scope: !5495)
!6048 = !{i64 2147653492, i64 2147653535, i64 2147653575}
!6049 = !DILocation(line: 287, column: 1, scope: !5495)
!6050 = !{i64 2147653706, i64 2147653749, i64 2147653789}
!6051 = !DILocation(line: 288, column: 1, scope: !5495)
!6052 = !{i64 2147653950, i64 2147653993, i64 2147654033}
!6053 = !DILocation(line: 289, column: 1, scope: !5495)
!6054 = !{i64 2147654182, i64 2147654225, i64 2147654265}
!6055 = !DILocation(line: 290, column: 1, scope: !5495)
!6056 = !{i64 2147654396, i64 2147654439, i64 2147654479}
!6057 = !DILocation(line: 291, column: 1, scope: !5495)
!6058 = !{i64 2147654607, i64 2147654650, i64 2147654690}
!6059 = !DILocation(line: 292, column: 1, scope: !5495)
!6060 = !{i64 2147654800, i64 2147654843, i64 2147654883}
!6061 = !DILocation(line: 293, column: 1, scope: !5495)
!6062 = !{i64 2147654999, i64 2147655042, i64 2147655082}
!6063 = !DILocation(line: 294, column: 1, scope: !5495)
!6064 = !{i64 2147655171, i64 2147655214, i64 2147655254}
!6065 = !DILocation(line: 295, column: 1, scope: !5495)
!6066 = !{i64 2147655364, i64 2147655407, i64 2147655447}
!6067 = !DILocation(line: 296, column: 1, scope: !5495)
!6068 = !{i64 2147655536, i64 2147655579, i64 2147655619}
!6069 = !DILocation(line: 297, column: 1, scope: !5495)
!6070 = !{i64 2147659787, i64 2147659830, i64 2147659870}
!6071 = !DILocation(line: 298, column: 1, scope: !5495)
!6072 = !{i64 2147659980, i64 2147660023, i64 2147660063}
!6073 = !DILocation(line: 299, column: 1, scope: !5495)
!6074 = !{i64 2147660176, i64 2147660219, i64 2147660259}
!6075 = !DILocation(line: 300, column: 1, scope: !5495)
!6076 = !{i64 2147660339, i64 2147660382, i64 2147660422}
!6077 = !DILocation(line: 301, column: 1, scope: !5495)
!6078 = !{i64 2147660541, i64 2147660584, i64 2147660624}
!6079 = !DILocation(line: 302, column: 1, scope: !5495)
!6080 = !{i64 2147660752, i64 2147660795, i64 2147660835}
!6081 = !DILocation(line: 303, column: 1, scope: !5495)
!6082 = !{i64 2147660957, i64 2147661000, i64 2147661040}
!6083 = !DILocation(line: 304, column: 1, scope: !5495)
!6084 = !{i64 2147661165, i64 2147661208, i64 2147661248}
!6085 = !DILocation(line: 305, column: 1, scope: !5495)
!6086 = !{i64 2147661358, i64 2147661401, i64 2147661441}
!6087 = !DILocation(line: 306, column: 1, scope: !5495)
!6088 = !{i64 2147661545, i64 2147661588, i64 2147661628}
!6089 = !DILocation(line: 307, column: 1, scope: !5495)
!6090 = !{i64 2147661711, i64 2147661754, i64 2147661794}
!6091 = !DILocation(line: 308, column: 1, scope: !5495)
!6092 = !{i64 2147661938, i64 2147661981, i64 2147662021}
!6093 = !DILocation(line: 309, column: 1, scope: !5495)
!6094 = !{i64 2147662155, i64 2147662198, i64 2147662238}
!6095 = !DILocation(line: 310, column: 1, scope: !5495)
!6096 = !{i64 2147662381, i64 2147662424, i64 2147662464}
!6097 = !DILocation(line: 311, column: 1, scope: !5495)
!6098 = !{i64 2147662586, i64 2147662629, i64 2147662669}
!6099 = !DILocation(line: 312, column: 1, scope: !5495)
!6100 = !{i64 2147662803, i64 2147662846, i64 2147662886}
!6101 = !DILocation(line: 313, column: 1, scope: !5495)
!6102 = !{i64 2147663095, i64 2147663138, i64 2147663178}
!6103 = !DILocation(line: 314, column: 1, scope: !5495)
!6104 = !{i64 2147663327, i64 2147663370, i64 2147663410}
!6105 = !DILocation(line: 315, column: 1, scope: !5495)
!6106 = !{i64 2147663544, i64 2147663587, i64 2147663627}
!6107 = !DILocation(line: 316, column: 1, scope: !5495)
!6108 = !{i64 2147663751, i64 2147663794, i64 2147663834}
!6109 = !DILocation(line: 317, column: 1, scope: !5495)
!6110 = !{i64 2147663952, i64 2147663995, i64 2147664035}
!6111 = !DILocation(line: 318, column: 1, scope: !5495)
!6112 = !{i64 2147664184, i64 2147664227, i64 2147664267}
!6113 = !DILocation(line: 319, column: 1, scope: !5495)
!6114 = !{i64 2147664392, i64 2147664435, i64 2147664475}
!6115 = !DILocation(line: 320, column: 1, scope: !5495)
!6116 = !{i64 2147664582, i64 2147664625, i64 2147664665}
!6117 = !DILocation(line: 321, column: 1, scope: !5495)
!6118 = !{i64 2147664808, i64 2147664851, i64 2147664891}
!6119 = !DILocation(line: 322, column: 1, scope: !5495)
!6120 = !{i64 2147664997, i64 2147665040, i64 2147665080}
!6121 = !DILocation(line: 323, column: 1, scope: !5495)
!6122 = !{i64 2147665268, i64 2147665311, i64 2147665351}
!6123 = !DILocation(line: 324, column: 1, scope: !5495)
!6124 = !{i64 2147665488, i64 2147665531, i64 2147665571}
!6125 = !DILocation(line: 325, column: 1, scope: !5495)
!6126 = !{i64 2147665741, i64 2147665784, i64 2147665824}
!6127 = !DILocation(line: 326, column: 1, scope: !5495)
!6128 = !{i64 2147665949, i64 2147665992, i64 2147666032}
!6129 = !DILocation(line: 327, column: 1, scope: !5495)
!6130 = !{i64 2147666181, i64 2147666224, i64 2147666264}
!6131 = !DILocation(line: 328, column: 1, scope: !5495)
!6132 = !{i64 2147666392, i64 2147666435, i64 2147666475}
!6133 = !DILocation(line: 329, column: 1, scope: !5495)
!6134 = !{i64 2147666582, i64 2147666625, i64 2147666665}
!6135 = !DILocation(line: 330, column: 1, scope: !5495)
!6136 = !{i64 2147666796, i64 2147666839, i64 2147666879}
!6137 = !DILocation(line: 331, column: 1, scope: !5495)
!6138 = !{i64 2147666995, i64 2147667038, i64 2147667078}
!6139 = !DILocation(line: 332, column: 1, scope: !5495)
!6140 = !{i64 2147667182, i64 2147667225, i64 2147667265}
!6141 = !DILocation(line: 333, column: 1, scope: !5495)
!6142 = !{i64 2147667390, i64 2147667433, i64 2147667473}
!6143 = !DILocation(line: 334, column: 1, scope: !5495)
!6144 = !{i64 2147667619, i64 2147667662, i64 2147667702}
!6145 = !DILocation(line: 335, column: 1, scope: !5495)
!6146 = !{i64 2147667821, i64 2147667864, i64 2147667904}
!6147 = !DILocation(line: 336, column: 1, scope: !5495)
!6148 = !{i64 2147668020, i64 2147668063, i64 2147668103}
!6149 = !DILocation(line: 337, column: 1, scope: !5495)
!6150 = !{i64 2147668237, i64 2147668280, i64 2147668320}
!6151 = !DILocation(line: 339, column: 1, scope: !5495)
!6152 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6153)
!6153 = !{!6154, !6155}
!6154 = !DILocalVariable(name: "arg", arg: 1, scope: !6152, file: !324, line: 30, type: !333)
!6155 = !DILocalVariable(name: "key", scope: !6152, file: !324, line: 32, type: !110)
!6156 = !DILocation(line: 0, scope: !6152)
!6157 = !DILocation(line: 37, column: 2, scope: !6152)
!6158 = !DILocation(line: 38, column: 2, scope: !6152)
!6159 = !DILocation(line: 55, column: 2, scope: !6160, inlinedAt: !6167)
!6160 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6164)
!6161 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6162 = !DISubroutineType(types: !6163)
!6163 = !{!32}
!6164 = !{!6165, !6166}
!6165 = !DILocalVariable(name: "key", scope: !6160, file: !6161, line: 44, type: !32)
!6166 = !DILocalVariable(name: "tmp", scope: !6160, file: !6161, line: 53, type: !32)
!6167 = distinct !DILocation(line: 40, column: 8, scope: !6152)
!6168 = !{i64 2189288}
!6169 = !DILocation(line: 0, scope: !6160, inlinedAt: !6167)
!6170 = !DILocalVariable(name: "key", arg: 1, scope: !6171, file: !6161, line: 84, type: !32)
!6171 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6174)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !32}
!6174 = !{!6170}
!6175 = !DILocation(line: 0, scope: !6171, inlinedAt: !6176)
!6176 = distinct !DILocation(line: 47, column: 2, scope: !6152)
!6177 = !DILocation(line: 95, column: 2, scope: !6171, inlinedAt: !6176)
!6178 = !{i64 2190105}
!6179 = !DILocation(line: 51, column: 18, scope: !6152)
!6180 = !DILocation(line: 53, column: 2, scope: !6152)
!6181 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6182, file: !6182, line: 1609, type: !3153, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2104)
!6182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6183 = !DILocation(line: 1611, column: 3, scope: !6181)
!6184 = !DILocation(line: 1612, column: 1, scope: !6181)
!6185 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6182, file: !6182, line: 1629, type: !3153, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2104)
!6186 = !DILocation(line: 1631, column: 3, scope: !6185)
!6187 = !DILocation(line: 1632, column: 1, scope: !6185)
!6188 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6189)
!6189 = !{!6190}
!6190 = !DILocalVariable(name: "dev", arg: 1, scope: !6188, file: !361, line: 26, type: !369)
!6191 = !DILocation(line: 0, scope: !6188)
!6192 = !DILocation(line: 68, column: 2, scope: !6188)
!6193 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6194, file: !6194, line: 14, type: !4449, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6195)
!6194 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6195 = !{!6196, !6197}
!6196 = !DILocalVariable(name: "fmt", arg: 1, scope: !6193, file: !6194, line: 14, type: !279)
!6197 = !DILocalVariable(name: "ap", scope: !6193, file: !6194, line: 16, type: !6198)
!6198 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3455, line: 99, baseType: !6199)
!6199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3455, line: 40, baseType: !6200)
!6200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6194, baseType: !6201)
!6201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6202)
!6202 = !{!6203}
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6201, file: !6194, line: 16, baseType: !107, size: 32)
!6204 = !DILocation(line: 0, scope: !6193)
!6205 = !DILocation(line: 16, column: 2, scope: !6193)
!6206 = !DILocation(line: 16, column: 10, scope: !6193)
!6207 = !DILocation(line: 18, column: 2, scope: !6193)
!6208 = !DILocation(line: 19, column: 2, scope: !6193)
!6209 = !DILocation(line: 20, column: 2, scope: !6193)
!6210 = !DILocation(line: 21, column: 1, scope: !6193)
!6211 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6194, file: !6194, line: 23, type: !6212, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6214)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{null, !279, !6198}
!6214 = !{!6215, !6216}
!6215 = !DILocalVariable(name: "fmt", arg: 1, scope: !6211, file: !6194, line: 23, type: !279)
!6216 = !DILocalVariable(name: "ap", arg: 2, scope: !6211, file: !6194, line: 23, type: !6198)
!6217 = !DILocation(line: 0, scope: !6211)
!6218 = !DILocation(line: 25, column: 2, scope: !6211)
!6219 = !DILocation(line: 26, column: 1, scope: !6211)
!6220 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6194, file: !6194, line: 52, type: !6221, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !109, !13, !234}
!6223 = !{!6224, !6225, !6226, !6227}
!6224 = !DILocalVariable(name: "level", arg: 1, scope: !6220, file: !6194, line: 52, type: !109)
!6225 = !DILocalVariable(name: "data", arg: 2, scope: !6220, file: !6194, line: 52, type: !13)
!6226 = !DILocalVariable(name: "size", arg: 3, scope: !6220, file: !6194, line: 52, type: !234)
!6227 = !DILocalVariable(name: "data_buffer", scope: !6220, file: !6194, line: 54, type: !279)
!6228 = !DILocation(line: 0, scope: !6220)
!6229 = !DILocation(line: 55, column: 14, scope: !6220)
!6230 = !DILocation(line: 55, column: 2, scope: !6220)
!6231 = !DILocation(line: 56, column: 3, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6220, file: !6194, line: 55, column: 20)
!6233 = !DILocation(line: 57, column: 3, scope: !6232)
!6234 = !DILocation(line: 59, column: 7, scope: !6232)
!6235 = distinct !{!6235, !6230, !6236}
!6236 = !DILocation(line: 65, column: 2, scope: !6220)
!6237 = !DILocation(line: 66, column: 1, scope: !6220)
!6238 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6239, file: !6239, line: 175, type: !6240, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6242)
!6239 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6240 = !DISubroutineType(types: !6241)
!6241 = !{!150, !109}
!6242 = !{!6243}
!6243 = !DILocalVariable(name: "level", arg: 1, scope: !6238, file: !6239, line: 175, type: !109)
!6244 = !DILocation(line: 0, scope: !6238)
!6245 = !DILocation(line: 177, column: 2, scope: !6238)
!6246 = !DILocation(line: 189, column: 1, scope: !6238)
!6247 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6194, file: !6194, line: 28, type: !6248, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6250)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{null, !279, !234}
!6250 = !{!6251, !6252, !6253, !6255, !6257}
!6251 = !DILocalVariable(name: "data", arg: 1, scope: !6247, file: !6194, line: 28, type: !279)
!6252 = !DILocalVariable(name: "length", arg: 2, scope: !6247, file: !6194, line: 28, type: !234)
!6253 = !DILocalVariable(name: "i", scope: !6254, file: !6194, line: 30, type: !234)
!6254 = distinct !DILexicalBlock(scope: !6247, file: !6194, line: 30, column: 2)
!6255 = !DILocalVariable(name: "i", scope: !6256, file: !6194, line: 40, type: !234)
!6256 = distinct !DILexicalBlock(scope: !6247, file: !6194, line: 40, column: 2)
!6257 = !DILocalVariable(name: "c", scope: !6258, file: !6194, line: 42, type: !181)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !6194, line: 41, column: 19)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !6194, line: 41, column: 7)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !6194, line: 40, column: 54)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !6194, line: 40, column: 2)
!6262 = !DILocation(line: 0, scope: !6247)
!6263 = !DILocation(line: 0, scope: !6254)
!6264 = !DILocation(line: 30, column: 2, scope: !6254)
!6265 = !DILocation(line: 38, column: 2, scope: !6247)
!6266 = !DILocation(line: 0, scope: !6256)
!6267 = !DILocation(line: 40, column: 2, scope: !6256)
!6268 = !DILocation(line: 31, column: 9, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !6194, line: 31, column: 7)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !6194, line: 30, column: 54)
!6271 = distinct !DILexicalBlock(scope: !6254, file: !6194, line: 30, column: 2)
!6272 = !DILocation(line: 31, column: 7, scope: !6270)
!6273 = !DILocation(line: 32, column: 35, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6269, file: !6194, line: 31, column: 19)
!6275 = !DILocation(line: 32, column: 20, scope: !6274)
!6276 = !DILocation(line: 32, column: 4, scope: !6274)
!6277 = !DILocation(line: 33, column: 3, scope: !6274)
!6278 = !DILocation(line: 34, column: 4, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6269, file: !6194, line: 33, column: 10)
!6280 = !DILocation(line: 30, column: 50, scope: !6271)
!6281 = !DILocation(line: 30, column: 24, scope: !6271)
!6282 = distinct !{!6282, !6264, !6283}
!6283 = !DILocation(line: 36, column: 2, scope: !6254)
!6284 = !DILocation(line: 49, column: 2, scope: !6247)
!6285 = !DILocation(line: 50, column: 1, scope: !6247)
!6286 = !DILocation(line: 41, column: 9, scope: !6259)
!6287 = !DILocation(line: 41, column: 7, scope: !6260)
!6288 = !DILocation(line: 42, column: 22, scope: !6258)
!6289 = !DILocation(line: 0, scope: !6258)
!6290 = !DILocation(line: 44, column: 25, scope: !6258)
!6291 = !DILocation(line: 44, column: 17, scope: !6258)
!6292 = !DILocation(line: 44, column: 33, scope: !6258)
!6293 = !DILocation(line: 44, column: 4, scope: !6258)
!6294 = !DILocation(line: 45, column: 3, scope: !6258)
!6295 = !DILocation(line: 46, column: 4, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6259, file: !6194, line: 45, column: 10)
!6297 = !DILocation(line: 40, column: 50, scope: !6261)
!6298 = !DILocation(line: 40, column: 24, scope: !6261)
!6299 = distinct !{!6299, !6267, !6300}
!6300 = !DILocation(line: 48, column: 2, scope: !6256)
!6301 = distinct !DISubprogram(name: "isprint", scope: !5239, file: !5239, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !6302)
!6302 = !{!6303}
!6303 = !DILocalVariable(name: "c", arg: 1, scope: !6301, file: !5239, line: 37, type: !109)
!6304 = !DILocation(line: 0, scope: !6301)
!6305 = !DILocation(line: 39, column: 38, scope: !6301)
!6306 = !DILocation(line: 39, column: 2, scope: !6301)
!6307 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6308, file: !6308, line: 57, type: !6309, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6355)
!6308 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !32, !6311}
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6313)
!6313 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2752, line: 141, baseType: !6314)
!6314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2752, line: 97, size: 256, elements: !6315)
!6315 = !{!6316}
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6314, file: !2752, line: 107, baseType: !6317, size: 256)
!6317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2752, line: 98, size: 256, elements: !6318)
!6318 = !{!6319, !6324, !6329, !6334, !6339, !6344, !6349, !6354}
!6319 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 99, baseType: !6320, size: 32)
!6320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 99, size: 32, elements: !6321)
!6321 = !{!6322, !6323}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6320, file: !2752, line: 99, baseType: !110, size: 32)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6320, file: !2752, line: 99, baseType: !110, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 100, baseType: !6325, size: 32, offset: 32)
!6325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 100, size: 32, elements: !6326)
!6326 = !{!6327, !6328}
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6325, file: !2752, line: 100, baseType: !110, size: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6325, file: !2752, line: 100, baseType: !110, size: 32)
!6329 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 101, baseType: !6330, size: 32, offset: 64)
!6330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 101, size: 32, elements: !6331)
!6331 = !{!6332, !6333}
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6330, file: !2752, line: 101, baseType: !110, size: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6330, file: !2752, line: 101, baseType: !110, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 102, baseType: !6335, size: 32, offset: 96)
!6335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 102, size: 32, elements: !6336)
!6336 = !{!6337, !6338}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6335, file: !2752, line: 102, baseType: !110, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6335, file: !2752, line: 102, baseType: !110, size: 32)
!6339 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 103, baseType: !6340, size: 32, offset: 128)
!6340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 103, size: 32, elements: !6341)
!6341 = !{!6342, !6343}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6340, file: !2752, line: 103, baseType: !110, size: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6340, file: !2752, line: 103, baseType: !110, size: 32)
!6344 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 104, baseType: !6345, size: 32, offset: 160)
!6345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 104, size: 32, elements: !6346)
!6346 = !{!6347, !6348}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6345, file: !2752, line: 104, baseType: !110, size: 32)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6345, file: !2752, line: 104, baseType: !110, size: 32)
!6349 = !DIDerivedType(tag: DW_TAG_member, scope: !6317, file: !2752, line: 105, baseType: !6350, size: 32, offset: 192)
!6350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6317, file: !2752, line: 105, size: 32, elements: !6351)
!6351 = !{!6352, !6353}
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6350, file: !2752, line: 105, baseType: !110, size: 32)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6350, file: !2752, line: 105, baseType: !110, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6317, file: !2752, line: 106, baseType: !110, size: 32, offset: 224)
!6355 = !{!6356, !6357}
!6356 = !DILocalVariable(name: "reason", arg: 1, scope: !6307, file: !6308, line: 57, type: !32)
!6357 = !DILocalVariable(name: "esf", arg: 2, scope: !6307, file: !6308, line: 57, type: !6311)
!6358 = !DILocation(line: 0, scope: !6307)
!6359 = !DILocation(line: 60, column: 10, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6307, file: !6308, line: 60, column: 6)
!6361 = !DILocation(line: 60, column: 6, scope: !6307)
!6362 = !DILocation(line: 61, column: 3, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !6308, line: 60, column: 19)
!6364 = !DILocation(line: 62, column: 2, scope: !6363)
!6365 = !DILocation(line: 63, column: 2, scope: !6307)
!6366 = !DILocation(line: 64, column: 1, scope: !6307)
!6367 = distinct !DISubprogram(name: "esf_dump", scope: !6308, file: !6308, line: 20, type: !6368, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6370)
!6368 = !DISubroutineType(types: !6369)
!6369 = !{null, !6311}
!6370 = !{!6371}
!6371 = !DILocalVariable(name: "esf", arg: 1, scope: !6367, file: !6308, line: 20, type: !6311)
!6372 = !DILocation(line: 0, scope: !6367)
!6373 = !DILocation(line: 22, column: 2, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !6308, line: 22, column: 2)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !6308, line: 22, column: 2)
!6376 = distinct !DILexicalBlock(scope: !6377, file: !6308, line: 22, column: 2)
!6377 = distinct !DILexicalBlock(scope: !6367, file: !6308, line: 22, column: 2)
!6378 = !DILocation(line: 24, column: 2, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !6308, line: 24, column: 2)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !6308, line: 24, column: 2)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !6308, line: 24, column: 2)
!6382 = distinct !DILexicalBlock(scope: !6367, file: !6308, line: 24, column: 2)
!6383 = !DILocation(line: 26, column: 2, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !6308, line: 26, column: 2)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !6308, line: 26, column: 2)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !6308, line: 26, column: 2)
!6387 = distinct !DILexicalBlock(scope: !6367, file: !6308, line: 26, column: 2)
!6388 = !DILocation(line: 53, column: 2, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !6308, line: 53, column: 2)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !6308, line: 53, column: 2)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !6308, line: 53, column: 2)
!6392 = distinct !DILexicalBlock(scope: !6367, file: !6308, line: 53, column: 2)
!6393 = !DILocation(line: 55, column: 1, scope: !6367)
!6394 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6308, file: !6308, line: 82, type: !6395, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6410)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{null, !6311, !6397}
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 32)
!6398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6399)
!6399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6400)
!6400 = !{!6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6399, file: !211, line: 26, baseType: !110, size: 32)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6399, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6399, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6399, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6399, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6399, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6399, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6399, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6399, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6410 = !{!6411, !6412, !6413}
!6411 = !DILocalVariable(name: "esf", arg: 1, scope: !6394, file: !6308, line: 82, type: !6311)
!6412 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6394, file: !6308, line: 82, type: !6397)
!6413 = !DILocalVariable(name: "reason", scope: !6394, file: !6308, line: 88, type: !32)
!6414 = !DILocation(line: 0, scope: !6394)
!6415 = !DILocation(line: 88, column: 35, scope: !6394)
!6416 = !DILocation(line: 108, column: 2, scope: !6394)
!6417 = !DILocation(line: 131, column: 1, scope: !6394)
!6418 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6308, file: !6308, line: 133, type: !6419, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{null, !107}
!6421 = !{!6422, !6423, !6424}
!6422 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6418, file: !6308, line: 133, type: !107)
!6423 = !DILocalVariable(name: "ssf_contents", scope: !6418, file: !6308, line: 135, type: !900)
!6424 = !DILocalVariable(name: "oops_esf", scope: !6418, file: !6308, line: 136, type: !6313)
!6425 = !DILocation(line: 0, scope: !6418)
!6426 = !DILocation(line: 136, column: 2, scope: !6418)
!6427 = !DILocation(line: 136, column: 15, scope: !6418)
!6428 = !DILocation(line: 139, column: 22, scope: !6418)
!6429 = !DILocation(line: 139, column: 17, scope: !6418)
!6430 = !DILocation(line: 139, column: 20, scope: !6418)
!6431 = !DILocation(line: 141, column: 2, scope: !6418)
!6432 = !DILocation(line: 142, column: 2, scope: !6418)
!6433 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6434, file: !6434, line: 40, type: !6172, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6435)
!6434 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6435 = !{!6436}
!6436 = !DILocalVariable(name: "irq", arg: 1, scope: !6433, file: !6434, line: 40, type: !32)
!6437 = !DILocation(line: 0, scope: !6433)
!6438 = !DILocation(line: 42, column: 2, scope: !6433)
!6439 = !DILocation(line: 43, column: 1, scope: !6433)
!6440 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6441, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6443)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{null, !800}
!6443 = !{!6444}
!6444 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6440, file: !535, line: 1684, type: !800)
!6445 = !DILocation(line: 0, scope: !6440)
!6446 = !DILocation(line: 1686, column: 23, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6440, file: !535, line: 1686, column: 7)
!6448 = !DILocation(line: 1686, column: 7, scope: !6440)
!6449 = !DILocation(line: 1688, column: 5, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6447, file: !535, line: 1687, column: 3)
!6451 = !{i64 2151258064}
!6452 = !DILocation(line: 1689, column: 81, scope: !6450)
!6453 = !DILocation(line: 1689, column: 60, scope: !6450)
!6454 = !DILocation(line: 1689, column: 34, scope: !6450)
!6455 = !DILocation(line: 1689, column: 5, scope: !6450)
!6456 = !DILocation(line: 1689, column: 43, scope: !6450)
!6457 = !DILocation(line: 1690, column: 5, scope: !6450)
!6458 = !{i64 2151258178}
!6459 = !DILocation(line: 1691, column: 3, scope: !6450)
!6460 = !DILocation(line: 1692, column: 1, scope: !6440)
!6461 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6434, file: !6434, line: 45, type: !6172, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6462)
!6462 = !{!6463}
!6463 = !DILocalVariable(name: "irq", arg: 1, scope: !6461, file: !6434, line: 45, type: !32)
!6464 = !DILocation(line: 0, scope: !6461)
!6465 = !DILocation(line: 47, column: 2, scope: !6461)
!6466 = !DILocation(line: 48, column: 1, scope: !6461)
!6467 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6441, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6468)
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6467, file: !535, line: 1722, type: !800)
!6470 = !DILocation(line: 0, scope: !6467)
!6471 = !DILocation(line: 1724, column: 23, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !535, line: 1724, column: 7)
!6473 = !DILocation(line: 1724, column: 7, scope: !6467)
!6474 = !DILocation(line: 1726, column: 81, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6472, file: !535, line: 1725, column: 3)
!6476 = !DILocation(line: 1726, column: 60, scope: !6475)
!6477 = !DILocation(line: 1726, column: 34, scope: !6475)
!6478 = !DILocation(line: 1726, column: 5, scope: !6475)
!6479 = !DILocation(line: 1726, column: 43, scope: !6475)
!6480 = !DILocation(line: 271, column: 3, scope: !6481, inlinedAt: !6483)
!6481 = distinct !DISubprogram(name: "__DSB", scope: !6482, file: !6482, line: 269, type: !3153, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !2104)
!6482 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6483 = distinct !DILocation(line: 1727, column: 5, scope: !6475)
!6484 = !{i64 3712447}
!6485 = !DILocation(line: 260, column: 3, scope: !6486, inlinedAt: !6487)
!6486 = distinct !DISubprogram(name: "__ISB", scope: !6482, file: !6482, line: 258, type: !3153, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !2104)
!6487 = distinct !DILocation(line: 1728, column: 5, scope: !6475)
!6488 = !{i64 3712164}
!6489 = !DILocation(line: 1729, column: 3, scope: !6475)
!6490 = !DILocation(line: 1730, column: 1, scope: !6467)
!6491 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6434, file: !6434, line: 50, type: !6492, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6494)
!6492 = !DISubroutineType(types: !6493)
!6493 = !{!109, !32}
!6494 = !{!6495}
!6495 = !DILocalVariable(name: "irq", arg: 1, scope: !6491, file: !6434, line: 50, type: !32)
!6496 = !DILocation(line: 0, scope: !6491)
!6497 = !DILocation(line: 52, column: 20, scope: !6491)
!6498 = !DILocation(line: 52, column: 9, scope: !6491)
!6499 = !DILocation(line: 52, column: 41, scope: !6491)
!6500 = !DILocation(line: 52, column: 39, scope: !6491)
!6501 = !DILocation(line: 52, column: 2, scope: !6491)
!6502 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6434, file: !6434, line: 64, type: !6503, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{null, !32, !32, !110}
!6505 = !{!6506, !6507, !6508}
!6506 = !DILocalVariable(name: "irq", arg: 1, scope: !6502, file: !6434, line: 64, type: !32)
!6507 = !DILocalVariable(name: "prio", arg: 2, scope: !6502, file: !6434, line: 64, type: !32)
!6508 = !DILocalVariable(name: "flags", arg: 3, scope: !6502, file: !6434, line: 64, type: !110)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 83, column: 8, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !6434, line: 82, column: 9)
!6512 = distinct !DILexicalBlock(scope: !6502, file: !6434, line: 76, column: 6)
!6513 = !DILocation(line: 91, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !6434, line: 91, column: 2)
!6515 = distinct !DILexicalBlock(scope: !6502, file: !6434, line: 91, column: 2)
!6516 = !DILocation(line: 91, column: 2, scope: !6515)
!6517 = !DILocation(line: 91, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6514, file: !6434, line: 91, column: 2)
!6519 = !DILocation(line: 95, column: 2, scope: !6502)
!6520 = !DILocation(line: 96, column: 1, scope: !6502)
!6521 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6522, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6524)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{null, !800, !110}
!6524 = !{!6525, !6526}
!6525 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6521, file: !535, line: 1814, type: !800)
!6526 = !DILocalVariable(name: "priority", arg: 2, scope: !6521, file: !535, line: 1814, type: !110)
!6527 = !DILocation(line: 0, scope: !6521)
!6528 = !DILocation(line: 0, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6521, file: !535, line: 1816, column: 7)
!6530 = !DILocation(line: 1816, column: 7, scope: !6521)
!6531 = !DILocation(line: 1824, column: 1, scope: !6521)
!6532 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6434, file: !6434, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !6533)
!6533 = !{!6534}
!6534 = !DILocalVariable(name: "unused", arg: 1, scope: !6532, file: !6434, line: 155, type: !13)
!6535 = !DILocation(line: 0, scope: !6532)
!6536 = !DILocation(line: 159, column: 2, scope: !6532)
!6537 = !DILocation(line: 160, column: 1, scope: !6532)
!6538 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6539, file: !6539, line: 87, type: !3153, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !2104)
!6539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6540 = !DILocation(line: 89, column: 2, scope: !6538)
!6541 = !DILocation(line: 90, column: 2, scope: !6538)
!6542 = !DILocation(line: 91, column: 1, scope: !6538)
!6543 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6539, file: !6539, line: 23, type: !3153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!6544 = !DISubprogram(name: "z_arm_int_exit", scope: !6545, file: !6545, line: 153, type: !3153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!6545 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6546 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6547, file: !6547, line: 256, type: !3153, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2104)
!6547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6548 = !DILocation(line: 258, column: 2, scope: !6546)
!6549 = !DILocation(line: 260, column: 2, scope: !6546)
!6550 = !DILocation(line: 262, column: 2, scope: !6546)
!6551 = !DILocation(line: 263, column: 2, scope: !6546)
!6552 = !DILocation(line: 267, column: 2, scope: !6546)
!6553 = !DILocation(line: 268, column: 2, scope: !6546)
!6554 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6547, file: !6547, line: 53, type: !3153, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2104)
!6555 = !DILocation(line: 55, column: 12, scope: !6554)
!6556 = !DILocation(line: 271, column: 3, scope: !6557, inlinedAt: !6558)
!6557 = distinct !DISubprogram(name: "__DSB", scope: !6482, file: !6482, line: 269, type: !3153, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2104)
!6558 = distinct !DILocation(line: 56, column: 2, scope: !6554)
!6559 = !{i64 3711118}
!6560 = !DILocation(line: 260, column: 3, scope: !6561, inlinedAt: !6562)
!6561 = distinct !DISubprogram(name: "__ISB", scope: !6482, file: !6482, line: 258, type: !3153, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2104)
!6562 = distinct !DILocation(line: 57, column: 2, scope: !6554)
!6563 = !{i64 3710835}
!6564 = !DILocation(line: 58, column: 1, scope: !6554)
!6565 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6547, file: !6547, line: 96, type: !3153, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2104)
!6566 = !DILocation(line: 103, column: 13, scope: !6565)
!6567 = !DILocation(line: 975, column: 3, scope: !6568, inlinedAt: !6573)
!6568 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6482, file: !6482, line: 971, type: !6569, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{!110}
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "result", scope: !6568, file: !6482, line: 973, type: !110)
!6573 = distinct !DILocation(line: 189, column: 16, scope: !6565)
!6574 = !{i64 3731948}
!6575 = !DILocation(line: 0, scope: !6568, inlinedAt: !6573)
!6576 = !DILocation(line: 189, column: 32, scope: !6565)
!6577 = !DILocalVariable(name: "control", arg: 1, scope: !6578, file: !6482, line: 1001, type: !110)
!6578 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6482, file: !6482, line: 1001, type: !6579, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{null, !110}
!6581 = !{!6577}
!6582 = !DILocation(line: 0, scope: !6578, inlinedAt: !6583)
!6583 = distinct !DILocation(line: 189, column: 2, scope: !6565)
!6584 = !DILocation(line: 1003, column: 3, scope: !6578, inlinedAt: !6583)
!6585 = !{i64 3732668}
!6586 = !DILocation(line: 260, column: 3, scope: !6561, inlinedAt: !6587)
!6587 = distinct !DILocation(line: 1004, column: 3, scope: !6578, inlinedAt: !6583)
!6588 = !DILocation(line: 191, column: 1, scope: !6565)
!6589 = distinct !DISubprogram(name: "arch_swap", scope: !6590, file: !6590, line: 33, type: !6492, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !6591)
!6590 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6591 = !{!6592}
!6592 = !DILocalVariable(name: "key", arg: 1, scope: !6589, file: !6590, line: 33, type: !32)
!6593 = !DILocation(line: 0, scope: !6589)
!6594 = !DILocation(line: 36, column: 2, scope: !6589)
!6595 = !DILocation(line: 36, column: 17, scope: !6589)
!6596 = !DILocation(line: 36, column: 25, scope: !6589)
!6597 = !DILocation(line: 37, column: 37, scope: !6589)
!6598 = !DILocation(line: 37, column: 17, scope: !6589)
!6599 = !DILocation(line: 37, column: 35, scope: !6589)
!6600 = !DILocation(line: 41, column: 12, scope: !6589)
!6601 = !DILocalVariable(name: "key", arg: 1, scope: !6602, file: !6161, line: 84, type: !32)
!6602 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !6603)
!6603 = !{!6601}
!6604 = !DILocation(line: 0, scope: !6602, inlinedAt: !6605)
!6605 = distinct !DILocation(line: 44, column: 2, scope: !6589)
!6606 = !DILocation(line: 95, column: 2, scope: !6602, inlinedAt: !6605)
!6607 = !{i64 2281619}
!6608 = !DILocation(line: 53, column: 9, scope: !6589)
!6609 = !DILocation(line: 53, column: 24, scope: !6589)
!6610 = !DILocation(line: 53, column: 2, scope: !6589)
!6611 = distinct !DISubprogram(name: "arch_new_thread", scope: !6612, file: !6612, line: 56, type: !6613, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !6723)
!6612 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6613 = !DISubroutineType(types: !6614)
!6614 = !{null, !6615, !6718, !285, !3420, !107, !107, !107}
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 32)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6617)
!6617 = !{!6618, !6676, !6688, !6689, !6690, !6691, !6692, !6698, !6713}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6616, file: !158, line: 247, baseType: !6619, size: 384)
!6619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6620)
!6620 = !{!6621, !6645, !6652, !6653, !6654, !6663, !6664, !6665}
!6621 = !DIDerivedType(tag: DW_TAG_member, scope: !6619, file: !158, line: 60, baseType: !6622, size: 64)
!6622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6619, file: !158, line: 60, size: 64, elements: !6623)
!6623 = !{!6624, !6639}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6622, file: !158, line: 61, baseType: !6625, size: 64)
!6625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6626)
!6626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6627)
!6627 = !{!6628, !6634}
!6628 = !DIDerivedType(tag: DW_TAG_member, scope: !6626, file: !127, line: 38, baseType: !6629, size: 32)
!6629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6626, file: !127, line: 38, size: 32, elements: !6630)
!6630 = !{!6631, !6633}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6629, file: !127, line: 39, baseType: !6632, size: 32)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 32)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6629, file: !127, line: 40, baseType: !6632, size: 32)
!6634 = !DIDerivedType(tag: DW_TAG_member, scope: !6626, file: !127, line: 42, baseType: !6635, size: 32, offset: 32)
!6635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6626, file: !127, line: 42, size: 32, elements: !6636)
!6636 = !{!6637, !6638}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6635, file: !127, line: 43, baseType: !6632, size: 32)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6635, file: !127, line: 44, baseType: !6632, size: 32)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6622, file: !158, line: 62, baseType: !6640, size: 64)
!6640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6641)
!6641 = !{!6642}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6640, file: !170, line: 50, baseType: !6643, size: 64)
!6643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6644, size: 64, elements: !175)
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 32)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6619, file: !158, line: 68, baseType: !6646, size: 32, offset: 64)
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 32)
!6647 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6648)
!6648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6649)
!6649 = !{!6650}
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6648, file: !122, line: 232, baseType: !6651, size: 64)
!6651 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6626)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6619, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6619, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6654 = !DIDerivedType(tag: DW_TAG_member, scope: !6619, file: !158, line: 90, baseType: !6655, size: 16, offset: 112)
!6655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6619, file: !158, line: 90, size: 16, elements: !6656)
!6656 = !{!6657, !6662}
!6657 = !DIDerivedType(tag: DW_TAG_member, scope: !6655, file: !158, line: 91, baseType: !6658, size: 16)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6655, file: !158, line: 91, size: 16, elements: !6659)
!6659 = !{!6660, !6661}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6658, file: !158, line: 96, baseType: !190, size: 8)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6658, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6655, file: !158, line: 100, baseType: !194, size: 16)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6619, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6619, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6619, file: !158, line: 131, baseType: !6666, size: 192, offset: 192)
!6666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6667)
!6667 = !{!6668, !6669, !6675}
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6666, file: !122, line: 245, baseType: !6625, size: 64)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6666, file: !122, line: 246, baseType: !6670, size: 32, offset: 64)
!6670 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6671)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 32)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{null, !6674}
!6674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6666, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6616, file: !158, line: 250, baseType: !6677, size: 288, offset: 384)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6678)
!6678 = !{!6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6677, file: !211, line: 26, baseType: !110, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6677, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6677, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6677, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6677, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6677, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6677, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6677, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6677, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6616, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6616, file: !158, line: 256, baseType: !6647, size: 64, offset: 704)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6616, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6616, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6616, file: !158, line: 300, baseType: !6693, size: 96, offset: 1056)
!6693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6694)
!6694 = !{!6695, !6696, !6697}
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6693, file: !158, line: 153, baseType: !22, size: 32)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6693, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6693, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6616, file: !158, line: 325, baseType: !6699, size: 32, offset: 1152)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 32)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6701)
!6701 = !{!6702, !6708, !6709}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6700, file: !118, line: 5074, baseType: !6703, size: 96)
!6703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6704)
!6704 = !{!6705, !6706, !6707}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6703, file: !243, line: 57, baseType: !246, size: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6703, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6703, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6700, file: !118, line: 5075, baseType: !6647, size: 64, offset: 96)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6700, file: !118, line: 5076, baseType: !6710, size: 32, offset: 160)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6711)
!6711 = !{!6712}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6710, file: !253, line: 52, baseType: !22, size: 32)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6616, file: !158, line: 343, baseType: !6714, size: 64, offset: 1184)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6715)
!6715 = !{!6716, !6717}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6714, file: !211, line: 63, baseType: !110, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6714, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6719, size: 32)
!6719 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3419, line: 44, baseType: !6720)
!6720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6721)
!6721 = !{!6722}
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6720, file: !147, line: 48, baseType: !150, size: 8)
!6723 = !{!6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731}
!6724 = !DILocalVariable(name: "thread", arg: 1, scope: !6611, file: !6612, line: 56, type: !6615)
!6725 = !DILocalVariable(name: "stack", arg: 2, scope: !6611, file: !6612, line: 56, type: !6718)
!6726 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6611, file: !6612, line: 57, type: !285)
!6727 = !DILocalVariable(name: "entry", arg: 4, scope: !6611, file: !6612, line: 57, type: !3420)
!6728 = !DILocalVariable(name: "p1", arg: 5, scope: !6611, file: !6612, line: 58, type: !107)
!6729 = !DILocalVariable(name: "p2", arg: 6, scope: !6611, file: !6612, line: 58, type: !107)
!6730 = !DILocalVariable(name: "p3", arg: 7, scope: !6611, file: !6612, line: 58, type: !107)
!6731 = !DILocalVariable(name: "iframe", scope: !6611, file: !6612, line: 60, type: !2750)
!6732 = !DILocation(line: 0, scope: !6611)
!6733 = !DILocation(line: 85, column: 11, scope: !6611)
!6734 = !DILocation(line: 93, column: 10, scope: !6611)
!6735 = !DILocation(line: 98, column: 13, scope: !6611)
!6736 = !DILocation(line: 100, column: 15, scope: !6611)
!6737 = !DILocation(line: 100, column: 10, scope: !6611)
!6738 = !DILocation(line: 100, column: 13, scope: !6611)
!6739 = !DILocation(line: 101, column: 15, scope: !6611)
!6740 = !DILocation(line: 101, column: 10, scope: !6611)
!6741 = !DILocation(line: 101, column: 13, scope: !6611)
!6742 = !DILocation(line: 102, column: 15, scope: !6611)
!6743 = !DILocation(line: 102, column: 10, scope: !6611)
!6744 = !DILocation(line: 102, column: 13, scope: !6611)
!6745 = !DILocation(line: 103, column: 15, scope: !6611)
!6746 = !DILocation(line: 103, column: 10, scope: !6611)
!6747 = !DILocation(line: 103, column: 13, scope: !6611)
!6748 = !DILocation(line: 106, column: 10, scope: !6611)
!6749 = !DILocation(line: 106, column: 15, scope: !6611)
!6750 = !DILocation(line: 122, column: 29, scope: !6611)
!6751 = !DILocation(line: 122, column: 23, scope: !6611)
!6752 = !DILocation(line: 122, column: 27, scope: !6611)
!6753 = !DILocation(line: 123, column: 15, scope: !6611)
!6754 = !DILocation(line: 123, column: 23, scope: !6611)
!6755 = !DILocation(line: 143, column: 1, scope: !6611)
!6756 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6612, file: !6612, line: 385, type: !6757, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !6760)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{!110, !6759, !6759}
!6759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6760 = !{!6761, !6762, !6763, !6766}
!6761 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6756, file: !6612, line: 385, type: !6759)
!6762 = !DILocalVariable(name: "psp", arg: 2, scope: !6756, file: !6612, line: 385, type: !6759)
!6763 = !DILocalVariable(name: "thread", scope: !6756, file: !6612, line: 388, type: !6764)
!6764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6765, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6616)
!6766 = !DILocalVariable(name: "guard_len", scope: !6756, file: !6612, line: 405, type: !110)
!6767 = !DILocation(line: 0, scope: !6756)
!6768 = !DILocation(line: 388, column: 34, scope: !6756)
!6769 = !DILocation(line: 390, column: 13, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6756, file: !6612, line: 390, column: 6)
!6771 = !DILocation(line: 390, column: 6, scope: !6756)
!6772 = !DILocation(line: 438, column: 6, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6756, file: !6612, line: 438, column: 6)
!6774 = !DILocation(line: 438, column: 6, scope: !6756)
!6775 = !DILocation(line: 442, column: 3, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !6612, line: 440, column: 22)
!6777 = !DILocation(line: 455, column: 1, scope: !6756)
!6778 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6612, file: !6612, line: 530, type: !6779, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2747, retainedNodes: !6781)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{null, !6615, !285, !3420}
!6781 = !{!6782, !6783, !6784}
!6782 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6778, file: !6612, line: 530, type: !6615)
!6783 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6778, file: !6612, line: 530, type: !285)
!6784 = !DILocalVariable(name: "_main", arg: 3, scope: !6778, file: !6612, line: 531, type: !3420)
!6785 = !DILocation(line: 0, scope: !6778)
!6786 = !DILocation(line: 535, column: 11, scope: !6778)
!6787 = !DILocation(line: 560, column: 2, scope: !6778)
!6788 = !DILocation(line: 576, column: 2, scope: !6778)
!6789 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6790 = !DILocation(line: 603, column: 2, scope: !6778)
!6791 = distinct !DISubprogram(name: "z_arm_fault", scope: !6792, file: !6792, line: 1036, type: !6793, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !6808)
!6792 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6793 = !DISubroutineType(types: !6794)
!6794 = !{null, !110, !110, !110, !6795}
!6795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6796, size: 32)
!6796 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6797)
!6797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6798)
!6798 = !{!6799, !6800, !6801, !6802, !6803, !6804, !6805, !6806, !6807}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6797, file: !211, line: 26, baseType: !110, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6797, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6797, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6797, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6797, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6797, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6797, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6797, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6797, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6808 = !{!6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818}
!6809 = !DILocalVariable(name: "msp", arg: 1, scope: !6791, file: !6792, line: 1036, type: !110)
!6810 = !DILocalVariable(name: "psp", arg: 2, scope: !6791, file: !6792, line: 1036, type: !110)
!6811 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6791, file: !6792, line: 1036, type: !110)
!6812 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6791, file: !6792, line: 1037, type: !6795)
!6813 = !DILocalVariable(name: "reason", scope: !6791, file: !6792, line: 1039, type: !110)
!6814 = !DILocalVariable(name: "fault", scope: !6791, file: !6792, line: 1040, type: !109)
!6815 = !DILocalVariable(name: "recoverable", scope: !6791, file: !6792, line: 1041, type: !347)
!6816 = !DILocalVariable(name: "nested_exc", scope: !6791, file: !6792, line: 1041, type: !347)
!6817 = !DILocalVariable(name: "esf", scope: !6791, file: !6792, line: 1042, type: !2818)
!6818 = !DILocalVariable(name: "esf_copy", scope: !6791, file: !6792, line: 1047, type: !2819)
!6819 = !DILocation(line: 0, scope: !6791)
!6820 = !DILocation(line: 1040, column: 19, scope: !6791)
!6821 = !DILocation(line: 1041, column: 2, scope: !6791)
!6822 = !DILocation(line: 1047, column: 2, scope: !6791)
!6823 = !DILocation(line: 1047, column: 15, scope: !6791)
!6824 = !DILocalVariable(name: "key", arg: 1, scope: !6825, file: !6161, line: 84, type: !32)
!6825 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !6826)
!6826 = !{!6824}
!6827 = !DILocation(line: 0, scope: !6825, inlinedAt: !6828)
!6828 = distinct !DILocation(line: 1050, column: 2, scope: !6791)
!6829 = !DILocation(line: 95, column: 2, scope: !6825, inlinedAt: !6828)
!6830 = !{i64 2314863}
!6831 = !DILocation(line: 1055, column: 9, scope: !6791)
!6832 = !DILocation(line: 1056, column: 2, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6792, line: 1056, column: 2)
!6834 = distinct !DILexicalBlock(scope: !6791, file: !6792, line: 1056, column: 2)
!6835 = !DILocation(line: 1056, column: 2, scope: !6834)
!6836 = !DILocation(line: 1056, column: 2, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !6792, line: 1056, column: 2)
!6838 = !DILocation(line: 1040, column: 24, scope: !6791)
!6839 = !DILocation(line: 1063, column: 11, scope: !6791)
!6840 = !DILocation(line: 1064, column: 6, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6791, file: !6792, line: 1064, column: 6)
!6842 = !{i8 0, i8 2}
!6843 = !DILocation(line: 1064, column: 6, scope: !6791)
!6844 = !DILocation(line: 1070, column: 20, scope: !6791)
!6845 = !DILocation(line: 1070, column: 2, scope: !6791)
!6846 = !DILocation(line: 1089, column: 6, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6791, file: !6792, line: 1089, column: 6)
!6848 = !DILocation(line: 0, scope: !6847)
!6849 = !DILocation(line: 1089, column: 6, scope: !6791)
!6850 = !DILocation(line: 1090, column: 28, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6792, line: 1090, column: 7)
!6852 = distinct !DILexicalBlock(scope: !6847, file: !6792, line: 1089, column: 18)
!6853 = !DILocation(line: 1090, column: 44, scope: !6851)
!6854 = !DILocation(line: 1090, column: 7, scope: !6852)
!6855 = !DILocation(line: 1091, column: 24, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !6792, line: 1090, column: 50)
!6857 = !DILocation(line: 1092, column: 3, scope: !6856)
!6858 = !DILocation(line: 1094, column: 23, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6847, file: !6792, line: 1093, column: 9)
!6860 = !DILocation(line: 1097, column: 2, scope: !6791)
!6861 = !DILocation(line: 1098, column: 1, scope: !6791)
!6862 = distinct !DISubprogram(name: "get_esf", scope: !6792, file: !6792, line: 894, type: !6863, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !6866)
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!2818, !110, !110, !110, !6865}
!6865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6866 = !{!6867, !6868, !6869, !6870, !6871, !6872}
!6867 = !DILocalVariable(name: "msp", arg: 1, scope: !6862, file: !6792, line: 894, type: !110)
!6868 = !DILocalVariable(name: "psp", arg: 2, scope: !6862, file: !6792, line: 894, type: !110)
!6869 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6862, file: !6792, line: 894, type: !110)
!6870 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6862, file: !6792, line: 895, type: !6865)
!6871 = !DILocalVariable(name: "alternative_state_exc", scope: !6862, file: !6792, line: 897, type: !347)
!6872 = !DILocalVariable(name: "ptr_esf", scope: !6862, file: !6792, line: 898, type: !2818)
!6873 = !DILocation(line: 0, scope: !6862)
!6874 = !DILocation(line: 900, column: 14, scope: !6862)
!6875 = !DILocation(line: 902, column: 49, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6862, file: !6792, line: 902, column: 6)
!6877 = !DILocation(line: 902, column: 6, scope: !6862)
!6878 = !DILocation(line: 983, column: 44, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6862, file: !6792, line: 983, column: 6)
!6880 = !DILocation(line: 985, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6792, line: 985, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6792, line: 985, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6792, line: 985, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6792, line: 985, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6879, file: !6792, line: 984, column: 47)
!6886 = !DILocation(line: 986, column: 3, scope: !6885)
!6887 = !DILocation(line: 983, column: 18, scope: !6879)
!6888 = !DILocation(line: 991, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6792, line: 990, column: 30)
!6890 = distinct !DILexicalBlock(scope: !6862, file: !6792, line: 990, column: 6)
!6891 = !DILocation(line: 998, column: 16, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6792, line: 995, column: 10)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !6792, line: 991, column: 7)
!6894 = !DILocation(line: 1002, column: 2, scope: !6862)
!6895 = !DILocation(line: 1003, column: 1, scope: !6862)
!6896 = distinct !DISubprogram(name: "fault_handle", scope: !6792, file: !6792, line: 786, type: !6897, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !6899)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{!110, !2818, !109, !6865}
!6899 = !{!6900, !6901, !6902, !6903}
!6900 = !DILocalVariable(name: "esf", arg: 1, scope: !6896, file: !6792, line: 786, type: !2818)
!6901 = !DILocalVariable(name: "fault", arg: 2, scope: !6896, file: !6792, line: 786, type: !109)
!6902 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6896, file: !6792, line: 786, type: !6865)
!6903 = !DILocalVariable(name: "reason", scope: !6896, file: !6792, line: 788, type: !110)
!6904 = !DILocation(line: 0, scope: !6896)
!6905 = !DILocation(line: 790, column: 15, scope: !6896)
!6906 = !DILocation(line: 792, column: 2, scope: !6896)
!6907 = !DILocation(line: 794, column: 12, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6896, file: !6792, line: 792, column: 17)
!6909 = !DILocation(line: 795, column: 3, scope: !6908)
!6910 = !DILocation(line: 800, column: 12, scope: !6908)
!6911 = !DILocation(line: 801, column: 3, scope: !6908)
!6912 = !DILocation(line: 803, column: 12, scope: !6908)
!6913 = !DILocation(line: 804, column: 3, scope: !6908)
!6914 = !DILocation(line: 806, column: 12, scope: !6908)
!6915 = !DILocation(line: 807, column: 3, scope: !6908)
!6916 = !DILocation(line: 814, column: 3, scope: !6908)
!6917 = !DILocation(line: 815, column: 3, scope: !6908)
!6918 = !DILocation(line: 820, column: 3, scope: !6908)
!6919 = !DILocation(line: 821, column: 3, scope: !6908)
!6920 = !DILocation(line: 829, column: 2, scope: !6896)
!6921 = distinct !DISubprogram(name: "hard_fault", scope: !6792, file: !6792, line: 709, type: !6922, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !6924)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!110, !2818, !6865}
!6924 = !{!6925, !6926, !6927}
!6925 = !DILocalVariable(name: "esf", arg: 1, scope: !6921, file: !6792, line: 709, type: !2818)
!6926 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6921, file: !6792, line: 709, type: !6865)
!6927 = !DILocalVariable(name: "reason", scope: !6921, file: !6792, line: 711, type: !110)
!6928 = !DILocation(line: 0, scope: !6921)
!6929 = !DILocation(line: 713, column: 2, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6792, line: 713, column: 2)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6792, line: 713, column: 2)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6792, line: 713, column: 2)
!6933 = distinct !DILexicalBlock(scope: !6921, file: !6792, line: 713, column: 2)
!6934 = !DILocation(line: 732, column: 15, scope: !6921)
!6935 = !DILocation(line: 734, column: 12, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6921, file: !6792, line: 734, column: 6)
!6937 = !DILocation(line: 734, column: 17, scope: !6936)
!6938 = !DILocation(line: 734, column: 41, scope: !6936)
!6939 = !DILocation(line: 734, column: 6, scope: !6921)
!6940 = !DILocation(line: 735, column: 3, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6792, line: 735, column: 3)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6792, line: 735, column: 3)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6792, line: 735, column: 3)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6792, line: 735, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6936, file: !6792, line: 734, column: 47)
!6946 = !DILocation(line: 736, column: 2, scope: !6945)
!6947 = !DILocation(line: 736, column: 19, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6936, file: !6792, line: 736, column: 13)
!6949 = !DILocation(line: 736, column: 49, scope: !6948)
!6950 = !DILocation(line: 736, column: 13, scope: !6936)
!6951 = !DILocation(line: 737, column: 3, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6792, line: 737, column: 3)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !6792, line: 737, column: 3)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6792, line: 737, column: 3)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6792, line: 737, column: 3)
!6956 = distinct !DILexicalBlock(scope: !6948, file: !6792, line: 736, column: 55)
!6957 = !DILocation(line: 738, column: 2, scope: !6956)
!6958 = !DILocation(line: 738, column: 19, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6948, file: !6792, line: 738, column: 13)
!6960 = !DILocation(line: 738, column: 24, scope: !6959)
!6961 = !DILocation(line: 738, column: 47, scope: !6959)
!6962 = !DILocation(line: 738, column: 13, scope: !6948)
!6963 = !DILocation(line: 739, column: 3, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6792, line: 739, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6792, line: 739, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6792, line: 739, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6792, line: 739, column: 3)
!6968 = distinct !DILexicalBlock(scope: !6959, file: !6792, line: 738, column: 53)
!6969 = !DILocation(line: 740, column: 7, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6968, file: !6792, line: 740, column: 7)
!6971 = !DILocation(line: 740, column: 7, scope: !6968)
!6972 = !DILocation(line: 741, column: 4, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6792, line: 741, column: 4)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !6792, line: 741, column: 4)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6792, line: 741, column: 4)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6792, line: 741, column: 4)
!6977 = distinct !DILexicalBlock(scope: !6970, file: !6792, line: 740, column: 38)
!6978 = !DILocation(line: 742, column: 24, scope: !6977)
!6979 = !DILocation(line: 743, column: 3, scope: !6977)
!6980 = !DILocation(line: 743, column: 20, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6970, file: !6792, line: 743, column: 14)
!6982 = !DILocation(line: 743, column: 25, scope: !6981)
!6983 = !DILocation(line: 743, column: 52, scope: !6981)
!6984 = !DILocation(line: 743, column: 14, scope: !6970)
!6985 = !DILocation(line: 744, column: 13, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6981, file: !6792, line: 743, column: 58)
!6987 = !DILocation(line: 745, column: 3, scope: !6986)
!6988 = !DILocation(line: 745, column: 20, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6981, file: !6792, line: 745, column: 14)
!6990 = !DILocation(line: 745, column: 25, scope: !6989)
!6991 = !DILocation(line: 745, column: 52, scope: !6989)
!6992 = !DILocation(line: 745, column: 14, scope: !6981)
!6993 = !DILocation(line: 746, column: 13, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !6792, line: 745, column: 58)
!6995 = !DILocation(line: 747, column: 3, scope: !6994)
!6996 = !DILocation(line: 747, column: 20, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6989, file: !6792, line: 747, column: 14)
!6998 = !DILocation(line: 747, column: 52, scope: !6997)
!6999 = !DILocation(line: 747, column: 14, scope: !6989)
!7000 = !DILocation(line: 748, column: 13, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6997, file: !6792, line: 747, column: 58)
!7002 = !DILocation(line: 754, column: 4, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6792, line: 754, column: 4)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6792, line: 754, column: 4)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6792, line: 754, column: 4)
!7006 = distinct !DILexicalBlock(scope: !6997, file: !6792, line: 753, column: 10)
!7007 = !DILocation(line: 758, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6792, line: 758, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6792, line: 758, column: 3)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6792, line: 758, column: 3)
!7011 = distinct !DILexicalBlock(scope: !6959, file: !6792, line: 757, column: 9)
!7012 = !DILocation(line: 766, column: 2, scope: !6921)
!7013 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6792, file: !6792, line: 229, type: !6897, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7014)
!7014 = !{!7015, !7016, !7017, !7018, !7019, !7020, !7023}
!7015 = !DILocalVariable(name: "esf", arg: 1, scope: !7013, file: !6792, line: 229, type: !2818)
!7016 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7013, file: !6792, line: 229, type: !109)
!7017 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7013, file: !6792, line: 230, type: !6865)
!7018 = !DILocalVariable(name: "reason", scope: !7013, file: !6792, line: 232, type: !110)
!7019 = !DILocalVariable(name: "mmfar", scope: !7013, file: !6792, line: 233, type: !110)
!7020 = !DILocalVariable(name: "temp", scope: !7021, file: !6792, line: 254, type: !110)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6792, line: 244, column: 48)
!7022 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 244, column: 6)
!7023 = !DILocalVariable(name: "min_stack_ptr", scope: !7024, file: !6792, line: 309, type: !110)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6792, line: 308, column: 43)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6792, line: 308, column: 7)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6792, line: 289, column: 40)
!7027 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 288, column: 6)
!7028 = !DILocation(line: 0, scope: !7013)
!7029 = !DILocation(line: 235, column: 2, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6792, line: 235, column: 2)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6792, line: 235, column: 2)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6792, line: 235, column: 2)
!7033 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 235, column: 2)
!7034 = !DILocation(line: 237, column: 12, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 237, column: 6)
!7036 = !DILocation(line: 237, column: 17, scope: !7035)
!7037 = !DILocation(line: 237, column: 41, scope: !7035)
!7038 = !DILocation(line: 237, column: 6, scope: !7013)
!7039 = !DILocation(line: 238, column: 3, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6792, line: 238, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6792, line: 238, column: 3)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !6792, line: 238, column: 3)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6792, line: 238, column: 3)
!7044 = distinct !DILexicalBlock(scope: !7035, file: !6792, line: 237, column: 47)
!7045 = !DILocation(line: 240, column: 2, scope: !7044)
!7046 = !DILocation(line: 241, column: 12, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 241, column: 6)
!7048 = !DILocation(line: 241, column: 17, scope: !7047)
!7049 = !DILocation(line: 241, column: 43, scope: !7047)
!7050 = !DILocation(line: 241, column: 6, scope: !7013)
!7051 = !DILocation(line: 242, column: 3, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !6792, line: 242, column: 3)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !6792, line: 242, column: 3)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !6792, line: 242, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !6792, line: 242, column: 3)
!7056 = distinct !DILexicalBlock(scope: !7047, file: !6792, line: 241, column: 49)
!7057 = !DILocation(line: 243, column: 2, scope: !7056)
!7058 = !DILocation(line: 244, column: 12, scope: !7022)
!7059 = !DILocation(line: 244, column: 17, scope: !7022)
!7060 = !DILocation(line: 244, column: 42, scope: !7022)
!7061 = !DILocation(line: 244, column: 6, scope: !7013)
!7062 = !DILocation(line: 245, column: 3, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6792, line: 245, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6792, line: 245, column: 3)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !6792, line: 245, column: 3)
!7066 = distinct !DILexicalBlock(scope: !7021, file: !6792, line: 245, column: 3)
!7067 = !DILocation(line: 254, column: 24, scope: !7021)
!7068 = !DILocation(line: 0, scope: !7021)
!7069 = !DILocation(line: 256, column: 13, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7021, file: !6792, line: 256, column: 7)
!7071 = !DILocation(line: 256, column: 18, scope: !7070)
!7072 = !DILocation(line: 256, column: 44, scope: !7070)
!7073 = !DILocation(line: 256, column: 7, scope: !7021)
!7074 = !DILocation(line: 258, column: 4, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6792, line: 258, column: 4)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6792, line: 258, column: 4)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6792, line: 258, column: 4)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !6792, line: 258, column: 4)
!7079 = distinct !DILexicalBlock(scope: !7070, file: !6792, line: 256, column: 50)
!7080 = !DILocation(line: 259, column: 24, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7079, file: !6792, line: 259, column: 8)
!7082 = !DILocation(line: 259, column: 8, scope: !7079)
!7083 = !DILocation(line: 261, column: 15, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7081, file: !6792, line: 259, column: 30)
!7085 = !DILocation(line: 262, column: 4, scope: !7084)
!7086 = !DILocation(line: 265, column: 12, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 265, column: 6)
!7088 = !DILocation(line: 265, column: 17, scope: !7087)
!7089 = !DILocation(line: 265, column: 42, scope: !7087)
!7090 = !DILocation(line: 265, column: 6, scope: !7013)
!7091 = !DILocation(line: 266, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6792, line: 266, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6792, line: 266, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6792, line: 266, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6792, line: 266, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7087, file: !6792, line: 265, column: 48)
!7097 = !DILocation(line: 267, column: 2, scope: !7096)
!7098 = !DILocation(line: 269, column: 12, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 269, column: 6)
!7100 = !DILocation(line: 269, column: 17, scope: !7099)
!7101 = !DILocation(line: 269, column: 41, scope: !7099)
!7102 = !DILocation(line: 269, column: 6, scope: !7013)
!7103 = !DILocation(line: 270, column: 3, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6792, line: 270, column: 3)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6792, line: 270, column: 3)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6792, line: 270, column: 3)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6792, line: 270, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7099, file: !6792, line: 269, column: 47)
!7109 = !DILocation(line: 272, column: 2, scope: !7108)
!7110 = !DILocation(line: 288, column: 12, scope: !7027)
!7111 = !DILocation(line: 288, column: 17, scope: !7027)
!7112 = !DILocation(line: 288, column: 41, scope: !7027)
!7113 = !DILocation(line: 289, column: 9, scope: !7027)
!7114 = !DILocation(line: 289, column: 14, scope: !7027)
!7115 = !DILocation(line: 288, column: 6, scope: !7013)
!7116 = !DILocation(line: 308, column: 12, scope: !7025)
!7117 = !DILocation(line: 308, column: 17, scope: !7025)
!7118 = !DILocation(line: 308, column: 7, scope: !7026)
!7119 = !DILocation(line: 310, column: 6, scope: !7024)
!7120 = !DILocation(line: 309, column: 29, scope: !7024)
!7121 = !DILocation(line: 0, scope: !7024)
!7122 = !DILocation(line: 312, column: 8, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7024, file: !6792, line: 312, column: 8)
!7124 = !DILocation(line: 312, column: 8, scope: !7024)
!7125 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7126, file: !6482, line: 1099, type: !110)
!7126 = distinct !DISubprogram(name: "__set_PSP", scope: !6482, file: !6482, line: 1099, type: !6579, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7127)
!7127 = !{!7125}
!7128 = !DILocation(line: 0, scope: !7126, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 338, column: 5, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7123, file: !6792, line: 312, column: 23)
!7131 = !DILocation(line: 1101, column: 3, scope: !7126, inlinedAt: !7129)
!7132 = !{i64 3762087}
!7133 = !DILocation(line: 341, column: 4, scope: !7130)
!7134 = !DILocation(line: 342, column: 5, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6792, line: 342, column: 5)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6792, line: 342, column: 5)
!7137 = distinct !DILexicalBlock(scope: !7123, file: !6792, line: 341, column: 11)
!7138 = !DILocation(line: 342, column: 5, scope: !7136)
!7139 = !DILocation(line: 342, column: 5, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7135, file: !6792, line: 342, column: 5)
!7141 = !DILocation(line: 360, column: 12, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7013, file: !6792, line: 360, column: 6)
!7143 = !DILocation(line: 360, column: 17, scope: !7142)
!7144 = !DILocation(line: 360, column: 41, scope: !7142)
!7145 = !DILocation(line: 360, column: 6, scope: !7013)
!7146 = !DILocation(line: 361, column: 14, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7142, file: !6792, line: 360, column: 47)
!7148 = !DILocation(line: 362, column: 2, scope: !7147)
!7149 = !DILocation(line: 366, column: 12, scope: !7013)
!7150 = !DILocation(line: 369, column: 15, scope: !7013)
!7151 = !DILocation(line: 371, column: 2, scope: !7013)
!7152 = distinct !DISubprogram(name: "bus_fault", scope: !6792, file: !6792, line: 383, type: !7153, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7155)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!109, !2818, !109, !6865}
!7155 = !{!7156, !7157, !7158, !7159, !7160}
!7156 = !DILocalVariable(name: "esf", arg: 1, scope: !7152, file: !6792, line: 383, type: !2818)
!7157 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7152, file: !6792, line: 383, type: !109)
!7158 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7152, file: !6792, line: 383, type: !6865)
!7159 = !DILocalVariable(name: "reason", scope: !7152, file: !6792, line: 385, type: !110)
!7160 = !DILocalVariable(name: "bfar", scope: !7161, file: !6792, line: 405, type: !110)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6792, line: 395, column: 42)
!7162 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 395, column: 6)
!7163 = !DILocation(line: 0, scope: !7152)
!7164 = !DILocation(line: 387, column: 2, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6792, line: 387, column: 2)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !6792, line: 387, column: 2)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !6792, line: 387, column: 2)
!7168 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 387, column: 2)
!7169 = !DILocation(line: 389, column: 11, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 389, column: 6)
!7171 = !DILocation(line: 389, column: 16, scope: !7170)
!7172 = !DILocation(line: 389, column: 6, scope: !7152)
!7173 = !DILocation(line: 390, column: 3, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !6792, line: 390, column: 3)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6792, line: 390, column: 3)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6792, line: 390, column: 3)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6792, line: 390, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7170, file: !6792, line: 389, column: 39)
!7179 = !DILocation(line: 391, column: 2, scope: !7178)
!7180 = !DILocation(line: 392, column: 11, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 392, column: 6)
!7182 = !DILocation(line: 392, column: 16, scope: !7181)
!7183 = !DILocation(line: 392, column: 6, scope: !7152)
!7184 = !DILocation(line: 393, column: 3, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !6792, line: 393, column: 3)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !6792, line: 393, column: 3)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !6792, line: 393, column: 3)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6792, line: 393, column: 3)
!7189 = distinct !DILexicalBlock(scope: !7181, file: !6792, line: 392, column: 41)
!7190 = !DILocation(line: 394, column: 2, scope: !7189)
!7191 = !DILocation(line: 395, column: 11, scope: !7162)
!7192 = !DILocation(line: 395, column: 16, scope: !7162)
!7193 = !DILocation(line: 395, column: 6, scope: !7152)
!7194 = !DILocation(line: 396, column: 3, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !6792, line: 396, column: 3)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !6792, line: 396, column: 3)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !6792, line: 396, column: 3)
!7198 = distinct !DILexicalBlock(scope: !7161, file: !6792, line: 396, column: 3)
!7199 = !DILocation(line: 405, column: 3, scope: !7161)
!7200 = !DILocation(line: 0, scope: !7161)
!7201 = !DILocation(line: 407, column: 13, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7161, file: !6792, line: 407, column: 7)
!7203 = !DILocation(line: 407, column: 18, scope: !7202)
!7204 = !DILocation(line: 407, column: 44, scope: !7202)
!7205 = !DILocation(line: 407, column: 7, scope: !7161)
!7206 = !DILocation(line: 408, column: 4, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !6792, line: 408, column: 4)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !6792, line: 408, column: 4)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !6792, line: 408, column: 4)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !6792, line: 408, column: 4)
!7211 = distinct !DILexicalBlock(scope: !7202, file: !6792, line: 407, column: 50)
!7212 = !DILocation(line: 409, column: 24, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7211, file: !6792, line: 409, column: 8)
!7214 = !DILocation(line: 409, column: 8, scope: !7211)
!7215 = !DILocation(line: 411, column: 15, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7213, file: !6792, line: 409, column: 30)
!7217 = !DILocation(line: 412, column: 4, scope: !7216)
!7218 = !DILocation(line: 415, column: 11, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 415, column: 6)
!7220 = !DILocation(line: 415, column: 16, scope: !7219)
!7221 = !DILocation(line: 415, column: 6, scope: !7152)
!7222 = !DILocation(line: 416, column: 3, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !6792, line: 416, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !6792, line: 416, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !6792, line: 416, column: 3)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !6792, line: 416, column: 3)
!7227 = distinct !DILexicalBlock(scope: !7219, file: !6792, line: 415, column: 44)
!7228 = !DILocation(line: 417, column: 2, scope: !7227)
!7229 = !DILocation(line: 418, column: 12, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7152, file: !6792, line: 418, column: 6)
!7231 = !DILocation(line: 418, column: 17, scope: !7230)
!7232 = !DILocation(line: 418, column: 41, scope: !7230)
!7233 = !DILocation(line: 418, column: 6, scope: !7152)
!7234 = !DILocation(line: 423, column: 18, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7230, file: !6792, line: 423, column: 13)
!7236 = !DILocation(line: 423, column: 23, scope: !7235)
!7237 = !DILocation(line: 423, column: 13, scope: !7230)
!7238 = !DILocation(line: 0, scope: !7230)
!7239 = !DILocation(line: 524, column: 12, scope: !7152)
!7240 = !DILocation(line: 526, column: 15, scope: !7152)
!7241 = !DILocation(line: 528, column: 2, scope: !7152)
!7242 = distinct !DISubprogram(name: "usage_fault", scope: !6792, file: !6792, line: 539, type: !7243, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7247)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{!110, !7245}
!7245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7246, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2819)
!7247 = !{!7248, !7249}
!7248 = !DILocalVariable(name: "esf", arg: 1, scope: !7242, file: !6792, line: 539, type: !7245)
!7249 = !DILocalVariable(name: "reason", scope: !7242, file: !6792, line: 541, type: !110)
!7250 = !DILocation(line: 0, scope: !7242)
!7251 = !DILocation(line: 543, column: 2, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !6792, line: 543, column: 2)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !6792, line: 543, column: 2)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !6792, line: 543, column: 2)
!7255 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 543, column: 2)
!7256 = !DILocation(line: 546, column: 12, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 546, column: 6)
!7258 = !DILocation(line: 546, column: 17, scope: !7257)
!7259 = !DILocation(line: 546, column: 43, scope: !7257)
!7260 = !DILocation(line: 546, column: 6, scope: !7242)
!7261 = !DILocation(line: 547, column: 3, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !6792, line: 547, column: 3)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !6792, line: 547, column: 3)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !6792, line: 547, column: 3)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !6792, line: 547, column: 3)
!7266 = distinct !DILexicalBlock(scope: !7257, file: !6792, line: 546, column: 49)
!7267 = !DILocation(line: 548, column: 2, scope: !7266)
!7268 = !DILocation(line: 549, column: 12, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 549, column: 6)
!7270 = !DILocation(line: 549, column: 17, scope: !7269)
!7271 = !DILocation(line: 549, column: 43, scope: !7269)
!7272 = !DILocation(line: 549, column: 6, scope: !7242)
!7273 = !DILocation(line: 550, column: 3, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !6792, line: 550, column: 3)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !6792, line: 550, column: 3)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !6792, line: 550, column: 3)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !6792, line: 550, column: 3)
!7278 = distinct !DILexicalBlock(scope: !7269, file: !6792, line: 549, column: 49)
!7279 = !DILocation(line: 551, column: 2, scope: !7278)
!7280 = !DILocation(line: 567, column: 12, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 567, column: 6)
!7282 = !DILocation(line: 567, column: 17, scope: !7281)
!7283 = !DILocation(line: 567, column: 38, scope: !7281)
!7284 = !DILocation(line: 567, column: 6, scope: !7242)
!7285 = !DILocation(line: 568, column: 3, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !6792, line: 568, column: 3)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !6792, line: 568, column: 3)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !6792, line: 568, column: 3)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !6792, line: 568, column: 3)
!7290 = distinct !DILexicalBlock(scope: !7281, file: !6792, line: 567, column: 44)
!7291 = !DILocation(line: 569, column: 2, scope: !7290)
!7292 = !DILocation(line: 570, column: 12, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 570, column: 6)
!7294 = !DILocation(line: 570, column: 17, scope: !7293)
!7295 = !DILocation(line: 570, column: 39, scope: !7293)
!7296 = !DILocation(line: 570, column: 6, scope: !7242)
!7297 = !DILocation(line: 571, column: 3, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !6792, line: 571, column: 3)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !6792, line: 571, column: 3)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !6792, line: 571, column: 3)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !6792, line: 571, column: 3)
!7302 = distinct !DILexicalBlock(scope: !7293, file: !6792, line: 570, column: 45)
!7303 = !DILocation(line: 572, column: 2, scope: !7302)
!7304 = !DILocation(line: 573, column: 12, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 573, column: 6)
!7306 = !DILocation(line: 573, column: 17, scope: !7305)
!7307 = !DILocation(line: 573, column: 42, scope: !7305)
!7308 = !DILocation(line: 573, column: 6, scope: !7242)
!7309 = !DILocation(line: 574, column: 3, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !6792, line: 574, column: 3)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !6792, line: 574, column: 3)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !6792, line: 574, column: 3)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !6792, line: 574, column: 3)
!7314 = distinct !DILexicalBlock(scope: !7305, file: !6792, line: 573, column: 48)
!7315 = !DILocation(line: 575, column: 2, scope: !7314)
!7316 = !DILocation(line: 576, column: 12, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7242, file: !6792, line: 576, column: 6)
!7318 = !DILocation(line: 576, column: 17, scope: !7317)
!7319 = !DILocation(line: 576, column: 44, scope: !7317)
!7320 = !DILocation(line: 576, column: 6, scope: !7242)
!7321 = !DILocation(line: 577, column: 3, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !6792, line: 577, column: 3)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !6792, line: 577, column: 3)
!7324 = distinct !DILexicalBlock(scope: !7325, file: !6792, line: 577, column: 3)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !6792, line: 577, column: 3)
!7326 = distinct !DILexicalBlock(scope: !7317, file: !6792, line: 576, column: 50)
!7327 = !DILocation(line: 578, column: 2, scope: !7326)
!7328 = !DILocation(line: 581, column: 12, scope: !7242)
!7329 = !DILocation(line: 583, column: 2, scope: !7242)
!7330 = distinct !DISubprogram(name: "debug_monitor", scope: !6792, file: !6792, line: 632, type: !7331, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7333)
!7331 = !DISubroutineType(types: !7332)
!7332 = !{null, !2818, !6865}
!7333 = !{!7334, !7335}
!7334 = !DILocalVariable(name: "esf", arg: 1, scope: !7330, file: !6792, line: 632, type: !2818)
!7335 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7330, file: !6792, line: 632, type: !6865)
!7336 = !DILocation(line: 0, scope: !7330)
!7337 = !DILocation(line: 634, column: 15, scope: !7330)
!7338 = !DILocation(line: 636, column: 2, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !6792, line: 636, column: 2)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !6792, line: 636, column: 2)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !6792, line: 636, column: 2)
!7342 = distinct !DILexicalBlock(scope: !7330, file: !6792, line: 636, column: 2)
!7343 = !DILocation(line: 652, column: 1, scope: !7330)
!7344 = distinct !DISubprogram(name: "reserved_exception", scope: !6792, file: !6792, line: 776, type: !7345, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7347)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{null, !7245, !109}
!7347 = !{!7348, !7349}
!7348 = !DILocalVariable(name: "esf", arg: 1, scope: !7344, file: !6792, line: 776, type: !7245)
!7349 = !DILocalVariable(name: "fault", arg: 2, scope: !7344, file: !6792, line: 776, type: !109)
!7350 = !DILocation(line: 0, scope: !7344)
!7351 = !DILocation(line: 780, column: 2, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !6792, line: 780, column: 2)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !6792, line: 780, column: 2)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !6792, line: 780, column: 2)
!7355 = distinct !DILexicalBlock(scope: !7344, file: !6792, line: 780, column: 2)
!7356 = !DILocation(line: 783, column: 1, scope: !7344)
!7357 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6792, file: !6792, line: 658, type: !7358, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7360)
!7358 = !DISubroutineType(types: !7359)
!7359 = !{!347, !2818}
!7360 = !{!7361, !7362, !7363}
!7361 = !DILocalVariable(name: "esf", arg: 1, scope: !7357, file: !6792, line: 658, type: !2818)
!7362 = !DILocalVariable(name: "ret_addr", scope: !7357, file: !6792, line: 660, type: !2861)
!7363 = !DILocalVariable(name: "fault_insn", scope: !7357, file: !6792, line: 686, type: !194)
!7364 = !DILocation(line: 0, scope: !7357)
!7365 = !DILocation(line: 660, column: 46, scope: !7357)
!7366 = !DILocation(line: 660, column: 23, scope: !7357)
!7367 = !DILocation(line: 682, column: 11, scope: !7357)
!7368 = !DILocation(line: 271, column: 3, scope: !7369, inlinedAt: !7370)
!7369 = distinct !DISubprogram(name: "__DSB", scope: !6482, file: !6482, line: 269, type: !3153, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !2104)
!7370 = distinct !DILocation(line: 683, column: 2, scope: !7357)
!7371 = !{i64 3738222}
!7372 = !DILocation(line: 260, column: 3, scope: !7373, inlinedAt: !7374)
!7373 = distinct !DISubprogram(name: "__ISB", scope: !6482, file: !6482, line: 258, type: !3153, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !2104)
!7374 = distinct !DILocation(line: 684, column: 2, scope: !7357)
!7375 = !{i64 3737939}
!7376 = !DILocation(line: 686, column: 35, scope: !7357)
!7377 = !DILocation(line: 686, column: 24, scope: !7357)
!7378 = !DILocation(line: 688, column: 11, scope: !7357)
!7379 = !DILocation(line: 271, column: 3, scope: !7369, inlinedAt: !7380)
!7380 = distinct !DILocation(line: 689, column: 2, scope: !7357)
!7381 = !DILocation(line: 260, column: 3, scope: !7373, inlinedAt: !7382)
!7382 = distinct !DILocation(line: 690, column: 2, scope: !7357)
!7383 = !DILocation(line: 693, column: 45, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7357, file: !6792, line: 693, column: 6)
!7385 = !DILocation(line: 699, column: 1, scope: !7357)
!7386 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6792, file: !6792, line: 1107, type: !3153, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !2104)
!7387 = !DILocation(line: 1111, column: 11, scope: !7386)
!7388 = !DILocation(line: 1136, column: 1, scope: !7386)
!7389 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7390, file: !7390, line: 26, type: !3153, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2862, retainedNodes: !7391)
!7390 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "irq", scope: !7389, file: !7390, line: 28, type: !109)
!7393 = !DILocation(line: 0, scope: !7389)
!7394 = !DILocation(line: 30, column: 2, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7389, file: !7390, line: 30, column: 2)
!7396 = !DILocation(line: 31, column: 3, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !7390, line: 30, column: 39)
!7398 = distinct !DILexicalBlock(scope: !7395, file: !7390, line: 30, column: 2)
!7399 = !DILocation(line: 30, column: 35, scope: !7398)
!7400 = !DILocation(line: 30, column: 13, scope: !7398)
!7401 = distinct !{!7401, !7394, !7402}
!7402 = !DILocation(line: 32, column: 2, scope: !7395)
!7403 = !DILocation(line: 33, column: 1, scope: !7389)
!7404 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6522, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2862, retainedNodes: !7405)
!7405 = !{!7406, !7407}
!7406 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7404, file: !535, line: 1814, type: !800)
!7407 = !DILocalVariable(name: "priority", arg: 2, scope: !7404, file: !535, line: 1814, type: !110)
!7408 = !DILocation(line: 0, scope: !7404)
!7409 = !DILocation(line: 1816, column: 7, scope: !7404)
!7410 = !DILocation(line: 0, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7404, file: !535, line: 1816, column: 7)
!7412 = !DILocation(line: 1824, column: 1, scope: !7404)
!7413 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7414, file: !7414, line: 27, type: !7415, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7521)
!7414 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7415 = !DISubroutineType(types: !7416)
!7416 = !{null, !7417}
!7417 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7418)
!7418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7419, size: 32)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7420)
!7420 = !{!7421, !7479, !7491, !7492, !7493, !7494, !7495, !7501, !7516}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7419, file: !158, line: 247, baseType: !7422, size: 384)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7423)
!7423 = !{!7424, !7448, !7455, !7456, !7457, !7466, !7467, !7468}
!7424 = !DIDerivedType(tag: DW_TAG_member, scope: !7422, file: !158, line: 60, baseType: !7425, size: 64)
!7425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7422, file: !158, line: 60, size: 64, elements: !7426)
!7426 = !{!7427, !7442}
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7425, file: !158, line: 61, baseType: !7428, size: 64)
!7428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7429)
!7429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7430)
!7430 = !{!7431, !7437}
!7431 = !DIDerivedType(tag: DW_TAG_member, scope: !7429, file: !127, line: 38, baseType: !7432, size: 32)
!7432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7429, file: !127, line: 38, size: 32, elements: !7433)
!7433 = !{!7434, !7436}
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7432, file: !127, line: 39, baseType: !7435, size: 32)
!7435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7429, size: 32)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7432, file: !127, line: 40, baseType: !7435, size: 32)
!7437 = !DIDerivedType(tag: DW_TAG_member, scope: !7429, file: !127, line: 42, baseType: !7438, size: 32, offset: 32)
!7438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7429, file: !127, line: 42, size: 32, elements: !7439)
!7439 = !{!7440, !7441}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7438, file: !127, line: 43, baseType: !7435, size: 32)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7438, file: !127, line: 44, baseType: !7435, size: 32)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7425, file: !158, line: 62, baseType: !7443, size: 64)
!7443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7444)
!7444 = !{!7445}
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7443, file: !170, line: 50, baseType: !7446, size: 64)
!7446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7447, size: 64, elements: !175)
!7447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 32)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7422, file: !158, line: 68, baseType: !7449, size: 32, offset: 64)
!7449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7450, size: 32)
!7450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7451)
!7451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7452)
!7452 = !{!7453}
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7451, file: !122, line: 232, baseType: !7454, size: 64)
!7454 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7429)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7422, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7422, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7457 = !DIDerivedType(tag: DW_TAG_member, scope: !7422, file: !158, line: 90, baseType: !7458, size: 16, offset: 112)
!7458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7422, file: !158, line: 90, size: 16, elements: !7459)
!7459 = !{!7460, !7465}
!7460 = !DIDerivedType(tag: DW_TAG_member, scope: !7458, file: !158, line: 91, baseType: !7461, size: 16)
!7461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7458, file: !158, line: 91, size: 16, elements: !7462)
!7462 = !{!7463, !7464}
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7461, file: !158, line: 96, baseType: !190, size: 8)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7461, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7458, file: !158, line: 100, baseType: !194, size: 16)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7422, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7422, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7422, file: !158, line: 131, baseType: !7469, size: 192, offset: 192)
!7469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7470)
!7470 = !{!7471, !7472, !7478}
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7469, file: !122, line: 245, baseType: !7428, size: 64)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7469, file: !122, line: 246, baseType: !7473, size: 32, offset: 64)
!7473 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7474)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 32)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{null, !7477}
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7469, size: 32)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7469, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7419, file: !158, line: 250, baseType: !7480, size: 288, offset: 384)
!7480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7481)
!7481 = !{!7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7480, file: !211, line: 26, baseType: !110, size: 32)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7480, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7480, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7480, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7480, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7480, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7480, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7480, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7480, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7419, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7419, file: !158, line: 256, baseType: !7450, size: 64, offset: 704)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7419, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7419, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7419, file: !158, line: 300, baseType: !7496, size: 96, offset: 1056)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7497)
!7497 = !{!7498, !7499, !7500}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7496, file: !158, line: 153, baseType: !22, size: 32)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7496, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7496, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7419, file: !158, line: 325, baseType: !7502, size: 32, offset: 1152)
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 32)
!7503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7504)
!7504 = !{!7505, !7511, !7512}
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7503, file: !118, line: 5074, baseType: !7506, size: 96)
!7506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7507)
!7507 = !{!7508, !7509, !7510}
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7506, file: !243, line: 57, baseType: !246, size: 32)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7506, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7506, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7503, file: !118, line: 5075, baseType: !7450, size: 64, offset: 96)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7503, file: !118, line: 5076, baseType: !7513, size: 32, offset: 160)
!7513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7514)
!7514 = !{!7515}
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7513, file: !253, line: 52, baseType: !22, size: 32)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7419, file: !158, line: 343, baseType: !7517, size: 64, offset: 1184)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7518)
!7518 = !{!7519, !7520}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7517, file: !211, line: 63, baseType: !110, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7517, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7521 = !{!7522}
!7522 = !DILocalVariable(name: "thread", arg: 1, scope: !7413, file: !7414, line: 27, type: !7417)
!7523 = !DILocation(line: 0, scope: !7413)
!7524 = !DILocation(line: 29, column: 6, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7413, file: !7414, line: 29, column: 6)
!7526 = !DILocation(line: 29, column: 15, scope: !7525)
!7527 = !DILocation(line: 29, column: 6, scope: !7413)
!7528 = !DILocation(line: 1031, column: 3, scope: !7529, inlinedAt: !7532)
!7529 = distinct !DISubprogram(name: "__get_IPSR", scope: !6482, file: !6482, line: 1027, type: !6569, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !7530)
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "result", scope: !7529, file: !6482, line: 1029, type: !110)
!7532 = distinct !DILocation(line: 48, column: 10, scope: !7533, inlinedAt: !7537)
!7533 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7534, file: !7534, line: 46, type: !7535, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2104)
!7534 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!347}
!7537 = distinct !DILocation(line: 30, column: 7, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !7414, line: 30, column: 7)
!7539 = distinct !DILexicalBlock(scope: !7525, file: !7414, line: 29, column: 26)
!7540 = !{i64 3727070}
!7541 = !DILocation(line: 0, scope: !7529, inlinedAt: !7532)
!7542 = !DILocation(line: 48, column: 9, scope: !7533, inlinedAt: !7537)
!7543 = !DILocation(line: 30, column: 7, scope: !7539)
!7544 = !DILocation(line: 42, column: 14, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7538, file: !7414, line: 30, column: 25)
!7546 = !DILocation(line: 48, column: 15, scope: !7545)
!7547 = !DILocation(line: 49, column: 3, scope: !7545)
!7548 = !DILocation(line: 52, column: 2, scope: !7413)
!7549 = !DILocation(line: 53, column: 1, scope: !7413)
!7550 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3153, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2104)
!7551 = !DILocation(line: 134, column: 2, scope: !7550)
!7552 = !DILocation(line: 156, column: 1, scope: !7550)
!7553 = !DILocation(line: 0, scope: !393)
!7554 = !DILocation(line: 289, column: 36, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7556 = !DILocation(line: 289, column: 42, scope: !7555)
!7557 = !DILocation(line: 300, column: 36, scope: !393)
!7558 = !DILocation(line: 301, column: 35, scope: !393)
!7559 = !DILocation(line: 302, column: 37, scope: !393)
!7560 = !DILocation(line: 311, column: 2, scope: !393)
!7561 = !DILocation(line: 316, column: 1, scope: !393)
!7562 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3153, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2104)
!7563 = !DILocation(line: 188, column: 12, scope: !7562)
!7564 = !DILocation(line: 271, column: 3, scope: !7565, inlinedAt: !7566)
!7565 = distinct !DISubprogram(name: "__DSB", scope: !6482, file: !6482, line: 269, type: !3153, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2104)
!7566 = distinct !DILocation(line: 192, column: 2, scope: !7562)
!7567 = !{i64 3917960}
!7568 = !DILocation(line: 260, column: 3, scope: !7569, inlinedAt: !7570)
!7569 = distinct !DISubprogram(name: "__ISB", scope: !6482, file: !6482, line: 258, type: !3153, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2104)
!7570 = distinct !DILocation(line: 193, column: 2, scope: !7562)
!7571 = !{i64 3917677}
!7572 = !DILocation(line: 194, column: 1, scope: !7562)
!7573 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3153, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2104)
!7574 = !DILocation(line: 282, column: 3, scope: !7575, inlinedAt: !7576)
!7575 = distinct !DISubprogram(name: "__DMB", scope: !6482, file: !6482, line: 280, type: !3153, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2104)
!7576 = distinct !DILocation(line: 202, column: 2, scope: !7573)
!7577 = !{i64 3918236}
!7578 = !DILocation(line: 205, column: 12, scope: !7573)
!7579 = !DILocation(line: 206, column: 1, scope: !7573)
!7580 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7581, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7594)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !7583, !1886, !6759, !6759}
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 32)
!7584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7585)
!7585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7586)
!7586 = !{!7587, !7588, !7589}
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7585, file: !507, line: 53, baseType: !22, size: 32)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7585, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7585, file: !507, line: 55, baseType: !7590, size: 32, offset: 64)
!7590 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7591)
!7591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7592)
!7592 = !{!7593}
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7591, file: !513, line: 150, baseType: !110, size: 32)
!7594 = !{!7595, !7596, !7597, !7598}
!7595 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7580, file: !563, line: 276, type: !7583)
!7596 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7580, file: !563, line: 276, type: !1886)
!7597 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7580, file: !563, line: 277, type: !6759)
!7598 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7580, file: !563, line: 277, type: !6759)
!7599 = !DILocation(line: 0, scope: !7580)
!7600 = !DILocation(line: 279, column: 6, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7580, file: !563, line: 279, column: 6)
!7602 = !DILocation(line: 280, column: 57, scope: !7601)
!7603 = !DILocation(line: 279, column: 6, scope: !7580)
!7604 = !DILocation(line: 282, column: 3, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !563, line: 282, column: 3)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !563, line: 282, column: 3)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !563, line: 282, column: 3)
!7608 = distinct !DILexicalBlock(scope: !7601, file: !563, line: 280, column: 69)
!7609 = !DILocation(line: 285, column: 1, scope: !7580)
!7610 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7611, file: !7611, line: 220, type: !7612, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7614)
!7611 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!109, !7583, !1886, !6759, !6759}
!7614 = !{!7615, !7616, !7617, !7618, !7619}
!7615 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7610, file: !7611, line: 221, type: !7583)
!7616 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7610, file: !7611, line: 221, type: !1886)
!7617 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7610, file: !7611, line: 222, type: !6759)
!7618 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7610, file: !7611, line: 223, type: !6759)
!7619 = !DILocalVariable(name: "mpu_reg_index", scope: !7610, file: !7611, line: 225, type: !109)
!7620 = !DILocation(line: 0, scope: !7610)
!7621 = !DILocation(line: 225, column: 22, scope: !7610)
!7622 = !DILocation(line: 233, column: 18, scope: !7610)
!7623 = !DILocation(line: 236, column: 23, scope: !7610)
!7624 = !DILocation(line: 236, column: 21, scope: !7610)
!7625 = !DILocation(line: 238, column: 2, scope: !7610)
!7626 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7627, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!109, !7583, !180, !180, !347}
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635}
!7630 = !DILocalVariable(name: "regions", arg: 1, scope: !7626, file: !563, line: 106, type: !7583)
!7631 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7626, file: !563, line: 106, type: !180)
!7632 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7626, file: !563, line: 106, type: !180)
!7633 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7626, file: !563, line: 107, type: !347)
!7634 = !DILocalVariable(name: "i", scope: !7626, file: !563, line: 109, type: !109)
!7635 = !DILocalVariable(name: "reg_index", scope: !7626, file: !563, line: 110, type: !109)
!7636 = !DILocation(line: 0, scope: !7626)
!7637 = !DILocation(line: 110, column: 18, scope: !7626)
!7638 = !DILocation(line: 112, column: 16, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !563, line: 112, column: 2)
!7640 = distinct !DILexicalBlock(scope: !7626, file: !563, line: 112, column: 2)
!7641 = !DILocation(line: 112, column: 2, scope: !7640)
!7642 = !DILocation(line: 113, column: 7, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !563, line: 113, column: 7)
!7644 = distinct !DILexicalBlock(scope: !7639, file: !563, line: 112, column: 36)
!7645 = !DILocation(line: 113, column: 18, scope: !7643)
!7646 = !DILocation(line: 113, column: 23, scope: !7643)
!7647 = !DILocation(line: 113, column: 7, scope: !7644)
!7648 = !DILocation(line: 118, column: 23, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7644, file: !563, line: 118, column: 7)
!7650 = !DILocation(line: 119, column: 7, scope: !7649)
!7651 = !DILocation(line: 118, column: 7, scope: !7644)
!7652 = !DILocation(line: 120, column: 4, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !563, line: 120, column: 4)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !563, line: 120, column: 4)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !563, line: 120, column: 4)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !563, line: 120, column: 4)
!7657 = distinct !DILexicalBlock(scope: !7649, file: !563, line: 119, column: 45)
!7658 = !DILocation(line: 121, column: 4, scope: !7657)
!7659 = !DILocation(line: 124, column: 36, scope: !7644)
!7660 = !DILocation(line: 124, column: 15, scope: !7644)
!7661 = !DILocation(line: 126, column: 17, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7644, file: !563, line: 126, column: 7)
!7663 = !DILocation(line: 126, column: 7, scope: !7644)
!7664 = !DILocation(line: 131, column: 12, scope: !7644)
!7665 = !DILocation(line: 132, column: 2, scope: !7644)
!7666 = !DILocation(line: 112, column: 32, scope: !7639)
!7667 = distinct !{!7667, !7641, !7668}
!7668 = !DILocation(line: 132, column: 2, scope: !7640)
!7669 = !DILocation(line: 135, column: 1, scope: !7626)
!7670 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7611, file: !7611, line: 63, type: !7671, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!109, !7583}
!7673 = !{!7674, !7675}
!7674 = !DILocalVariable(name: "part", arg: 1, scope: !7670, file: !7611, line: 63, type: !7583)
!7675 = !DILocalVariable(name: "partition_is_valid", scope: !7670, file: !7611, line: 70, type: !109)
!7676 = !DILocation(line: 0, scope: !7670)
!7677 = !DILocation(line: 71, column: 11, scope: !7670)
!7678 = !DILocation(line: 71, column: 37, scope: !7670)
!7679 = !{i32 0, i32 33}
!7680 = !DILocation(line: 72, column: 3, scope: !7670)
!7681 = !DILocation(line: 71, column: 30, scope: !7670)
!7682 = !DILocation(line: 75, column: 11, scope: !7670)
!7683 = !DILocation(line: 75, column: 17, scope: !7670)
!7684 = !DILocation(line: 75, column: 38, scope: !7670)
!7685 = !DILocation(line: 77, column: 2, scope: !7670)
!7686 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7687, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7689)
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!109, !1886, !7583}
!7689 = !{!7690, !7691, !7692}
!7690 = !DILocalVariable(name: "index", arg: 1, scope: !7686, file: !563, line: 79, type: !1886)
!7691 = !DILocalVariable(name: "new_region", arg: 2, scope: !7686, file: !563, line: 80, type: !7583)
!7692 = !DILocalVariable(name: "region_conf", scope: !7686, file: !563, line: 82, type: !552)
!7693 = !DILocation(line: 0, scope: !7686)
!7694 = !DILocation(line: 82, column: 2, scope: !7686)
!7695 = !DILocation(line: 82, column: 24, scope: !7686)
!7696 = !DILocation(line: 87, column: 33, scope: !7686)
!7697 = !DILocation(line: 87, column: 14, scope: !7686)
!7698 = !DILocation(line: 87, column: 19, scope: !7686)
!7699 = !DILocation(line: 91, column: 55, scope: !7686)
!7700 = !DILocation(line: 92, column: 16, scope: !7686)
!7701 = !DILocation(line: 92, column: 53, scope: !7686)
!7702 = !DILocation(line: 91, column: 2, scope: !7686)
!7703 = !DILocation(line: 95, column: 9, scope: !7686)
!7704 = !DILocation(line: 97, column: 1, scope: !7686)
!7705 = !DILocation(line: 95, column: 2, scope: !7686)
!7706 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7611, file: !7611, line: 113, type: !7707, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7712)
!7707 = !DISubroutineType(types: !7708)
!7708 = !{null, !7709, !7710, !110, !110}
!7709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7711, size: 32)
!7711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7590)
!7712 = !{!7713, !7714, !7715, !7716}
!7713 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7706, file: !7611, line: 114, type: !7709)
!7714 = !DILocalVariable(name: "attr", arg: 2, scope: !7706, file: !7611, line: 115, type: !7710)
!7715 = !DILocalVariable(name: "base", arg: 3, scope: !7706, file: !7611, line: 115, type: !110)
!7716 = !DILocalVariable(name: "size", arg: 4, scope: !7706, file: !7611, line: 115, type: !110)
!7717 = !DILocation(line: 0, scope: !7706)
!7718 = !DILocation(line: 127, column: 23, scope: !7706)
!7719 = !DILocation(line: 127, column: 35, scope: !7706)
!7720 = !DILocation(line: 127, column: 33, scope: !7706)
!7721 = !DILocation(line: 127, column: 10, scope: !7706)
!7722 = !DILocation(line: 127, column: 15, scope: !7706)
!7723 = !DILocation(line: 129, column: 1, scope: !7706)
!7724 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7725, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7727)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!109, !1886, !550}
!7727 = !{!7728, !7729}
!7728 = !DILocalVariable(name: "index", arg: 1, scope: !7724, file: !563, line: 57, type: !1886)
!7729 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7724, file: !563, line: 58, type: !550)
!7730 = !DILocation(line: 0, scope: !7724)
!7731 = !DILocation(line: 61, column: 6, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7724, file: !563, line: 61, column: 6)
!7733 = !DILocation(line: 61, column: 12, scope: !7732)
!7734 = !DILocation(line: 61, column: 6, scope: !7724)
!7735 = !DILocation(line: 64, column: 3, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !563, line: 64, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !563, line: 64, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !563, line: 64, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !563, line: 64, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7732, file: !563, line: 61, column: 40)
!7741 = !DILocation(line: 65, column: 3, scope: !7740)
!7742 = !DILocation(line: 71, column: 2, scope: !7724)
!7743 = !DILocation(line: 73, column: 2, scope: !7724)
!7744 = !DILocation(line: 74, column: 1, scope: !7724)
!7745 = distinct !DISubprogram(name: "region_init", scope: !7611, file: !7611, line: 29, type: !7746, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{null, !6759, !550}
!7748 = !{!7749, !7750}
!7749 = !DILocalVariable(name: "index", arg: 1, scope: !7745, file: !7611, line: 29, type: !6759)
!7750 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7745, file: !7611, line: 30, type: !550)
!7751 = !DILocation(line: 0, scope: !7745)
!7752 = !DILocation(line: 33, column: 2, scope: !7745)
!7753 = !DILocation(line: 47, column: 28, scope: !7745)
!7754 = !DILocation(line: 47, column: 33, scope: !7745)
!7755 = !DILocation(line: 48, column: 26, scope: !7745)
!7756 = !DILocation(line: 47, column: 12, scope: !7745)
!7757 = !DILocation(line: 49, column: 32, scope: !7745)
!7758 = !DILocation(line: 49, column: 37, scope: !7745)
!7759 = !DILocation(line: 49, column: 12, scope: !7745)
!7760 = !DILocation(line: 53, column: 1, scope: !7745)
!7761 = distinct !DISubprogram(name: "set_region_number", scope: !7762, file: !7762, line: 32, type: !6579, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7763)
!7762 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "index", arg: 1, scope: !7761, file: !7762, line: 32, type: !110)
!7765 = !DILocation(line: 0, scope: !7761)
!7766 = !DILocation(line: 34, column: 11, scope: !7761)
!7767 = !DILocation(line: 35, column: 1, scope: !7761)
!7768 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7611, file: !7611, line: 88, type: !7769, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7771)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!110, !110}
!7771 = !{!7772}
!7772 = !DILocalVariable(name: "size", arg: 1, scope: !7768, file: !7611, line: 88, type: !110)
!7773 = !DILocation(line: 0, scope: !7768)
!7774 = !DILocation(line: 91, column: 11, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7768, file: !7611, line: 91, column: 6)
!7776 = !DILocation(line: 91, column: 6, scope: !7768)
!7777 = !DILocation(line: 100, column: 11, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7768, file: !7611, line: 100, column: 6)
!7779 = !DILocation(line: 100, column: 6, scope: !7768)
!7780 = !DILocation(line: 104, column: 35, scope: !7768)
!7781 = !DILocation(line: 104, column: 16, scope: !7768)
!7782 = !DILocation(line: 104, column: 50, scope: !7768)
!7783 = !DILocation(line: 104, column: 72, scope: !7768)
!7784 = !DILocation(line: 104, column: 2, scope: !7768)
!7785 = !DILocation(line: 106, column: 1, scope: !7768)
!7786 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7787, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{null, !7583, !180}
!7789 = !{!7790, !7791}
!7790 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7786, file: !563, line: 308, type: !7583)
!7791 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7786, file: !563, line: 308, type: !180)
!7792 = !DILocation(line: 0, scope: !7786)
!7793 = !DILocation(line: 310, column: 6, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7786, file: !563, line: 310, column: 6)
!7795 = !DILocation(line: 311, column: 3, scope: !7794)
!7796 = !DILocation(line: 310, column: 6, scope: !7786)
!7797 = !DILocation(line: 313, column: 3, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !563, line: 313, column: 3)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !563, line: 313, column: 3)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !563, line: 313, column: 3)
!7801 = distinct !DILexicalBlock(scope: !7794, file: !563, line: 311, column: 15)
!7802 = !DILocation(line: 316, column: 1, scope: !7786)
!7803 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7611, file: !7611, line: 249, type: !7804, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7806)
!7804 = !DISubroutineType(types: !7805)
!7805 = !{!109, !7583, !180}
!7806 = !{!7807, !7808, !7809, !7810}
!7807 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7803, file: !7611, line: 250, type: !7583)
!7808 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7803, file: !7611, line: 250, type: !180)
!7809 = !DILocalVariable(name: "mpu_reg_index", scope: !7803, file: !7611, line: 252, type: !109)
!7810 = !DILocalVariable(name: "i", scope: !7811, file: !7611, line: 264, type: !109)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !7611, line: 264, column: 3)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7611, line: 261, column: 32)
!7813 = distinct !DILexicalBlock(scope: !7803, file: !7611, line: 261, column: 6)
!7814 = !DILocation(line: 0, scope: !7803)
!7815 = !DILocation(line: 252, column: 22, scope: !7803)
!7816 = !DILocation(line: 258, column: 18, scope: !7803)
!7817 = !DILocation(line: 261, column: 20, scope: !7813)
!7818 = !DILocation(line: 261, column: 6, scope: !7803)
!7819 = !DILocation(line: 0, scope: !7811)
!7820 = !DILocation(line: 265, column: 4, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7611, line: 264, column: 59)
!7822 = distinct !DILexicalBlock(scope: !7811, file: !7611, line: 264, column: 3)
!7823 = !DILocation(line: 264, column: 55, scope: !7822)
!7824 = !DILocation(line: 264, column: 33, scope: !7822)
!7825 = !DILocation(line: 264, column: 3, scope: !7811)
!7826 = distinct !{!7826, !7825, !7827}
!7827 = !DILocation(line: 266, column: 3, scope: !7811)
!7828 = !DILocation(line: 269, column: 2, scope: !7803)
!7829 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7830, file: !7830, line: 218, type: !6579, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7831)
!7830 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7831 = !{!7832}
!7832 = !DILocalVariable(name: "rnr", arg: 1, scope: !7829, file: !7830, line: 218, type: !110)
!7833 = !DILocation(line: 0, scope: !7829)
!7834 = !DILocation(line: 220, column: 12, scope: !7829)
!7835 = !DILocation(line: 221, column: 13, scope: !7829)
!7836 = !DILocation(line: 222, column: 1, scope: !7829)
!7837 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7838, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7840)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{!109}
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "r_index", scope: !7837, file: !563, line: 328, type: !110)
!7842 = !DILocation(line: 330, column: 17, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7837, file: !563, line: 330, column: 6)
!7844 = !DILocation(line: 330, column: 29, scope: !7843)
!7845 = !DILocation(line: 330, column: 6, scope: !7837)
!7846 = !DILocation(line: 337, column: 3, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !563, line: 337, column: 3)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !563, line: 337, column: 3)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !563, line: 337, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7843, file: !563, line: 330, column: 50)
!7851 = !DILocation(line: 347, column: 2, scope: !7837)
!7852 = !DILocation(line: 0, scope: !7837)
!7853 = !DILocation(line: 364, column: 29, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !563, line: 364, column: 2)
!7855 = distinct !DILexicalBlock(scope: !7837, file: !563, line: 364, column: 2)
!7856 = !DILocation(line: 364, column: 2, scope: !7855)
!7857 = !DILocation(line: 365, column: 25, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !563, line: 364, column: 66)
!7859 = !DILocation(line: 365, column: 3, scope: !7858)
!7860 = !DILocation(line: 364, column: 62, scope: !7854)
!7861 = distinct !{!7861, !7856, !7862}
!7862 = !DILocation(line: 366, column: 2, scope: !7855)
!7863 = !DILocation(line: 369, column: 23, scope: !7837)
!7864 = !DILocation(line: 369, column: 21, scope: !7837)
!7865 = !DILocation(line: 372, column: 2, scope: !7837)
!7866 = !DILocation(line: 433, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !563, line: 433, column: 2)
!7868 = distinct !DILexicalBlock(scope: !7837, file: !563, line: 433, column: 2)
!7869 = !DILocation(line: 433, column: 2, scope: !7868)
!7870 = !DILocation(line: 433, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !563, line: 433, column: 2)
!7872 = !DILocation(line: 444, column: 1, scope: !7837)
!7873 = distinct !DISubprogram(name: "strcpy", scope: !7874, file: !7874, line: 20, type: !7875, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7879)
!7874 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!285, !7877, !7878}
!7877 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7878 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7879 = !{!7880, !7881, !7882}
!7880 = !DILocalVariable(name: "d", arg: 1, scope: !7873, file: !7874, line: 20, type: !7877)
!7881 = !DILocalVariable(name: "s", arg: 2, scope: !7873, file: !7874, line: 20, type: !7878)
!7882 = !DILocalVariable(name: "dest", scope: !7873, file: !7874, line: 22, type: !285)
!7883 = !DILocation(line: 0, scope: !7873)
!7884 = !DILocation(line: 24, column: 9, scope: !7873)
!7885 = !DILocation(line: 24, column: 12, scope: !7873)
!7886 = !DILocation(line: 24, column: 2, scope: !7873)
!7887 = !DILocation(line: 25, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7873, file: !7874, line: 24, column: 21)
!7889 = !DILocation(line: 26, column: 4, scope: !7888)
!7890 = !DILocation(line: 27, column: 4, scope: !7888)
!7891 = distinct !{!7891, !7886, !7892}
!7892 = !DILocation(line: 28, column: 2, scope: !7873)
!7893 = !DILocation(line: 30, column: 5, scope: !7873)
!7894 = !DILocation(line: 32, column: 2, scope: !7873)
!7895 = distinct !DISubprogram(name: "strncpy", scope: !7874, file: !7874, line: 42, type: !7896, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7898)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{!285, !7877, !7878, !234}
!7898 = !{!7899, !7900, !7901, !7902}
!7899 = !DILocalVariable(name: "d", arg: 1, scope: !7895, file: !7874, line: 42, type: !7877)
!7900 = !DILocalVariable(name: "s", arg: 2, scope: !7895, file: !7874, line: 42, type: !7878)
!7901 = !DILocalVariable(name: "n", arg: 3, scope: !7895, file: !7874, line: 42, type: !234)
!7902 = !DILocalVariable(name: "dest", scope: !7895, file: !7874, line: 44, type: !285)
!7903 = !DILocation(line: 0, scope: !7895)
!7904 = !DILocation(line: 46, column: 12, scope: !7895)
!7905 = !DILocation(line: 46, column: 17, scope: !7895)
!7906 = !DILocation(line: 46, column: 20, scope: !7895)
!7907 = !DILocation(line: 46, column: 23, scope: !7895)
!7908 = !DILocation(line: 46, column: 2, scope: !7895)
!7909 = !DILocation(line: 47, column: 6, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7895, file: !7874, line: 46, column: 32)
!7911 = !DILocation(line: 48, column: 4, scope: !7910)
!7912 = !DILocation(line: 49, column: 4, scope: !7910)
!7913 = !DILocation(line: 50, column: 4, scope: !7910)
!7914 = distinct !{!7914, !7908, !7915}
!7915 = !DILocation(line: 51, column: 2, scope: !7895)
!7916 = !DILocation(line: 54, column: 6, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7895, file: !7874, line: 53, column: 16)
!7918 = !DILocation(line: 55, column: 4, scope: !7917)
!7919 = !DILocation(line: 56, column: 4, scope: !7917)
!7920 = !DILocation(line: 53, column: 11, scope: !7895)
!7921 = !DILocation(line: 53, column: 2, scope: !7895)
!7922 = distinct !{!7922, !7921, !7923}
!7923 = !DILocation(line: 57, column: 2, scope: !7895)
!7924 = !DILocation(line: 59, column: 2, scope: !7895)
!7925 = distinct !DISubprogram(name: "strchr", scope: !7874, file: !7874, line: 69, type: !7926, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7928)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{!285, !279, !109}
!7928 = !{!7929, !7930, !7931}
!7929 = !DILocalVariable(name: "s", arg: 1, scope: !7925, file: !7874, line: 69, type: !279)
!7930 = !DILocalVariable(name: "c", arg: 2, scope: !7925, file: !7874, line: 69, type: !109)
!7931 = !DILocalVariable(name: "tmp", scope: !7925, file: !7874, line: 71, type: !150)
!7932 = !DILocation(line: 0, scope: !7925)
!7933 = !DILocation(line: 73, column: 2, scope: !7925)
!7934 = !DILocation(line: 73, column: 10, scope: !7925)
!7935 = !DILocation(line: 73, column: 13, scope: !7925)
!7936 = !DILocation(line: 73, column: 21, scope: !7925)
!7937 = !DILocation(line: 74, column: 4, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7925, file: !7874, line: 73, column: 38)
!7939 = distinct !{!7939, !7933, !7940}
!7940 = !DILocation(line: 75, column: 2, scope: !7925)
!7941 = !DILocation(line: 77, column: 9, scope: !7925)
!7942 = !DILocation(line: 77, column: 2, scope: !7925)
!7943 = distinct !DISubprogram(name: "strrchr", scope: !7874, file: !7874, line: 87, type: !7926, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7944)
!7944 = !{!7945, !7946, !7947}
!7945 = !DILocalVariable(name: "s", arg: 1, scope: !7943, file: !7874, line: 87, type: !279)
!7946 = !DILocalVariable(name: "c", arg: 2, scope: !7943, file: !7874, line: 87, type: !109)
!7947 = !DILocalVariable(name: "match", scope: !7943, file: !7874, line: 89, type: !285)
!7948 = !DILocation(line: 0, scope: !7943)
!7949 = !DILocation(line: 91, column: 2, scope: !7943)
!7950 = !DILocation(line: 92, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !7874, line: 92, column: 7)
!7952 = distinct !DILexicalBlock(scope: !7943, file: !7874, line: 91, column: 5)
!7953 = !DILocation(line: 92, column: 10, scope: !7951)
!7954 = !DILocation(line: 92, column: 7, scope: !7952)
!7955 = !DILocation(line: 95, column: 13, scope: !7943)
!7956 = !DILocation(line: 95, column: 2, scope: !7952)
!7957 = distinct !{!7957, !7949, !7958}
!7958 = !DILocation(line: 95, column: 15, scope: !7943)
!7959 = !DILocation(line: 97, column: 2, scope: !7943)
!7960 = distinct !DISubprogram(name: "strlen", scope: !7874, file: !7874, line: 107, type: !7961, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7963)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{!234, !279}
!7963 = !{!7964, !7965}
!7964 = !DILocalVariable(name: "s", arg: 1, scope: !7960, file: !7874, line: 107, type: !279)
!7965 = !DILocalVariable(name: "n", scope: !7960, file: !7874, line: 109, type: !234)
!7966 = !DILocation(line: 0, scope: !7960)
!7967 = !DILocation(line: 111, column: 9, scope: !7960)
!7968 = !DILocation(line: 111, column: 12, scope: !7960)
!7969 = !DILocation(line: 111, column: 2, scope: !7960)
!7970 = !DILocation(line: 112, column: 4, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7960, file: !7874, line: 111, column: 21)
!7972 = !DILocation(line: 113, column: 4, scope: !7971)
!7973 = distinct !{!7973, !7969, !7974}
!7974 = !DILocation(line: 114, column: 2, scope: !7960)
!7975 = !DILocation(line: 116, column: 2, scope: !7960)
!7976 = distinct !DISubprogram(name: "strnlen", scope: !7874, file: !7874, line: 126, type: !7977, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7979)
!7977 = !DISubroutineType(types: !7978)
!7978 = !{!234, !279, !234}
!7979 = !{!7980, !7981, !7982}
!7980 = !DILocalVariable(name: "s", arg: 1, scope: !7976, file: !7874, line: 126, type: !279)
!7981 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7976, file: !7874, line: 126, type: !234)
!7982 = !DILocalVariable(name: "n", scope: !7976, file: !7874, line: 128, type: !234)
!7983 = !DILocation(line: 0, scope: !7976)
!7984 = !DILocation(line: 130, column: 9, scope: !7976)
!7985 = !DILocation(line: 130, column: 12, scope: !7976)
!7986 = !DILocation(line: 130, column: 20, scope: !7976)
!7987 = !DILocation(line: 130, column: 2, scope: !7976)
!7988 = !DILocation(line: 131, column: 4, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7976, file: !7874, line: 130, column: 35)
!7990 = !DILocation(line: 132, column: 4, scope: !7989)
!7991 = distinct !{!7991, !7987, !7992}
!7992 = !DILocation(line: 133, column: 2, scope: !7976)
!7993 = !DILocation(line: 135, column: 2, scope: !7976)
!7994 = distinct !DISubprogram(name: "strcmp", scope: !7874, file: !7874, line: 145, type: !7995, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !7997)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{!109, !279, !279}
!7997 = !{!7998, !7999}
!7998 = !DILocalVariable(name: "s1", arg: 1, scope: !7994, file: !7874, line: 145, type: !279)
!7999 = !DILocalVariable(name: "s2", arg: 2, scope: !7994, file: !7874, line: 145, type: !279)
!8000 = !DILocation(line: 0, scope: !7994)
!8001 = !DILocation(line: 147, column: 10, scope: !7994)
!8002 = !DILocation(line: 147, column: 17, scope: !7994)
!8003 = !DILocation(line: 147, column: 14, scope: !7994)
!8004 = !DILocation(line: 147, column: 22, scope: !7994)
!8005 = !DILocation(line: 148, column: 5, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7994, file: !7874, line: 147, column: 40)
!8007 = !DILocation(line: 149, column: 5, scope: !8006)
!8008 = distinct !{!8008, !8009, !8010}
!8009 = !DILocation(line: 147, column: 2, scope: !7994)
!8010 = !DILocation(line: 150, column: 2, scope: !7994)
!8011 = !DILocation(line: 152, column: 9, scope: !7994)
!8012 = !DILocation(line: 152, column: 15, scope: !7994)
!8013 = !DILocation(line: 152, column: 13, scope: !7994)
!8014 = !DILocation(line: 152, column: 2, scope: !7994)
!8015 = distinct !DISubprogram(name: "strncmp", scope: !7874, file: !7874, line: 162, type: !8016, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8018)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!109, !279, !279, !234}
!8018 = !{!8019, !8020, !8021}
!8019 = !DILocalVariable(name: "s1", arg: 1, scope: !8015, file: !7874, line: 162, type: !279)
!8020 = !DILocalVariable(name: "s2", arg: 2, scope: !8015, file: !7874, line: 162, type: !279)
!8021 = !DILocalVariable(name: "n", arg: 3, scope: !8015, file: !7874, line: 162, type: !234)
!8022 = !DILocation(line: 0, scope: !8015)
!8023 = !DILocation(line: 164, column: 17, scope: !8015)
!8024 = !DILocation(line: 164, column: 21, scope: !8015)
!8025 = !DILocation(line: 164, column: 28, scope: !8015)
!8026 = !DILocation(line: 164, column: 25, scope: !8015)
!8027 = !DILocation(line: 164, column: 33, scope: !8015)
!8028 = !DILocation(line: 165, column: 5, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8015, file: !7874, line: 164, column: 51)
!8030 = !DILocation(line: 166, column: 5, scope: !8029)
!8031 = !DILocation(line: 167, column: 4, scope: !8029)
!8032 = distinct !{!8032, !8033, !8034}
!8033 = !DILocation(line: 164, column: 2, scope: !8015)
!8034 = !DILocation(line: 168, column: 2, scope: !8015)
!8035 = !DILocation(line: 170, column: 25, scope: !8015)
!8036 = !DILocation(line: 170, column: 31, scope: !8015)
!8037 = !DILocation(line: 170, column: 29, scope: !8015)
!8038 = !DILocation(line: 170, column: 9, scope: !8015)
!8039 = !DILocation(line: 170, column: 2, scope: !8015)
!8040 = distinct !DISubprogram(name: "strtok_r", scope: !7874, file: !7874, line: 180, type: !8041, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8043)
!8041 = !DISubroutineType(types: !8042)
!8042 = !{!285, !285, !279, !284}
!8043 = !{!8044, !8045, !8046, !8047, !8048}
!8044 = !DILocalVariable(name: "str", arg: 1, scope: !8040, file: !7874, line: 180, type: !285)
!8045 = !DILocalVariable(name: "sep", arg: 2, scope: !8040, file: !7874, line: 180, type: !279)
!8046 = !DILocalVariable(name: "state", arg: 3, scope: !8040, file: !7874, line: 180, type: !284)
!8047 = !DILocalVariable(name: "start", scope: !8040, file: !7874, line: 182, type: !285)
!8048 = !DILocalVariable(name: "end", scope: !8040, file: !7874, line: 182, type: !285)
!8049 = !DILocation(line: 0, scope: !8040)
!8050 = !DILocation(line: 184, column: 10, scope: !8040)
!8051 = !DILocation(line: 184, column: 22, scope: !8040)
!8052 = !DILocation(line: 187, column: 9, scope: !8040)
!8053 = !DILocation(line: 187, column: 16, scope: !8040)
!8054 = !DILocation(line: 187, column: 19, scope: !8040)
!8055 = !DILocation(line: 187, column: 2, scope: !8040)
!8056 = !DILocation(line: 188, column: 8, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8040, file: !7874, line: 187, column: 40)
!8058 = distinct !{!8058, !8055, !8059}
!8059 = !DILocation(line: 189, column: 2, scope: !8040)
!8060 = !DILocation(line: 198, column: 9, scope: !8040)
!8061 = !DILocation(line: 198, column: 18, scope: !8040)
!8062 = !DILocation(line: 198, column: 17, scope: !8040)
!8063 = !DILocation(line: 198, column: 2, scope: !8040)
!8064 = !DILocation(line: 199, column: 6, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8040, file: !7874, line: 198, column: 37)
!8066 = !DILocation(line: 198, column: 14, scope: !8040)
!8067 = distinct !{!8067, !8063, !8068}
!8068 = !DILocation(line: 200, column: 2, scope: !8040)
!8069 = !DILocation(line: 203, column: 8, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7874, line: 202, column: 20)
!8071 = distinct !DILexicalBlock(scope: !8040, file: !7874, line: 202, column: 6)
!8072 = !DILocation(line: 204, column: 16, scope: !8070)
!8073 = !DILocation(line: 205, column: 2, scope: !8070)
!8074 = !DILocation(line: 210, column: 1, scope: !8040)
!8075 = distinct !DISubprogram(name: "strcat", scope: !7874, file: !7874, line: 212, type: !7875, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8076)
!8076 = !{!8077, !8078}
!8077 = !DILocalVariable(name: "dest", arg: 1, scope: !8075, file: !7874, line: 212, type: !7877)
!8078 = !DILocalVariable(name: "src", arg: 2, scope: !8075, file: !7874, line: 212, type: !7878)
!8079 = !DILocation(line: 0, scope: !8075)
!8080 = !DILocation(line: 214, column: 16, scope: !8075)
!8081 = !DILocation(line: 214, column: 14, scope: !8075)
!8082 = !DILocation(line: 214, column: 2, scope: !8075)
!8083 = !DILocation(line: 215, column: 2, scope: !8075)
!8084 = distinct !DISubprogram(name: "strncat", scope: !7874, file: !7874, line: 218, type: !7896, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8085)
!8085 = !{!8086, !8087, !8088, !8089, !8090}
!8086 = !DILocalVariable(name: "dest", arg: 1, scope: !8084, file: !7874, line: 218, type: !7877)
!8087 = !DILocalVariable(name: "src", arg: 2, scope: !8084, file: !7874, line: 218, type: !7878)
!8088 = !DILocalVariable(name: "n", arg: 3, scope: !8084, file: !7874, line: 219, type: !234)
!8089 = !DILocalVariable(name: "orig_dest", scope: !8084, file: !7874, line: 221, type: !285)
!8090 = !DILocalVariable(name: "len", scope: !8084, file: !7874, line: 222, type: !234)
!8091 = !DILocation(line: 0, scope: !8084)
!8092 = !DILocation(line: 222, column: 15, scope: !8084)
!8093 = !DILocation(line: 224, column: 7, scope: !8084)
!8094 = !DILocation(line: 225, column: 14, scope: !8084)
!8095 = !DILocation(line: 225, column: 19, scope: !8084)
!8096 = !DILocation(line: 225, column: 11, scope: !8084)
!8097 = !DILocation(line: 225, column: 23, scope: !8084)
!8098 = !DILocation(line: 225, column: 28, scope: !8084)
!8099 = !DILocation(line: 225, column: 2, scope: !8084)
!8100 = !DILocation(line: 226, column: 17, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8084, file: !7874, line: 225, column: 38)
!8102 = !DILocation(line: 226, column: 8, scope: !8101)
!8103 = !DILocation(line: 226, column: 11, scope: !8101)
!8104 = distinct !{!8104, !8099, !8105}
!8105 = !DILocation(line: 227, column: 2, scope: !8084)
!8106 = !DILocation(line: 228, column: 8, scope: !8084)
!8107 = !DILocation(line: 230, column: 2, scope: !8084)
!8108 = distinct !DISubprogram(name: "memcmp", scope: !7874, file: !7874, line: 239, type: !8109, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8111)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!109, !13, !13, !234}
!8111 = !{!8112, !8113, !8114, !8115, !8116}
!8112 = !DILocalVariable(name: "m1", arg: 1, scope: !8108, file: !7874, line: 239, type: !13)
!8113 = !DILocalVariable(name: "m2", arg: 2, scope: !8108, file: !7874, line: 239, type: !13)
!8114 = !DILocalVariable(name: "n", arg: 3, scope: !8108, file: !7874, line: 239, type: !234)
!8115 = !DILocalVariable(name: "c1", scope: !8108, file: !7874, line: 241, type: !279)
!8116 = !DILocalVariable(name: "c2", scope: !8108, file: !7874, line: 242, type: !279)
!8117 = !DILocation(line: 0, scope: !8108)
!8118 = !DILocation(line: 244, column: 7, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8108, file: !7874, line: 244, column: 6)
!8120 = !DILocation(line: 244, column: 6, scope: !8108)
!8121 = !DILocation(line: 248, column: 10, scope: !8108)
!8122 = !DILocation(line: 248, column: 14, scope: !8108)
!8123 = !DILocation(line: 248, column: 19, scope: !8108)
!8124 = !DILocation(line: 248, column: 2, scope: !8108)
!8125 = !DILocation(line: 248, column: 23, scope: !8108)
!8126 = !DILocation(line: 248, column: 30, scope: !8108)
!8127 = !DILocation(line: 248, column: 27, scope: !8108)
!8128 = !DILocation(line: 249, column: 5, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8108, file: !7874, line: 248, column: 36)
!8130 = !DILocation(line: 250, column: 5, scope: !8129)
!8131 = distinct !{!8131, !8124, !8132}
!8132 = !DILocation(line: 251, column: 2, scope: !8108)
!8133 = !DILocation(line: 253, column: 9, scope: !8108)
!8134 = !DILocation(line: 253, column: 15, scope: !8108)
!8135 = !DILocation(line: 253, column: 13, scope: !8108)
!8136 = !DILocation(line: 253, column: 2, scope: !8108)
!8137 = !DILocation(line: 254, column: 1, scope: !8108)
!8138 = distinct !DISubprogram(name: "memmove", scope: !7874, file: !7874, line: 263, type: !8139, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!107, !107, !13, !234}
!8141 = !{!8142, !8143, !8144, !8145, !8146}
!8142 = !DILocalVariable(name: "d", arg: 1, scope: !8138, file: !7874, line: 263, type: !107)
!8143 = !DILocalVariable(name: "s", arg: 2, scope: !8138, file: !7874, line: 263, type: !13)
!8144 = !DILocalVariable(name: "n", arg: 3, scope: !8138, file: !7874, line: 263, type: !234)
!8145 = !DILocalVariable(name: "dest", scope: !8138, file: !7874, line: 265, type: !285)
!8146 = !DILocalVariable(name: "src", scope: !8138, file: !7874, line: 266, type: !279)
!8147 = !DILocation(line: 0, scope: !8138)
!8148 = !DILocation(line: 268, column: 21, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8138, file: !7874, line: 268, column: 6)
!8150 = !DILocation(line: 268, column: 28, scope: !8149)
!8151 = !DILocation(line: 268, column: 6, scope: !8138)
!8152 = !DILocation(line: 280, column: 12, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !7874, line: 278, column: 9)
!8154 = !DILocation(line: 280, column: 3, scope: !8153)
!8155 = !DILocation(line: 275, column: 5, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !7874, line: 274, column: 17)
!8157 = distinct !DILexicalBlock(scope: !8149, file: !7874, line: 268, column: 33)
!8158 = !DILocation(line: 276, column: 14, scope: !8156)
!8159 = !DILocation(line: 276, column: 4, scope: !8156)
!8160 = !DILocation(line: 276, column: 12, scope: !8156)
!8161 = !DILocation(line: 274, column: 12, scope: !8157)
!8162 = !DILocation(line: 274, column: 3, scope: !8157)
!8163 = distinct !{!8163, !8162, !8164}
!8164 = !DILocation(line: 277, column: 3, scope: !8157)
!8165 = !DILocation(line: 281, column: 12, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8153, file: !7874, line: 280, column: 17)
!8167 = !DILocation(line: 281, column: 10, scope: !8166)
!8168 = !DILocation(line: 282, column: 8, scope: !8166)
!8169 = !DILocation(line: 283, column: 7, scope: !8166)
!8170 = !DILocation(line: 284, column: 5, scope: !8166)
!8171 = distinct !{!8171, !8154, !8172}
!8172 = !DILocation(line: 285, column: 3, scope: !8153)
!8173 = !DILocation(line: 288, column: 2, scope: !8138)
!8174 = distinct !DISubprogram(name: "memcpy", scope: !7874, file: !7874, line: 298, type: !8175, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8179)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{!107, !8177, !8178, !234}
!8177 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8178 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8179 = !{!8180, !8181, !8182, !8183, !8184}
!8180 = !DILocalVariable(name: "d", arg: 1, scope: !8174, file: !7874, line: 298, type: !8177)
!8181 = !DILocalVariable(name: "s", arg: 2, scope: !8174, file: !7874, line: 298, type: !8178)
!8182 = !DILocalVariable(name: "n", arg: 3, scope: !8174, file: !7874, line: 298, type: !234)
!8183 = !DILocalVariable(name: "d_byte", scope: !8174, file: !7874, line: 302, type: !1005)
!8184 = !DILocalVariable(name: "s_byte", scope: !8174, file: !7874, line: 303, type: !2938)
!8185 = !DILocation(line: 0, scope: !8174)
!8186 = !DILocation(line: 337, column: 11, scope: !8174)
!8187 = !DILocation(line: 337, column: 2, scope: !8174)
!8188 = !DILocation(line: 338, column: 25, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8174, file: !7874, line: 337, column: 16)
!8190 = !DILocation(line: 338, column: 17, scope: !8189)
!8191 = !DILocation(line: 338, column: 11, scope: !8189)
!8192 = !DILocation(line: 338, column: 15, scope: !8189)
!8193 = !DILocation(line: 339, column: 4, scope: !8189)
!8194 = distinct !{!8194, !8187, !8195}
!8195 = !DILocation(line: 340, column: 2, scope: !8174)
!8196 = !DILocation(line: 342, column: 2, scope: !8174)
!8197 = distinct !DISubprogram(name: "memset", scope: !7874, file: !7874, line: 352, type: !8198, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8200)
!8198 = !DISubroutineType(types: !8199)
!8199 = !{!107, !107, !109, !234}
!8200 = !{!8201, !8202, !8203, !8204, !8205}
!8201 = !DILocalVariable(name: "buf", arg: 1, scope: !8197, file: !7874, line: 352, type: !107)
!8202 = !DILocalVariable(name: "c", arg: 2, scope: !8197, file: !7874, line: 352, type: !109)
!8203 = !DILocalVariable(name: "n", arg: 3, scope: !8197, file: !7874, line: 352, type: !234)
!8204 = !DILocalVariable(name: "d_byte", scope: !8197, file: !7874, line: 356, type: !1005)
!8205 = !DILocalVariable(name: "c_byte", scope: !8197, file: !7874, line: 357, type: !181)
!8206 = !DILocation(line: 0, scope: !8197)
!8207 = !DILocation(line: 357, column: 25, scope: !8197)
!8208 = !DILocation(line: 389, column: 11, scope: !8197)
!8209 = !DILocation(line: 389, column: 2, scope: !8197)
!8210 = !DILocation(line: 390, column: 11, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8197, file: !7874, line: 389, column: 16)
!8212 = !DILocation(line: 390, column: 15, scope: !8211)
!8213 = !DILocation(line: 391, column: 4, scope: !8211)
!8214 = distinct !{!8214, !8209, !8215}
!8215 = !DILocation(line: 392, column: 2, scope: !8197)
!8216 = !DILocation(line: 394, column: 2, scope: !8197)
!8217 = distinct !DISubprogram(name: "memchr", scope: !7874, file: !7874, line: 404, type: !8218, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !8220)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{!107, !13, !109, !234}
!8220 = !{!8221, !8222, !8223, !8224}
!8221 = !DILocalVariable(name: "s", arg: 1, scope: !8217, file: !7874, line: 404, type: !13)
!8222 = !DILocalVariable(name: "c", arg: 2, scope: !8217, file: !7874, line: 404, type: !109)
!8223 = !DILocalVariable(name: "n", arg: 3, scope: !8217, file: !7874, line: 404, type: !234)
!8224 = !DILocalVariable(name: "p", scope: !8225, file: !7874, line: 407, type: !2938)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !7874, line: 406, column: 14)
!8226 = distinct !DILexicalBlock(scope: !8217, file: !7874, line: 406, column: 6)
!8227 = !DILocation(line: 0, scope: !8217)
!8228 = !DILocation(line: 406, column: 8, scope: !8226)
!8229 = !DILocation(line: 406, column: 6, scope: !8217)
!8230 = !DILocation(line: 409, column: 3, scope: !8225)
!8231 = !DILocation(line: 0, scope: !8225)
!8232 = !DILocation(line: 410, column: 8, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8234, file: !7874, line: 410, column: 8)
!8234 = distinct !DILexicalBlock(scope: !8225, file: !7874, line: 409, column: 6)
!8235 = !DILocation(line: 410, column: 13, scope: !8233)
!8236 = !DILocation(line: 410, column: 8, scope: !8234)
!8237 = distinct !{!8237, !8230, !8238}
!8238 = !DILocation(line: 414, column: 20, scope: !8225)
!8239 = !DILocation(line: 417, column: 2, scope: !8217)
!8240 = !DILocation(line: 418, column: 1, scope: !8217)
!8241 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4371, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8242)
!8242 = !{!8243}
!8243 = !DILocalVariable(name: "hook", arg: 1, scope: !8241, file: !573, line: 23, type: !302)
!8244 = !DILocation(line: 0, scope: !8241)
!8245 = !DILocation(line: 25, column: 15, scope: !8241)
!8246 = !DILocation(line: 26, column: 1, scope: !8241)
!8247 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "c", arg: 1, scope: !8247, file: !573, line: 14, type: !109)
!8250 = !DILocation(line: 0, scope: !8247)
!8251 = !DILocation(line: 18, column: 2, scope: !8247)
!8252 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8253, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8255)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!109, !109, !569}
!8255 = !{!8256, !8257}
!8256 = !DILocalVariable(name: "c", arg: 1, scope: !8252, file: !573, line: 28, type: !109)
!8257 = !DILocalVariable(name: "stream", arg: 2, scope: !8252, file: !573, line: 28, type: !569)
!8258 = !DILocation(line: 0, scope: !8252)
!8259 = !DILocation(line: 30, column: 27, scope: !8252)
!8260 = !DILocation(line: 30, column: 50, scope: !8252)
!8261 = !DILocation(line: 30, column: 9, scope: !8252)
!8262 = !DILocation(line: 30, column: 2, scope: !8252)
!8263 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8253, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8264)
!8264 = !{!8265, !8266}
!8265 = !DILocalVariable(name: "c", arg: 1, scope: !8263, file: !573, line: 41, type: !109)
!8266 = !DILocalVariable(name: "stream", arg: 2, scope: !8263, file: !573, line: 41, type: !569)
!8267 = !DILocation(line: 0, scope: !8263)
!8268 = !DILocation(line: 43, column: 9, scope: !8263)
!8269 = !DILocation(line: 43, column: 2, scope: !8263)
!8270 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8271, file: !8271, line: 72, type: !8253, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8272)
!8271 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!8272 = !{!8273, !8274}
!8273 = !DILocalVariable(name: "c", arg: 1, scope: !8270, file: !8271, line: 72, type: !109)
!8274 = !DILocalVariable(name: "stream", arg: 2, scope: !8270, file: !8271, line: 72, type: !569)
!8275 = !DILocation(line: 0, scope: !8270)
!8276 = !DILocation(line: 81, column: 2, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8270, file: !8271, line: 81, column: 2)
!8278 = !{i64 2155131788}
!8279 = !DILocation(line: 82, column: 9, scope: !8270)
!8280 = !DILocation(line: 82, column: 2, scope: !8270)
!8281 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8282, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8285)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!109, !7878, !8284}
!8284 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8285 = !{!8286, !8287, !8288, !8289}
!8286 = !DILocalVariable(name: "s", arg: 1, scope: !8281, file: !573, line: 46, type: !7878)
!8287 = !DILocalVariable(name: "stream", arg: 2, scope: !8281, file: !573, line: 46, type: !8284)
!8288 = !DILocalVariable(name: "len", scope: !8281, file: !573, line: 48, type: !109)
!8289 = !DILocalVariable(name: "ret", scope: !8281, file: !573, line: 49, type: !109)
!8290 = !DILocation(line: 0, scope: !8281)
!8291 = !DILocation(line: 48, column: 12, scope: !8281)
!8292 = !DILocation(line: 51, column: 8, scope: !8281)
!8293 = !DILocation(line: 53, column: 13, scope: !8281)
!8294 = !DILocation(line: 53, column: 9, scope: !8281)
!8295 = !DILocation(line: 53, column: 2, scope: !8281)
!8296 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8297, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8299)
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!234, !8178, !234, !234, !8284}
!8299 = !{!8300, !8301, !8302, !8303}
!8300 = !DILocalVariable(name: "ptr", arg: 1, scope: !8296, file: !573, line: 99, type: !8178)
!8301 = !DILocalVariable(name: "size", arg: 2, scope: !8296, file: !573, line: 99, type: !234)
!8302 = !DILocalVariable(name: "nitems", arg: 3, scope: !8296, file: !573, line: 99, type: !234)
!8303 = !DILocalVariable(name: "stream", arg: 4, scope: !8296, file: !573, line: 100, type: !8284)
!8304 = !DILocation(line: 0, scope: !8296)
!8305 = !DILocation(line: 102, column: 9, scope: !8296)
!8306 = !DILocation(line: 102, column: 2, scope: !8296)
!8307 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8271, file: !8271, line: 96, type: !8297, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8308)
!8308 = !{!8309, !8310, !8311, !8312}
!8309 = !DILocalVariable(name: "ptr", arg: 1, scope: !8307, file: !8271, line: 96, type: !8178)
!8310 = !DILocalVariable(name: "size", arg: 2, scope: !8307, file: !8271, line: 96, type: !234)
!8311 = !DILocalVariable(name: "nitems", arg: 3, scope: !8307, file: !8271, line: 96, type: !234)
!8312 = !DILocalVariable(name: "stream", arg: 4, scope: !8307, file: !8271, line: 96, type: !8284)
!8313 = !DILocation(line: 0, scope: !8307)
!8314 = !DILocation(line: 107, column: 2, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8307, file: !8271, line: 107, column: 2)
!8316 = !{i64 2155131892}
!8317 = !DILocation(line: 108, column: 9, scope: !8307)
!8318 = !DILocation(line: 108, column: 2, scope: !8307)
!8319 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8297, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8320)
!8320 = !{!8321, !8322, !8323, !8324, !8325, !8326, !8327, !8328}
!8321 = !DILocalVariable(name: "ptr", arg: 1, scope: !8319, file: !573, line: 56, type: !8178)
!8322 = !DILocalVariable(name: "size", arg: 2, scope: !8319, file: !573, line: 56, type: !234)
!8323 = !DILocalVariable(name: "nitems", arg: 3, scope: !8319, file: !573, line: 57, type: !234)
!8324 = !DILocalVariable(name: "stream", arg: 4, scope: !8319, file: !573, line: 57, type: !8284)
!8325 = !DILocalVariable(name: "i", scope: !8319, file: !573, line: 59, type: !234)
!8326 = !DILocalVariable(name: "j", scope: !8319, file: !573, line: 60, type: !234)
!8327 = !DILocalVariable(name: "p", scope: !8319, file: !573, line: 61, type: !2938)
!8328 = !DILabel(scope: !8319, name: "done", file: !573, line: 82)
!8329 = !DILocation(line: 0, scope: !8319)
!8330 = !DILocation(line: 63, column: 14, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8319, file: !573, line: 63, column: 6)
!8332 = !DILocation(line: 63, column: 24, scope: !8331)
!8333 = !DILocation(line: 72, column: 3, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8319, file: !573, line: 70, column: 5)
!8335 = !DILocation(line: 0, scope: !8334)
!8336 = !DILocation(line: 73, column: 8, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !573, line: 73, column: 8)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !573, line: 72, column: 6)
!8339 = !DILocation(line: 73, column: 29, scope: !8337)
!8340 = !DILocation(line: 73, column: 27, scope: !8337)
!8341 = !DILocation(line: 73, column: 21, scope: !8337)
!8342 = !DILocation(line: 73, column: 33, scope: !8337)
!8343 = !DILocation(line: 73, column: 8, scope: !8338)
!8344 = !DILocation(line: 76, column: 5, scope: !8338)
!8345 = !DILocation(line: 77, column: 14, scope: !8334)
!8346 = !DILocation(line: 77, column: 3, scope: !8338)
!8347 = distinct !{!8347, !8333, !8348}
!8348 = !DILocation(line: 77, column: 17, scope: !8334)
!8349 = !DILocation(line: 79, column: 4, scope: !8334)
!8350 = !DILocation(line: 80, column: 13, scope: !8319)
!8351 = !DILocation(line: 80, column: 2, scope: !8334)
!8352 = distinct !{!8352, !8353, !8354}
!8353 = !DILocation(line: 70, column: 2, scope: !8319)
!8354 = !DILocation(line: 80, column: 16, scope: !8319)
!8355 = !DILocation(line: 82, column: 1, scope: !8319)
!8356 = !DILocation(line: 83, column: 17, scope: !8319)
!8357 = !DILocation(line: 83, column: 2, scope: !8319)
!8358 = !DILocation(line: 84, column: 1, scope: !8319)
!8359 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8360, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!109, !279}
!8362 = !{!8363}
!8363 = !DILocalVariable(name: "s", arg: 1, scope: !8359, file: !573, line: 106, type: !279)
!8364 = !DILocation(line: 0, scope: !8359)
!8365 = !DILocation(line: 108, column: 6, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8359, file: !573, line: 108, column: 6)
!8367 = !DILocation(line: 108, column: 23, scope: !8366)
!8368 = !DILocation(line: 108, column: 6, scope: !8359)
!8369 = !DILocation(line: 112, column: 9, scope: !8359)
!8370 = !DILocation(line: 112, column: 29, scope: !8359)
!8371 = !DILocation(line: 112, column: 2, scope: !8359)
!8372 = !DILocation(line: 113, column: 1, scope: !8359)
!8373 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !714, file: !714, line: 368, type: !767, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8374)
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "dev", arg: 1, scope: !8373, file: !714, line: 368, type: !743)
!8376 = !DILocation(line: 0, scope: !8373)
!8377 = !DILocation(line: 370, column: 2, scope: !8373)
!8378 = !DILocation(line: 371, column: 1, scope: !8373)
!8379 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !714, file: !714, line: 243, type: !8380, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !109, !109, !743}
!8382 = !{!8383, !8384, !8385, !8386, !8388}
!8383 = !DILocalVariable(name: "min", arg: 1, scope: !8379, file: !714, line: 243, type: !109)
!8384 = !DILocalVariable(name: "max", arg: 2, scope: !8379, file: !714, line: 243, type: !109)
!8385 = !DILocalVariable(name: "dev", arg: 3, scope: !8379, file: !714, line: 243, type: !743)
!8386 = !DILocalVariable(name: "data", scope: !8379, file: !714, line: 245, type: !8387)
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!8388 = !DILocalVariable(name: "line", scope: !8379, file: !714, line: 246, type: !109)
!8389 = !DILocation(line: 0, scope: !8379)
!8390 = !DILocation(line: 245, column: 38, scope: !8379)
!8391 = !DILocation(line: 249, column: 24, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !714, line: 249, column: 2)
!8393 = distinct !DILexicalBlock(scope: !8379, file: !714, line: 249, column: 2)
!8394 = !DILocation(line: 249, column: 2, scope: !8393)
!8395 = !DILocation(line: 251, column: 7, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !714, line: 251, column: 7)
!8397 = distinct !DILexicalBlock(scope: !8392, file: !714, line: 249, column: 39)
!8398 = !DILocation(line: 251, column: 7, scope: !8397)
!8399 = !DILocation(line: 253, column: 4, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8396, file: !714, line: 251, column: 36)
!8401 = !DILocation(line: 256, column: 24, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8400, file: !714, line: 256, column: 8)
!8403 = !DILocation(line: 256, column: 9, scope: !8402)
!8404 = !DILocation(line: 256, column: 8, scope: !8400)
!8405 = !DILocation(line: 260, column: 43, scope: !8400)
!8406 = !DILocation(line: 260, column: 4, scope: !8400)
!8407 = !DILocation(line: 261, column: 3, scope: !8400)
!8408 = !DILocation(line: 249, column: 35, scope: !8392)
!8409 = distinct !{!8409, !8394, !8410}
!8410 = !DILocation(line: 262, column: 2, scope: !8393)
!8411 = !DILocation(line: 263, column: 1, scope: !8379)
!8412 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !714, file: !714, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8413)
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "line", arg: 1, scope: !8412, file: !714, line: 158, type: !109)
!8415 = !DILocation(line: 0, scope: !8412)
!8416 = !DILocation(line: 170, column: 38, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !714, line: 160, column: 17)
!8418 = distinct !DILexicalBlock(scope: !8412, file: !714, line: 160, column: 6)
!8419 = !DILocation(line: 170, column: 10, scope: !8417)
!8420 = !DILocation(line: 176, column: 1, scope: !8412)
!8421 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !714, file: !714, line: 183, type: !8422, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8424)
!8422 = !DISubroutineType(types: !8423)
!8423 = !{null, !109}
!8424 = !{!8425}
!8425 = !DILocalVariable(name: "line", arg: 1, scope: !8421, file: !714, line: 183, type: !109)
!8426 = !DILocation(line: 0, scope: !8421)
!8427 = !DILocation(line: 195, column: 28, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !714, line: 185, column: 17)
!8429 = distinct !DILexicalBlock(scope: !8421, file: !714, line: 185, column: 6)
!8430 = !DILocation(line: 195, column: 3, scope: !8428)
!8431 = !DILocation(line: 200, column: 1, scope: !8421)
!8432 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8433, file: !8433, line: 910, type: !6579, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8434)
!8433 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8434 = !{!8435}
!8435 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8432, file: !8433, line: 910, type: !110)
!8436 = !DILocation(line: 0, scope: !8432)
!8437 = !DILocation(line: 912, column: 3, scope: !8432)
!8438 = !DILocation(line: 913, column: 1, scope: !8432)
!8439 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8433, file: !8433, line: 834, type: !7769, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8440)
!8440 = !{!8441}
!8441 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8439, file: !8433, line: 834, type: !110)
!8442 = !DILocation(line: 0, scope: !8439)
!8443 = !DILocation(line: 836, column: 11, scope: !8439)
!8444 = !DILocation(line: 836, column: 40, scope: !8439)
!8445 = !DILocation(line: 836, column: 3, scope: !8439)
!8446 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !714, file: !714, line: 304, type: !767, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !714, line: 304, type: !743)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 306, column: 2, scope: !8446)
!8451 = !DILocation(line: 307, column: 1, scope: !8446)
!8452 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !714, file: !714, line: 299, type: !767, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8453)
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "dev", arg: 1, scope: !8452, file: !714, line: 299, type: !743)
!8455 = !DILocation(line: 0, scope: !8452)
!8456 = !DILocation(line: 301, column: 2, scope: !8452)
!8457 = !DILocation(line: 302, column: 1, scope: !8452)
!8458 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !714, file: !714, line: 294, type: !767, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8459)
!8459 = !{!8460}
!8460 = !DILocalVariable(name: "dev", arg: 1, scope: !8458, file: !714, line: 294, type: !743)
!8461 = !DILocation(line: 0, scope: !8458)
!8462 = !DILocation(line: 296, column: 2, scope: !8458)
!8463 = !DILocation(line: 297, column: 1, scope: !8458)
!8464 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !714, file: !714, line: 397, type: !767, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8465)
!8465 = !{!8466}
!8466 = !DILocalVariable(name: "dev", arg: 1, scope: !8464, file: !714, line: 397, type: !743)
!8467 = !DILocation(line: 0, scope: !8464)
!8468 = !DILocation(line: 399, column: 2, scope: !8464)
!8469 = !DILocation(line: 400, column: 1, scope: !8464)
!8470 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !714, file: !714, line: 392, type: !767, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8471)
!8471 = !{!8472}
!8472 = !DILocalVariable(name: "dev", arg: 1, scope: !8470, file: !714, line: 392, type: !743)
!8473 = !DILocation(line: 0, scope: !8470)
!8474 = !DILocation(line: 394, column: 2, scope: !8470)
!8475 = !DILocation(line: 395, column: 1, scope: !8470)
!8476 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !714, file: !714, line: 289, type: !767, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8477)
!8477 = !{!8478}
!8478 = !DILocalVariable(name: "dev", arg: 1, scope: !8476, file: !714, line: 289, type: !743)
!8479 = !DILocation(line: 0, scope: !8476)
!8480 = !DILocation(line: 291, column: 2, scope: !8476)
!8481 = !DILocation(line: 292, column: 1, scope: !8476)
!8482 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !714, file: !714, line: 387, type: !767, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8483)
!8483 = !{!8484}
!8484 = !DILocalVariable(name: "dev", arg: 1, scope: !8482, file: !714, line: 387, type: !743)
!8485 = !DILocation(line: 0, scope: !8482)
!8486 = !DILocation(line: 389, column: 2, scope: !8482)
!8487 = !DILocation(line: 390, column: 1, scope: !8482)
!8488 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !714, file: !714, line: 382, type: !767, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8489)
!8489 = !{!8490}
!8490 = !DILocalVariable(name: "dev", arg: 1, scope: !8488, file: !714, line: 382, type: !743)
!8491 = !DILocation(line: 0, scope: !8488)
!8492 = !DILocation(line: 384, column: 2, scope: !8488)
!8493 = !DILocation(line: 385, column: 1, scope: !8488)
!8494 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !714, file: !714, line: 373, type: !767, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8495)
!8495 = !{!8496}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !714, line: 373, type: !743)
!8497 = !DILocation(line: 0, scope: !8494)
!8498 = !DILocation(line: 375, column: 2, scope: !8494)
!8499 = !DILocation(line: 376, column: 1, scope: !8494)
!8500 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !714, file: !714, line: 284, type: !767, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "dev", arg: 1, scope: !8500, file: !714, line: 284, type: !743)
!8503 = !DILocation(line: 0, scope: !8500)
!8504 = !DILocation(line: 286, column: 2, scope: !8500)
!8505 = !DILocation(line: 287, column: 1, scope: !8500)
!8506 = distinct !DISubprogram(name: "stm32_exti_init", scope: !714, file: !714, line: 416, type: !741, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8507)
!8507 = !{!8508}
!8508 = !DILocalVariable(name: "dev", arg: 1, scope: !8506, file: !714, line: 416, type: !743)
!8509 = !DILocation(line: 0, scope: !8506)
!8510 = !DILocation(line: 418, column: 2, scope: !8506)
!8511 = !DILocation(line: 420, column: 2, scope: !8506)
!8512 = !DILocation(line: 0, scope: !766)
!8513 = !DILocation(line: 493, column: 2, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !766, file: !714, line: 493, column: 2)
!8515 = !DILocation(line: 497, column: 2, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !766, file: !714, line: 497, column: 2)
!8517 = !DILocation(line: 507, column: 2, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !766, file: !714, line: 507, column: 2)
!8519 = !DILocation(line: 512, column: 2, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !766, file: !714, line: 512, column: 2)
!8521 = !DILocation(line: 516, column: 2, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !766, file: !714, line: 516, column: 2)
!8523 = !DILocation(line: 523, column: 2, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !766, file: !714, line: 523, column: 2)
!8525 = !DILocation(line: 527, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !766, file: !714, line: 527, column: 2)
!8527 = !DILocation(line: 581, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !766, file: !714, line: 581, column: 2)
!8529 = !DILocation(line: 586, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !766, file: !714, line: 586, column: 2)
!8531 = !DILocation(line: 591, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !766, file: !714, line: 591, column: 2)
!8533 = !DILocation(line: 595, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !766, file: !714, line: 595, column: 2)
!8535 = !DILocation(line: 607, column: 1, scope: !766)
!8536 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !714, file: !714, line: 112, type: !8422, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8537)
!8537 = !{!8538, !8539}
!8538 = !DILocalVariable(name: "line", arg: 1, scope: !8536, file: !714, line: 112, type: !109)
!8539 = !DILocalVariable(name: "irqnum", scope: !8536, file: !714, line: 114, type: !109)
!8540 = !DILocation(line: 0, scope: !8536)
!8541 = !DILocation(line: 122, column: 13, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8536, file: !714, line: 122, column: 6)
!8543 = !DILocation(line: 122, column: 6, scope: !8536)
!8544 = !DILocation(line: 123, column: 3, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !714, line: 123, column: 3)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !714, line: 123, column: 3)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !714, line: 123, column: 3)
!8548 = distinct !DILexicalBlock(scope: !8542, file: !714, line: 122, column: 22)
!8549 = !DILocation(line: 121, column: 11, scope: !8536)
!8550 = !DILocation(line: 130, column: 26, scope: !8536)
!8551 = !DILocation(line: 130, column: 2, scope: !8536)
!8552 = !DILocation(line: 134, column: 2, scope: !8536)
!8553 = !DILocation(line: 135, column: 1, scope: !8536)
!8554 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8433, file: !8433, line: 268, type: !6579, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8555)
!8555 = !{!8556}
!8556 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8554, file: !8433, line: 268, type: !110)
!8557 = !DILocation(line: 0, scope: !8554)
!8558 = !DILocation(line: 270, column: 3, scope: !8554)
!8559 = !DILocation(line: 271, column: 1, scope: !8554)
!8560 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !714, file: !714, line: 137, type: !8422, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8561)
!8561 = !{!8562}
!8562 = !DILocalVariable(name: "line", arg: 1, scope: !8560, file: !714, line: 137, type: !109)
!8563 = !DILocation(line: 0, scope: !8560)
!8564 = !DILocation(line: 141, column: 11, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8560, file: !714, line: 141, column: 6)
!8566 = !DILocation(line: 141, column: 6, scope: !8560)
!8567 = !DILocation(line: 145, column: 28, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8565, file: !714, line: 141, column: 17)
!8569 = !DILocation(line: 145, column: 3, scope: !8568)
!8570 = !DILocation(line: 147, column: 2, scope: !8568)
!8571 = !DILocation(line: 151, column: 1, scope: !8560)
!8572 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8433, file: !8433, line: 309, type: !6579, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8573)
!8573 = !{!8574}
!8574 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8572, file: !8433, line: 309, type: !110)
!8575 = !DILocation(line: 0, scope: !8572)
!8576 = !DILocation(line: 311, column: 3, scope: !8572)
!8577 = !DILocation(line: 312, column: 1, scope: !8572)
!8578 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !714, file: !714, line: 202, type: !8579, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8581)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{null, !109, !109}
!8581 = !{!8582, !8583}
!8582 = !DILocalVariable(name: "line", arg: 1, scope: !8578, file: !714, line: 202, type: !109)
!8583 = !DILocalVariable(name: "trigger", arg: 2, scope: !8578, file: !714, line: 202, type: !109)
!8584 = !DILocation(line: 0, scope: !8578)
!8585 = !DILocation(line: 211, column: 2, scope: !8578)
!8586 = !DILocation(line: 213, column: 36, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8578, file: !714, line: 211, column: 19)
!8588 = !DILocation(line: 213, column: 3, scope: !8587)
!8589 = !DILocation(line: 214, column: 3, scope: !8587)
!8590 = !DILocation(line: 215, column: 3, scope: !8587)
!8591 = !DILocation(line: 217, column: 35, scope: !8587)
!8592 = !DILocation(line: 217, column: 3, scope: !8587)
!8593 = !DILocation(line: 218, column: 3, scope: !8587)
!8594 = !DILocation(line: 219, column: 3, scope: !8587)
!8595 = !DILocation(line: 221, column: 36, scope: !8587)
!8596 = !DILocation(line: 221, column: 3, scope: !8587)
!8597 = !DILocation(line: 222, column: 3, scope: !8587)
!8598 = !DILocation(line: 223, column: 3, scope: !8587)
!8599 = !DILocation(line: 225, column: 35, scope: !8587)
!8600 = !DILocation(line: 225, column: 3, scope: !8587)
!8601 = !DILocation(line: 226, column: 3, scope: !8587)
!8602 = !DILocation(line: 227, column: 3, scope: !8587)
!8603 = !DILocation(line: 232, column: 1, scope: !8578)
!8604 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8433, file: !8433, line: 573, type: !6579, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8605)
!8605 = !{!8606}
!8606 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8604, file: !8433, line: 573, type: !110)
!8607 = !DILocation(line: 0, scope: !8604)
!8608 = !DILocation(line: 575, column: 3, scope: !8604)
!8609 = !DILocation(line: 577, column: 1, scope: !8604)
!8610 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8433, file: !8433, line: 703, type: !6579, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8611)
!8611 = !{!8612}
!8612 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8610, file: !8433, line: 703, type: !110)
!8613 = !DILocation(line: 0, scope: !8610)
!8614 = !DILocation(line: 705, column: 3, scope: !8610)
!8615 = !DILocation(line: 706, column: 1, scope: !8610)
!8616 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8433, file: !8433, line: 529, type: !6579, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8617)
!8617 = !{!8618}
!8618 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8616, file: !8433, line: 529, type: !110)
!8619 = !DILocation(line: 0, scope: !8616)
!8620 = !DILocation(line: 531, column: 3, scope: !8616)
!8621 = !DILocation(line: 533, column: 1, scope: !8616)
!8622 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8433, file: !8433, line: 661, type: !6579, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8623)
!8623 = !{!8624}
!8624 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8622, file: !8433, line: 661, type: !110)
!8625 = !DILocation(line: 0, scope: !8622)
!8626 = !DILocation(line: 663, column: 3, scope: !8622)
!8627 = !DILocation(line: 664, column: 1, scope: !8622)
!8628 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !714, file: !714, line: 433, type: !8629, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8631)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!109, !109, !754, !107}
!8631 = !{!8632, !8633, !8634, !8635, !8637}
!8632 = !DILocalVariable(name: "line", arg: 1, scope: !8628, file: !714, line: 433, type: !109)
!8633 = !DILocalVariable(name: "cb", arg: 2, scope: !8628, file: !714, line: 433, type: !754)
!8634 = !DILocalVariable(name: "arg", arg: 3, scope: !8628, file: !714, line: 433, type: !107)
!8635 = !DILocalVariable(name: "dev", scope: !8628, file: !714, line: 435, type: !8636)
!8636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!8637 = !DILocalVariable(name: "data", scope: !8628, file: !714, line: 436, type: !8387)
!8638 = !DILocation(line: 0, scope: !8628)
!8639 = !DILocation(line: 438, column: 21, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8628, file: !714, line: 438, column: 6)
!8641 = !DILocation(line: 438, column: 6, scope: !8640)
!8642 = !DILocation(line: 438, column: 6, scope: !8628)
!8643 = !DILocation(line: 442, column: 20, scope: !8628)
!8644 = !DILocation(line: 443, column: 17, scope: !8628)
!8645 = !DILocation(line: 443, column: 22, scope: !8628)
!8646 = !DILocation(line: 445, column: 2, scope: !8628)
!8647 = !DILocation(line: 446, column: 1, scope: !8628)
!8648 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !714, file: !714, line: 448, type: !8422, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8649)
!8649 = !{!8650, !8651, !8652}
!8650 = !DILocalVariable(name: "line", arg: 1, scope: !8648, file: !714, line: 448, type: !109)
!8651 = !DILocalVariable(name: "dev", scope: !8648, file: !714, line: 450, type: !8636)
!8652 = !DILocalVariable(name: "data", scope: !8648, file: !714, line: 451, type: !8387)
!8653 = !DILocation(line: 0, scope: !8648)
!8654 = !DILocation(line: 453, column: 17, scope: !8648)
!8655 = !DILocation(line: 453, column: 20, scope: !8648)
!8656 = !DILocation(line: 454, column: 17, scope: !8648)
!8657 = !DILocation(line: 454, column: 22, scope: !8648)
!8658 = !DILocation(line: 455, column: 1, scope: !8648)
!8659 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !904, file: !904, line: 183, type: !942, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8660)
!8660 = !{!8661, !8662, !8663, !8664, !8665}
!8661 = !DILocalVariable(name: "dev", arg: 1, scope: !8659, file: !904, line: 183, type: !933)
!8662 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8659, file: !904, line: 184, type: !944)
!8663 = !DILocalVariable(name: "pclken", scope: !8659, file: !904, line: 186, type: !894)
!8664 = !DILocalVariable(name: "reg", scope: !8659, file: !904, line: 187, type: !1484)
!8665 = !DILocalVariable(name: "reg_val", scope: !8659, file: !904, line: 188, type: !110)
!8666 = !DILocation(line: 0, scope: !8659)
!8667 = !DILocation(line: 192, column: 6, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8659, file: !904, line: 192, column: 6)
!8669 = !DILocation(line: 192, column: 6, scope: !8659)
!8670 = !DILocation(line: 197, column: 52, scope: !8659)
!8671 = !DILocation(line: 197, column: 8, scope: !8659)
!8672 = !DILocation(line: 198, column: 12, scope: !8659)
!8673 = !DILocation(line: 199, column: 21, scope: !8659)
!8674 = !DILocation(line: 199, column: 10, scope: !8659)
!8675 = !DILocation(line: 200, column: 7, scope: !8659)
!8676 = !DILocation(line: 202, column: 2, scope: !8659)
!8677 = !DILocation(line: 203, column: 1, scope: !8659)
!8678 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !904, file: !904, line: 205, type: !942, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8679)
!8679 = !{!8680, !8681, !8682, !8683, !8684}
!8680 = !DILocalVariable(name: "dev", arg: 1, scope: !8678, file: !904, line: 205, type: !933)
!8681 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8678, file: !904, line: 206, type: !944)
!8682 = !DILocalVariable(name: "pclken", scope: !8678, file: !904, line: 208, type: !894)
!8683 = !DILocalVariable(name: "reg", scope: !8678, file: !904, line: 209, type: !1484)
!8684 = !DILocalVariable(name: "reg_val", scope: !8678, file: !904, line: 210, type: !110)
!8685 = !DILocation(line: 0, scope: !8678)
!8686 = !DILocation(line: 214, column: 6, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8678, file: !904, line: 214, column: 6)
!8688 = !DILocation(line: 214, column: 6, scope: !8678)
!8689 = !DILocation(line: 219, column: 52, scope: !8678)
!8690 = !DILocation(line: 219, column: 8, scope: !8678)
!8691 = !DILocation(line: 220, column: 12, scope: !8678)
!8692 = !DILocation(line: 221, column: 22, scope: !8678)
!8693 = !DILocation(line: 221, column: 13, scope: !8678)
!8694 = !DILocation(line: 221, column: 10, scope: !8678)
!8695 = !DILocation(line: 222, column: 7, scope: !8678)
!8696 = !DILocation(line: 224, column: 2, scope: !8678)
!8697 = !DILocation(line: 225, column: 1, scope: !8678)
!8698 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !904, file: !904, line: 262, type: !958, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8699)
!8699 = !{!8700, !8701, !8702, !8703, !8704, !8705, !8706, !8707}
!8700 = !DILocalVariable(name: "clock", arg: 1, scope: !8698, file: !904, line: 262, type: !933)
!8701 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8698, file: !904, line: 263, type: !944)
!8702 = !DILocalVariable(name: "rate", arg: 3, scope: !8698, file: !904, line: 264, type: !900)
!8703 = !DILocalVariable(name: "pclken", scope: !8698, file: !904, line: 266, type: !894)
!8704 = !DILocalVariable(name: "ahb_clock", scope: !8698, file: !904, line: 273, type: !110)
!8705 = !DILocalVariable(name: "apb1_clock", scope: !8698, file: !904, line: 274, type: !110)
!8706 = !DILocalVariable(name: "apb2_clock", scope: !8698, file: !904, line: 276, type: !110)
!8707 = !DILocalVariable(name: "ahb3_clock", scope: !8698, file: !904, line: 286, type: !110)
!8708 = !DILocation(line: 0, scope: !8698)
!8709 = !DILocation(line: 273, column: 23, scope: !8698)
!8710 = !DILocation(line: 299, column: 18, scope: !8698)
!8711 = !DILocation(line: 299, column: 2, scope: !8698)
!8712 = !DILocation(line: 274, column: 24, scope: !8698)
!8713 = !DILocation(line: 319, column: 3, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8698, file: !904, line: 299, column: 23)
!8715 = !DILocation(line: 276, column: 24, scope: !8698)
!8716 = !DILocation(line: 323, column: 3, scope: !8714)
!8717 = !DILocation(line: 346, column: 33, scope: !8714)
!8718 = !DILocation(line: 346, column: 11, scope: !8714)
!8719 = !DILocation(line: 350, column: 3, scope: !8714)
!8720 = !DILocation(line: 354, column: 33, scope: !8714)
!8721 = !DILocation(line: 354, column: 11, scope: !8714)
!8722 = !DILocation(line: 358, column: 3, scope: !8714)
!8723 = !DILocation(line: 374, column: 3, scope: !8714)
!8724 = !DILocation(line: 379, column: 3, scope: !8714)
!8725 = !DILocation(line: 0, scope: !8714)
!8726 = !DILocation(line: 396, column: 1, scope: !8698)
!8727 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !904, file: !904, line: 227, type: !974, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8728)
!8728 = !{!8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736}
!8729 = !DILocalVariable(name: "dev", arg: 1, scope: !8727, file: !904, line: 227, type: !933)
!8730 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8727, file: !904, line: 228, type: !944)
!8731 = !DILocalVariable(name: "data", arg: 3, scope: !8727, file: !904, line: 229, type: !107)
!8732 = !DILocalVariable(name: "pclken", scope: !8727, file: !904, line: 233, type: !894)
!8733 = !DILocalVariable(name: "reg", scope: !8727, file: !904, line: 234, type: !1484)
!8734 = !DILocalVariable(name: "reg_val", scope: !8727, file: !904, line: 235, type: !110)
!8735 = !DILocalVariable(name: "dt_val", scope: !8727, file: !904, line: 235, type: !110)
!8736 = !DILocalVariable(name: "err", scope: !8727, file: !904, line: 236, type: !109)
!8737 = !DILocation(line: 0, scope: !8727)
!8738 = !DILocation(line: 241, column: 30, scope: !8727)
!8739 = !DILocation(line: 241, column: 8, scope: !8727)
!8740 = !DILocation(line: 242, column: 10, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8727, file: !904, line: 242, column: 6)
!8742 = !DILocation(line: 242, column: 6, scope: !8727)
!8743 = !DILocation(line: 247, column: 11, scope: !8727)
!8744 = !DILocation(line: 248, column: 6, scope: !8727)
!8745 = !DILocation(line: 247, column: 44, scope: !8727)
!8746 = !DILocation(line: 250, column: 6, scope: !8727)
!8747 = !DILocation(line: 249, column: 52, scope: !8727)
!8748 = !DILocation(line: 249, column: 8, scope: !8727)
!8749 = !DILocation(line: 251, column: 12, scope: !8727)
!8750 = !DILocation(line: 252, column: 10, scope: !8727)
!8751 = !DILocation(line: 253, column: 7, scope: !8727)
!8752 = !DILocation(line: 255, column: 2, scope: !8727)
!8753 = !DILocation(line: 260, column: 1, scope: !8727)
!8754 = distinct !DISubprogram(name: "enabled_clock", scope: !904, file: !904, line: 100, type: !8755, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8757)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!109, !110}
!8757 = !{!8758, !8759}
!8758 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8754, file: !904, line: 100, type: !110)
!8759 = !DILocalVariable(name: "r", scope: !8754, file: !904, line: 102, type: !109)
!8760 = !DILocation(line: 0, scope: !8754)
!8761 = !DILocation(line: 104, column: 2, scope: !8754)
!8762 = !DILocation(line: 180, column: 2, scope: !8754)
!8763 = !DILocation(line: 181, column: 1, scope: !8754)
!8764 = distinct !DISubprogram(name: "get_bus_clock", scope: !904, file: !904, line: 79, type: !8765, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8767)
!8765 = !DISubroutineType(types: !8766)
!8766 = !{!110, !110, !110}
!8767 = !{!8768, !8769}
!8768 = !DILocalVariable(name: "clock", arg: 1, scope: !8764, file: !904, line: 79, type: !110)
!8769 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8764, file: !904, line: 79, type: !110)
!8770 = !DILocation(line: 0, scope: !8764)
!8771 = !DILocation(line: 81, column: 15, scope: !8764)
!8772 = !DILocation(line: 81, column: 2, scope: !8764)
!8773 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !904, file: !904, line: 68, type: !8774, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8776)
!8774 = !DISubroutineType(types: !8775)
!8775 = !{!110, !110, !109, !109, !109}
!8776 = !{!8777, !8778, !8779, !8780}
!8777 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8773, file: !904, line: 68, type: !110)
!8778 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8773, file: !904, line: 69, type: !109)
!8779 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8773, file: !904, line: 70, type: !109)
!8780 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8773, file: !904, line: 71, type: !109)
!8781 = !DILocation(line: 0, scope: !8773)
!8782 = !DILocation(line: 75, column: 22, scope: !8773)
!8783 = !DILocation(line: 76, column: 13, scope: !8773)
!8784 = !DILocation(line: 75, column: 34, scope: !8773)
!8785 = !DILocation(line: 75, column: 2, scope: !8773)
!8786 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !904, file: !904, line: 641, type: !931, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8787)
!8787 = !{!8788, !8789, !8790}
!8788 = !DILocalVariable(name: "dev", arg: 1, scope: !8786, file: !904, line: 641, type: !933)
!8789 = !DILocalVariable(name: "old_flash_freq", scope: !8786, file: !904, line: 664, type: !110)
!8790 = !DILocalVariable(name: "new_flash_freq", scope: !8786, file: !904, line: 665, type: !110)
!8791 = !DILocation(line: 0, scope: !8786)
!8792 = !DILocation(line: 646, column: 2, scope: !8786)
!8793 = !DILocation(line: 667, column: 19, scope: !8786)
!8794 = !DILocation(line: 674, column: 21, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8786, file: !904, line: 674, column: 6)
!8796 = !DILocation(line: 674, column: 6, scope: !8786)
!8797 = !DILocation(line: 675, column: 3, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8795, file: !904, line: 674, column: 59)
!8799 = !DILocation(line: 676, column: 2, scope: !8798)
!8800 = !DILocation(line: 680, column: 2, scope: !8786)
!8801 = !DILocation(line: 683, column: 2, scope: !8786)
!8802 = !DILocation(line: 690, column: 3, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !904, line: 689, column: 9)
!8804 = distinct !DILexicalBlock(scope: !8786, file: !904, line: 685, column: 6)
!8805 = !DILocation(line: 695, column: 2, scope: !8786)
!8806 = !DILocation(line: 696, column: 2, scope: !8786)
!8807 = !DILocation(line: 696, column: 9, scope: !8786)
!8808 = !DILocation(line: 696, column: 34, scope: !8786)
!8809 = distinct !{!8809, !8806, !8810}
!8810 = !DILocation(line: 697, column: 2, scope: !8786)
!8811 = !DILocation(line: 720, column: 21, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8786, file: !904, line: 720, column: 6)
!8813 = !DILocation(line: 720, column: 6, scope: !8786)
!8814 = !DILocation(line: 721, column: 3, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !904, line: 720, column: 60)
!8816 = !DILocation(line: 722, column: 2, scope: !8815)
!8817 = !DILocation(line: 725, column: 18, scope: !8786)
!8818 = !DILocation(line: 728, column: 2, scope: !8786)
!8819 = !DILocation(line: 730, column: 2, scope: !8786)
!8820 = !DILocation(line: 745, column: 2, scope: !8786)
!8821 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8822, file: !8822, line: 3275, type: !6569, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8822 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8823 = !DILocation(line: 3277, column: 21, scope: !8821)
!8824 = !DILocation(line: 3277, column: 3, scope: !8821)
!8825 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !904, file: !904, line: 507, type: !3153, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8826 = !DILocation(line: 516, column: 4, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !904, line: 515, column: 10)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !904, line: 513, column: 7)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !904, line: 510, column: 37)
!8830 = distinct !DILexicalBlock(scope: !8825, file: !904, line: 510, column: 6)
!8831 = !DILocation(line: 526, column: 3, scope: !8829)
!8832 = !DILocation(line: 527, column: 3, scope: !8829)
!8833 = !DILocation(line: 527, column: 10, scope: !8829)
!8834 = !DILocation(line: 527, column: 31, scope: !8829)
!8835 = distinct !{!8835, !8832, !8836}
!8836 = !DILocation(line: 529, column: 3, scope: !8829)
!8837 = !DILocation(line: 583, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !904, line: 577, column: 37)
!8839 = distinct !DILexicalBlock(scope: !8825, file: !904, line: 577, column: 6)
!8840 = !DILocation(line: 584, column: 3, scope: !8838)
!8841 = !DILocation(line: 584, column: 10, scope: !8838)
!8842 = !DILocation(line: 584, column: 31, scope: !8838)
!8843 = distinct !{!8843, !8840, !8844}
!8844 = !DILocation(line: 585, column: 3, scope: !8838)
!8845 = !DILocation(line: 627, column: 1, scope: !8825)
!8846 = distinct !DISubprogram(name: "set_up_plls", scope: !904, file: !904, line: 448, type: !3153, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8847 = !DILocation(line: 460, column: 6, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8846, file: !904, line: 460, column: 6)
!8849 = !DILocation(line: 460, column: 31, scope: !8848)
!8850 = !DILocation(line: 460, column: 6, scope: !8846)
!8851 = !DILocation(line: 461, column: 3, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8848, file: !904, line: 460, column: 67)
!8853 = !DILocation(line: 462, column: 3, scope: !8852)
!8854 = !DILocation(line: 463, column: 2, scope: !8852)
!8855 = !DILocation(line: 464, column: 2, scope: !8846)
!8856 = !DILocation(line: 488, column: 2, scope: !8846)
!8857 = !DILocation(line: 492, column: 2, scope: !8846)
!8858 = !DILocation(line: 496, column: 2, scope: !8846)
!8859 = !DILocation(line: 499, column: 2, scope: !8846)
!8860 = !DILocation(line: 500, column: 2, scope: !8846)
!8861 = !DILocation(line: 500, column: 9, scope: !8846)
!8862 = !DILocation(line: 500, column: 30, scope: !8846)
!8863 = distinct !{!8863, !8860, !8864}
!8864 = !DILocation(line: 502, column: 2, scope: !8846)
!8865 = !DILocation(line: 505, column: 1, scope: !8846)
!8866 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8822, file: !8822, line: 3224, type: !6579, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8867)
!8867 = !{!8868}
!8868 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8866, file: !8822, line: 3224, type: !110)
!8869 = !DILocation(line: 0, scope: !8866)
!8870 = !DILocation(line: 3226, column: 3, scope: !8866)
!8871 = !DILocation(line: 3227, column: 1, scope: !8866)
!8872 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8822, file: !8822, line: 3188, type: !6579, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8873)
!8873 = !{!8874}
!8874 = !DILocalVariable(name: "Source", arg: 1, scope: !8872, file: !8822, line: 3188, type: !110)
!8875 = !DILocation(line: 0, scope: !8872)
!8876 = !DILocation(line: 3190, column: 3, scope: !8872)
!8877 = !DILocation(line: 3191, column: 1, scope: !8872)
!8878 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8822, file: !8822, line: 3204, type: !6569, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8879 = !DILocation(line: 3206, column: 21, scope: !8878)
!8880 = !DILocation(line: 3206, column: 3, scope: !8878)
!8881 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8822, file: !8822, line: 3240, type: !6579, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8882)
!8882 = !{!8883}
!8883 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8881, file: !8822, line: 3240, type: !110)
!8884 = !DILocation(line: 0, scope: !8881)
!8885 = !DILocation(line: 3242, column: 3, scope: !8881)
!8886 = !DILocation(line: 3243, column: 1, scope: !8881)
!8887 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8822, file: !8822, line: 3256, type: !6579, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8888)
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8887, file: !8822, line: 3256, type: !110)
!8890 = !DILocation(line: 0, scope: !8887)
!8891 = !DILocation(line: 3258, column: 3, scope: !8887)
!8892 = !DILocation(line: 3259, column: 1, scope: !8887)
!8893 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !904, file: !904, line: 409, type: !3153, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8894 = !DILocation(line: 412, column: 6, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8893, file: !904, line: 412, column: 6)
!8896 = !DILocation(line: 412, column: 27, scope: !8895)
!8897 = !DILocation(line: 412, column: 6, scope: !8893)
!8898 = !DILocation(line: 414, column: 3, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8895, file: !904, line: 412, column: 33)
!8900 = !DILocation(line: 415, column: 3, scope: !8899)
!8901 = !DILocation(line: 415, column: 10, scope: !8899)
!8902 = !DILocation(line: 415, column: 31, scope: !8899)
!8903 = distinct !{!8903, !8900, !8904}
!8904 = !DILocation(line: 417, column: 3, scope: !8899)
!8905 = !DILocation(line: 421, column: 2, scope: !8893)
!8906 = !DILocation(line: 422, column: 2, scope: !8893)
!8907 = !DILocation(line: 422, column: 9, scope: !8893)
!8908 = !DILocation(line: 422, column: 34, scope: !8893)
!8909 = distinct !{!8909, !8906, !8910}
!8910 = !DILocation(line: 423, column: 2, scope: !8893)
!8911 = !DILocation(line: 424, column: 1, scope: !8893)
!8912 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8822, file: !8822, line: 4195, type: !3153, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8913 = !DILocation(line: 4197, column: 3, scope: !8912)
!8914 = !DILocation(line: 4198, column: 1, scope: !8912)
!8915 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8822, file: !8822, line: 4184, type: !3153, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8916 = !DILocation(line: 4186, column: 3, scope: !8915)
!8917 = !DILocation(line: 4187, column: 1, scope: !8915)
!8918 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8822, file: !8822, line: 4205, type: !6569, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8919 = !DILocation(line: 4207, column: 11, scope: !8918)
!8920 = !DILocation(line: 4207, column: 44, scope: !8918)
!8921 = !DILocation(line: 4207, column: 3, scope: !8918)
!8922 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8822, file: !8822, line: 3007, type: !6569, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8923 = !DILocation(line: 3009, column: 11, scope: !8922)
!8924 = !DILocation(line: 3009, column: 44, scope: !8922)
!8925 = !DILocation(line: 3009, column: 3, scope: !8922)
!8926 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8822, file: !8822, line: 2987, type: !3153, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8927 = !DILocation(line: 2989, column: 3, scope: !8926)
!8928 = !DILocation(line: 2990, column: 1, scope: !8926)
!8929 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8822, file: !8822, line: 2939, type: !3153, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8930 = !DILocation(line: 2941, column: 3, scope: !8929)
!8931 = !DILocation(line: 2942, column: 1, scope: !8929)
!8932 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8822, file: !8822, line: 2949, type: !3153, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8933 = !DILocation(line: 2951, column: 3, scope: !8932)
!8934 = !DILocation(line: 2952, column: 1, scope: !8932)
!8935 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8822, file: !8822, line: 2969, type: !6569, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8936 = !DILocation(line: 2971, column: 11, scope: !8935)
!8937 = !DILocation(line: 2971, column: 44, scope: !8935)
!8938 = !DILocation(line: 2971, column: 3, scope: !8935)
!8939 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8822, file: !8822, line: 3143, type: !3153, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8940 = !DILocation(line: 3145, column: 3, scope: !8939)
!8941 = !DILocation(line: 3146, column: 1, scope: !8939)
!8942 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8822, file: !8822, line: 3163, type: !6569, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2104)
!8943 = !DILocation(line: 3165, column: 11, scope: !8942)
!8944 = !DILocation(line: 3165, column: 46, scope: !8942)
!8945 = !DILocation(line: 3165, column: 3, scope: !8942)
!8946 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8947, file: !8947, line: 40, type: !6569, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !2104)
!8947 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8948 = !DILocation(line: 45, column: 3, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !8947, line: 44, column: 44)
!8950 = distinct !DILexicalBlock(scope: !8951, file: !8947, line: 44, column: 13)
!8951 = distinct !DILexicalBlock(scope: !8946, file: !8947, line: 42, column: 6)
!8952 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8947, file: !8947, line: 56, type: !3153, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !2104)
!8953 = !DILocation(line: 58, column: 2, scope: !8952)
!8954 = !DILocation(line: 62, column: 1, scope: !8952)
!8955 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8822, file: !8822, line: 4304, type: !8956, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !8958)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{null, !110, !110, !110, !110}
!8958 = !{!8959, !8960, !8961, !8962}
!8959 = !DILocalVariable(name: "Source", arg: 1, scope: !8955, file: !8822, line: 4304, type: !110)
!8960 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8955, file: !8822, line: 4304, type: !110)
!8961 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8955, file: !8822, line: 4304, type: !110)
!8962 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8955, file: !8822, line: 4304, type: !110)
!8963 = !DILocation(line: 0, scope: !8955)
!8964 = !DILocation(line: 4306, column: 3, scope: !8955)
!8965 = !DILocation(line: 4308, column: 3, scope: !8955)
!8966 = !DILocation(line: 4310, column: 3, scope: !8955)
!8967 = !DILocation(line: 4312, column: 1, scope: !8955)
!8968 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8947, file: !8947, line: 69, type: !3153, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !2104)
!8969 = !DILocation(line: 72, column: 2, scope: !8968)
!8970 = !DILocation(line: 73, column: 1, scope: !8968)
!8971 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8972, file: !8972, line: 1185, type: !6579, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !8973)
!8972 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8973 = !{!8974, !8975}
!8974 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8971, file: !8972, line: 1185, type: !110)
!8975 = !DILocalVariable(name: "tmpreg", scope: !8971, file: !8972, line: 1187, type: !316)
!8976 = !DILocation(line: 0, scope: !8971)
!8977 = !DILocation(line: 1187, column: 3, scope: !8971)
!8978 = !DILocation(line: 1187, column: 17, scope: !8971)
!8979 = !DILocation(line: 1188, column: 3, scope: !8971)
!8980 = !DILocation(line: 1190, column: 12, scope: !8971)
!8981 = !DILocation(line: 1190, column: 10, scope: !8971)
!8982 = !DILocation(line: 1191, column: 9, scope: !8971)
!8983 = !DILocation(line: 1192, column: 1, scope: !8971)
!8984 = distinct !DISubprogram(name: "uart_console_init", scope: !1035, file: !1035, line: 588, type: !1012, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !8985)
!8985 = !{!8986}
!8986 = !DILocalVariable(name: "arg", arg: 1, scope: !8984, file: !1035, line: 588, type: !990)
!8987 = !DILocation(line: 0, scope: !8984)
!8988 = !DILocation(line: 593, column: 7, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8984, file: !1035, line: 593, column: 6)
!8990 = !DILocation(line: 593, column: 6, scope: !8984)
!8991 = !DILocation(line: 597, column: 2, scope: !8984)
!8992 = !DILocation(line: 599, column: 2, scope: !8984)
!8993 = !DILocation(line: 600, column: 1, scope: !8984)
!8994 = distinct !DISubprogram(name: "device_is_ready", scope: !8995, file: !8995, line: 47, type: !8996, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !8998)
!8995 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!8996 = !DISubroutineType(types: !8997)
!8997 = !{!347, !990}
!8998 = !{!8999}
!8999 = !DILocalVariable(name: "dev", arg: 1, scope: !8994, file: !8995, line: 47, type: !990)
!9000 = !DILocation(line: 0, scope: !8994)
!9001 = !DILocation(line: 55, column: 2, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8994, file: !8995, line: 55, column: 2)
!9003 = !{i64 2155297869}
!9004 = !DILocation(line: 56, column: 9, scope: !8994)
!9005 = !DILocation(line: 56, column: 2, scope: !8994)
!9006 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1035, file: !1035, line: 573, type: !3153, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !2104)
!9007 = !DILocation(line: 576, column: 2, scope: !9006)
!9008 = !DILocation(line: 579, column: 2, scope: !9006)
!9009 = !DILocation(line: 581, column: 1, scope: !9006)
!9010 = distinct !DISubprogram(name: "console_out", scope: !1035, file: !1035, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9011)
!9011 = !{!9012}
!9012 = !DILocalVariable(name: "c", arg: 1, scope: !9010, file: !1035, line: 77, type: !109)
!9013 = !DILocation(line: 0, scope: !9010)
!9014 = !DILocation(line: 89, column: 11, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9010, file: !1035, line: 89, column: 6)
!9016 = !DILocation(line: 89, column: 6, scope: !9010)
!9017 = !DILocation(line: 90, column: 3, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9015, file: !1035, line: 89, column: 17)
!9019 = !DILocation(line: 91, column: 2, scope: !9018)
!9020 = !DILocation(line: 92, column: 34, scope: !9010)
!9021 = !DILocation(line: 92, column: 2, scope: !9010)
!9022 = !DILocation(line: 94, column: 2, scope: !9010)
!9023 = distinct !DISubprogram(name: "uart_poll_out", scope: !9024, file: !9024, line: 95, type: !1008, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9025)
!9024 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/condvar")
!9025 = !{!9026, !9027}
!9026 = !DILocalVariable(name: "dev", arg: 1, scope: !9023, file: !9024, line: 95, type: !990)
!9027 = !DILocalVariable(name: "out_char", arg: 2, scope: !9023, file: !9024, line: 95, type: !181)
!9028 = !DILocation(line: 0, scope: !9023)
!9029 = !DILocation(line: 105, column: 2, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9023, file: !9024, line: 105, column: 2)
!9031 = !{i64 2155381260}
!9032 = !DILocation(line: 106, column: 2, scope: !9023)
!9033 = !DILocation(line: 107, column: 1, scope: !9023)
!9034 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !984, file: !984, line: 574, type: !1008, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9035)
!9035 = !{!9036, !9037, !9038}
!9036 = !DILocalVariable(name: "dev", arg: 1, scope: !9034, file: !984, line: 574, type: !990)
!9037 = !DILocalVariable(name: "out_char", arg: 2, scope: !9034, file: !984, line: 575, type: !181)
!9038 = !DILocalVariable(name: "api", scope: !9034, file: !984, line: 577, type: !981)
!9039 = !DILocation(line: 0, scope: !9034)
!9040 = !DILocation(line: 578, column: 40, scope: !9034)
!9041 = !DILocation(line: 580, column: 7, scope: !9034)
!9042 = !DILocation(line: 580, column: 2, scope: !9034)
!9043 = !DILocation(line: 581, column: 1, scope: !9034)
!9044 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8996, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9045)
!9045 = !{!9046}
!9046 = !DILocalVariable(name: "dev", arg: 1, scope: !9044, file: !336, line: 730, type: !990)
!9047 = !DILocation(line: 0, scope: !9044)
!9048 = !DILocation(line: 732, column: 9, scope: !9044)
!9049 = !DILocation(line: 732, column: 2, scope: !9044)
!9050 = distinct !DISubprogram(name: "uart_register_input", scope: !1035, file: !1035, line: 560, type: !9051, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9098)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{null, !9053, !9053, !9095}
!9053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9054, size: 32)
!9054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !9055)
!9055 = !{!9056}
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9054, file: !118, line: 2209, baseType: !9057, size: 160)
!9057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !9058)
!9058 = !{!9059, !9072, !9076}
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9057, file: !118, line: 1710, baseType: !9060, size: 64)
!9060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9061, line: 46, baseType: !9062)
!9061 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9061, line: 41, size: 64, elements: !9063)
!9063 = !{!9064, !9071}
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9062, file: !9061, line: 42, baseType: !9065, size: 32)
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9066, size: 32)
!9066 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9061, line: 39, baseType: !9067)
!9067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9061, line: 35, size: 32, elements: !9068)
!9068 = !{!9069}
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9067, file: !9061, line: 36, baseType: !9070, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9061, line: 32, baseType: !110)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9062, file: !9061, line: 43, baseType: !9065, size: 32, offset: 32)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9057, file: !118, line: 1711, baseType: !9073, size: 32, offset: 64)
!9073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !9074)
!9074 = !{!9075}
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9073, file: !253, line: 52, baseType: !22, size: 32)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9057, file: !118, line: 1712, baseType: !9077, size: 64, offset: 96)
!9077 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9078)
!9078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9079)
!9079 = !{!9080}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9078, file: !122, line: 232, baseType: !9081, size: 64)
!9081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9082)
!9082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9083)
!9083 = !{!9084, !9090}
!9084 = !DIDerivedType(tag: DW_TAG_member, scope: !9082, file: !127, line: 38, baseType: !9085, size: 32)
!9085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9082, file: !127, line: 38, size: 32, elements: !9086)
!9086 = !{!9087, !9089}
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9085, file: !127, line: 39, baseType: !9088, size: 32)
!9088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9082, size: 32)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9085, file: !127, line: 40, baseType: !9088, size: 32)
!9090 = !DIDerivedType(tag: DW_TAG_member, scope: !9082, file: !127, line: 42, baseType: !9091, size: 32, offset: 32)
!9091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9082, file: !127, line: 42, size: 32, elements: !9092)
!9092 = !{!9093, !9094}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9091, file: !127, line: 43, baseType: !9088, size: 32)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9091, file: !127, line: 44, baseType: !9088, size: 32)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 32)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!180, !285, !180}
!9098 = !{!9099, !9100, !9101}
!9099 = !DILocalVariable(name: "avail", arg: 1, scope: !9050, file: !1035, line: 560, type: !9053)
!9100 = !DILocalVariable(name: "lines", arg: 2, scope: !9050, file: !1035, line: 560, type: !9053)
!9101 = !DILocalVariable(name: "completion", arg: 3, scope: !9050, file: !1035, line: 561, type: !9095)
!9102 = !DILocation(line: 0, scope: !9050)
!9103 = !DILocation(line: 566, column: 1, scope: !9050)
!9104 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1215, file: !1215, line: 523, type: !1071, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9105)
!9105 = !{!9106, !9107, !9108, !9109, !9110}
!9106 = !DILocalVariable(name: "dev", arg: 1, scope: !9104, file: !1215, line: 523, type: !1073)
!9107 = !DILocalVariable(name: "pin", arg: 2, scope: !9104, file: !1215, line: 524, type: !1088)
!9108 = !DILocalVariable(name: "flags", arg: 3, scope: !9104, file: !1215, line: 524, type: !1089)
!9109 = !DILocalVariable(name: "err", scope: !9104, file: !1215, line: 526, type: !109)
!9110 = !DILocalVariable(name: "pincfg", scope: !9104, file: !1215, line: 527, type: !109)
!9111 = !DILocation(line: 0, scope: !9104)
!9112 = !DILocation(line: 527, column: 2, scope: !9104)
!9113 = !DILocation(line: 532, column: 8, scope: !9104)
!9114 = !DILocation(line: 533, column: 10, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9104, file: !1215, line: 533, column: 6)
!9116 = !DILocation(line: 533, column: 6, scope: !9104)
!9117 = !DILocation(line: 543, column: 13, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9104, file: !1215, line: 543, column: 6)
!9119 = !DILocation(line: 543, column: 28, scope: !9118)
!9120 = !DILocation(line: 543, column: 6, scope: !9104)
!9121 = !DILocation(line: 544, column: 14, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !1215, line: 544, column: 7)
!9123 = distinct !DILexicalBlock(scope: !9118, file: !1215, line: 543, column: 34)
!9124 = !DILocation(line: 544, column: 39, scope: !9122)
!9125 = !DILocation(line: 544, column: 7, scope: !9123)
!9126 = !DILocation(line: 545, column: 38, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9122, file: !1215, line: 544, column: 45)
!9128 = !DILocation(line: 545, column: 4, scope: !9127)
!9129 = !DILocation(line: 546, column: 3, scope: !9127)
!9130 = !DILocation(line: 546, column: 21, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9122, file: !1215, line: 546, column: 14)
!9132 = !DILocation(line: 546, column: 45, scope: !9131)
!9133 = !DILocation(line: 546, column: 14, scope: !9122)
!9134 = !DILocation(line: 547, column: 40, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !1215, line: 546, column: 51)
!9136 = !DILocation(line: 547, column: 4, scope: !9135)
!9137 = !DILocation(line: 548, column: 3, scope: !9135)
!9138 = !DILocation(line: 551, column: 32, scope: !9104)
!9139 = !DILocation(line: 551, column: 37, scope: !9104)
!9140 = !DILocation(line: 551, column: 2, scope: !9104)
!9141 = !DILocation(line: 554, column: 6, scope: !9104)
!9142 = !DILocation(line: 562, column: 1, scope: !9104)
!9143 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1215, file: !1215, line: 410, type: !9144, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!109, !1073, !900}
!9146 = !{!9147, !9148, !9149, !9151}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !1215, line: 410, type: !1073)
!9148 = !DILocalVariable(name: "value", arg: 2, scope: !9143, file: !1215, line: 410, type: !900)
!9149 = !DILocalVariable(name: "cfg", scope: !9143, file: !1215, line: 412, type: !9150)
!9150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!9151 = !DILocalVariable(name: "gpio", scope: !9143, file: !1215, line: 413, type: !1146)
!9152 = !DILocation(line: 0, scope: !9143)
!9153 = !DILocation(line: 412, column: 45, scope: !9143)
!9154 = !DILocation(line: 413, column: 44, scope: !9143)
!9155 = !DILocation(line: 415, column: 11, scope: !9143)
!9156 = !DILocation(line: 415, column: 9, scope: !9143)
!9157 = !DILocation(line: 417, column: 2, scope: !9143)
!9158 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1215, file: !1215, line: 420, type: !1098, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9159)
!9159 = !{!9160, !9161, !9162, !9163, !9164, !9165}
!9160 = !DILocalVariable(name: "dev", arg: 1, scope: !9158, file: !1215, line: 420, type: !1073)
!9161 = !DILocalVariable(name: "mask", arg: 2, scope: !9158, file: !1215, line: 421, type: !1100)
!9162 = !DILocalVariable(name: "value", arg: 3, scope: !9158, file: !1215, line: 422, type: !1095)
!9163 = !DILocalVariable(name: "cfg", scope: !9158, file: !1215, line: 424, type: !9150)
!9164 = !DILocalVariable(name: "gpio", scope: !9158, file: !1215, line: 425, type: !1146)
!9165 = !DILocalVariable(name: "port_value", scope: !9158, file: !1215, line: 426, type: !110)
!9166 = !DILocation(line: 0, scope: !9158)
!9167 = !DILocation(line: 424, column: 45, scope: !9158)
!9168 = !DILocation(line: 425, column: 44, scope: !9158)
!9169 = !DILocation(line: 430, column: 15, scope: !9158)
!9170 = !DILocation(line: 431, column: 46, scope: !9158)
!9171 = !DILocation(line: 431, column: 44, scope: !9158)
!9172 = !DILocation(line: 431, column: 61, scope: !9158)
!9173 = !DILocation(line: 431, column: 53, scope: !9158)
!9174 = !DILocation(line: 431, column: 2, scope: !9158)
!9175 = !DILocation(line: 435, column: 2, scope: !9158)
!9176 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1215, file: !1215, line: 438, type: !1103, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9177)
!9177 = !{!9178, !9179, !9180, !9181}
!9178 = !DILocalVariable(name: "dev", arg: 1, scope: !9176, file: !1215, line: 438, type: !1073)
!9179 = !DILocalVariable(name: "pins", arg: 2, scope: !9176, file: !1215, line: 439, type: !1100)
!9180 = !DILocalVariable(name: "cfg", scope: !9176, file: !1215, line: 441, type: !9150)
!9181 = !DILocalVariable(name: "gpio", scope: !9176, file: !1215, line: 442, type: !1146)
!9182 = !DILocation(line: 0, scope: !9176)
!9183 = !DILocation(line: 441, column: 45, scope: !9176)
!9184 = !DILocation(line: 442, column: 44, scope: !9176)
!9185 = !DILocation(line: 448, column: 2, scope: !9176)
!9186 = !DILocation(line: 450, column: 2, scope: !9176)
!9187 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1215, file: !1215, line: 453, type: !1103, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9188)
!9188 = !{!9189, !9190, !9191, !9192}
!9189 = !DILocalVariable(name: "dev", arg: 1, scope: !9187, file: !1215, line: 453, type: !1073)
!9190 = !DILocalVariable(name: "pins", arg: 2, scope: !9187, file: !1215, line: 454, type: !1100)
!9191 = !DILocalVariable(name: "cfg", scope: !9187, file: !1215, line: 456, type: !9150)
!9192 = !DILocalVariable(name: "gpio", scope: !9187, file: !1215, line: 457, type: !1146)
!9193 = !DILocation(line: 0, scope: !9187)
!9194 = !DILocation(line: 456, column: 45, scope: !9187)
!9195 = !DILocation(line: 457, column: 44, scope: !9187)
!9196 = !DILocation(line: 467, column: 2, scope: !9187)
!9197 = !DILocation(line: 470, column: 2, scope: !9187)
!9198 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1215, file: !1215, line: 473, type: !1103, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9199)
!9199 = !{!9200, !9201, !9202, !9203}
!9200 = !DILocalVariable(name: "dev", arg: 1, scope: !9198, file: !1215, line: 473, type: !1073)
!9201 = !DILocalVariable(name: "pins", arg: 2, scope: !9198, file: !1215, line: 474, type: !1100)
!9202 = !DILocalVariable(name: "cfg", scope: !9198, file: !1215, line: 476, type: !9150)
!9203 = !DILocalVariable(name: "gpio", scope: !9198, file: !1215, line: 477, type: !1146)
!9204 = !DILocation(line: 0, scope: !9198)
!9205 = !DILocation(line: 476, column: 45, scope: !9198)
!9206 = !DILocation(line: 477, column: 44, scope: !9198)
!9207 = !DILocation(line: 484, column: 2, scope: !9198)
!9208 = !DILocation(line: 487, column: 2, scope: !9198)
!9209 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1215, file: !1215, line: 594, type: !1109, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9210)
!9210 = !{!9211, !9212, !9213, !9214, !9215, !9216, !9218, !9219, !9220}
!9211 = !DILocalVariable(name: "dev", arg: 1, scope: !9209, file: !1215, line: 594, type: !1073)
!9212 = !DILocalVariable(name: "pin", arg: 2, scope: !9209, file: !1215, line: 595, type: !1088)
!9213 = !DILocalVariable(name: "mode", arg: 3, scope: !9209, file: !1215, line: 596, type: !1047)
!9214 = !DILocalVariable(name: "trig", arg: 4, scope: !9209, file: !1215, line: 597, type: !1053)
!9215 = !DILocalVariable(name: "cfg", scope: !9209, file: !1215, line: 599, type: !9150)
!9216 = !DILocalVariable(name: "data", scope: !9209, file: !1215, line: 600, type: !9217)
!9217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!9218 = !DILocalVariable(name: "edge", scope: !9209, file: !1215, line: 601, type: !109)
!9219 = !DILocalVariable(name: "err", scope: !9209, file: !1215, line: 602, type: !109)
!9220 = !DILabel(scope: !9209, name: "exit", file: !1215, line: 643)
!9221 = !DILocation(line: 0, scope: !9209)
!9222 = !DILocation(line: 599, column: 45, scope: !9209)
!9223 = !DILocation(line: 604, column: 6, scope: !9209)
!9224 = !DILocation(line: 605, column: 34, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !1215, line: 605, column: 7)
!9226 = distinct !DILexicalBlock(scope: !9227, file: !1215, line: 604, column: 38)
!9227 = distinct !DILexicalBlock(scope: !9209, file: !1215, line: 604, column: 6)
!9228 = !DILocation(line: 605, column: 7, scope: !9225)
!9229 = !DILocation(line: 605, column: 47, scope: !9225)
!9230 = !DILocation(line: 605, column: 39, scope: !9225)
!9231 = !DILocation(line: 605, column: 7, scope: !9226)
!9232 = !DILocation(line: 606, column: 4, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9225, file: !1215, line: 605, column: 53)
!9234 = !DILocation(line: 607, column: 4, scope: !9233)
!9235 = !DILocation(line: 608, column: 4, scope: !9233)
!9236 = !DILocation(line: 609, column: 3, scope: !9233)
!9237 = !DILocation(line: 600, column: 38, scope: !9209)
!9238 = !DILocation(line: 620, column: 30, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9209, file: !1215, line: 620, column: 6)
!9240 = !DILocation(line: 620, column: 6, scope: !9239)
!9241 = !DILocation(line: 620, column: 57, scope: !9239)
!9242 = !DILocation(line: 620, column: 6, scope: !9209)
!9243 = !DILocation(line: 625, column: 29, scope: !9209)
!9244 = !DILocation(line: 625, column: 2, scope: !9209)
!9245 = !DILocation(line: 627, column: 2, scope: !9209)
!9246 = !DILocation(line: 630, column: 3, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9209, file: !1215, line: 627, column: 16)
!9248 = !DILocation(line: 633, column: 3, scope: !9247)
!9249 = !DILocation(line: 636, column: 3, scope: !9247)
!9250 = !DILocation(line: 639, column: 2, scope: !9209)
!9251 = !DILocation(line: 641, column: 2, scope: !9209)
!9252 = !DILocation(line: 643, column: 1, scope: !9209)
!9253 = !DILocation(line: 644, column: 2, scope: !9209)
!9254 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1215, file: !1215, line: 647, type: !1113, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9255)
!9255 = !{!9256, !9257, !9258, !9259}
!9256 = !DILocalVariable(name: "dev", arg: 1, scope: !9254, file: !1215, line: 647, type: !1073)
!9257 = !DILocalVariable(name: "callback", arg: 2, scope: !9254, file: !1215, line: 648, type: !1115)
!9258 = !DILocalVariable(name: "set", arg: 3, scope: !9254, file: !1215, line: 649, type: !347)
!9259 = !DILocalVariable(name: "data", scope: !9254, file: !1215, line: 651, type: !9217)
!9260 = !DILocation(line: 0, scope: !9254)
!9261 = !DILocation(line: 651, column: 38, scope: !9254)
!9262 = !DILocation(line: 653, column: 37, scope: !9254)
!9263 = !DILocation(line: 653, column: 9, scope: !9254)
!9264 = !DILocation(line: 653, column: 2, scope: !9254)
!9265 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9266, file: !9266, line: 38, type: !9267, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9270)
!9266 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9267 = !DISubroutineType(types: !9268)
!9268 = !{!109, !9269, !1115, !347}
!9269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!9270 = !{!9271, !9272, !9273}
!9271 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9265, file: !9266, line: 38, type: !9269)
!9272 = !DILocalVariable(name: "callback", arg: 2, scope: !9265, file: !9266, line: 39, type: !1115)
!9273 = !DILocalVariable(name: "set", arg: 3, scope: !9265, file: !9266, line: 40, type: !347)
!9274 = !DILocation(line: 0, scope: !9265)
!9275 = !DILocation(line: 42, column: 2, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !9266, line: 42, column: 2)
!9277 = distinct !DILexicalBlock(scope: !9265, file: !9266, line: 42, column: 2)
!9278 = !DILocation(line: 42, column: 2, scope: !9277)
!9279 = !DILocation(line: 42, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !9266, line: 42, column: 2)
!9281 = !DILocation(line: 43, column: 2, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9283, file: !9266, line: 43, column: 2)
!9283 = distinct !DILexicalBlock(scope: !9265, file: !9266, line: 43, column: 2)
!9284 = !DILocation(line: 43, column: 2, scope: !9283)
!9285 = !DILocation(line: 43, column: 2, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !9266, line: 43, column: 2)
!9287 = !DILocation(line: 45, column: 7, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9265, file: !9266, line: 45, column: 6)
!9289 = !DILocation(line: 45, column: 6, scope: !9265)
!9290 = !DILocation(line: 46, column: 56, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !9266, line: 46, column: 7)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !9266, line: 45, column: 38)
!9293 = !DILocation(line: 46, column: 8, scope: !9291)
!9294 = !DILocation(line: 46, column: 7, scope: !9292)
!9295 = !DILocation(line: 51, column: 13, scope: !9288)
!9296 = !DILocation(line: 56, column: 43, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !9266, line: 55, column: 11)
!9298 = distinct !DILexicalBlock(scope: !9265, file: !9266, line: 55, column: 6)
!9299 = !DILocation(line: 56, column: 3, scope: !9297)
!9300 = !DILocation(line: 57, column: 2, scope: !9297)
!9301 = !DILocation(line: 60, column: 1, scope: !9265)
!9302 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1120, file: !1120, line: 261, type: !9303, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!347, !9269}
!9305 = !{!9306}
!9306 = !DILocalVariable(name: "list", arg: 1, scope: !9302, file: !1120, line: 261, type: !9269)
!9307 = !DILocation(line: 0, scope: !9302)
!9308 = !DILocation(line: 261, column: 1, scope: !9302)
!9309 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1120, file: !1120, line: 417, type: !9310, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9312)
!9310 = !DISubroutineType(types: !9311)
!9311 = !{!347, !9269, !1288}
!9312 = !{!9313, !9314, !9315, !9316}
!9313 = !DILocalVariable(name: "list", arg: 1, scope: !9309, file: !1120, line: 417, type: !9269)
!9314 = !DILocalVariable(name: "node", arg: 2, scope: !9309, file: !1120, line: 417, type: !1288)
!9315 = !DILocalVariable(name: "prev", scope: !9309, file: !1120, line: 417, type: !1288)
!9316 = !DILocalVariable(name: "test", scope: !9309, file: !1120, line: 417, type: !1288)
!9317 = !DILocation(line: 0, scope: !9309)
!9318 = !DILocation(line: 417, column: 1, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9309, file: !1120, line: 417, column: 1)
!9320 = !DILocation(line: 417, column: 1, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9319, file: !1120, line: 417, column: 1)
!9322 = !DILocation(line: 417, column: 1, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !1120, line: 417, column: 1)
!9324 = distinct !DILexicalBlock(scope: !9321, file: !1120, line: 417, column: 1)
!9325 = !DILocation(line: 417, column: 1, scope: !9324)
!9326 = distinct !{!9326, !9318, !9318}
!9327 = !DILocation(line: 417, column: 1, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9323, file: !1120, line: 417, column: 1)
!9329 = !DILocation(line: 417, column: 1, scope: !9309)
!9330 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1120, file: !1120, line: 298, type: !9331, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9333)
!9331 = !DISubroutineType(types: !9332)
!9332 = !{null, !9269, !1288}
!9333 = !{!9334, !9335}
!9334 = !DILocalVariable(name: "list", arg: 1, scope: !9330, file: !1120, line: 298, type: !9269)
!9335 = !DILocalVariable(name: "node", arg: 2, scope: !9330, file: !1120, line: 298, type: !1288)
!9336 = !DILocation(line: 0, scope: !9330)
!9337 = !DILocation(line: 298, column: 1, scope: !9330)
!9338 = !DILocation(line: 298, column: 1, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9330, file: !1120, line: 298, column: 1)
!9340 = !DILocation(line: 298, column: 1, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9339, file: !1120, line: 298, column: 1)
!9342 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1120, file: !1120, line: 231, type: !9343, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!1288, !9269}
!9345 = !{!9346}
!9346 = !DILocalVariable(name: "list", arg: 1, scope: !9342, file: !1120, line: 231, type: !9269)
!9347 = !DILocation(line: 0, scope: !9342)
!9348 = !DILocation(line: 233, column: 15, scope: !9342)
!9349 = !DILocation(line: 233, column: 2, scope: !9342)
!9350 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1120, file: !1120, line: 209, type: !9351, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9353)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{null, !1288, !1288}
!9353 = !{!9354, !9355}
!9354 = !DILocalVariable(name: "parent", arg: 1, scope: !9350, file: !1120, line: 209, type: !1288)
!9355 = !DILocalVariable(name: "child", arg: 2, scope: !9350, file: !1120, line: 209, type: !1288)
!9356 = !DILocation(line: 0, scope: !9350)
!9357 = !DILocation(line: 211, column: 10, scope: !9350)
!9358 = !DILocation(line: 211, column: 15, scope: !9350)
!9359 = !DILocation(line: 212, column: 1, scope: !9350)
!9360 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1120, file: !1120, line: 214, type: !9331, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9361)
!9361 = !{!9362, !9363}
!9362 = !DILocalVariable(name: "list", arg: 1, scope: !9360, file: !1120, line: 214, type: !9269)
!9363 = !DILocalVariable(name: "node", arg: 2, scope: !9360, file: !1120, line: 214, type: !1288)
!9364 = !DILocation(line: 0, scope: !9360)
!9365 = !DILocation(line: 216, column: 8, scope: !9360)
!9366 = !DILocation(line: 216, column: 13, scope: !9360)
!9367 = !DILocation(line: 217, column: 1, scope: !9360)
!9368 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1120, file: !1120, line: 243, type: !9343, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9369)
!9369 = !{!9370}
!9370 = !DILocalVariable(name: "list", arg: 1, scope: !9368, file: !1120, line: 243, type: !9269)
!9371 = !DILocation(line: 0, scope: !9368)
!9372 = !DILocation(line: 245, column: 15, scope: !9368)
!9373 = !DILocation(line: 245, column: 2, scope: !9368)
!9374 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1120, file: !1120, line: 219, type: !9331, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9375)
!9375 = !{!9376, !9377}
!9376 = !DILocalVariable(name: "list", arg: 1, scope: !9374, file: !1120, line: 219, type: !9269)
!9377 = !DILocalVariable(name: "node", arg: 2, scope: !9374, file: !1120, line: 219, type: !1288)
!9378 = !DILocation(line: 0, scope: !9374)
!9379 = !DILocation(line: 221, column: 8, scope: !9374)
!9380 = !DILocation(line: 221, column: 13, scope: !9374)
!9381 = !DILocation(line: 222, column: 1, scope: !9374)
!9382 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1120, file: !1120, line: 401, type: !9383, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9385)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{null, !9269, !1288, !1288}
!9385 = !{!9386, !9387, !9388}
!9386 = !DILocalVariable(name: "list", arg: 1, scope: !9382, file: !1120, line: 401, type: !9269)
!9387 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9382, file: !1120, line: 401, type: !1288)
!9388 = !DILocalVariable(name: "node", arg: 3, scope: !9382, file: !1120, line: 401, type: !1288)
!9389 = !DILocation(line: 0, scope: !9382)
!9390 = !DILocation(line: 401, column: 1, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9382, file: !1120, line: 401, column: 1)
!9392 = !DILocation(line: 0, scope: !9391)
!9393 = !DILocation(line: 401, column: 1, scope: !9382)
!9394 = !DILocation(line: 401, column: 1, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !1120, line: 401, column: 1)
!9396 = !DILocation(line: 401, column: 1, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9395, file: !1120, line: 401, column: 1)
!9398 = !DILocation(line: 401, column: 1, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9397, file: !1120, line: 401, column: 1)
!9400 = !DILocation(line: 401, column: 1, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9391, file: !1120, line: 401, column: 1)
!9402 = !DILocation(line: 401, column: 1, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9401, file: !1120, line: 401, column: 1)
!9404 = !DILocation(line: 401, column: 1, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9403, file: !1120, line: 401, column: 1)
!9406 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1120, file: !1120, line: 285, type: !9407, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9409)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{!1288, !1288}
!9409 = !{!9410}
!9410 = !DILocalVariable(name: "node", arg: 1, scope: !9406, file: !1120, line: 285, type: !1288)
!9411 = !DILocation(line: 0, scope: !9406)
!9412 = !DILocation(line: 285, column: 1, scope: !9406)
!9413 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1120, file: !1120, line: 274, type: !9407, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9414)
!9414 = !{!9415}
!9415 = !DILocalVariable(name: "node", arg: 1, scope: !9413, file: !1120, line: 274, type: !1288)
!9416 = !DILocation(line: 0, scope: !9413)
!9417 = !DILocation(line: 274, column: 1, scope: !9413)
!9418 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1120, file: !1120, line: 204, type: !9407, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9419)
!9419 = !{!9420}
!9420 = !DILocalVariable(name: "node", arg: 1, scope: !9418, file: !1120, line: 204, type: !1288)
!9421 = !DILocation(line: 0, scope: !9418)
!9422 = !DILocation(line: 206, column: 15, scope: !9418)
!9423 = !DILocation(line: 206, column: 2, scope: !9418)
!9424 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1215, file: !1215, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9425)
!9425 = !{!9426, !9427, !9428}
!9426 = !DILocalVariable(name: "pin", arg: 1, scope: !9424, file: !1215, line: 342, type: !109)
!9427 = !DILocalVariable(name: "line", scope: !9424, file: !1215, line: 344, type: !110)
!9428 = !DILocalVariable(name: "port", scope: !9424, file: !1215, line: 345, type: !109)
!9429 = !DILocation(line: 0, scope: !9424)
!9430 = !DILocation(line: 344, column: 18, scope: !9424)
!9431 = !{i32 983040, i32 0}
!9432 = !DILocation(line: 356, column: 9, scope: !9424)
!9433 = !DILocation(line: 370, column: 2, scope: !9424)
!9434 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1215, file: !1215, line: 37, type: !757, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9435)
!9435 = !{!9436, !9437, !9438}
!9436 = !DILocalVariable(name: "line", arg: 1, scope: !9434, file: !1215, line: 37, type: !109)
!9437 = !DILocalVariable(name: "arg", arg: 2, scope: !9434, file: !1215, line: 37, type: !107)
!9438 = !DILocalVariable(name: "data", scope: !9434, file: !1215, line: 39, type: !9217)
!9439 = !DILocation(line: 0, scope: !9434)
!9440 = !DILocation(line: 41, column: 29, scope: !9434)
!9441 = !DILocation(line: 41, column: 39, scope: !9434)
!9442 = !DILocation(line: 41, column: 44, scope: !9434)
!9443 = !DILocation(line: 41, column: 2, scope: !9434)
!9444 = !DILocation(line: 42, column: 1, scope: !9434)
!9445 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1215, file: !1215, line: 376, type: !9446, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9448)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!109, !109, !109}
!9448 = !{!9449, !9450, !9451, !9453, !9454}
!9449 = !DILocalVariable(name: "port", arg: 1, scope: !9445, file: !1215, line: 376, type: !109)
!9450 = !DILocalVariable(name: "pin", arg: 2, scope: !9445, file: !1215, line: 376, type: !109)
!9451 = !DILocalVariable(name: "clk", scope: !9445, file: !1215, line: 386, type: !9452)
!9452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!9453 = !DILocalVariable(name: "pclken", scope: !9445, file: !1215, line: 387, type: !1331)
!9454 = !DILocalVariable(name: "ret", scope: !9445, file: !1215, line: 396, type: !109)
!9455 = !DILocation(line: 0, scope: !9445)
!9456 = !DILocation(line: 387, column: 2, scope: !9445)
!9457 = !DILocation(line: 387, column: 22, scope: !9445)
!9458 = !DILocation(line: 399, column: 8, scope: !9445)
!9459 = !DILocation(line: 400, column: 10, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9445, file: !1215, line: 400, column: 6)
!9461 = !DILocation(line: 400, column: 6, scope: !9445)
!9462 = !DILocation(line: 405, column: 2, scope: !9445)
!9463 = !DILocation(line: 407, column: 2, scope: !9445)
!9464 = !DILocation(line: 408, column: 1, scope: !9445)
!9465 = distinct !DISubprogram(name: "clock_control_on", scope: !848, file: !848, line: 123, type: !1180, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9466)
!9466 = !{!9467, !9468, !9469}
!9467 = !DILocalVariable(name: "dev", arg: 1, scope: !9465, file: !848, line: 123, type: !1073)
!9468 = !DILocalVariable(name: "sys", arg: 2, scope: !9465, file: !848, line: 124, type: !944)
!9469 = !DILocalVariable(name: "api", scope: !9465, file: !848, line: 126, type: !1173)
!9470 = !DILocation(line: 0, scope: !9465)
!9471 = !DILocation(line: 127, column: 49, scope: !9465)
!9472 = !DILocation(line: 129, column: 14, scope: !9465)
!9473 = !DILocation(line: 129, column: 9, scope: !9465)
!9474 = !DILocation(line: 129, column: 2, scope: !9465)
!9475 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1215, file: !1215, line: 311, type: !8579, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "port", arg: 1, scope: !9475, file: !1215, line: 311, type: !109)
!9478 = !DILocalVariable(name: "pin", arg: 2, scope: !9475, file: !1215, line: 311, type: !109)
!9479 = !DILocalVariable(name: "line", scope: !9475, file: !1215, line: 313, type: !110)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 313, column: 18, scope: !9475)
!9482 = !DILocation(line: 337, column: 2, scope: !9475)
!9483 = !DILocation(line: 340, column: 1, scope: !9475)
!9484 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1215, file: !1215, line: 295, type: !9485, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!110, !109}
!9487 = !{!9488}
!9488 = !DILocalVariable(name: "pin", arg: 1, scope: !9484, file: !1215, line: 295, type: !109)
!9489 = !DILocation(line: 0, scope: !9484)
!9490 = !DILocation(line: 307, column: 46, scope: !9484)
!9491 = !DILocation(line: 307, column: 27, scope: !9484)
!9492 = !DILocation(line: 307, column: 32, scope: !9484)
!9493 = !DILocation(line: 307, column: 14, scope: !9484)
!9494 = !DILocation(line: 307, column: 39, scope: !9484)
!9495 = !DILocation(line: 307, column: 2, scope: !9484)
!9496 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6182, file: !6182, line: 671, type: !9497, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{null, !110, !110}
!9499 = !{!9500, !9501}
!9500 = !DILocalVariable(name: "Port", arg: 1, scope: !9496, file: !6182, line: 671, type: !110)
!9501 = !DILocalVariable(name: "Line", arg: 2, scope: !9496, file: !6182, line: 671, type: !110)
!9502 = !DILocation(line: 0, scope: !9496)
!9503 = !DILocation(line: 673, column: 3, scope: !9496)
!9504 = !DILocalVariable(name: "value", arg: 1, scope: !9505, file: !6482, line: 373, type: !110)
!9505 = distinct !DISubprogram(name: "__RBIT", scope: !6482, file: !6482, line: 373, type: !7769, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9506)
!9506 = !{!9504, !9507}
!9507 = !DILocalVariable(name: "result", scope: !9505, file: !6482, line: 375, type: !110)
!9508 = !DILocation(line: 0, scope: !9505, inlinedAt: !9509)
!9509 = distinct !DILocation(line: 673, column: 3, scope: !9496)
!9510 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9509)
!9511 = !{i64 3734370}
!9512 = !DILocalVariable(name: "value", arg: 1, scope: !9513, file: !6482, line: 403, type: !110)
!9513 = distinct !DISubprogram(name: "__CLZ", scope: !6482, file: !6482, line: 403, type: !9514, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9516)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{!180, !110}
!9516 = !{!9512}
!9517 = !DILocation(line: 0, scope: !9513, inlinedAt: !9518)
!9518 = distinct !DILocation(line: 673, column: 3, scope: !9496)
!9519 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9518)
!9520 = !DILocation(line: 674, column: 1, scope: !9496)
!9521 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9266, file: !9266, line: 69, type: !9522, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{null, !9269, !1073, !110}
!9524 = !{!9525, !9526, !9527, !9528, !9529}
!9525 = !DILocalVariable(name: "list", arg: 1, scope: !9521, file: !9266, line: 69, type: !9269)
!9526 = !DILocalVariable(name: "port", arg: 2, scope: !9521, file: !9266, line: 70, type: !1073)
!9527 = !DILocalVariable(name: "pins", arg: 3, scope: !9521, file: !9266, line: 71, type: !110)
!9528 = !DILocalVariable(name: "cb", scope: !9521, file: !9266, line: 73, type: !1115)
!9529 = !DILocalVariable(name: "tmp", scope: !9521, file: !9266, line: 73, type: !1115)
!9530 = !DILocation(line: 0, scope: !9521)
!9531 = !DILocation(line: 75, column: 2, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9521, file: !9266, line: 75, column: 2)
!9533 = !DILocation(line: 0, scope: !9532)
!9534 = !DILocation(line: 76, column: 11, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !9266, line: 76, column: 7)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !9266, line: 75, column: 57)
!9537 = distinct !DILexicalBlock(scope: !9532, file: !9266, line: 75, column: 2)
!9538 = !DILocation(line: 76, column: 20, scope: !9535)
!9539 = !DILocation(line: 76, column: 7, scope: !9536)
!9540 = !DILocation(line: 77, column: 4, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !9266, line: 77, column: 4)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !9266, line: 77, column: 4)
!9543 = distinct !DILexicalBlock(scope: !9535, file: !9266, line: 76, column: 28)
!9544 = !DILocation(line: 77, column: 4, scope: !9542)
!9545 = !DILocation(line: 77, column: 4, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9541, file: !9266, line: 77, column: 4)
!9547 = !DILocation(line: 78, column: 4, scope: !9543)
!9548 = !DILocation(line: 79, column: 3, scope: !9543)
!9549 = !DILocation(line: 75, column: 2, scope: !9537)
!9550 = !DILocation(line: 81, column: 1, scope: !9521)
!9551 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6182, file: !6182, line: 710, type: !7769, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9552)
!9552 = !{!9553}
!9553 = !DILocalVariable(name: "Line", arg: 1, scope: !9551, file: !6182, line: 710, type: !110)
!9554 = !DILocation(line: 0, scope: !9551)
!9555 = !DILocation(line: 712, column: 21, scope: !9551)
!9556 = !DILocation(line: 0, scope: !9505, inlinedAt: !9557)
!9557 = distinct !DILocation(line: 712, column: 76, scope: !9551)
!9558 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9557)
!9559 = !DILocation(line: 0, scope: !9513, inlinedAt: !9560)
!9560 = distinct !DILocation(line: 712, column: 76, scope: !9551)
!9561 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9560)
!9562 = !DILocation(line: 712, column: 73, scope: !9551)
!9563 = !DILocation(line: 712, column: 3, scope: !9551)
!9564 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9565, file: !9565, line: 910, type: !9566, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9568)
!9565 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9566 = !DISubroutineType(types: !9567)
!9567 = !{null, !1146, !110}
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9564, file: !9565, line: 910, type: !1146)
!9570 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9564, file: !9565, line: 910, type: !110)
!9571 = !DILocation(line: 0, scope: !9564)
!9572 = !DILocation(line: 912, column: 3, scope: !9564)
!9573 = !DILocation(line: 913, column: 1, scope: !9564)
!9574 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9565, file: !9565, line: 823, type: !9575, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!110, !1146}
!9577 = !{!9578}
!9578 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9574, file: !9565, line: 823, type: !1146)
!9579 = !DILocation(line: 0, scope: !9574)
!9580 = !DILocation(line: 825, column: 21, scope: !9574)
!9581 = !DILocation(line: 825, column: 3, scope: !9574)
!9582 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9565, file: !9565, line: 812, type: !9566, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9583)
!9583 = !{!9584, !9585}
!9584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9582, file: !9565, line: 812, type: !1146)
!9585 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9582, file: !9565, line: 812, type: !110)
!9586 = !DILocation(line: 0, scope: !9582)
!9587 = !DILocation(line: 814, column: 3, scope: !9582)
!9588 = !DILocation(line: 815, column: 1, scope: !9582)
!9589 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9565, file: !9565, line: 771, type: !9575, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9590)
!9590 = !{!9591}
!9591 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9589, file: !9565, line: 771, type: !1146)
!9592 = !DILocation(line: 0, scope: !9589)
!9593 = !DILocation(line: 773, column: 21, scope: !9589)
!9594 = !DILocation(line: 773, column: 3, scope: !9589)
!9595 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1215, file: !1215, line: 47, type: !9596, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9598)
!9596 = !DISubroutineType(types: !9597)
!9597 = !{!109, !1089, !281}
!9598 = !{!9599, !9600}
!9599 = !DILocalVariable(name: "flags", arg: 1, scope: !9595, file: !1215, line: 47, type: !1089)
!9600 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9595, file: !1215, line: 47, type: !281)
!9601 = !DILocation(line: 0, scope: !9595)
!9602 = !DILocation(line: 50, column: 13, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9595, file: !1215, line: 50, column: 6)
!9604 = !DILocation(line: 50, column: 28, scope: !9603)
!9605 = !DILocation(line: 50, column: 6, scope: !9595)
!9606 = !DILocation(line: 53, column: 11, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !1215, line: 50, column: 34)
!9608 = !DILocation(line: 55, column: 14, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9607, file: !1215, line: 55, column: 7)
!9610 = !DILocation(line: 55, column: 35, scope: !9609)
!9611 = !DILocation(line: 55, column: 7, scope: !9607)
!9612 = !DILocation(line: 56, column: 14, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !1215, line: 56, column: 8)
!9614 = distinct !DILexicalBlock(scope: !9609, file: !1215, line: 55, column: 41)
!9615 = !DILocation(line: 56, column: 8, scope: !9614)
!9616 = !DILocation(line: 0, scope: !9609)
!9617 = !DILocation(line: 66, column: 14, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9607, file: !1215, line: 66, column: 7)
!9619 = !DILocation(line: 66, column: 30, scope: !9618)
!9620 = !DILocation(line: 66, column: 7, scope: !9607)
!9621 = !DILocation(line: 67, column: 12, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !1215, line: 66, column: 36)
!9623 = !DILocation(line: 68, column: 3, scope: !9622)
!9624 = !DILocation(line: 68, column: 21, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9618, file: !1215, line: 68, column: 14)
!9626 = !DILocation(line: 68, column: 39, scope: !9625)
!9627 = !DILocation(line: 68, column: 14, scope: !9618)
!9628 = !DILocation(line: 69, column: 12, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9625, file: !1215, line: 68, column: 45)
!9630 = !DILocation(line: 70, column: 3, scope: !9629)
!9631 = !DILocation(line: 72, column: 21, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9603, file: !1215, line: 72, column: 14)
!9633 = !DILocation(line: 72, column: 35, scope: !9632)
!9634 = !DILocation(line: 72, column: 14, scope: !9603)
!9635 = !DILocation(line: 77, column: 14, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !1215, line: 77, column: 7)
!9637 = distinct !DILexicalBlock(scope: !9632, file: !1215, line: 72, column: 41)
!9638 = !DILocation(line: 77, column: 30, scope: !9636)
!9639 = !DILocation(line: 77, column: 7, scope: !9637)
!9640 = !DILocation(line: 0, scope: !9603)
!9641 = !DILocation(line: 90, column: 1, scope: !9595)
!9642 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1215, file: !1215, line: 157, type: !9643, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9645)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{null, !1073, !109, !109, !109}
!9645 = !{!9646, !9647, !9648, !9649, !9650, !9651, !9652, !9653, !9654, !9655, !9656}
!9646 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !1215, line: 157, type: !1073)
!9647 = !DILocalVariable(name: "pin", arg: 2, scope: !9642, file: !1215, line: 157, type: !109)
!9648 = !DILocalVariable(name: "conf", arg: 3, scope: !9642, file: !1215, line: 158, type: !109)
!9649 = !DILocalVariable(name: "func", arg: 4, scope: !9642, file: !1215, line: 158, type: !109)
!9650 = !DILocalVariable(name: "cfg", scope: !9642, file: !1215, line: 160, type: !9150)
!9651 = !DILocalVariable(name: "gpio", scope: !9642, file: !1215, line: 161, type: !1146)
!9652 = !DILocalVariable(name: "pin_ll", scope: !9642, file: !1215, line: 163, type: !109)
!9653 = !DILocalVariable(name: "mode", scope: !9642, file: !1215, line: 227, type: !32)
!9654 = !DILocalVariable(name: "otype", scope: !9642, file: !1215, line: 227, type: !32)
!9655 = !DILocalVariable(name: "ospeed", scope: !9642, file: !1215, line: 227, type: !32)
!9656 = !DILocalVariable(name: "pupd", scope: !9642, file: !1215, line: 227, type: !32)
!9657 = !DILocation(line: 0, scope: !9642)
!9658 = !DILocation(line: 160, column: 45, scope: !9642)
!9659 = !DILocation(line: 161, column: 44, scope: !9642)
!9660 = !DILocation(line: 163, column: 15, scope: !9642)
!9661 = !DILocation(line: 229, column: 14, scope: !9642)
!9662 = !DILocation(line: 246, column: 47, scope: !9642)
!9663 = !DILocation(line: 246, column: 2, scope: !9642)
!9664 = !DILocation(line: 248, column: 43, scope: !9642)
!9665 = !DILocation(line: 248, column: 2, scope: !9642)
!9666 = !DILocation(line: 250, column: 40, scope: !9642)
!9667 = !DILocation(line: 250, column: 2, scope: !9642)
!9668 = !DILocation(line: 252, column: 11, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9642, file: !1215, line: 252, column: 6)
!9670 = !DILocation(line: 252, column: 6, scope: !9642)
!9671 = !DILocation(line: 253, column: 11, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9673, file: !1215, line: 253, column: 7)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !1215, line: 252, column: 36)
!9674 = !DILocation(line: 253, column: 7, scope: !9673)
!9675 = !DILocation(line: 254, column: 4, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !1215, line: 253, column: 16)
!9677 = !DILocation(line: 255, column: 3, scope: !9676)
!9678 = !DILocation(line: 256, column: 4, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9672, file: !1215, line: 255, column: 10)
!9680 = !DILocation(line: 260, column: 40, scope: !9642)
!9681 = !DILocation(line: 260, column: 2, scope: !9642)
!9682 = !DILocation(line: 265, column: 1, scope: !9642)
!9683 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1215, file: !1215, line: 137, type: !9485, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9684)
!9684 = !{!9685, !9686}
!9685 = !DILocalVariable(name: "pin", arg: 1, scope: !9683, file: !1215, line: 137, type: !109)
!9686 = !DILocalVariable(name: "pinval", scope: !9683, file: !1215, line: 139, type: !110)
!9687 = !DILocation(line: 0, scope: !9683)
!9688 = !DILocation(line: 149, column: 13, scope: !9683)
!9689 = !DILocation(line: 151, column: 2, scope: !9683)
!9690 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9565, file: !9565, line: 342, type: !9691, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9693)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{null, !1146, !110, !110}
!9693 = !{!9694, !9695, !9696}
!9694 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9690, file: !9565, line: 342, type: !1146)
!9695 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9690, file: !9565, line: 342, type: !110)
!9696 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9690, file: !9565, line: 342, type: !110)
!9697 = !DILocation(line: 0, scope: !9690)
!9698 = !DILocation(line: 344, column: 3, scope: !9690)
!9699 = !DILocation(line: 345, column: 1, scope: !9690)
!9700 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9565, file: !9565, line: 413, type: !9691, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9701)
!9701 = !{!9702, !9703, !9704}
!9702 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9700, file: !9565, line: 413, type: !1146)
!9703 = !DILocalVariable(name: "Pin", arg: 2, scope: !9700, file: !9565, line: 413, type: !110)
!9704 = !DILocalVariable(name: "Speed", arg: 3, scope: !9700, file: !9565, line: 413, type: !110)
!9705 = !DILocation(line: 0, scope: !9700)
!9706 = !DILocation(line: 415, column: 3, scope: !9700)
!9707 = !DILocation(line: 0, scope: !9505, inlinedAt: !9708)
!9708 = distinct !DILocation(line: 415, column: 3, scope: !9700)
!9709 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9708)
!9710 = !DILocation(line: 0, scope: !9513, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 415, column: 3, scope: !9700)
!9712 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9711)
!9713 = !DILocation(line: 0, scope: !9505, inlinedAt: !9714)
!9714 = distinct !DILocation(line: 415, column: 3, scope: !9700)
!9715 = !DILocation(line: 0, scope: !9513, inlinedAt: !9716)
!9716 = distinct !DILocation(line: 415, column: 3, scope: !9700)
!9717 = !DILocation(line: 417, column: 1, scope: !9700)
!9718 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9565, file: !9565, line: 484, type: !9691, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9719)
!9719 = !{!9720, !9721, !9722}
!9720 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9718, file: !9565, line: 484, type: !1146)
!9721 = !DILocalVariable(name: "Pin", arg: 2, scope: !9718, file: !9565, line: 484, type: !110)
!9722 = !DILocalVariable(name: "Pull", arg: 3, scope: !9718, file: !9565, line: 484, type: !110)
!9723 = !DILocation(line: 0, scope: !9718)
!9724 = !DILocation(line: 486, column: 3, scope: !9718)
!9725 = !DILocation(line: 0, scope: !9505, inlinedAt: !9726)
!9726 = distinct !DILocation(line: 486, column: 3, scope: !9718)
!9727 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9726)
!9728 = !DILocation(line: 0, scope: !9513, inlinedAt: !9729)
!9729 = distinct !DILocation(line: 486, column: 3, scope: !9718)
!9730 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9729)
!9731 = !DILocation(line: 0, scope: !9505, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 486, column: 3, scope: !9718)
!9733 = !DILocation(line: 0, scope: !9513, inlinedAt: !9734)
!9734 = distinct !DILocation(line: 486, column: 3, scope: !9718)
!9735 = !DILocation(line: 487, column: 1, scope: !9718)
!9736 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9565, file: !9565, line: 556, type: !9691, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9737)
!9737 = !{!9738, !9739, !9740}
!9738 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9736, file: !9565, line: 556, type: !1146)
!9739 = !DILocalVariable(name: "Pin", arg: 2, scope: !9736, file: !9565, line: 556, type: !110)
!9740 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9736, file: !9565, line: 556, type: !110)
!9741 = !DILocation(line: 0, scope: !9736)
!9742 = !DILocation(line: 558, column: 3, scope: !9736)
!9743 = !DILocation(line: 0, scope: !9505, inlinedAt: !9744)
!9744 = distinct !DILocation(line: 558, column: 3, scope: !9736)
!9745 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9744)
!9746 = !DILocation(line: 0, scope: !9513, inlinedAt: !9747)
!9747 = distinct !DILocation(line: 558, column: 3, scope: !9736)
!9748 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9747)
!9749 = !DILocation(line: 0, scope: !9505, inlinedAt: !9750)
!9750 = distinct !DILocation(line: 558, column: 3, scope: !9736)
!9751 = !DILocation(line: 0, scope: !9513, inlinedAt: !9752)
!9752 = distinct !DILocation(line: 558, column: 3, scope: !9736)
!9753 = !DILocation(line: 560, column: 1, scope: !9736)
!9754 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9565, file: !9565, line: 633, type: !9691, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9755)
!9755 = !{!9756, !9757, !9758}
!9756 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9754, file: !9565, line: 633, type: !1146)
!9757 = !DILocalVariable(name: "Pin", arg: 2, scope: !9754, file: !9565, line: 633, type: !110)
!9758 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9754, file: !9565, line: 633, type: !110)
!9759 = !DILocation(line: 0, scope: !9754)
!9760 = !DILocation(line: 635, column: 3, scope: !9754)
!9761 = !DILocation(line: 0, scope: !9505, inlinedAt: !9762)
!9762 = distinct !DILocation(line: 635, column: 3, scope: !9754)
!9763 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9762)
!9764 = !DILocation(line: 0, scope: !9513, inlinedAt: !9765)
!9765 = distinct !DILocation(line: 635, column: 3, scope: !9754)
!9766 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9765)
!9767 = !DILocation(line: 0, scope: !9505, inlinedAt: !9768)
!9768 = distinct !DILocation(line: 635, column: 3, scope: !9754)
!9769 = !DILocation(line: 0, scope: !9513, inlinedAt: !9770)
!9770 = distinct !DILocation(line: 635, column: 3, scope: !9754)
!9771 = !DILocation(line: 637, column: 1, scope: !9754)
!9772 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9565, file: !9565, line: 273, type: !9691, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9773)
!9773 = !{!9774, !9775, !9776}
!9774 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9772, file: !9565, line: 273, type: !1146)
!9775 = !DILocalVariable(name: "Pin", arg: 2, scope: !9772, file: !9565, line: 273, type: !110)
!9776 = !DILocalVariable(name: "Mode", arg: 3, scope: !9772, file: !9565, line: 273, type: !110)
!9777 = !DILocation(line: 0, scope: !9772)
!9778 = !DILocation(line: 275, column: 3, scope: !9772)
!9779 = !DILocation(line: 0, scope: !9505, inlinedAt: !9780)
!9780 = distinct !DILocation(line: 275, column: 3, scope: !9772)
!9781 = !DILocation(line: 380, column: 4, scope: !9505, inlinedAt: !9780)
!9782 = !DILocation(line: 0, scope: !9513, inlinedAt: !9783)
!9783 = distinct !DILocation(line: 275, column: 3, scope: !9772)
!9784 = !DILocation(line: 414, column: 7, scope: !9513, inlinedAt: !9783)
!9785 = !DILocation(line: 0, scope: !9505, inlinedAt: !9786)
!9786 = distinct !DILocation(line: 275, column: 3, scope: !9772)
!9787 = !DILocation(line: 0, scope: !9513, inlinedAt: !9788)
!9788 = distinct !DILocation(line: 275, column: 3, scope: !9772)
!9789 = !DILocation(line: 276, column: 1, scope: !9772)
!9790 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1215, file: !1215, line: 698, type: !1228, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9791)
!9791 = !{!9792, !9793, !9794}
!9792 = !DILocalVariable(name: "dev", arg: 1, scope: !9790, file: !1215, line: 698, type: !1073)
!9793 = !DILocalVariable(name: "data", scope: !9790, file: !1215, line: 700, type: !9217)
!9794 = !DILocalVariable(name: "ret", scope: !9790, file: !1215, line: 701, type: !109)
!9795 = !DILocation(line: 0, scope: !9790)
!9796 = !DILocation(line: 700, column: 38, scope: !9790)
!9797 = !DILocation(line: 703, column: 8, scope: !9790)
!9798 = !DILocation(line: 703, column: 12, scope: !9790)
!9799 = !DILocation(line: 705, column: 7, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9790, file: !1215, line: 705, column: 6)
!9801 = !DILocation(line: 705, column: 6, scope: !9790)
!9802 = !DILocation(line: 722, column: 8, scope: !9790)
!9803 = !DILocation(line: 723, column: 10, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9790, file: !1215, line: 723, column: 6)
!9805 = !DILocation(line: 723, column: 6, scope: !9790)
!9806 = !DILocation(line: 731, column: 1, scope: !9790)
!9807 = distinct !DISubprogram(name: "device_is_ready", scope: !8995, file: !8995, line: 47, type: !9808, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!347, !1073}
!9810 = !{!9811}
!9811 = !DILocalVariable(name: "dev", arg: 1, scope: !9807, file: !8995, line: 47, type: !1073)
!9812 = !DILocation(line: 0, scope: !9807)
!9813 = !DILocation(line: 55, column: 2, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9807, file: !8995, line: 55, column: 2)
!9815 = !{i64 2155289076}
!9816 = !DILocation(line: 56, column: 9, scope: !9807)
!9817 = !DILocation(line: 56, column: 2, scope: !9807)
!9818 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1215, file: !1215, line: 270, type: !9819, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9821)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!109, !1073, !347}
!9821 = !{!9822, !9823, !9824, !9825, !9826}
!9822 = !DILocalVariable(name: "dev", arg: 1, scope: !9818, file: !1215, line: 270, type: !1073)
!9823 = !DILocalVariable(name: "on", arg: 2, scope: !9818, file: !1215, line: 270, type: !347)
!9824 = !DILocalVariable(name: "cfg", scope: !9818, file: !1215, line: 272, type: !9150)
!9825 = !DILocalVariable(name: "ret", scope: !9818, file: !1215, line: 273, type: !109)
!9826 = !DILocalVariable(name: "clk", scope: !9818, file: !1215, line: 278, type: !9452)
!9827 = !DILocation(line: 0, scope: !9818)
!9828 = !DILocation(line: 272, column: 45, scope: !9818)
!9829 = !DILocation(line: 282, column: 38, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9831, file: !1215, line: 280, column: 10)
!9831 = distinct !DILexicalBlock(scope: !9818, file: !1215, line: 280, column: 6)
!9832 = !DILocation(line: 282, column: 6, scope: !9830)
!9833 = !DILocation(line: 281, column: 9, scope: !9830)
!9834 = !DILocation(line: 293, column: 1, scope: !9818)
!9835 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9808, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9836)
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "dev", arg: 1, scope: !9835, file: !336, line: 730, type: !1073)
!9838 = !DILocation(line: 0, scope: !9835)
!9839 = !DILocation(line: 732, column: 9, scope: !9835)
!9840 = !DILocation(line: 732, column: 2, scope: !9835)
!9841 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1215, file: !1215, line: 496, type: !9842, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9844)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!109, !1073, !109, !109, !109}
!9844 = !{!9845, !9846, !9847, !9848, !9849, !9850}
!9845 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !1215, line: 496, type: !1073)
!9846 = !DILocalVariable(name: "pin", arg: 2, scope: !9841, file: !1215, line: 496, type: !109)
!9847 = !DILocalVariable(name: "conf", arg: 3, scope: !9841, file: !1215, line: 496, type: !109)
!9848 = !DILocalVariable(name: "func", arg: 4, scope: !9841, file: !1215, line: 496, type: !109)
!9849 = !DILocalVariable(name: "ret", scope: !9841, file: !1215, line: 498, type: !109)
!9850 = !DILocalVariable(name: "gpio_out", scope: !9851, file: !1215, line: 508, type: !110)
!9851 = distinct !DILexicalBlock(scope: !9852, file: !1215, line: 507, column: 27)
!9852 = distinct !DILexicalBlock(scope: !9841, file: !1215, line: 507, column: 6)
!9853 = !DILocation(line: 0, scope: !9841)
!9854 = !DILocation(line: 505, column: 2, scope: !9841)
!9855 = !DILocation(line: 507, column: 11, scope: !9852)
!9856 = !DILocation(line: 507, column: 6, scope: !9841)
!9857 = !DILocation(line: 508, column: 28, scope: !9851)
!9858 = !DILocation(line: 0, scope: !9851)
!9859 = !DILocation(line: 510, column: 16, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9851, file: !1215, line: 510, column: 7)
!9861 = !DILocation(line: 0, scope: !9860)
!9862 = !DILocation(line: 510, column: 7, scope: !9851)
!9863 = !DILocation(line: 511, column: 4, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9860, file: !1215, line: 510, column: 32)
!9865 = !DILocation(line: 512, column: 3, scope: !9864)
!9866 = !DILocation(line: 513, column: 4, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !1215, line: 512, column: 39)
!9868 = distinct !DILexicalBlock(scope: !9860, file: !1215, line: 512, column: 14)
!9869 = !DILocation(line: 514, column: 3, scope: !9867)
!9870 = !DILocation(line: 518, column: 1, scope: !9841)
!9871 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1488, file: !1488, line: 526, type: !1391, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9872)
!9872 = !{!9873, !9874, !9875}
!9873 = !DILocalVariable(name: "dev", arg: 1, scope: !9871, file: !1488, line: 526, type: !1393)
!9874 = !DILocalVariable(name: "c", arg: 2, scope: !9871, file: !1488, line: 526, type: !1005)
!9875 = !DILocalVariable(name: "config", scope: !9871, file: !1488, line: 528, type: !9876)
!9876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!9877 = !DILocation(line: 0, scope: !9871)
!9878 = !DILocation(line: 528, column: 48, scope: !9871)
!9879 = !DILocation(line: 531, column: 40, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9871, file: !1488, line: 531, column: 6)
!9881 = !DILocation(line: 531, column: 6, scope: !9880)
!9882 = !DILocation(line: 531, column: 6, scope: !9871)
!9883 = !DILocation(line: 532, column: 34, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9880, file: !1488, line: 531, column: 48)
!9885 = !DILocation(line: 532, column: 3, scope: !9884)
!9886 = !DILocation(line: 533, column: 2, scope: !9884)
!9887 = !DILocation(line: 539, column: 42, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9871, file: !1488, line: 539, column: 6)
!9889 = !DILocation(line: 539, column: 7, scope: !9888)
!9890 = !DILocation(line: 539, column: 6, scope: !9871)
!9891 = !DILocation(line: 543, column: 52, scope: !9871)
!9892 = !DILocation(line: 543, column: 22, scope: !9871)
!9893 = !DILocation(line: 543, column: 5, scope: !9871)
!9894 = !DILocation(line: 545, column: 2, scope: !9871)
!9895 = !DILocation(line: 546, column: 1, scope: !9871)
!9896 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1488, file: !1488, line: 548, type: !1410, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9897)
!9897 = !{!9898, !9899, !9900, !9901}
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9896, file: !1488, line: 548, type: !1393)
!9899 = !DILocalVariable(name: "c", arg: 2, scope: !9896, file: !1488, line: 549, type: !181)
!9900 = !DILocalVariable(name: "config", scope: !9896, file: !1488, line: 551, type: !9876)
!9901 = !DILocalVariable(name: "key", scope: !9896, file: !1488, line: 555, type: !32)
!9902 = !DILocation(line: 0, scope: !9896)
!9903 = !DILocation(line: 551, column: 48, scope: !9896)
!9904 = !DILocation(line: 562, column: 2, scope: !9896)
!9905 = !DILocation(line: 563, column: 41, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !1488, line: 563, column: 7)
!9907 = distinct !DILexicalBlock(scope: !9896, file: !1488, line: 562, column: 12)
!9908 = !DILocation(line: 563, column: 7, scope: !9906)
!9909 = !DILocation(line: 563, column: 7, scope: !9907)
!9910 = !DILocation(line: 55, column: 2, scope: !9911, inlinedAt: !9915)
!9911 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9912)
!9912 = !{!9913, !9914}
!9913 = !DILocalVariable(name: "key", scope: !9911, file: !6161, line: 44, type: !32)
!9914 = !DILocalVariable(name: "tmp", scope: !9911, file: !6161, line: 53, type: !32)
!9915 = distinct !DILocation(line: 564, column: 10, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9906, file: !1488, line: 563, column: 49)
!9917 = !{i64 2331220}
!9918 = !DILocation(line: 0, scope: !9911, inlinedAt: !9915)
!9919 = !DILocation(line: 565, column: 42, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9916, file: !1488, line: 565, column: 8)
!9921 = !DILocation(line: 565, column: 8, scope: !9920)
!9922 = !DILocation(line: 565, column: 8, scope: !9916)
!9923 = !DILocalVariable(name: "key", arg: 1, scope: !9924, file: !6161, line: 84, type: !32)
!9924 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9925)
!9925 = !{!9923}
!9926 = !DILocation(line: 0, scope: !9924, inlinedAt: !9927)
!9927 = distinct !DILocation(line: 568, column: 4, scope: !9916)
!9928 = !DILocation(line: 95, column: 2, scope: !9924, inlinedAt: !9927)
!9929 = !{i64 2332037}
!9930 = !DILocation(line: 569, column: 3, scope: !9916)
!9931 = distinct !{!9931, !9904, !9932}
!9932 = !DILocation(line: 570, column: 2, scope: !9896)
!9933 = !DILocation(line: 592, column: 33, scope: !9896)
!9934 = !DILocation(line: 592, column: 2, scope: !9896)
!9935 = !DILocation(line: 0, scope: !9924, inlinedAt: !9936)
!9936 = distinct !DILocation(line: 593, column: 2, scope: !9896)
!9937 = !DILocation(line: 95, column: 2, scope: !9924, inlinedAt: !9936)
!9938 = !DILocation(line: 594, column: 1, scope: !9896)
!9939 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1488, file: !1488, line: 596, type: !1414, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9940)
!9940 = !{!9941, !9942, !9943}
!9941 = !DILocalVariable(name: "dev", arg: 1, scope: !9939, file: !1488, line: 596, type: !1393)
!9942 = !DILocalVariable(name: "config", scope: !9939, file: !1488, line: 598, type: !9876)
!9943 = !DILocalVariable(name: "err", scope: !9939, file: !1488, line: 599, type: !110)
!9944 = !DILocation(line: 0, scope: !9939)
!9945 = !DILocation(line: 598, column: 48, scope: !9939)
!9946 = !DILocation(line: 606, column: 40, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 606, column: 6)
!9948 = !DILocation(line: 606, column: 6, scope: !9947)
!9949 = !DILocation(line: 606, column: 6, scope: !9939)
!9950 = !DILocation(line: 610, column: 39, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 610, column: 6)
!9952 = !DILocation(line: 610, column: 6, scope: !9951)
!9953 = !DILocation(line: 610, column: 6, scope: !9939)
!9954 = !DILocation(line: 614, column: 39, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 614, column: 6)
!9956 = !DILocation(line: 614, column: 6, scope: !9955)
!9957 = !DILocation(line: 614, column: 6, scope: !9939)
!9958 = !DILocation(line: 619, column: 40, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 619, column: 6)
!9960 = !DILocation(line: 619, column: 6, scope: !9959)
!9961 = !DILocation(line: 619, column: 6, scope: !9939)
!9962 = !DILocation(line: 623, column: 10, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 623, column: 6)
!9964 = !DILocation(line: 623, column: 6, scope: !9939)
!9965 = !DILocation(line: 624, column: 34, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9963, file: !1488, line: 623, column: 24)
!9967 = !DILocation(line: 624, column: 3, scope: !9966)
!9968 = !DILocation(line: 625, column: 2, scope: !9966)
!9969 = !DILocation(line: 632, column: 10, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 632, column: 6)
!9971 = !DILocation(line: 632, column: 6, scope: !9939)
!9972 = !DILocation(line: 633, column: 34, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !1488, line: 632, column: 32)
!9974 = !DILocation(line: 633, column: 3, scope: !9973)
!9975 = !DILocation(line: 634, column: 2, scope: !9973)
!9976 = !DILocation(line: 636, column: 10, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 636, column: 6)
!9978 = !DILocation(line: 636, column: 6, scope: !9939)
!9979 = !DILocation(line: 637, column: 33, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9977, file: !1488, line: 636, column: 31)
!9981 = !DILocation(line: 637, column: 3, scope: !9980)
!9982 = !DILocation(line: 638, column: 2, scope: !9980)
!9983 = !DILocation(line: 640, column: 10, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9939, file: !1488, line: 640, column: 6)
!9985 = !DILocation(line: 640, column: 6, scope: !9939)
!9986 = !DILocation(line: 641, column: 33, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9984, file: !1488, line: 640, column: 32)
!9988 = !DILocation(line: 641, column: 3, scope: !9987)
!9989 = !DILocation(line: 642, column: 2, scope: !9987)
!9990 = !DILocation(line: 646, column: 32, scope: !9939)
!9991 = !DILocation(line: 646, column: 2, scope: !9939)
!9992 = !DILocation(line: 648, column: 2, scope: !9939)
!9993 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1488, file: !1488, line: 419, type: !1418, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9994)
!9994 = !{!9995, !9996, !9997, !9998, !10000, !10001, !10002, !10003}
!9995 = !DILocalVariable(name: "dev", arg: 1, scope: !9993, file: !1488, line: 419, type: !1393)
!9996 = !DILocalVariable(name: "cfg", arg: 2, scope: !9993, file: !1488, line: 420, type: !1420)
!9997 = !DILocalVariable(name: "config", scope: !9993, file: !1488, line: 422, type: !9876)
!9998 = !DILocalVariable(name: "data", scope: !9993, file: !1488, line: 423, type: !9999)
!9999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!10000 = !DILocalVariable(name: "parity", scope: !9993, file: !1488, line: 424, type: !6759)
!10001 = !DILocalVariable(name: "stopbits", scope: !9993, file: !1488, line: 425, type: !6759)
!10002 = !DILocalVariable(name: "databits", scope: !9993, file: !1488, line: 426, type: !6759)
!10003 = !DILocalVariable(name: "flowctrl", scope: !9993, file: !1488, line: 428, type: !6759)
!10004 = !DILocation(line: 0, scope: !9993)
!10005 = !DILocation(line: 422, column: 48, scope: !9993)
!10006 = !DILocation(line: 423, column: 38, scope: !9993)
!10007 = !DILocation(line: 424, column: 56, scope: !9993)
!10008 = !DILocation(line: 424, column: 51, scope: !9993)
!10009 = !DILocation(line: 424, column: 26, scope: !9993)
!10010 = !DILocation(line: 425, column: 60, scope: !9993)
!10011 = !DILocation(line: 425, column: 55, scope: !9993)
!10012 = !DILocation(line: 425, column: 28, scope: !9993)
!10013 = !DILocation(line: 426, column: 60, scope: !9993)
!10014 = !DILocation(line: 426, column: 55, scope: !9993)
!10015 = !DILocation(line: 426, column: 28, scope: !9993)
!10016 = !DILocation(line: 428, column: 58, scope: !9993)
!10017 = !DILocation(line: 428, column: 53, scope: !9993)
!10018 = !DILocation(line: 428, column: 28, scope: !9993)
!10019 = !DILocation(line: 431, column: 44, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 431, column: 6)
!10021 = !DILocation(line: 438, column: 22, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 437, column: 6)
!10023 = !DILocation(line: 437, column: 6, scope: !9993)
!10024 = !DILocation(line: 448, column: 6, scope: !9993)
!10025 = !DILocation(line: 465, column: 47, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 465, column: 6)
!10027 = !DILocation(line: 475, column: 21, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 475, column: 6)
!10029 = !DILocation(line: 475, column: 6, scope: !9993)
!10030 = !DILocation(line: 476, column: 8, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !1488, line: 476, column: 7)
!10032 = distinct !DILexicalBlock(scope: !10028, file: !1488, line: 475, column: 49)
!10033 = !DILocation(line: 477, column: 34, scope: !10031)
!10034 = !DILocation(line: 476, column: 7, scope: !10032)
!10035 = !DILocation(line: 482, column: 27, scope: !9993)
!10036 = !DILocation(line: 482, column: 2, scope: !9993)
!10037 = !DILocation(line: 484, column: 16, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 484, column: 6)
!10039 = !DILocation(line: 484, column: 13, scope: !10038)
!10040 = !DILocation(line: 484, column: 6, scope: !9993)
!10041 = !DILocation(line: 485, column: 3, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !1488, line: 484, column: 44)
!10043 = !DILocation(line: 486, column: 2, scope: !10042)
!10044 = !DILocation(line: 488, column: 18, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 488, column: 6)
!10046 = !DILocation(line: 488, column: 15, scope: !10045)
!10047 = !DILocation(line: 488, column: 6, scope: !9993)
!10048 = !DILocation(line: 489, column: 3, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !1488, line: 488, column: 48)
!10050 = !DILocation(line: 490, column: 2, scope: !10049)
!10051 = !DILocation(line: 492, column: 18, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 492, column: 6)
!10053 = !DILocation(line: 492, column: 15, scope: !10052)
!10054 = !DILocation(line: 492, column: 6, scope: !9993)
!10055 = !DILocation(line: 493, column: 3, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10052, file: !1488, line: 492, column: 48)
!10057 = !DILocation(line: 494, column: 2, scope: !10056)
!10058 = !DILocation(line: 496, column: 18, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 496, column: 6)
!10060 = !DILocation(line: 496, column: 15, scope: !10059)
!10061 = !DILocation(line: 496, column: 6, scope: !9993)
!10062 = !DILocation(line: 497, column: 3, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10059, file: !1488, line: 496, column: 46)
!10064 = !DILocation(line: 498, column: 2, scope: !10063)
!10065 = !DILocation(line: 500, column: 11, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !9993, file: !1488, line: 500, column: 6)
!10067 = !DILocation(line: 500, column: 29, scope: !10066)
!10068 = !DILocation(line: 500, column: 20, scope: !10066)
!10069 = !DILocation(line: 500, column: 6, scope: !9993)
!10070 = !DILocation(line: 501, column: 3, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10066, file: !1488, line: 500, column: 40)
!10072 = !DILocation(line: 502, column: 26, scope: !10071)
!10073 = !DILocation(line: 502, column: 19, scope: !10071)
!10074 = !DILocation(line: 503, column: 2, scope: !10071)
!10075 = !DILocation(line: 505, column: 26, scope: !9993)
!10076 = !DILocation(line: 505, column: 2, scope: !9993)
!10077 = !DILocation(line: 506, column: 2, scope: !9993)
!10078 = !DILocation(line: 507, column: 1, scope: !9993)
!10079 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1488, file: !1488, line: 509, type: !1431, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10080)
!10080 = !{!10081, !10082, !10083}
!10081 = !DILocalVariable(name: "dev", arg: 1, scope: !10079, file: !1488, line: 509, type: !1393)
!10082 = !DILocalVariable(name: "cfg", arg: 2, scope: !10079, file: !1488, line: 510, type: !1433)
!10083 = !DILocalVariable(name: "data", scope: !10079, file: !1488, line: 512, type: !9999)
!10084 = !DILocation(line: 0, scope: !10079)
!10085 = !DILocation(line: 512, column: 38, scope: !10079)
!10086 = !DILocation(line: 514, column: 24, scope: !10079)
!10087 = !DILocation(line: 514, column: 7, scope: !10079)
!10088 = !DILocation(line: 514, column: 16, scope: !10079)
!10089 = !DILocation(line: 515, column: 41, scope: !10079)
!10090 = !{i32 0, i32 1537}
!10091 = !DILocation(line: 515, column: 16, scope: !10079)
!10092 = !DILocation(line: 515, column: 7, scope: !10079)
!10093 = !DILocation(line: 515, column: 14, scope: !10079)
!10094 = !DILocation(line: 517, column: 3, scope: !10079)
!10095 = !{i32 0, i32 12289}
!10096 = !DILocation(line: 516, column: 19, scope: !10079)
!10097 = !DILocation(line: 516, column: 7, scope: !10079)
!10098 = !DILocation(line: 516, column: 17, scope: !10079)
!10099 = !DILocation(line: 519, column: 3, scope: !10079)
!10100 = !DILocation(line: 519, column: 33, scope: !10079)
!10101 = !DILocation(line: 518, column: 19, scope: !10079)
!10102 = !DILocation(line: 518, column: 7, scope: !10079)
!10103 = !DILocation(line: 518, column: 17, scope: !10079)
!10104 = !DILocation(line: 521, column: 3, scope: !10079)
!10105 = !{i32 0, i32 769}
!10106 = !DILocation(line: 520, column: 19, scope: !10079)
!10107 = !DILocation(line: 520, column: 7, scope: !10079)
!10108 = !DILocation(line: 520, column: 17, scope: !10079)
!10109 = !DILocation(line: 522, column: 2, scope: !10079)
!10110 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1488, file: !1488, line: 205, type: !10111, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10113)
!10111 = !DISubroutineType(types: !10112)
!10112 = !{!110, !1393}
!10113 = !{!10114, !10115}
!10114 = !DILocalVariable(name: "dev", arg: 1, scope: !10110, file: !1488, line: 205, type: !1393)
!10115 = !DILocalVariable(name: "config", scope: !10110, file: !1488, line: 207, type: !9876)
!10116 = !DILocation(line: 0, scope: !10110)
!10117 = !DILocation(line: 207, column: 48, scope: !10110)
!10118 = !DILocation(line: 209, column: 36, scope: !10110)
!10119 = !DILocation(line: 209, column: 9, scope: !10110)
!10120 = !DILocation(line: 209, column: 2, scope: !10110)
!10121 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1488, file: !1488, line: 270, type: !10122, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10124)
!10122 = !DISubroutineType(types: !10123)
!10123 = !{!1359, !110}
!10124 = !{!10125}
!10125 = !DILocalVariable(name: "parity", arg: 1, scope: !10121, file: !1488, line: 270, type: !110)
!10126 = !DILocation(line: 0, scope: !10121)
!10127 = !DILocation(line: 272, column: 2, scope: !10121)
!10128 = !DILocation(line: 281, column: 1, scope: !10121)
!10129 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1488, file: !1488, line: 220, type: !10111, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10130)
!10130 = !{!10131, !10132}
!10131 = !DILocalVariable(name: "dev", arg: 1, scope: !10129, file: !1488, line: 220, type: !1393)
!10132 = !DILocalVariable(name: "config", scope: !10129, file: !1488, line: 222, type: !9876)
!10133 = !DILocation(line: 0, scope: !10129)
!10134 = !DILocation(line: 222, column: 48, scope: !10129)
!10135 = !DILocation(line: 224, column: 44, scope: !10129)
!10136 = !DILocation(line: 224, column: 9, scope: !10129)
!10137 = !DILocation(line: 224, column: 2, scope: !10129)
!10138 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1488, file: !1488, line: 304, type: !10139, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10141)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!1373, !110}
!10141 = !{!10142}
!10142 = !DILocalVariable(name: "sb", arg: 1, scope: !10138, file: !1488, line: 304, type: !110)
!10143 = !DILocation(line: 0, scope: !10138)
!10144 = !DILocation(line: 306, column: 2, scope: !10138)
!10145 = !DILocation(line: 0, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10138, file: !1488, line: 306, column: 14)
!10147 = !DILocation(line: 323, column: 1, scope: !10138)
!10148 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1488, file: !1488, line: 235, type: !10111, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10149)
!10149 = !{!10150, !10151}
!10150 = !DILocalVariable(name: "dev", arg: 1, scope: !10148, file: !1488, line: 235, type: !1393)
!10151 = !DILocalVariable(name: "config", scope: !10148, file: !1488, line: 237, type: !9876)
!10152 = !DILocation(line: 0, scope: !10148)
!10153 = !DILocation(line: 237, column: 48, scope: !10148)
!10154 = !DILocation(line: 239, column: 39, scope: !10148)
!10155 = !DILocation(line: 239, column: 9, scope: !10148)
!10156 = !DILocation(line: 239, column: 2, scope: !10148)
!10157 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1488, file: !1488, line: 355, type: !10158, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!1366, !110, !110}
!10160 = !{!10161, !10162}
!10161 = !DILocalVariable(name: "db", arg: 1, scope: !10157, file: !1488, line: 355, type: !110)
!10162 = !DILocalVariable(name: "p", arg: 2, scope: !10157, file: !1488, line: 356, type: !110)
!10163 = !DILocation(line: 0, scope: !10157)
!10164 = !DILocation(line: 358, column: 2, scope: !10157)
!10165 = !DILocation(line: 384, column: 1, scope: !10157)
!10166 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1488, file: !1488, line: 250, type: !10111, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10167)
!10167 = !{!10168, !10169}
!10168 = !DILocalVariable(name: "dev", arg: 1, scope: !10166, file: !1488, line: 250, type: !1393)
!10169 = !DILocalVariable(name: "config", scope: !10166, file: !1488, line: 252, type: !9876)
!10170 = !DILocation(line: 0, scope: !10166)
!10171 = !DILocation(line: 252, column: 48, scope: !10166)
!10172 = !DILocation(line: 254, column: 40, scope: !10166)
!10173 = !DILocation(line: 254, column: 9, scope: !10166)
!10174 = !DILocation(line: 254, column: 2, scope: !10166)
!10175 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1488, file: !1488, line: 409, type: !10176, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10178)
!10176 = !DISubroutineType(types: !10177)
!10177 = !{!1379, !110}
!10178 = !{!10179}
!10179 = !DILocalVariable(name: "fc", arg: 1, scope: !10175, file: !1488, line: 409, type: !110)
!10180 = !DILocation(line: 0, scope: !10175)
!10181 = !DILocation(line: 411, column: 9, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10175, file: !1488, line: 411, column: 6)
!10183 = !DILocation(line: 416, column: 1, scope: !10175)
!10184 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10185, file: !10185, line: 967, type: !10186, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10188)
!10185 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10186 = !DISubroutineType(types: !10187)
!10187 = !{!110, !1434}
!10188 = !{!10189}
!10189 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10184, file: !10185, line: 967, type: !1434)
!10190 = !DILocation(line: 0, scope: !10184)
!10191 = !DILocation(line: 969, column: 21, scope: !10184)
!10192 = !DILocation(line: 969, column: 3, scope: !10184)
!10193 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10185, file: !10185, line: 601, type: !10186, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10194)
!10194 = !{!10195}
!10195 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10193, file: !10185, line: 601, type: !1434)
!10196 = !DILocation(line: 0, scope: !10193)
!10197 = !DILocation(line: 603, column: 21, scope: !10193)
!10198 = !DILocation(line: 603, column: 3, scope: !10193)
!10199 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10185, file: !10185, line: 820, type: !10186, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10200)
!10200 = !{!10201}
!10201 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10199, file: !10185, line: 820, type: !1434)
!10202 = !DILocation(line: 0, scope: !10199)
!10203 = !DILocation(line: 822, column: 21, scope: !10199)
!10204 = !DILocation(line: 822, column: 3, scope: !10199)
!10205 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10185, file: !10185, line: 547, type: !10186, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10206)
!10206 = !{!10207}
!10207 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10205, file: !10185, line: 547, type: !1434)
!10208 = !DILocation(line: 0, scope: !10205)
!10209 = !DILocation(line: 549, column: 21, scope: !10205)
!10210 = !DILocation(line: 549, column: 3, scope: !10205)
!10211 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1488, file: !1488, line: 257, type: !10212, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10214)
!10212 = !DISubroutineType(types: !10213)
!10213 = !{!110, !1359}
!10214 = !{!10215}
!10215 = !DILocalVariable(name: "parity", arg: 1, scope: !10211, file: !1488, line: 257, type: !1359)
!10216 = !DILocation(line: 0, scope: !10211)
!10217 = !DILocation(line: 259, column: 2, scope: !10211)
!10218 = !DILocation(line: 268, column: 1, scope: !10211)
!10219 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1488, file: !1488, line: 283, type: !10220, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10222)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{!110, !1373}
!10222 = !{!10223}
!10223 = !DILocalVariable(name: "sb", arg: 1, scope: !10219, file: !1488, line: 283, type: !1373)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 285, column: 2, scope: !10219)
!10226 = !DILocation(line: 0, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10219, file: !1488, line: 285, column: 14)
!10228 = !DILocation(line: 302, column: 1, scope: !10219)
!10229 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1488, file: !1488, line: 325, type: !10230, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10232)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!110, !1366, !1359}
!10232 = !{!10233, !10234}
!10233 = !DILocalVariable(name: "db", arg: 1, scope: !10229, file: !1488, line: 325, type: !1366)
!10234 = !DILocalVariable(name: "p", arg: 2, scope: !10229, file: !1488, line: 326, type: !1359)
!10235 = !DILocation(line: 0, scope: !10229)
!10236 = !DILocation(line: 328, column: 2, scope: !10229)
!10237 = !DILocation(line: 353, column: 1, scope: !10229)
!10238 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1488, file: !1488, line: 393, type: !10239, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10241)
!10239 = !DISubroutineType(types: !10240)
!10240 = !{!110, !1379}
!10241 = !{!10242}
!10242 = !DILocalVariable(name: "fc", arg: 1, scope: !10238, file: !1488, line: 393, type: !1379)
!10243 = !DILocation(line: 0, scope: !10238)
!10244 = !DILocation(line: 395, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10238, file: !1488, line: 395, column: 6)
!10246 = !DILocation(line: 400, column: 1, scope: !10238)
!10247 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10185, file: !10185, line: 424, type: !10248, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10250)
!10248 = !DISubroutineType(types: !10249)
!10249 = !{null, !1434}
!10250 = !{!10251}
!10251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10247, file: !10185, line: 424, type: !1434)
!10252 = !DILocation(line: 0, scope: !10247)
!10253 = !DILocation(line: 426, column: 3, scope: !10247)
!10254 = !DILocation(line: 427, column: 1, scope: !10247)
!10255 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1488, file: !1488, line: 197, type: !10256, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{null, !1393, !110}
!10258 = !{!10259, !10260, !10261}
!10259 = !DILocalVariable(name: "dev", arg: 1, scope: !10255, file: !1488, line: 197, type: !1393)
!10260 = !DILocalVariable(name: "parity", arg: 2, scope: !10255, file: !1488, line: 198, type: !110)
!10261 = !DILocalVariable(name: "config", scope: !10255, file: !1488, line: 200, type: !9876)
!10262 = !DILocation(line: 0, scope: !10255)
!10263 = !DILocation(line: 200, column: 48, scope: !10255)
!10264 = !DILocation(line: 202, column: 29, scope: !10255)
!10265 = !DILocation(line: 202, column: 2, scope: !10255)
!10266 = !DILocation(line: 203, column: 1, scope: !10255)
!10267 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1488, file: !1488, line: 212, type: !10256, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10268)
!10268 = !{!10269, !10270, !10271}
!10269 = !DILocalVariable(name: "dev", arg: 1, scope: !10267, file: !1488, line: 212, type: !1393)
!10270 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10267, file: !1488, line: 213, type: !110)
!10271 = !DILocalVariable(name: "config", scope: !10267, file: !1488, line: 215, type: !9876)
!10272 = !DILocation(line: 0, scope: !10267)
!10273 = !DILocation(line: 215, column: 48, scope: !10267)
!10274 = !DILocation(line: 217, column: 37, scope: !10267)
!10275 = !DILocation(line: 217, column: 2, scope: !10267)
!10276 = !DILocation(line: 218, column: 1, scope: !10267)
!10277 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1488, file: !1488, line: 227, type: !10256, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10278)
!10278 = !{!10279, !10280, !10281}
!10279 = !DILocalVariable(name: "dev", arg: 1, scope: !10277, file: !1488, line: 227, type: !1393)
!10280 = !DILocalVariable(name: "databits", arg: 2, scope: !10277, file: !1488, line: 228, type: !110)
!10281 = !DILocalVariable(name: "config", scope: !10277, file: !1488, line: 230, type: !9876)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 230, column: 48, scope: !10277)
!10284 = !DILocation(line: 232, column: 32, scope: !10277)
!10285 = !DILocation(line: 232, column: 2, scope: !10277)
!10286 = !DILocation(line: 233, column: 1, scope: !10277)
!10287 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1488, file: !1488, line: 242, type: !10256, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10288)
!10288 = !{!10289, !10290, !10291}
!10289 = !DILocalVariable(name: "dev", arg: 1, scope: !10287, file: !1488, line: 242, type: !1393)
!10290 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10287, file: !1488, line: 243, type: !110)
!10291 = !DILocalVariable(name: "config", scope: !10287, file: !1488, line: 245, type: !9876)
!10292 = !DILocation(line: 0, scope: !10287)
!10293 = !DILocation(line: 245, column: 48, scope: !10287)
!10294 = !DILocation(line: 247, column: 33, scope: !10287)
!10295 = !DILocation(line: 247, column: 2, scope: !10287)
!10296 = !DILocation(line: 248, column: 1, scope: !10287)
!10297 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1488, file: !1488, line: 107, type: !10256, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10298)
!10298 = !{!10299, !10300, !10301, !10302, !10303}
!10299 = !DILocalVariable(name: "dev", arg: 1, scope: !10297, file: !1488, line: 107, type: !1393)
!10300 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10297, file: !1488, line: 107, type: !110)
!10301 = !DILocalVariable(name: "config", scope: !10297, file: !1488, line: 109, type: !9876)
!10302 = !DILocalVariable(name: "data", scope: !10297, file: !1488, line: 110, type: !9999)
!10303 = !DILocalVariable(name: "clock_rate", scope: !10297, file: !1488, line: 112, type: !110)
!10304 = !DILocation(line: 0, scope: !10297)
!10305 = !DILocation(line: 109, column: 48, scope: !10297)
!10306 = !DILocation(line: 110, column: 38, scope: !10297)
!10307 = !DILocation(line: 112, column: 2, scope: !10297)
!10308 = !DILocation(line: 123, column: 36, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !1488, line: 123, column: 7)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !1488, line: 122, column: 9)
!10311 = distinct !DILexicalBlock(scope: !10297, file: !1488, line: 115, column: 6)
!10312 = !DILocation(line: 124, column: 42, scope: !10309)
!10313 = !DILocation(line: 123, column: 7, scope: !10309)
!10314 = !DILocation(line: 125, column: 22, scope: !10309)
!10315 = !DILocation(line: 123, column: 7, scope: !10310)
!10316 = !DILocation(line: 126, column: 4, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !1488, line: 126, column: 4)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !1488, line: 126, column: 4)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !1488, line: 126, column: 4)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !1488, line: 126, column: 4)
!10321 = distinct !DILexicalBlock(scope: !10309, file: !1488, line: 125, column: 27)
!10322 = !DILocation(line: 127, column: 4, scope: !10321)
!10323 = !DILocation(line: 176, column: 36, scope: !10297)
!10324 = !DILocation(line: 176, column: 3, scope: !10297)
!10325 = !DILocation(line: 179, column: 32, scope: !10297)
!10326 = !DILocation(line: 180, column: 10, scope: !10297)
!10327 = !DILocation(line: 179, column: 3, scope: !10297)
!10328 = !DILocation(line: 189, column: 3, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10330, file: !1488, line: 189, column: 3)
!10330 = distinct !DILexicalBlock(scope: !10297, file: !1488, line: 189, column: 3)
!10331 = !DILocation(line: 189, column: 3, scope: !10330)
!10332 = !DILocation(line: 189, column: 3, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !1488, line: 189, column: 3)
!10334 = !DILocation(line: 195, column: 1, scope: !10297)
!10335 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10185, file: !10185, line: 410, type: !10248, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10336)
!10336 = !{!10337}
!10337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10335, file: !10185, line: 410, type: !1434)
!10338 = !DILocation(line: 0, scope: !10335)
!10339 = !DILocation(line: 412, column: 3, scope: !10335)
!10340 = !DILocation(line: 413, column: 1, scope: !10335)
!10341 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !848, file: !848, line: 216, type: !1467, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10342)
!10342 = !{!10343, !10344, !10345, !10346}
!10343 = !DILocalVariable(name: "dev", arg: 1, scope: !10341, file: !848, line: 216, type: !1393)
!10344 = !DILocalVariable(name: "sys", arg: 2, scope: !10341, file: !848, line: 217, type: !944)
!10345 = !DILocalVariable(name: "rate", arg: 3, scope: !10341, file: !848, line: 218, type: !900)
!10346 = !DILocalVariable(name: "api", scope: !10341, file: !848, line: 220, type: !1445)
!10347 = !DILocation(line: 0, scope: !10341)
!10348 = !DILocation(line: 221, column: 49, scope: !10341)
!10349 = !DILocation(line: 223, column: 11, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10341, file: !848, line: 223, column: 6)
!10351 = !DILocation(line: 223, column: 20, scope: !10350)
!10352 = !DILocation(line: 223, column: 6, scope: !10341)
!10353 = !DILocation(line: 227, column: 9, scope: !10341)
!10354 = !DILocation(line: 227, column: 2, scope: !10341)
!10355 = !DILocation(line: 228, column: 1, scope: !10341)
!10356 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6239, file: !6239, line: 175, type: !6240, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "level", arg: 1, scope: !10356, file: !6239, line: 175, type: !109)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 177, column: 2, scope: !10356)
!10361 = !DILocation(line: 189, column: 1, scope: !10356)
!10362 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10185, file: !10185, line: 615, type: !10363, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10365)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{null, !1434, !110}
!10365 = !{!10366, !10367}
!10366 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10185, line: 615, type: !1434)
!10367 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10362, file: !10185, line: 615, type: !110)
!10368 = !DILocation(line: 0, scope: !10362)
!10369 = !DILocation(line: 617, column: 3, scope: !10362)
!10370 = !DILocation(line: 618, column: 1, scope: !10362)
!10371 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10185, file: !10185, line: 1020, type: !10372, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10374)
!10372 = !DISubroutineType(types: !10373)
!10373 = !{null, !1434, !110, !110, !110}
!10374 = !{!10375, !10376, !10377, !10378}
!10375 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10371, file: !10185, line: 1020, type: !1434)
!10376 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10371, file: !10185, line: 1020, type: !110)
!10377 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10371, file: !10185, line: 1020, type: !110)
!10378 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10371, file: !10185, line: 1021, type: !110)
!10379 = !DILocation(line: 0, scope: !10371)
!10380 = !DILocation(line: 1029, column: 30, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !10185, line: 1028, column: 3)
!10382 = distinct !DILexicalBlock(scope: !10371, file: !10185, line: 1023, column: 7)
!10383 = !DILocation(line: 1029, column: 19, scope: !10381)
!10384 = !DILocation(line: 1029, column: 13, scope: !10381)
!10385 = !DILocation(line: 1029, column: 17, scope: !10381)
!10386 = !DILocation(line: 1031, column: 1, scope: !10371)
!10387 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10185, file: !10185, line: 949, type: !10363, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10388)
!10388 = !{!10389, !10390}
!10389 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10387, file: !10185, line: 949, type: !1434)
!10390 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10387, file: !10185, line: 949, type: !110)
!10391 = !DILocation(line: 0, scope: !10387)
!10392 = !DILocation(line: 951, column: 3, scope: !10387)
!10393 = !DILocation(line: 952, column: 1, scope: !10387)
!10394 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10185, file: !10185, line: 588, type: !10363, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10395)
!10395 = !{!10396, !10397}
!10396 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10394, file: !10185, line: 588, type: !1434)
!10397 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10394, file: !10185, line: 588, type: !110)
!10398 = !DILocation(line: 0, scope: !10394)
!10399 = !DILocation(line: 590, column: 3, scope: !10394)
!10400 = !DILocation(line: 591, column: 1, scope: !10394)
!10401 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10185, file: !10185, line: 805, type: !10363, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10402)
!10402 = !{!10403, !10404}
!10403 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10401, file: !10185, line: 805, type: !1434)
!10404 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10401, file: !10185, line: 805, type: !110)
!10405 = !DILocation(line: 0, scope: !10401)
!10406 = !DILocation(line: 807, column: 3, scope: !10401)
!10407 = !DILocation(line: 808, column: 1, scope: !10401)
!10408 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10185, file: !10185, line: 532, type: !10363, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10409)
!10409 = !{!10410, !10411}
!10410 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10408, file: !10185, line: 532, type: !1434)
!10411 = !DILocalVariable(name: "Parity", arg: 2, scope: !10408, file: !10185, line: 532, type: !110)
!10412 = !DILocation(line: 0, scope: !10408)
!10413 = !DILocation(line: 534, column: 3, scope: !10408)
!10414 = !DILocation(line: 535, column: 1, scope: !10408)
!10415 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10185, file: !10185, line: 1770, type: !10186, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10416)
!10416 = !{!10417}
!10417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10415, file: !10185, line: 1770, type: !1434)
!10418 = !DILocation(line: 0, scope: !10415)
!10419 = !DILocation(line: 1772, column: 11, scope: !10415)
!10420 = !DILocation(line: 1772, column: 46, scope: !10415)
!10421 = !DILocation(line: 1772, column: 3, scope: !10415)
!10422 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10185, file: !10185, line: 1737, type: !10186, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10423)
!10423 = !{!10424}
!10424 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10422, file: !10185, line: 1737, type: !1434)
!10425 = !DILocation(line: 0, scope: !10422)
!10426 = !DILocation(line: 1739, column: 11, scope: !10422)
!10427 = !DILocation(line: 1739, column: 3, scope: !10422)
!10428 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10185, file: !10185, line: 1748, type: !10186, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10429)
!10429 = !{!10430}
!10430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10428, file: !10185, line: 1748, type: !1434)
!10431 = !DILocation(line: 0, scope: !10428)
!10432 = !DILocation(line: 1750, column: 11, scope: !10428)
!10433 = !DILocation(line: 1750, column: 45, scope: !10428)
!10434 = !DILocation(line: 1750, column: 3, scope: !10428)
!10435 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10185, file: !10185, line: 1827, type: !10186, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10436)
!10436 = !{!10437}
!10437 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10435, file: !10185, line: 1827, type: !1434)
!10438 = !DILocation(line: 0, scope: !10435)
!10439 = !DILocation(line: 1829, column: 11, scope: !10435)
!10440 = !DILocation(line: 1829, column: 46, scope: !10435)
!10441 = !DILocation(line: 1829, column: 3, scope: !10435)
!10442 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10185, file: !10185, line: 1992, type: !10248, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10443)
!10443 = !{!10444}
!10444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10442, file: !10185, line: 1992, type: !1434)
!10445 = !DILocation(line: 0, scope: !10442)
!10446 = !DILocation(line: 1994, column: 3, scope: !10442)
!10447 = !DILocation(line: 1995, column: 1, scope: !10442)
!10448 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10185, file: !10185, line: 1934, type: !10248, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10449)
!10449 = !{!10450, !10451}
!10450 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10448, file: !10185, line: 1934, type: !1434)
!10451 = !DILocalVariable(name: "tmpreg", scope: !10448, file: !10185, line: 1936, type: !316)
!10452 = !DILocation(line: 0, scope: !10448)
!10453 = !DILocation(line: 1936, column: 3, scope: !10448)
!10454 = !DILocation(line: 1936, column: 17, scope: !10448)
!10455 = !DILocation(line: 1937, column: 20, scope: !10448)
!10456 = !DILocation(line: 1937, column: 10, scope: !10448)
!10457 = !DILocation(line: 1938, column: 10, scope: !10448)
!10458 = !DILocation(line: 1939, column: 20, scope: !10448)
!10459 = !DILocation(line: 1939, column: 10, scope: !10448)
!10460 = !DILocation(line: 1940, column: 10, scope: !10448)
!10461 = !DILocation(line: 1941, column: 1, scope: !10448)
!10462 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10185, file: !10185, line: 1877, type: !10248, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10463)
!10463 = !{!10464, !10465}
!10464 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10462, file: !10185, line: 1877, type: !1434)
!10465 = !DILocalVariable(name: "tmpreg", scope: !10462, file: !10185, line: 1879, type: !316)
!10466 = !DILocation(line: 0, scope: !10462)
!10467 = !DILocation(line: 1879, column: 3, scope: !10462)
!10468 = !DILocation(line: 1879, column: 17, scope: !10462)
!10469 = !DILocation(line: 1880, column: 20, scope: !10462)
!10470 = !DILocation(line: 1880, column: 10, scope: !10462)
!10471 = !DILocation(line: 1881, column: 10, scope: !10462)
!10472 = !DILocation(line: 1882, column: 20, scope: !10462)
!10473 = !DILocation(line: 1882, column: 10, scope: !10462)
!10474 = !DILocation(line: 1883, column: 10, scope: !10462)
!10475 = !DILocation(line: 1884, column: 1, scope: !10462)
!10476 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10185, file: !10185, line: 1896, type: !10248, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10477)
!10477 = !{!10478, !10479}
!10478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10476, file: !10185, line: 1896, type: !1434)
!10479 = !DILocalVariable(name: "tmpreg", scope: !10476, file: !10185, line: 1898, type: !316)
!10480 = !DILocation(line: 0, scope: !10476)
!10481 = !DILocation(line: 1898, column: 3, scope: !10476)
!10482 = !DILocation(line: 1898, column: 17, scope: !10476)
!10483 = !DILocation(line: 1899, column: 20, scope: !10476)
!10484 = !DILocation(line: 1899, column: 10, scope: !10476)
!10485 = !DILocation(line: 1900, column: 10, scope: !10476)
!10486 = !DILocation(line: 1901, column: 20, scope: !10476)
!10487 = !DILocation(line: 1901, column: 10, scope: !10476)
!10488 = !DILocation(line: 1902, column: 10, scope: !10476)
!10489 = !DILocation(line: 1903, column: 1, scope: !10476)
!10490 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10185, file: !10185, line: 1915, type: !10248, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10491)
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10490, file: !10185, line: 1915, type: !1434)
!10493 = !DILocalVariable(name: "tmpreg", scope: !10490, file: !10185, line: 1917, type: !316)
!10494 = !DILocation(line: 0, scope: !10490)
!10495 = !DILocation(line: 1917, column: 3, scope: !10490)
!10496 = !DILocation(line: 1917, column: 17, scope: !10490)
!10497 = !DILocation(line: 1918, column: 20, scope: !10490)
!10498 = !DILocation(line: 1918, column: 10, scope: !10490)
!10499 = !DILocation(line: 1919, column: 10, scope: !10490)
!10500 = !DILocation(line: 1920, column: 20, scope: !10490)
!10501 = !DILocation(line: 1920, column: 10, scope: !10490)
!10502 = !DILocation(line: 1921, column: 10, scope: !10490)
!10503 = !DILocation(line: 1922, column: 1, scope: !10490)
!10504 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10185, file: !10185, line: 1814, type: !10186, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10505)
!10505 = !{!10506}
!10506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10504, file: !10185, line: 1814, type: !1434)
!10507 = !DILocation(line: 0, scope: !10504)
!10508 = !DILocation(line: 1816, column: 11, scope: !10504)
!10509 = !DILocation(line: 1816, column: 46, scope: !10504)
!10510 = !DILocation(line: 1816, column: 3, scope: !10504)
!10511 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10185, file: !10185, line: 2426, type: !10512, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10514)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{null, !1434, !180}
!10514 = !{!10515, !10516}
!10515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10511, file: !10185, line: 2426, type: !1434)
!10516 = !DILocalVariable(name: "Value", arg: 2, scope: !10511, file: !10185, line: 2426, type: !180)
!10517 = !DILocation(line: 0, scope: !10511)
!10518 = !DILocation(line: 2428, column: 16, scope: !10511)
!10519 = !DILocation(line: 2428, column: 11, scope: !10511)
!10520 = !DILocation(line: 2428, column: 14, scope: !10511)
!10521 = !DILocation(line: 2429, column: 1, scope: !10511)
!10522 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10185, file: !10185, line: 1792, type: !10186, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10523)
!10523 = !{!10524}
!10524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10522, file: !10185, line: 1792, type: !1434)
!10525 = !DILocation(line: 0, scope: !10522)
!10526 = !DILocation(line: 1794, column: 11, scope: !10522)
!10527 = !DILocation(line: 1794, column: 47, scope: !10522)
!10528 = !DILocation(line: 1794, column: 3, scope: !10522)
!10529 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10185, file: !10185, line: 2403, type: !10530, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10532)
!10530 = !DISubroutineType(types: !10531)
!10531 = !{!180, !1434}
!10532 = !{!10533}
!10533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10529, file: !10185, line: 2403, type: !1434)
!10534 = !DILocation(line: 0, scope: !10529)
!10535 = !DILocation(line: 2405, column: 20, scope: !10529)
!10536 = !DILocation(line: 2405, column: 10, scope: !10529)
!10537 = !DILocation(line: 2405, column: 3, scope: !10529)
!10538 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1488, file: !1488, line: 1583, type: !1414, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544, !10545}
!10540 = !DILocalVariable(name: "dev", arg: 1, scope: !10538, file: !1488, line: 1583, type: !1393)
!10541 = !DILocalVariable(name: "config", scope: !10538, file: !1488, line: 1585, type: !9876)
!10542 = !DILocalVariable(name: "data", scope: !10538, file: !1488, line: 1586, type: !9999)
!10543 = !DILocalVariable(name: "ll_parity", scope: !10538, file: !1488, line: 1587, type: !110)
!10544 = !DILocalVariable(name: "ll_datawidth", scope: !10538, file: !1488, line: 1588, type: !110)
!10545 = !DILocalVariable(name: "err", scope: !10538, file: !1488, line: 1589, type: !109)
!10546 = !DILocation(line: 0, scope: !10538)
!10547 = !DILocation(line: 1585, column: 48, scope: !10538)
!10548 = !DILocation(line: 1586, column: 38, scope: !10538)
!10549 = !DILocation(line: 1591, column: 2, scope: !10538)
!10550 = !DILocation(line: 1593, column: 29, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1593, column: 6)
!10552 = !DILocation(line: 1593, column: 7, scope: !10551)
!10553 = !DILocation(line: 1593, column: 6, scope: !10538)
!10554 = !DILocation(line: 1594, column: 3, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1488, line: 1594, column: 3)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !1488, line: 1594, column: 3)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !1488, line: 1594, column: 3)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !1488, line: 1594, column: 3)
!10559 = distinct !DILexicalBlock(scope: !10551, file: !1488, line: 1593, column: 37)
!10560 = !DILocation(line: 1595, column: 3, scope: !10559)
!10561 = !DILocation(line: 1599, column: 31, scope: !10538)
!10562 = !DILocation(line: 1599, column: 71, scope: !10538)
!10563 = !DILocation(line: 1599, column: 8, scope: !10538)
!10564 = !DILocation(line: 1600, column: 10, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1600, column: 6)
!10566 = !DILocation(line: 1600, column: 6, scope: !10538)
!10567 = !DILocation(line: 1601, column: 3, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !1488, line: 1601, column: 3)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !1488, line: 1601, column: 3)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !1488, line: 1601, column: 3)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !1488, line: 1601, column: 3)
!10572 = distinct !DILexicalBlock(scope: !10565, file: !1488, line: 1600, column: 16)
!10573 = !DILocation(line: 1602, column: 3, scope: !10572)
!10574 = !DILocation(line: 1616, column: 36, scope: !10538)
!10575 = !DILocation(line: 1616, column: 8, scope: !10538)
!10576 = !DILocation(line: 1617, column: 10, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1617, column: 6)
!10578 = !DILocation(line: 1617, column: 6, scope: !10538)
!10579 = !DILocation(line: 1621, column: 27, scope: !10538)
!10580 = !DILocation(line: 1621, column: 2, scope: !10538)
!10581 = !DILocation(line: 1624, column: 40, scope: !10538)
!10582 = !DILocation(line: 1624, column: 2, scope: !10538)
!10583 = !DILocation(line: 1630, column: 14, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1630, column: 6)
!10585 = !DILocation(line: 1630, column: 6, scope: !10538)
!10586 = !DILocation(line: 1640, column: 4, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !1488, line: 1640, column: 4)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !1488, line: 1640, column: 4)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1488, line: 1640, column: 4)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1488, line: 1640, column: 4)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !1488, line: 1639, column: 28)
!10592 = distinct !DILexicalBlock(scope: !10593, file: !1488, line: 1639, column: 7)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !1488, line: 1638, column: 9)
!10594 = distinct !DILexicalBlock(scope: !10584, file: !1488, line: 1634, column: 13)
!10595 = !DILocation(line: 0, scope: !10584)
!10596 = !DILocation(line: 1649, column: 35, scope: !10538)
!10597 = !DILocation(line: 1649, column: 2, scope: !10538)
!10598 = !DILocation(line: 1654, column: 14, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1654, column: 6)
!10600 = !DILocation(line: 1654, column: 6, scope: !10538)
!10601 = !DILocation(line: 1655, column: 3, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10599, file: !1488, line: 1654, column: 31)
!10603 = !DILocation(line: 1656, column: 2, scope: !10602)
!10604 = !DILocation(line: 1659, column: 37, scope: !10538)
!10605 = !DILocation(line: 1659, column: 2, scope: !10538)
!10606 = !DILocation(line: 1662, column: 14, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10538, file: !1488, line: 1662, column: 6)
!10608 = !DILocation(line: 1662, column: 6, scope: !10538)
!10609 = !DILocation(line: 1663, column: 37, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10607, file: !1488, line: 1662, column: 27)
!10611 = !DILocation(line: 1663, column: 3, scope: !10610)
!10612 = !DILocation(line: 1664, column: 2, scope: !10610)
!10613 = !DILocation(line: 1684, column: 26, scope: !10538)
!10614 = !DILocation(line: 1684, column: 2, scope: !10538)
!10615 = !DILocation(line: 1722, column: 2, scope: !10538)
!10616 = !DILocation(line: 1724, column: 1, scope: !10538)
!10617 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1488, file: !1488, line: 651, type: !10618, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10620)
!10618 = !DISubroutineType(types: !10619)
!10619 = !{null, !1393}
!10620 = !{!10621, !10622, !10623}
!10621 = !DILocalVariable(name: "dev", arg: 1, scope: !10617, file: !1488, line: 651, type: !1393)
!10622 = !DILocalVariable(name: "data", scope: !10617, file: !1488, line: 653, type: !9999)
!10623 = !DILocalVariable(name: "clk", scope: !10617, file: !1488, line: 654, type: !10624)
!10624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!10625 = !DILocation(line: 0, scope: !10617)
!10626 = !DILocation(line: 653, column: 38, scope: !10617)
!10627 = !DILocation(line: 656, column: 8, scope: !10617)
!10628 = !DILocation(line: 656, column: 14, scope: !10617)
!10629 = !DILocation(line: 657, column: 1, scope: !10617)
!10630 = distinct !DISubprogram(name: "device_is_ready", scope: !8995, file: !8995, line: 47, type: !10631, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!347, !1393}
!10633 = !{!10634}
!10634 = !DILocalVariable(name: "dev", arg: 1, scope: !10630, file: !8995, line: 47, type: !1393)
!10635 = !DILocation(line: 0, scope: !10630)
!10636 = !DILocation(line: 55, column: 2, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10630, file: !8995, line: 55, column: 2)
!10638 = !{i64 2155380239}
!10639 = !DILocation(line: 56, column: 9, scope: !10630)
!10640 = !DILocation(line: 56, column: 2, scope: !10630)
!10641 = distinct !DISubprogram(name: "clock_control_on", scope: !848, file: !848, line: 123, type: !1452, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10642)
!10642 = !{!10643, !10644, !10645}
!10643 = !DILocalVariable(name: "dev", arg: 1, scope: !10641, file: !848, line: 123, type: !1393)
!10644 = !DILocalVariable(name: "sys", arg: 2, scope: !10641, file: !848, line: 124, type: !944)
!10645 = !DILocalVariable(name: "api", scope: !10641, file: !848, line: 126, type: !1445)
!10646 = !DILocation(line: 0, scope: !10641)
!10647 = !DILocation(line: 127, column: 49, scope: !10641)
!10648 = !DILocation(line: 129, column: 14, scope: !10641)
!10649 = !DILocation(line: 129, column: 9, scope: !10641)
!10650 = !DILocation(line: 129, column: 2, scope: !10641)
!10651 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1552, file: !1552, line: 342, type: !10652, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{!109, !1549, !180}
!10654 = !{!10655, !10656, !10657, !10658}
!10655 = !DILocalVariable(name: "config", arg: 1, scope: !10651, file: !1552, line: 342, type: !1549)
!10656 = !DILocalVariable(name: "id", arg: 2, scope: !10651, file: !1552, line: 343, type: !180)
!10657 = !DILocalVariable(name: "ret", scope: !10651, file: !1552, line: 345, type: !109)
!10658 = !DILocalVariable(name: "state", scope: !10651, file: !1552, line: 346, type: !1555)
!10659 = !DILocation(line: 0, scope: !10651)
!10660 = !DILocation(line: 346, column: 2, scope: !10651)
!10661 = !DILocation(line: 348, column: 8, scope: !10651)
!10662 = !DILocation(line: 349, column: 10, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10651, file: !1552, line: 349, column: 6)
!10664 = !DILocation(line: 349, column: 6, scope: !10651)
!10665 = !DILocation(line: 353, column: 44, scope: !10651)
!10666 = !DILocation(line: 353, column: 9, scope: !10651)
!10667 = !DILocation(line: 353, column: 2, scope: !10651)
!10668 = !DILocation(line: 354, column: 1, scope: !10651)
!10669 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10185, file: !10185, line: 497, type: !10363, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10670)
!10670 = !{!10671, !10672, !10673}
!10671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10669, file: !10185, line: 497, type: !1434)
!10672 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10669, file: !10185, line: 497, type: !110)
!10673 = !DILocalVariable(name: "val", scope: !10674, file: !10185, line: 499, type: !110)
!10674 = distinct !DILexicalBlock(scope: !10669, file: !10185, line: 499, column: 3)
!10675 = !DILocation(line: 0, scope: !10669)
!10676 = !DILocation(line: 499, column: 3, scope: !10674)
!10677 = !DILocalVariable(name: "addr", arg: 1, scope: !10678, file: !6482, line: 476, type: !1484)
!10678 = distinct !DISubprogram(name: "__LDREXW", scope: !6482, file: !6482, line: 476, type: !10679, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!110, !1484}
!10681 = !{!10677, !10682}
!10682 = !DILocalVariable(name: "result", scope: !10678, file: !6482, line: 478, type: !110)
!10683 = !DILocation(line: 0, scope: !10678, inlinedAt: !10684)
!10684 = distinct !DILocation(line: 499, column: 3, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10674, file: !10185, line: 499, column: 3)
!10686 = !DILocation(line: 480, column: 4, scope: !10678, inlinedAt: !10684)
!10687 = !{i64 3761977}
!10688 = !DILocation(line: 499, column: 3, scope: !10685)
!10689 = !DILocation(line: 0, scope: !10674)
!10690 = !DILocalVariable(name: "value", arg: 1, scope: !10691, file: !6482, line: 527, type: !110)
!10691 = distinct !DISubprogram(name: "__STREXW", scope: !6482, file: !6482, line: 527, type: !10692, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10694)
!10692 = !DISubroutineType(types: !10693)
!10693 = !{!110, !110, !1484}
!10694 = !{!10690, !10695, !10696}
!10695 = !DILocalVariable(name: "addr", arg: 2, scope: !10691, file: !6482, line: 527, type: !1484)
!10696 = !DILocalVariable(name: "result", scope: !10691, file: !6482, line: 529, type: !110)
!10697 = !DILocation(line: 0, scope: !10691, inlinedAt: !10698)
!10698 = distinct !DILocation(line: 499, column: 3, scope: !10674)
!10699 = !DILocation(line: 531, column: 4, scope: !10691, inlinedAt: !10698)
!10700 = !{i64 3763413}
!10701 = distinct !{!10701, !10676, !10676}
!10702 = !DILocation(line: 500, column: 1, scope: !10669)
!10703 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10185, file: !10185, line: 850, type: !10372, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10704)
!10704 = !{!10705, !10706, !10707, !10708}
!10705 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10703, file: !10185, line: 850, type: !1434)
!10706 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10703, file: !10185, line: 850, type: !110)
!10707 = !DILocalVariable(name: "Parity", arg: 3, scope: !10703, file: !10185, line: 850, type: !110)
!10708 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10703, file: !10185, line: 851, type: !110)
!10709 = !DILocation(line: 0, scope: !10703)
!10710 = !DILocation(line: 853, column: 3, scope: !10703)
!10711 = !DILocation(line: 854, column: 3, scope: !10703)
!10712 = !DILocation(line: 855, column: 1, scope: !10703)
!10713 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10185, file: !10185, line: 1337, type: !10248, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10714)
!10714 = !{!10715}
!10715 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10713, file: !10185, line: 1337, type: !1434)
!10716 = !DILocation(line: 0, scope: !10713)
!10717 = !DILocation(line: 1339, column: 3, scope: !10713)
!10718 = !DILocation(line: 1340, column: 1, scope: !10713)
!10719 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1552, file: !1552, line: 316, type: !10720, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{!109, !1549, !1555}
!10722 = !{!10723, !10724, !10725}
!10723 = !DILocalVariable(name: "config", arg: 1, scope: !10719, file: !1552, line: 317, type: !1549)
!10724 = !DILocalVariable(name: "state", arg: 2, scope: !10719, file: !1552, line: 318, type: !1555)
!10725 = !DILocalVariable(name: "reg", scope: !10719, file: !1552, line: 320, type: !22)
!10726 = !DILocation(line: 0, scope: !10719)
!10727 = !DILocation(line: 329, column: 39, scope: !10719)
!10728 = !DILocation(line: 329, column: 52, scope: !10719)
!10729 = !DILocation(line: 329, column: 9, scope: !10719)
!10730 = !DILocation(line: 329, column: 2, scope: !10719)
!10731 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10631, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10732)
!10732 = !{!10733}
!10733 = !DILocalVariable(name: "dev", arg: 1, scope: !10731, file: !336, line: 730, type: !1393)
!10734 = !DILocation(line: 0, scope: !10731)
!10735 = !DILocation(line: 732, column: 9, scope: !10731)
!10736 = !DILocation(line: 732, column: 2, scope: !10731)
!10737 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1711, file: !1711, line: 270, type: !1717, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10738)
!10738 = !{!10739}
!10739 = !DILocalVariable(name: "dev", arg: 1, scope: !10737, file: !1711, line: 270, type: !1719)
!10740 = !DILocation(line: 0, scope: !10737)
!10741 = !DILocation(line: 274, column: 2, scope: !10737)
!10742 = !DILocation(line: 275, column: 12, scope: !10737)
!10743 = !DILocation(line: 276, column: 15, scope: !10737)
!10744 = !DILocation(line: 277, column: 16, scope: !10737)
!10745 = !DILocation(line: 278, column: 15, scope: !10737)
!10746 = !DILocation(line: 279, column: 16, scope: !10737)
!10747 = !DILocation(line: 282, column: 2, scope: !10737)
!10748 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6522, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10749)
!10749 = !{!10750, !10751}
!10750 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10748, file: !535, line: 1814, type: !800)
!10751 = !DILocalVariable(name: "priority", arg: 2, scope: !10748, file: !535, line: 1814, type: !110)
!10752 = !DILocation(line: 0, scope: !10748)
!10753 = !DILocation(line: 1822, column: 46, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !535, line: 1821, column: 3)
!10755 = distinct !DILexicalBlock(scope: !10748, file: !535, line: 1816, column: 7)
!10756 = !DILocation(line: 1824, column: 1, scope: !10748)
!10757 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1711, file: !1711, line: 118, type: !6419, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10758)
!10758 = !{!10759, !10760}
!10759 = !DILocalVariable(name: "arg", arg: 1, scope: !10757, file: !1711, line: 118, type: !107)
!10760 = !DILocalVariable(name: "dticks", scope: !10757, file: !1711, line: 121, type: !110)
!10761 = !DILocation(line: 0, scope: !10757)
!10762 = !DILocation(line: 124, column: 2, scope: !10757)
!10763 = !DILocation(line: 129, column: 17, scope: !10757)
!10764 = !DILocation(line: 129, column: 14, scope: !10757)
!10765 = !DILocation(line: 130, column: 15, scope: !10757)
!10766 = !DILocation(line: 145, column: 27, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !1711, line: 132, column: 16)
!10768 = distinct !DILexicalBlock(scope: !10757, file: !1711, line: 132, column: 6)
!10769 = !DILocation(line: 145, column: 25, scope: !10767)
!10770 = !DILocation(line: 145, column: 45, scope: !10767)
!10771 = !DILocation(line: 146, column: 30, scope: !10767)
!10772 = !DILocation(line: 146, column: 20, scope: !10767)
!10773 = !DILocation(line: 147, column: 3, scope: !10767)
!10774 = !DILocation(line: 151, column: 2, scope: !10757)
!10775 = !DILocation(line: 152, column: 1, scope: !10757)
!10776 = distinct !DISubprogram(name: "elapsed", scope: !1711, file: !1711, line: 85, type: !6569, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10777)
!10777 = !{!10778, !10779, !10780}
!10778 = !DILocalVariable(name: "val1", scope: !10776, file: !1711, line: 87, type: !110)
!10779 = !DILocalVariable(name: "ctrl", scope: !10776, file: !1711, line: 88, type: !110)
!10780 = !DILocalVariable(name: "val2", scope: !10776, file: !1711, line: 89, type: !110)
!10781 = !DILocation(line: 87, column: 27, scope: !10776)
!10782 = !DILocation(line: 0, scope: !10776)
!10783 = !DILocation(line: 88, column: 27, scope: !10776)
!10784 = !DILocation(line: 89, column: 27, scope: !10776)
!10785 = !DILocation(line: 105, column: 12, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10776, file: !1711, line: 105, column: 6)
!10787 = !DILocation(line: 106, column: 6, scope: !10786)
!10788 = !DILocation(line: 107, column: 16, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10786, file: !1711, line: 106, column: 24)
!10790 = !DILocation(line: 111, column: 18, scope: !10789)
!10791 = !DILocation(line: 112, column: 2, scope: !10789)
!10792 = !DILocation(line: 114, column: 20, scope: !10776)
!10793 = !DILocation(line: 114, column: 30, scope: !10776)
!10794 = !DILocation(line: 114, column: 28, scope: !10776)
!10795 = !DILocation(line: 114, column: 2, scope: !10776)
!10796 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1711, file: !1711, line: 154, type: !10797, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10799)
!10797 = !DISubroutineType(types: !10798)
!10798 = !{null, !774, !347}
!10799 = !{!10800, !10801, !10802, !10803, !10804, !10805, !10806, !10811, !10812}
!10800 = !DILocalVariable(name: "ticks", arg: 1, scope: !10796, file: !1711, line: 154, type: !774)
!10801 = !DILocalVariable(name: "idle", arg: 2, scope: !10796, file: !1711, line: 154, type: !347)
!10802 = !DILocalVariable(name: "delay", scope: !10796, file: !1711, line: 169, type: !110)
!10803 = !DILocalVariable(name: "val1", scope: !10796, file: !1711, line: 170, type: !110)
!10804 = !DILocalVariable(name: "val2", scope: !10796, file: !1711, line: 170, type: !110)
!10805 = !DILocalVariable(name: "last_load_", scope: !10796, file: !1711, line: 171, type: !110)
!10806 = !DILocalVariable(name: "key", scope: !10796, file: !1711, line: 176, type: !10807)
!10807 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10808)
!10808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10809)
!10809 = !{!10810}
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10808, file: !253, line: 33, baseType: !109, size: 32)
!10811 = !DILocalVariable(name: "pending", scope: !10796, file: !1711, line: 178, type: !110)
!10812 = !DILocalVariable(name: "unannounced", scope: !10796, file: !1711, line: 185, type: !110)
!10813 = !DILocation(line: 0, scope: !10796)
!10814 = !DILocation(line: 162, column: 49, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10796, file: !1711, line: 162, column: 6)
!10816 = !DILocation(line: 163, column: 17, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10815, file: !1711, line: 162, column: 78)
!10818 = !DILocation(line: 164, column: 13, scope: !10817)
!10819 = !DILocation(line: 165, column: 3, scope: !10817)
!10820 = !DILocation(line: 171, column: 24, scope: !10796)
!10821 = !DILocation(line: 173, column: 10, scope: !10796)
!10822 = !DILocation(line: 174, column: 10, scope: !10796)
!10823 = !DILocalVariable(name: "l", arg: 1, scope: !10824, file: !253, line: 136, type: !10827)
!10824 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10825, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10828)
!10825 = !DISubroutineType(types: !10826)
!10826 = !{!10807, !10827}
!10827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!10828 = !{!10823, !10829}
!10829 = !DILocalVariable(name: "k", scope: !10824, file: !253, line: 139, type: !10807)
!10830 = !DILocation(line: 0, scope: !10824, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 176, column: 25, scope: !10796)
!10832 = !DILocation(line: 55, column: 2, scope: !10833, inlinedAt: !10837)
!10833 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10834)
!10834 = !{!10835, !10836}
!10835 = !DILocalVariable(name: "key", scope: !10833, file: !6161, line: 44, type: !32)
!10836 = !DILocalVariable(name: "tmp", scope: !10833, file: !6161, line: 53, type: !32)
!10837 = distinct !DILocation(line: 145, column: 10, scope: !10824, inlinedAt: !10831)
!10838 = !{i64 2283575}
!10839 = !DILocation(line: 0, scope: !10833, inlinedAt: !10837)
!10840 = !DILocation(line: 148, column: 2, scope: !10841, inlinedAt: !10831)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !253, line: 148, column: 2)
!10842 = distinct !DILexicalBlock(scope: !10824, file: !253, line: 148, column: 2)
!10843 = !DILocation(line: 148, column: 2, scope: !10842, inlinedAt: !10831)
!10844 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10831)
!10845 = distinct !DILexicalBlock(scope: !10841, file: !253, line: 148, column: 2)
!10846 = !DILocation(line: 160, column: 2, scope: !10824, inlinedAt: !10831)
!10847 = !DILocation(line: 178, column: 21, scope: !10796)
!10848 = !DILocation(line: 180, column: 18, scope: !10796)
!10849 = !DILocation(line: 182, column: 14, scope: !10796)
!10850 = !DILocation(line: 183, column: 15, scope: !10796)
!10851 = !DILocation(line: 185, column: 39, scope: !10796)
!10852 = !DILocation(line: 185, column: 37, scope: !10796)
!10853 = !DILocation(line: 187, column: 27, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10796, file: !1711, line: 187, column: 6)
!10855 = !DILocation(line: 187, column: 6, scope: !10796)
!10856 = !DILocation(line: 202, column: 27, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10854, file: !1711, line: 195, column: 9)
!10858 = !DILocation(line: 202, column: 48, scope: !10857)
!10859 = !DILocation(line: 203, column: 9, scope: !10857)
!10860 = !DILocation(line: 204, column: 11, scope: !10857)
!10861 = !DILocation(line: 205, column: 13, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !1711, line: 205, column: 7)
!10863 = !DILocation(line: 205, column: 7, scope: !10857)
!10864 = !DILocation(line: 0, scope: !10854)
!10865 = !DILocation(line: 212, column: 18, scope: !10796)
!10866 = !DILocation(line: 214, column: 28, scope: !10796)
!10867 = !DILocation(line: 214, column: 16, scope: !10796)
!10868 = !DILocation(line: 215, column: 15, scope: !10796)
!10869 = !DILocation(line: 227, column: 11, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10796, file: !1711, line: 227, column: 6)
!10871 = !DILocation(line: 227, column: 6, scope: !10796)
!10872 = !DILocation(line: 228, column: 15, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10870, file: !1711, line: 227, column: 19)
!10874 = !DILocation(line: 228, column: 38, scope: !10873)
!10875 = !DILocation(line: 228, column: 24, scope: !10873)
!10876 = !DILocation(line: 229, column: 2, scope: !10873)
!10877 = !DILocation(line: 230, column: 24, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10870, file: !1711, line: 229, column: 9)
!10879 = !DILocation(line: 230, column: 15, scope: !10878)
!10880 = !DILocation(line: 0, scope: !10870)
!10881 = !DILocalVariable(name: "key", arg: 2, scope: !10882, file: !253, line: 190, type: !10807)
!10882 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10883, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{null, !10827, !10807}
!10885 = !{!10886, !10881}
!10886 = !DILocalVariable(name: "l", arg: 1, scope: !10882, file: !253, line: 189, type: !10827)
!10887 = !DILocation(line: 0, scope: !10882, inlinedAt: !10888)
!10888 = distinct !DILocation(line: 232, column: 2, scope: !10796)
!10889 = !DILocation(line: 194, column: 2, scope: !10890, inlinedAt: !10888)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !253, line: 194, column: 2)
!10891 = distinct !DILexicalBlock(scope: !10882, file: !253, line: 194, column: 2)
!10892 = !DILocation(line: 194, column: 2, scope: !10891, inlinedAt: !10888)
!10893 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10888)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !253, line: 194, column: 2)
!10895 = !DILocalVariable(name: "key", arg: 1, scope: !10896, file: !6161, line: 84, type: !32)
!10896 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10897)
!10897 = !{!10895}
!10898 = !DILocation(line: 0, scope: !10896, inlinedAt: !10899)
!10899 = distinct !DILocation(line: 215, column: 2, scope: !10882, inlinedAt: !10888)
!10900 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10899)
!10901 = !{i64 2284392}
!10902 = !DILocation(line: 234, column: 1, scope: !10796)
!10903 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1711, file: !1711, line: 236, type: !6569, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10904)
!10904 = !{!10905, !10906}
!10905 = !DILocalVariable(name: "key", scope: !10903, file: !1711, line: 242, type: !10807)
!10906 = !DILocalVariable(name: "cyc", scope: !10903, file: !1711, line: 243, type: !110)
!10907 = !DILocation(line: 0, scope: !10824, inlinedAt: !10908)
!10908 = distinct !DILocation(line: 242, column: 25, scope: !10903)
!10909 = !DILocation(line: 55, column: 2, scope: !10833, inlinedAt: !10910)
!10910 = distinct !DILocation(line: 145, column: 10, scope: !10824, inlinedAt: !10908)
!10911 = !DILocation(line: 0, scope: !10833, inlinedAt: !10910)
!10912 = !DILocation(line: 148, column: 2, scope: !10841, inlinedAt: !10908)
!10913 = !DILocation(line: 148, column: 2, scope: !10842, inlinedAt: !10908)
!10914 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10908)
!10915 = !DILocation(line: 160, column: 2, scope: !10824, inlinedAt: !10908)
!10916 = !DILocation(line: 0, scope: !10903)
!10917 = !DILocation(line: 243, column: 17, scope: !10903)
!10918 = !DILocation(line: 243, column: 29, scope: !10903)
!10919 = !DILocation(line: 243, column: 43, scope: !10903)
!10920 = !DILocation(line: 0, scope: !10882, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 245, column: 2, scope: !10903)
!10922 = !DILocation(line: 194, column: 2, scope: !10890, inlinedAt: !10921)
!10923 = !DILocation(line: 194, column: 2, scope: !10891, inlinedAt: !10921)
!10924 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10921)
!10925 = !DILocation(line: 243, column: 27, scope: !10903)
!10926 = !DILocation(line: 243, column: 41, scope: !10903)
!10927 = !DILocation(line: 0, scope: !10896, inlinedAt: !10928)
!10928 = distinct !DILocation(line: 215, column: 2, scope: !10882, inlinedAt: !10921)
!10929 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10928)
!10930 = !DILocation(line: 246, column: 13, scope: !10903)
!10931 = !DILocation(line: 246, column: 2, scope: !10903)
!10932 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1711, file: !1711, line: 249, type: !6569, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10933)
!10933 = !{!10934, !10935}
!10934 = !DILocalVariable(name: "key", scope: !10932, file: !1711, line: 251, type: !10807)
!10935 = !DILocalVariable(name: "ret", scope: !10932, file: !1711, line: 252, type: !110)
!10936 = !DILocation(line: 0, scope: !10824, inlinedAt: !10937)
!10937 = distinct !DILocation(line: 251, column: 25, scope: !10932)
!10938 = !DILocation(line: 55, column: 2, scope: !10833, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 145, column: 10, scope: !10824, inlinedAt: !10937)
!10940 = !DILocation(line: 0, scope: !10833, inlinedAt: !10939)
!10941 = !DILocation(line: 148, column: 2, scope: !10841, inlinedAt: !10937)
!10942 = !DILocation(line: 148, column: 2, scope: !10842, inlinedAt: !10937)
!10943 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10937)
!10944 = !DILocation(line: 160, column: 2, scope: !10824, inlinedAt: !10937)
!10945 = !DILocation(line: 0, scope: !10932)
!10946 = !DILocation(line: 252, column: 17, scope: !10932)
!10947 = !DILocation(line: 252, column: 29, scope: !10932)
!10948 = !DILocation(line: 0, scope: !10882, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 254, column: 2, scope: !10932)
!10950 = !DILocation(line: 194, column: 2, scope: !10890, inlinedAt: !10949)
!10951 = !DILocation(line: 194, column: 2, scope: !10891, inlinedAt: !10949)
!10952 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10949)
!10953 = !DILocation(line: 252, column: 27, scope: !10932)
!10954 = !DILocation(line: 0, scope: !10896, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 215, column: 2, scope: !10882, inlinedAt: !10949)
!10956 = !DILocation(line: 95, column: 2, scope: !10896, inlinedAt: !10955)
!10957 = !DILocation(line: 255, column: 2, scope: !10932)
!10958 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1711, file: !1711, line: 258, type: !3153, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !2104)
!10959 = !DILocation(line: 260, column: 6, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10958, file: !1711, line: 260, column: 6)
!10961 = !DILocation(line: 260, column: 16, scope: !10960)
!10962 = !DILocation(line: 260, column: 6, scope: !10958)
!10963 = !DILocation(line: 261, column: 17, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10960, file: !1711, line: 260, column: 34)
!10965 = !DILocation(line: 262, column: 2, scope: !10964)
!10966 = !DILocation(line: 263, column: 1, scope: !10958)
!10967 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1711, file: !1711, line: 265, type: !3153, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !2104)
!10968 = !DILocation(line: 267, column: 16, scope: !10967)
!10969 = !DILocation(line: 268, column: 1, scope: !10967)
!10970 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10971, file: !10971, line: 9, type: !10972, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2981, retainedNodes: !10995)
!10971 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10972 = !DISubroutineType(types: !10973)
!10973 = !{!109, !10974, !180, !10994}
!10974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10975, size: 32)
!10975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10976)
!10976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1552, line: 60, size: 64, elements: !10977)
!10977 = !{!10978, !10993}
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10976, file: !1552, line: 69, baseType: !10979, size: 32)
!10979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10980, size: 32)
!10980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10981)
!10981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1552, line: 50, size: 64, elements: !10982)
!10982 = !{!10983, !10991, !10992}
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10981, file: !1552, line: 52, baseType: !10984, size: 32)
!10984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10985, size: 32)
!10985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10986)
!10986 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !10987)
!10987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !10988)
!10988 = !{!10989, !10990}
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10987, file: !1563, line: 34, baseType: !110, size: 32)
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10987, file: !1563, line: 36, baseType: !110, size: 32, offset: 32)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10981, file: !1552, line: 54, baseType: !180, size: 8, offset: 32)
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10981, file: !1552, line: 56, baseType: !180, size: 8, offset: 40)
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10976, file: !1552, line: 71, baseType: !180, size: 8, offset: 32)
!10994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10979, size: 32)
!10995 = !{!10996, !10997, !10998}
!10996 = !DILocalVariable(name: "config", arg: 1, scope: !10970, file: !10971, line: 9, type: !10974)
!10997 = !DILocalVariable(name: "id", arg: 2, scope: !10970, file: !10971, line: 9, type: !180)
!10998 = !DILocalVariable(name: "state", arg: 3, scope: !10970, file: !10971, line: 10, type: !10994)
!10999 = !DILocation(line: 0, scope: !10970)
!11000 = !DILocation(line: 12, column: 20, scope: !10970)
!11001 = !DILocation(line: 13, column: 27, scope: !10970)
!11002 = !DILocation(line: 13, column: 42, scope: !10970)
!11003 = !DILocation(line: 13, column: 19, scope: !10970)
!11004 = !DILocation(line: 13, column: 16, scope: !10970)
!11005 = !DILocation(line: 13, column: 2, scope: !10970)
!11006 = distinct !{!11006, !11005, !11007}
!11007 = !DILocation(line: 19, column: 2, scope: !10970)
!11008 = !DILocation(line: 14, column: 23, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !10971, line: 14, column: 7)
!11010 = distinct !DILexicalBlock(scope: !10970, file: !10971, line: 13, column: 54)
!11011 = !DILocation(line: 14, column: 10, scope: !11009)
!11012 = !DILocation(line: 18, column: 11, scope: !11010)
!11013 = !DILocation(line: 14, column: 7, scope: !11010)
!11014 = !DILocation(line: 22, column: 1, scope: !10970)
!11015 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1830, file: !1830, line: 193, type: !11016, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11025)
!11016 = !DISubroutineType(types: !11017)
!11017 = !{!109, !11018, !180, !22}
!11018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11019, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11020)
!11020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !11021)
!11021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !11022)
!11022 = !{!11023, !11024}
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11021, file: !1563, line: 34, baseType: !110, size: 32)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11021, file: !1563, line: 36, baseType: !110, size: 32, offset: 32)
!11025 = !{!11026, !11027, !11028, !11029, !11030, !11031, !11032, !11033, !11035}
!11026 = !DILocalVariable(name: "pins", arg: 1, scope: !11015, file: !1830, line: 193, type: !11018)
!11027 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11015, file: !1830, line: 193, type: !180)
!11028 = !DILocalVariable(name: "reg", arg: 3, scope: !11015, file: !1830, line: 194, type: !22)
!11029 = !DILocalVariable(name: "pin", scope: !11015, file: !1830, line: 196, type: !110)
!11030 = !DILocalVariable(name: "mux", scope: !11015, file: !1830, line: 196, type: !110)
!11031 = !DILocalVariable(name: "pin_cgf", scope: !11015, file: !1830, line: 197, type: !110)
!11032 = !DILocalVariable(name: "ret", scope: !11015, file: !1830, line: 198, type: !109)
!11033 = !DILocalVariable(name: "i", scope: !11034, file: !1830, line: 209, type: !180)
!11034 = distinct !DILexicalBlock(scope: !11015, file: !1830, line: 209, column: 2)
!11035 = !DILocalVariable(name: "gpio_out", scope: !11036, file: !1830, line: 239, type: !110)
!11036 = distinct !DILexicalBlock(scope: !11037, file: !1830, line: 238, column: 55)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !1830, line: 238, column: 14)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !1830, line: 236, column: 14)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !1830, line: 234, column: 7)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !1830, line: 209, column: 41)
!11041 = distinct !DILexicalBlock(scope: !11034, file: !1830, line: 209, column: 2)
!11042 = !DILocation(line: 0, scope: !11015)
!11043 = !DILocation(line: 0, scope: !11034)
!11044 = !DILocation(line: 209, column: 25, scope: !11041)
!11045 = !DILocation(line: 209, column: 2, scope: !11034)
!11046 = distinct !{!11046, !11045, !11047}
!11047 = !DILocation(line: 259, column: 2, scope: !11034)
!11048 = !DILocation(line: 210, column: 17, scope: !11040)
!11049 = !DILocation(line: 234, column: 7, scope: !11039)
!11050 = !DILocation(line: 234, column: 33, scope: !11039)
!11051 = !DILocation(line: 234, column: 7, scope: !11040)
!11052 = !DILocation(line: 235, column: 22, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11039, file: !1830, line: 234, column: 49)
!11054 = !DILocation(line: 235, column: 29, scope: !11053)
!11055 = !DILocation(line: 236, column: 3, scope: !11053)
!11056 = !DILocation(line: 236, column: 14, scope: !11039)
!11057 = !DILocation(line: 239, column: 32, scope: !11036)
!11058 = !DILocation(line: 0, scope: !11036)
!11059 = !DILocation(line: 241, column: 8, scope: !11036)
!11060 = !DILocation(line: 246, column: 3, scope: !11036)
!11061 = !DILocation(line: 252, column: 9, scope: !11040)
!11062 = !DILocation(line: 255, column: 9, scope: !11040)
!11063 = !DILocation(line: 256, column: 11, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11040, file: !1830, line: 256, column: 7)
!11065 = !DILocation(line: 209, column: 37, scope: !11041)
!11066 = !DILocation(line: 256, column: 7, scope: !11040)
!11067 = !DILocation(line: 262, column: 1, scope: !11015)
!11068 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1830, file: !1830, line: 176, type: !11069, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11071)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{!109, !110, !110, !110}
!11071 = !{!11072, !11073, !11074, !11075}
!11072 = !DILocalVariable(name: "pin", arg: 1, scope: !11068, file: !1830, line: 176, type: !110)
!11073 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11068, file: !1830, line: 176, type: !110)
!11074 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11068, file: !1830, line: 176, type: !110)
!11075 = !DILocalVariable(name: "port_device", scope: !11068, file: !1830, line: 178, type: !1760)
!11076 = !DILocation(line: 0, scope: !11068)
!11077 = !DILocation(line: 180, column: 22, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11068, file: !1830, line: 180, column: 6)
!11079 = !DILocation(line: 180, column: 6, scope: !11068)
!11080 = !DILocation(line: 180, column: 6, scope: !11078)
!11081 = !DILocation(line: 184, column: 16, scope: !11068)
!11082 = !DILocation(line: 186, column: 19, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11068, file: !1830, line: 186, column: 6)
!11084 = !DILocation(line: 186, column: 28, scope: !11083)
!11085 = !DILocation(line: 186, column: 33, scope: !11083)
!11086 = !DILocation(line: 186, column: 6, scope: !11068)
!11087 = !DILocation(line: 190, column: 43, scope: !11068)
!11088 = !DILocation(line: 190, column: 9, scope: !11068)
!11089 = !DILocation(line: 190, column: 2, scope: !11068)
!11090 = !DILocation(line: 191, column: 1, scope: !11068)
!11091 = distinct !DISubprogram(name: "device_is_ready", scope: !8995, file: !8995, line: 47, type: !11092, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11094)
!11092 = !DISubroutineType(types: !11093)
!11093 = !{!347, !1760}
!11094 = !{!11095}
!11095 = !DILocalVariable(name: "dev", arg: 1, scope: !11091, file: !8995, line: 47, type: !1760)
!11096 = !DILocation(line: 0, scope: !11091)
!11097 = !DILocation(line: 55, column: 2, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11091, file: !8995, line: 55, column: 2)
!11099 = !{i64 2149517584}
!11100 = !DILocation(line: 56, column: 9, scope: !11091)
!11101 = !DILocation(line: 56, column: 2, scope: !11091)
!11102 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11092, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11103)
!11103 = !{!11104}
!11104 = !DILocalVariable(name: "dev", arg: 1, scope: !11102, file: !336, line: 730, type: !1760)
!11105 = !DILocation(line: 0, scope: !11102)
!11106 = !DILocation(line: 732, column: 9, scope: !11102)
!11107 = !DILocation(line: 732, column: 2, scope: !11102)
!11108 = distinct !DISubprogram(name: "SystemInit", scope: !1882, file: !1882, line: 167, type: !3153, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2104)
!11109 = !DILocation(line: 182, column: 1, scope: !11108)
!11110 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1882, file: !1882, line: 220, type: !3153, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !11111)
!11111 = !{!11112, !11113, !11114, !11115, !11116}
!11112 = !DILocalVariable(name: "tmp", scope: !11110, file: !1882, line: 222, type: !110)
!11113 = !DILocalVariable(name: "pllvco", scope: !11110, file: !1882, line: 222, type: !110)
!11114 = !DILocalVariable(name: "pllp", scope: !11110, file: !1882, line: 222, type: !110)
!11115 = !DILocalVariable(name: "pllsource", scope: !11110, file: !1882, line: 222, type: !110)
!11116 = !DILocalVariable(name: "pllm", scope: !11110, file: !1882, line: 222, type: !110)
!11117 = !DILocation(line: 0, scope: !11110)
!11118 = !DILocation(line: 225, column: 14, scope: !11110)
!11119 = !DILocation(line: 225, column: 19, scope: !11110)
!11120 = !DILocation(line: 227, column: 3, scope: !11110)
!11121 = !DILocation(line: 240, column: 25, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11110, file: !1882, line: 228, column: 3)
!11123 = !DILocation(line: 241, column: 19, scope: !11122)
!11124 = !DILocation(line: 241, column: 27, scope: !11122)
!11125 = !DILocation(line: 0, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11122, file: !1882, line: 243, column: 11)
!11127 = !DILocation(line: 254, column: 22, scope: !11122)
!11128 = !DILocation(line: 254, column: 62, scope: !11122)
!11129 = !DILocation(line: 255, column: 31, scope: !11122)
!11130 = !DILocation(line: 256, column: 7, scope: !11122)
!11131 = !DILocation(line: 0, scope: !11122)
!11132 = !DILocation(line: 263, column: 30, scope: !11110)
!11133 = !DILocation(line: 263, column: 52, scope: !11110)
!11134 = !DILocation(line: 263, column: 9, scope: !11110)
!11135 = !DILocation(line: 265, column: 19, scope: !11110)
!11136 = !DILocation(line: 266, column: 1, scope: !11110)
!11137 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11138, file: !11138, line: 87, type: !11139, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11178)
!11138 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!11141, !11142}
!11141 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2987, line: 44, baseType: !2986)
!11142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11143, size: 32)
!11143 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11144, line: 172, baseType: !11145)
!11144 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11144, line: 121, size: 736, elements: !11146)
!11146 = !{!11147, !11148, !11157, !11165, !11166, !11167, !11168, !11169, !11170, !11171, !11172, !11173, !11174, !11175, !11176, !11177}
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11145, file: !11144, line: 123, baseType: !110, size: 32)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11145, file: !11144, line: 126, baseType: !11149, size: 160, offset: 32)
!11149 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11144, line: 97, baseType: !11150)
!11150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11144, line: 79, size: 160, elements: !11151)
!11151 = !{!11152, !11153, !11154, !11155, !11156}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11150, file: !11144, line: 81, baseType: !110, size: 32)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11150, file: !11144, line: 84, baseType: !110, size: 32, offset: 32)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11150, file: !11144, line: 87, baseType: !110, size: 32, offset: 64)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11150, file: !11144, line: 90, baseType: !110, size: 32, offset: 96)
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11150, file: !11144, line: 94, baseType: !110, size: 32, offset: 128)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11145, file: !11144, line: 129, baseType: !11158, size: 128, offset: 192)
!11158 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11144, line: 116, baseType: !11159)
!11159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11144, line: 102, size: 128, elements: !11160)
!11160 = !{!11161, !11162, !11163, !11164}
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11159, file: !11144, line: 104, baseType: !110, size: 32)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11159, file: !11144, line: 107, baseType: !110, size: 32, offset: 32)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11159, file: !11144, line: 110, baseType: !110, size: 32, offset: 64)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11159, file: !11144, line: 113, baseType: !110, size: 32, offset: 96)
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11145, file: !11144, line: 132, baseType: !110, size: 32, offset: 320)
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11145, file: !11144, line: 136, baseType: !110, size: 32, offset: 352)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11145, file: !11144, line: 140, baseType: !110, size: 32, offset: 384)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11145, file: !11144, line: 143, baseType: !110, size: 32, offset: 416)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11145, file: !11144, line: 146, baseType: !110, size: 32, offset: 448)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11145, file: !11144, line: 149, baseType: !110, size: 32, offset: 480)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11145, file: !11144, line: 152, baseType: !110, size: 32, offset: 512)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11145, file: !11144, line: 155, baseType: !110, size: 32, offset: 544)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11145, file: !11144, line: 158, baseType: !110, size: 32, offset: 576)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11145, file: !11144, line: 161, baseType: !110, size: 32, offset: 608)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11145, file: !11144, line: 164, baseType: !110, size: 32, offset: 640)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11145, file: !11144, line: 167, baseType: !110, size: 32, offset: 672)
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11145, file: !11144, line: 170, baseType: !180, size: 8, offset: 704)
!11178 = !{!11179, !11180, !11181, !11182, !11183, !11184, !11185, !11186, !11187, !11188, !11189}
!11179 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11137, file: !11138, line: 87, type: !11142)
!11180 = !DILocalVariable(name: "tickstart", scope: !11137, file: !11138, line: 89, type: !110)
!11181 = !DILocalVariable(name: "tmpreg1", scope: !11137, file: !11138, line: 90, type: !110)
!11182 = !DILocalVariable(name: "plli2sp", scope: !11137, file: !11138, line: 91, type: !110)
!11183 = !DILocalVariable(name: "plli2sq", scope: !11137, file: !11138, line: 92, type: !110)
!11184 = !DILocalVariable(name: "plli2sr", scope: !11137, file: !11138, line: 93, type: !110)
!11185 = !DILocalVariable(name: "pllsaip", scope: !11137, file: !11138, line: 94, type: !110)
!11186 = !DILocalVariable(name: "pllsaiq", scope: !11137, file: !11138, line: 95, type: !110)
!11187 = !DILocalVariable(name: "plli2sused", scope: !11137, file: !11138, line: 96, type: !110)
!11188 = !DILocalVariable(name: "pllsaiused", scope: !11137, file: !11138, line: 97, type: !110)
!11189 = !DILocalVariable(name: "tmpreg", scope: !11190, file: !11138, line: 184, type: !316)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11138, line: 184, column: 5)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !11138, line: 179, column: 3)
!11192 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 178, column: 6)
!11193 = !DILocation(line: 0, scope: !11137)
!11194 = !DILocation(line: 103, column: 23, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 103, column: 6)
!11196 = !DILocation(line: 103, column: 45, scope: !11195)
!11197 = !DILocation(line: 103, column: 71, scope: !11195)
!11198 = !DILocation(line: 103, column: 6, scope: !11137)
!11199 = !DILocation(line: 109, column: 5, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !11138, line: 104, column: 3)
!11201 = !DILocation(line: 111, column: 23, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11200, file: !11138, line: 111, column: 8)
!11203 = !DILocation(line: 111, column: 45, scope: !11202)
!11204 = !DILocation(line: 111, column: 8, scope: !11200)
!11205 = !DILocation(line: 119, column: 23, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 119, column: 6)
!11207 = !DILocation(line: 119, column: 45, scope: !11206)
!11208 = !DILocation(line: 119, column: 71, scope: !11206)
!11209 = !DILocation(line: 119, column: 6, scope: !11137)
!11210 = !DILocation(line: 125, column: 5, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11206, file: !11138, line: 120, column: 3)
!11212 = !DILocation(line: 127, column: 23, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11211, file: !11138, line: 127, column: 8)
!11214 = !DILocation(line: 127, column: 45, scope: !11213)
!11215 = !DILocation(line: 127, column: 8, scope: !11211)
!11216 = !DILocation(line: 135, column: 23, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 135, column: 6)
!11218 = !DILocation(line: 135, column: 45, scope: !11217)
!11219 = !DILocation(line: 135, column: 67, scope: !11217)
!11220 = !DILocation(line: 135, column: 6, scope: !11137)
!11221 = !DILocation(line: 141, column: 5, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11217, file: !11138, line: 136, column: 3)
!11223 = !DILocation(line: 143, column: 23, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11222, file: !11138, line: 143, column: 8)
!11225 = !DILocation(line: 143, column: 42, scope: !11224)
!11226 = !DILocation(line: 143, column: 8, scope: !11222)
!11227 = !DILocation(line: 148, column: 42, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11222, file: !11138, line: 148, column: 8)
!11229 = !DILocation(line: 148, column: 8, scope: !11222)
!11230 = !DILocation(line: 156, column: 23, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 156, column: 6)
!11232 = !DILocation(line: 156, column: 45, scope: !11231)
!11233 = !DILocation(line: 156, column: 67, scope: !11231)
!11234 = !DILocation(line: 156, column: 6, scope: !11137)
!11235 = !DILocation(line: 162, column: 5, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11231, file: !11138, line: 157, column: 3)
!11237 = !DILocation(line: 165, column: 23, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11236, file: !11138, line: 165, column: 8)
!11239 = !DILocation(line: 165, column: 42, scope: !11238)
!11240 = !DILocation(line: 165, column: 8, scope: !11236)
!11241 = !DILocation(line: 170, column: 42, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !11138, line: 170, column: 8)
!11243 = !DILocation(line: 170, column: 8, scope: !11236)
!11244 = !DILocation(line: 178, column: 23, scope: !11192)
!11245 = !DILocation(line: 178, column: 45, scope: !11192)
!11246 = !DILocation(line: 178, column: 66, scope: !11192)
!11247 = !DILocation(line: 178, column: 6, scope: !11137)
!11248 = !DILocation(line: 184, column: 5, scope: !11190)
!11249 = !DILocation(line: 184, column: 5, scope: !11191)
!11250 = !DILocation(line: 187, column: 13, scope: !11191)
!11251 = !DILocation(line: 190, column: 17, scope: !11191)
!11252 = !DILocation(line: 192, column: 5, scope: !11191)
!11253 = !DILocation(line: 192, column: 17, scope: !11191)
!11254 = !DILocation(line: 192, column: 20, scope: !11191)
!11255 = !DILocation(line: 192, column: 34, scope: !11191)
!11256 = !DILocation(line: 194, column: 11, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !11138, line: 194, column: 10)
!11258 = distinct !DILexicalBlock(scope: !11191, file: !11138, line: 193, column: 5)
!11259 = !DILocation(line: 194, column: 25, scope: !11257)
!11260 = !DILocation(line: 194, column: 39, scope: !11257)
!11261 = !DILocation(line: 194, column: 10, scope: !11258)
!11262 = distinct !{!11262, !11252, !11263}
!11263 = !DILocation(line: 198, column: 5, scope: !11191)
!11264 = !DILocation(line: 200, column: 21, scope: !11191)
!11265 = !DILocation(line: 200, column: 26, scope: !11191)
!11266 = !DILocation(line: 201, column: 17, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11191, file: !11138, line: 201, column: 8)
!11268 = !DILocation(line: 201, column: 33, scope: !11267)
!11269 = !DILocation(line: 201, column: 66, scope: !11267)
!11270 = !DILocation(line: 201, column: 84, scope: !11267)
!11271 = !DILocation(line: 201, column: 47, scope: !11267)
!11272 = !DILocation(line: 201, column: 8, scope: !11191)
!11273 = !DILocation(line: 204, column: 23, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11267, file: !11138, line: 202, column: 5)
!11275 = !DILocation(line: 204, column: 28, scope: !11274)
!11276 = !DILocation(line: 206, column: 7, scope: !11274)
!11277 = !DILocation(line: 207, column: 7, scope: !11274)
!11278 = !DILocation(line: 209, column: 17, scope: !11274)
!11279 = !DILocation(line: 212, column: 10, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11274, file: !11138, line: 212, column: 10)
!11281 = !DILocation(line: 212, column: 10, scope: !11274)
!11282 = !DILocation(line: 215, column: 21, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11280, file: !11138, line: 213, column: 7)
!11284 = !DILocation(line: 218, column: 9, scope: !11283)
!11285 = !DILocation(line: 218, column: 15, scope: !11283)
!11286 = !DILocation(line: 218, column: 51, scope: !11283)
!11287 = !DILocation(line: 220, column: 15, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !11138, line: 220, column: 14)
!11289 = distinct !DILexicalBlock(scope: !11283, file: !11138, line: 219, column: 9)
!11290 = !DILocation(line: 220, column: 29, scope: !11288)
!11291 = !DILocation(line: 220, column: 43, scope: !11288)
!11292 = !DILocation(line: 220, column: 14, scope: !11289)
!11293 = distinct !{!11293, !11284, !11294}
!11294 = !DILocation(line: 224, column: 9, scope: !11283)
!11295 = !DILocation(line: 227, column: 5, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11191, file: !11138, line: 227, column: 5)
!11297 = !DILocation(line: 232, column: 23, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 232, column: 6)
!11299 = !DILocation(line: 228, column: 3, scope: !11191)
!11300 = !DILocation(line: 232, column: 45, scope: !11298)
!11301 = !DILocation(line: 232, column: 66, scope: !11298)
!11302 = !DILocation(line: 232, column: 6, scope: !11137)
!11303 = !DILocation(line: 235, column: 5, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11298, file: !11138, line: 233, column: 3)
!11305 = !DILocation(line: 240, column: 23, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 240, column: 6)
!11307 = !DILocation(line: 236, column: 3, scope: !11304)
!11308 = !DILocation(line: 240, column: 45, scope: !11306)
!11309 = !DILocation(line: 240, column: 70, scope: !11306)
!11310 = !DILocation(line: 240, column: 6, scope: !11137)
!11311 = !DILocation(line: 246, column: 5, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11306, file: !11138, line: 241, column: 3)
!11313 = !DILocation(line: 251, column: 23, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 251, column: 6)
!11315 = !DILocation(line: 247, column: 3, scope: !11312)
!11316 = !DILocation(line: 251, column: 45, scope: !11314)
!11317 = !DILocation(line: 251, column: 66, scope: !11314)
!11318 = !DILocation(line: 251, column: 6, scope: !11137)
!11319 = !DILocation(line: 257, column: 5, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11314, file: !11138, line: 252, column: 3)
!11321 = !DILocation(line: 262, column: 23, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 262, column: 6)
!11323 = !DILocation(line: 258, column: 3, scope: !11320)
!11324 = !DILocation(line: 262, column: 45, scope: !11322)
!11325 = !DILocation(line: 262, column: 68, scope: !11322)
!11326 = !DILocation(line: 262, column: 6, scope: !11137)
!11327 = !DILocation(line: 268, column: 5, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11322, file: !11138, line: 263, column: 3)
!11329 = !DILocation(line: 271, column: 23, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11328, file: !11138, line: 271, column: 8)
!11331 = !DILocation(line: 271, column: 43, scope: !11330)
!11332 = !DILocation(line: 271, column: 8, scope: !11328)
!11333 = !DILocation(line: 279, column: 23, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 279, column: 6)
!11335 = !DILocation(line: 279, column: 45, scope: !11334)
!11336 = !DILocation(line: 279, column: 67, scope: !11334)
!11337 = !DILocation(line: 279, column: 6, scope: !11137)
!11338 = !DILocation(line: 285, column: 5, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11334, file: !11138, line: 280, column: 3)
!11340 = !DILocation(line: 290, column: 23, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 290, column: 6)
!11342 = !DILocation(line: 286, column: 3, scope: !11339)
!11343 = !DILocation(line: 290, column: 45, scope: !11341)
!11344 = !DILocation(line: 290, column: 70, scope: !11341)
!11345 = !DILocation(line: 290, column: 6, scope: !11137)
!11346 = !DILocation(line: 296, column: 5, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11341, file: !11138, line: 291, column: 3)
!11348 = !DILocation(line: 298, column: 23, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11347, file: !11138, line: 298, column: 8)
!11350 = !DILocation(line: 298, column: 43, scope: !11349)
!11351 = !DILocation(line: 298, column: 8, scope: !11347)
!11352 = !DILocation(line: 308, column: 44, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 308, column: 6)
!11354 = !DILocation(line: 308, column: 18, scope: !11353)
!11355 = !DILocation(line: 308, column: 25, scope: !11353)
!11356 = !DILocation(line: 308, column: 65, scope: !11353)
!11357 = !DILocation(line: 308, column: 6, scope: !11137)
!11358 = !DILocation(line: 311, column: 5, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11353, file: !11138, line: 309, column: 3)
!11360 = !DILocation(line: 313, column: 17, scope: !11359)
!11361 = !DILocation(line: 315, column: 5, scope: !11359)
!11362 = !DILocation(line: 315, column: 11, scope: !11359)
!11363 = !DILocation(line: 317, column: 11, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11138, line: 317, column: 10)
!11365 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 316, column: 5)
!11366 = !DILocation(line: 317, column: 25, scope: !11364)
!11367 = !DILocation(line: 317, column: 39, scope: !11364)
!11368 = !DILocation(line: 317, column: 10, scope: !11365)
!11369 = distinct !{!11369, !11361, !11370}
!11370 = !DILocation(line: 322, column: 5, scope: !11359)
!11371 = !DILocation(line: 329, column: 27, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 329, column: 8)
!11373 = !DILocation(line: 329, column: 49, scope: !11372)
!11374 = !DILocation(line: 329, column: 75, scope: !11372)
!11375 = !DILocation(line: 329, column: 102, scope: !11372)
!11376 = !DILocation(line: 329, column: 121, scope: !11372)
!11377 = !DILocation(line: 329, column: 143, scope: !11372)
!11378 = !DILocation(line: 329, column: 176, scope: !11372)
!11379 = !DILocation(line: 330, column: 49, scope: !11372)
!11380 = !DILocation(line: 330, column: 75, scope: !11372)
!11381 = !DILocation(line: 330, column: 102, scope: !11372)
!11382 = !DILocation(line: 330, column: 121, scope: !11372)
!11383 = !DILocation(line: 330, column: 143, scope: !11372)
!11384 = !DILocation(line: 329, column: 8, scope: !11359)
!11385 = !DILocation(line: 336, column: 26, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11372, file: !11138, line: 331, column: 5)
!11387 = !DILocation(line: 336, column: 100, scope: !11386)
!11388 = !DILocation(line: 337, column: 24, scope: !11386)
!11389 = !DILocation(line: 337, column: 61, scope: !11386)
!11390 = !DILocation(line: 341, column: 7, scope: !11386)
!11391 = !DILocation(line: 345, column: 27, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 345, column: 8)
!11393 = !DILocation(line: 342, column: 5, scope: !11386)
!11394 = !DILocation(line: 345, column: 49, scope: !11392)
!11395 = !DILocation(line: 345, column: 71, scope: !11392)
!11396 = !DILocation(line: 345, column: 94, scope: !11392)
!11397 = !DILocation(line: 345, column: 113, scope: !11392)
!11398 = !DILocation(line: 345, column: 132, scope: !11392)
!11399 = !DILocation(line: 345, column: 162, scope: !11392)
!11400 = !DILocation(line: 346, column: 49, scope: !11392)
!11401 = !DILocation(line: 346, column: 71, scope: !11392)
!11402 = !DILocation(line: 346, column: 94, scope: !11392)
!11403 = !DILocation(line: 346, column: 113, scope: !11392)
!11404 = !DILocation(line: 346, column: 132, scope: !11392)
!11405 = !DILocation(line: 345, column: 8, scope: !11359)
!11406 = !DILocation(line: 354, column: 26, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11392, file: !11138, line: 347, column: 5)
!11408 = !DILocation(line: 354, column: 100, scope: !11407)
!11409 = !DILocation(line: 355, column: 24, scope: !11407)
!11410 = !DILocation(line: 355, column: 61, scope: !11407)
!11411 = !DILocation(line: 360, column: 7, scope: !11407)
!11412 = !DILocation(line: 363, column: 7, scope: !11407)
!11413 = !DILocation(line: 367, column: 26, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 367, column: 8)
!11415 = !DILocation(line: 364, column: 5, scope: !11407)
!11416 = !DILocation(line: 367, column: 48, scope: !11414)
!11417 = !DILocation(line: 367, column: 73, scope: !11414)
!11418 = !DILocation(line: 367, column: 99, scope: !11414)
!11419 = !DILocation(line: 367, column: 118, scope: !11414)
!11420 = !DILocation(line: 367, column: 138, scope: !11414)
!11421 = !DILocation(line: 367, column: 8, scope: !11359)
!11422 = !DILocation(line: 372, column: 26, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11414, file: !11138, line: 368, column: 5)
!11424 = !DILocation(line: 373, column: 24, scope: !11423)
!11425 = !DILocation(line: 373, column: 61, scope: !11423)
!11426 = !DILocation(line: 377, column: 7, scope: !11423)
!11427 = !DILocation(line: 381, column: 24, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 381, column: 8)
!11429 = !DILocation(line: 378, column: 5, scope: !11423)
!11430 = !DILocation(line: 381, column: 45, scope: !11428)
!11431 = !DILocation(line: 381, column: 69, scope: !11428)
!11432 = !DILocation(line: 381, column: 8, scope: !11359)
!11433 = !DILocation(line: 390, column: 7, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11428, file: !11138, line: 382, column: 5)
!11435 = !DILocation(line: 391, column: 5, scope: !11434)
!11436 = !DILocation(line: 394, column: 5, scope: !11359)
!11437 = !DILocation(line: 396, column: 17, scope: !11359)
!11438 = !DILocation(line: 398, column: 5, scope: !11359)
!11439 = !DILocation(line: 398, column: 11, scope: !11359)
!11440 = !DILocation(line: 398, column: 51, scope: !11359)
!11441 = !DILocation(line: 400, column: 11, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11138, line: 400, column: 10)
!11443 = distinct !DILexicalBlock(scope: !11359, file: !11138, line: 399, column: 5)
!11444 = !DILocation(line: 400, column: 25, scope: !11442)
!11445 = !DILocation(line: 400, column: 39, scope: !11442)
!11446 = !DILocation(line: 400, column: 10, scope: !11443)
!11447 = distinct !{!11447, !11438, !11448}
!11448 = !DILocation(line: 405, column: 5, scope: !11359)
!11449 = !DILocation(line: 411, column: 17, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 411, column: 6)
!11451 = !DILocation(line: 411, column: 6, scope: !11137)
!11452 = !DILocation(line: 414, column: 5, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11450, file: !11138, line: 412, column: 3)
!11454 = !DILocation(line: 416, column: 17, scope: !11453)
!11455 = !DILocation(line: 418, column: 5, scope: !11453)
!11456 = !DILocation(line: 418, column: 11, scope: !11453)
!11457 = !DILocation(line: 420, column: 11, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !11138, line: 420, column: 10)
!11459 = distinct !DILexicalBlock(scope: !11453, file: !11138, line: 419, column: 5)
!11460 = !DILocation(line: 420, column: 25, scope: !11458)
!11461 = !DILocation(line: 420, column: 39, scope: !11458)
!11462 = !DILocation(line: 420, column: 10, scope: !11459)
!11463 = distinct !{!11463, !11455, !11464}
!11464 = !DILocation(line: 425, column: 5, scope: !11453)
!11465 = !DILocation(line: 432, column: 27, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11453, file: !11138, line: 432, column: 8)
!11467 = !DILocation(line: 432, column: 49, scope: !11466)
!11468 = !DILocation(line: 432, column: 71, scope: !11466)
!11469 = !DILocation(line: 432, column: 94, scope: !11466)
!11470 = !DILocation(line: 432, column: 113, scope: !11466)
!11471 = !DILocation(line: 432, column: 132, scope: !11466)
!11472 = !DILocation(line: 432, column: 162, scope: !11466)
!11473 = !DILocation(line: 433, column: 49, scope: !11466)
!11474 = !DILocation(line: 433, column: 71, scope: !11466)
!11475 = !DILocation(line: 433, column: 94, scope: !11466)
!11476 = !DILocation(line: 433, column: 113, scope: !11466)
!11477 = !DILocation(line: 433, column: 132, scope: !11466)
!11478 = !DILocation(line: 432, column: 8, scope: !11453)
!11479 = !DILocation(line: 441, column: 26, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11466, file: !11138, line: 434, column: 5)
!11481 = !DILocation(line: 441, column: 100, scope: !11480)
!11482 = !DILocation(line: 445, column: 7, scope: !11480)
!11483 = !DILocation(line: 448, column: 7, scope: !11480)
!11484 = !DILocation(line: 453, column: 26, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11453, file: !11138, line: 453, column: 8)
!11486 = !DILocation(line: 449, column: 5, scope: !11480)
!11487 = !DILocation(line: 453, column: 48, scope: !11485)
!11488 = !DILocation(line: 453, column: 71, scope: !11485)
!11489 = !DILocation(line: 453, column: 95, scope: !11485)
!11490 = !DILocation(line: 453, column: 114, scope: !11485)
!11491 = !DILocation(line: 453, column: 134, scope: !11485)
!11492 = !DILocation(line: 453, column: 8, scope: !11453)
!11493 = !DILocation(line: 458, column: 24, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11485, file: !11138, line: 454, column: 5)
!11495 = !DILocation(line: 458, column: 61, scope: !11494)
!11496 = !DILocation(line: 462, column: 7, scope: !11494)
!11497 = !DILocation(line: 463, column: 5, scope: !11494)
!11498 = !DILocation(line: 466, column: 5, scope: !11453)
!11499 = !DILocation(line: 468, column: 17, scope: !11453)
!11500 = !DILocation(line: 470, column: 5, scope: !11453)
!11501 = !DILocation(line: 470, column: 11, scope: !11453)
!11502 = !DILocation(line: 470, column: 39, scope: !11453)
!11503 = !DILocation(line: 472, column: 11, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !11138, line: 472, column: 10)
!11505 = distinct !DILexicalBlock(scope: !11453, file: !11138, line: 471, column: 5)
!11506 = !DILocation(line: 472, column: 25, scope: !11504)
!11507 = !DILocation(line: 472, column: 39, scope: !11504)
!11508 = !DILocation(line: 472, column: 10, scope: !11505)
!11509 = distinct !{!11509, !11500, !11510}
!11510 = !DILocation(line: 477, column: 5, scope: !11453)
!11511 = !DILocation(line: 480, column: 1, scope: !11137)
!11512 = !DISubprogram(name: "HAL_GetTick", scope: !11513, file: !11513, line: 234, type: !6569, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!11513 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11514 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11138, file: !11138, line: 489, type: !11515, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11517)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{null, !11142}
!11517 = !{!11518, !11519}
!11518 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11514, file: !11138, line: 489, type: !11142)
!11519 = !DILocalVariable(name: "tempreg", scope: !11514, file: !11138, line: 491, type: !110)
!11520 = !DILocation(line: 0, scope: !11514)
!11521 = !DILocation(line: 494, column: 18, scope: !11514)
!11522 = !DILocation(line: 494, column: 39, scope: !11514)
!11523 = !DILocation(line: 502, column: 52, scope: !11514)
!11524 = !DILocation(line: 502, column: 63, scope: !11514)
!11525 = !DILocation(line: 502, column: 25, scope: !11514)
!11526 = !DILocation(line: 502, column: 33, scope: !11514)
!11527 = !DILocation(line: 503, column: 52, scope: !11514)
!11528 = !DILocation(line: 503, column: 89, scope: !11514)
!11529 = !DILocation(line: 503, column: 25, scope: !11514)
!11530 = !DILocation(line: 503, column: 33, scope: !11514)
!11531 = !DILocation(line: 504, column: 54, scope: !11514)
!11532 = !DILocation(line: 504, column: 128, scope: !11514)
!11533 = !DILocation(line: 504, column: 25, scope: !11514)
!11534 = !DILocation(line: 504, column: 33, scope: !11514)
!11535 = !DILocation(line: 505, column: 52, scope: !11514)
!11536 = !DILocation(line: 505, column: 89, scope: !11514)
!11537 = !DILocation(line: 505, column: 25, scope: !11514)
!11538 = !DILocation(line: 505, column: 33, scope: !11514)
!11539 = !DILocation(line: 506, column: 52, scope: !11514)
!11540 = !DILocation(line: 506, column: 89, scope: !11514)
!11541 = !DILocation(line: 506, column: 25, scope: !11514)
!11542 = !DILocation(line: 506, column: 33, scope: !11514)
!11543 = !DILocation(line: 508, column: 52, scope: !11514)
!11544 = !DILocation(line: 508, column: 63, scope: !11514)
!11545 = !DILocation(line: 508, column: 25, scope: !11514)
!11546 = !DILocation(line: 508, column: 33, scope: !11514)
!11547 = !DILocation(line: 509, column: 52, scope: !11514)
!11548 = !DILocation(line: 509, column: 89, scope: !11514)
!11549 = !DILocation(line: 509, column: 25, scope: !11514)
!11550 = !DILocation(line: 509, column: 33, scope: !11514)
!11551 = !DILocation(line: 510, column: 54, scope: !11514)
!11552 = !DILocation(line: 510, column: 128, scope: !11514)
!11553 = !DILocation(line: 510, column: 25, scope: !11514)
!11554 = !DILocation(line: 510, column: 33, scope: !11514)
!11555 = !DILocation(line: 511, column: 52, scope: !11514)
!11556 = !DILocation(line: 511, column: 89, scope: !11514)
!11557 = !DILocation(line: 511, column: 25, scope: !11514)
!11558 = !DILocation(line: 511, column: 33, scope: !11514)
!11559 = !DILocation(line: 513, column: 48, scope: !11514)
!11560 = !DILocation(line: 513, column: 56, scope: !11514)
!11561 = !DILocation(line: 513, column: 18, scope: !11514)
!11562 = !DILocation(line: 513, column: 29, scope: !11514)
!11563 = !DILocation(line: 514, column: 48, scope: !11514)
!11564 = !DILocation(line: 514, column: 82, scope: !11514)
!11565 = !DILocation(line: 514, column: 18, scope: !11514)
!11566 = !DILocation(line: 514, column: 29, scope: !11514)
!11567 = !DILocation(line: 517, column: 39, scope: !11514)
!11568 = !DILocation(line: 517, column: 18, scope: !11514)
!11569 = !DILocation(line: 517, column: 37, scope: !11514)
!11570 = !DILocation(line: 520, column: 39, scope: !11514)
!11571 = !DILocation(line: 520, column: 18, scope: !11514)
!11572 = !DILocation(line: 520, column: 37, scope: !11514)
!11573 = !DILocation(line: 523, column: 42, scope: !11514)
!11574 = !DILocation(line: 523, column: 18, scope: !11514)
!11575 = !DILocation(line: 523, column: 40, scope: !11514)
!11576 = !DILocation(line: 526, column: 42, scope: !11514)
!11577 = !DILocation(line: 526, column: 18, scope: !11514)
!11578 = !DILocation(line: 526, column: 40, scope: !11514)
!11579 = !DILocation(line: 529, column: 19, scope: !11514)
!11580 = !DILocation(line: 529, column: 24, scope: !11514)
!11581 = !DILocation(line: 530, column: 67, scope: !11514)
!11582 = !DILocation(line: 530, column: 72, scope: !11514)
!11583 = !DILocation(line: 530, column: 59, scope: !11514)
!11584 = !DILocation(line: 530, column: 18, scope: !11514)
!11585 = !DILocation(line: 530, column: 36, scope: !11514)
!11586 = !DILocation(line: 533, column: 38, scope: !11514)
!11587 = !DILocation(line: 533, column: 18, scope: !11514)
!11588 = !DILocation(line: 533, column: 36, scope: !11514)
!11589 = !DILocation(line: 536, column: 42, scope: !11514)
!11590 = !DILocation(line: 536, column: 18, scope: !11514)
!11591 = !DILocation(line: 536, column: 40, scope: !11514)
!11592 = !DILocation(line: 539, column: 40, scope: !11514)
!11593 = !DILocation(line: 539, column: 18, scope: !11514)
!11594 = !DILocation(line: 539, column: 38, scope: !11514)
!11595 = !DILocation(line: 542, column: 39, scope: !11514)
!11596 = !DILocation(line: 542, column: 18, scope: !11514)
!11597 = !DILocation(line: 542, column: 37, scope: !11514)
!11598 = !DILocation(line: 545, column: 40, scope: !11514)
!11599 = !DILocation(line: 545, column: 18, scope: !11514)
!11600 = !DILocation(line: 545, column: 38, scope: !11514)
!11601 = !DILocation(line: 548, column: 13, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11514, file: !11138, line: 548, column: 7)
!11603 = !DILocation(line: 548, column: 7, scope: !11514)
!11604 = !DILocation(line: 550, column: 20, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11602, file: !11138, line: 549, column: 3)
!11606 = !DILocation(line: 550, column: 37, scope: !11605)
!11607 = !DILocation(line: 556, column: 1, scope: !11514)
!11608 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11138, file: !11138, line: 569, type: !7769, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11609)
!11609 = !{!11610, !11611, !11612, !11613, !11614, !11615, !11616}
!11610 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11608, file: !11138, line: 569, type: !110)
!11611 = !DILocalVariable(name: "tmpreg1", scope: !11608, file: !11138, line: 571, type: !110)
!11612 = !DILocalVariable(name: "frequency", scope: !11608, file: !11138, line: 573, type: !110)
!11613 = !DILocalVariable(name: "vcoinput", scope: !11608, file: !11138, line: 575, type: !110)
!11614 = !DILocalVariable(name: "saiclocksource", scope: !11608, file: !11138, line: 577, type: !110)
!11615 = !DILocalVariable(name: "srcclk", scope: !11608, file: !11138, line: 578, type: !110)
!11616 = !DILocalVariable(name: "vcooutput", scope: !11608, file: !11138, line: 580, type: !110)
!11617 = !DILocation(line: 0, scope: !11608)
!11618 = !DILocation(line: 581, column: 3, scope: !11608)
!11619 = !DILocation(line: 586, column: 29, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11621, file: !11138, line: 585, column: 5)
!11621 = distinct !DILexicalBlock(scope: !11608, file: !11138, line: 582, column: 3)
!11622 = !DILocation(line: 588, column: 7, scope: !11620)
!11623 = !DILocation(line: 594, column: 20, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !11138, line: 594, column: 14)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !11138, line: 591, column: 9)
!11626 = distinct !DILexicalBlock(scope: !11620, file: !11138, line: 589, column: 7)
!11627 = !DILocation(line: 0, scope: !11624)
!11628 = !DILocation(line: 606, column: 27, scope: !11625)
!11629 = !DILocation(line: 606, column: 64, scope: !11625)
!11630 = !DILocation(line: 607, column: 42, scope: !11625)
!11631 = !DILocation(line: 607, column: 79, scope: !11625)
!11632 = !DILocation(line: 607, column: 33, scope: !11625)
!11633 = !DILocation(line: 607, column: 86, scope: !11625)
!11634 = !DILocation(line: 610, column: 29, scope: !11625)
!11635 = !DILocation(line: 610, column: 63, scope: !11625)
!11636 = !DILocation(line: 610, column: 70, scope: !11625)
!11637 = !DILocation(line: 611, column: 32, scope: !11625)
!11638 = !DILocation(line: 612, column: 11, scope: !11625)
!11639 = !DILocation(line: 619, column: 20, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !11138, line: 619, column: 14)
!11641 = distinct !DILexicalBlock(scope: !11626, file: !11138, line: 616, column: 9)
!11642 = !DILocation(line: 0, scope: !11640)
!11643 = !DILocation(line: 632, column: 27, scope: !11641)
!11644 = !DILocation(line: 632, column: 64, scope: !11641)
!11645 = !DILocation(line: 633, column: 42, scope: !11641)
!11646 = !DILocation(line: 633, column: 79, scope: !11641)
!11647 = !DILocation(line: 633, column: 33, scope: !11641)
!11648 = !DILocation(line: 633, column: 86, scope: !11641)
!11649 = !DILocation(line: 636, column: 28, scope: !11641)
!11650 = !DILocation(line: 636, column: 36, scope: !11641)
!11651 = !DILocation(line: 636, column: 62, scope: !11641)
!11652 = !DILocation(line: 637, column: 32, scope: !11641)
!11653 = !DILocation(line: 638, column: 11, scope: !11641)
!11654 = !DILocation(line: 645, column: 20, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !11138, line: 645, column: 14)
!11656 = distinct !DILexicalBlock(scope: !11626, file: !11138, line: 642, column: 9)
!11657 = !DILocation(line: 0, scope: !11655)
!11658 = !DILocation(line: 658, column: 27, scope: !11656)
!11659 = !DILocation(line: 658, column: 55, scope: !11656)
!11660 = !DILocation(line: 659, column: 42, scope: !11656)
!11661 = !DILocation(line: 659, column: 70, scope: !11656)
!11662 = !DILocation(line: 659, column: 33, scope: !11656)
!11663 = !DILocation(line: 659, column: 77, scope: !11656)
!11664 = !DILocation(line: 660, column: 11, scope: !11656)
!11665 = !DILocation(line: 665, column: 11, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11626, file: !11138, line: 663, column: 9)
!11667 = !DILocation(line: 669, column: 20, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !11138, line: 669, column: 14)
!11669 = distinct !DILexicalBlock(scope: !11626, file: !11138, line: 668, column: 9)
!11670 = !DILocation(line: 691, column: 16, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11621, file: !11138, line: 689, column: 5)
!11672 = !DILocation(line: 692, column: 7, scope: !11671)
!11673 = !DILocation(line: 706, column: 20, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11138, line: 706, column: 14)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !11138, line: 703, column: 9)
!11676 = distinct !DILexicalBlock(scope: !11671, file: !11138, line: 693, column: 7)
!11677 = !DILocation(line: 0, scope: !11674)
!11678 = !DILocation(line: 718, column: 53, scope: !11675)
!11679 = !DILocation(line: 718, column: 90, scope: !11675)
!11680 = !DILocation(line: 718, column: 43, scope: !11675)
!11681 = !DILocation(line: 720, column: 53, scope: !11675)
!11682 = !DILocation(line: 720, column: 90, scope: !11675)
!11683 = !DILocation(line: 720, column: 44, scope: !11675)
!11684 = !DILocation(line: 721, column: 11, scope: !11675)
!11685 = !DILocation(line: 728, column: 20, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !11138, line: 728, column: 14)
!11687 = distinct !DILexicalBlock(scope: !11676, file: !11138, line: 725, column: 9)
!11688 = !DILocation(line: 0, scope: !11686)
!11689 = !DILocation(line: 740, column: 53, scope: !11687)
!11690 = !DILocation(line: 740, column: 81, scope: !11687)
!11691 = !DILocation(line: 740, column: 43, scope: !11687)
!11692 = !DILocation(line: 742, column: 53, scope: !11687)
!11693 = !DILocation(line: 742, column: 81, scope: !11687)
!11694 = !DILocation(line: 742, column: 44, scope: !11687)
!11695 = !DILocation(line: 743, column: 11, scope: !11687)
!11696 = !DILocation(line: 748, column: 20, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !11138, line: 748, column: 14)
!11698 = distinct !DILexicalBlock(scope: !11676, file: !11138, line: 747, column: 9)
!11699 = !DILocation(line: 770, column: 16, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11621, file: !11138, line: 768, column: 5)
!11701 = !DILocation(line: 771, column: 7, scope: !11700)
!11702 = !DILocation(line: 785, column: 20, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !11138, line: 785, column: 14)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !11138, line: 782, column: 9)
!11705 = distinct !DILexicalBlock(scope: !11700, file: !11138, line: 772, column: 7)
!11706 = !DILocation(line: 0, scope: !11703)
!11707 = !DILocation(line: 797, column: 53, scope: !11704)
!11708 = !DILocation(line: 797, column: 90, scope: !11704)
!11709 = !DILocation(line: 797, column: 43, scope: !11704)
!11710 = !DILocation(line: 799, column: 53, scope: !11704)
!11711 = !DILocation(line: 799, column: 90, scope: !11704)
!11712 = !DILocation(line: 799, column: 44, scope: !11704)
!11713 = !DILocation(line: 800, column: 11, scope: !11704)
!11714 = !DILocation(line: 807, column: 20, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !11138, line: 807, column: 14)
!11716 = distinct !DILexicalBlock(scope: !11705, file: !11138, line: 804, column: 9)
!11717 = !DILocation(line: 0, scope: !11715)
!11718 = !DILocation(line: 819, column: 53, scope: !11716)
!11719 = !DILocation(line: 819, column: 81, scope: !11716)
!11720 = !DILocation(line: 819, column: 43, scope: !11716)
!11721 = !DILocation(line: 821, column: 53, scope: !11716)
!11722 = !DILocation(line: 821, column: 81, scope: !11716)
!11723 = !DILocation(line: 821, column: 44, scope: !11716)
!11724 = !DILocation(line: 822, column: 11, scope: !11716)
!11725 = !DILocation(line: 827, column: 20, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !11138, line: 827, column: 14)
!11727 = distinct !DILexicalBlock(scope: !11705, file: !11138, line: 826, column: 9)
!11728 = !DILocation(line: 847, column: 3, scope: !11608)
!11729 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11138, file: !11138, line: 2766, type: !11730, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11732)
!11730 = !DISubroutineType(types: !11731)
!11731 = !{null, !180}
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "Mode", arg: 1, scope: !11729, file: !11138, line: 2766, type: !180)
!11734 = !DILocation(line: 0, scope: !11729)
!11735 = !DILocation(line: 2770, column: 11, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11729, file: !11138, line: 2770, column: 6)
!11737 = !DILocation(line: 0, scope: !11736)
!11738 = !DILocation(line: 2770, column: 6, scope: !11729)
!11739 = !DILocation(line: 2778, column: 1, scope: !11729)
!11740 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11138, file: !11138, line: 2803, type: !11741, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11744)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{!11141, !11743}
!11743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11149, size: 32)
!11744 = !{!11745, !11746}
!11745 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11740, file: !11138, line: 2803, type: !11743)
!11746 = !DILocalVariable(name: "tickstart", scope: !11740, file: !11138, line: 2805, type: !110)
!11747 = !DILocation(line: 0, scope: !11740)
!11748 = !DILocation(line: 2821, column: 3, scope: !11740)
!11749 = !DILocation(line: 2824, column: 15, scope: !11740)
!11750 = !DILocation(line: 2825, column: 3, scope: !11740)
!11751 = !DILocation(line: 2825, column: 9, scope: !11740)
!11752 = !DILocation(line: 2827, column: 9, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !11138, line: 2827, column: 8)
!11754 = distinct !DILexicalBlock(scope: !11740, file: !11138, line: 2826, column: 3)
!11755 = !DILocation(line: 2827, column: 23, scope: !11753)
!11756 = !DILocation(line: 2827, column: 37, scope: !11753)
!11757 = !DILocation(line: 2827, column: 8, scope: !11754)
!11758 = distinct !{!11758, !11750, !11759}
!11759 = !DILocation(line: 2832, column: 3, scope: !11740)
!11760 = !DILocation(line: 2840, column: 3, scope: !11740)
!11761 = !DILocation(line: 2866, column: 3, scope: !11740)
!11762 = !DILocation(line: 2869, column: 15, scope: !11740)
!11763 = !DILocation(line: 2870, column: 3, scope: !11740)
!11764 = !DILocation(line: 2870, column: 9, scope: !11740)
!11765 = !DILocation(line: 2870, column: 48, scope: !11740)
!11766 = !DILocation(line: 2872, column: 9, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !11138, line: 2872, column: 8)
!11768 = distinct !DILexicalBlock(scope: !11740, file: !11138, line: 2871, column: 3)
!11769 = !DILocation(line: 2872, column: 23, scope: !11767)
!11770 = !DILocation(line: 2872, column: 37, scope: !11767)
!11771 = !DILocation(line: 2872, column: 8, scope: !11768)
!11772 = distinct !{!11772, !11763, !11773}
!11773 = !DILocation(line: 2877, column: 3, scope: !11740)
!11774 = !DILocation(line: 2880, column: 1, scope: !11740)
!11775 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11138, file: !11138, line: 2886, type: !11776, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11778)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{!11141}
!11778 = !{!11779}
!11779 = !DILocalVariable(name: "tickstart", scope: !11775, file: !11138, line: 2888, type: !110)
!11780 = !DILocation(line: 2891, column: 3, scope: !11775)
!11781 = !DILocation(line: 2894, column: 15, scope: !11775)
!11782 = !DILocation(line: 0, scope: !11775)
!11783 = !DILocation(line: 2895, column: 3, scope: !11775)
!11784 = !DILocation(line: 2895, column: 9, scope: !11775)
!11785 = !DILocation(line: 2895, column: 45, scope: !11775)
!11786 = !DILocation(line: 2897, column: 9, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !11138, line: 2897, column: 8)
!11788 = distinct !DILexicalBlock(scope: !11775, file: !11138, line: 2896, column: 3)
!11789 = !DILocation(line: 2897, column: 23, scope: !11787)
!11790 = !DILocation(line: 2897, column: 36, scope: !11787)
!11791 = !DILocation(line: 2897, column: 8, scope: !11788)
!11792 = distinct !{!11792, !11783, !11793}
!11793 = !DILocation(line: 2902, column: 3, scope: !11775)
!11794 = !DILocation(line: 2905, column: 1, scope: !11775)
!11795 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11138, file: !11138, line: 2916, type: !11796, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11799)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{!11141, !11798}
!11798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11158, size: 32)
!11799 = !{!11800, !11801}
!11800 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11795, file: !11138, line: 2916, type: !11798)
!11801 = !DILocalVariable(name: "tickstart", scope: !11795, file: !11138, line: 2918, type: !110)
!11802 = !DILocation(line: 0, scope: !11795)
!11803 = !DILocation(line: 2934, column: 3, scope: !11795)
!11804 = !DILocation(line: 2937, column: 15, scope: !11795)
!11805 = !DILocation(line: 2938, column: 3, scope: !11795)
!11806 = !DILocation(line: 2938, column: 9, scope: !11795)
!11807 = !DILocation(line: 2940, column: 9, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !11138, line: 2940, column: 8)
!11809 = distinct !DILexicalBlock(scope: !11795, file: !11138, line: 2939, column: 3)
!11810 = !DILocation(line: 2940, column: 23, scope: !11808)
!11811 = !DILocation(line: 2940, column: 37, scope: !11808)
!11812 = !DILocation(line: 2940, column: 8, scope: !11809)
!11813 = distinct !{!11813, !11805, !11814}
!11814 = !DILocation(line: 2945, column: 3, scope: !11795)
!11815 = !DILocation(line: 2953, column: 3, scope: !11795)
!11816 = !DILocation(line: 2970, column: 3, scope: !11795)
!11817 = !DILocation(line: 2973, column: 15, scope: !11795)
!11818 = !DILocation(line: 2974, column: 3, scope: !11795)
!11819 = !DILocation(line: 2974, column: 9, scope: !11795)
!11820 = !DILocation(line: 2974, column: 37, scope: !11795)
!11821 = !DILocation(line: 2976, column: 9, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !11138, line: 2976, column: 8)
!11823 = distinct !DILexicalBlock(scope: !11795, file: !11138, line: 2975, column: 3)
!11824 = !DILocation(line: 2976, column: 23, scope: !11822)
!11825 = !DILocation(line: 2976, column: 37, scope: !11822)
!11826 = !DILocation(line: 2976, column: 8, scope: !11823)
!11827 = distinct !{!11827, !11818, !11828}
!11828 = !DILocation(line: 2981, column: 3, scope: !11795)
!11829 = !DILocation(line: 2984, column: 1, scope: !11795)
!11830 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11138, file: !11138, line: 2990, type: !11776, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11831)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "tickstart", scope: !11830, file: !11138, line: 2992, type: !110)
!11833 = !DILocation(line: 2995, column: 3, scope: !11830)
!11834 = !DILocation(line: 2998, column: 15, scope: !11830)
!11835 = !DILocation(line: 0, scope: !11830)
!11836 = !DILocation(line: 2999, column: 3, scope: !11830)
!11837 = !DILocation(line: 2999, column: 9, scope: !11830)
!11838 = !DILocation(line: 3001, column: 9, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !11138, line: 3001, column: 8)
!11840 = distinct !DILexicalBlock(scope: !11830, file: !11138, line: 3000, column: 3)
!11841 = !DILocation(line: 3001, column: 23, scope: !11839)
!11842 = !DILocation(line: 3001, column: 36, scope: !11839)
!11843 = !DILocation(line: 3001, column: 8, scope: !11840)
!11844 = distinct !{!11844, !11836, !11845}
!11845 = !DILocation(line: 3006, column: 3, scope: !11830)
!11846 = !DILocation(line: 3009, column: 1, scope: !11830)
!11847 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11138, file: !11138, line: 3051, type: !6569, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11848)
!11848 = !{!11849, !11850, !11851, !11852, !11853}
!11849 = !DILocalVariable(name: "pllm", scope: !11847, file: !11138, line: 3053, type: !110)
!11850 = !DILocalVariable(name: "pllvco", scope: !11847, file: !11138, line: 3054, type: !110)
!11851 = !DILocalVariable(name: "pllp", scope: !11847, file: !11138, line: 3055, type: !110)
!11852 = !DILocalVariable(name: "pllr", scope: !11847, file: !11138, line: 3056, type: !110)
!11853 = !DILocalVariable(name: "sysclockfreq", scope: !11847, file: !11138, line: 3057, type: !110)
!11854 = !DILocation(line: 0, scope: !11847)
!11855 = !DILocation(line: 3060, column: 16, scope: !11847)
!11856 = !DILocation(line: 3060, column: 3, scope: !11847)
!11857 = !DILocation(line: 3076, column: 19, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !11138, line: 3073, column: 5)
!11859 = distinct !DILexicalBlock(scope: !11847, file: !11138, line: 3061, column: 3)
!11860 = !DILocation(line: 3076, column: 27, scope: !11858)
!11861 = !DILocation(line: 3077, column: 10, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11858, file: !11138, line: 3077, column: 10)
!11863 = !DILocation(line: 0, scope: !11862)
!11864 = !DILocation(line: 3087, column: 23, scope: !11858)
!11865 = !DILocation(line: 3087, column: 82, scope: !11858)
!11866 = !DILocation(line: 3089, column: 28, scope: !11858)
!11867 = !DILocation(line: 3090, column: 7, scope: !11858)
!11868 = !DILocation(line: 3096, column: 19, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11859, file: !11138, line: 3093, column: 5)
!11870 = !DILocation(line: 3096, column: 27, scope: !11869)
!11871 = !DILocation(line: 3097, column: 10, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11869, file: !11138, line: 3097, column: 10)
!11873 = !DILocation(line: 0, scope: !11872)
!11874 = !DILocation(line: 3107, column: 21, scope: !11869)
!11875 = !DILocation(line: 3107, column: 49, scope: !11869)
!11876 = !DILocation(line: 3109, column: 28, scope: !11869)
!11877 = !DILocation(line: 3110, column: 7, scope: !11869)
!11878 = !DILocation(line: 0, scope: !11859)
!11879 = !DILocation(line: 3118, column: 3, scope: !11847)
!11880 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11138, file: !11138, line: 3143, type: !11776, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11881)
!11881 = !{!11882}
!11882 = !DILocalVariable(name: "tickstart", scope: !11880, file: !11138, line: 3145, type: !110)
!11883 = !DILocation(line: 3148, column: 15, scope: !11880)
!11884 = !DILocation(line: 0, scope: !11880)
!11885 = !DILocation(line: 3151, column: 3, scope: !11880)
!11886 = !DILocation(line: 3154, column: 3, scope: !11880)
!11887 = !DILocation(line: 3154, column: 10, scope: !11880)
!11888 = !DILocation(line: 3154, column: 43, scope: !11880)
!11889 = !DILocation(line: 3156, column: 10, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !11138, line: 3156, column: 9)
!11891 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3155, column: 3)
!11892 = !DILocation(line: 3156, column: 24, scope: !11890)
!11893 = !DILocation(line: 3156, column: 37, scope: !11890)
!11894 = !DILocation(line: 3156, column: 9, scope: !11891)
!11895 = distinct !{!11895, !11886, !11896}
!11896 = !DILocation(line: 3160, column: 3, scope: !11880)
!11897 = !DILocation(line: 3163, column: 3, scope: !11880)
!11898 = !DILocation(line: 3166, column: 15, scope: !11880)
!11899 = !DILocation(line: 3169, column: 3, scope: !11880)
!11900 = !DILocation(line: 3172, column: 3, scope: !11880)
!11901 = !DILocation(line: 3172, column: 10, scope: !11880)
!11902 = !DILocation(line: 3172, column: 44, scope: !11880)
!11903 = !DILocation(line: 3174, column: 24, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11905, file: !11138, line: 3174, column: 9)
!11905 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3173, column: 3)
!11906 = !DILocation(line: 3174, column: 37, scope: !11904)
!11907 = !DILocation(line: 3174, column: 9, scope: !11905)
!11908 = distinct !{!11908, !11900, !11909}
!11909 = !DILocation(line: 3178, column: 3, scope: !11880)
!11910 = !DILocation(line: 3184, column: 3, scope: !11880)
!11911 = !DILocation(line: 3187, column: 3, scope: !11880)
!11912 = !DILocation(line: 3187, column: 10, scope: !11880)
!11913 = !DILocation(line: 3187, column: 43, scope: !11880)
!11914 = !DILocation(line: 3189, column: 24, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !11138, line: 3189, column: 9)
!11916 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3188, column: 3)
!11917 = !DILocation(line: 3189, column: 37, scope: !11915)
!11918 = !DILocation(line: 3189, column: 9, scope: !11916)
!11919 = distinct !{!11919, !11911, !11920}
!11920 = !DILocation(line: 3193, column: 3, scope: !11880)
!11921 = !DILocation(line: 3199, column: 3, scope: !11880)
!11922 = !DILocation(line: 3202, column: 3, scope: !11880)
!11923 = !DILocation(line: 3202, column: 10, scope: !11880)
!11924 = !DILocation(line: 3202, column: 43, scope: !11880)
!11925 = !DILocation(line: 3204, column: 24, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !11138, line: 3204, column: 9)
!11927 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3203, column: 3)
!11928 = !DILocation(line: 3204, column: 37, scope: !11926)
!11929 = !DILocation(line: 3204, column: 9, scope: !11927)
!11930 = distinct !{!11930, !11922, !11931}
!11931 = !DILocation(line: 3208, column: 3, scope: !11880)
!11932 = !DILocation(line: 3215, column: 3, scope: !11880)
!11933 = !DILocation(line: 3218, column: 3, scope: !11880)
!11934 = !DILocation(line: 3218, column: 10, scope: !11880)
!11935 = !DILocation(line: 3218, column: 46, scope: !11880)
!11936 = !DILocation(line: 3220, column: 24, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !11138, line: 3220, column: 9)
!11938 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3219, column: 3)
!11939 = !DILocation(line: 3220, column: 37, scope: !11937)
!11940 = !DILocation(line: 3220, column: 9, scope: !11938)
!11941 = distinct !{!11941, !11933, !11942}
!11942 = !DILocation(line: 3224, column: 3, scope: !11880)
!11943 = !DILocation(line: 3232, column: 3, scope: !11880)
!11944 = !DILocation(line: 3235, column: 3, scope: !11880)
!11945 = !DILocation(line: 3235, column: 10, scope: !11880)
!11946 = !DILocation(line: 3235, column: 46, scope: !11880)
!11947 = !DILocation(line: 3237, column: 10, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !11138, line: 3237, column: 9)
!11949 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3236, column: 3)
!11950 = !DILocation(line: 3237, column: 24, scope: !11948)
!11951 = !DILocation(line: 3237, column: 37, scope: !11948)
!11952 = !DILocation(line: 3237, column: 9, scope: !11949)
!11953 = distinct !{!11953, !11944, !11954}
!11954 = !DILocation(line: 3241, column: 3, scope: !11880)
!11955 = !DILocation(line: 3247, column: 16, scope: !11880)
!11956 = !DILocation(line: 3257, column: 19, scope: !11880)
!11957 = !DILocation(line: 3270, column: 19, scope: !11880)
!11958 = !DILocation(line: 3274, column: 3, scope: !11880)
!11959 = !DILocation(line: 3277, column: 3, scope: !11880)
!11960 = !DILocation(line: 3281, column: 3, scope: !11880)
!11961 = !DILocation(line: 3285, column: 3, scope: !11880)
!11962 = !DILocation(line: 3288, column: 3, scope: !11880)
!11963 = !DILocation(line: 3292, column: 3, scope: !11880)
!11964 = !DILocation(line: 3296, column: 3, scope: !11880)
!11965 = !DILocation(line: 3299, column: 3, scope: !11880)
!11966 = !DILocation(line: 3302, column: 19, scope: !11880)
!11967 = !DILocation(line: 3305, column: 19, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11880, file: !11138, line: 3305, column: 6)
!11969 = !DILocation(line: 3305, column: 6, scope: !11968)
!11970 = !DILocation(line: 3305, column: 31, scope: !11968)
!11971 = !DILocation(line: 0, scope: !11968)
!11972 = !DILocation(line: 3313, column: 1, scope: !11880)
!11973 = !DISubprogram(name: "HAL_InitTick", scope: !11513, file: !11513, line: 223, type: !11974, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{!11141, !110}
!11976 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11138, file: !11138, line: 3333, type: !11977, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12001)
!11977 = !DISubroutineType(types: !11978)
!11978 = !{!11141, !11979}
!11979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11980, size: 32)
!11980 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11981, line: 70, baseType: !11982)
!11981 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11981, line: 49, size: 416, elements: !11983)
!11983 = !{!11984, !11985, !11986, !11987, !11988, !11989, !11990}
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11982, file: !11981, line: 51, baseType: !110, size: 32)
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11982, file: !11981, line: 54, baseType: !110, size: 32, offset: 32)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11982, file: !11981, line: 57, baseType: !110, size: 32, offset: 64)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11982, file: !11981, line: 60, baseType: !110, size: 32, offset: 96)
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11982, file: !11981, line: 63, baseType: !110, size: 32, offset: 128)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11982, file: !11981, line: 66, baseType: !110, size: 32, offset: 160)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11982, file: !11981, line: 69, baseType: !11991, size: 224, offset: 192)
!11991 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11144, line: 73, baseType: !11992)
!11992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11144, line: 45, size: 224, elements: !11993)
!11993 = !{!11994, !11995, !11996, !11997, !11998, !11999, !12000}
!11994 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11992, file: !11144, line: 47, baseType: !110, size: 32)
!11995 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11992, file: !11144, line: 50, baseType: !110, size: 32, offset: 32)
!11996 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11992, file: !11144, line: 53, baseType: !110, size: 32, offset: 64)
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11992, file: !11144, line: 56, baseType: !110, size: 32, offset: 96)
!11998 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11992, file: !11144, line: 60, baseType: !110, size: 32, offset: 128)
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11992, file: !11144, line: 63, baseType: !110, size: 32, offset: 160)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11992, file: !11144, line: 68, baseType: !110, size: 32, offset: 192)
!12001 = !{!12002, !12003, !12004, !12005, !12009}
!12002 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11976, file: !11138, line: 3333, type: !11979)
!12003 = !DILocalVariable(name: "tickstart", scope: !11976, file: !11138, line: 3335, type: !110)
!12004 = !DILocalVariable(name: "pll_config", scope: !11976, file: !11138, line: 3335, type: !110)
!12005 = !DILocalVariable(name: "pwrclkchanged", scope: !12006, file: !11138, line: 3517, type: !12008)
!12006 = distinct !DILexicalBlock(scope: !12007, file: !11138, line: 3516, column: 3)
!12007 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3515, column: 6)
!12008 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !843, line: 188, baseType: !2993)
!12009 = !DILocalVariable(name: "tmpreg", scope: !12010, file: !11138, line: 3526, type: !316)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !11138, line: 3526, column: 7)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !11138, line: 3525, column: 5)
!12012 = distinct !DILexicalBlock(scope: !12006, file: !11138, line: 3524, column: 8)
!12013 = !DILocation(line: 0, scope: !11976)
!12014 = !DILocation(line: 3338, column: 24, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3338, column: 6)
!12016 = !DILocation(line: 3338, column: 6, scope: !11976)
!12017 = !DILocation(line: 3346, column: 27, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3346, column: 6)
!12019 = !DILocation(line: 3346, column: 43, scope: !12018)
!12020 = !DILocation(line: 3346, column: 69, scope: !12018)
!12021 = !DILocation(line: 3346, column: 6, scope: !11976)
!12022 = !DILocation(line: 3352, column: 9, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12024, file: !11138, line: 3352, column: 8)
!12024 = distinct !DILexicalBlock(scope: !12018, file: !11138, line: 3347, column: 3)
!12025 = !DILocation(line: 3352, column: 39, scope: !12023)
!12026 = !DILocation(line: 3352, column: 128, scope: !12023)
!12027 = !DILocation(line: 3353, column: 9, scope: !12023)
!12028 = !DILocation(line: 3353, column: 39, scope: !12023)
!12029 = !DILocation(line: 3353, column: 60, scope: !12023)
!12030 = !DILocation(line: 3353, column: 70, scope: !12023)
!12031 = !DILocation(line: 3353, column: 78, scope: !12023)
!12032 = !DILocation(line: 3353, column: 100, scope: !12023)
!12033 = !DILocation(line: 3353, column: 128, scope: !12023)
!12034 = !DILocation(line: 3354, column: 9, scope: !12023)
!12035 = !DILocation(line: 3354, column: 39, scope: !12023)
!12036 = !DILocation(line: 3354, column: 61, scope: !12023)
!12037 = !DILocation(line: 3354, column: 71, scope: !12023)
!12038 = !DILocation(line: 3354, column: 79, scope: !12023)
!12039 = !DILocation(line: 3354, column: 101, scope: !12023)
!12040 = !DILocation(line: 3352, column: 8, scope: !12024)
!12041 = !DILocation(line: 3360, column: 11, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11138, line: 3360, column: 10)
!12043 = distinct !DILexicalBlock(scope: !12023, file: !11138, line: 3359, column: 5)
!12044 = !DILocation(line: 3360, column: 57, scope: !12042)
!12045 = !DILocation(line: 3360, column: 80, scope: !12042)
!12046 = !DILocation(line: 3360, column: 89, scope: !12042)
!12047 = !DILocation(line: 3360, column: 10, scope: !12043)
!12048 = !DILocation(line: 3368, column: 7, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !11138, line: 3368, column: 7)
!12050 = distinct !DILexicalBlock(scope: !12051, file: !11138, line: 3368, column: 7)
!12051 = distinct !DILexicalBlock(scope: !12023, file: !11138, line: 3366, column: 5)
!12052 = !DILocation(line: 3368, column: 7, scope: !12050)
!12053 = !DILocation(line: 3368, column: 7, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12049, file: !11138, line: 3368, column: 7)
!12055 = !DILocation(line: 3368, column: 7, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !11138, line: 3368, column: 7)
!12057 = distinct !DILexicalBlock(scope: !12049, file: !11138, line: 3368, column: 7)
!12058 = !DILocation(line: 3368, column: 7, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12057, file: !11138, line: 3368, column: 7)
!12060 = !DILocation(line: 0, scope: !12049)
!12061 = !DILocation(line: 3371, column: 30, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12051, file: !11138, line: 3371, column: 10)
!12063 = !DILocation(line: 3371, column: 40, scope: !12062)
!12064 = !DILocation(line: 0, scope: !12062)
!12065 = !DILocation(line: 3371, column: 10, scope: !12051)
!12066 = !DILocation(line: 3377, column: 15, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12062, file: !11138, line: 3372, column: 7)
!12068 = !DILocation(line: 3377, column: 51, scope: !12067)
!12069 = !DILocation(line: 3377, column: 9, scope: !12067)
!12070 = !DILocation(line: 3379, column: 15, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !11138, line: 3379, column: 14)
!12072 = distinct !DILexicalBlock(scope: !12067, file: !11138, line: 3378, column: 9)
!12073 = !DILocation(line: 3379, column: 29, scope: !12071)
!12074 = !DILocation(line: 3379, column: 43, scope: !12071)
!12075 = !DILocation(line: 3379, column: 14, scope: !12072)
!12076 = distinct !{!12076, !12069, !12077}
!12077 = !DILocation(line: 3383, column: 9, scope: !12067)
!12078 = !DILocation(line: 3391, column: 15, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12062, file: !11138, line: 3386, column: 7)
!12080 = !DILocation(line: 3391, column: 9, scope: !12079)
!12081 = !DILocation(line: 3393, column: 15, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12083, file: !11138, line: 3393, column: 14)
!12083 = distinct !DILexicalBlock(scope: !12079, file: !11138, line: 3392, column: 9)
!12084 = !DILocation(line: 3393, column: 29, scope: !12082)
!12085 = !DILocation(line: 3393, column: 43, scope: !12082)
!12086 = !DILocation(line: 3393, column: 14, scope: !12083)
!12087 = distinct !{!12087, !12080, !12088}
!12088 = !DILocation(line: 3397, column: 9, scope: !12079)
!12089 = !DILocation(line: 3402, column: 27, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3402, column: 6)
!12091 = !DILocation(line: 3402, column: 43, scope: !12090)
!12092 = !DILocation(line: 3402, column: 69, scope: !12090)
!12093 = !DILocation(line: 3402, column: 6, scope: !11976)
!12094 = !DILocation(line: 3410, column: 9, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !11138, line: 3410, column: 8)
!12096 = distinct !DILexicalBlock(scope: !12090, file: !11138, line: 3403, column: 3)
!12097 = !DILocation(line: 3410, column: 39, scope: !12095)
!12098 = !DILocation(line: 3410, column: 128, scope: !12095)
!12099 = !DILocation(line: 3411, column: 9, scope: !12095)
!12100 = !DILocation(line: 3411, column: 39, scope: !12095)
!12101 = !DILocation(line: 3411, column: 60, scope: !12095)
!12102 = !DILocation(line: 3411, column: 70, scope: !12095)
!12103 = !DILocation(line: 3411, column: 78, scope: !12095)
!12104 = !DILocation(line: 3411, column: 100, scope: !12095)
!12105 = !DILocation(line: 3411, column: 128, scope: !12095)
!12106 = !DILocation(line: 3412, column: 9, scope: !12095)
!12107 = !DILocation(line: 3412, column: 39, scope: !12095)
!12108 = !DILocation(line: 3412, column: 61, scope: !12095)
!12109 = !DILocation(line: 3412, column: 71, scope: !12095)
!12110 = !DILocation(line: 3412, column: 79, scope: !12095)
!12111 = !DILocation(line: 3412, column: 101, scope: !12095)
!12112 = !DILocation(line: 3410, column: 8, scope: !12096)
!12113 = !DILocation(line: 3419, column: 11, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12115, file: !11138, line: 3419, column: 10)
!12115 = distinct !DILexicalBlock(scope: !12095, file: !11138, line: 3417, column: 5)
!12116 = !DILocation(line: 3419, column: 57, scope: !12114)
!12117 = !DILocation(line: 3419, column: 80, scope: !12114)
!12118 = !DILocation(line: 3419, column: 89, scope: !12114)
!12119 = !DILocation(line: 3419, column: 10, scope: !12115)
!12120 = !DILocation(line: 3433, column: 30, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !11138, line: 3433, column: 10)
!12122 = distinct !DILexicalBlock(scope: !12095, file: !11138, line: 3431, column: 5)
!12123 = !DILocation(line: 3433, column: 39, scope: !12121)
!12124 = !DILocation(line: 3433, column: 10, scope: !12122)
!12125 = !DILocation(line: 3436, column: 9, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12121, file: !11138, line: 3434, column: 7)
!12127 = !DILocation(line: 3439, column: 21, scope: !12126)
!12128 = !DILocation(line: 3442, column: 9, scope: !12126)
!12129 = !DILocation(line: 3442, column: 15, scope: !12126)
!12130 = !DILocation(line: 3442, column: 51, scope: !12126)
!12131 = !DILocation(line: 3444, column: 15, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12133, file: !11138, line: 3444, column: 14)
!12133 = distinct !DILexicalBlock(scope: !12126, file: !11138, line: 3443, column: 9)
!12134 = !DILocation(line: 3444, column: 29, scope: !12132)
!12135 = !DILocation(line: 3444, column: 43, scope: !12132)
!12136 = !DILocation(line: 3444, column: 14, scope: !12133)
!12137 = distinct !{!12137, !12128, !12138}
!12138 = !DILocation(line: 3448, column: 9, scope: !12126)
!12139 = !DILocation(line: 3456, column: 9, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12121, file: !11138, line: 3454, column: 7)
!12141 = !DILocation(line: 3459, column: 21, scope: !12140)
!12142 = !DILocation(line: 3462, column: 9, scope: !12140)
!12143 = !DILocation(line: 3462, column: 15, scope: !12140)
!12144 = !DILocation(line: 3464, column: 15, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !11138, line: 3464, column: 14)
!12146 = distinct !DILexicalBlock(scope: !12140, file: !11138, line: 3463, column: 9)
!12147 = !DILocation(line: 3464, column: 29, scope: !12145)
!12148 = !DILocation(line: 3464, column: 43, scope: !12145)
!12149 = !DILocation(line: 3464, column: 14, scope: !12146)
!12150 = distinct !{!12150, !12142, !12151}
!12151 = !DILocation(line: 3468, column: 9, scope: !12140)
!12152 = !DILocation(line: 0, scope: !12095)
!12153 = !DILocation(line: 3473, column: 27, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3473, column: 6)
!12155 = !DILocation(line: 3473, column: 43, scope: !12154)
!12156 = !DILocation(line: 3473, column: 69, scope: !12154)
!12157 = !DILocation(line: 3473, column: 6, scope: !11976)
!12158 = !DILocation(line: 3479, column: 28, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !11138, line: 3479, column: 8)
!12160 = distinct !DILexicalBlock(scope: !12154, file: !11138, line: 3474, column: 3)
!12161 = !DILocation(line: 3479, column: 37, scope: !12159)
!12162 = !DILocation(line: 3479, column: 8, scope: !12160)
!12163 = !DILocation(line: 3482, column: 7, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12159, file: !11138, line: 3480, column: 5)
!12165 = !DILocation(line: 3485, column: 19, scope: !12164)
!12166 = !DILocation(line: 3488, column: 7, scope: !12164)
!12167 = !DILocation(line: 3488, column: 13, scope: !12164)
!12168 = !DILocation(line: 3488, column: 49, scope: !12164)
!12169 = !DILocation(line: 3490, column: 13, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !11138, line: 3490, column: 12)
!12171 = distinct !DILexicalBlock(scope: !12164, file: !11138, line: 3489, column: 7)
!12172 = !DILocation(line: 3490, column: 27, scope: !12170)
!12173 = !DILocation(line: 3490, column: 41, scope: !12170)
!12174 = !DILocation(line: 3490, column: 12, scope: !12171)
!12175 = distinct !{!12175, !12166, !12176}
!12176 = !DILocation(line: 3494, column: 7, scope: !12164)
!12177 = !DILocation(line: 3499, column: 7, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12159, file: !11138, line: 3497, column: 5)
!12179 = !DILocation(line: 3502, column: 19, scope: !12178)
!12180 = !DILocation(line: 3505, column: 7, scope: !12178)
!12181 = !DILocation(line: 3505, column: 13, scope: !12178)
!12182 = !DILocation(line: 3507, column: 13, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !11138, line: 3507, column: 12)
!12184 = distinct !DILexicalBlock(scope: !12178, file: !11138, line: 3506, column: 7)
!12185 = !DILocation(line: 3507, column: 27, scope: !12183)
!12186 = !DILocation(line: 3507, column: 41, scope: !12183)
!12187 = !DILocation(line: 3507, column: 12, scope: !12184)
!12188 = distinct !{!12188, !12180, !12189}
!12189 = !DILocation(line: 3511, column: 7, scope: !12178)
!12190 = !DILocation(line: 3515, column: 27, scope: !12007)
!12191 = !DILocation(line: 3515, column: 43, scope: !12007)
!12192 = !DILocation(line: 3515, column: 69, scope: !12007)
!12193 = !DILocation(line: 3515, column: 6, scope: !11976)
!12194 = !DILocation(line: 0, scope: !12006)
!12195 = !DILocation(line: 3524, column: 8, scope: !12012)
!12196 = !DILocation(line: 3524, column: 8, scope: !12006)
!12197 = !DILocation(line: 3526, column: 7, scope: !12010)
!12198 = !DILocation(line: 3526, column: 7, scope: !12011)
!12199 = !DILocation(line: 3528, column: 5, scope: !12011)
!12200 = !DILocation(line: 3530, column: 8, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12006, file: !11138, line: 3530, column: 8)
!12202 = !DILocation(line: 3530, column: 8, scope: !12006)
!12203 = !DILocation(line: 3533, column: 7, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12201, file: !11138, line: 3531, column: 5)
!12205 = !DILocation(line: 3536, column: 19, scope: !12204)
!12206 = !DILocation(line: 3538, column: 7, scope: !12204)
!12207 = !DILocation(line: 3538, column: 13, scope: !12204)
!12208 = !DILocation(line: 3540, column: 13, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !11138, line: 3540, column: 12)
!12210 = distinct !DILexicalBlock(scope: !12204, file: !11138, line: 3539, column: 7)
!12211 = !DILocation(line: 3540, column: 27, scope: !12209)
!12212 = !DILocation(line: 3540, column: 40, scope: !12209)
!12213 = !DILocation(line: 3540, column: 12, scope: !12210)
!12214 = distinct !{!12214, !12206, !12215}
!12215 = !DILocation(line: 3544, column: 7, scope: !12204)
!12216 = !DILocation(line: 3548, column: 5, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12218, file: !11138, line: 3548, column: 5)
!12218 = distinct !DILexicalBlock(scope: !12006, file: !11138, line: 3548, column: 5)
!12219 = !DILocation(line: 3548, column: 5, scope: !12218)
!12220 = !DILocation(line: 3548, column: 5, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12217, file: !11138, line: 3548, column: 5)
!12222 = !DILocation(line: 3548, column: 5, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !11138, line: 3548, column: 5)
!12224 = distinct !DILexicalBlock(scope: !12217, file: !11138, line: 3548, column: 5)
!12225 = !DILocation(line: 3548, column: 5, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12224, file: !11138, line: 3548, column: 5)
!12227 = !DILocation(line: 0, scope: !12217)
!12228 = !DILocation(line: 3550, column: 28, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12006, file: !11138, line: 3550, column: 8)
!12230 = !DILocation(line: 3550, column: 38, scope: !12229)
!12231 = !DILocation(line: 0, scope: !12229)
!12232 = !DILocation(line: 3550, column: 8, scope: !12006)
!12233 = !DILocation(line: 3556, column: 13, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12229, file: !11138, line: 3551, column: 5)
!12235 = !DILocation(line: 3556, column: 49, scope: !12234)
!12236 = !DILocation(line: 3556, column: 7, scope: !12234)
!12237 = !DILocation(line: 3558, column: 13, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12239, file: !11138, line: 3558, column: 12)
!12239 = distinct !DILexicalBlock(scope: !12234, file: !11138, line: 3557, column: 7)
!12240 = !DILocation(line: 3558, column: 27, scope: !12238)
!12241 = !DILocation(line: 3558, column: 41, scope: !12238)
!12242 = !DILocation(line: 3558, column: 12, scope: !12239)
!12243 = distinct !{!12243, !12236, !12244}
!12244 = !DILocation(line: 3562, column: 7, scope: !12234)
!12245 = !DILocation(line: 3570, column: 13, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12229, file: !11138, line: 3565, column: 5)
!12247 = !DILocation(line: 3570, column: 7, scope: !12246)
!12248 = !DILocation(line: 3572, column: 13, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !11138, line: 3572, column: 12)
!12250 = distinct !DILexicalBlock(scope: !12246, file: !11138, line: 3571, column: 7)
!12251 = !DILocation(line: 3572, column: 27, scope: !12249)
!12252 = !DILocation(line: 3572, column: 41, scope: !12249)
!12253 = !DILocation(line: 3572, column: 12, scope: !12250)
!12254 = distinct !{!12254, !12247, !12255}
!12255 = !DILocation(line: 3576, column: 7, scope: !12246)
!12256 = !DILocation(line: 3580, column: 8, scope: !12006)
!12257 = !DILocation(line: 3582, column: 7, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !11138, line: 3581, column: 5)
!12259 = distinct !DILexicalBlock(scope: !12006, file: !11138, line: 3580, column: 8)
!12260 = !DILocation(line: 3583, column: 5, scope: !12258)
!12261 = !DILocation(line: 3588, column: 31, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !11976, file: !11138, line: 3588, column: 7)
!12263 = !DILocation(line: 3588, column: 41, scope: !12262)
!12264 = !DILocation(line: 3588, column: 7, scope: !11976)
!12265 = !DILocation(line: 3591, column: 8, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !11138, line: 3591, column: 8)
!12267 = distinct !DILexicalBlock(scope: !12262, file: !11138, line: 3589, column: 3)
!12268 = !DILocation(line: 3591, column: 38, scope: !12266)
!12269 = !DILocation(line: 3591, column: 8, scope: !12267)
!12270 = !DILocation(line: 3593, column: 44, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !11138, line: 3593, column: 10)
!12272 = distinct !DILexicalBlock(scope: !12266, file: !11138, line: 3592, column: 5)
!12273 = !DILocation(line: 0, scope: !12271)
!12274 = !DILocation(line: 3593, column: 10, scope: !12272)
!12275 = !DILocation(line: 3610, column: 15, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !11138, line: 3594, column: 7)
!12277 = !DILocation(line: 3610, column: 9, scope: !12276)
!12278 = !DILocation(line: 3612, column: 15, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !11138, line: 3612, column: 14)
!12280 = distinct !DILexicalBlock(scope: !12276, file: !11138, line: 3611, column: 9)
!12281 = !DILocation(line: 3612, column: 29, scope: !12279)
!12282 = !DILocation(line: 3612, column: 43, scope: !12279)
!12283 = !DILocation(line: 3612, column: 14, scope: !12280)
!12284 = distinct !{!12284, !12277, !12285}
!12285 = !DILocation(line: 3616, column: 9, scope: !12276)
!12286 = !DILocation(line: 3619, column: 9, scope: !12276)
!12287 = !DILocation(line: 3626, column: 9, scope: !12276)
!12288 = !DILocation(line: 3629, column: 21, scope: !12276)
!12289 = !DILocation(line: 3632, column: 9, scope: !12276)
!12290 = !DILocation(line: 3632, column: 15, scope: !12276)
!12291 = !DILocation(line: 3632, column: 51, scope: !12276)
!12292 = !DILocation(line: 3634, column: 15, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !11138, line: 3634, column: 14)
!12294 = distinct !DILexicalBlock(scope: !12276, file: !11138, line: 3633, column: 9)
!12295 = !DILocation(line: 3634, column: 29, scope: !12293)
!12296 = !DILocation(line: 3634, column: 43, scope: !12293)
!12297 = !DILocation(line: 3634, column: 14, scope: !12294)
!12298 = distinct !{!12298, !12289, !12299}
!12299 = !DILocation(line: 3638, column: 9, scope: !12276)
!12300 = !DILocation(line: 3649, column: 15, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12271, file: !11138, line: 3641, column: 7)
!12302 = !DILocation(line: 3649, column: 9, scope: !12301)
!12303 = !DILocation(line: 3651, column: 15, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !11138, line: 3651, column: 14)
!12305 = distinct !DILexicalBlock(scope: !12301, file: !11138, line: 3650, column: 9)
!12306 = !DILocation(line: 3651, column: 29, scope: !12304)
!12307 = !DILocation(line: 3651, column: 43, scope: !12304)
!12308 = !DILocation(line: 3651, column: 14, scope: !12305)
!12309 = distinct !{!12309, !12302, !12310}
!12310 = !DILocation(line: 3655, column: 9, scope: !12301)
!12311 = !DILocation(line: 3661, column: 44, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !11138, line: 3661, column: 10)
!12313 = distinct !DILexicalBlock(scope: !12266, file: !11138, line: 3659, column: 5)
!12314 = !DILocation(line: 3661, column: 10, scope: !12313)
!12315 = !DILocation(line: 3668, column: 27, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12312, file: !11138, line: 3666, column: 7)
!12317 = !DILocation(line: 3671, column: 14, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12316, file: !11138, line: 3670, column: 13)
!12319 = !DILocation(line: 3671, column: 81, scope: !12318)
!12320 = !DILocation(line: 3671, column: 55, scope: !12318)
!12321 = !DILocation(line: 3671, column: 92, scope: !12318)
!12322 = !DILocation(line: 3672, column: 14, scope: !12318)
!12323 = !DILocation(line: 3672, column: 80, scope: !12318)
!12324 = !DILocation(line: 3672, column: 53, scope: !12318)
!12325 = !DILocation(line: 3672, column: 111, scope: !12318)
!12326 = !DILocation(line: 3673, column: 14, scope: !12318)
!12327 = !DILocation(line: 3673, column: 80, scope: !12318)
!12328 = !DILocation(line: 3673, column: 86, scope: !12318)
!12329 = !DILocation(line: 3673, column: 53, scope: !12318)
!12330 = !DILocation(line: 3673, column: 111, scope: !12318)
!12331 = !DILocation(line: 3674, column: 14, scope: !12318)
!12332 = !DILocation(line: 3674, column: 82, scope: !12318)
!12333 = !DILocation(line: 3674, column: 101, scope: !12318)
!12334 = !DILocation(line: 3674, column: 53, scope: !12318)
!12335 = !DILocation(line: 3674, column: 126, scope: !12318)
!12336 = !DILocation(line: 3675, column: 14, scope: !12318)
!12337 = !DILocation(line: 3675, column: 80, scope: !12318)
!12338 = !DILocation(line: 3675, column: 85, scope: !12318)
!12339 = !DILocation(line: 3675, column: 53, scope: !12318)
!12340 = !DILocation(line: 3675, column: 111, scope: !12318)
!12341 = !DILocation(line: 3676, column: 14, scope: !12318)
!12342 = !DILocation(line: 3676, column: 80, scope: !12318)
!12343 = !DILocation(line: 3676, column: 85, scope: !12318)
!12344 = !DILocation(line: 3676, column: 53, scope: !12318)
!12345 = !DILocation(line: 3670, column: 13, scope: !12316)
!12346 = !DILocation(line: 3691, column: 3, scope: !11976)
!12347 = !DILocation(line: 3692, column: 1, scope: !11976)
!12348 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11138, file: !11138, line: 3703, type: !12349, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12351)
!12349 = !DISubroutineType(types: !12350)
!12350 = !{null, !11979}
!12351 = !{!12352}
!12352 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12348, file: !11138, line: 3703, type: !11979)
!12353 = !DILocation(line: 0, scope: !12348)
!12354 = !DILocation(line: 3706, column: 22, scope: !12348)
!12355 = !DILocation(line: 3706, column: 37, scope: !12348)
!12356 = !DILocation(line: 3709, column: 12, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12348, file: !11138, line: 3709, column: 6)
!12358 = !DILocation(line: 3709, column: 15, scope: !12357)
!12359 = !DILocation(line: 3709, column: 31, scope: !12357)
!12360 = !DILocation(line: 3709, column: 6, scope: !12348)
!12361 = !DILocation(line: 3711, column: 24, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12357, file: !11138, line: 3710, column: 3)
!12363 = !DILocation(line: 3711, column: 33, scope: !12362)
!12364 = !DILocation(line: 3712, column: 3, scope: !12362)
!12365 = !DILocation(line: 3713, column: 17, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12357, file: !11138, line: 3713, column: 11)
!12367 = !DILocation(line: 3713, column: 20, scope: !12366)
!12368 = !DILocation(line: 3713, column: 35, scope: !12366)
!12369 = !DILocation(line: 0, scope: !12366)
!12370 = !DILocation(line: 3713, column: 11, scope: !12357)
!12371 = !DILocation(line: 3715, column: 33, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12366, file: !11138, line: 3714, column: 3)
!12373 = !DILocation(line: 3716, column: 3, scope: !12372)
!12374 = !DILocation(line: 3719, column: 33, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12366, file: !11138, line: 3718, column: 3)
!12376 = !DILocation(line: 3723, column: 12, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12348, file: !11138, line: 3723, column: 6)
!12378 = !DILocation(line: 3723, column: 15, scope: !12377)
!12379 = !DILocation(line: 3729, column: 24, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12377, file: !11138, line: 3728, column: 3)
!12381 = !DILocation(line: 3729, column: 33, scope: !12380)
!12382 = !DILocation(line: 3732, column: 61, scope: !12348)
!12383 = !DILocation(line: 3732, column: 81, scope: !12348)
!12384 = !DILocation(line: 3732, column: 22, scope: !12348)
!12385 = !DILocation(line: 3732, column: 42, scope: !12348)
!12386 = !DILocation(line: 3735, column: 12, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12348, file: !11138, line: 3735, column: 6)
!12388 = !DILocation(line: 3735, column: 17, scope: !12387)
!12389 = !DILocation(line: 3735, column: 35, scope: !12387)
!12390 = !DILocation(line: 3735, column: 6, scope: !12348)
!12391 = !DILocation(line: 3737, column: 24, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12387, file: !11138, line: 3736, column: 3)
!12393 = !DILocation(line: 3737, column: 33, scope: !12392)
!12394 = !DILocation(line: 3738, column: 3, scope: !12392)
!12395 = !DILocation(line: 3739, column: 17, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12387, file: !11138, line: 3739, column: 11)
!12397 = !DILocation(line: 3739, column: 22, scope: !12396)
!12398 = !DILocation(line: 3739, column: 39, scope: !12396)
!12399 = !DILocation(line: 0, scope: !12396)
!12400 = !DILocation(line: 3739, column: 11, scope: !12387)
!12401 = !DILocation(line: 3741, column: 33, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12396, file: !11138, line: 3740, column: 3)
!12403 = !DILocation(line: 3742, column: 3, scope: !12402)
!12404 = !DILocation(line: 3745, column: 33, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12396, file: !11138, line: 3744, column: 3)
!12406 = !DILocation(line: 3749, column: 12, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12348, file: !11138, line: 3749, column: 6)
!12408 = !DILocation(line: 3749, column: 16, scope: !12407)
!12409 = !DILocation(line: 3755, column: 24, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12407, file: !11138, line: 3754, column: 3)
!12411 = !DILocation(line: 3755, column: 33, scope: !12410)
!12412 = !DILocation(line: 3759, column: 12, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12348, file: !11138, line: 3759, column: 6)
!12414 = !DILocation(line: 3759, column: 15, scope: !12413)
!12415 = !DILocation(line: 3759, column: 30, scope: !12413)
!12416 = !DILocation(line: 3759, column: 6, scope: !12348)
!12417 = !DILocation(line: 3765, column: 28, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12413, file: !11138, line: 3764, column: 3)
!12419 = !DILocation(line: 3765, column: 37, scope: !12418)
!12420 = !DILocation(line: 3767, column: 54, scope: !12348)
!12421 = !DILocation(line: 3767, column: 62, scope: !12348)
!12422 = !DILocation(line: 3767, column: 26, scope: !12348)
!12423 = !DILocation(line: 3767, column: 36, scope: !12348)
!12424 = !DILocation(line: 3768, column: 49, scope: !12348)
!12425 = !DILocation(line: 3768, column: 57, scope: !12348)
!12426 = !DILocation(line: 3768, column: 26, scope: !12348)
!12427 = !DILocation(line: 3768, column: 31, scope: !12348)
!12428 = !DILocation(line: 3769, column: 50, scope: !12348)
!12429 = !DILocation(line: 3769, column: 78, scope: !12348)
!12430 = !DILocation(line: 3769, column: 26, scope: !12348)
!12431 = !DILocation(line: 3769, column: 31, scope: !12348)
!12432 = !DILocation(line: 3770, column: 52, scope: !12348)
!12433 = !DILocation(line: 3770, column: 102, scope: !12348)
!12434 = !DILocation(line: 3770, column: 109, scope: !12348)
!12435 = !DILocation(line: 3770, column: 26, scope: !12348)
!12436 = !DILocation(line: 3770, column: 31, scope: !12348)
!12437 = !DILocation(line: 3771, column: 50, scope: !12348)
!12438 = !DILocation(line: 3771, column: 78, scope: !12348)
!12439 = !DILocation(line: 3771, column: 26, scope: !12348)
!12440 = !DILocation(line: 3771, column: 31, scope: !12348)
!12441 = !DILocation(line: 3772, column: 50, scope: !12348)
!12442 = !DILocation(line: 3772, column: 78, scope: !12348)
!12443 = !DILocation(line: 3772, column: 26, scope: !12348)
!12444 = !DILocation(line: 3772, column: 31, scope: !12348)
!12445 = !DILocation(line: 3773, column: 1, scope: !12348)
!12446 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12447, file: !12447, line: 257, type: !6579, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12448)
!12447 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12448 = !{!12449}
!12449 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12446, file: !12447, line: 257, type: !110)
!12450 = !DILocation(line: 0, scope: !12446)
!12451 = !DILocation(line: 260, column: 3, scope: !12446)
!12452 = !DILocation(line: 261, column: 1, scope: !12446)
!12453 = distinct !DISubprogram(name: "LL_InitTick", scope: !12454, file: !12454, line: 260, type: !9497, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12455)
!12454 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12455 = !{!12456, !12457}
!12456 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12453, file: !12454, line: 260, type: !110)
!12457 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12453, file: !12454, line: 260, type: !110)
!12458 = !DILocation(line: 0, scope: !12453)
!12459 = !DILocation(line: 263, column: 46, scope: !12453)
!12460 = !DILocation(line: 263, column: 55, scope: !12453)
!12461 = !DILocation(line: 263, column: 18, scope: !12453)
!12462 = !DILocation(line: 264, column: 18, scope: !12453)
!12463 = !DILocation(line: 265, column: 18, scope: !12453)
!12464 = !DILocation(line: 267, column: 1, scope: !12453)
!12465 = distinct !DISubprogram(name: "LL_mDelay", scope: !12447, file: !12447, line: 273, type: !6579, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12466)
!12466 = !{!12467, !12468}
!12467 = !DILocalVariable(name: "Delay", arg: 1, scope: !12465, file: !12447, line: 273, type: !110)
!12468 = !DILocalVariable(name: "tmp", scope: !12465, file: !12447, line: 275, type: !316)
!12469 = !DILocation(line: 0, scope: !12465)
!12470 = !DILocation(line: 275, column: 3, scope: !12465)
!12471 = !DILocation(line: 275, column: 18, scope: !12465)
!12472 = !DILocation(line: 275, column: 33, scope: !12465)
!12473 = !DILocation(line: 277, column: 10, scope: !12465)
!12474 = !DILocation(line: 280, column: 12, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12465, file: !12447, line: 280, column: 6)
!12476 = !DILocation(line: 285, column: 3, scope: !12465)
!12477 = !DILocation(line: 287, column: 18, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !12447, line: 287, column: 8)
!12479 = distinct !DILexicalBlock(scope: !12465, file: !12447, line: 286, column: 3)
!12480 = !DILocation(line: 292, column: 1, scope: !12465)
!12481 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12447, file: !12447, line: 323, type: !6579, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12482)
!12482 = !{!12483}
!12483 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12481, file: !12447, line: 323, type: !110)
!12484 = !DILocation(line: 0, scope: !12481)
!12485 = !DILocation(line: 326, column: 19, scope: !12481)
!12486 = !DILocation(line: 327, column: 1, scope: !12481)
!12487 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12447, file: !12447, line: 338, type: !12488, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12491)
!12488 = !DISubroutineType(types: !12489)
!12489 = !{!12490, !110}
!12490 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !843, line: 201, baseType: !842)
!12491 = !{!12492, !12493, !12494, !12495, !12496}
!12492 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12487, file: !12447, line: 338, type: !110)
!12493 = !DILocalVariable(name: "timeout", scope: !12487, file: !12447, line: 340, type: !110)
!12494 = !DILocalVariable(name: "getlatency", scope: !12487, file: !12447, line: 341, type: !110)
!12495 = !DILocalVariable(name: "latency", scope: !12487, file: !12447, line: 342, type: !110)
!12496 = !DILocalVariable(name: "status", scope: !12487, file: !12447, line: 343, type: !12490)
!12497 = !DILocation(line: 0, scope: !12487)
!12498 = !DILocation(line: 347, column: 21, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12487, file: !12447, line: 347, column: 6)
!12500 = !DILocation(line: 347, column: 6, scope: !12487)
!12501 = !DILocation(line: 353, column: 8, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !12447, line: 353, column: 8)
!12503 = distinct !DILexicalBlock(scope: !12499, file: !12447, line: 352, column: 3)
!12504 = !DILocation(line: 353, column: 40, scope: !12502)
!12505 = !DILocation(line: 353, column: 8, scope: !12503)
!12506 = !DILocation(line: 356, column: 26, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !12447, line: 356, column: 10)
!12508 = distinct !DILexicalBlock(scope: !12502, file: !12447, line: 354, column: 5)
!12509 = !DILocation(line: 356, column: 55, scope: !12507)
!12510 = !DILocation(line: 362, column: 55, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12508, file: !12447, line: 362, column: 10)
!12512 = !DILocation(line: 368, column: 55, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12508, file: !12447, line: 368, column: 10)
!12514 = !DILocation(line: 374, column: 26, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12508, file: !12447, line: 374, column: 10)
!12516 = !DILocation(line: 374, column: 55, scope: !12515)
!12517 = !DILocation(line: 380, column: 28, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !12447, line: 380, column: 12)
!12519 = distinct !DILexicalBlock(scope: !12515, file: !12447, line: 379, column: 7)
!12520 = !DILocation(line: 380, column: 57, scope: !12518)
!12521 = !DILocation(line: 387, column: 8, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12503, file: !12447, line: 387, column: 8)
!12523 = !DILocation(line: 387, column: 40, scope: !12522)
!12524 = !DILocation(line: 387, column: 8, scope: !12503)
!12525 = !DILocation(line: 390, column: 26, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !12447, line: 390, column: 10)
!12527 = distinct !DILexicalBlock(scope: !12522, file: !12447, line: 388, column: 5)
!12528 = !DILocation(line: 390, column: 55, scope: !12526)
!12529 = !DILocation(line: 396, column: 26, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12527, file: !12447, line: 396, column: 10)
!12531 = !DILocation(line: 396, column: 55, scope: !12530)
!12532 = !DILocation(line: 402, column: 26, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12527, file: !12447, line: 402, column: 10)
!12534 = !DILocation(line: 402, column: 55, scope: !12533)
!12535 = !DILocation(line: 407, column: 26, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12527, file: !12447, line: 407, column: 10)
!12537 = !DILocation(line: 407, column: 55, scope: !12536)
!12538 = !DILocation(line: 413, column: 28, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !12447, line: 413, column: 12)
!12540 = distinct !DILexicalBlock(scope: !12536, file: !12447, line: 412, column: 7)
!12541 = !DILocation(line: 413, column: 57, scope: !12539)
!12542 = !DILocation(line: 0, scope: !12503)
!12543 = !DILocation(line: 420, column: 8, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12503, file: !12447, line: 420, column: 8)
!12545 = !DILocation(line: 420, column: 40, scope: !12544)
!12546 = !DILocation(line: 420, column: 8, scope: !12503)
!12547 = !DILocation(line: 423, column: 26, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12447, line: 423, column: 10)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !12447, line: 421, column: 5)
!12550 = !DILocation(line: 423, column: 55, scope: !12548)
!12551 = !DILocation(line: 429, column: 26, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12549, file: !12447, line: 429, column: 10)
!12553 = !DILocation(line: 429, column: 55, scope: !12552)
!12554 = !DILocation(line: 435, column: 28, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12556, file: !12447, line: 435, column: 12)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !12447, line: 434, column: 7)
!12557 = !DILocation(line: 435, column: 57, scope: !12555)
!12558 = !DILocation(line: 444, column: 5, scope: !12503)
!12559 = !DILocation(line: 448, column: 5, scope: !12503)
!12560 = !DILocation(line: 451, column: 18, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12503, file: !12447, line: 449, column: 5)
!12562 = !DILocation(line: 452, column: 12, scope: !12561)
!12563 = !DILocation(line: 453, column: 26, scope: !12503)
!12564 = !DILocation(line: 453, column: 38, scope: !12503)
!12565 = !DILocation(line: 453, column: 5, scope: !12561)
!12566 = distinct !{!12566, !12559, !12567}
!12567 = !DILocation(line: 453, column: 54, scope: !12503)
!12568 = !DILocation(line: 0, scope: !12499)
!12569 = !DILocation(line: 464, column: 3, scope: !12487)
!12570 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12571, file: !12571, line: 519, type: !6569, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12571 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12572 = !DILocation(line: 521, column: 21, scope: !12570)
!12573 = !DILocation(line: 521, column: 3, scope: !12570)
!12574 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6182, file: !6182, line: 1543, type: !6579, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12575)
!12575 = !{!12576}
!12576 = !DILocalVariable(name: "Latency", arg: 1, scope: !12574, file: !6182, line: 1543, type: !110)
!12577 = !DILocation(line: 0, scope: !12574)
!12578 = !DILocation(line: 1545, column: 3, scope: !12574)
!12579 = !DILocation(line: 1546, column: 1, scope: !12574)
!12580 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6182, file: !6182, line: 1569, type: !6569, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12581 = !DILocation(line: 1571, column: 21, scope: !12580)
!12582 = !DILocation(line: 1571, column: 3, scope: !12580)
!12583 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12447, file: !12447, line: 483, type: !12584, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12600)
!12584 = !DISubroutineType(types: !12585)
!12585 = !{!12490, !12586, !12593}
!12586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12587, size: 32)
!12587 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12454, line: 114, baseType: !12588)
!12588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12454, line: 94, size: 96, elements: !12589)
!12589 = !{!12590, !12591, !12592}
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12588, file: !12454, line: 96, baseType: !110, size: 32)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12588, file: !12454, line: 102, baseType: !110, size: 32, offset: 32)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12588, file: !12454, line: 109, baseType: !110, size: 32, offset: 64)
!12593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12594, size: 32)
!12594 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12454, line: 139, baseType: !12595)
!12595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12454, line: 119, size: 96, elements: !12596)
!12596 = !{!12597, !12598, !12599}
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12595, file: !12454, line: 121, baseType: !110, size: 32)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12595, file: !12454, line: 127, baseType: !110, size: 32, offset: 32)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12595, file: !12454, line: 133, baseType: !110, size: 32, offset: 64)
!12600 = !{!12601, !12602, !12603, !12604}
!12601 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12583, file: !12447, line: 483, type: !12586)
!12602 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12583, file: !12447, line: 484, type: !12593)
!12603 = !DILocalVariable(name: "status", scope: !12583, file: !12447, line: 486, type: !12490)
!12604 = !DILocalVariable(name: "pllfreq", scope: !12583, file: !12447, line: 487, type: !110)
!12605 = !DILocation(line: 0, scope: !12583)
!12606 = !DILocation(line: 490, column: 6, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12583, file: !12447, line: 490, column: 6)
!12608 = !DILocation(line: 490, column: 25, scope: !12607)
!12609 = !DILocation(line: 490, column: 6, scope: !12583)
!12610 = !DILocation(line: 493, column: 15, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12607, file: !12447, line: 491, column: 3)
!12612 = !DILocation(line: 496, column: 8, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12611, file: !12447, line: 496, column: 8)
!12614 = !DILocation(line: 496, column: 29, scope: !12613)
!12615 = !DILocation(line: 496, column: 8, scope: !12611)
!12616 = !DILocation(line: 498, column: 7, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12613, file: !12447, line: 497, column: 5)
!12618 = !DILocation(line: 499, column: 7, scope: !12617)
!12619 = !DILocation(line: 499, column: 14, scope: !12617)
!12620 = !DILocation(line: 499, column: 35, scope: !12617)
!12621 = distinct !{!12621, !12618, !12622}
!12622 = !DILocation(line: 502, column: 7, scope: !12617)
!12623 = !DILocation(line: 506, column: 76, scope: !12611)
!12624 = !DILocation(line: 506, column: 103, scope: !12611)
!12625 = !DILocation(line: 507, column: 54, scope: !12611)
!12626 = !DILocation(line: 506, column: 5, scope: !12611)
!12627 = !DILocation(line: 510, column: 14, scope: !12611)
!12628 = !DILocation(line: 511, column: 3, scope: !12611)
!12629 = !DILocation(line: 0, scope: !12607)
!12630 = !DILocation(line: 518, column: 3, scope: !12583)
!12631 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12447, file: !12447, line: 642, type: !12632, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12634)
!12632 = !DISubroutineType(types: !12633)
!12633 = !{!12490}
!12634 = !{!12635}
!12635 = !DILocalVariable(name: "status", scope: !12631, file: !12447, line: 644, type: !12490)
!12636 = !DILocation(line: 0, scope: !12631)
!12637 = !DILocation(line: 647, column: 6, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12631, file: !12447, line: 647, column: 6)
!12639 = !DILocation(line: 647, column: 27, scope: !12638)
!12640 = !DILocation(line: 655, column: 6, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12631, file: !12447, line: 655, column: 6)
!12642 = !DILocation(line: 655, column: 30, scope: !12641)
!12643 = !DILocation(line: 663, column: 6, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12631, file: !12447, line: 663, column: 6)
!12645 = !DILocation(line: 663, column: 30, scope: !12644)
!12646 = !DILocation(line: 663, column: 6, scope: !12631)
!12647 = !DILocation(line: 669, column: 3, scope: !12631)
!12648 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12447, file: !12447, line: 611, type: !12649, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12651)
!12649 = !DISubroutineType(types: !12650)
!12650 = !{!110, !110, !12586}
!12651 = !{!12652, !12653, !12654}
!12652 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12648, file: !12447, line: 611, type: !110)
!12653 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12648, file: !12447, line: 611, type: !12586)
!12654 = !DILocalVariable(name: "pllfreq", scope: !12648, file: !12447, line: 613, type: !110)
!12655 = !DILocation(line: 0, scope: !12648)
!12656 = !DILocation(line: 622, column: 56, scope: !12648)
!12657 = !DILocation(line: 622, column: 61, scope: !12648)
!12658 = !DILocation(line: 622, column: 32, scope: !12648)
!12659 = !DILocation(line: 626, column: 45, scope: !12648)
!12660 = !DILocation(line: 626, column: 50, scope: !12648)
!12661 = !DILocation(line: 626, column: 21, scope: !12648)
!12662 = !DILocation(line: 630, column: 47, scope: !12648)
!12663 = !DILocation(line: 630, column: 82, scope: !12648)
!12664 = !DILocation(line: 630, column: 21, scope: !12648)
!12665 = !DILocation(line: 633, column: 3, scope: !12648)
!12666 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8822, file: !8822, line: 3007, type: !6569, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12667 = !DILocation(line: 3009, column: 11, scope: !12666)
!12668 = !DILocation(line: 3009, column: 44, scope: !12666)
!12669 = !DILocation(line: 3009, column: 3, scope: !12666)
!12670 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8822, file: !8822, line: 2987, type: !3153, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12671 = !DILocation(line: 2989, column: 3, scope: !12670)
!12672 = !DILocation(line: 2990, column: 1, scope: !12670)
!12673 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8822, file: !8822, line: 4304, type: !8956, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12674)
!12674 = !{!12675, !12676, !12677, !12678}
!12675 = !DILocalVariable(name: "Source", arg: 1, scope: !12673, file: !8822, line: 4304, type: !110)
!12676 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12673, file: !8822, line: 4304, type: !110)
!12677 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12673, file: !8822, line: 4304, type: !110)
!12678 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12673, file: !8822, line: 4304, type: !110)
!12679 = !DILocation(line: 0, scope: !12673)
!12680 = !DILocation(line: 4306, column: 3, scope: !12673)
!12681 = !DILocation(line: 4308, column: 3, scope: !12673)
!12682 = !DILocation(line: 4310, column: 3, scope: !12673)
!12683 = !DILocation(line: 4312, column: 1, scope: !12673)
!12684 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12447, file: !12447, line: 681, type: !12685, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!12490, !110, !12593}
!12687 = !{!12688, !12689, !12690, !12691}
!12688 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12684, file: !12447, line: 681, type: !110)
!12689 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12684, file: !12447, line: 681, type: !12593)
!12690 = !DILocalVariable(name: "status", scope: !12684, file: !12447, line: 683, type: !12490)
!12691 = !DILocalVariable(name: "hclk_frequency", scope: !12684, file: !12447, line: 684, type: !110)
!12692 = !DILocation(line: 0, scope: !12684)
!12693 = !DILocation(line: 691, column: 20, scope: !12684)
!12694 = !DILocation(line: 694, column: 6, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12684, file: !12447, line: 694, column: 6)
!12696 = !DILocation(line: 694, column: 22, scope: !12695)
!12697 = !DILocation(line: 694, column: 6, scope: !12684)
!12698 = !DILocation(line: 697, column: 14, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12695, file: !12447, line: 695, column: 3)
!12700 = !DILocation(line: 701, column: 13, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12684, file: !12447, line: 701, column: 6)
!12702 = !DILocation(line: 701, column: 6, scope: !12684)
!12703 = !DILocation(line: 704, column: 5, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12701, file: !12447, line: 702, column: 3)
!12705 = !DILocation(line: 705, column: 5, scope: !12704)
!12706 = !DILocation(line: 705, column: 12, scope: !12704)
!12707 = !DILocation(line: 705, column: 33, scope: !12704)
!12708 = distinct !{!12708, !12705, !12709}
!12709 = !DILocation(line: 708, column: 5, scope: !12704)
!12710 = !DILocation(line: 711, column: 49, scope: !12704)
!12711 = !DILocation(line: 711, column: 5, scope: !12704)
!12712 = !DILocation(line: 712, column: 5, scope: !12704)
!12713 = !DILocation(line: 713, column: 5, scope: !12704)
!12714 = !DILocation(line: 713, column: 12, scope: !12704)
!12715 = !DILocation(line: 713, column: 37, scope: !12704)
!12716 = distinct !{!12716, !12713, !12717}
!12717 = !DILocation(line: 716, column: 5, scope: !12704)
!12718 = !DILocation(line: 719, column: 50, scope: !12704)
!12719 = !DILocation(line: 719, column: 5, scope: !12704)
!12720 = !DILocation(line: 720, column: 50, scope: !12704)
!12721 = !DILocation(line: 720, column: 5, scope: !12704)
!12722 = !DILocation(line: 721, column: 3, scope: !12704)
!12723 = !DILocation(line: 724, column: 6, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12684, file: !12447, line: 724, column: 6)
!12725 = !DILocation(line: 724, column: 22, scope: !12724)
!12726 = !DILocation(line: 724, column: 6, scope: !12684)
!12727 = !DILocation(line: 727, column: 14, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12724, file: !12447, line: 725, column: 3)
!12729 = !DILocation(line: 728, column: 3, scope: !12728)
!12730 = !DILocation(line: 731, column: 13, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12684, file: !12447, line: 731, column: 6)
!12732 = !DILocation(line: 731, column: 6, scope: !12684)
!12733 = !DILocation(line: 733, column: 5, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12731, file: !12447, line: 732, column: 3)
!12735 = !DILocation(line: 734, column: 3, scope: !12734)
!12736 = !DILocation(line: 736, column: 3, scope: !12684)
!12737 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8822, file: !8822, line: 4184, type: !3153, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12738 = !DILocation(line: 4186, column: 3, scope: !12737)
!12739 = !DILocation(line: 4187, column: 1, scope: !12737)
!12740 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8822, file: !8822, line: 4205, type: !6569, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12741 = !DILocation(line: 4207, column: 11, scope: !12740)
!12742 = !DILocation(line: 4207, column: 44, scope: !12740)
!12743 = !DILocation(line: 4207, column: 3, scope: !12740)
!12744 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8822, file: !8822, line: 3224, type: !6579, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12745)
!12745 = !{!12746}
!12746 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12744, file: !8822, line: 3224, type: !110)
!12747 = !DILocation(line: 0, scope: !12744)
!12748 = !DILocation(line: 3226, column: 3, scope: !12744)
!12749 = !DILocation(line: 3227, column: 1, scope: !12744)
!12750 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8822, file: !8822, line: 3188, type: !6579, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12751)
!12751 = !{!12752}
!12752 = !DILocalVariable(name: "Source", arg: 1, scope: !12750, file: !8822, line: 3188, type: !110)
!12753 = !DILocation(line: 0, scope: !12750)
!12754 = !DILocation(line: 3190, column: 3, scope: !12750)
!12755 = !DILocation(line: 3191, column: 1, scope: !12750)
!12756 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8822, file: !8822, line: 3204, type: !6569, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12757 = !DILocation(line: 3206, column: 21, scope: !12756)
!12758 = !DILocation(line: 3206, column: 3, scope: !12756)
!12759 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8822, file: !8822, line: 3240, type: !6579, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12760)
!12760 = !{!12761}
!12761 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12759, file: !8822, line: 3240, type: !110)
!12762 = !DILocation(line: 0, scope: !12759)
!12763 = !DILocation(line: 3242, column: 3, scope: !12759)
!12764 = !DILocation(line: 3243, column: 1, scope: !12759)
!12765 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8822, file: !8822, line: 3256, type: !6579, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12766)
!12766 = !{!12767}
!12767 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12765, file: !8822, line: 3256, type: !110)
!12768 = !DILocation(line: 0, scope: !12765)
!12769 = !DILocation(line: 3258, column: 3, scope: !12765)
!12770 = !DILocation(line: 3259, column: 1, scope: !12765)
!12771 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8822, file: !8822, line: 5969, type: !6569, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12772 = !DILocation(line: 5971, column: 11, scope: !12771)
!12773 = !DILocation(line: 5971, column: 47, scope: !12771)
!12774 = !DILocation(line: 5971, column: 3, scope: !12771)
!12775 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8822, file: !8822, line: 5153, type: !6569, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12776 = !DILocation(line: 5155, column: 11, scope: !12775)
!12777 = !DILocation(line: 5155, column: 47, scope: !12775)
!12778 = !DILocation(line: 5155, column: 3, scope: !12775)
!12779 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12447, file: !12447, line: 540, type: !12780, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !12782)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!12490, !110, !110, !12586, !12593}
!12782 = !{!12783, !12784, !12785, !12786, !12787, !12788}
!12783 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12779, file: !12447, line: 540, type: !110)
!12784 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12779, file: !12447, line: 540, type: !110)
!12785 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12779, file: !12447, line: 541, type: !12586)
!12786 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12779, file: !12447, line: 541, type: !12593)
!12787 = !DILocalVariable(name: "status", scope: !12779, file: !12447, line: 543, type: !12490)
!12788 = !DILocalVariable(name: "pllfreq", scope: !12779, file: !12447, line: 544, type: !110)
!12789 = !DILocation(line: 0, scope: !12779)
!12790 = !DILocation(line: 551, column: 6, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12779, file: !12447, line: 551, column: 6)
!12792 = !DILocation(line: 551, column: 25, scope: !12791)
!12793 = !DILocation(line: 551, column: 6, scope: !12779)
!12794 = !DILocation(line: 554, column: 15, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12791, file: !12447, line: 552, column: 3)
!12796 = !DILocation(line: 557, column: 8, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12795, file: !12447, line: 557, column: 8)
!12798 = !DILocation(line: 557, column: 29, scope: !12797)
!12799 = !DILocation(line: 557, column: 8, scope: !12795)
!12800 = !DILocation(line: 560, column: 20, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !12447, line: 560, column: 10)
!12802 = distinct !DILexicalBlock(scope: !12797, file: !12447, line: 558, column: 5)
!12803 = !DILocation(line: 560, column: 10, scope: !12802)
!12804 = !DILocation(line: 562, column: 9, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12801, file: !12447, line: 561, column: 7)
!12806 = !DILocation(line: 563, column: 7, scope: !12805)
!12807 = !DILocation(line: 566, column: 9, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12801, file: !12447, line: 565, column: 7)
!12809 = !DILocation(line: 570, column: 7, scope: !12802)
!12810 = !DILocation(line: 571, column: 7, scope: !12802)
!12811 = !DILocation(line: 571, column: 14, scope: !12802)
!12812 = !DILocation(line: 571, column: 35, scope: !12802)
!12813 = distinct !{!12813, !12810, !12814}
!12814 = !DILocation(line: 574, column: 7, scope: !12802)
!12815 = !DILocation(line: 578, column: 76, scope: !12795)
!12816 = !DILocation(line: 578, column: 103, scope: !12795)
!12817 = !DILocation(line: 579, column: 54, scope: !12795)
!12818 = !DILocation(line: 578, column: 5, scope: !12795)
!12819 = !DILocation(line: 582, column: 14, scope: !12795)
!12820 = !DILocation(line: 583, column: 3, scope: !12795)
!12821 = !DILocation(line: 0, scope: !12791)
!12822 = !DILocation(line: 590, column: 3, scope: !12779)
!12823 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8822, file: !8822, line: 2969, type: !6569, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12824 = !DILocation(line: 2971, column: 11, scope: !12823)
!12825 = !DILocation(line: 2971, column: 44, scope: !12823)
!12826 = !DILocation(line: 2971, column: 3, scope: !12823)
!12827 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8822, file: !8822, line: 2929, type: !3153, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12828 = !DILocation(line: 2931, column: 3, scope: !12827)
!12829 = !DILocation(line: 2932, column: 1, scope: !12827)
!12830 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8822, file: !8822, line: 2939, type: !3153, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12831 = !DILocation(line: 2941, column: 3, scope: !12830)
!12832 = !DILocation(line: 2942, column: 1, scope: !12830)
!12833 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8822, file: !8822, line: 2949, type: !3153, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2104)
!12834 = !DILocation(line: 2951, column: 3, scope: !12833)
!12835 = !DILocation(line: 2952, column: 1, scope: !12833)
!12836 = distinct !DISubprogram(name: "z_device_state_init", scope: !12837, file: !12837, line: 23, type: !3153, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12838)
!12837 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "dev", scope: !12836, file: !12837, line: 25, type: !12840)
!12840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12841, size: 32)
!12841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12842)
!12842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12843)
!12843 = !{!12844, !12845, !12846, !12847, !12853, !12854}
!12844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12842, file: !336, line: 380, baseType: !279, size: 32)
!12845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12842, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12842, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12842, file: !336, line: 386, baseType: !12848, size: 32, offset: 96)
!12848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12849, size: 32)
!12849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12850)
!12850 = !{!12851, !12852}
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12849, file: !336, line: 359, baseType: !180, size: 8)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12849, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12842, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12842, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12855 = !DILocation(line: 0, scope: !12836)
!12856 = !DILocation(line: 31, column: 1, scope: !12836)
!12857 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12837, file: !12837, line: 33, type: !12858, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12860)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!12840, !279}
!12860 = !{!12861, !12862}
!12861 = !DILocalVariable(name: "name", arg: 1, scope: !12857, file: !12837, line: 33, type: !279)
!12862 = !DILocalVariable(name: "dev", scope: !12857, file: !12837, line: 35, type: !12840)
!12863 = !DILocation(line: 0, scope: !12857)
!12864 = !DILocation(line: 40, column: 12, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12857, file: !12837, line: 40, column: 6)
!12866 = !DILocation(line: 40, column: 21, scope: !12865)
!12867 = !DILocation(line: 40, column: 25, scope: !12865)
!12868 = !DILocation(line: 40, column: 33, scope: !12865)
!12869 = !DILocation(line: 40, column: 6, scope: !12857)
!12870 = !DILocation(line: 55, column: 2, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12857, file: !12837, line: 55, column: 2)
!12872 = !DILocation(line: 50, column: 7, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !12837, line: 50, column: 7)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !12837, line: 49, column: 57)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !12837, line: 49, column: 2)
!12876 = distinct !DILexicalBlock(scope: !12857, file: !12837, line: 49, column: 2)
!12877 = !DILocation(line: 50, column: 30, scope: !12873)
!12878 = !DILocation(line: 50, column: 39, scope: !12873)
!12879 = !DILocation(line: 50, column: 44, scope: !12873)
!12880 = !DILocation(line: 50, column: 7, scope: !12874)
!12881 = !DILocation(line: 49, column: 53, scope: !12875)
!12882 = !DILocation(line: 49, column: 33, scope: !12875)
!12883 = !DILocation(line: 49, column: 2, scope: !12876)
!12884 = distinct !{!12884, !12883, !12885}
!12885 = !DILocation(line: 53, column: 2, scope: !12876)
!12886 = !DILocation(line: 56, column: 7, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12888, file: !12837, line: 56, column: 7)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12837, line: 55, column: 57)
!12889 = distinct !DILexicalBlock(scope: !12871, file: !12837, line: 55, column: 2)
!12890 = !DILocation(line: 56, column: 30, scope: !12887)
!12891 = !DILocation(line: 56, column: 52, scope: !12887)
!12892 = !DILocation(line: 56, column: 34, scope: !12887)
!12893 = !DILocation(line: 56, column: 58, scope: !12887)
!12894 = !DILocation(line: 56, column: 7, scope: !12888)
!12895 = !DILocation(line: 55, column: 53, scope: !12889)
!12896 = !DILocation(line: 55, column: 33, scope: !12889)
!12897 = distinct !{!12897, !12870, !12898}
!12898 = !DILocation(line: 59, column: 2, scope: !12871)
!12899 = !DILocation(line: 62, column: 1, scope: !12857)
!12900 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12837, file: !12837, line: 93, type: !12901, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12903)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{!347, !12840}
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "dev", arg: 1, scope: !12900, file: !12837, line: 93, type: !12840)
!12905 = !DILocation(line: 0, scope: !12900)
!12906 = !DILocation(line: 99, column: 10, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12900, file: !12837, line: 99, column: 6)
!12908 = !DILocation(line: 99, column: 6, scope: !12900)
!12909 = !DILocation(line: 103, column: 14, scope: !12900)
!12910 = !DILocation(line: 103, column: 21, scope: !12900)
!12911 = !DILocation(line: 103, column: 33, scope: !12900)
!12912 = !DILocation(line: 103, column: 49, scope: !12900)
!12913 = !DILocation(line: 103, column: 58, scope: !12900)
!12914 = !DILocation(line: 104, column: 1, scope: !12900)
!12915 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12837, file: !12837, line: 87, type: !12916, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12919)
!12916 = !DISubroutineType(types: !12917)
!12917 = !{!234, !12918}
!12918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12840, size: 32)
!12919 = !{!12920}
!12920 = !DILocalVariable(name: "devices", arg: 1, scope: !12915, file: !12837, line: 87, type: !12918)
!12921 = !DILocation(line: 0, scope: !12915)
!12922 = !DILocation(line: 89, column: 11, scope: !12915)
!12923 = !DILocation(line: 90, column: 2, scope: !12915)
!12924 = distinct !DISubprogram(name: "device_required_foreach", scope: !12837, file: !12837, line: 125, type: !12925, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12931)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{!109, !12840, !12927, !107}
!12927 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12928)
!12928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12929, size: 32)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!109, !12840, !107}
!12931 = !{!12932, !12933, !12934, !12935, !12936}
!12932 = !DILocalVariable(name: "dev", arg: 1, scope: !12924, file: !12837, line: 125, type: !12840)
!12933 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12924, file: !12837, line: 126, type: !12927)
!12934 = !DILocalVariable(name: "context", arg: 3, scope: !12924, file: !12837, line: 127, type: !107)
!12935 = !DILocalVariable(name: "handle_count", scope: !12924, file: !12837, line: 129, type: !234)
!12936 = !DILocalVariable(name: "handles", scope: !12924, file: !12837, line: 130, type: !350)
!12937 = !DILocation(line: 0, scope: !12924)
!12938 = !DILocation(line: 129, column: 2, scope: !12924)
!12939 = !DILocation(line: 129, column: 9, scope: !12924)
!12940 = !DILocation(line: 130, column: 35, scope: !12924)
!12941 = !DILocation(line: 132, column: 33, scope: !12924)
!12942 = !DILocation(line: 132, column: 9, scope: !12924)
!12943 = !DILocation(line: 133, column: 1, scope: !12924)
!12944 = !DILocation(line: 132, column: 2, scope: !12924)
!12945 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12946, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12948)
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!350, !12840, !2622}
!12948 = !{!12949, !12950, !12951, !12952}
!12949 = !DILocalVariable(name: "dev", arg: 1, scope: !12945, file: !336, line: 493, type: !12840)
!12950 = !DILocalVariable(name: "count", arg: 2, scope: !12945, file: !336, line: 493, type: !2622)
!12951 = !DILocalVariable(name: "rv", scope: !12945, file: !336, line: 495, type: !350)
!12952 = !DILocalVariable(name: "i", scope: !12953, file: !336, line: 498, type: !234)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !336, line: 497, column: 18)
!12954 = distinct !DILexicalBlock(scope: !12945, file: !336, line: 497, column: 6)
!12955 = !DILocation(line: 0, scope: !12945)
!12956 = !DILocation(line: 495, column: 35, scope: !12945)
!12957 = !DILocation(line: 497, column: 9, scope: !12954)
!12958 = !DILocation(line: 497, column: 6, scope: !12945)
!12959 = !DILocation(line: 0, scope: !12953)
!12960 = !DILocation(line: 500, column: 11, scope: !12953)
!12961 = !DILocation(line: 500, column: 40, scope: !12953)
!12962 = !DILocation(line: 502, column: 4, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12953, file: !336, line: 501, column: 40)
!12964 = distinct !{!12964, !12965, !12966}
!12965 = !DILocation(line: 500, column: 3, scope: !12953)
!12966 = !DILocation(line: 503, column: 3, scope: !12953)
!12967 = !DILocation(line: 504, column: 10, scope: !12953)
!12968 = !DILocation(line: 505, column: 2, scope: !12953)
!12969 = !DILocation(line: 507, column: 2, scope: !12945)
!12970 = distinct !DISubprogram(name: "device_visitor", scope: !12837, file: !12837, line: 106, type: !12971, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !12973)
!12971 = !DISubroutineType(types: !12972)
!12972 = !{!109, !350, !234, !12927, !107}
!12973 = !{!12974, !12975, !12976, !12977, !12978, !12980, !12983, !12984}
!12974 = !DILocalVariable(name: "handles", arg: 1, scope: !12970, file: !12837, line: 106, type: !350)
!12975 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12970, file: !12837, line: 107, type: !234)
!12976 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12970, file: !12837, line: 108, type: !12927)
!12977 = !DILocalVariable(name: "context", arg: 4, scope: !12970, file: !12837, line: 109, type: !107)
!12978 = !DILocalVariable(name: "i", scope: !12979, file: !12837, line: 112, type: !234)
!12979 = distinct !DILexicalBlock(scope: !12970, file: !12837, line: 112, column: 2)
!12980 = !DILocalVariable(name: "dh", scope: !12981, file: !12837, line: 113, type: !352)
!12981 = distinct !DILexicalBlock(scope: !12982, file: !12837, line: 112, column: 44)
!12982 = distinct !DILexicalBlock(scope: !12979, file: !12837, line: 112, column: 2)
!12983 = !DILocalVariable(name: "rdev", scope: !12981, file: !12837, line: 114, type: !12840)
!12984 = !DILocalVariable(name: "rc", scope: !12981, file: !12837, line: 115, type: !109)
!12985 = !DILocation(line: 0, scope: !12970)
!12986 = !DILocation(line: 0, scope: !12979)
!12987 = !DILocation(line: 112, column: 23, scope: !12982)
!12988 = !DILocation(line: 112, column: 2, scope: !12979)
!12989 = distinct !{!12989, !12988, !12990}
!12990 = !DILocation(line: 120, column: 2, scope: !12979)
!12991 = !DILocation(line: 113, column: 24, scope: !12981)
!12992 = !DILocation(line: 0, scope: !12981)
!12993 = !DILocation(line: 114, column: 31, scope: !12981)
!12994 = !DILocation(line: 115, column: 12, scope: !12981)
!12995 = !DILocation(line: 117, column: 10, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12981, file: !12837, line: 117, column: 7)
!12997 = !DILocation(line: 112, column: 39, scope: !12982)
!12998 = !DILocation(line: 123, column: 1, scope: !12970)
!12999 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !13000, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{!12840, !352}
!13002 = !{!13003, !13004, !13005}
!13003 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12999, file: !336, line: 439, type: !352)
!13004 = !DILocalVariable(name: "dev", scope: !12999, file: !336, line: 443, type: !12840)
!13005 = !DILocalVariable(name: "numdev", scope: !12999, file: !336, line: 444, type: !234)
!13006 = !DILocation(line: 0, scope: !12999)
!13007 = !DILocation(line: 446, column: 7, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12999, file: !336, line: 446, column: 6)
!13009 = !DILocation(line: 446, column: 18, scope: !13008)
!13010 = !DILocation(line: 446, column: 23, scope: !13008)
!13011 = !DILocation(line: 450, column: 2, scope: !12999)
!13012 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12837, file: !12837, line: 135, type: !12925, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13013)
!13013 = !{!13014, !13015, !13016, !13017, !13018}
!13014 = !DILocalVariable(name: "dev", arg: 1, scope: !13012, file: !12837, line: 135, type: !12840)
!13015 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13012, file: !12837, line: 136, type: !12927)
!13016 = !DILocalVariable(name: "context", arg: 3, scope: !13012, file: !12837, line: 137, type: !107)
!13017 = !DILocalVariable(name: "handle_count", scope: !13012, file: !12837, line: 139, type: !234)
!13018 = !DILocalVariable(name: "handles", scope: !13012, file: !12837, line: 140, type: !350)
!13019 = !DILocation(line: 0, scope: !13012)
!13020 = !DILocation(line: 139, column: 2, scope: !13012)
!13021 = !DILocation(line: 139, column: 9, scope: !13012)
!13022 = !DILocation(line: 140, column: 35, scope: !13012)
!13023 = !DILocation(line: 142, column: 33, scope: !13012)
!13024 = !DILocation(line: 142, column: 9, scope: !13012)
!13025 = !DILocation(line: 143, column: 1, scope: !13012)
!13026 = !DILocation(line: 142, column: 2, scope: !13012)
!13027 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12946, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13028)
!13028 = !{!13029, !13030, !13031, !13032, !13033}
!13029 = !DILocalVariable(name: "dev", arg: 1, scope: !13027, file: !336, line: 573, type: !12840)
!13030 = !DILocalVariable(name: "count", arg: 2, scope: !13027, file: !336, line: 573, type: !2622)
!13031 = !DILocalVariable(name: "rv", scope: !13027, file: !336, line: 575, type: !350)
!13032 = !DILocalVariable(name: "region", scope: !13027, file: !336, line: 576, type: !234)
!13033 = !DILocalVariable(name: "i", scope: !13027, file: !336, line: 577, type: !234)
!13034 = !DILocation(line: 0, scope: !13027)
!13035 = !DILocation(line: 575, column: 35, scope: !13027)
!13036 = !DILocation(line: 579, column: 9, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13027, file: !336, line: 579, column: 6)
!13038 = !DILocation(line: 579, column: 6, scope: !13027)
!13039 = !DILocation(line: 582, column: 8, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !336, line: 582, column: 8)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !336, line: 581, column: 23)
!13042 = distinct !DILexicalBlock(scope: !13037, file: !336, line: 579, column: 18)
!13043 = !DILocation(line: 582, column: 12, scope: !13040)
!13044 = !DILocation(line: 585, column: 6, scope: !13041)
!13045 = !DILocation(line: 0, scope: !13042)
!13046 = !DILocation(line: 581, column: 17, scope: !13042)
!13047 = !DILocation(line: 581, column: 3, scope: !13042)
!13048 = !DILocation(line: 588, column: 10, scope: !13042)
!13049 = !DILocation(line: 588, column: 16, scope: !13042)
!13050 = !DILocation(line: 589, column: 4, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13042, file: !336, line: 588, column: 39)
!13052 = !DILocation(line: 588, column: 3, scope: !13042)
!13053 = distinct !{!13053, !13052, !13054}
!13054 = !DILocation(line: 590, column: 3, scope: !13042)
!13055 = !DILocation(line: 591, column: 10, scope: !13042)
!13056 = !DILocation(line: 592, column: 2, scope: !13042)
!13057 = !DILocation(line: 575, column: 25, scope: !13027)
!13058 = !DILocation(line: 594, column: 2, scope: !13027)
!13059 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1895, file: !1895, line: 49, type: !13060, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1892, retainedNodes: !2104)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!281}
!13062 = !DILocation(line: 51, column: 10, scope: !13059)
!13063 = !DILocation(line: 51, column: 20, scope: !13059)
!13064 = !DILocation(line: 51, column: 2, scope: !13059)
!13065 = distinct !DISubprogram(name: "coredump", scope: !3120, file: !3120, line: 209, type: !13066, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13215)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{null, !32, !13068, !13112}
!13068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13069, size: 32)
!13069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13070)
!13070 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2752, line: 141, baseType: !13071)
!13071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2752, line: 97, size: 256, elements: !13072)
!13072 = !{!13073}
!13073 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13071, file: !2752, line: 107, baseType: !13074, size: 256)
!13074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2752, line: 98, size: 256, elements: !13075)
!13075 = !{!13076, !13081, !13086, !13091, !13096, !13101, !13106, !13111}
!13076 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 99, baseType: !13077, size: 32)
!13077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 99, size: 32, elements: !13078)
!13078 = !{!13079, !13080}
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13077, file: !2752, line: 99, baseType: !110, size: 32)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13077, file: !2752, line: 99, baseType: !110, size: 32)
!13081 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 100, baseType: !13082, size: 32, offset: 32)
!13082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 100, size: 32, elements: !13083)
!13083 = !{!13084, !13085}
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13082, file: !2752, line: 100, baseType: !110, size: 32)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13082, file: !2752, line: 100, baseType: !110, size: 32)
!13086 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 101, baseType: !13087, size: 32, offset: 64)
!13087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 101, size: 32, elements: !13088)
!13088 = !{!13089, !13090}
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13087, file: !2752, line: 101, baseType: !110, size: 32)
!13090 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13087, file: !2752, line: 101, baseType: !110, size: 32)
!13091 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 102, baseType: !13092, size: 32, offset: 96)
!13092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 102, size: 32, elements: !13093)
!13093 = !{!13094, !13095}
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13092, file: !2752, line: 102, baseType: !110, size: 32)
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13092, file: !2752, line: 102, baseType: !110, size: 32)
!13096 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 103, baseType: !13097, size: 32, offset: 128)
!13097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 103, size: 32, elements: !13098)
!13098 = !{!13099, !13100}
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13097, file: !2752, line: 103, baseType: !110, size: 32)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13097, file: !2752, line: 103, baseType: !110, size: 32)
!13101 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 104, baseType: !13102, size: 32, offset: 160)
!13102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 104, size: 32, elements: !13103)
!13103 = !{!13104, !13105}
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13102, file: !2752, line: 104, baseType: !110, size: 32)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13102, file: !2752, line: 104, baseType: !110, size: 32)
!13106 = !DIDerivedType(tag: DW_TAG_member, scope: !13074, file: !2752, line: 105, baseType: !13107, size: 32, offset: 192)
!13107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13074, file: !2752, line: 105, size: 32, elements: !13108)
!13108 = !{!13109, !13110}
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13107, file: !2752, line: 105, baseType: !110, size: 32)
!13110 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13107, file: !2752, line: 105, baseType: !110, size: 32)
!13111 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13074, file: !2752, line: 106, baseType: !110, size: 32, offset: 224)
!13112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13113, size: 32)
!13113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !13114)
!13114 = !{!13115, !13173, !13185, !13186, !13187, !13188, !13189, !13195, !13210}
!13115 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13113, file: !158, line: 247, baseType: !13116, size: 384)
!13116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !13117)
!13117 = !{!13118, !13142, !13149, !13150, !13151, !13160, !13161, !13162}
!13118 = !DIDerivedType(tag: DW_TAG_member, scope: !13116, file: !158, line: 60, baseType: !13119, size: 64)
!13119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13116, file: !158, line: 60, size: 64, elements: !13120)
!13120 = !{!13121, !13136}
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13119, file: !158, line: 61, baseType: !13122, size: 64)
!13122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !13123)
!13123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !13124)
!13124 = !{!13125, !13131}
!13125 = !DIDerivedType(tag: DW_TAG_member, scope: !13123, file: !127, line: 38, baseType: !13126, size: 32)
!13126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13123, file: !127, line: 38, size: 32, elements: !13127)
!13127 = !{!13128, !13130}
!13128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13126, file: !127, line: 39, baseType: !13129, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13123, size: 32)
!13130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13126, file: !127, line: 40, baseType: !13129, size: 32)
!13131 = !DIDerivedType(tag: DW_TAG_member, scope: !13123, file: !127, line: 42, baseType: !13132, size: 32, offset: 32)
!13132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13123, file: !127, line: 42, size: 32, elements: !13133)
!13133 = !{!13134, !13135}
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13132, file: !127, line: 43, baseType: !13129, size: 32)
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13132, file: !127, line: 44, baseType: !13129, size: 32)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13119, file: !158, line: 62, baseType: !13137, size: 64)
!13137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !13138)
!13138 = !{!13139}
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13137, file: !170, line: 50, baseType: !13140, size: 64)
!13140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13141, size: 64, elements: !175)
!13141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13137, size: 32)
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13116, file: !158, line: 68, baseType: !13143, size: 32, offset: 64)
!13143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13144, size: 32)
!13144 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !13145)
!13145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !13146)
!13146 = !{!13147}
!13147 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13145, file: !122, line: 232, baseType: !13148, size: 64)
!13148 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !13123)
!13149 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13116, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13116, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!13151 = !DIDerivedType(tag: DW_TAG_member, scope: !13116, file: !158, line: 90, baseType: !13152, size: 16, offset: 112)
!13152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13116, file: !158, line: 90, size: 16, elements: !13153)
!13153 = !{!13154, !13159}
!13154 = !DIDerivedType(tag: DW_TAG_member, scope: !13152, file: !158, line: 91, baseType: !13155, size: 16)
!13155 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13152, file: !158, line: 91, size: 16, elements: !13156)
!13156 = !{!13157, !13158}
!13157 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13155, file: !158, line: 96, baseType: !190, size: 8)
!13158 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13155, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!13159 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13152, file: !158, line: 100, baseType: !194, size: 16)
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13116, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13116, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13116, file: !158, line: 131, baseType: !13163, size: 192, offset: 192)
!13163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !13164)
!13164 = !{!13165, !13166, !13172}
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13163, file: !122, line: 245, baseType: !13122, size: 64)
!13166 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13163, file: !122, line: 246, baseType: !13167, size: 32, offset: 64)
!13167 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !13168)
!13168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13169, size: 32)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{null, !13171}
!13171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13163, size: 32)
!13172 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13163, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13113, file: !158, line: 250, baseType: !13174, size: 288, offset: 384)
!13174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !13175)
!13175 = !{!13176, !13177, !13178, !13179, !13180, !13181, !13182, !13183, !13184}
!13176 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13174, file: !211, line: 26, baseType: !110, size: 32)
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13174, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!13178 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13174, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13174, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13174, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!13181 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13174, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!13182 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13174, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13174, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!13184 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13174, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!13185 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13113, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13113, file: !158, line: 256, baseType: !13144, size: 64, offset: 704)
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13113, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13113, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13113, file: !158, line: 300, baseType: !13190, size: 96, offset: 1056)
!13190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !13191)
!13191 = !{!13192, !13193, !13194}
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13190, file: !158, line: 153, baseType: !22, size: 32)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13190, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13190, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13113, file: !158, line: 325, baseType: !13196, size: 32, offset: 1152)
!13196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13197, size: 32)
!13197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !13198)
!13198 = !{!13199, !13205, !13206}
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13197, file: !118, line: 5074, baseType: !13200, size: 96)
!13200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !13201)
!13201 = !{!13202, !13203, !13204}
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13200, file: !243, line: 57, baseType: !246, size: 32)
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13200, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13200, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!13205 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13197, file: !118, line: 5075, baseType: !13144, size: 64, offset: 96)
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13197, file: !118, line: 5076, baseType: !13207, size: 32, offset: 160)
!13207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !13208)
!13208 = !{!13209}
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13207, file: !253, line: 52, baseType: !22, size: 32)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13113, file: !158, line: 343, baseType: !13211, size: 64, offset: 1184)
!13211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !13212)
!13212 = !{!13213, !13214}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13211, file: !211, line: 63, baseType: !110, size: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13211, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!13215 = !{!13216, !13217, !13218}
!13216 = !DILocalVariable(name: "reason", arg: 1, scope: !13065, file: !3120, line: 209, type: !32)
!13217 = !DILocalVariable(name: "esf", arg: 2, scope: !13065, file: !3120, line: 209, type: !13068)
!13218 = !DILocalVariable(name: "thread", arg: 3, scope: !13065, file: !3120, line: 210, type: !13112)
!13219 = !DILocation(line: 0, scope: !13065)
!13220 = !DILocation(line: 212, column: 1, scope: !13065)
!13221 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3120, file: !3120, line: 214, type: !13222, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13224)
!13222 = !DISubroutineType(types: !13223)
!13223 = !{null, !22, !22}
!13224 = !{!13225, !13226}
!13225 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13221, file: !3120, line: 214, type: !22)
!13226 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13221, file: !3120, line: 214, type: !22)
!13227 = !DILocation(line: 0, scope: !13221)
!13228 = !DILocation(line: 216, column: 1, scope: !13221)
!13229 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3120, file: !3120, line: 218, type: !13230, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13232)
!13230 = !DISubroutineType(types: !13231)
!13231 = !{null, !286, !234}
!13232 = !{!13233, !13234}
!13233 = !DILocalVariable(name: "buf", arg: 1, scope: !13229, file: !3120, line: 218, type: !286)
!13234 = !DILocalVariable(name: "buflen", arg: 2, scope: !13229, file: !3120, line: 218, type: !234)
!13235 = !DILocation(line: 0, scope: !13229)
!13236 = !DILocation(line: 220, column: 1, scope: !13229)
!13237 = distinct !DISubprogram(name: "coredump_query", scope: !3120, file: !3120, line: 222, type: !13238, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13240)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!109, !3119, !107}
!13240 = !{!13241, !13242}
!13241 = !DILocalVariable(name: "query_id", arg: 1, scope: !13237, file: !3120, line: 222, type: !3119)
!13242 = !DILocalVariable(name: "arg", arg: 2, scope: !13237, file: !3120, line: 222, type: !107)
!13243 = !DILocation(line: 0, scope: !13237)
!13244 = !DILocation(line: 224, column: 2, scope: !13237)
!13245 = distinct !DISubprogram(name: "coredump_cmd", scope: !3120, file: !3120, line: 227, type: !13246, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!109, !3126, !107}
!13248 = !{!13249, !13250}
!13249 = !DILocalVariable(name: "query_id", arg: 1, scope: !13245, file: !3120, line: 227, type: !3126)
!13250 = !DILocalVariable(name: "arg", arg: 2, scope: !13245, file: !3120, line: 227, type: !107)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 229, column: 2, scope: !13245)
!13253 = distinct !DISubprogram(name: "arch_system_halt", scope: !13254, file: !13254, line: 23, type: !6172, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13255)
!13254 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13255 = !{!13256}
!13256 = !DILocalVariable(name: "reason", arg: 1, scope: !13253, file: !13254, line: 23, type: !32)
!13257 = !DILocation(line: 0, scope: !13253)
!13258 = !DILocation(line: 55, column: 2, scope: !13259, inlinedAt: !13263)
!13259 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13260)
!13260 = !{!13261, !13262}
!13261 = !DILocalVariable(name: "key", scope: !13259, file: !6161, line: 44, type: !32)
!13262 = !DILocalVariable(name: "tmp", scope: !13259, file: !6161, line: 53, type: !32)
!13263 = distinct !DILocation(line: 31, column: 8, scope: !13253)
!13264 = !{i64 2283780}
!13265 = !DILocation(line: 0, scope: !13259, inlinedAt: !13263)
!13266 = !DILocation(line: 32, column: 2, scope: !13253)
!13267 = !DILocation(line: 32, column: 2, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !13254, line: 32, column: 2)
!13269 = distinct !DILexicalBlock(scope: !13253, file: !13254, line: 32, column: 2)
!13270 = distinct !{!13270, !13271, !13272}
!13271 = !DILocation(line: 32, column: 2, scope: !13269)
!13272 = !DILocation(line: 34, column: 2, scope: !13269)
!13273 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13254, file: !13254, line: 39, type: !13274, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{null, !32, !13068}
!13276 = !{!13277, !13278}
!13277 = !DILocalVariable(name: "reason", arg: 1, scope: !13273, file: !13254, line: 39, type: !32)
!13278 = !DILocalVariable(name: "esf", arg: 2, scope: !13273, file: !13254, line: 40, type: !13068)
!13279 = !DILocation(line: 0, scope: !13273)
!13280 = !DILocation(line: 45, column: 2, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !13254, line: 45, column: 2)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !13254, line: 45, column: 2)
!13283 = distinct !DILexicalBlock(scope: !13284, file: !13254, line: 45, column: 2)
!13284 = distinct !DILexicalBlock(scope: !13273, file: !13254, line: 45, column: 2)
!13285 = !DILocation(line: 46, column: 2, scope: !13273)
!13286 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13254, file: !13254, line: 81, type: !6172, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13287)
!13287 = !{!13288}
!13288 = !DILocalVariable(name: "reason", arg: 1, scope: !13286, file: !13254, line: 81, type: !32)
!13289 = !DILocation(line: 0, scope: !13286)
!13290 = !DILocation(line: 83, column: 2, scope: !13286)
!13291 = distinct !DISubprogram(name: "z_fatal_error", scope: !13254, file: !13254, line: 96, type: !13274, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13292)
!13292 = !{!13293, !13294, !13295, !13296}
!13293 = !DILocalVariable(name: "reason", arg: 1, scope: !13291, file: !13254, line: 96, type: !32)
!13294 = !DILocalVariable(name: "esf", arg: 2, scope: !13291, file: !13254, line: 96, type: !13068)
!13295 = !DILocalVariable(name: "key", scope: !13291, file: !13254, line: 102, type: !32)
!13296 = !DILocalVariable(name: "thread", scope: !13291, file: !13254, line: 103, type: !13112)
!13297 = !DILocation(line: 0, scope: !13291)
!13298 = !DILocation(line: 55, column: 2, scope: !13259, inlinedAt: !13299)
!13299 = distinct !DILocation(line: 102, column: 21, scope: !13291)
!13300 = !DILocation(line: 0, scope: !13259, inlinedAt: !13299)
!13301 = !DILocation(line: 104, column: 4, scope: !13291)
!13302 = !DILocation(line: 109, column: 2, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !13254, line: 109, column: 2)
!13304 = distinct !DILexicalBlock(scope: !13305, file: !13254, line: 109, column: 2)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !13254, line: 109, column: 2)
!13306 = distinct !DILexicalBlock(scope: !13291, file: !13254, line: 109, column: 2)
!13307 = !DILocation(line: 119, column: 11, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13291, file: !13254, line: 119, column: 6)
!13309 = !DILocation(line: 119, column: 20, scope: !13308)
!13310 = !DILocalVariable(name: "esf", arg: 1, scope: !13311, file: !7534, line: 71, type: !13068)
!13311 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7534, file: !7534, line: 71, type: !13312, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13314)
!13312 = !DISubroutineType(types: !13313)
!13313 = !{!347, !13068}
!13314 = !{!13310}
!13315 = !DILocation(line: 0, scope: !13311, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 119, column: 23, scope: !13308)
!13317 = !DILocation(line: 73, column: 21, scope: !13311, inlinedAt: !13316)
!13318 = !DILocation(line: 73, column: 26, scope: !13311, inlinedAt: !13316)
!13319 = !DILocation(line: 73, column: 9, scope: !13311, inlinedAt: !13316)
!13320 = !DILocation(line: 119, column: 6, scope: !13291)
!13321 = !DILocation(line: 120, column: 3, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !13254, line: 120, column: 3)
!13323 = distinct !DILexicalBlock(scope: !13324, file: !13254, line: 120, column: 3)
!13324 = distinct !DILexicalBlock(scope: !13325, file: !13254, line: 120, column: 3)
!13325 = distinct !DILexicalBlock(scope: !13326, file: !13254, line: 120, column: 3)
!13326 = distinct !DILexicalBlock(scope: !13308, file: !13254, line: 119, column: 57)
!13327 = !DILocation(line: 121, column: 2, scope: !13326)
!13328 = !DILocation(line: 124, column: 2, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !13254, line: 124, column: 2)
!13330 = distinct !DILexicalBlock(scope: !13331, file: !13254, line: 124, column: 2)
!13331 = distinct !DILexicalBlock(scope: !13332, file: !13254, line: 124, column: 2)
!13332 = distinct !DILexicalBlock(scope: !13291, file: !13254, line: 124, column: 2)
!13333 = !DILocation(line: 131, column: 2, scope: !13291)
!13334 = !DILocation(line: 0, scope: !13311, inlinedAt: !13335)
!13335 = distinct !DILocation(line: 163, column: 24, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !13254, line: 163, column: 7)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !13254, line: 160, column: 9)
!13338 = distinct !DILexicalBlock(scope: !13291, file: !13254, line: 146, column: 6)
!13339 = !DILocation(line: 73, column: 21, scope: !13311, inlinedAt: !13335)
!13340 = !DILocation(line: 73, column: 26, scope: !13311, inlinedAt: !13335)
!13341 = !DILocation(line: 73, column: 9, scope: !13311, inlinedAt: !13335)
!13342 = !DILocation(line: 163, column: 7, scope: !13337)
!13343 = !DILocalVariable(name: "key", arg: 1, scope: !13344, file: !6161, line: 84, type: !32)
!13344 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13345)
!13345 = !{!13343}
!13346 = !DILocation(line: 0, scope: !13344, inlinedAt: !13347)
!13347 = distinct !DILocation(line: 171, column: 4, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13336, file: !13254, line: 163, column: 58)
!13349 = !DILocation(line: 95, column: 2, scope: !13344, inlinedAt: !13347)
!13350 = !{i64 2284597}
!13351 = !DILocation(line: 172, column: 4, scope: !13348)
!13352 = !DILocation(line: 163, column: 21, scope: !13336)
!13353 = !DILocation(line: 178, column: 15, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13254, line: 178, column: 8)
!13355 = distinct !DILexicalBlock(scope: !13336, file: !13254, line: 174, column: 10)
!13356 = !DILocation(line: 0, scope: !13344, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 179, column: 5, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13354, file: !13254, line: 178, column: 38)
!13359 = !DILocation(line: 0, scope: !13344, inlinedAt: !13360)
!13360 = distinct !DILocation(line: 186, column: 2, scope: !13291)
!13361 = !DILocation(line: 178, column: 8, scope: !13355)
!13362 = !DILocation(line: 189, column: 3, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !13254, line: 188, column: 41)
!13364 = distinct !DILexicalBlock(scope: !13291, file: !13254, line: 188, column: 6)
!13365 = !DILocation(line: 191, column: 1, scope: !13291)
!13366 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !13367, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !2104)
!13367 = !DISubroutineType(types: !13368)
!13368 = !{!13369}
!13369 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !13112)
!13370 = !DILocation(line: 535, column: 9, scope: !13366)
!13371 = !DILocation(line: 535, column: 2, scope: !13366)
!13372 = distinct !DISubprogram(name: "reason_to_str", scope: !13254, file: !13254, line: 62, type: !13373, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13375)
!13373 = !DISubroutineType(types: !13374)
!13374 = !{!279, !32}
!13375 = !{!13376}
!13376 = !DILocalVariable(name: "reason", arg: 1, scope: !13372, file: !13254, line: 62, type: !32)
!13377 = !DILocation(line: 0, scope: !13372)
!13378 = !DILocation(line: 64, column: 2, scope: !13372)
!13379 = !DILocation(line: 0, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13372, file: !13254, line: 64, column: 18)
!13381 = !DILocation(line: 78, column: 1, scope: !13372)
!13382 = distinct !DISubprogram(name: "thread_name_get", scope: !13254, file: !13254, line: 51, type: !13383, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13385)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{!279, !13112}
!13385 = !{!13386, !13387}
!13386 = !DILocalVariable(name: "thread", arg: 1, scope: !13382, file: !13254, line: 51, type: !13112)
!13387 = !DILocalVariable(name: "thread_name", scope: !13382, file: !13254, line: 53, type: !279)
!13388 = !DILocation(line: 0, scope: !13382)
!13389 = !DILocation(line: 53, column: 36, scope: !13382)
!13390 = !DILocation(line: 53, column: 28, scope: !13382)
!13391 = !DILocation(line: 53, column: 47, scope: !13382)
!13392 = !DILocation(line: 55, column: 19, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13382, file: !13254, line: 55, column: 6)
!13394 = !DILocation(line: 55, column: 28, scope: !13393)
!13395 = !DILocation(line: 55, column: 32, scope: !13393)
!13396 = !DILocation(line: 55, column: 47, scope: !13393)
!13397 = !DILocation(line: 55, column: 6, scope: !13382)
!13398 = !DILocation(line: 57, column: 2, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13393, file: !13254, line: 55, column: 57)
!13400 = !DILocation(line: 59, column: 2, scope: !13382)
!13401 = distinct !DISubprogram(name: "k_thread_abort", scope: !3299, file: !3299, line: 188, type: !13402, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !13404)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{null, !13369}
!13404 = !{!13405}
!13405 = !DILocalVariable(name: "thread", arg: 1, scope: !13401, file: !3299, line: 188, type: !13369)
!13406 = !DILocation(line: 0, scope: !13401)
!13407 = !DILocation(line: 197, column: 2, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13401, file: !3299, line: 197, column: 2)
!13409 = !{i64 2155069944}
!13410 = !DILocation(line: 198, column: 2, scope: !13401)
!13411 = !DILocation(line: 199, column: 1, scope: !13401)
!13412 = distinct !DISubprogram(name: "z_current_get", scope: !3299, file: !3299, line: 173, type: !13367, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !2104)
!13413 = !DILocation(line: 180, column: 2, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13412, file: !3299, line: 180, column: 2)
!13415 = !{i64 2155069876}
!13416 = !DILocation(line: 181, column: 9, scope: !13412)
!13417 = !DILocation(line: 181, column: 2, scope: !13412)
!13418 = distinct !DISubprogram(name: "z_early_memset", scope: !1903, file: !1903, line: 108, type: !13419, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13421)
!13419 = !DISubroutineType(types: !13420)
!13420 = !{null, !107, !109, !234}
!13421 = !{!13422, !13423, !13424}
!13422 = !DILocalVariable(name: "dst", arg: 1, scope: !13418, file: !1903, line: 108, type: !107)
!13423 = !DILocalVariable(name: "c", arg: 2, scope: !13418, file: !1903, line: 108, type: !109)
!13424 = !DILocalVariable(name: "n", arg: 3, scope: !13418, file: !1903, line: 108, type: !234)
!13425 = !DILocation(line: 0, scope: !13418)
!13426 = !DILocation(line: 110, column: 9, scope: !13418)
!13427 = !DILocation(line: 111, column: 1, scope: !13418)
!13428 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1903, file: !1903, line: 121, type: !13429, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{null, !107, !13, !234}
!13431 = !{!13432, !13433, !13434}
!13432 = !DILocalVariable(name: "dst", arg: 1, scope: !13428, file: !1903, line: 121, type: !107)
!13433 = !DILocalVariable(name: "src", arg: 2, scope: !13428, file: !1903, line: 121, type: !13)
!13434 = !DILocalVariable(name: "n", arg: 3, scope: !13428, file: !1903, line: 121, type: !234)
!13435 = !DILocation(line: 0, scope: !13428)
!13436 = !DILocation(line: 123, column: 9, scope: !13428)
!13437 = !DILocation(line: 124, column: 1, scope: !13428)
!13438 = distinct !DISubprogram(name: "z_bss_zero", scope: !1903, file: !1903, line: 132, type: !3153, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !2104)
!13439 = !DILocation(line: 143, column: 2, scope: !13438)
!13440 = !DILocation(line: 168, column: 1, scope: !13438)
!13441 = distinct !DISubprogram(name: "z_init_cpu", scope: !1903, file: !1903, line: 372, type: !8422, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13442)
!13442 = !{!13443}
!13443 = !DILocalVariable(name: "id", arg: 1, scope: !13441, file: !1903, line: 372, type: !109)
!13444 = !DILocation(line: 0, scope: !13441)
!13445 = !DILocation(line: 374, column: 2, scope: !13441)
!13446 = !DILocation(line: 375, column: 34, scope: !13441)
!13447 = !DILocation(line: 375, column: 19, scope: !13441)
!13448 = !DILocation(line: 375, column: 31, scope: !13441)
!13449 = !DILocation(line: 376, column: 24, scope: !13441)
!13450 = !DILocation(line: 376, column: 19, scope: !13441)
!13451 = !DILocation(line: 376, column: 22, scope: !13441)
!13452 = !DILocation(line: 378, column: 26, scope: !13441)
!13453 = !DILocation(line: 378, column: 4, scope: !13441)
!13454 = !DILocation(line: 378, column: 50, scope: !13441)
!13455 = !DILocation(line: 377, column: 19, scope: !13441)
!13456 = !DILocation(line: 377, column: 29, scope: !13441)
!13457 = !DILocation(line: 384, column: 1, scope: !13441)
!13458 = distinct !DISubprogram(name: "init_idle_thread", scope: !1903, file: !1903, line: 343, type: !8422, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13459)
!13459 = !{!13460, !13461, !13462, !13465}
!13460 = !DILocalVariable(name: "i", arg: 1, scope: !13458, file: !1903, line: 343, type: !109)
!13461 = !DILocalVariable(name: "thread", scope: !13458, file: !1903, line: 345, type: !1995)
!13462 = !DILocalVariable(name: "stack", scope: !13458, file: !1903, line: 346, type: !13463)
!13463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13464, size: 32)
!13464 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3419, line: 44, baseType: !2113)
!13465 = !DILocalVariable(name: "tname", scope: !13458, file: !1903, line: 354, type: !285)
!13466 = !DILocation(line: 0, scope: !13458)
!13467 = !DILocation(line: 345, column: 29, scope: !13458)
!13468 = !DILocation(line: 346, column: 28, scope: !13458)
!13469 = !DILocation(line: 362, column: 37, scope: !13458)
!13470 = !DILocation(line: 362, column: 36, scope: !13458)
!13471 = !DILocation(line: 361, column: 2, scope: !13458)
!13472 = !DILocation(line: 365, column: 2, scope: !13458)
!13473 = !DILocation(line: 370, column: 1, scope: !13458)
!13474 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13475, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13477)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{!285, !13463}
!13477 = !{!13478}
!13478 = !DILocalVariable(name: "sym", arg: 1, scope: !13474, file: !147, line: 331, type: !13463)
!13479 = !DILocation(line: 0, scope: !13474)
!13480 = !DILocation(line: 333, column: 21, scope: !13474)
!13481 = !DILocation(line: 333, column: 2, scope: !13474)
!13482 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13483, file: !13483, line: 155, type: !13484, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13486)
!13483 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13484 = !DISubroutineType(types: !13485)
!13485 = !{null, !1995}
!13486 = !{!13487}
!13487 = !DILocalVariable(name: "thread", arg: 1, scope: !13482, file: !13483, line: 155, type: !1995)
!13488 = !DILocation(line: 0, scope: !13482)
!13489 = !DILocation(line: 157, column: 15, scope: !13482)
!13490 = !DILocation(line: 157, column: 28, scope: !13482)
!13491 = !DILocation(line: 158, column: 1, scope: !13482)
!13492 = distinct !DISubprogram(name: "z_cstart", scope: !1903, file: !1903, line: 501, type: !3153, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13493)
!13493 = !{!13494}
!13494 = !DILocalVariable(name: "dummy_thread", scope: !13492, file: !1903, line: 518, type: !1996)
!13495 = !DILocation(line: 507, column: 2, scope: !13492)
!13496 = !DILocation(line: 43, column: 14, scope: !13497, inlinedAt: !13501)
!13497 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13498, file: !13498, line: 40, type: !3153, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13499)
!13498 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13499 = !{!13500}
!13500 = !DILocalVariable(name: "msp", scope: !13497, file: !13498, line: 42, type: !110)
!13501 = distinct !DILocation(line: 44, column: 2, scope: !13502, inlinedAt: !13504)
!13502 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13503, file: !13503, line: 42, type: !3153, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !2104)
!13503 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13504 = distinct !DILocation(line: 510, column: 2, scope: !13492)
!13505 = !DILocation(line: 43, column: 3, scope: !13497, inlinedAt: !13501)
!13506 = !DILocation(line: 43, column: 60, scope: !13497, inlinedAt: !13501)
!13507 = !DILocation(line: 0, scope: !13497, inlinedAt: !13501)
!13508 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13509, file: !6482, line: 1153, type: !110)
!13509 = distinct !DISubprogram(name: "__set_MSP", scope: !6482, file: !6482, line: 1153, type: !6579, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13510)
!13510 = !{!13508}
!13511 = !DILocation(line: 0, scope: !13509, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 46, column: 2, scope: !13497, inlinedAt: !13501)
!13513 = !DILocation(line: 1155, column: 3, scope: !13509, inlinedAt: !13512)
!13514 = !{i64 3749719}
!13515 = !DILocation(line: 62, column: 11, scope: !13497, inlinedAt: !13501)
!13516 = !DILocation(line: 102, column: 2, scope: !13517, inlinedAt: !13518)
!13517 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7534, file: !7534, line: 97, type: !3153, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !2104)
!13518 = distinct !DILocation(line: 45, column: 2, scope: !13502, inlinedAt: !13504)
!13519 = !DILocation(line: 108, column: 2, scope: !13517, inlinedAt: !13518)
!13520 = !DILocation(line: 112, column: 2, scope: !13517, inlinedAt: !13518)
!13521 = !DILocation(line: 113, column: 2, scope: !13517, inlinedAt: !13518)
!13522 = !DILocation(line: 114, column: 2, scope: !13517, inlinedAt: !13518)
!13523 = !DILocation(line: 116, column: 2, scope: !13517, inlinedAt: !13518)
!13524 = !DILocation(line: 123, column: 13, scope: !13517, inlinedAt: !13518)
!13525 = !DILocation(line: 46, column: 2, scope: !13502, inlinedAt: !13504)
!13526 = !DILocation(line: 47, column: 2, scope: !13502, inlinedAt: !13504)
!13527 = !DILocation(line: 174, column: 12, scope: !13528, inlinedAt: !13529)
!13528 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7534, file: !7534, line: 169, type: !3153, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !2104)
!13529 = distinct !DILocation(line: 48, column: 2, scope: !13502, inlinedAt: !13504)
!13530 = !DILocation(line: 179, column: 12, scope: !13528, inlinedAt: !13529)
!13531 = !DILocation(line: 50, column: 2, scope: !13502, inlinedAt: !13504)
!13532 = !DILocation(line: 57, column: 2, scope: !13502, inlinedAt: !13504)
!13533 = !DILocation(line: 518, column: 2, scope: !13492)
!13534 = !DILocation(line: 518, column: 18, scope: !13492)
!13535 = !DILocation(line: 520, column: 2, scope: !13492)
!13536 = !DILocation(line: 523, column: 2, scope: !13492)
!13537 = !DILocation(line: 526, column: 2, scope: !13492)
!13538 = !DILocation(line: 527, column: 2, scope: !13492)
!13539 = !DILocation(line: 543, column: 24, scope: !13492)
!13540 = !DILocation(line: 543, column: 2, scope: !13492)
!13541 = !DILocation(line: 0, scope: !2136)
!13542 = !DILocation(line: 246, column: 15, scope: !2154)
!13543 = !DILocation(line: 246, column: 36, scope: !2153)
!13544 = !DILocation(line: 246, column: 2, scope: !2154)
!13545 = !DILocation(line: 247, column: 37, scope: !2152)
!13546 = !DILocation(line: 0, scope: !2152)
!13547 = !DILocation(line: 248, column: 19, scope: !2152)
!13548 = !DILocation(line: 248, column: 12, scope: !2152)
!13549 = !DILocation(line: 250, column: 11, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !2152, file: !1903, line: 250, column: 7)
!13551 = !DILocation(line: 250, column: 7, scope: !2152)
!13552 = !DILocation(line: 254, column: 11, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !1903, line: 254, column: 8)
!13554 = distinct !DILexicalBlock(scope: !13550, file: !1903, line: 250, column: 20)
!13555 = !DILocation(line: 254, column: 8, scope: !13554)
!13556 = !DILocation(line: 255, column: 9, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13553, file: !1903, line: 254, column: 17)
!13558 = !DILocation(line: 258, column: 9, scope: !13557)
!13559 = !DILocation(line: 261, column: 28, scope: !13557)
!13560 = !DILocation(line: 261, column: 10, scope: !13557)
!13561 = !DILocation(line: 261, column: 17, scope: !13557)
!13562 = !DILocation(line: 261, column: 26, scope: !13557)
!13563 = !DILocation(line: 262, column: 4, scope: !13557)
!13564 = !DILocation(line: 263, column: 9, scope: !13554)
!13565 = !DILocation(line: 263, column: 16, scope: !13554)
!13566 = !DILocation(line: 263, column: 28, scope: !13554)
!13567 = !DILocation(line: 264, column: 3, scope: !13554)
!13568 = !DILocation(line: 246, column: 60, scope: !2153)
!13569 = distinct !{!13569, !13544, !13570}
!13570 = !DILocation(line: 265, column: 2, scope: !2154)
!13571 = !DILocation(line: 266, column: 1, scope: !2136)
!13572 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6522, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13573)
!13573 = !{!13574, !13575}
!13574 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13572, file: !535, line: 1814, type: !800)
!13575 = !DILocalVariable(name: "priority", arg: 2, scope: !13572, file: !535, line: 1814, type: !110)
!13576 = !DILocation(line: 0, scope: !13572)
!13577 = !DILocation(line: 1822, column: 48, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !535, line: 1821, column: 3)
!13579 = distinct !DILexicalBlock(scope: !13572, file: !535, line: 1816, column: 7)
!13580 = !DILocation(line: 1822, column: 32, scope: !13578)
!13581 = !DILocation(line: 1822, column: 40, scope: !13578)
!13582 = !DILocation(line: 1822, column: 5, scope: !13578)
!13583 = !DILocation(line: 1822, column: 46, scope: !13578)
!13584 = !DILocation(line: 1824, column: 1, scope: !13572)
!13585 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13503, file: !13503, line: 32, type: !3153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!13586 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13587, file: !13587, line: 215, type: !13484, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13588)
!13587 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13588 = !{!13589}
!13589 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13586, file: !13587, line: 215, type: !1995)
!13590 = !DILocation(line: 0, scope: !13586)
!13591 = !DILocation(line: 217, column: 21, scope: !13586)
!13592 = !DILocation(line: 217, column: 34, scope: !13586)
!13593 = !DILocation(line: 221, column: 21, scope: !13586)
!13594 = !DILocation(line: 221, column: 34, scope: !13586)
!13595 = !DILocation(line: 223, column: 27, scope: !13586)
!13596 = !DILocation(line: 223, column: 33, scope: !13586)
!13597 = !DILocation(line: 224, column: 27, scope: !13586)
!13598 = !DILocation(line: 224, column: 32, scope: !13586)
!13599 = !DILocation(line: 232, column: 16, scope: !13586)
!13600 = !DILocation(line: 232, column: 30, scope: !13586)
!13601 = !DILocation(line: 239, column: 24, scope: !13586)
!13602 = !DILocation(line: 240, column: 1, scope: !13586)
!13603 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1903, file: !1903, line: 399, type: !13604, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13606)
!13604 = !DISubroutineType(types: !13605)
!13605 = !{!285}
!13606 = !{!13607}
!13607 = !DILocalVariable(name: "stack_ptr", scope: !13603, file: !1903, line: 401, type: !285)
!13608 = !DILocation(line: 404, column: 2, scope: !13603)
!13609 = !DILocation(line: 416, column: 24, scope: !13603)
!13610 = !DILocation(line: 418, column: 14, scope: !13603)
!13611 = !DILocation(line: 0, scope: !13603)
!13612 = !DILocation(line: 423, column: 2, scope: !13603)
!13613 = !DILocation(line: 424, column: 2, scope: !13603)
!13614 = !DILocation(line: 426, column: 2, scope: !13603)
!13615 = !DILocation(line: 428, column: 2, scope: !13603)
!13616 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1903, file: !1903, line: 432, type: !13617, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13619)
!13617 = !DISubroutineType(types: !13618)
!13618 = !{null, !285}
!13619 = !{!13620}
!13620 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13616, file: !1903, line: 432, type: !285)
!13621 = !DILocation(line: 0, scope: !13616)
!13622 = !DILocation(line: 435, column: 2, scope: !13616)
!13623 = !DILocation(line: 445, column: 2, scope: !13616)
!13624 = distinct !DISubprogram(name: "bg_thread_main", scope: !1903, file: !1903, line: 277, type: !3265, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1899, retainedNodes: !13625)
!13625 = !{!13626, !13627, !13628}
!13626 = !DILocalVariable(name: "unused1", arg: 1, scope: !13624, file: !1903, line: 277, type: !107)
!13627 = !DILocalVariable(name: "unused2", arg: 2, scope: !13624, file: !1903, line: 277, type: !107)
!13628 = !DILocalVariable(name: "unused3", arg: 3, scope: !13624, file: !1903, line: 277, type: !107)
!13629 = !DILocation(line: 0, scope: !13624)
!13630 = !DILocation(line: 291, column: 20, scope: !13624)
!13631 = !DILocation(line: 293, column: 2, scope: !13624)
!13632 = !DILocation(line: 297, column: 2, scope: !13624)
!13633 = !DILocation(line: 305, column: 2, scope: !13624)
!13634 = !DILocation(line: 307, column: 2, scope: !13624)
!13635 = !DILocation(line: 330, column: 8, scope: !13624)
!13636 = !DILocation(line: 333, column: 34, scope: !13624)
!13637 = !DILocation(line: 339, column: 1, scope: !13624)
!13638 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2167, file: !2167, line: 45, type: !13639, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13647)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !13641, !107}
!13641 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !13642)
!13642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13643, size: 32)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{null, !13645, !107}
!13645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13646, size: 32)
!13646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2172)
!13647 = !{!13648, !13649}
!13648 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13638, file: !2167, line: 45, type: !13641)
!13649 = !DILocalVariable(name: "user_data", arg: 2, scope: !13638, file: !2167, line: 45, type: !107)
!13650 = !DILocation(line: 0, scope: !13638)
!13651 = !DILocation(line: 71, column: 1, scope: !13638)
!13652 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2167, file: !2167, line: 73, type: !13639, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13653)
!13653 = !{!13654, !13655}
!13654 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13652, file: !2167, line: 73, type: !13641)
!13655 = !DILocalVariable(name: "user_data", arg: 2, scope: !13652, file: !2167, line: 73, type: !107)
!13656 = !DILocation(line: 0, scope: !13652)
!13657 = !DILocation(line: 95, column: 1, scope: !13652)
!13658 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2167, file: !2167, line: 97, type: !7535, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2104)
!13659 = !DILocation(line: 1031, column: 3, scope: !13660, inlinedAt: !13663)
!13660 = distinct !DISubprogram(name: "__get_IPSR", scope: !6482, file: !6482, line: 1027, type: !6569, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13661)
!13661 = !{!13662}
!13662 = !DILocalVariable(name: "result", scope: !13660, file: !6482, line: 1029, type: !110)
!13663 = distinct !DILocation(line: 48, column: 10, scope: !13664, inlinedAt: !13665)
!13664 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7534, file: !7534, line: 46, type: !7535, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2104)
!13665 = distinct !DILocation(line: 99, column: 9, scope: !13658)
!13666 = !{i64 3755370}
!13667 = !DILocation(line: 0, scope: !13660, inlinedAt: !13663)
!13668 = !DILocation(line: 48, column: 9, scope: !13664, inlinedAt: !13665)
!13669 = !DILocation(line: 99, column: 2, scope: !13658)
!13670 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2167, file: !2167, line: 106, type: !3153, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2104)
!13671 = !DILocation(line: 108, column: 2, scope: !13670)
!13672 = !DILocation(line: 108, column: 17, scope: !13670)
!13673 = !DILocation(line: 108, column: 30, scope: !13670)
!13674 = !DILocation(line: 109, column: 1, scope: !13670)
!13675 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2167, file: !2167, line: 116, type: !3153, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2104)
!13676 = !DILocation(line: 118, column: 2, scope: !13675)
!13677 = !DILocation(line: 118, column: 17, scope: !13675)
!13678 = !DILocation(line: 118, column: 30, scope: !13675)
!13679 = !DILocation(line: 119, column: 1, scope: !13675)
!13680 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2167, file: !2167, line: 126, type: !7535, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !2104)
!13681 = !DILocation(line: 128, column: 10, scope: !13680)
!13682 = !DILocation(line: 128, column: 25, scope: !13680)
!13683 = !DILocation(line: 128, column: 38, scope: !13680)
!13684 = !DILocation(line: 128, column: 53, scope: !13680)
!13685 = !DILocation(line: 128, column: 2, scope: !13680)
!13686 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2167, file: !2167, line: 187, type: !13687, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!109, !2171, !279}
!13689 = !{!13690, !13691}
!13690 = !DILocalVariable(name: "thread", arg: 1, scope: !13686, file: !2167, line: 187, type: !2171)
!13691 = !DILocalVariable(name: "value", arg: 2, scope: !13686, file: !2167, line: 187, type: !279)
!13692 = !DILocation(line: 0, scope: !13686)
!13693 = !DILocation(line: 190, column: 13, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13686, file: !2167, line: 190, column: 6)
!13695 = !DILocation(line: 190, column: 6, scope: !13686)
!13696 = !DILocation(line: 194, column: 10, scope: !13686)
!13697 = !DILocation(line: 194, column: 2, scope: !13686)
!13698 = !DILocation(line: 195, column: 2, scope: !13686)
!13699 = !DILocation(line: 195, column: 47, scope: !13686)
!13700 = !DILocation(line: 199, column: 2, scope: !13686)
!13701 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2167, file: !2167, line: 238, type: !13702, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13704)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!279, !2171}
!13704 = !{!13705}
!13705 = !DILocalVariable(name: "thread", arg: 1, scope: !13701, file: !2167, line: 238, type: !2171)
!13706 = !DILocation(line: 0, scope: !13701)
!13707 = !DILocation(line: 241, column: 23, scope: !13701)
!13708 = !DILocation(line: 241, column: 2, scope: !13701)
!13709 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2167, file: !2167, line: 248, type: !13710, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13712)
!13710 = !DISubroutineType(types: !13711)
!13711 = !{!109, !2170, !285, !234}
!13712 = !{!13713, !13714, !13715}
!13713 = !DILocalVariable(name: "thread", arg: 1, scope: !13709, file: !2167, line: 248, type: !2170)
!13714 = !DILocalVariable(name: "buf", arg: 2, scope: !13709, file: !2167, line: 248, type: !285)
!13715 = !DILocalVariable(name: "size", arg: 3, scope: !13709, file: !2167, line: 248, type: !234)
!13716 = !DILocation(line: 0, scope: !13709)
!13717 = !DILocation(line: 251, column: 15, scope: !13709)
!13718 = !DILocation(line: 251, column: 2, scope: !13709)
!13719 = !DILocation(line: 252, column: 2, scope: !13709)
!13720 = !DILocation(line: 0, scope: !2166)
!13721 = !DILocation(line: 281, column: 11, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !2166, file: !2167, line: 281, column: 6)
!13723 = !DILocation(line: 281, column: 20, scope: !13722)
!13724 = !DILocation(line: 275, column: 45, scope: !2166)
!13725 = !DILocation(line: 285, column: 10, scope: !2166)
!13726 = !DILocation(line: 0, scope: !2290)
!13727 = !DILocation(line: 293, column: 39, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !2290, file: !2167, line: 293, column: 2)
!13729 = !DILocation(line: 293, column: 2, scope: !2290)
!13730 = !DILocation(line: 273, column: 14, scope: !2166)
!13731 = !DILocation(line: 309, column: 2, scope: !2166)
!13732 = !DILocation(line: 309, column: 11, scope: !2166)
!13733 = !DILocation(line: 311, column: 2, scope: !2166)
!13734 = !DILocation(line: 293, column: 26, scope: !13728)
!13735 = !DILocation(line: 294, column: 9, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13728, file: !2167, line: 293, column: 54)
!13737 = !DILocation(line: 295, column: 21, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13736, file: !2167, line: 295, column: 7)
!13739 = !DILocation(line: 295, column: 28, scope: !13738)
!13740 = !DILocation(line: 295, column: 7, scope: !13736)
!13741 = !DILocation(line: 299, column: 25, scope: !13736)
!13742 = !DILocation(line: 299, column: 41, scope: !13736)
!13743 = !DILocation(line: 300, column: 7, scope: !13736)
!13744 = !DILocation(line: 300, column: 26, scope: !13736)
!13745 = !DILocation(line: 299, column: 10, scope: !13736)
!13746 = !DILocation(line: 299, column: 7, scope: !13736)
!13747 = !DILocation(line: 302, column: 16, scope: !13736)
!13748 = !DILocation(line: 304, column: 20, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13736, file: !2167, line: 304, column: 7)
!13750 = !DILocation(line: 304, column: 7, scope: !13736)
!13751 = !DILocation(line: 305, column: 26, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13749, file: !2167, line: 304, column: 26)
!13753 = !DILocation(line: 305, column: 42, scope: !13752)
!13754 = !DILocation(line: 305, column: 11, scope: !13752)
!13755 = !DILocation(line: 305, column: 8, scope: !13752)
!13756 = !DILocation(line: 306, column: 3, scope: !13752)
!13757 = !DILocation(line: 293, column: 50, scope: !13728)
!13758 = !DILocation(line: 312, column: 1, scope: !2166)
!13759 = distinct !DISubprogram(name: "copy_bytes", scope: !2167, file: !2167, line: 261, type: !13760, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13762)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{!234, !285, !234, !279, !234}
!13762 = !{!13763, !13764, !13765, !13766, !13767}
!13763 = !DILocalVariable(name: "dest", arg: 1, scope: !13759, file: !2167, line: 261, type: !285)
!13764 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13759, file: !2167, line: 261, type: !234)
!13765 = !DILocalVariable(name: "src", arg: 3, scope: !13759, file: !2167, line: 261, type: !279)
!13766 = !DILocalVariable(name: "src_size", arg: 4, scope: !13759, file: !2167, line: 261, type: !234)
!13767 = !DILocalVariable(name: "bytes_to_copy", scope: !13759, file: !2167, line: 263, type: !234)
!13768 = !DILocation(line: 0, scope: !13759)
!13769 = !DILocation(line: 265, column: 18, scope: !13759)
!13770 = !DILocation(line: 266, column: 2, scope: !13759)
!13771 = !DILocation(line: 268, column: 2, scope: !13759)
!13772 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2167, file: !2167, line: 383, type: !13773, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13775)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{null, !2171}
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "thread", arg: 1, scope: !13772, file: !2167, line: 383, type: !2171)
!13777 = !DILocation(line: 0, scope: !13772)
!13778 = !DILocation(line: 387, column: 2, scope: !13772)
!13779 = !DILocation(line: 388, column: 1, scope: !13772)
!13780 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2167, file: !2167, line: 528, type: !13781, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13788)
!13781 = !DISubroutineType(types: !13782)
!13782 = !{!285, !2171, !13783, !234, !3420, !107, !107, !107, !109, !110, !279}
!13783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13784, size: 32)
!13784 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3419, line: 44, baseType: !13785)
!13785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13786)
!13786 = !{!13787}
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13785, file: !147, line: 48, baseType: !150, size: 8)
!13788 = !{!13789, !13790, !13791, !13792, !13793, !13794, !13795, !13796, !13797, !13798, !13799}
!13789 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13780, file: !2167, line: 528, type: !2171)
!13790 = !DILocalVariable(name: "stack", arg: 2, scope: !13780, file: !2167, line: 529, type: !13783)
!13791 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13780, file: !2167, line: 529, type: !234)
!13792 = !DILocalVariable(name: "entry", arg: 4, scope: !13780, file: !2167, line: 530, type: !3420)
!13793 = !DILocalVariable(name: "p1", arg: 5, scope: !13780, file: !2167, line: 531, type: !107)
!13794 = !DILocalVariable(name: "p2", arg: 6, scope: !13780, file: !2167, line: 531, type: !107)
!13795 = !DILocalVariable(name: "p3", arg: 7, scope: !13780, file: !2167, line: 531, type: !107)
!13796 = !DILocalVariable(name: "prio", arg: 8, scope: !13780, file: !2167, line: 532, type: !109)
!13797 = !DILocalVariable(name: "options", arg: 9, scope: !13780, file: !2167, line: 532, type: !110)
!13798 = !DILocalVariable(name: "name", arg: 10, scope: !13780, file: !2167, line: 532, type: !279)
!13799 = !DILocalVariable(name: "stack_ptr", scope: !13780, file: !2167, line: 534, type: !285)
!13800 = !DILocation(line: 0, scope: !13780)
!13801 = !DILocation(line: 536, column: 2, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !2167, line: 536, column: 2)
!13803 = distinct !DILexicalBlock(scope: !13804, file: !2167, line: 536, column: 2)
!13804 = distinct !DILexicalBlock(scope: !13780, file: !2167, line: 536, column: 2)
!13805 = !DILocation(line: 536, column: 2, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13802, file: !2167, line: 536, column: 2)
!13807 = !DILocation(line: 550, column: 28, scope: !13780)
!13808 = !DILocation(line: 550, column: 2, scope: !13780)
!13809 = !DILocation(line: 553, column: 34, scope: !13780)
!13810 = !DILocation(line: 553, column: 2, scope: !13780)
!13811 = !DILocation(line: 554, column: 14, scope: !13780)
!13812 = !DILocation(line: 564, column: 2, scope: !13780)
!13813 = !DILocation(line: 567, column: 14, scope: !13780)
!13814 = !DILocation(line: 567, column: 24, scope: !13780)
!13815 = !DILocation(line: 594, column: 11, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13780, file: !2167, line: 594, column: 6)
!13817 = !DILocation(line: 0, scope: !13816)
!13818 = !DILocation(line: 594, column: 6, scope: !13780)
!13819 = !DILocation(line: 595, column: 3, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13816, file: !2167, line: 594, column: 20)
!13821 = !DILocation(line: 598, column: 3, scope: !13820)
!13822 = !DILocation(line: 598, column: 52, scope: !13820)
!13823 = !DILocation(line: 599, column: 2, scope: !13820)
!13824 = !DILocation(line: 600, column: 23, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13816, file: !2167, line: 599, column: 9)
!13826 = !DILocation(line: 612, column: 7, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13780, file: !2167, line: 612, column: 6)
!13828 = !DILocation(line: 612, column: 6, scope: !13780)
!13829 = !DILocation(line: 627, column: 40, scope: !13780)
!13830 = !DILocation(line: 637, column: 2, scope: !13780)
!13831 = !DILocation(line: 613, column: 15, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13827, file: !2167, line: 612, column: 17)
!13833 = !DILocation(line: 613, column: 29, scope: !13832)
!13834 = !DILocation(line: 638, column: 1, scope: !13780)
!13835 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13483, file: !13483, line: 78, type: !13836, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{!347, !107}
!13838 = !{!13839}
!13839 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13835, file: !13483, line: 78, type: !107)
!13840 = !DILocation(line: 0, scope: !13835)
!13841 = !DILocation(line: 80, column: 21, scope: !13835)
!13842 = !DILocation(line: 80, column: 2, scope: !13835)
!13843 = distinct !DISubprogram(name: "z_waitq_init", scope: !13844, file: !13844, line: 47, type: !13845, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13847)
!13844 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13845 = !DISubroutineType(types: !13846)
!13846 = !{null, !2202}
!13847 = !{!13848}
!13848 = !DILocalVariable(name: "w", arg: 1, scope: !13843, file: !13844, line: 47, type: !2202)
!13849 = !DILocation(line: 0, scope: !13843)
!13850 = !DILocation(line: 49, column: 21, scope: !13843)
!13851 = !DILocation(line: 49, column: 2, scope: !13843)
!13852 = !DILocation(line: 50, column: 1, scope: !13843)
!13853 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2167, file: !2167, line: 791, type: !13854, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13857)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{null, !13856, !109, !110, !32}
!13856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!13857 = !{!13858, !13859, !13860, !13861}
!13858 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13853, file: !2167, line: 791, type: !13856)
!13859 = !DILocalVariable(name: "priority", arg: 2, scope: !13853, file: !2167, line: 791, type: !109)
!13860 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13853, file: !2167, line: 792, type: !110)
!13861 = !DILocalVariable(name: "options", arg: 4, scope: !13853, file: !2167, line: 792, type: !32)
!13862 = !DILocation(line: 0, scope: !13853)
!13863 = !DILocation(line: 795, column: 15, scope: !13853)
!13864 = !DILocation(line: 795, column: 25, scope: !13853)
!13865 = !DILocation(line: 796, column: 30, scope: !13853)
!13866 = !DILocation(line: 796, column: 15, scope: !13853)
!13867 = !DILocation(line: 796, column: 28, scope: !13853)
!13868 = !DILocation(line: 797, column: 30, scope: !13853)
!13869 = !DILocation(line: 797, column: 15, scope: !13853)
!13870 = !DILocation(line: 797, column: 28, scope: !13853)
!13871 = !DILocation(line: 799, column: 22, scope: !13853)
!13872 = !DILocation(line: 799, column: 15, scope: !13853)
!13873 = !DILocation(line: 799, column: 20, scope: !13853)
!13874 = !DILocation(line: 801, column: 15, scope: !13853)
!13875 = !DILocation(line: 801, column: 28, scope: !13853)
!13876 = !DILocation(line: 814, column: 2, scope: !13853)
!13877 = !DILocation(line: 815, column: 1, scope: !13853)
!13878 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2167, file: !2167, line: 449, type: !13879, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13881)
!13879 = !DISubroutineType(types: !13880)
!13880 = !{!285, !2171, !13783, !234}
!13881 = !{!13882, !13883, !13884, !13885, !13886, !13887, !13888, !13889}
!13882 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13878, file: !2167, line: 449, type: !2171)
!13883 = !DILocalVariable(name: "stack", arg: 2, scope: !13878, file: !2167, line: 450, type: !13783)
!13884 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13878, file: !2167, line: 450, type: !234)
!13885 = !DILocalVariable(name: "stack_obj_size", scope: !13878, file: !2167, line: 452, type: !234)
!13886 = !DILocalVariable(name: "stack_buf_size", scope: !13878, file: !2167, line: 452, type: !234)
!13887 = !DILocalVariable(name: "stack_ptr", scope: !13878, file: !2167, line: 453, type: !285)
!13888 = !DILocalVariable(name: "stack_buf_start", scope: !13878, file: !2167, line: 453, type: !285)
!13889 = !DILocalVariable(name: "delta", scope: !13878, file: !2167, line: 454, type: !234)
!13890 = !DILocation(line: 0, scope: !13878)
!13891 = !DILocation(line: 465, column: 20, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13878, file: !2167, line: 463, column: 2)
!13893 = !DILocation(line: 466, column: 21, scope: !13892)
!13894 = !DILocation(line: 473, column: 28, scope: !13878)
!13895 = !DILocation(line: 514, column: 33, scope: !13878)
!13896 = !DILocation(line: 514, column: 25, scope: !13878)
!13897 = !DILocation(line: 514, column: 31, scope: !13878)
!13898 = !DILocation(line: 515, column: 25, scope: !13878)
!13899 = !DILocation(line: 515, column: 30, scope: !13878)
!13900 = !DILocation(line: 516, column: 25, scope: !13878)
!13901 = !DILocation(line: 516, column: 31, scope: !13878)
!13902 = !DILocation(line: 520, column: 2, scope: !13878)
!13903 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13904, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13906)
!13904 = !DISubroutineType(types: !13905)
!13905 = !{!285, !13783}
!13906 = !{!13907}
!13907 = !DILocalVariable(name: "sym", arg: 1, scope: !13903, file: !147, line: 331, type: !13783)
!13908 = !DILocation(line: 0, scope: !13903)
!13909 = !DILocation(line: 333, column: 21, scope: !13903)
!13910 = !DILocation(line: 333, column: 2, scope: !13903)
!13911 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13912, file: !13912, line: 40, type: !13913, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13915)
!13912 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13913 = !DISubroutineType(types: !13914)
!13914 = !{null, !13856}
!13915 = !{!13916}
!13916 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13911, file: !13912, line: 40, type: !13856)
!13917 = !DILocation(line: 0, scope: !13911)
!13918 = !DILocation(line: 42, column: 31, scope: !13911)
!13919 = !DILocation(line: 42, column: 2, scope: !13911)
!13920 = !DILocation(line: 43, column: 1, scope: !13911)
!13921 = distinct !DISubprogram(name: "z_init_timeout", scope: !13912, file: !13912, line: 25, type: !2228, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13922)
!13922 = !{!13923}
!13923 = !DILocalVariable(name: "to", arg: 1, scope: !13921, file: !13912, line: 25, type: !2230)
!13924 = !DILocation(line: 0, scope: !13921)
!13925 = !DILocation(line: 27, column: 22, scope: !13921)
!13926 = !DILocation(line: 27, column: 2, scope: !13921)
!13927 = !DILocation(line: 28, column: 1, scope: !13921)
!13928 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13929, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13931)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{null, !2277}
!13931 = !{!13932}
!13932 = !DILocalVariable(name: "node", arg: 1, scope: !13928, file: !127, line: 211, type: !2277)
!13933 = !DILocation(line: 0, scope: !13928)
!13934 = !DILocation(line: 213, column: 8, scope: !13928)
!13935 = !DILocation(line: 213, column: 13, scope: !13928)
!13936 = !DILocation(line: 214, column: 8, scope: !13928)
!13937 = !DILocation(line: 214, column: 13, scope: !13928)
!13938 = !DILocation(line: 215, column: 1, scope: !13928)
!13939 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13940, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13943)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !13942}
!13942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!13943 = !{!13944}
!13944 = !DILocalVariable(name: "list", arg: 1, scope: !13939, file: !127, line: 197, type: !13942)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 199, column: 8, scope: !13939)
!13947 = !DILocation(line: 199, column: 13, scope: !13939)
!13948 = !DILocation(line: 200, column: 8, scope: !13939)
!13949 = !DILocation(line: 200, column: 13, scope: !13939)
!13950 = !DILocation(line: 201, column: 1, scope: !13939)
!13951 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2167, file: !2167, line: 641, type: !13952, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13958)
!13952 = !DISubroutineType(types: !13953)
!13953 = !{!2170, !2171, !13783, !234, !3420, !107, !107, !107, !109, !110, !13954}
!13954 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13955)
!13955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13956)
!13956 = !{!13957}
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13955, file: !104, line: 66, baseType: !103, size: 64)
!13958 = !{!13959, !13960, !13961, !13962, !13963, !13964, !13965, !13966, !13967, !13968}
!13959 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13951, file: !2167, line: 641, type: !2171)
!13960 = !DILocalVariable(name: "stack", arg: 2, scope: !13951, file: !2167, line: 642, type: !13783)
!13961 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13951, file: !2167, line: 643, type: !234)
!13962 = !DILocalVariable(name: "entry", arg: 4, scope: !13951, file: !2167, line: 643, type: !3420)
!13963 = !DILocalVariable(name: "p1", arg: 5, scope: !13951, file: !2167, line: 644, type: !107)
!13964 = !DILocalVariable(name: "p2", arg: 6, scope: !13951, file: !2167, line: 644, type: !107)
!13965 = !DILocalVariable(name: "p3", arg: 7, scope: !13951, file: !2167, line: 644, type: !107)
!13966 = !DILocalVariable(name: "prio", arg: 8, scope: !13951, file: !2167, line: 645, type: !109)
!13967 = !DILocalVariable(name: "options", arg: 9, scope: !13951, file: !2167, line: 645, type: !110)
!13968 = !DILocalVariable(name: "delay", arg: 10, scope: !13951, file: !2167, line: 645, type: !13954)
!13969 = !DILocation(line: 0, scope: !13951)
!13970 = !DILocation(line: 1031, column: 3, scope: !13660, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 48, column: 10, scope: !13664, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 647, column: 2, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13974, file: !2167, line: 647, column: 2)
!13974 = distinct !DILexicalBlock(scope: !13951, file: !2167, line: 647, column: 2)
!13975 = !DILocation(line: 0, scope: !13660, inlinedAt: !13971)
!13976 = !DILocation(line: 48, column: 9, scope: !13664, inlinedAt: !13972)
!13977 = !DILocation(line: 647, column: 2, scope: !13974)
!13978 = !DILocation(line: 647, column: 2, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13973, file: !2167, line: 647, column: 2)
!13980 = !DILocation(line: 649, column: 2, scope: !13951)
!13981 = !DILocation(line: 652, column: 7, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13951, file: !2167, line: 652, column: 6)
!13983 = !DILocation(line: 652, column: 6, scope: !13951)
!13984 = !DILocation(line: 653, column: 3, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13982, file: !2167, line: 652, column: 39)
!13986 = !DILocation(line: 654, column: 2, scope: !13985)
!13987 = !DILocation(line: 656, column: 2, scope: !13951)
!13988 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2167, file: !2167, line: 401, type: !13989, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !13991)
!13989 = !DISubroutineType(types: !13990)
!13990 = !{null, !2171, !13954}
!13991 = !{!13992, !13993}
!13992 = !DILocalVariable(name: "thread", arg: 1, scope: !13988, file: !2167, line: 401, type: !2171)
!13993 = !DILocalVariable(name: "delay", arg: 2, scope: !13988, file: !2167, line: 401, type: !13954)
!13994 = !DILocation(line: 0, scope: !13988)
!13995 = !DILocation(line: 404, column: 6, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13988, file: !2167, line: 404, column: 6)
!13997 = !DILocation(line: 404, column: 6, scope: !13988)
!13998 = !DILocation(line: 405, column: 3, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !13996, file: !2167, line: 404, column: 38)
!14000 = !DILocation(line: 406, column: 2, scope: !13999)
!14001 = !DILocation(line: 407, column: 3, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13996, file: !2167, line: 406, column: 9)
!14003 = !DILocation(line: 413, column: 1, scope: !13988)
!14004 = distinct !DISubprogram(name: "k_thread_start", scope: !3299, file: !3299, line: 205, type: !14005, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14007)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{null, !2170}
!14007 = !{!14008}
!14008 = !DILocalVariable(name: "thread", arg: 1, scope: !14004, file: !3299, line: 205, type: !2170)
!14009 = !DILocation(line: 0, scope: !14004)
!14010 = !DILocation(line: 214, column: 2, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14004, file: !3299, line: 214, column: 2)
!14012 = !{i64 2155095168}
!14013 = !DILocation(line: 215, column: 2, scope: !14004)
!14014 = !DILocation(line: 216, column: 1, scope: !14004)
!14015 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13912, file: !13912, line: 47, type: !13989, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14016)
!14016 = !{!14017, !14018}
!14017 = !DILocalVariable(name: "thread", arg: 1, scope: !14015, file: !13912, line: 47, type: !2171)
!14018 = !DILocalVariable(name: "ticks", arg: 2, scope: !14015, file: !13912, line: 47, type: !13954)
!14019 = !DILocation(line: 0, scope: !14015)
!14020 = !DILocation(line: 49, column: 30, scope: !14015)
!14021 = !DILocation(line: 49, column: 2, scope: !14015)
!14022 = !DILocation(line: 50, column: 1, scope: !14015)
!14023 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2167, file: !2167, line: 748, type: !3153, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14024)
!14024 = !{!14025, !14043}
!14025 = !DILocalVariable(name: "thread_data", scope: !14026, file: !2167, line: 750, type: !14027)
!14026 = distinct !DILexicalBlock(scope: !14023, file: !2167, line: 750, column: 2)
!14027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14028, size: 32)
!14028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !14029)
!14029 = !{!14030, !14031, !14032, !14033, !14034, !14035, !14036, !14037, !14038, !14039, !14040, !14042}
!14030 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14028, file: !118, line: 621, baseType: !2171, size: 32)
!14031 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14028, file: !118, line: 622, baseType: !13783, size: 32, offset: 32)
!14032 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14028, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!14033 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14028, file: !118, line: 624, baseType: !3420, size: 32, offset: 96)
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14028, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14028, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14028, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14028, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14028, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14028, file: !118, line: 630, baseType: !774, size: 32, offset: 288)
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14028, file: !118, line: 631, baseType: !14041, size: 32, offset: 320)
!14041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!14042 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14028, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!14043 = !DILocalVariable(name: "thread_data", scope: !14044, file: !2167, line: 781, type: !14027)
!14044 = distinct !DILexicalBlock(scope: !14023, file: !2167, line: 781, column: 2)
!14045 = !DILocation(line: 0, scope: !14026)
!14046 = !DILocation(line: 750, column: 2, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14048, file: !2167, line: 750, column: 2)
!14048 = distinct !DILexicalBlock(scope: !14049, file: !2167, line: 750, column: 2)
!14049 = distinct !DILexicalBlock(scope: !14026, file: !2167, line: 750, column: 2)
!14050 = !DILocation(line: 750, column: 2, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !2167, line: 750, column: 2)
!14052 = distinct !DILexicalBlock(scope: !14047, file: !2167, line: 750, column: 2)
!14053 = !DILocation(line: 750, column: 2, scope: !14048)
!14054 = !DILocation(line: 750, column: 2, scope: !14026)
!14055 = !DILocation(line: 780, column: 2, scope: !14023)
!14056 = !DILocation(line: 0, scope: !14044)
!14057 = !DILocation(line: 781, column: 2, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !2167, line: 781, column: 2)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !2167, line: 781, column: 2)
!14060 = distinct !DILexicalBlock(scope: !14044, file: !2167, line: 781, column: 2)
!14061 = !DILocation(line: 752, column: 17, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14049, file: !2167, line: 750, column: 38)
!14063 = !DILocation(line: 753, column: 17, scope: !14062)
!14064 = !DILocation(line: 754, column: 17, scope: !14062)
!14065 = !DILocation(line: 755, column: 17, scope: !14062)
!14066 = !DILocation(line: 756, column: 17, scope: !14062)
!14067 = !DILocation(line: 757, column: 17, scope: !14062)
!14068 = !DILocation(line: 758, column: 17, scope: !14062)
!14069 = !DILocation(line: 759, column: 17, scope: !14062)
!14070 = !DILocation(line: 760, column: 17, scope: !14062)
!14071 = !DILocation(line: 761, column: 17, scope: !14062)
!14072 = !DILocation(line: 751, column: 3, scope: !14062)
!14073 = !DILocation(line: 763, column: 16, scope: !14062)
!14074 = !DILocation(line: 763, column: 29, scope: !14062)
!14075 = !DILocation(line: 763, column: 39, scope: !14062)
!14076 = !DILocation(line: 750, column: 2, scope: !14049)
!14077 = !DILocation(line: 750, column: 2, scope: !14052)
!14078 = distinct !{!14078, !14054, !14079}
!14079 = !DILocation(line: 764, column: 2, scope: !14026)
!14080 = !DILocation(line: 781, column: 2, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !2167, line: 781, column: 2)
!14082 = distinct !DILexicalBlock(scope: !14058, file: !2167, line: 781, column: 2)
!14083 = !DILocation(line: 781, column: 2, scope: !14059)
!14084 = !DILocation(line: 781, column: 2, scope: !14044)
!14085 = !DILocation(line: 787, column: 2, scope: !14023)
!14086 = !DILocation(line: 788, column: 1, scope: !14023)
!14087 = !DILocation(line: 782, column: 20, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14089, file: !2167, line: 782, column: 7)
!14089 = distinct !DILexicalBlock(scope: !14060, file: !2167, line: 781, column: 38)
!14090 = !DILocation(line: 782, column: 31, scope: !14088)
!14091 = !DILocation(line: 782, column: 7, scope: !14089)
!14092 = !DILocation(line: 783, column: 37, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14088, file: !2167, line: 782, column: 51)
!14094 = !DILocation(line: 784, column: 10, scope: !14093)
!14095 = !DILocation(line: 783, column: 4, scope: !14093)
!14096 = !DILocation(line: 785, column: 3, scope: !14093)
!14097 = !DILocation(line: 781, column: 2, scope: !14060)
!14098 = !DILocation(line: 781, column: 2, scope: !14082)
!14099 = distinct !{!14099, !14084, !14100}
!14100 = !DILocation(line: 786, column: 2, scope: !14044)
!14101 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14102, file: !14102, line: 403, type: !14103, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14105)
!14102 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14103 = !DISubroutineType(types: !14104)
!14104 = !{!111, !111}
!14105 = !{!14106}
!14106 = !DILocalVariable(name: "t", arg: 1, scope: !14101, file: !14102, line: 403, type: !111)
!14107 = !DILocation(line: 0, scope: !14101)
!14108 = !DILocalVariable(name: "t", arg: 1, scope: !14109, file: !14102, line: 102, type: !111)
!14109 = distinct !DISubprogram(name: "z_tmcvt", scope: !14102, file: !14102, line: 102, type: !14110, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14112)
!14110 = !DISubroutineType(types: !14111)
!14111 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!14112 = !{!14108, !14113, !14114, !14115, !14116, !14117, !14118, !14119, !14120, !14121, !14122}
!14113 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14109, file: !14102, line: 102, type: !110)
!14114 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14109, file: !14102, line: 103, type: !110)
!14115 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14109, file: !14102, line: 103, type: !347)
!14116 = !DILocalVariable(name: "result32", arg: 5, scope: !14109, file: !14102, line: 104, type: !347)
!14117 = !DILocalVariable(name: "round_up", arg: 6, scope: !14109, file: !14102, line: 104, type: !347)
!14118 = !DILocalVariable(name: "round_off", arg: 7, scope: !14109, file: !14102, line: 105, type: !347)
!14119 = !DILocalVariable(name: "mul_ratio", scope: !14109, file: !14102, line: 107, type: !347)
!14120 = !DILocalVariable(name: "div_ratio", scope: !14109, file: !14102, line: 109, type: !347)
!14121 = !DILocalVariable(name: "off", scope: !14109, file: !14102, line: 116, type: !111)
!14122 = !DILocalVariable(name: "rdivisor", scope: !14123, file: !14102, line: 119, type: !110)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !14102, line: 118, column: 18)
!14124 = distinct !DILexicalBlock(scope: !14109, file: !14102, line: 118, column: 6)
!14125 = !DILocation(line: 0, scope: !14109, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 406, column: 9, scope: !14101)
!14127 = !DILocation(line: 145, column: 13, scope: !14128, inlinedAt: !14126)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !14102, line: 144, column: 10)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !14102, line: 142, column: 7)
!14130 = distinct !DILexicalBlock(scope: !14131, file: !14102, line: 141, column: 24)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !14102, line: 141, column: 13)
!14132 = distinct !DILexicalBlock(scope: !14109, file: !14102, line: 134, column: 6)
!14133 = !DILocation(line: 406, column: 2, scope: !14101)
!14134 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2167, file: !2167, line: 817, type: !4545, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14135)
!14135 = !{!14136, !14137, !14138, !14139}
!14136 = !DILocalVariable(name: "entry", arg: 1, scope: !14134, file: !2167, line: 817, type: !3420)
!14137 = !DILocalVariable(name: "p1", arg: 2, scope: !14134, file: !2167, line: 818, type: !107)
!14138 = !DILocalVariable(name: "p2", arg: 3, scope: !14134, file: !2167, line: 818, type: !107)
!14139 = !DILocalVariable(name: "p3", arg: 4, scope: !14134, file: !2167, line: 818, type: !107)
!14140 = !DILocation(line: 0, scope: !14134)
!14141 = !DILocation(line: 822, column: 2, scope: !14134)
!14142 = !DILocation(line: 822, column: 17, scope: !14134)
!14143 = !DILocation(line: 822, column: 30, scope: !14134)
!14144 = !DILocation(line: 823, column: 2, scope: !14134)
!14145 = !DILocation(line: 845, column: 2, scope: !14134)
!14146 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2167, file: !2167, line: 853, type: !14147, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14150)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!347, !14149}
!14149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!14150 = !{!14151, !14152}
!14151 = !DILocalVariable(name: "l", arg: 1, scope: !14146, file: !2167, line: 853, type: !14149)
!14152 = !DILocalVariable(name: "thread_cpu", scope: !14146, file: !2167, line: 855, type: !22)
!14153 = !DILocation(line: 0, scope: !14146)
!14154 = !DILocation(line: 855, column: 28, scope: !14146)
!14155 = !DILocation(line: 857, column: 17, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14146, file: !2167, line: 857, column: 6)
!14157 = !DILocation(line: 857, column: 6, scope: !14146)
!14158 = !DILocation(line: 858, column: 19, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14160, file: !2167, line: 858, column: 7)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !2167, line: 857, column: 24)
!14161 = !DILocation(line: 858, column: 42, scope: !14159)
!14162 = !DILocation(line: 858, column: 28, scope: !14159)
!14163 = !DILocation(line: 858, column: 25, scope: !14159)
!14164 = !DILocation(line: 858, column: 7, scope: !14160)
!14165 = !DILocation(line: 862, column: 2, scope: !14146)
!14166 = !DILocation(line: 863, column: 1, scope: !14146)
!14167 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2167, file: !2167, line: 865, type: !14147, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14168)
!14168 = !{!14169}
!14169 = !DILocalVariable(name: "l", arg: 1, scope: !14167, file: !2167, line: 865, type: !14149)
!14170 = !DILocation(line: 0, scope: !14167)
!14171 = !DILocation(line: 867, column: 9, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14167, file: !2167, line: 867, column: 6)
!14173 = !DILocation(line: 867, column: 38, scope: !14172)
!14174 = !DILocation(line: 867, column: 24, scope: !14172)
!14175 = !DILocation(line: 867, column: 54, scope: !14172)
!14176 = !DILocation(line: 867, column: 43, scope: !14172)
!14177 = !DILocation(line: 867, column: 41, scope: !14172)
!14178 = !DILocation(line: 867, column: 20, scope: !14172)
!14179 = !DILocation(line: 867, column: 6, scope: !14167)
!14180 = !DILocation(line: 870, column: 16, scope: !14167)
!14181 = !DILocation(line: 871, column: 2, scope: !14167)
!14182 = !DILocation(line: 872, column: 1, scope: !14167)
!14183 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2167, file: !2167, line: 874, type: !14184, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14186)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{null, !14149}
!14186 = !{!14187}
!14187 = !DILocalVariable(name: "l", arg: 1, scope: !14183, file: !2167, line: 874, type: !14149)
!14188 = !DILocation(line: 0, scope: !14183)
!14189 = !DILocation(line: 876, column: 32, scope: !14183)
!14190 = !DILocation(line: 876, column: 18, scope: !14183)
!14191 = !DILocation(line: 876, column: 48, scope: !14183)
!14192 = !DILocation(line: 876, column: 37, scope: !14183)
!14193 = !DILocation(line: 876, column: 35, scope: !14183)
!14194 = !DILocation(line: 876, column: 5, scope: !14183)
!14195 = !DILocation(line: 876, column: 16, scope: !14183)
!14196 = !DILocation(line: 877, column: 1, scope: !14183)
!14197 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2167, file: !2167, line: 888, type: !14198, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!109, !2171}
!14200 = !{!14201}
!14201 = !DILocalVariable(name: "thread", arg: 1, scope: !14197, file: !2167, line: 888, type: !2171)
!14202 = !DILocation(line: 0, scope: !14197)
!14203 = !DILocation(line: 893, column: 2, scope: !14197)
!14204 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2167, file: !2167, line: 897, type: !14205, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14207)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{!109, !2171, !32}
!14207 = !{!14208, !14209}
!14208 = !DILocalVariable(name: "thread", arg: 1, scope: !14204, file: !2167, line: 897, type: !2171)
!14209 = !DILocalVariable(name: "options", arg: 2, scope: !14204, file: !2167, line: 897, type: !32)
!14210 = !DILocation(line: 0, scope: !14204)
!14211 = !DILocation(line: 902, column: 2, scope: !14204)
!14212 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2167, file: !2167, line: 1072, type: !14213, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14218)
!14213 = !DISubroutineType(types: !14214)
!14214 = !{!109, !2170, !14215}
!14215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14216, size: 32)
!14216 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !14217)
!14217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2104)
!14218 = !{!14219, !14220}
!14219 = !DILocalVariable(name: "thread", arg: 1, scope: !14212, file: !2167, line: 1072, type: !2170)
!14220 = !DILocalVariable(name: "stats", arg: 2, scope: !14212, file: !2167, line: 1073, type: !14215)
!14221 = !DILocation(line: 0, scope: !14212)
!14222 = !DILocation(line: 1075, column: 14, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14212, file: !2167, line: 1075, column: 6)
!14224 = !DILocation(line: 1075, column: 23, scope: !14223)
!14225 = !DILocation(line: 1086, column: 1, scope: !14212)
!14226 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2167, file: !2167, line: 1088, type: !14227, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2274, retainedNodes: !14229)
!14227 = !DISubroutineType(types: !14228)
!14228 = !{!109, !14215}
!14229 = !{!14230}
!14230 = !DILocalVariable(name: "stats", arg: 1, scope: !14226, file: !2167, line: 1088, type: !14215)
!14231 = !DILocation(line: 0, scope: !14226)
!14232 = !DILocation(line: 1094, column: 12, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14226, file: !2167, line: 1094, column: 6)
!14234 = !DILocation(line: 1120, column: 1, scope: !14226)
!14235 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14236, file: !14236, line: 20, type: !3153, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !2104)
!14236 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14237 = !DILocation(line: 30, column: 2, scope: !14235)
!14238 = !DILocation(line: 31, column: 1, scope: !14235)
!14239 = distinct !DISubprogram(name: "idle", scope: !14236, file: !14236, line: 33, type: !3265, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !14240)
!14240 = !{!14241, !14242, !14243}
!14241 = !DILocalVariable(name: "unused1", arg: 1, scope: !14239, file: !14236, line: 33, type: !107)
!14242 = !DILocalVariable(name: "unused2", arg: 2, scope: !14239, file: !14236, line: 33, type: !107)
!14243 = !DILocalVariable(name: "unused3", arg: 3, scope: !14239, file: !14236, line: 33, type: !107)
!14244 = !DILocation(line: 0, scope: !14239)
!14245 = !DILocation(line: 39, column: 2, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !14236, line: 39, column: 2)
!14247 = distinct !DILexicalBlock(scope: !14239, file: !14236, line: 39, column: 2)
!14248 = !DILocation(line: 39, column: 2, scope: !14247)
!14249 = !DILocation(line: 39, column: 2, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !14236, line: 39, column: 2)
!14251 = !DILocation(line: 55, column: 2, scope: !14252, inlinedAt: !14256)
!14252 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !14253)
!14253 = !{!14254, !14255}
!14254 = !DILocalVariable(name: "key", scope: !14252, file: !6161, line: 44, type: !32)
!14255 = !DILocalVariable(name: "tmp", scope: !14252, file: !6161, line: 53, type: !32)
!14256 = distinct !DILocation(line: 62, column: 10, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14239, file: !14236, line: 41, column: 15)
!14258 = !{i64 2282122}
!14259 = !DILocation(line: 0, scope: !14252, inlinedAt: !14256)
!14260 = !DILocation(line: 86, column: 3, scope: !14257)
!14261 = !DILocation(line: 41, column: 2, scope: !14239)
!14262 = distinct !{!14262, !14261, !14263}
!14263 = !DILocation(line: 105, column: 2, scope: !14239)
!14264 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3153, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3134, retainedNodes: !2104)
!14265 = !DILocation(line: 5629, column: 2, scope: !14264)
!14266 = !DILocation(line: 5630, column: 1, scope: !14264)
!14267 = !DISubprogram(name: "arch_cpu_idle", scope: !3419, file: !3419, line: 167, type: !3153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!14268 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2402, file: !2402, line: 49, type: !14269, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14278)
!14269 = !DISubroutineType(types: !14270)
!14270 = !{!109, !14271}
!14271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14272, size: 32)
!14272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !14273)
!14273 = !{!14274, !14275, !14276, !14277}
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14272, file: !118, line: 2722, baseType: !2330, size: 64)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !14272, file: !118, line: 2724, baseType: !2312, size: 32, offset: 64)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !14272, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !14272, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!14278 = !{!14279}
!14279 = !DILocalVariable(name: "mutex", arg: 1, scope: !14268, file: !2402, line: 49, type: !14271)
!14280 = !DILocation(line: 0, scope: !14268)
!14281 = !DILocation(line: 51, column: 9, scope: !14268)
!14282 = !DILocation(line: 51, column: 15, scope: !14268)
!14283 = !DILocation(line: 52, column: 9, scope: !14268)
!14284 = !DILocation(line: 52, column: 20, scope: !14268)
!14285 = !DILocation(line: 54, column: 23, scope: !14268)
!14286 = !DILocation(line: 54, column: 2, scope: !14268)
!14287 = !DILocation(line: 60, column: 2, scope: !14268)
!14288 = distinct !DISubprogram(name: "z_waitq_init", scope: !13844, file: !13844, line: 47, type: !14289, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14291)
!14289 = !DISubroutineType(types: !14290)
!14290 = !{null, !2329}
!14291 = !{!14292}
!14292 = !DILocalVariable(name: "w", arg: 1, scope: !14288, file: !13844, line: 47, type: !2329)
!14293 = !DILocation(line: 0, scope: !14288)
!14294 = !DILocation(line: 49, column: 21, scope: !14288)
!14295 = !DILocation(line: 49, column: 2, scope: !14288)
!14296 = !DILocation(line: 50, column: 1, scope: !14288)
!14297 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !14298, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14301)
!14298 = !DISubroutineType(types: !14299)
!14299 = !{null, !14300}
!14300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!14301 = !{!14302}
!14302 = !DILocalVariable(name: "list", arg: 1, scope: !14297, file: !127, line: 197, type: !14300)
!14303 = !DILocation(line: 0, scope: !14297)
!14304 = !DILocation(line: 199, column: 8, scope: !14297)
!14305 = !DILocation(line: 199, column: 13, scope: !14297)
!14306 = !DILocation(line: 200, column: 8, scope: !14297)
!14307 = !DILocation(line: 200, column: 13, scope: !14297)
!14308 = !DILocation(line: 201, column: 1, scope: !14297)
!14309 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2402, file: !2402, line: 95, type: !14310, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14316)
!14310 = !DISubroutineType(types: !14311)
!14311 = !{!109, !14271, !14312}
!14312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14313)
!14313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14314)
!14314 = !{!14315}
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14313, file: !104, line: 66, baseType: !103, size: 64)
!14316 = !{!14317, !14318, !14319, !14320, !14325, !14326, !14327}
!14317 = !DILocalVariable(name: "mutex", arg: 1, scope: !14309, file: !2402, line: 95, type: !14271)
!14318 = !DILocalVariable(name: "timeout", arg: 2, scope: !14309, file: !2402, line: 95, type: !14312)
!14319 = !DILocalVariable(name: "new_prio", scope: !14309, file: !2402, line: 97, type: !109)
!14320 = !DILocalVariable(name: "key", scope: !14309, file: !2402, line: 98, type: !14321)
!14321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14322)
!14322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14323)
!14323 = !{!14324}
!14324 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14322, file: !253, line: 33, baseType: !109, size: 32)
!14325 = !DILocalVariable(name: "resched", scope: !14309, file: !2402, line: 99, type: !347)
!14326 = !DILocalVariable(name: "got_mutex", scope: !14309, file: !2402, line: 146, type: !109)
!14327 = !DILocalVariable(name: "waiter", scope: !14328, file: !2402, line: 169, type: !2312)
!14328 = distinct !DILexicalBlock(scope: !14329, file: !2402, line: 168, column: 36)
!14329 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 168, column: 6)
!14330 = !DILocation(line: 0, scope: !14309)
!14331 = !DILocation(line: 1031, column: 3, scope: !14332, inlinedAt: !14335)
!14332 = distinct !DISubprogram(name: "__get_IPSR", scope: !6482, file: !6482, line: 1027, type: !6569, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14333)
!14333 = !{!14334}
!14334 = !DILocalVariable(name: "result", scope: !14332, file: !6482, line: 1029, type: !110)
!14335 = distinct !DILocation(line: 48, column: 10, scope: !14336, inlinedAt: !14337)
!14336 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7534, file: !7534, line: 46, type: !7535, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !2104)
!14337 = distinct !DILocation(line: 101, column: 2, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !2402, line: 101, column: 2)
!14339 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 101, column: 2)
!14340 = !{i64 3732964}
!14341 = !DILocation(line: 0, scope: !14332, inlinedAt: !14335)
!14342 = !DILocation(line: 48, column: 9, scope: !14336, inlinedAt: !14337)
!14343 = !DILocation(line: 101, column: 2, scope: !14339)
!14344 = !DILocation(line: 101, column: 2, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14338, file: !2402, line: 101, column: 2)
!14346 = !DILocalVariable(name: "l", arg: 1, scope: !14347, file: !253, line: 136, type: !14350)
!14347 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14348, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14351)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!14321, !14350}
!14350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!14351 = !{!14346, !14352}
!14352 = !DILocalVariable(name: "k", scope: !14347, file: !253, line: 139, type: !14321)
!14353 = !DILocation(line: 0, scope: !14347, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 105, column: 8, scope: !14309)
!14355 = !DILocation(line: 55, column: 2, scope: !14356, inlinedAt: !14360)
!14356 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14357)
!14357 = !{!14358, !14359}
!14358 = !DILocalVariable(name: "key", scope: !14356, file: !6161, line: 44, type: !32)
!14359 = !DILocalVariable(name: "tmp", scope: !14356, file: !6161, line: 53, type: !32)
!14360 = distinct !DILocation(line: 145, column: 10, scope: !14347, inlinedAt: !14354)
!14361 = !{i64 2286530}
!14362 = !DILocation(line: 0, scope: !14356, inlinedAt: !14360)
!14363 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14354)
!14364 = distinct !DILexicalBlock(scope: !14365, file: !253, line: 148, column: 2)
!14365 = distinct !DILexicalBlock(scope: !14347, file: !253, line: 148, column: 2)
!14366 = !DILocation(line: 148, column: 2, scope: !14365, inlinedAt: !14354)
!14367 = !DILocation(line: 148, column: 2, scope: !14368, inlinedAt: !14354)
!14368 = distinct !DILexicalBlock(scope: !14364, file: !253, line: 148, column: 2)
!14369 = !DILocation(line: 160, column: 2, scope: !14347, inlinedAt: !14354)
!14370 = !DILocation(line: 107, column: 6, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 107, column: 6)
!14372 = !DILocation(line: 107, column: 6, scope: !14309)
!14373 = !{!"branch_weights", i32 2000, i32 1}
!14374 = !DILocation(line: 110, column: 6, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14371, file: !2402, line: 107, column: 71)
!14376 = !DILocation(line: 110, column: 21, scope: !14375)
!14377 = !DILocation(line: 109, column: 28, scope: !14375)
!14378 = !DILocation(line: 111, column: 13, scope: !14375)
!14379 = !DILocation(line: 114, column: 18, scope: !14375)
!14380 = !DILocation(line: 109, column: 10, scope: !14375)
!14381 = !DILocation(line: 109, column: 26, scope: !14375)
!14382 = !DILocation(line: 113, column: 20, scope: !14375)
!14383 = !DILocation(line: 114, column: 10, scope: !14375)
!14384 = !DILocation(line: 114, column: 16, scope: !14375)
!14385 = !DILocalVariable(name: "key", arg: 2, scope: !14386, file: !253, line: 190, type: !14321)
!14386 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14387, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14389)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{null, !14350, !14321}
!14389 = !{!14390, !14385}
!14390 = !DILocalVariable(name: "l", arg: 1, scope: !14386, file: !253, line: 189, type: !14350)
!14391 = !DILocation(line: 0, scope: !14386, inlinedAt: !14392)
!14392 = distinct !DILocation(line: 120, column: 3, scope: !14375)
!14393 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14392)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !253, line: 194, column: 2)
!14395 = distinct !DILexicalBlock(scope: !14386, file: !253, line: 194, column: 2)
!14396 = !DILocation(line: 194, column: 2, scope: !14395, inlinedAt: !14392)
!14397 = !DILocation(line: 194, column: 2, scope: !14398, inlinedAt: !14392)
!14398 = distinct !DILexicalBlock(scope: !14394, file: !253, line: 194, column: 2)
!14399 = !DILocalVariable(name: "key", arg: 1, scope: !14400, file: !6161, line: 84, type: !32)
!14400 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14401)
!14401 = !{!14399}
!14402 = !DILocation(line: 0, scope: !14400, inlinedAt: !14403)
!14403 = distinct !DILocation(line: 215, column: 2, scope: !14386, inlinedAt: !14392)
!14404 = !DILocation(line: 95, column: 2, scope: !14400, inlinedAt: !14403)
!14405 = !{i64 2287347}
!14406 = !DILocation(line: 124, column: 3, scope: !14375)
!14407 = !DILocation(line: 127, column: 6, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 127, column: 6)
!14409 = !DILocation(line: 127, column: 6, scope: !14309)
!14410 = !{!"branch_weights", i32 1, i32 2000}
!14411 = !DILocation(line: 0, scope: !14386, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 128, column: 3, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14408, file: !2402, line: 127, column: 50)
!14414 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14412)
!14415 = !DILocation(line: 194, column: 2, scope: !14395, inlinedAt: !14412)
!14416 = !DILocation(line: 194, column: 2, scope: !14398, inlinedAt: !14412)
!14417 = !DILocation(line: 0, scope: !14400, inlinedAt: !14418)
!14418 = distinct !DILocation(line: 215, column: 2, scope: !14386, inlinedAt: !14412)
!14419 = !DILocation(line: 95, column: 2, scope: !14400, inlinedAt: !14418)
!14420 = !DILocation(line: 132, column: 3, scope: !14413)
!14421 = !DILocation(line: 137, column: 53, scope: !14309)
!14422 = !DILocation(line: 137, column: 38, scope: !14309)
!14423 = !DILocation(line: 138, column: 29, scope: !14309)
!14424 = !DILocation(line: 138, column: 10, scope: !14309)
!14425 = !DILocation(line: 137, column: 13, scope: !14309)
!14426 = !DILocation(line: 142, column: 6, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 142, column: 6)
!14428 = !DILocation(line: 142, column: 6, scope: !14309)
!14429 = !DILocation(line: 143, column: 13, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14427, file: !2402, line: 142, column: 59)
!14431 = !DILocation(line: 144, column: 2, scope: !14430)
!14432 = !DILocation(line: 146, column: 50, scope: !14309)
!14433 = !DILocation(line: 146, column: 18, scope: !14309)
!14434 = !DILocation(line: 153, column: 16, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 153, column: 6)
!14436 = !DILocation(line: 153, column: 6, scope: !14309)
!14437 = !DILocation(line: 0, scope: !14347, inlinedAt: !14438)
!14438 = distinct !DILocation(line: 162, column: 8, scope: !14309)
!14439 = !DILocation(line: 55, column: 2, scope: !14356, inlinedAt: !14440)
!14440 = distinct !DILocation(line: 145, column: 10, scope: !14347, inlinedAt: !14438)
!14441 = !DILocation(line: 0, scope: !14356, inlinedAt: !14440)
!14442 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14438)
!14443 = !DILocation(line: 148, column: 2, scope: !14365, inlinedAt: !14438)
!14444 = !DILocation(line: 148, column: 2, scope: !14368, inlinedAt: !14438)
!14445 = !DILocation(line: 160, column: 2, scope: !14347, inlinedAt: !14438)
!14446 = !DILocation(line: 168, column: 6, scope: !14329)
!14447 = !DILocation(line: 168, column: 6, scope: !14309)
!14448 = !DILocation(line: 169, column: 29, scope: !14328)
!14449 = !DILocation(line: 0, scope: !14328)
!14450 = !DILocation(line: 171, column: 22, scope: !14328)
!14451 = !DILocation(line: 171, column: 14, scope: !14328)
!14452 = !DILocation(line: 172, column: 42, scope: !14328)
!14453 = !DILocation(line: 172, column: 29, scope: !14328)
!14454 = !DILocation(line: 172, column: 55, scope: !14328)
!14455 = !DILocation(line: 172, column: 4, scope: !14328)
!14456 = !DILocation(line: 173, column: 11, scope: !14328)
!14457 = !DILocation(line: 177, column: 13, scope: !14328)
!14458 = !DILocation(line: 177, column: 48, scope: !14328)
!14459 = !DILocation(line: 180, column: 6, scope: !14309)
!14460 = !DILocation(line: 181, column: 3, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2402, line: 180, column: 15)
!14462 = distinct !DILexicalBlock(scope: !14309, file: !2402, line: 180, column: 6)
!14463 = !DILocation(line: 182, column: 2, scope: !14461)
!14464 = !DILocation(line: 0, scope: !14386, inlinedAt: !14465)
!14465 = distinct !DILocation(line: 183, column: 3, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14462, file: !2402, line: 182, column: 9)
!14467 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14465)
!14468 = !DILocation(line: 194, column: 2, scope: !14395, inlinedAt: !14465)
!14469 = !DILocation(line: 194, column: 2, scope: !14398, inlinedAt: !14465)
!14470 = !DILocation(line: 0, scope: !14400, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 215, column: 2, scope: !14386, inlinedAt: !14465)
!14472 = !DILocation(line: 95, column: 2, scope: !14400, inlinedAt: !14471)
!14473 = !DILocation(line: 189, column: 1, scope: !14309)
!14474 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2402, file: !2402, line: 72, type: !14475, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14477)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{!774, !774, !774}
!14477 = !{!14478, !14479, !14480}
!14478 = !DILocalVariable(name: "target", arg: 1, scope: !14474, file: !2402, line: 72, type: !774)
!14479 = !DILocalVariable(name: "limit", arg: 2, scope: !14474, file: !2402, line: 72, type: !774)
!14480 = !DILocalVariable(name: "new_prio", scope: !14474, file: !2402, line: 74, type: !109)
!14481 = !DILocation(line: 0, scope: !14474)
!14482 = !DILocation(line: 74, column: 17, scope: !14474)
!14483 = !DILocation(line: 76, column: 13, scope: !14474)
!14484 = !DILocation(line: 78, column: 2, scope: !14474)
!14485 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13483, file: !13483, line: 211, type: !14486, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14488)
!14486 = !DISubroutineType(types: !14487)
!14487 = !{!347, !109, !109}
!14488 = !{!14489, !14490}
!14489 = !DILocalVariable(name: "prio", arg: 1, scope: !14485, file: !13483, line: 211, type: !109)
!14490 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14485, file: !13483, line: 211, type: !109)
!14491 = !DILocation(line: 0, scope: !14485)
!14492 = !DILocation(line: 213, column: 9, scope: !14485)
!14493 = !DILocation(line: 213, column: 2, scope: !14485)
!14494 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2402, file: !2402, line: 81, type: !14495, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14497)
!14495 = !DISubroutineType(types: !14496)
!14496 = !{!347, !14271, !774}
!14497 = !{!14498, !14499}
!14498 = !DILocalVariable(name: "mutex", arg: 1, scope: !14494, file: !2402, line: 81, type: !14271)
!14499 = !DILocalVariable(name: "new_prio", arg: 2, scope: !14494, file: !2402, line: 81, type: !774)
!14500 = !DILocation(line: 0, scope: !14494)
!14501 = !DILocation(line: 83, column: 13, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14494, file: !2402, line: 83, column: 6)
!14503 = !DILocation(line: 83, column: 25, scope: !14502)
!14504 = !DILocation(line: 83, column: 6, scope: !14502)
!14505 = !DILocation(line: 83, column: 30, scope: !14502)
!14506 = !DILocation(line: 83, column: 6, scope: !14494)
!14507 = !DILocation(line: 90, column: 10, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14502, file: !2402, line: 83, column: 43)
!14509 = !DILocation(line: 90, column: 3, scope: !14508)
!14510 = !DILocation(line: 93, column: 1, scope: !14494)
!14511 = distinct !DISubprogram(name: "z_waitq_head", scope: !13844, file: !13844, line: 52, type: !14512, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14514)
!14512 = !DISubroutineType(types: !14513)
!14513 = !{!2312, !2329}
!14514 = !{!14515}
!14515 = !DILocalVariable(name: "w", arg: 1, scope: !14511, file: !13844, line: 52, type: !2329)
!14516 = !DILocation(line: 0, scope: !14511)
!14517 = !DILocation(line: 54, column: 52, scope: !14511)
!14518 = !DILocation(line: 54, column: 28, scope: !14511)
!14519 = !DILocation(line: 54, column: 9, scope: !14511)
!14520 = !DILocation(line: 54, column: 2, scope: !14511)
!14521 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14522, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14524)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{!2297, !14300}
!14524 = !{!14525}
!14525 = !DILocalVariable(name: "list", arg: 1, scope: !14521, file: !127, line: 294, type: !14300)
!14526 = !DILocation(line: 0, scope: !14521)
!14527 = !DILocation(line: 296, column: 9, scope: !14521)
!14528 = !DILocation(line: 296, column: 49, scope: !14521)
!14529 = !DILocation(line: 296, column: 2, scope: !14521)
!14530 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14531, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14533)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{!347, !14300}
!14533 = !{!14534}
!14534 = !DILocalVariable(name: "list", arg: 1, scope: !14530, file: !127, line: 266, type: !14300)
!14535 = !DILocation(line: 0, scope: !14530)
!14536 = !DILocation(line: 268, column: 15, scope: !14530)
!14537 = !DILocation(line: 268, column: 20, scope: !14530)
!14538 = !DILocation(line: 268, column: 2, scope: !14530)
!14539 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13483, file: !13483, line: 206, type: !14486, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14540)
!14540 = !{!14541, !14542}
!14541 = !DILocalVariable(name: "prio1", arg: 1, scope: !14539, file: !13483, line: 206, type: !109)
!14542 = !DILocalVariable(name: "prio2", arg: 2, scope: !14539, file: !13483, line: 206, type: !109)
!14543 = !DILocation(line: 0, scope: !14539)
!14544 = !DILocation(line: 208, column: 15, scope: !14539)
!14545 = !DILocation(line: 208, column: 2, scope: !14539)
!14546 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13483, file: !13483, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14547)
!14547 = !{!14548}
!14548 = !DILocalVariable(name: "prio", arg: 1, scope: !14546, file: !13483, line: 186, type: !109)
!14549 = !DILocation(line: 0, scope: !14546)
!14550 = !DILocation(line: 188, column: 9, scope: !14546)
!14551 = !DILocation(line: 188, column: 2, scope: !14546)
!14552 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13483, file: !13483, line: 181, type: !14553, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{!347, !109}
!14555 = !{!14556}
!14556 = !DILocalVariable(name: "prio", arg: 1, scope: !14552, file: !13483, line: 181, type: !109)
!14557 = !DILocation(line: 0, scope: !14552)
!14558 = !DILocation(line: 183, column: 14, scope: !14552)
!14559 = !DILocation(line: 183, column: 2, scope: !14552)
!14560 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2402, file: !2402, line: 201, type: !14269, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14561)
!14561 = !{!14562, !14563, !14564, !14565}
!14562 = !DILocalVariable(name: "mutex", arg: 1, scope: !14560, file: !2402, line: 201, type: !14271)
!14563 = !DILocalVariable(name: "new_owner", scope: !14560, file: !2402, line: 203, type: !2312)
!14564 = !DILocalVariable(name: "key", scope: !14560, file: !2402, line: 242, type: !14321)
!14565 = !DILabel(scope: !14560, name: "k_mutex_unlock_return", file: !2402, line: 270)
!14566 = !DILocation(line: 0, scope: !14560)
!14567 = !DILocation(line: 1031, column: 3, scope: !14332, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 48, column: 10, scope: !14336, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 205, column: 2, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !2402, line: 205, column: 2)
!14571 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 205, column: 2)
!14572 = !DILocation(line: 0, scope: !14332, inlinedAt: !14568)
!14573 = !DILocation(line: 48, column: 9, scope: !14336, inlinedAt: !14569)
!14574 = !DILocation(line: 205, column: 2, scope: !14571)
!14575 = !DILocation(line: 205, column: 2, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14570, file: !2402, line: 205, column: 2)
!14577 = !DILocation(line: 209, column: 2, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 209, column: 2)
!14579 = !DILocation(line: 209, column: 2, scope: !14560)
!14580 = !DILocation(line: 217, column: 2, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 217, column: 2)
!14582 = !DILocation(line: 217, column: 2, scope: !14560)
!14583 = !DILocation(line: 229, column: 2, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14585, file: !2402, line: 229, column: 2)
!14585 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 229, column: 2)
!14586 = !DILocation(line: 229, column: 2, scope: !14585)
!14587 = !DILocation(line: 229, column: 2, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14584, file: !2402, line: 229, column: 2)
!14589 = !DILocation(line: 238, column: 20, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14591, file: !2402, line: 237, column: 30)
!14591 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 237, column: 6)
!14592 = !DILocation(line: 239, column: 3, scope: !14590)
!14593 = !DILocation(line: 0, scope: !14347, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 242, column: 25, scope: !14560)
!14595 = !DILocation(line: 55, column: 2, scope: !14356, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 145, column: 10, scope: !14347, inlinedAt: !14594)
!14597 = !DILocation(line: 0, scope: !14356, inlinedAt: !14596)
!14598 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14594)
!14599 = !DILocation(line: 148, column: 2, scope: !14365, inlinedAt: !14594)
!14600 = !DILocation(line: 148, column: 2, scope: !14368, inlinedAt: !14594)
!14601 = !DILocation(line: 160, column: 2, scope: !14347, inlinedAt: !14594)
!14602 = !DILocation(line: 244, column: 34, scope: !14560)
!14603 = !DILocation(line: 244, column: 2, scope: !14560)
!14604 = !DILocation(line: 247, column: 44, scope: !14560)
!14605 = !DILocation(line: 247, column: 14, scope: !14560)
!14606 = !DILocation(line: 249, column: 15, scope: !14560)
!14607 = !DILocation(line: 254, column: 16, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14560, file: !2402, line: 254, column: 6)
!14609 = !DILocation(line: 254, column: 6, scope: !14560)
!14610 = !DILocation(line: 260, column: 44, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14608, file: !2402, line: 254, column: 25)
!14612 = !DILocation(line: 260, column: 28, scope: !14611)
!14613 = !DILocation(line: 260, column: 26, scope: !14611)
!14614 = !DILocalVariable(name: "thread", arg: 1, scope: !14615, file: !13503, line: 65, type: !2312)
!14615 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13503, file: !13503, line: 65, type: !14616, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{null, !2312, !32}
!14618 = !{!14614, !14619}
!14619 = !DILocalVariable(name: "value", arg: 2, scope: !14615, file: !13503, line: 65, type: !32)
!14620 = !DILocation(line: 0, scope: !14615, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 261, column: 3, scope: !14611)
!14622 = !DILocation(line: 67, column: 15, scope: !14615, inlinedAt: !14621)
!14623 = !DILocation(line: 67, column: 33, scope: !14615, inlinedAt: !14621)
!14624 = !DILocation(line: 262, column: 3, scope: !14611)
!14625 = !DILocation(line: 263, column: 3, scope: !14611)
!14626 = !DILocation(line: 264, column: 2, scope: !14611)
!14627 = !DILocation(line: 265, column: 21, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14608, file: !2402, line: 264, column: 9)
!14629 = !DILocation(line: 0, scope: !14386, inlinedAt: !14630)
!14630 = distinct !DILocation(line: 266, column: 3, scope: !14628)
!14631 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14630)
!14632 = !DILocation(line: 194, column: 2, scope: !14395, inlinedAt: !14630)
!14633 = !DILocation(line: 194, column: 2, scope: !14398, inlinedAt: !14630)
!14634 = !DILocation(line: 0, scope: !14400, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 215, column: 2, scope: !14386, inlinedAt: !14630)
!14636 = !DILocation(line: 95, column: 2, scope: !14400, inlinedAt: !14635)
!14637 = !DILocation(line: 274, column: 1, scope: !14560)
!14638 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2516, file: !2516, line: 93, type: !14639, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14641)
!14639 = !DISubroutineType(types: !14640)
!14640 = !{!774, !2408, !2408}
!14641 = !{!14642, !14643, !14644, !14645}
!14642 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14638, file: !2516, line: 93, type: !2408)
!14643 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14638, file: !2516, line: 94, type: !2408)
!14644 = !DILocalVariable(name: "b1", scope: !14638, file: !2516, line: 97, type: !774)
!14645 = !DILocalVariable(name: "b2", scope: !14638, file: !2516, line: 98, type: !774)
!14646 = !DILocation(line: 0, scope: !14638)
!14647 = !DILocation(line: 97, column: 30, scope: !14638)
!14648 = !DILocation(line: 98, column: 30, scope: !14638)
!14649 = !DILocation(line: 100, column: 9, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14638, file: !2516, line: 100, column: 6)
!14651 = !DILocation(line: 100, column: 6, scope: !14638)
!14652 = !DILocation(line: 125, column: 1, scope: !14638)
!14653 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2516, file: !2516, line: 428, type: !14654, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14656)
!14654 = !DISubroutineType(types: !14655)
!14655 = !{null, !2408}
!14656 = !{!14657}
!14657 = !DILocalVariable(name: "curr", arg: 1, scope: !14653, file: !2516, line: 428, type: !2408)
!14658 = !DILocation(line: 0, scope: !14653)
!14659 = !DILocation(line: 434, column: 6, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14653, file: !2516, line: 434, column: 6)
!14661 = !DILocation(line: 434, column: 23, scope: !14660)
!14662 = !DILocation(line: 434, column: 6, scope: !14653)
!14663 = !DILocation(line: 435, column: 50, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14660, file: !2516, line: 434, column: 29)
!14665 = !DILocation(line: 435, column: 48, scope: !14664)
!14666 = !DILocation(line: 435, column: 29, scope: !14664)
!14667 = !DILocation(line: 436, column: 24, scope: !14664)
!14668 = !DILocation(line: 436, column: 3, scope: !14664)
!14669 = !DILocation(line: 437, column: 2, scope: !14664)
!14670 = !DILocation(line: 438, column: 1, scope: !14653)
!14671 = distinct !DISubprogram(name: "slice_time", scope: !2516, file: !2516, line: 407, type: !14672, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14674)
!14672 = !DISubroutineType(types: !14673)
!14673 = !{!109, !2408}
!14674 = !{!14675, !14676}
!14675 = !DILocalVariable(name: "curr", arg: 1, scope: !14671, file: !2516, line: 407, type: !2408)
!14676 = !DILocalVariable(name: "ret", scope: !14671, file: !2516, line: 409, type: !109)
!14677 = !DILocation(line: 0, scope: !14671)
!14678 = !DILocation(line: 409, column: 12, scope: !14671)
!14679 = !DILocation(line: 416, column: 2, scope: !14671)
!14680 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2516, file: !2516, line: 440, type: !14681, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14683)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{null, !774, !109}
!14683 = !{!14684, !14685, !14686, !14692}
!14684 = !DILocalVariable(name: "slice", arg: 1, scope: !14680, file: !2516, line: 440, type: !774)
!14685 = !DILocalVariable(name: "prio", arg: 2, scope: !14680, file: !2516, line: 440, type: !109)
!14686 = !DILocalVariable(name: "__i", scope: !14687, file: !2516, line: 442, type: !14688)
!14687 = distinct !DILexicalBlock(scope: !14680, file: !2516, line: 442, column: 2)
!14688 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14689)
!14689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14690)
!14690 = !{!14691}
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14689, file: !253, line: 33, baseType: !109, size: 32)
!14692 = !DILocalVariable(name: "__key", scope: !14687, file: !2516, line: 442, type: !14688)
!14693 = !DILocation(line: 0, scope: !14680)
!14694 = !DILocation(line: 0, scope: !14687)
!14695 = !DILocalVariable(name: "l", arg: 1, scope: !14696, file: !253, line: 136, type: !14699)
!14696 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14697, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14700)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{!14688, !14699}
!14699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!14700 = !{!14695, !14701}
!14701 = !DILocalVariable(name: "k", scope: !14696, file: !253, line: 139, type: !14688)
!14702 = !DILocation(line: 0, scope: !14696, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 442, column: 2, scope: !14687)
!14704 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !14709)
!14705 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14706)
!14706 = !{!14707, !14708}
!14707 = !DILocalVariable(name: "key", scope: !14705, file: !6161, line: 44, type: !32)
!14708 = !DILocalVariable(name: "tmp", scope: !14705, file: !6161, line: 53, type: !32)
!14709 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !14703)
!14710 = !{i64 2326093}
!14711 = !DILocation(line: 0, scope: !14705, inlinedAt: !14709)
!14712 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !14703)
!14713 = distinct !DILexicalBlock(scope: !14714, file: !253, line: 148, column: 2)
!14714 = distinct !DILexicalBlock(scope: !14696, file: !253, line: 148, column: 2)
!14715 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !14703)
!14716 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !14703)
!14717 = distinct !DILexicalBlock(scope: !14713, file: !253, line: 148, column: 2)
!14718 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !14703)
!14719 = !DILocation(line: 443, column: 29, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !2516, line: 442, column: 26)
!14721 = distinct !DILexicalBlock(scope: !14687, file: !2516, line: 442, column: 2)
!14722 = !DILocation(line: 444, column: 17, scope: !14720)
!14723 = !DILocation(line: 445, column: 51, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14720, file: !2516, line: 445, column: 7)
!14725 = !DILocation(line: 445, column: 7, scope: !14720)
!14726 = !DILocation(line: 0, scope: !14720)
!14727 = !DILocation(line: 451, column: 18, scope: !14720)
!14728 = !DILocation(line: 452, column: 3, scope: !14720)
!14729 = !DILocalVariable(name: "key", arg: 2, scope: !14730, file: !253, line: 190, type: !14688)
!14730 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14731, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14733)
!14731 = !DISubroutineType(types: !14732)
!14732 = !{null, !14699, !14688}
!14733 = !{!14734, !14729}
!14734 = !DILocalVariable(name: "l", arg: 1, scope: !14730, file: !253, line: 189, type: !14699)
!14735 = !DILocation(line: 0, scope: !14730, inlinedAt: !14736)
!14736 = distinct !DILocation(line: 442, column: 2, scope: !14721)
!14737 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14736)
!14738 = distinct !DILexicalBlock(scope: !14739, file: !253, line: 194, column: 2)
!14739 = distinct !DILexicalBlock(scope: !14730, file: !253, line: 194, column: 2)
!14740 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !14736)
!14741 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14736)
!14742 = distinct !DILexicalBlock(scope: !14738, file: !253, line: 194, column: 2)
!14743 = !DILocalVariable(name: "key", arg: 1, scope: !14744, file: !6161, line: 84, type: !32)
!14744 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14745)
!14745 = !{!14743}
!14746 = !DILocation(line: 0, scope: !14744, inlinedAt: !14747)
!14747 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !14736)
!14748 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !14747)
!14749 = !{i64 2326910}
!14750 = !DILocation(line: 454, column: 1, scope: !14680)
!14751 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14102, file: !14102, line: 389, type: !7769, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14752)
!14752 = !{!14753}
!14753 = !DILocalVariable(name: "t", arg: 1, scope: !14751, file: !14102, line: 389, type: !110)
!14754 = !DILocation(line: 0, scope: !14751)
!14755 = !DILocalVariable(name: "t", arg: 1, scope: !14756, file: !14102, line: 102, type: !111)
!14756 = distinct !DISubprogram(name: "z_tmcvt", scope: !14102, file: !14102, line: 102, type: !14110, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14757)
!14757 = !{!14755, !14758, !14759, !14760, !14761, !14762, !14763, !14764, !14765, !14766, !14767}
!14758 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14756, file: !14102, line: 102, type: !110)
!14759 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14756, file: !14102, line: 103, type: !110)
!14760 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14756, file: !14102, line: 103, type: !347)
!14761 = !DILocalVariable(name: "result32", arg: 5, scope: !14756, file: !14102, line: 104, type: !347)
!14762 = !DILocalVariable(name: "round_up", arg: 6, scope: !14756, file: !14102, line: 104, type: !347)
!14763 = !DILocalVariable(name: "round_off", arg: 7, scope: !14756, file: !14102, line: 105, type: !347)
!14764 = !DILocalVariable(name: "mul_ratio", scope: !14756, file: !14102, line: 107, type: !347)
!14765 = !DILocalVariable(name: "div_ratio", scope: !14756, file: !14102, line: 109, type: !347)
!14766 = !DILocalVariable(name: "off", scope: !14756, file: !14102, line: 116, type: !111)
!14767 = !DILocalVariable(name: "rdivisor", scope: !14768, file: !14102, line: 119, type: !110)
!14768 = distinct !DILexicalBlock(scope: !14769, file: !14102, line: 118, column: 18)
!14769 = distinct !DILexicalBlock(scope: !14756, file: !14102, line: 118, column: 6)
!14770 = !DILocation(line: 0, scope: !14756, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 392, column: 9, scope: !14751)
!14772 = !DILocation(line: 143, column: 25, scope: !14773, inlinedAt: !14771)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !14102, line: 142, column: 17)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !14102, line: 142, column: 7)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !14102, line: 141, column: 24)
!14776 = distinct !DILexicalBlock(scope: !14777, file: !14102, line: 141, column: 13)
!14777 = distinct !DILexicalBlock(scope: !14756, file: !14102, line: 134, column: 6)
!14778 = !DILocation(line: 392, column: 2, scope: !14751)
!14779 = distinct !DISubprogram(name: "z_time_slice", scope: !2516, file: !2516, line: 502, type: !8422, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14780)
!14780 = !{!14781, !14782}
!14781 = !DILocalVariable(name: "ticks", arg: 1, scope: !14779, file: !2516, line: 502, type: !109)
!14782 = !DILocalVariable(name: "key", scope: !14779, file: !2516, line: 511, type: !14688)
!14783 = !DILocation(line: 0, scope: !14779)
!14784 = !DILocation(line: 0, scope: !14696, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 511, column: 25, scope: !14779)
!14786 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !14785)
!14788 = !DILocation(line: 0, scope: !14705, inlinedAt: !14787)
!14789 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !14785)
!14790 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !14785)
!14791 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !14785)
!14792 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !14785)
!14793 = !DILocation(line: 514, column: 6, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14779, file: !2516, line: 514, column: 6)
!14795 = !DILocation(line: 514, column: 25, scope: !14794)
!14796 = !DILocation(line: 514, column: 22, scope: !14794)
!14797 = !DILocation(line: 514, column: 6, scope: !14779)
!14798 = !DILocation(line: 515, column: 3, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14794, file: !2516, line: 514, column: 35)
!14800 = !DILocation(line: 0, scope: !14730, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 516, column: 3, scope: !14799)
!14802 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14801)
!14803 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !14801)
!14804 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14801)
!14805 = !DILocation(line: 0, scope: !14744, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !14801)
!14807 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !14806)
!14808 = !DILocation(line: 517, column: 3, scope: !14799)
!14809 = !DILocation(line: 519, column: 18, scope: !14779)
!14810 = !DILocation(line: 522, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14779, file: !2516, line: 522, column: 6)
!14812 = !DILocation(line: 522, column: 27, scope: !14811)
!14813 = !DILocation(line: 522, column: 30, scope: !14811)
!14814 = !DILocation(line: 522, column: 6, scope: !14779)
!14815 = !DILocation(line: 523, column: 30, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14817, file: !2516, line: 523, column: 7)
!14817 = distinct !DILexicalBlock(scope: !14811, file: !2516, line: 522, column: 51)
!14818 = !DILocation(line: 523, column: 13, scope: !14816)
!14819 = !DILocation(line: 523, column: 7, scope: !14817)
!14820 = !DILocation(line: 530, column: 10, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14816, file: !2516, line: 523, column: 43)
!14822 = !DILocation(line: 531, column: 3, scope: !14821)
!14823 = !DILocation(line: 532, column: 30, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14816, file: !2516, line: 531, column: 10)
!14825 = !DILocation(line: 535, column: 29, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14811, file: !2516, line: 534, column: 9)
!14827 = !DILocation(line: 0, scope: !14730, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 537, column: 2, scope: !14779)
!14829 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14828)
!14830 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !14828)
!14831 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14828)
!14832 = !DILocation(line: 0, scope: !14744, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !14828)
!14834 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !14833)
!14835 = !DILocation(line: 538, column: 1, scope: !14779)
!14836 = distinct !DISubprogram(name: "sliceable", scope: !2516, file: !2516, line: 468, type: !14837, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14839)
!14837 = !DISubroutineType(types: !14838)
!14838 = !{!347, !2408}
!14839 = !{!14840, !14841}
!14840 = !DILocalVariable(name: "thread", arg: 1, scope: !14836, file: !2516, line: 468, type: !2408)
!14841 = !DILocalVariable(name: "ret", scope: !14836, file: !2516, line: 470, type: !347)
!14842 = !DILocation(line: 0, scope: !14836)
!14843 = !DILocation(line: 470, column: 13, scope: !14836)
!14844 = !DILocation(line: 471, column: 3, scope: !14836)
!14845 = !DILocation(line: 471, column: 7, scope: !14836)
!14846 = !DILocation(line: 472, column: 3, scope: !14836)
!14847 = !DILocation(line: 472, column: 37, scope: !14836)
!14848 = !DILocation(line: 472, column: 24, scope: !14836)
!14849 = !DILocation(line: 472, column: 43, scope: !14836)
!14850 = !DILocation(line: 472, column: 7, scope: !14836)
!14851 = !DILocation(line: 473, column: 3, scope: !14836)
!14852 = !DILocation(line: 473, column: 7, scope: !14836)
!14853 = !DILocation(line: 473, column: 6, scope: !14836)
!14854 = !DILocation(line: 479, column: 2, scope: !14836)
!14855 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2516, file: !2516, line: 482, type: !14856, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!14688, !14688}
!14858 = !{!14859, !14860}
!14859 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14855, file: !2516, line: 482, type: !14688)
!14860 = !DILocalVariable(name: "curr", scope: !14855, file: !2516, line: 484, type: !2408)
!14861 = !DILocation(line: 0, scope: !14855)
!14862 = !DILocation(line: 484, column: 26, scope: !14855)
!14863 = !DILocation(line: 493, column: 7, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14855, file: !2516, line: 493, column: 6)
!14865 = !DILocation(line: 493, column: 6, scope: !14855)
!14866 = !DILocation(line: 494, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !2516, line: 493, column: 49)
!14868 = !DILocation(line: 495, column: 2, scope: !14867)
!14869 = !DILocation(line: 496, column: 2, scope: !14855)
!14870 = !DILocation(line: 499, column: 1, scope: !14855)
!14871 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13483, file: !13483, line: 106, type: !14837, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14872)
!14872 = !{!14873, !14874}
!14873 = !DILocalVariable(name: "thread", arg: 1, scope: !14871, file: !13483, line: 106, type: !2408)
!14874 = !DILocalVariable(name: "state", scope: !14871, file: !13483, line: 108, type: !180)
!14875 = !DILocation(line: 0, scope: !14871)
!14876 = !DILocation(line: 108, column: 31, scope: !14871)
!14877 = !DILocation(line: 110, column: 16, scope: !14871)
!14878 = !DILocation(line: 111, column: 41, scope: !14871)
!14879 = !DILocation(line: 110, column: 2, scope: !14871)
!14880 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2516, file: !2516, line: 393, type: !14654, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14881)
!14881 = !{!14882}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14880, file: !2516, line: 393, type: !2408)
!14883 = !DILocation(line: 0, scope: !14880)
!14884 = !DILocation(line: 395, column: 6, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14880, file: !2516, line: 395, column: 6)
!14886 = !DILocation(line: 395, column: 6, scope: !14880)
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !2516, line: 264, type: !2408)
!14888 = distinct !DISubprogram(name: "dequeue_thread", scope: !2516, file: !2516, line: 264, type: !14654, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14889)
!14889 = !{!14887}
!14890 = !DILocation(line: 0, scope: !14888, inlinedAt: !14891)
!14891 = distinct !DILocation(line: 396, column: 3, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14885, file: !2516, line: 395, column: 34)
!14893 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !14891)
!14894 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !14891)
!14895 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !2516, line: 232, type: !2408)
!14896 = distinct !DISubprogram(name: "runq_remove", scope: !2516, file: !2516, line: 232, type: !14654, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14897)
!14897 = !{!14895}
!14898 = !DILocation(line: 0, scope: !14896, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !14891)
!14900 = distinct !DILexicalBlock(scope: !14901, file: !2516, line: 267, column: 35)
!14901 = distinct !DILexicalBlock(scope: !14888, file: !2516, line: 267, column: 6)
!14902 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !14899)
!14903 = !DILocation(line: 397, column: 2, scope: !14892)
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14905, file: !2516, line: 250, type: !2408)
!14905 = distinct !DISubprogram(name: "queue_thread", scope: !2516, file: !2516, line: 250, type: !14654, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14906)
!14906 = !{!14904}
!14907 = !DILocation(line: 0, scope: !14905, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 398, column: 2, scope: !14880)
!14909 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !14908)
!14910 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !14908)
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !2516, line: 227, type: !2408)
!14912 = distinct !DISubprogram(name: "runq_add", scope: !2516, file: !2516, line: 227, type: !14654, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14913)
!14913 = !{!14911}
!14914 = !DILocation(line: 0, scope: !14912, inlinedAt: !14915)
!14915 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !14908)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !2516, line: 253, column: 35)
!14917 = distinct !DILexicalBlock(scope: !14905, file: !2516, line: 253, column: 6)
!14918 = !DILocalVariable(name: "pq", arg: 1, scope: !14919, file: !2516, line: 181, type: !14922)
!14919 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2516, file: !2516, line: 181, type: !14920, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14923)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !14922, !2408}
!14922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!14923 = !{!14918, !14924, !14925}
!14924 = !DILocalVariable(name: "thread", arg: 2, scope: !14919, file: !2516, line: 182, type: !2408)
!14925 = !DILocalVariable(name: "t", scope: !14919, file: !2516, line: 184, type: !2408)
!14926 = !DILocation(line: 0, scope: !14919, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !14915)
!14928 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !14927)
!14929 = distinct !DILexicalBlock(scope: !14930, file: !2516, line: 186, column: 2)
!14930 = distinct !DILexicalBlock(scope: !14919, file: !2516, line: 186, column: 2)
!14931 = !DILocation(line: 186, column: 2, scope: !14930, inlinedAt: !14927)
!14932 = !DILocation(line: 186, column: 2, scope: !14933, inlinedAt: !14927)
!14933 = distinct !DILexicalBlock(scope: !14929, file: !2516, line: 186, column: 2)
!14934 = !DILocation(line: 188, column: 2, scope: !14935, inlinedAt: !14927)
!14935 = distinct !DILexicalBlock(scope: !14919, file: !2516, line: 188, column: 2)
!14936 = !DILocation(line: 188, column: 2, scope: !14937, inlinedAt: !14927)
!14937 = distinct !DILexicalBlock(scope: !14935, file: !2516, line: 188, column: 2)
!14938 = !DILocation(line: 0, scope: !14935, inlinedAt: !14927)
!14939 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !14927)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !2516, line: 189, column: 7)
!14941 = distinct !DILexicalBlock(scope: !14937, file: !2516, line: 188, column: 56)
!14942 = !DILocation(line: 189, column: 35, scope: !14940, inlinedAt: !14927)
!14943 = !DILocation(line: 189, column: 7, scope: !14941, inlinedAt: !14927)
!14944 = !DILocation(line: 191, column: 21, scope: !14945, inlinedAt: !14927)
!14945 = distinct !DILexicalBlock(scope: !14940, file: !2516, line: 189, column: 40)
!14946 = !DILocation(line: 190, column: 4, scope: !14945, inlinedAt: !14927)
!14947 = !DILocation(line: 192, column: 4, scope: !14945, inlinedAt: !14927)
!14948 = distinct !{!14948, !14934, !14949}
!14949 = !DILocation(line: 194, column: 2, scope: !14935, inlinedAt: !14927)
!14950 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !14927)
!14951 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !14927)
!14952 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !14927)
!14953 = !DILocation(line: 399, column: 25, scope: !14880)
!14954 = !DILocation(line: 399, column: 22, scope: !14880)
!14955 = !DILocation(line: 399, column: 2, scope: !14880)
!14956 = !DILocation(line: 400, column: 1, scope: !14880)
!14957 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13483, file: !13483, line: 136, type: !14837, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14958)
!14958 = !{!14959}
!14959 = !DILocalVariable(name: "thread", arg: 1, scope: !14957, file: !13483, line: 136, type: !2408)
!14960 = !DILocation(line: 0, scope: !14957)
!14961 = !DILocation(line: 138, column: 9, scope: !14957)
!14962 = !DILocation(line: 138, column: 2, scope: !14957)
!14963 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2516, file: !2516, line: 1137, type: !14920, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14964)
!14964 = !{!14965, !14966}
!14965 = !DILocalVariable(name: "pq", arg: 1, scope: !14963, file: !2516, line: 1137, type: !14922)
!14966 = !DILocalVariable(name: "thread", arg: 2, scope: !14963, file: !2516, line: 1137, type: !2408)
!14967 = !DILocation(line: 0, scope: !14963)
!14968 = !DILocation(line: 1139, column: 2, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !2516, line: 1139, column: 2)
!14970 = distinct !DILexicalBlock(scope: !14963, file: !2516, line: 1139, column: 2)
!14971 = !DILocation(line: 1139, column: 2, scope: !14970)
!14972 = !DILocation(line: 1139, column: 2, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14969, file: !2516, line: 1139, column: 2)
!14974 = !DILocation(line: 1141, column: 33, scope: !14963)
!14975 = !DILocation(line: 1141, column: 2, scope: !14963)
!14976 = !DILocation(line: 1142, column: 1, scope: !14963)
!14977 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13483, file: !13483, line: 83, type: !14837, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14978)
!14978 = !{!14979}
!14979 = !DILocalVariable(name: "thread", arg: 1, scope: !14977, file: !13483, line: 83, type: !2408)
!14980 = !DILocation(line: 0, scope: !14977)
!14981 = !DILocation(line: 89, column: 16, scope: !14977)
!14982 = !DILocation(line: 89, column: 2, scope: !14977)
!14983 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14984, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{!2512, !14922}
!14986 = !{!14987}
!14987 = !DILocalVariable(name: "list", arg: 1, scope: !14983, file: !127, line: 294, type: !14922)
!14988 = !DILocation(line: 0, scope: !14983)
!14989 = !DILocation(line: 296, column: 9, scope: !14983)
!14990 = !DILocation(line: 296, column: 49, scope: !14983)
!14991 = !DILocation(line: 296, column: 2, scope: !14983)
!14992 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14993, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !14995)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{null, !2512, !2512}
!14995 = !{!14996, !14997, !14998}
!14996 = !DILocalVariable(name: "successor", arg: 1, scope: !14992, file: !127, line: 443, type: !2512)
!14997 = !DILocalVariable(name: "node", arg: 2, scope: !14992, file: !127, line: 443, type: !2512)
!14998 = !DILocalVariable(name: "prev", scope: !14992, file: !127, line: 445, type: !14999)
!14999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!15000 = !DILocation(line: 0, scope: !14992)
!15001 = !DILocation(line: 445, column: 39, scope: !14992)
!15002 = !DILocation(line: 447, column: 8, scope: !14992)
!15003 = !DILocation(line: 447, column: 13, scope: !14992)
!15004 = !DILocation(line: 448, column: 8, scope: !14992)
!15005 = !DILocation(line: 448, column: 13, scope: !14992)
!15006 = !DILocation(line: 449, column: 8, scope: !14992)
!15007 = !DILocation(line: 449, column: 13, scope: !14992)
!15008 = !DILocation(line: 450, column: 18, scope: !14992)
!15009 = !DILocation(line: 451, column: 1, scope: !14992)
!15010 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !15011, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15013)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{!2512, !14922, !2512}
!15013 = !{!15014, !15015}
!15014 = !DILocalVariable(name: "list", arg: 1, scope: !15010, file: !127, line: 341, type: !14922)
!15015 = !DILocalVariable(name: "node", arg: 2, scope: !15010, file: !127, line: 342, type: !2512)
!15016 = !DILocation(line: 0, scope: !15010)
!15017 = !DILocation(line: 344, column: 15, scope: !15010)
!15018 = !DILocation(line: 344, column: 9, scope: !15010)
!15019 = !DILocation(line: 344, column: 26, scope: !15010)
!15020 = !DILocation(line: 344, column: 2, scope: !15010)
!15021 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !15022, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15024)
!15022 = !DISubroutineType(types: !15023)
!15023 = !{null, !14922, !2512}
!15024 = !{!15025, !15026, !15027}
!15025 = !DILocalVariable(name: "list", arg: 1, scope: !15021, file: !127, line: 404, type: !14922)
!15026 = !DILocalVariable(name: "node", arg: 2, scope: !15021, file: !127, line: 404, type: !2512)
!15027 = !DILocalVariable(name: "tail", scope: !15021, file: !127, line: 406, type: !14999)
!15028 = !DILocation(line: 0, scope: !15021)
!15029 = !DILocation(line: 406, column: 34, scope: !15021)
!15030 = !DILocation(line: 408, column: 8, scope: !15021)
!15031 = !DILocation(line: 408, column: 13, scope: !15021)
!15032 = !DILocation(line: 409, column: 8, scope: !15021)
!15033 = !DILocation(line: 409, column: 13, scope: !15021)
!15034 = !DILocation(line: 411, column: 8, scope: !15021)
!15035 = !DILocation(line: 411, column: 13, scope: !15021)
!15036 = !DILocation(line: 412, column: 13, scope: !15021)
!15037 = !DILocation(line: 413, column: 1, scope: !15021)
!15038 = distinct !DISubprogram(name: "update_cache", scope: !2516, file: !2516, line: 559, type: !8422, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15039)
!15039 = !{!15040, !15041}
!15040 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15038, file: !2516, line: 559, type: !109)
!15041 = !DILocalVariable(name: "thread", scope: !15038, file: !2516, line: 562, type: !2408)
!15042 = !DILocation(line: 0, scope: !15038)
!15043 = !DILocation(line: 239, column: 9, scope: !15044, inlinedAt: !15047)
!15044 = distinct !DISubprogram(name: "runq_best", scope: !2516, file: !2516, line: 237, type: !15045, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!2408}
!15047 = distinct !DILocation(line: 314, column: 28, scope: !15048, inlinedAt: !15051)
!15048 = distinct !DISubprogram(name: "next_up", scope: !2516, file: !2516, line: 312, type: !15045, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15049)
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "thread", scope: !15048, file: !2516, line: 314, type: !2408)
!15051 = distinct !DILocation(line: 562, column: 28, scope: !15038)
!15052 = !DILocation(line: 0, scope: !15048, inlinedAt: !15051)
!15053 = !DILocation(line: 340, column: 17, scope: !15048, inlinedAt: !15051)
!15054 = !DILocation(line: 340, column: 9, scope: !15048, inlinedAt: !15051)
!15055 = !DILocalVariable(name: "thread", arg: 1, scope: !15056, file: !2516, line: 127, type: !2408)
!15056 = distinct !DISubprogram(name: "should_preempt", scope: !2516, file: !2516, line: 127, type: !15057, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15059)
!15057 = !DISubroutineType(types: !15058)
!15058 = !{!347, !2408, !109}
!15059 = !{!15055, !15060}
!15060 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15056, file: !2516, line: 128, type: !109)
!15061 = !DILocation(line: 0, scope: !15056, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 564, column: 6, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15038, file: !2516, line: 564, column: 6)
!15064 = !DILocation(line: 133, column: 17, scope: !15065, inlinedAt: !15062)
!15065 = distinct !DILexicalBlock(scope: !15056, file: !2516, line: 133, column: 6)
!15066 = !DILocation(line: 0, scope: !15063)
!15067 = !DILocation(line: 133, column: 6, scope: !15056, inlinedAt: !15062)
!15068 = !DILocation(line: 137, column: 2, scope: !15069, inlinedAt: !15062)
!15069 = distinct !DILexicalBlock(scope: !15070, file: !2516, line: 137, column: 2)
!15070 = distinct !DILexicalBlock(scope: !15056, file: !2516, line: 137, column: 2)
!15071 = !DILocation(line: 137, column: 2, scope: !15070, inlinedAt: !15062)
!15072 = !DILocation(line: 137, column: 2, scope: !15073, inlinedAt: !15062)
!15073 = distinct !DILexicalBlock(scope: !15069, file: !2516, line: 137, column: 2)
!15074 = !DILocation(line: 140, column: 6, scope: !15075, inlinedAt: !15062)
!15075 = distinct !DILexicalBlock(scope: !15056, file: !2516, line: 140, column: 6)
!15076 = !DILocation(line: 140, column: 6, scope: !15056, inlinedAt: !15062)
!15077 = !DILocation(line: 150, column: 9, scope: !15078, inlinedAt: !15062)
!15078 = distinct !DILexicalBlock(scope: !15056, file: !2516, line: 149, column: 6)
!15079 = !DILocation(line: 149, column: 6, scope: !15056, inlinedAt: !15062)
!15080 = !DILocation(line: 157, column: 6, scope: !15081, inlinedAt: !15062)
!15081 = distinct !DILexicalBlock(scope: !15056, file: !2516, line: 157, column: 6)
!15082 = !DILocation(line: 564, column: 6, scope: !15038)
!15083 = !DILocation(line: 566, column: 14, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15085, file: !2516, line: 566, column: 7)
!15085 = distinct !DILexicalBlock(scope: !15063, file: !2516, line: 564, column: 42)
!15086 = !DILocation(line: 566, column: 7, scope: !15085)
!15087 = !DILocation(line: 567, column: 4, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15084, file: !2516, line: 566, column: 27)
!15089 = !DILocation(line: 568, column: 3, scope: !15088)
!15090 = !DILocation(line: 585, column: 1, scope: !15038)
!15091 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2516, file: !2516, line: 1144, type: !15092, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15094)
!15092 = !DISubroutineType(types: !15093)
!15093 = !{!2408, !14922}
!15094 = !{!15095, !15096, !15097}
!15095 = !DILocalVariable(name: "pq", arg: 1, scope: !15091, file: !2516, line: 1144, type: !14922)
!15096 = !DILocalVariable(name: "thread", scope: !15091, file: !2516, line: 1146, type: !2408)
!15097 = !DILocalVariable(name: "n", scope: !15091, file: !2516, line: 1147, type: !2512)
!15098 = !DILocation(line: 0, scope: !15091)
!15099 = !DILocation(line: 1147, column: 19, scope: !15091)
!15100 = !DILocation(line: 1152, column: 2, scope: !15091)
!15101 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13483, file: !13483, line: 115, type: !14837, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15102)
!15102 = !{!15103}
!15103 = !DILocalVariable(name: "thread", arg: 1, scope: !15101, file: !13483, line: 115, type: !2408)
!15104 = !DILocation(line: 0, scope: !15101)
!15105 = !DILocation(line: 117, column: 46, scope: !15101)
!15106 = !DILocation(line: 117, column: 10, scope: !15101)
!15107 = !DILocation(line: 117, column: 9, scope: !15101)
!15108 = !DILocation(line: 117, column: 2, scope: !15101)
!15109 = distinct !DISubprogram(name: "is_preempt", scope: !2516, file: !2516, line: 62, type: !14672, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15110)
!15110 = !{!15111}
!15111 = !DILocalVariable(name: "thread", arg: 1, scope: !15109, file: !2516, line: 62, type: !2408)
!15112 = !DILocation(line: 0, scope: !15109)
!15113 = !DILocation(line: 65, column: 22, scope: !15109)
!15114 = !DILocation(line: 65, column: 30, scope: !15109)
!15115 = !DILocation(line: 65, column: 2, scope: !15109)
!15116 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13912, file: !13912, line: 35, type: !15117, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15121)
!15117 = !DISubroutineType(types: !15118)
!15118 = !{!347, !15119}
!15119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15120, size: 32)
!15120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2459)
!15121 = !{!15122}
!15122 = !DILocalVariable(name: "to", arg: 1, scope: !15116, file: !13912, line: 35, type: !15119)
!15123 = !DILocation(line: 0, scope: !15116)
!15124 = !DILocation(line: 37, column: 35, scope: !15116)
!15125 = !DILocation(line: 37, column: 10, scope: !15116)
!15126 = !DILocation(line: 37, column: 9, scope: !15116)
!15127 = !DILocation(line: 37, column: 2, scope: !15116)
!15128 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !15129, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15133)
!15129 = !DISubroutineType(types: !15130)
!15130 = !{!347, !15131}
!15131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15132, size: 32)
!15132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!15133 = !{!15134}
!15134 = !DILocalVariable(name: "node", arg: 1, scope: !15128, file: !127, line: 225, type: !15131)
!15135 = !DILocation(line: 0, scope: !15128)
!15136 = !DILocation(line: 227, column: 15, scope: !15128)
!15137 = !DILocation(line: 227, column: 20, scope: !15128)
!15138 = !DILocation(line: 227, column: 2, scope: !15128)
!15139 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !15011, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15140)
!15140 = !{!15141, !15142}
!15141 = !DILocalVariable(name: "list", arg: 1, scope: !15139, file: !127, line: 325, type: !14922)
!15142 = !DILocalVariable(name: "node", arg: 2, scope: !15139, file: !127, line: 326, type: !2512)
!15143 = !DILocation(line: 0, scope: !15139)
!15144 = !DILocation(line: 328, column: 24, scope: !15139)
!15145 = !DILocation(line: 328, column: 15, scope: !15139)
!15146 = !DILocation(line: 328, column: 9, scope: !15139)
!15147 = !DILocation(line: 328, column: 45, scope: !15139)
!15148 = !DILocation(line: 328, column: 2, scope: !15139)
!15149 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !15150, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!347, !14922}
!15152 = !{!15153}
!15153 = !DILocalVariable(name: "list", arg: 1, scope: !15149, file: !127, line: 266, type: !14922)
!15154 = !DILocation(line: 0, scope: !15149)
!15155 = !DILocation(line: 268, column: 15, scope: !15149)
!15156 = !DILocation(line: 268, column: 20, scope: !15149)
!15157 = !DILocation(line: 268, column: 2, scope: !15149)
!15158 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !15159, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{null, !2512}
!15161 = !{!15162, !15163, !15164}
!15162 = !DILocalVariable(name: "node", arg: 1, scope: !15158, file: !127, line: 496, type: !2512)
!15163 = !DILocalVariable(name: "prev", scope: !15158, file: !127, line: 498, type: !14999)
!15164 = !DILocalVariable(name: "next", scope: !15158, file: !127, line: 499, type: !14999)
!15165 = !DILocation(line: 0, scope: !15158)
!15166 = !DILocation(line: 498, column: 34, scope: !15158)
!15167 = !DILocation(line: 499, column: 34, scope: !15158)
!15168 = !DILocation(line: 501, column: 8, scope: !15158)
!15169 = !DILocation(line: 501, column: 13, scope: !15158)
!15170 = !DILocation(line: 502, column: 8, scope: !15158)
!15171 = !DILocation(line: 502, column: 13, scope: !15158)
!15172 = !DILocation(line: 503, column: 2, scope: !15158)
!15173 = !DILocation(line: 504, column: 1, scope: !15158)
!15174 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !15159, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15175)
!15175 = !{!15176}
!15176 = !DILocalVariable(name: "node", arg: 1, scope: !15174, file: !127, line: 211, type: !2512)
!15177 = !DILocation(line: 0, scope: !15174)
!15178 = !DILocation(line: 213, column: 8, scope: !15174)
!15179 = !DILocation(line: 213, column: 13, scope: !15174)
!15180 = !DILocation(line: 214, column: 8, scope: !15174)
!15181 = !DILocation(line: 214, column: 13, scope: !15174)
!15182 = !DILocation(line: 215, column: 1, scope: !15174)
!15183 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13483, file: !13483, line: 131, type: !15184, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15186)
!15184 = !DISubroutineType(types: !15185)
!15185 = !{!347, !2408, !110}
!15186 = !{!15187, !15188}
!15187 = !DILocalVariable(name: "thread", arg: 1, scope: !15183, file: !13483, line: 131, type: !2408)
!15188 = !DILocalVariable(name: "state", arg: 2, scope: !15183, file: !13483, line: 131, type: !110)
!15189 = !DILocation(line: 0, scope: !15183)
!15190 = !DILocation(line: 133, column: 23, scope: !15183)
!15191 = !DILocation(line: 133, column: 10, scope: !15183)
!15192 = !DILocation(line: 133, column: 36, scope: !15183)
!15193 = !DILocation(line: 133, column: 45, scope: !15183)
!15194 = !DILocation(line: 133, column: 2, scope: !15183)
!15195 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13483, file: !13483, line: 211, type: !14486, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15196)
!15196 = !{!15197, !15198}
!15197 = !DILocalVariable(name: "prio", arg: 1, scope: !15195, file: !13483, line: 211, type: !109)
!15198 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15195, file: !13483, line: 211, type: !109)
!15199 = !DILocation(line: 0, scope: !15195)
!15200 = !DILocation(line: 213, column: 9, scope: !15195)
!15201 = !DILocation(line: 213, column: 2, scope: !15195)
!15202 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13483, file: !13483, line: 206, type: !14486, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15203)
!15203 = !{!15204, !15205}
!15204 = !DILocalVariable(name: "prio1", arg: 1, scope: !15202, file: !13483, line: 206, type: !109)
!15205 = !DILocalVariable(name: "prio2", arg: 2, scope: !15202, file: !13483, line: 206, type: !109)
!15206 = !DILocation(line: 0, scope: !15202)
!15207 = !DILocation(line: 208, column: 15, scope: !15202)
!15208 = !DILocation(line: 208, column: 2, scope: !15202)
!15209 = distinct !DISubprogram(name: "z_ready_thread", scope: !2516, file: !2516, line: 635, type: !14654, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15210)
!15210 = !{!15211, !15212, !15214}
!15211 = !DILocalVariable(name: "thread", arg: 1, scope: !15209, file: !2516, line: 635, type: !2408)
!15212 = !DILocalVariable(name: "__i", scope: !15213, file: !2516, line: 637, type: !14688)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !2516, line: 637, column: 2)
!15214 = !DILocalVariable(name: "__key", scope: !15213, file: !2516, line: 637, type: !14688)
!15215 = !DILocation(line: 0, scope: !15209)
!15216 = !DILocation(line: 0, scope: !15213)
!15217 = !DILocation(line: 0, scope: !14696, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 637, column: 2, scope: !15213)
!15219 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15218)
!15221 = !DILocation(line: 0, scope: !14705, inlinedAt: !15220)
!15222 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15218)
!15223 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15218)
!15224 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15218)
!15225 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15218)
!15226 = !DILocation(line: 639, column: 4, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !2516, line: 638, column: 41)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !2516, line: 638, column: 7)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !2516, line: 637, column: 26)
!15230 = distinct !DILexicalBlock(scope: !15213, file: !2516, line: 637, column: 2)
!15231 = !DILocation(line: 0, scope: !14730, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 637, column: 2, scope: !15230)
!15233 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15232)
!15234 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15232)
!15235 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15232)
!15236 = !DILocation(line: 0, scope: !14744, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15232)
!15238 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15237)
!15239 = !DILocation(line: 642, column: 1, scope: !15209)
!15240 = distinct !DISubprogram(name: "ready_thread", scope: !2516, file: !2516, line: 617, type: !14654, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15241)
!15241 = !{!15242}
!15242 = !DILocalVariable(name: "thread", arg: 1, scope: !15240, file: !2516, line: 617, type: !2408)
!15243 = !DILocation(line: 0, scope: !15240)
!15244 = !DILocation(line: 626, column: 7, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15240, file: !2516, line: 626, column: 6)
!15246 = !DILocation(line: 626, column: 34, scope: !15245)
!15247 = !DILocation(line: 626, column: 37, scope: !15245)
!15248 = !DILocation(line: 626, column: 6, scope: !15240)
!15249 = !DILocation(line: 0, scope: !14905, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 629, column: 3, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15245, file: !2516, line: 626, column: 64)
!15252 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !15250)
!15253 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !15250)
!15254 = !DILocation(line: 0, scope: !14912, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !15250)
!15256 = !DILocation(line: 0, scope: !14919, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !15255)
!15258 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !15257)
!15259 = !DILocation(line: 186, column: 2, scope: !14930, inlinedAt: !15257)
!15260 = !DILocation(line: 186, column: 2, scope: !14933, inlinedAt: !15257)
!15261 = !DILocation(line: 188, column: 2, scope: !14935, inlinedAt: !15257)
!15262 = !DILocation(line: 188, column: 2, scope: !14937, inlinedAt: !15257)
!15263 = !DILocation(line: 0, scope: !14935, inlinedAt: !15257)
!15264 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !15257)
!15265 = !DILocation(line: 189, column: 35, scope: !14940, inlinedAt: !15257)
!15266 = !DILocation(line: 189, column: 7, scope: !14941, inlinedAt: !15257)
!15267 = !DILocation(line: 191, column: 21, scope: !14945, inlinedAt: !15257)
!15268 = !DILocation(line: 190, column: 4, scope: !14945, inlinedAt: !15257)
!15269 = !DILocation(line: 192, column: 4, scope: !14945, inlinedAt: !15257)
!15270 = distinct !{!15270, !15261, !15271}
!15271 = !DILocation(line: 194, column: 2, scope: !14935, inlinedAt: !15257)
!15272 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15257)
!15273 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15257)
!15274 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15257)
!15275 = !DILocation(line: 630, column: 3, scope: !15251)
!15276 = !DILocation(line: 632, column: 2, scope: !15251)
!15277 = !DILocation(line: 633, column: 1, scope: !15240)
!15278 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13483, file: !13483, line: 120, type: !14837, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15279)
!15279 = !{!15280}
!15280 = !DILocalVariable(name: "thread", arg: 1, scope: !15278, file: !13483, line: 120, type: !2408)
!15281 = !DILocation(line: 0, scope: !15278)
!15282 = !DILocation(line: 122, column: 12, scope: !15278)
!15283 = !DILocation(line: 122, column: 62, scope: !15278)
!15284 = !DILocation(line: 123, column: 4, scope: !15278)
!15285 = !DILocation(line: 122, column: 2, scope: !15278)
!15286 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2516, file: !2516, line: 644, type: !14654, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15287)
!15287 = !{!15288, !15289, !15291}
!15288 = !DILocalVariable(name: "thread", arg: 1, scope: !15286, file: !2516, line: 644, type: !2408)
!15289 = !DILocalVariable(name: "__i", scope: !15290, file: !2516, line: 646, type: !14688)
!15290 = distinct !DILexicalBlock(scope: !15286, file: !2516, line: 646, column: 2)
!15291 = !DILocalVariable(name: "__key", scope: !15290, file: !2516, line: 646, type: !14688)
!15292 = !DILocation(line: 0, scope: !15286)
!15293 = !DILocation(line: 0, scope: !15290)
!15294 = !DILocation(line: 0, scope: !14696, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 646, column: 2, scope: !15290)
!15296 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15295)
!15298 = !DILocation(line: 0, scope: !14705, inlinedAt: !15297)
!15299 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15295)
!15300 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15295)
!15301 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15295)
!15302 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15295)
!15303 = !DILocation(line: 647, column: 3, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15305, file: !2516, line: 646, column: 26)
!15305 = distinct !DILexicalBlock(scope: !15290, file: !2516, line: 646, column: 2)
!15306 = !DILocation(line: 0, scope: !14730, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 646, column: 2, scope: !15305)
!15308 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15307)
!15309 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15307)
!15310 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15307)
!15311 = !DILocation(line: 0, scope: !14744, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15307)
!15313 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15312)
!15314 = !DILocation(line: 649, column: 1, scope: !15286)
!15315 = distinct !DISubprogram(name: "z_sched_start", scope: !2516, file: !2516, line: 651, type: !14654, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15316)
!15316 = !{!15317, !15318}
!15317 = !DILocalVariable(name: "thread", arg: 1, scope: !15315, file: !2516, line: 651, type: !2408)
!15318 = !DILocalVariable(name: "key", scope: !15315, file: !2516, line: 653, type: !14688)
!15319 = !DILocation(line: 0, scope: !15315)
!15320 = !DILocation(line: 0, scope: !14696, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 653, column: 25, scope: !15315)
!15322 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15321)
!15324 = !DILocation(line: 0, scope: !14705, inlinedAt: !15323)
!15325 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15321)
!15326 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15321)
!15327 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15321)
!15328 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15321)
!15329 = !DILocation(line: 655, column: 6, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15315, file: !2516, line: 655, column: 6)
!15331 = !DILocation(line: 655, column: 6, scope: !15315)
!15332 = !DILocation(line: 0, scope: !14730, inlinedAt: !15333)
!15333 = distinct !DILocation(line: 656, column: 3, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15330, file: !2516, line: 655, column: 36)
!15335 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15333)
!15336 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15333)
!15337 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15333)
!15338 = !DILocation(line: 0, scope: !14744, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15333)
!15340 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15339)
!15341 = !DILocation(line: 657, column: 3, scope: !15334)
!15342 = !DILocation(line: 660, column: 2, scope: !15315)
!15343 = !DILocation(line: 661, column: 2, scope: !15315)
!15344 = !DILocation(line: 662, column: 2, scope: !15315)
!15345 = !DILocation(line: 663, column: 1, scope: !15315)
!15346 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13483, file: !13483, line: 126, type: !14837, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15347)
!15347 = !{!15348}
!15348 = !DILocalVariable(name: "thread", arg: 1, scope: !15346, file: !13483, line: 126, type: !2408)
!15349 = !DILocation(line: 0, scope: !15346)
!15350 = !DILocation(line: 128, column: 23, scope: !15346)
!15351 = !DILocation(line: 128, column: 36, scope: !15346)
!15352 = !DILocation(line: 128, column: 56, scope: !15346)
!15353 = !DILocation(line: 128, column: 2, scope: !15346)
!15354 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13483, file: !13483, line: 155, type: !14654, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15355)
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "thread", arg: 1, scope: !15354, file: !13483, line: 155, type: !2408)
!15357 = !DILocation(line: 0, scope: !15354)
!15358 = !DILocation(line: 157, column: 15, scope: !15354)
!15359 = !DILocation(line: 157, column: 28, scope: !15354)
!15360 = !DILocation(line: 158, column: 1, scope: !15354)
!15361 = distinct !DISubprogram(name: "z_reschedule", scope: !2516, file: !2516, line: 967, type: !14731, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15362)
!15362 = !{!15363, !15364}
!15363 = !DILocalVariable(name: "lock", arg: 1, scope: !15361, file: !2516, line: 967, type: !14699)
!15364 = !DILocalVariable(name: "key", arg: 2, scope: !15361, file: !2516, line: 967, type: !14688)
!15365 = !DILocation(line: 0, scope: !15361)
!15366 = !DILocation(line: 969, column: 6, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15361, file: !2516, line: 969, column: 6)
!15368 = !DILocation(line: 969, column: 23, scope: !15367)
!15369 = !DILocation(line: 969, column: 26, scope: !15367)
!15370 = !DILocation(line: 969, column: 6, scope: !15361)
!15371 = !DILocalVariable(name: "key", arg: 2, scope: !15372, file: !13587, line: 193, type: !14688)
!15372 = distinct !DISubprogram(name: "z_swap", scope: !13587, file: !13587, line: 193, type: !15373, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15375)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{!109, !14699, !14688}
!15375 = !{!15376, !15371}
!15376 = !DILocalVariable(name: "lock", arg: 1, scope: !15372, file: !13587, line: 193, type: !14699)
!15377 = !DILocation(line: 0, scope: !15372, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 970, column: 3, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15367, file: !2516, line: 969, column: 39)
!15380 = !DILocalVariable(name: "l", arg: 1, scope: !15381, file: !253, line: 221, type: !14699)
!15381 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !15382, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15384)
!15382 = !DISubroutineType(types: !15383)
!15383 = !{null, !14699}
!15384 = !{!15380}
!15385 = !DILocation(line: 0, scope: !15381, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !15378)
!15387 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15386)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !253, line: 225, column: 2)
!15389 = distinct !DILexicalBlock(scope: !15381, file: !253, line: 225, column: 2)
!15390 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !15386)
!15391 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !15386)
!15392 = distinct !DILexicalBlock(scope: !15388, file: !253, line: 225, column: 2)
!15393 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !15378)
!15394 = !DILocation(line: 971, column: 2, scope: !15379)
!15395 = !DILocation(line: 0, scope: !14730, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 972, column: 3, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15367, file: !2516, line: 971, column: 9)
!15398 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15396)
!15399 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15396)
!15400 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15396)
!15401 = !DILocation(line: 0, scope: !14744, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15396)
!15403 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15402)
!15404 = !DILocation(line: 975, column: 1, scope: !15361)
!15405 = distinct !DISubprogram(name: "resched", scope: !2516, file: !2516, line: 940, type: !15406, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15408)
!15406 = !DISubroutineType(types: !15407)
!15407 = !{!347, !110}
!15408 = !{!15409}
!15409 = !DILocalVariable(name: "key", arg: 1, scope: !15405, file: !2516, line: 940, type: !110)
!15410 = !DILocation(line: 0, scope: !15405)
!15411 = !DILocalVariable(name: "key", arg: 1, scope: !15412, file: !6161, line: 112, type: !32)
!15412 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6161, file: !6161, line: 112, type: !15413, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15415)
!15413 = !DISubroutineType(types: !15414)
!15414 = !{!347, !32}
!15415 = !{!15411}
!15416 = !DILocation(line: 0, scope: !15412, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 946, column: 9, scope: !15405)
!15418 = !DILocation(line: 115, column: 13, scope: !15412, inlinedAt: !15417)
!15419 = !DILocation(line: 946, column: 32, scope: !15405)
!15420 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !15424)
!15421 = distinct !DISubprogram(name: "__get_IPSR", scope: !6482, file: !6482, line: 1027, type: !6569, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15422)
!15422 = !{!15423}
!15423 = !DILocalVariable(name: "result", scope: !15421, file: !6482, line: 1029, type: !110)
!15424 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !15426)
!15425 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7534, file: !7534, line: 46, type: !7535, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!15426 = distinct !DILocation(line: 946, column: 36, scope: !15405)
!15427 = !{i64 3772527}
!15428 = !DILocation(line: 0, scope: !15421, inlinedAt: !15424)
!15429 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !15426)
!15430 = !DILocation(line: 946, column: 2, scope: !15405)
!15431 = distinct !DISubprogram(name: "need_swap", scope: !2516, file: !2516, line: 953, type: !7535, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15432)
!15432 = !{!15433}
!15433 = !DILocalVariable(name: "new_thread", scope: !15431, file: !2516, line: 959, type: !2408)
!15434 = !DILocation(line: 962, column: 31, scope: !15431)
!15435 = !DILocation(line: 0, scope: !15431)
!15436 = !DILocation(line: 963, column: 23, scope: !15431)
!15437 = !DILocation(line: 963, column: 20, scope: !15431)
!15438 = !DILocation(line: 963, column: 2, scope: !15431)
!15439 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13587, file: !13587, line: 181, type: !6492, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15440)
!15440 = !{!15441, !15442}
!15441 = !DILocalVariable(name: "key", arg: 1, scope: !15439, file: !13587, line: 181, type: !32)
!15442 = !DILocalVariable(name: "ret", scope: !15439, file: !13587, line: 183, type: !109)
!15443 = !DILocation(line: 0, scope: !15439)
!15444 = !DILocation(line: 185, column: 8, scope: !15439)
!15445 = !DILocation(line: 186, column: 2, scope: !15439)
!15446 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2516, file: !2516, line: 665, type: !14654, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15447)
!15447 = !{!15448, !15449, !15451}
!15448 = !DILocalVariable(name: "thread", arg: 1, scope: !15446, file: !2516, line: 665, type: !2408)
!15449 = !DILocalVariable(name: "__i", scope: !15450, file: !2516, line: 671, type: !14688)
!15450 = distinct !DILexicalBlock(scope: !15446, file: !2516, line: 671, column: 2)
!15451 = !DILocalVariable(name: "__key", scope: !15450, file: !2516, line: 671, type: !14688)
!15452 = !DILocation(line: 0, scope: !15446)
!15453 = !DILocation(line: 669, column: 8, scope: !15446)
!15454 = !DILocation(line: 0, scope: !15450)
!15455 = !DILocation(line: 0, scope: !14696, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 671, column: 2, scope: !15450)
!15457 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15456)
!15459 = !DILocation(line: 0, scope: !14705, inlinedAt: !15458)
!15460 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15456)
!15461 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15456)
!15462 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15456)
!15463 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15456)
!15464 = !DILocation(line: 672, column: 7, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !2516, line: 672, column: 7)
!15466 = distinct !DILexicalBlock(scope: !15467, file: !2516, line: 671, column: 26)
!15467 = distinct !DILexicalBlock(scope: !15450, file: !2516, line: 671, column: 2)
!15468 = !DILocation(line: 672, column: 7, scope: !15466)
!15469 = !DILocation(line: 0, scope: !14888, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 673, column: 4, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !2516, line: 672, column: 35)
!15472 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15470)
!15473 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15470)
!15474 = !DILocation(line: 0, scope: !14896, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15470)
!15476 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15475)
!15477 = !DILocation(line: 674, column: 3, scope: !15471)
!15478 = !DILocation(line: 675, column: 3, scope: !15466)
!15479 = !DILocation(line: 676, column: 26, scope: !15466)
!15480 = !DILocation(line: 676, column: 23, scope: !15466)
!15481 = !DILocation(line: 676, column: 3, scope: !15466)
!15482 = !DILocation(line: 0, scope: !14730, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 671, column: 2, scope: !15467)
!15484 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15483)
!15485 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15483)
!15486 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15483)
!15487 = !DILocation(line: 0, scope: !14744, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15483)
!15489 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15488)
!15490 = !DILocation(line: 679, column: 16, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15446, file: !2516, line: 679, column: 6)
!15492 = !DILocation(line: 679, column: 13, scope: !15491)
!15493 = !DILocation(line: 679, column: 6, scope: !15446)
!15494 = !DILocation(line: 680, column: 3, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15491, file: !2516, line: 679, column: 26)
!15496 = !DILocation(line: 681, column: 2, scope: !15495)
!15497 = !DILocation(line: 684, column: 1, scope: !15446)
!15498 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13912, file: !13912, line: 52, type: !14672, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15499)
!15499 = !{!15500}
!15500 = !DILocalVariable(name: "thread", arg: 1, scope: !15498, file: !13912, line: 52, type: !2408)
!15501 = !DILocation(line: 0, scope: !15498)
!15502 = !DILocation(line: 54, column: 39, scope: !15498)
!15503 = !DILocation(line: 54, column: 9, scope: !15498)
!15504 = !DILocation(line: 54, column: 2, scope: !15498)
!15505 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13483, file: !13483, line: 141, type: !14654, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15506)
!15506 = !{!15507}
!15507 = !DILocalVariable(name: "thread", arg: 1, scope: !15505, file: !13483, line: 141, type: !2408)
!15508 = !DILocation(line: 0, scope: !15505)
!15509 = !DILocation(line: 143, column: 15, scope: !15505)
!15510 = !DILocation(line: 143, column: 28, scope: !15505)
!15511 = !DILocation(line: 146, column: 1, scope: !15505)
!15512 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13483, file: !13483, line: 73, type: !3153, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!15513 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 75, column: 30, scope: !15512)
!15515 = !DILocation(line: 0, scope: !14705, inlinedAt: !15514)
!15516 = !DILocation(line: 75, column: 9, scope: !15512)
!15517 = !DILocation(line: 76, column: 1, scope: !15512)
!15518 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2516, file: !2516, line: 977, type: !6579, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15519)
!15519 = !{!15520}
!15520 = !DILocalVariable(name: "key", arg: 1, scope: !15518, file: !2516, line: 977, type: !110)
!15521 = !DILocation(line: 0, scope: !15518)
!15522 = !DILocation(line: 979, column: 6, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15518, file: !2516, line: 979, column: 6)
!15524 = !DILocation(line: 979, column: 6, scope: !15518)
!15525 = !DILocation(line: 980, column: 3, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15523, file: !2516, line: 979, column: 20)
!15527 = !DILocation(line: 981, column: 2, scope: !15526)
!15528 = !DILocation(line: 0, scope: !14744, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 982, column: 3, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15523, file: !2516, line: 981, column: 9)
!15531 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15529)
!15532 = !DILocation(line: 985, column: 1, scope: !15518)
!15533 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2516, file: !2516, line: 695, type: !14654, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15534)
!15534 = !{!15535, !15536}
!15535 = !DILocalVariable(name: "thread", arg: 1, scope: !15533, file: !2516, line: 695, type: !2408)
!15536 = !DILocalVariable(name: "key", scope: !15533, file: !2516, line: 699, type: !14688)
!15537 = !DILocation(line: 0, scope: !15533)
!15538 = !DILocation(line: 0, scope: !14696, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 699, column: 25, scope: !15533)
!15540 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15539)
!15542 = !DILocation(line: 0, scope: !14705, inlinedAt: !15541)
!15543 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15539)
!15544 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15539)
!15545 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15539)
!15546 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15539)
!15547 = !DILocation(line: 702, column: 7, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15533, file: !2516, line: 702, column: 6)
!15549 = !DILocation(line: 702, column: 6, scope: !15533)
!15550 = !DILocation(line: 0, scope: !14730, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 703, column: 3, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15548, file: !2516, line: 702, column: 38)
!15553 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15551)
!15554 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15551)
!15555 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15551)
!15556 = !DILocation(line: 0, scope: !14744, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15551)
!15558 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15557)
!15559 = !DILocation(line: 704, column: 3, scope: !15552)
!15560 = !DILocation(line: 707, column: 2, scope: !15533)
!15561 = !DILocation(line: 708, column: 2, scope: !15533)
!15562 = !DILocation(line: 710, column: 2, scope: !15533)
!15563 = !DILocation(line: 713, column: 1, scope: !15533)
!15564 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13483, file: !13483, line: 96, type: !14837, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15565)
!15565 = !{!15566}
!15566 = !DILocalVariable(name: "thread", arg: 1, scope: !15564, file: !13483, line: 96, type: !2408)
!15567 = !DILocation(line: 0, scope: !15564)
!15568 = !DILocation(line: 98, column: 23, scope: !15564)
!15569 = !DILocation(line: 98, column: 36, scope: !15564)
!15570 = !DILocation(line: 98, column: 57, scope: !15564)
!15571 = !DILocation(line: 98, column: 2, scope: !15564)
!15572 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13483, file: !13483, line: 148, type: !14654, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15573)
!15573 = !{!15574}
!15574 = !DILocalVariable(name: "thread", arg: 1, scope: !15572, file: !13483, line: 148, type: !2408)
!15575 = !DILocation(line: 0, scope: !15572)
!15576 = !DILocation(line: 150, column: 15, scope: !15572)
!15577 = !DILocation(line: 150, column: 28, scope: !15572)
!15578 = !DILocation(line: 153, column: 1, scope: !15572)
!15579 = distinct !DISubprogram(name: "z_pend_thread", scope: !2516, file: !2516, line: 770, type: !15580, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15586)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{null, !2408, !2439, !15582}
!15582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15583)
!15583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15584)
!15584 = !{!15585}
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15583, file: !104, line: 66, baseType: !103, size: 64)
!15586 = !{!15587, !15588, !15589, !15590, !15592}
!15587 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !2516, line: 770, type: !2408)
!15588 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15579, file: !2516, line: 770, type: !2439)
!15589 = !DILocalVariable(name: "timeout", arg: 3, scope: !15579, file: !2516, line: 771, type: !15582)
!15590 = !DILocalVariable(name: "__i", scope: !15591, file: !2516, line: 774, type: !14688)
!15591 = distinct !DILexicalBlock(scope: !15579, file: !2516, line: 774, column: 2)
!15592 = !DILocalVariable(name: "__key", scope: !15591, file: !2516, line: 774, type: !14688)
!15593 = !DILocation(line: 0, scope: !15579)
!15594 = !DILocation(line: 773, column: 2, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15596, file: !2516, line: 773, column: 2)
!15596 = distinct !DILexicalBlock(scope: !15579, file: !2516, line: 773, column: 2)
!15597 = !DILocation(line: 773, column: 2, scope: !15596)
!15598 = !DILocation(line: 773, column: 2, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15595, file: !2516, line: 773, column: 2)
!15600 = !DILocation(line: 0, scope: !15591)
!15601 = !DILocation(line: 0, scope: !14696, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 774, column: 2, scope: !15591)
!15603 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15602)
!15605 = !DILocation(line: 0, scope: !14705, inlinedAt: !15604)
!15606 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15602)
!15607 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15602)
!15608 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15602)
!15609 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15602)
!15610 = !DILocation(line: 775, column: 3, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !2516, line: 774, column: 26)
!15612 = distinct !DILexicalBlock(scope: !15591, file: !2516, line: 774, column: 2)
!15613 = !DILocation(line: 0, scope: !14730, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 774, column: 2, scope: !15612)
!15615 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15614)
!15616 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15614)
!15617 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15614)
!15618 = !DILocation(line: 0, scope: !14744, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15614)
!15620 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15619)
!15621 = !DILocation(line: 777, column: 1, scope: !15579)
!15622 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2516, file: !2516, line: 79, type: !14837, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15623)
!15623 = !{!15624}
!15624 = !DILocalVariable(name: "thread", arg: 1, scope: !15622, file: !2516, line: 79, type: !2408)
!15625 = !DILocation(line: 0, scope: !15622)
!15626 = !DILocation(line: 81, column: 23, scope: !15622)
!15627 = !DILocation(line: 81, column: 36, scope: !15622)
!15628 = !DILocation(line: 81, column: 53, scope: !15622)
!15629 = !DILocation(line: 81, column: 2, scope: !15622)
!15630 = distinct !DISubprogram(name: "pend_locked", scope: !2516, file: !2516, line: 760, type: !15580, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15631)
!15631 = !{!15632, !15633, !15634}
!15632 = !DILocalVariable(name: "thread", arg: 1, scope: !15630, file: !2516, line: 760, type: !2408)
!15633 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15630, file: !2516, line: 760, type: !2439)
!15634 = !DILocalVariable(name: "timeout", arg: 3, scope: !15630, file: !2516, line: 761, type: !15582)
!15635 = !DILocation(line: 0, scope: !15630)
!15636 = !DILocation(line: 766, column: 2, scope: !15630)
!15637 = !DILocation(line: 767, column: 2, scope: !15630)
!15638 = !DILocation(line: 768, column: 1, scope: !15630)
!15639 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2516, file: !2516, line: 740, type: !15640, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15642)
!15640 = !DISubroutineType(types: !15641)
!15641 = !{null, !2408, !2439}
!15642 = !{!15643, !15644}
!15643 = !DILocalVariable(name: "thread", arg: 1, scope: !15639, file: !2516, line: 740, type: !2408)
!15644 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15639, file: !2516, line: 740, type: !2439)
!15645 = !DILocation(line: 0, scope: !15639)
!15646 = !DILocation(line: 742, column: 2, scope: !15639)
!15647 = !DILocation(line: 743, column: 2, scope: !15639)
!15648 = !DILocation(line: 747, column: 13, scope: !15649)
!15649 = distinct !DILexicalBlock(scope: !15639, file: !2516, line: 747, column: 6)
!15650 = !DILocation(line: 747, column: 6, scope: !15639)
!15651 = !DILocation(line: 748, column: 16, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15649, file: !2516, line: 747, column: 22)
!15653 = !DILocation(line: 748, column: 26, scope: !15652)
!15654 = !DILocation(line: 749, column: 28, scope: !15652)
!15655 = !DILocation(line: 0, scope: !14919, inlinedAt: !15656)
!15656 = distinct !DILocation(line: 749, column: 3, scope: !15652)
!15657 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !15656)
!15658 = !DILocation(line: 186, column: 2, scope: !14930, inlinedAt: !15656)
!15659 = !DILocation(line: 186, column: 2, scope: !14933, inlinedAt: !15656)
!15660 = !DILocation(line: 188, column: 2, scope: !14935, inlinedAt: !15656)
!15661 = !DILocation(line: 188, column: 2, scope: !14937, inlinedAt: !15656)
!15662 = !DILocation(line: 0, scope: !14935, inlinedAt: !15656)
!15663 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !15656)
!15664 = !DILocation(line: 189, column: 35, scope: !14940, inlinedAt: !15656)
!15665 = !DILocation(line: 189, column: 7, scope: !14941, inlinedAt: !15656)
!15666 = !DILocation(line: 191, column: 21, scope: !14945, inlinedAt: !15656)
!15667 = !DILocation(line: 190, column: 4, scope: !14945, inlinedAt: !15656)
!15668 = !DILocation(line: 192, column: 4, scope: !14945, inlinedAt: !15656)
!15669 = distinct !{!15669, !15660, !15670}
!15670 = !DILocation(line: 194, column: 2, scope: !14935, inlinedAt: !15656)
!15671 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !15656)
!15672 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !15656)
!15673 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !15656)
!15674 = !DILocation(line: 751, column: 1, scope: !15639)
!15675 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2516, file: !2516, line: 753, type: !15676, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15678)
!15676 = !DISubroutineType(types: !15677)
!15677 = !{null, !2408, !15582}
!15678 = !{!15679, !15680}
!15679 = !DILocalVariable(name: "thread", arg: 1, scope: !15675, file: !2516, line: 753, type: !2408)
!15680 = !DILocalVariable(name: "timeout", arg: 2, scope: !15675, file: !2516, line: 753, type: !15582)
!15681 = !DILocation(line: 0, scope: !15675)
!15682 = !DILocation(line: 755, column: 7, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15675, file: !2516, line: 755, column: 6)
!15684 = !DILocation(line: 755, column: 6, scope: !15675)
!15685 = !DILocation(line: 756, column: 3, scope: !15686)
!15686 = distinct !DILexicalBlock(scope: !15683, file: !2516, line: 755, column: 41)
!15687 = !DILocation(line: 757, column: 2, scope: !15686)
!15688 = !DILocation(line: 758, column: 1, scope: !15675)
!15689 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13912, file: !13912, line: 47, type: !15676, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15690)
!15690 = !{!15691, !15692}
!15691 = !DILocalVariable(name: "thread", arg: 1, scope: !15689, file: !13912, line: 47, type: !2408)
!15692 = !DILocalVariable(name: "ticks", arg: 2, scope: !15689, file: !13912, line: 47, type: !15582)
!15693 = !DILocation(line: 0, scope: !15689)
!15694 = !DILocation(line: 49, column: 30, scope: !15689)
!15695 = !DILocation(line: 49, column: 2, scope: !15689)
!15696 = !DILocation(line: 50, column: 1, scope: !15689)
!15697 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2516, file: !2516, line: 795, type: !2465, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15698)
!15698 = !{!15699, !15700, !15701, !15703, !15704}
!15699 = !DILocalVariable(name: "timeout", arg: 1, scope: !15697, file: !2516, line: 795, type: !2467)
!15700 = !DILocalVariable(name: "thread", scope: !15697, file: !2516, line: 797, type: !2408)
!15701 = !DILocalVariable(name: "__i", scope: !15702, file: !2516, line: 800, type: !14688)
!15702 = distinct !DILexicalBlock(scope: !15697, file: !2516, line: 800, column: 2)
!15703 = !DILocalVariable(name: "__key", scope: !15702, file: !2516, line: 800, type: !14688)
!15704 = !DILocalVariable(name: "killed", scope: !15705, file: !2516, line: 801, type: !347)
!15705 = distinct !DILexicalBlock(scope: !15706, file: !2516, line: 800, column: 26)
!15706 = distinct !DILexicalBlock(scope: !15702, file: !2516, line: 800, column: 2)
!15707 = !DILocation(line: 0, scope: !15697)
!15708 = !DILocation(line: 797, column: 28, scope: !15697)
!15709 = !DILocation(line: 0, scope: !15702)
!15710 = !DILocation(line: 0, scope: !14696, inlinedAt: !15711)
!15711 = distinct !DILocation(line: 800, column: 2, scope: !15702)
!15712 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15711)
!15714 = !DILocation(line: 0, scope: !14705, inlinedAt: !15713)
!15715 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15711)
!15716 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15711)
!15717 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15711)
!15718 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15711)
!15719 = !DILocation(line: 801, column: 27, scope: !15705)
!15720 = !DILocation(line: 801, column: 32, scope: !15705)
!15721 = !DILocation(line: 801, column: 61, scope: !15705)
!15722 = !DILocation(line: 0, scope: !15705)
!15723 = !DILocation(line: 804, column: 7, scope: !15705)
!15724 = !DILocation(line: 805, column: 21, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !2516, line: 805, column: 8)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !2516, line: 804, column: 16)
!15727 = distinct !DILexicalBlock(scope: !15705, file: !2516, line: 804, column: 7)
!15728 = !DILocation(line: 805, column: 31, scope: !15725)
!15729 = !DILocation(line: 805, column: 8, scope: !15726)
!15730 = !DILocation(line: 806, column: 5, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15725, file: !2516, line: 805, column: 40)
!15732 = !DILocation(line: 807, column: 4, scope: !15731)
!15733 = !DILocation(line: 808, column: 4, scope: !15726)
!15734 = !DILocation(line: 809, column: 4, scope: !15726)
!15735 = !DILocation(line: 810, column: 4, scope: !15726)
!15736 = !DILocation(line: 811, column: 3, scope: !15726)
!15737 = !DILocation(line: 0, scope: !14730, inlinedAt: !15738)
!15738 = distinct !DILocation(line: 800, column: 2, scope: !15706)
!15739 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15738)
!15740 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15738)
!15741 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15738)
!15742 = !DILocation(line: 0, scope: !14744, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15738)
!15744 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15743)
!15745 = !DILocation(line: 813, column: 1, scope: !15697)
!15746 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2516, file: !2516, line: 779, type: !14654, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15747)
!15747 = !{!15748}
!15748 = !DILocalVariable(name: "thread", arg: 1, scope: !15746, file: !2516, line: 779, type: !2408)
!15749 = !DILocation(line: 0, scope: !15746)
!15750 = !DILocation(line: 781, column: 21, scope: !15746)
!15751 = !DILocation(line: 781, column: 2, scope: !15746)
!15752 = !DILocation(line: 782, column: 2, scope: !15746)
!15753 = !DILocation(line: 783, column: 15, scope: !15746)
!15754 = !DILocation(line: 783, column: 25, scope: !15746)
!15755 = !DILocation(line: 784, column: 1, scope: !15746)
!15756 = distinct !DISubprogram(name: "pended_on_thread", scope: !2516, file: !2516, line: 724, type: !15757, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15759)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!2439, !2408}
!15759 = !{!15760}
!15760 = !DILocalVariable(name: "thread", arg: 1, scope: !15756, file: !2516, line: 724, type: !2408)
!15761 = !DILocation(line: 0, scope: !15756)
!15762 = !DILocation(line: 726, column: 2, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15764, file: !2516, line: 726, column: 2)
!15764 = distinct !DILexicalBlock(scope: !15756, file: !2516, line: 726, column: 2)
!15765 = !DILocation(line: 726, column: 2, scope: !15764)
!15766 = !DILocation(line: 726, column: 2, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !2516, line: 726, column: 2)
!15768 = !DILocation(line: 728, column: 2, scope: !15756)
!15769 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13483, file: !13483, line: 165, type: !14654, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15770)
!15770 = !{!15771}
!15771 = !DILocalVariable(name: "thread", arg: 1, scope: !15769, file: !13483, line: 165, type: !2408)
!15772 = !DILocation(line: 0, scope: !15769)
!15773 = !DILocation(line: 167, column: 15, scope: !15769)
!15774 = !DILocation(line: 167, column: 28, scope: !15769)
!15775 = !DILocation(line: 168, column: 1, scope: !15769)
!15776 = distinct !DISubprogram(name: "unready_thread", scope: !2516, file: !2516, line: 731, type: !14654, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15777)
!15777 = !{!15778}
!15778 = !DILocalVariable(name: "thread", arg: 1, scope: !15776, file: !2516, line: 731, type: !2408)
!15779 = !DILocation(line: 0, scope: !15776)
!15780 = !DILocation(line: 733, column: 6, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15776, file: !2516, line: 733, column: 6)
!15782 = !DILocation(line: 733, column: 6, scope: !15776)
!15783 = !DILocation(line: 0, scope: !14888, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 734, column: 3, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15781, file: !2516, line: 733, column: 34)
!15786 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !15784)
!15787 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !15784)
!15788 = !DILocation(line: 0, scope: !14896, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !15784)
!15790 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !15789)
!15791 = !DILocation(line: 735, column: 2, scope: !15785)
!15792 = !DILocation(line: 736, column: 25, scope: !15776)
!15793 = !DILocation(line: 736, column: 22, scope: !15776)
!15794 = !DILocation(line: 736, column: 2, scope: !15776)
!15795 = !DILocation(line: 737, column: 1, scope: !15776)
!15796 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13483, file: !13483, line: 160, type: !14654, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15797)
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "thread", arg: 1, scope: !15796, file: !13483, line: 160, type: !2408)
!15799 = !DILocation(line: 0, scope: !15796)
!15800 = !DILocation(line: 162, column: 15, scope: !15796)
!15801 = !DILocation(line: 162, column: 28, scope: !15796)
!15802 = !DILocation(line: 163, column: 1, scope: !15796)
!15803 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2516, file: !2516, line: 786, type: !14654, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15804)
!15804 = !{!15805, !15806, !15808}
!15805 = !DILocalVariable(name: "thread", arg: 1, scope: !15803, file: !2516, line: 786, type: !2408)
!15806 = !DILocalVariable(name: "__i", scope: !15807, file: !2516, line: 788, type: !14688)
!15807 = distinct !DILexicalBlock(scope: !15803, file: !2516, line: 788, column: 2)
!15808 = !DILocalVariable(name: "__key", scope: !15807, file: !2516, line: 788, type: !14688)
!15809 = !DILocation(line: 0, scope: !15803)
!15810 = !DILocation(line: 0, scope: !15807)
!15811 = !DILocation(line: 0, scope: !14696, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 788, column: 2, scope: !15807)
!15813 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15812)
!15815 = !DILocation(line: 0, scope: !14705, inlinedAt: !15814)
!15816 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15812)
!15817 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15812)
!15818 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15812)
!15819 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15812)
!15820 = !DILocation(line: 789, column: 3, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !2516, line: 788, column: 26)
!15822 = distinct !DILexicalBlock(scope: !15807, file: !2516, line: 788, column: 2)
!15823 = !DILocation(line: 0, scope: !14730, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 788, column: 2, scope: !15822)
!15825 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15824)
!15826 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15824)
!15827 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15824)
!15828 = !DILocation(line: 0, scope: !14744, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15824)
!15830 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15829)
!15831 = !DILocation(line: 791, column: 1, scope: !15803)
!15832 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2516, file: !2516, line: 816, type: !15833, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15835)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{!109, !110, !2439, !15582}
!15835 = !{!15836, !15837, !15838, !15839, !15840, !15842}
!15836 = !DILocalVariable(name: "key", arg: 1, scope: !15832, file: !2516, line: 816, type: !110)
!15837 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15832, file: !2516, line: 816, type: !2439)
!15838 = !DILocalVariable(name: "timeout", arg: 3, scope: !15832, file: !2516, line: 816, type: !15582)
!15839 = !DILocalVariable(name: "ret", scope: !15832, file: !2516, line: 828, type: !109)
!15840 = !DILocalVariable(name: "__i", scope: !15841, file: !2516, line: 829, type: !14688)
!15841 = distinct !DILexicalBlock(scope: !15832, file: !2516, line: 829, column: 2)
!15842 = !DILocalVariable(name: "__key", scope: !15841, file: !2516, line: 829, type: !14688)
!15843 = !DILocation(line: 0, scope: !15832)
!15844 = !DILocation(line: 823, column: 14, scope: !15832)
!15845 = !DILocation(line: 823, column: 2, scope: !15832)
!15846 = !DILocation(line: 826, column: 20, scope: !15832)
!15847 = !DILocation(line: 826, column: 18, scope: !15832)
!15848 = !DILocation(line: 828, column: 12, scope: !15832)
!15849 = !DILocation(line: 0, scope: !15841)
!15850 = !DILocation(line: 0, scope: !14696, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 829, column: 2, scope: !15841)
!15852 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15851)
!15854 = !DILocation(line: 0, scope: !14705, inlinedAt: !15853)
!15855 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15851)
!15856 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15851)
!15857 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15851)
!15858 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15851)
!15859 = !DILocation(line: 830, column: 7, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !2516, line: 830, column: 7)
!15861 = distinct !DILexicalBlock(scope: !15862, file: !2516, line: 829, column: 26)
!15862 = distinct !DILexicalBlock(scope: !15841, file: !2516, line: 829, column: 2)
!15863 = !DILocation(line: 830, column: 26, scope: !15860)
!15864 = !DILocation(line: 830, column: 23, scope: !15860)
!15865 = !DILocation(line: 830, column: 7, scope: !15861)
!15866 = !DILocation(line: 831, column: 20, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15860, file: !2516, line: 830, column: 36)
!15868 = !DILocation(line: 832, column: 3, scope: !15867)
!15869 = !DILocation(line: 0, scope: !14730, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 829, column: 2, scope: !15862)
!15871 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15870)
!15872 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15870)
!15873 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15870)
!15874 = !DILocation(line: 0, scope: !14744, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15870)
!15876 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15875)
!15877 = !DILocation(line: 834, column: 2, scope: !15832)
!15878 = distinct !DISubprogram(name: "z_pend_curr", scope: !2516, file: !2516, line: 840, type: !15879, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15881)
!15879 = !DISubroutineType(types: !15880)
!15880 = !{!109, !14699, !14688, !2439, !15582}
!15881 = !{!15882, !15883, !15884, !15885}
!15882 = !DILocalVariable(name: "lock", arg: 1, scope: !15878, file: !2516, line: 840, type: !14699)
!15883 = !DILocalVariable(name: "key", arg: 2, scope: !15878, file: !2516, line: 840, type: !14688)
!15884 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15878, file: !2516, line: 841, type: !2439)
!15885 = !DILocalVariable(name: "timeout", arg: 4, scope: !15878, file: !2516, line: 841, type: !15582)
!15886 = !DILocation(line: 0, scope: !15878)
!15887 = !DILocation(line: 844, column: 20, scope: !15878)
!15888 = !DILocation(line: 844, column: 18, scope: !15878)
!15889 = !DILocation(line: 846, column: 2, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15891, file: !2516, line: 846, column: 2)
!15891 = distinct !DILexicalBlock(scope: !15878, file: !2516, line: 846, column: 2)
!15892 = !DILocation(line: 846, column: 2, scope: !15891)
!15893 = !DILocation(line: 846, column: 2, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15890, file: !2516, line: 846, column: 2)
!15895 = !DILocation(line: 0, scope: !14696, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 856, column: 9, scope: !15878)
!15897 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15896)
!15899 = !DILocation(line: 0, scope: !14705, inlinedAt: !15898)
!15900 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15896)
!15901 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15896)
!15902 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15896)
!15903 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15896)
!15904 = !DILocation(line: 857, column: 14, scope: !15878)
!15905 = !DILocation(line: 857, column: 2, scope: !15878)
!15906 = !DILocation(line: 0, scope: !15381, inlinedAt: !15907)
!15907 = distinct !DILocation(line: 858, column: 2, scope: !15878)
!15908 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15907)
!15909 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !15907)
!15910 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !15907)
!15911 = !DILocation(line: 0, scope: !15372, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 859, column: 9, scope: !15878)
!15913 = !DILocation(line: 0, scope: !15381, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !15912)
!15915 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15914)
!15916 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !15914)
!15917 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !15914)
!15918 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !15912)
!15919 = !DILocation(line: 859, column: 2, scope: !15878)
!15920 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2516, file: !2516, line: 862, type: !15921, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15923)
!15921 = !DISubroutineType(types: !15922)
!15922 = !{!2408, !2439}
!15923 = !{!15924, !15925, !15926, !15928}
!15924 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15920, file: !2516, line: 862, type: !2439)
!15925 = !DILocalVariable(name: "thread", scope: !15920, file: !2516, line: 864, type: !2408)
!15926 = !DILocalVariable(name: "__i", scope: !15927, file: !2516, line: 866, type: !14688)
!15927 = distinct !DILexicalBlock(scope: !15920, file: !2516, line: 866, column: 2)
!15928 = !DILocalVariable(name: "__key", scope: !15927, file: !2516, line: 866, type: !14688)
!15929 = !DILocation(line: 0, scope: !15920)
!15930 = !DILocation(line: 0, scope: !15927)
!15931 = !DILocation(line: 0, scope: !14696, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 866, column: 2, scope: !15927)
!15933 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15932)
!15935 = !DILocation(line: 0, scope: !14705, inlinedAt: !15934)
!15936 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15932)
!15937 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15932)
!15938 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15932)
!15939 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15932)
!15940 = !DILocation(line: 867, column: 12, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15942, file: !2516, line: 866, column: 26)
!15942 = distinct !DILexicalBlock(scope: !15927, file: !2516, line: 866, column: 2)
!15943 = !DILocation(line: 869, column: 14, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15941, file: !2516, line: 869, column: 7)
!15945 = !DILocation(line: 869, column: 7, scope: !15941)
!15946 = !DILocation(line: 870, column: 4, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15944, file: !2516, line: 869, column: 23)
!15948 = !DILocation(line: 871, column: 3, scope: !15947)
!15949 = !DILocation(line: 0, scope: !14730, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 866, column: 2, scope: !15942)
!15951 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15950)
!15952 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15950)
!15953 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15950)
!15954 = !DILocation(line: 0, scope: !14744, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15950)
!15956 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15955)
!15957 = !DILocation(line: 874, column: 2, scope: !15920)
!15958 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2516, file: !2516, line: 877, type: !15921, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15959)
!15959 = !{!15960, !15961, !15962, !15964}
!15960 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15958, file: !2516, line: 877, type: !2439)
!15961 = !DILocalVariable(name: "thread", scope: !15958, file: !2516, line: 879, type: !2408)
!15962 = !DILocalVariable(name: "__i", scope: !15963, file: !2516, line: 881, type: !14688)
!15963 = distinct !DILexicalBlock(scope: !15958, file: !2516, line: 881, column: 2)
!15964 = !DILocalVariable(name: "__key", scope: !15963, file: !2516, line: 881, type: !14688)
!15965 = !DILocation(line: 0, scope: !15958)
!15966 = !DILocation(line: 0, scope: !15963)
!15967 = !DILocation(line: 0, scope: !14696, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 881, column: 2, scope: !15963)
!15969 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !15968)
!15971 = !DILocation(line: 0, scope: !14705, inlinedAt: !15970)
!15972 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15968)
!15973 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !15968)
!15974 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !15968)
!15975 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !15968)
!15976 = !DILocation(line: 882, column: 12, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !2516, line: 881, column: 26)
!15978 = distinct !DILexicalBlock(scope: !15963, file: !2516, line: 881, column: 2)
!15979 = !DILocation(line: 884, column: 14, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15977, file: !2516, line: 884, column: 7)
!15981 = !DILocation(line: 884, column: 7, scope: !15977)
!15982 = !DILocation(line: 885, column: 4, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15980, file: !2516, line: 884, column: 23)
!15984 = !DILocation(line: 886, column: 10, scope: !15983)
!15985 = !DILocation(line: 887, column: 3, scope: !15983)
!15986 = !DILocation(line: 0, scope: !14730, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 881, column: 2, scope: !15978)
!15988 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15987)
!15989 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !15987)
!15990 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !15987)
!15991 = !DILocation(line: 0, scope: !14744, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !15987)
!15993 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !15992)
!15994 = !DILocation(line: 890, column: 2, scope: !15958)
!15995 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2516, file: !2516, line: 893, type: !14654, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !15996)
!15996 = !{!15997}
!15997 = !DILocalVariable(name: "thread", arg: 1, scope: !15995, file: !2516, line: 893, type: !2408)
!15998 = !DILocation(line: 0, scope: !15995)
!15999 = !DILocation(line: 0, scope: !15803, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 895, column: 2, scope: !15995)
!16001 = !DILocation(line: 0, scope: !15807, inlinedAt: !16000)
!16002 = !DILocation(line: 0, scope: !14696, inlinedAt: !16003)
!16003 = distinct !DILocation(line: 788, column: 2, scope: !15807, inlinedAt: !16000)
!16004 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16003)
!16006 = !DILocation(line: 0, scope: !14705, inlinedAt: !16005)
!16007 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16003)
!16008 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16003)
!16009 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16003)
!16010 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16003)
!16011 = !DILocation(line: 789, column: 3, scope: !15821, inlinedAt: !16000)
!16012 = !DILocation(line: 0, scope: !14730, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 788, column: 2, scope: !15822, inlinedAt: !16000)
!16014 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16013)
!16015 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16013)
!16016 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16013)
!16017 = !DILocation(line: 0, scope: !14744, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16013)
!16019 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16018)
!16020 = !DILocation(line: 896, column: 8, scope: !15995)
!16021 = !DILocation(line: 897, column: 1, scope: !15995)
!16022 = distinct !DISubprogram(name: "z_set_prio", scope: !2516, file: !2516, line: 902, type: !15057, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16023)
!16023 = !{!16024, !16025, !16026, !16027, !16029}
!16024 = !DILocalVariable(name: "thread", arg: 1, scope: !16022, file: !2516, line: 902, type: !2408)
!16025 = !DILocalVariable(name: "prio", arg: 2, scope: !16022, file: !2516, line: 902, type: !109)
!16026 = !DILocalVariable(name: "need_sched", scope: !16022, file: !2516, line: 904, type: !347)
!16027 = !DILocalVariable(name: "__i", scope: !16028, file: !2516, line: 906, type: !14688)
!16028 = distinct !DILexicalBlock(scope: !16022, file: !2516, line: 906, column: 2)
!16029 = !DILocalVariable(name: "__key", scope: !16028, file: !2516, line: 906, type: !14688)
!16030 = !DILocation(line: 0, scope: !16022)
!16031 = !DILocation(line: 0, scope: !16028)
!16032 = !DILocation(line: 0, scope: !14696, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 906, column: 2, scope: !16028)
!16034 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16033)
!16036 = !DILocation(line: 0, scope: !14705, inlinedAt: !16035)
!16037 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16033)
!16038 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16033)
!16039 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16033)
!16040 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16033)
!16041 = !DILocation(line: 907, column: 16, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16043, file: !2516, line: 906, column: 26)
!16043 = distinct !DILexicalBlock(scope: !16028, file: !2516, line: 906, column: 2)
!16044 = !DILocation(line: 909, column: 7, scope: !16042)
!16045 = !DILocation(line: 0, scope: !14888, inlinedAt: !16046)
!16046 = distinct !DILocation(line: 912, column: 5, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16048, file: !2516, line: 911, column: 63)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2516, line: 911, column: 8)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !2516, line: 909, column: 19)
!16050 = distinct !DILexicalBlock(scope: !16042, file: !2516, line: 909, column: 7)
!16051 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16046)
!16052 = !DILocation(line: 0, scope: !14896, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16046)
!16054 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16053)
!16055 = !DILocation(line: 913, column: 23, scope: !16047)
!16056 = !DILocation(line: 0, scope: !14905, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 914, column: 5, scope: !16047)
!16058 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !16057)
!16059 = !DILocation(line: 0, scope: !14912, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !16057)
!16061 = !DILocation(line: 0, scope: !14919, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !16060)
!16063 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !16062)
!16064 = !DILocation(line: 186, column: 2, scope: !14930, inlinedAt: !16062)
!16065 = !DILocation(line: 186, column: 2, scope: !14933, inlinedAt: !16062)
!16066 = !DILocation(line: 188, column: 2, scope: !14935, inlinedAt: !16062)
!16067 = !DILocation(line: 188, column: 2, scope: !14937, inlinedAt: !16062)
!16068 = !DILocation(line: 0, scope: !14935, inlinedAt: !16062)
!16069 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !16062)
!16070 = !DILocation(line: 189, column: 35, scope: !14940, inlinedAt: !16062)
!16071 = !DILocation(line: 189, column: 7, scope: !14941, inlinedAt: !16062)
!16072 = !DILocation(line: 190, column: 4, scope: !14945, inlinedAt: !16062)
!16073 = !DILocation(line: 192, column: 4, scope: !14945, inlinedAt: !16062)
!16074 = distinct !{!16074, !16066, !16075}
!16075 = !DILocation(line: 194, column: 2, scope: !14935, inlinedAt: !16062)
!16076 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !16062)
!16077 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !16062)
!16078 = !DILocation(line: 918, column: 4, scope: !16049)
!16079 = !DILocation(line: 919, column: 3, scope: !16049)
!16080 = !DILocation(line: 920, column: 22, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16050, file: !2516, line: 919, column: 10)
!16082 = !DILocation(line: 0, scope: !14730, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 906, column: 2, scope: !16043)
!16084 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16083)
!16085 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16083)
!16086 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16083)
!16087 = !DILocation(line: 0, scope: !14744, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16083)
!16089 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16088)
!16090 = !DILocation(line: 926, column: 2, scope: !16022)
!16091 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2516, file: !2516, line: 929, type: !16092, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16094)
!16092 = !DISubroutineType(types: !16093)
!16093 = !{null, !2408, !109}
!16094 = !{!16095, !16096, !16097}
!16095 = !DILocalVariable(name: "thread", arg: 1, scope: !16091, file: !2516, line: 929, type: !2408)
!16096 = !DILocalVariable(name: "prio", arg: 2, scope: !16091, file: !2516, line: 929, type: !109)
!16097 = !DILocalVariable(name: "need_sched", scope: !16091, file: !2516, line: 931, type: !347)
!16098 = !DILocation(line: 0, scope: !16091)
!16099 = !DILocation(line: 931, column: 20, scope: !16091)
!16100 = !DILocation(line: 935, column: 17, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16091, file: !2516, line: 935, column: 6)
!16102 = !DILocation(line: 935, column: 20, scope: !16101)
!16103 = !DILocation(line: 935, column: 35, scope: !16101)
!16104 = !DILocation(line: 935, column: 48, scope: !16101)
!16105 = !DILocation(line: 935, column: 6, scope: !16091)
!16106 = !DILocation(line: 936, column: 3, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16101, file: !2516, line: 935, column: 55)
!16108 = !DILocation(line: 937, column: 2, scope: !16107)
!16109 = !DILocation(line: 938, column: 1, scope: !16091)
!16110 = distinct !DISubprogram(name: "k_sched_lock", scope: !2516, file: !2516, line: 987, type: !3153, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16111)
!16111 = !{!16112, !16114}
!16112 = !DILocalVariable(name: "__i", scope: !16113, file: !2516, line: 989, type: !14688)
!16113 = distinct !DILexicalBlock(scope: !16110, file: !2516, line: 989, column: 2)
!16114 = !DILocalVariable(name: "__key", scope: !16113, file: !2516, line: 989, type: !14688)
!16115 = !DILocation(line: 0, scope: !16113)
!16116 = !DILocation(line: 0, scope: !14696, inlinedAt: !16117)
!16117 = distinct !DILocation(line: 989, column: 2, scope: !16113)
!16118 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16119)
!16119 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16117)
!16120 = !DILocation(line: 0, scope: !14705, inlinedAt: !16119)
!16121 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16117)
!16122 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16117)
!16123 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16117)
!16124 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16117)
!16125 = !DILocation(line: 992, column: 3, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16127, file: !2516, line: 989, column: 26)
!16127 = distinct !DILexicalBlock(scope: !16113, file: !2516, line: 989, column: 2)
!16128 = !DILocation(line: 0, scope: !14730, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 989, column: 2, scope: !16127)
!16130 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16129)
!16131 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16129)
!16132 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16129)
!16133 = !DILocation(line: 0, scope: !14744, inlinedAt: !16134)
!16134 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16129)
!16135 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16134)
!16136 = !DILocation(line: 994, column: 1, scope: !16110)
!16137 = distinct !DISubprogram(name: "z_sched_lock", scope: !13483, file: !13483, line: 251, type: !3153, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16138 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 253, column: 2, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16142, file: !13483, line: 253, column: 2)
!16142 = distinct !DILexicalBlock(scope: !16137, file: !13483, line: 253, column: 2)
!16143 = !DILocation(line: 0, scope: !15421, inlinedAt: !16139)
!16144 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16140)
!16145 = !DILocation(line: 253, column: 2, scope: !16142)
!16146 = !DILocation(line: 253, column: 2, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16141, file: !13483, line: 253, column: 2)
!16148 = !DILocation(line: 254, column: 2, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !13483, line: 254, column: 2)
!16150 = distinct !DILexicalBlock(scope: !16137, file: !13483, line: 254, column: 2)
!16151 = !DILocation(line: 254, column: 2, scope: !16150)
!16152 = !DILocation(line: 254, column: 2, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16149, file: !13483, line: 254, column: 2)
!16154 = !DILocation(line: 256, column: 2, scope: !16137)
!16155 = !DILocation(line: 258, column: 2, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16137, file: !13483, line: 258, column: 2)
!16157 = !{i64 2155196575}
!16158 = !DILocation(line: 259, column: 1, scope: !16137)
!16159 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2516, file: !2516, line: 996, type: !3153, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16160)
!16160 = !{!16161, !16163}
!16161 = !DILocalVariable(name: "__i", scope: !16162, file: !2516, line: 998, type: !14688)
!16162 = distinct !DILexicalBlock(scope: !16159, file: !2516, line: 998, column: 2)
!16163 = !DILocalVariable(name: "__key", scope: !16162, file: !2516, line: 998, type: !14688)
!16164 = !DILocation(line: 0, scope: !16162)
!16165 = !DILocation(line: 0, scope: !14696, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 998, column: 2, scope: !16162)
!16167 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16166)
!16169 = !DILocation(line: 0, scope: !14705, inlinedAt: !16168)
!16170 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16166)
!16171 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16166)
!16172 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16166)
!16173 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16166)
!16174 = !DILocation(line: 999, column: 3, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16176, file: !2516, line: 999, column: 3)
!16176 = distinct !DILexicalBlock(scope: !16177, file: !2516, line: 999, column: 3)
!16177 = distinct !DILexicalBlock(scope: !16178, file: !2516, line: 998, column: 26)
!16178 = distinct !DILexicalBlock(scope: !16162, file: !2516, line: 998, column: 2)
!16179 = !DILocation(line: 999, column: 3, scope: !16176)
!16180 = !DILocation(line: 999, column: 3, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16175, file: !2516, line: 999, column: 3)
!16182 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16183)
!16183 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16184)
!16184 = distinct !DILocation(line: 1000, column: 3, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !2516, line: 1000, column: 3)
!16186 = distinct !DILexicalBlock(scope: !16177, file: !2516, line: 1000, column: 3)
!16187 = !DILocation(line: 0, scope: !15421, inlinedAt: !16183)
!16188 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16184)
!16189 = !DILocation(line: 1000, column: 3, scope: !16186)
!16190 = !DILocation(line: 1000, column: 3, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16185, file: !2516, line: 1000, column: 3)
!16192 = !DILocation(line: 1002, column: 5, scope: !16177)
!16193 = !DILocation(line: 1002, column: 20, scope: !16177)
!16194 = !DILocation(line: 1002, column: 3, scope: !16177)
!16195 = !DILocation(line: 1003, column: 3, scope: !16177)
!16196 = !DILocation(line: 0, scope: !14730, inlinedAt: !16197)
!16197 = distinct !DILocation(line: 998, column: 2, scope: !16178)
!16198 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16197)
!16199 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16197)
!16200 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16197)
!16201 = !DILocation(line: 0, scope: !14744, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16197)
!16203 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16202)
!16204 = !DILocation(line: 1011, column: 2, scope: !16159)
!16205 = !DILocation(line: 1012, column: 1, scope: !16159)
!16206 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2516, file: !2516, line: 1014, type: !15045, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16207 = !DILocation(line: 1028, column: 25, scope: !16206)
!16208 = !DILocation(line: 1028, column: 2, scope: !16206)
!16209 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2516, file: !2516, line: 1155, type: !16210, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{!347, !2437, !2437}
!16212 = !{!16213, !16214, !16215, !16216, !16217}
!16213 = !DILocalVariable(name: "a", arg: 1, scope: !16209, file: !2516, line: 1155, type: !2437)
!16214 = !DILocalVariable(name: "b", arg: 2, scope: !16209, file: !2516, line: 1155, type: !2437)
!16215 = !DILocalVariable(name: "thread_a", scope: !16209, file: !2516, line: 1157, type: !2408)
!16216 = !DILocalVariable(name: "thread_b", scope: !16209, file: !2516, line: 1157, type: !2408)
!16217 = !DILocalVariable(name: "cmp", scope: !16209, file: !2516, line: 1158, type: !774)
!16218 = !DILocation(line: 0, scope: !16209)
!16219 = !DILocation(line: 1160, column: 13, scope: !16209)
!16220 = !DILocation(line: 1161, column: 13, scope: !16209)
!16221 = !DILocation(line: 1163, column: 8, scope: !16209)
!16222 = !DILocation(line: 1165, column: 10, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16209, file: !2516, line: 1165, column: 6)
!16224 = !DILocation(line: 1165, column: 6, scope: !16209)
!16225 = !DILocation(line: 1167, column: 17, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16223, file: !2516, line: 1167, column: 13)
!16227 = !DILocation(line: 1167, column: 13, scope: !16223)
!16228 = !DILocation(line: 1170, column: 25, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16226, file: !2516, line: 1169, column: 9)
!16230 = !DILocation(line: 1170, column: 52, scope: !16229)
!16231 = !DILocation(line: 1170, column: 35, scope: !16229)
!16232 = !DILocation(line: 1170, column: 3, scope: !16229)
!16233 = !DILocation(line: 0, scope: !16223)
!16234 = !DILocation(line: 1173, column: 1, scope: !16209)
!16235 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2516, file: !2516, line: 1175, type: !16236, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16251)
!16236 = !DISubroutineType(types: !16237)
!16237 = !{null, !16238, !2408}
!16238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16239, size: 32)
!16239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16240, line: 37, size: 128, elements: !16241)
!16240 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16241 = !{!16242, !16250}
!16242 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16239, file: !16240, line: 38, baseType: !16243, size: 96)
!16243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !16244)
!16244 = !{!16245, !16246, !16249}
!16245 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16243, file: !170, line: 84, baseType: !2437, size: 32)
!16246 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16243, file: !170, line: 85, baseType: !16247, size: 32, offset: 32)
!16247 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !16248)
!16248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16210, size: 32)
!16249 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16243, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!16250 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16239, file: !16240, line: 39, baseType: !109, size: 32, offset: 96)
!16251 = !{!16252, !16253, !16254, !16255, !16264}
!16252 = !DILocalVariable(name: "pq", arg: 1, scope: !16235, file: !2516, line: 1175, type: !16238)
!16253 = !DILocalVariable(name: "thread", arg: 2, scope: !16235, file: !2516, line: 1175, type: !2408)
!16254 = !DILocalVariable(name: "t", scope: !16235, file: !2516, line: 1177, type: !2408)
!16255 = !DILocalVariable(name: "__f", scope: !16256, file: !2516, line: 1190, type: !16259)
!16256 = distinct !DILexicalBlock(scope: !16257, file: !2516, line: 1190, column: 3)
!16257 = distinct !DILexicalBlock(scope: !16258, file: !2516, line: 1189, column: 27)
!16258 = distinct !DILexicalBlock(scope: !16235, file: !2516, line: 1189, column: 6)
!16259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !16260)
!16260 = !{!16261, !16262, !16263}
!16261 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16259, file: !170, line: 156, baseType: !2511, size: 32)
!16262 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16259, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!16263 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16259, file: !170, line: 158, baseType: !774, size: 32, offset: 64)
!16264 = !DILocalVariable(name: "n", scope: !16265, file: !2516, line: 1190, type: !2437)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !2516, line: 1190, column: 3)
!16266 = distinct !DILexicalBlock(scope: !16256, file: !2516, line: 1190, column: 3)
!16267 = !DILocation(line: 0, scope: !16235)
!16268 = !DILocation(line: 1179, column: 2, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !2516, line: 1179, column: 2)
!16270 = distinct !DILexicalBlock(scope: !16235, file: !2516, line: 1179, column: 2)
!16271 = !DILocation(line: 1179, column: 2, scope: !16270)
!16272 = !DILocation(line: 1179, column: 2, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16269, file: !2516, line: 1179, column: 2)
!16274 = !DILocation(line: 1181, column: 31, scope: !16235)
!16275 = !DILocation(line: 1181, column: 45, scope: !16235)
!16276 = !DILocation(line: 1181, column: 15, scope: !16235)
!16277 = !DILocation(line: 1181, column: 25, scope: !16235)
!16278 = !DILocation(line: 1189, column: 11, scope: !16258)
!16279 = !DILocation(line: 1189, column: 7, scope: !16258)
!16280 = !DILocation(line: 1189, column: 6, scope: !16235)
!16281 = !DILocation(line: 1190, column: 3, scope: !16256)
!16282 = !DILocation(line: 1190, column: 3, scope: !16265)
!16283 = !DILocation(line: 0, scope: !16265)
!16284 = !DILocation(line: 1190, column: 3, scope: !16266)
!16285 = !DILocation(line: 1193, column: 2, scope: !16257)
!16286 = !DILocation(line: 1191, column: 42, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16266, file: !2516, line: 1190, column: 54)
!16288 = !DILocation(line: 1191, column: 12, scope: !16287)
!16289 = !DILocation(line: 1191, column: 22, scope: !16287)
!16290 = distinct !{!16290, !16281, !16291}
!16291 = !DILocation(line: 1192, column: 3, scope: !16256)
!16292 = !DILocation(line: 1195, column: 17, scope: !16235)
!16293 = !DILocation(line: 1195, column: 37, scope: !16235)
!16294 = !DILocation(line: 1195, column: 2, scope: !16235)
!16295 = !DILocation(line: 1196, column: 1, scope: !16235)
!16296 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !16297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!16297 = !DISubroutineType(types: !16298)
!16298 = !{!2437, !16299, !16300}
!16299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16243, size: 32)
!16300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16259, size: 32)
!16301 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !16302, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{null, !16299, !2437}
!16304 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2516, file: !2516, line: 1198, type: !16236, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16305)
!16305 = !{!16306, !16307}
!16306 = !DILocalVariable(name: "pq", arg: 1, scope: !16304, file: !2516, line: 1198, type: !16238)
!16307 = !DILocalVariable(name: "thread", arg: 2, scope: !16304, file: !2516, line: 1198, type: !2408)
!16308 = !DILocation(line: 0, scope: !16304)
!16309 = !DILocation(line: 1200, column: 2, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16311, file: !2516, line: 1200, column: 2)
!16311 = distinct !DILexicalBlock(scope: !16304, file: !2516, line: 1200, column: 2)
!16312 = !DILocation(line: 1200, column: 2, scope: !16311)
!16313 = !DILocation(line: 1200, column: 2, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16310, file: !2516, line: 1200, column: 2)
!16315 = !DILocation(line: 1202, column: 17, scope: !16304)
!16316 = !DILocation(line: 1202, column: 37, scope: !16304)
!16317 = !DILocation(line: 1202, column: 2, scope: !16304)
!16318 = !DILocation(line: 1204, column: 16, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16304, file: !2516, line: 1204, column: 6)
!16320 = !DILocation(line: 1204, column: 7, scope: !16319)
!16321 = !DILocation(line: 1204, column: 6, scope: !16304)
!16322 = !DILocation(line: 1205, column: 7, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16319, file: !2516, line: 1204, column: 22)
!16324 = !DILocation(line: 1205, column: 22, scope: !16323)
!16325 = !DILocation(line: 1206, column: 2, scope: !16323)
!16326 = !DILocation(line: 1207, column: 1, scope: !16304)
!16327 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !16302, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!16328 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2516, file: !2516, line: 1209, type: !16329, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16331)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{!2408, !16238}
!16331 = !{!16332, !16333, !16334}
!16332 = !DILocalVariable(name: "pq", arg: 1, scope: !16328, file: !2516, line: 1209, type: !16238)
!16333 = !DILocalVariable(name: "thread", scope: !16328, file: !2516, line: 1211, type: !2408)
!16334 = !DILocalVariable(name: "n", scope: !16328, file: !2516, line: 1212, type: !2437)
!16335 = !DILocation(line: 0, scope: !16328)
!16336 = !DILocation(line: 1212, column: 37, scope: !16328)
!16337 = !DILocation(line: 1212, column: 21, scope: !16328)
!16338 = !DILocation(line: 1217, column: 2, scope: !16328)
!16339 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !16340, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!2437, !16299}
!16342 = !{!16343}
!16343 = !DILocalVariable(name: "tree", arg: 1, scope: !16339, file: !170, line: 115, type: !16299)
!16344 = !DILocation(line: 0, scope: !16339)
!16345 = !DILocation(line: 117, column: 9, scope: !16339)
!16346 = !DILocation(line: 117, column: 2, scope: !16339)
!16347 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !16348, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2104)
!16348 = !DISubroutineType(types: !16349)
!16349 = !{!2437, !16299, !180}
!16350 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2516, file: !2516, line: 1246, type: !16351, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16359)
!16351 = !DISubroutineType(types: !16352)
!16352 = !{!2408, !16353}
!16353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16354, size: 32)
!16354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16240, line: 53, size: 2080, elements: !16355)
!16355 = !{!16356, !16358}
!16356 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16354, file: !16240, line: 54, baseType: !16357, size: 2048)
!16357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 2048, elements: !226)
!16358 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16354, file: !16240, line: 55, baseType: !32, size: 32, offset: 2048)
!16359 = !{!16360, !16361, !16362, !16363}
!16360 = !DILocalVariable(name: "pq", arg: 1, scope: !16350, file: !2516, line: 1246, type: !16353)
!16361 = !DILocalVariable(name: "thread", scope: !16350, file: !2516, line: 1252, type: !2408)
!16362 = !DILocalVariable(name: "l", scope: !16350, file: !2516, line: 1253, type: !14922)
!16363 = !DILocalVariable(name: "n", scope: !16350, file: !2516, line: 1254, type: !2512)
!16364 = !DILocation(line: 0, scope: !16350)
!16365 = !DILocation(line: 1248, column: 11, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16350, file: !2516, line: 1248, column: 6)
!16367 = !DILocation(line: 1248, column: 7, scope: !16366)
!16368 = !DILocation(line: 1248, column: 6, scope: !16350)
!16369 = !DILocation(line: 1253, column: 31, scope: !16350)
!16370 = !DILocation(line: 1253, column: 20, scope: !16350)
!16371 = !DILocation(line: 1254, column: 19, scope: !16350)
!16372 = !DILocation(line: 1260, column: 1, scope: !16350)
!16373 = distinct !DISubprogram(name: "z_unpend_all", scope: !2516, file: !2516, line: 1262, type: !16374, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16376)
!16374 = !DISubroutineType(types: !16375)
!16375 = !{!109, !2439}
!16376 = !{!16377, !16378, !16379}
!16377 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16373, file: !2516, line: 1262, type: !2439)
!16378 = !DILocalVariable(name: "need_sched", scope: !16373, file: !2516, line: 1264, type: !109)
!16379 = !DILocalVariable(name: "thread", scope: !16373, file: !2516, line: 1265, type: !2408)
!16380 = !DILocation(line: 0, scope: !16373)
!16381 = !DILocation(line: 1267, column: 19, scope: !16373)
!16382 = !DILocation(line: 1267, column: 41, scope: !16373)
!16383 = !DILocation(line: 1267, column: 2, scope: !16373)
!16384 = !DILocation(line: 1268, column: 3, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16373, file: !2516, line: 1267, column: 50)
!16386 = !DILocation(line: 1269, column: 3, scope: !16385)
!16387 = distinct !{!16387, !16383, !16388}
!16388 = !DILocation(line: 1271, column: 2, scope: !16373)
!16389 = !DILocation(line: 1273, column: 2, scope: !16373)
!16390 = distinct !DISubprogram(name: "z_waitq_head", scope: !13844, file: !13844, line: 52, type: !15921, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16391)
!16391 = !{!16392}
!16392 = !DILocalVariable(name: "w", arg: 1, scope: !16390, file: !13844, line: 52, type: !2439)
!16393 = !DILocation(line: 0, scope: !16390)
!16394 = !DILocation(line: 54, column: 52, scope: !16390)
!16395 = !DILocation(line: 54, column: 28, scope: !16390)
!16396 = !DILocation(line: 54, column: 9, scope: !16390)
!16397 = !DILocation(line: 54, column: 2, scope: !16390)
!16398 = distinct !DISubprogram(name: "init_ready_q", scope: !2516, file: !2516, line: 1276, type: !16399, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16406)
!16399 = !DISubroutineType(types: !16400)
!16400 = !{null, !16401}
!16401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16402, size: 32)
!16402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !16403)
!16403 = !{!16404, !16405}
!16404 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16402, file: !122, line: 86, baseType: !2408, size: 32)
!16405 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16402, file: !122, line: 90, baseType: !2444, size: 64, offset: 32)
!16406 = !{!16407}
!16407 = !DILocalVariable(name: "rq", arg: 1, scope: !16398, file: !2516, line: 1276, type: !16401)
!16408 = !DILocation(line: 0, scope: !16398)
!16409 = !DILocation(line: 1289, column: 22, scope: !16398)
!16410 = !DILocation(line: 1289, column: 2, scope: !16398)
!16411 = !DILocation(line: 1291, column: 1, scope: !16398)
!16412 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16413, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16415)
!16413 = !DISubroutineType(types: !16414)
!16414 = !{null, !14922}
!16415 = !{!16416}
!16416 = !DILocalVariable(name: "list", arg: 1, scope: !16412, file: !127, line: 197, type: !14922)
!16417 = !DILocation(line: 0, scope: !16412)
!16418 = !DILocation(line: 199, column: 8, scope: !16412)
!16419 = !DILocation(line: 199, column: 13, scope: !16412)
!16420 = !DILocation(line: 200, column: 8, scope: !16412)
!16421 = !DILocation(line: 200, column: 13, scope: !16412)
!16422 = !DILocation(line: 201, column: 1, scope: !16412)
!16423 = distinct !DISubprogram(name: "z_sched_init", scope: !2516, file: !2516, line: 1293, type: !3153, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16424 = !DILocation(line: 1302, column: 2, scope: !16423)
!16425 = !DILocation(line: 1306, column: 2, scope: !16423)
!16426 = !DILocation(line: 1309, column: 1, scope: !16423)
!16427 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2516, file: !2516, line: 1311, type: !16428, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16431)
!16428 = !DISubroutineType(types: !16429)
!16429 = !{!109, !16430}
!16430 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2408)
!16431 = !{!16432}
!16432 = !DILocalVariable(name: "thread", arg: 1, scope: !16427, file: !2516, line: 1311, type: !16430)
!16433 = !DILocation(line: 0, scope: !16427)
!16434 = !DILocation(line: 1313, column: 22, scope: !16427)
!16435 = !DILocation(line: 1313, column: 9, scope: !16427)
!16436 = !DILocation(line: 1313, column: 2, scope: !16427)
!16437 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2516, file: !2516, line: 1325, type: !16438, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16440)
!16438 = !DISubroutineType(types: !16439)
!16439 = !{null, !16430, !109}
!16440 = !{!16441, !16442, !16443}
!16441 = !DILocalVariable(name: "thread", arg: 1, scope: !16437, file: !2516, line: 1325, type: !16430)
!16442 = !DILocalVariable(name: "prio", arg: 2, scope: !16437, file: !2516, line: 1325, type: !109)
!16443 = !DILocalVariable(name: "th", scope: !16437, file: !2516, line: 1334, type: !2408)
!16444 = !DILocation(line: 0, scope: !16437)
!16445 = !DILocation(line: 1331, column: 2, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16447, file: !2516, line: 1331, column: 2)
!16447 = distinct !DILexicalBlock(scope: !16448, file: !2516, line: 1331, column: 2)
!16448 = distinct !DILexicalBlock(scope: !16437, file: !2516, line: 1331, column: 2)
!16449 = !DILocation(line: 1331, column: 2, scope: !16450)
!16450 = distinct !DILexicalBlock(scope: !16446, file: !2516, line: 1331, column: 2)
!16451 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16453)
!16453 = distinct !DILocation(line: 1332, column: 2, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16455, file: !2516, line: 1332, column: 2)
!16455 = distinct !DILexicalBlock(scope: !16437, file: !2516, line: 1332, column: 2)
!16456 = !DILocation(line: 0, scope: !15421, inlinedAt: !16452)
!16457 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16453)
!16458 = !DILocation(line: 1332, column: 2, scope: !16455)
!16459 = !DILocation(line: 1332, column: 2, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16454, file: !2516, line: 1332, column: 2)
!16461 = !DILocation(line: 1336, column: 2, scope: !16437)
!16462 = !DILocation(line: 1337, column: 1, scope: !16437)
!16463 = distinct !DISubprogram(name: "k_can_yield", scope: !2516, file: !2516, line: 1384, type: !7535, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16464 = !DILocation(line: 1386, column: 11, scope: !16463)
!16465 = !DILocation(line: 1386, column: 29, scope: !16463)
!16466 = !DILocation(line: 1386, column: 32, scope: !16463)
!16467 = !DILocation(line: 1386, column: 46, scope: !16463)
!16468 = !DILocation(line: 1387, column: 28, scope: !16463)
!16469 = !DILocation(line: 1387, column: 4, scope: !16463)
!16470 = !DILocation(line: 1386, column: 2, scope: !16463)
!16471 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7535, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16472 = !DILocation(line: 993, column: 10, scope: !16471)
!16473 = !DILocation(line: 993, column: 2, scope: !16471)
!16474 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2516, file: !2516, line: 1390, type: !3153, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16475)
!16475 = !{!16476}
!16476 = !DILocalVariable(name: "key", scope: !16474, file: !2516, line: 1396, type: !14688)
!16477 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 1392, column: 2, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16481, file: !2516, line: 1392, column: 2)
!16481 = distinct !DILexicalBlock(scope: !16474, file: !2516, line: 1392, column: 2)
!16482 = !DILocation(line: 0, scope: !15421, inlinedAt: !16478)
!16483 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16479)
!16484 = !DILocation(line: 1392, column: 2, scope: !16481)
!16485 = !DILocation(line: 1392, column: 2, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16480, file: !2516, line: 1392, column: 2)
!16487 = !DILocation(line: 0, scope: !14696, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 1396, column: 25, scope: !16474)
!16489 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16488)
!16491 = !DILocation(line: 0, scope: !14705, inlinedAt: !16490)
!16492 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16488)
!16493 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16488)
!16494 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16488)
!16495 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16488)
!16496 = !DILocation(line: 0, scope: !16474)
!16497 = !DILocation(line: 1400, column: 18, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16499, file: !2516, line: 1399, column: 36)
!16499 = distinct !DILexicalBlock(scope: !16474, file: !2516, line: 1398, column: 6)
!16500 = !DILocation(line: 0, scope: !14888, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 1400, column: 3, scope: !16498)
!16502 = !DILocation(line: 266, column: 15, scope: !14888, inlinedAt: !16501)
!16503 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16501)
!16504 = !DILocation(line: 0, scope: !14896, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16501)
!16506 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16505)
!16507 = !DILocation(line: 1402, column: 15, scope: !16474)
!16508 = !DILocation(line: 0, scope: !14905, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 1402, column: 2, scope: !16474)
!16510 = !DILocation(line: 252, column: 15, scope: !14905, inlinedAt: !16509)
!16511 = !DILocation(line: 252, column: 28, scope: !14905, inlinedAt: !16509)
!16512 = !DILocation(line: 0, scope: !14912, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 254, column: 3, scope: !14916, inlinedAt: !16509)
!16514 = !DILocation(line: 0, scope: !14919, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 229, column: 2, scope: !14912, inlinedAt: !16513)
!16516 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !16515)
!16517 = !DILocation(line: 186, column: 2, scope: !14930, inlinedAt: !16515)
!16518 = !DILocation(line: 186, column: 2, scope: !14933, inlinedAt: !16515)
!16519 = !DILocation(line: 188, column: 2, scope: !14935, inlinedAt: !16515)
!16520 = !DILocation(line: 188, column: 2, scope: !14937, inlinedAt: !16515)
!16521 = !DILocation(line: 0, scope: !14935, inlinedAt: !16515)
!16522 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !16515)
!16523 = !DILocation(line: 189, column: 35, scope: !14940, inlinedAt: !16515)
!16524 = !DILocation(line: 189, column: 7, scope: !14941, inlinedAt: !16515)
!16525 = !DILocation(line: 191, column: 21, scope: !14945, inlinedAt: !16515)
!16526 = !DILocation(line: 190, column: 4, scope: !14945, inlinedAt: !16515)
!16527 = !DILocation(line: 192, column: 4, scope: !14945, inlinedAt: !16515)
!16528 = distinct !{!16528, !16519, !16529}
!16529 = !DILocation(line: 194, column: 2, scope: !14935, inlinedAt: !16515)
!16530 = !DILocation(line: 196, column: 37, scope: !14919, inlinedAt: !16515)
!16531 = !DILocation(line: 196, column: 2, scope: !14919, inlinedAt: !16515)
!16532 = !DILocation(line: 197, column: 1, scope: !14919, inlinedAt: !16515)
!16533 = !DILocation(line: 1403, column: 2, scope: !16474)
!16534 = !DILocation(line: 0, scope: !15372, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 1404, column: 2, scope: !16474)
!16536 = !DILocation(line: 0, scope: !15381, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !16535)
!16538 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16537)
!16539 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !16537)
!16540 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !16537)
!16541 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16535)
!16542 = !DILocation(line: 1405, column: 1, scope: !16474)
!16543 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2516, file: !2516, line: 1459, type: !16544, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16546)
!16544 = !DISubroutineType(types: !16545)
!16545 = !{!774, !15582}
!16546 = !{!16547, !16548, !16549}
!16547 = !DILocalVariable(name: "timeout", arg: 1, scope: !16543, file: !2516, line: 1459, type: !15582)
!16548 = !DILocalVariable(name: "ticks", scope: !16543, file: !2516, line: 1461, type: !103)
!16549 = !DILocalVariable(name: "ret", scope: !16543, file: !2516, line: 1480, type: !774)
!16550 = !DILocation(line: 0, scope: !16543)
!16551 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16553)
!16553 = distinct !DILocation(line: 1463, column: 2, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16555, file: !2516, line: 1463, column: 2)
!16555 = distinct !DILexicalBlock(scope: !16543, file: !2516, line: 1463, column: 2)
!16556 = !DILocation(line: 0, scope: !15421, inlinedAt: !16552)
!16557 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16553)
!16558 = !DILocation(line: 1463, column: 2, scope: !16555)
!16559 = !DILocation(line: 1463, column: 2, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16554, file: !2516, line: 1463, column: 2)
!16561 = !DILocation(line: 1468, column: 6, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16543, file: !2516, line: 1468, column: 6)
!16563 = !DILocation(line: 1468, column: 6, scope: !16543)
!16564 = !DILocation(line: 1469, column: 20, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16562, file: !2516, line: 1468, column: 40)
!16566 = !DILocation(line: 1469, column: 3, scope: !16565)
!16567 = !DILocation(line: 1473, column: 3, scope: !16565)
!16568 = !DILocation(line: 1478, column: 10, scope: !16543)
!16569 = !DILocation(line: 1480, column: 16, scope: !16543)
!16570 = !DILocation(line: 1485, column: 1, scope: !16543)
!16571 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3299, file: !3299, line: 310, type: !16572, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16574)
!16572 = !DISubroutineType(types: !16573)
!16573 = !{null, !16430}
!16574 = !{!16575}
!16575 = !DILocalVariable(name: "thread", arg: 1, scope: !16571, file: !3299, line: 310, type: !16430)
!16576 = !DILocation(line: 0, scope: !16571)
!16577 = !DILocation(line: 319, column: 2, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16571, file: !3299, line: 319, column: 2)
!16579 = !{i64 2155112733}
!16580 = !DILocation(line: 320, column: 2, scope: !16571)
!16581 = !DILocation(line: 321, column: 1, scope: !16571)
!16582 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2516, file: !2516, line: 1415, type: !16583, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16585)
!16583 = !DISubroutineType(types: !16584)
!16584 = !{!774, !103}
!16585 = !{!16586, !16587, !16588, !16589}
!16586 = !DILocalVariable(name: "ticks", arg: 1, scope: !16582, file: !2516, line: 1415, type: !103)
!16587 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16582, file: !2516, line: 1418, type: !110)
!16588 = !DILocalVariable(name: "timeout", scope: !16582, file: !2516, line: 1430, type: !15582)
!16589 = !DILocalVariable(name: "key", scope: !16582, file: !2516, line: 1437, type: !14688)
!16590 = !DILocation(line: 0, scope: !16582)
!16591 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 1420, column: 2, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16595, file: !2516, line: 1420, column: 2)
!16595 = distinct !DILexicalBlock(scope: !16582, file: !2516, line: 1420, column: 2)
!16596 = !DILocation(line: 0, scope: !15421, inlinedAt: !16592)
!16597 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16593)
!16598 = !DILocation(line: 1420, column: 2, scope: !16595)
!16599 = !DILocation(line: 1420, column: 2, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16594, file: !2516, line: 1420, column: 2)
!16601 = !DILocation(line: 1425, column: 12, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16582, file: !2516, line: 1425, column: 6)
!16603 = !DILocation(line: 1425, column: 6, scope: !16582)
!16604 = !DILocation(line: 1426, column: 3, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16602, file: !2516, line: 1425, column: 18)
!16606 = !DILocation(line: 1427, column: 3, scope: !16605)
!16607 = !DILocation(line: 1431, column: 24, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16582, file: !2516, line: 1431, column: 6)
!16609 = !DILocation(line: 1431, column: 6, scope: !16582)
!16610 = !DILocation(line: 1432, column: 35, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16608, file: !2516, line: 1431, column: 30)
!16612 = !DILocation(line: 1432, column: 27, scope: !16611)
!16613 = !DILocation(line: 1433, column: 2, scope: !16611)
!16614 = !DILocation(line: 1434, column: 27, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16608, file: !2516, line: 1433, column: 9)
!16616 = !DILocation(line: 0, scope: !16608)
!16617 = !DILocation(line: 0, scope: !14696, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 1437, column: 25, scope: !16582)
!16619 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16618)
!16621 = !DILocation(line: 0, scope: !14705, inlinedAt: !16620)
!16622 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16618)
!16623 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16618)
!16624 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16618)
!16625 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16618)
!16626 = !DILocation(line: 1440, column: 20, scope: !16582)
!16627 = !DILocation(line: 1440, column: 18, scope: !16582)
!16628 = !DILocation(line: 1442, column: 2, scope: !16582)
!16629 = !DILocation(line: 1443, column: 23, scope: !16582)
!16630 = !DILocation(line: 1443, column: 2, scope: !16582)
!16631 = !DILocation(line: 1444, column: 29, scope: !16582)
!16632 = !DILocation(line: 1444, column: 2, scope: !16582)
!16633 = !DILocation(line: 0, scope: !15372, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 1446, column: 8, scope: !16582)
!16635 = !DILocation(line: 0, scope: !15381, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !16634)
!16637 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16636)
!16638 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !16636)
!16639 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !16636)
!16640 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16634)
!16641 = !DILocation(line: 1448, column: 2, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16643, file: !2516, line: 1448, column: 2)
!16643 = distinct !DILexicalBlock(scope: !16582, file: !2516, line: 1448, column: 2)
!16644 = !DILocation(line: 1448, column: 2, scope: !16643)
!16645 = !DILocation(line: 1448, column: 2, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16642, file: !2516, line: 1448, column: 2)
!16647 = !DILocation(line: 1450, column: 10, scope: !16582)
!16648 = !DILocation(line: 1450, column: 45, scope: !16582)
!16649 = !DILocation(line: 1450, column: 43, scope: !16582)
!16650 = !DILocation(line: 1451, column: 6, scope: !16582)
!16651 = !DILocation(line: 1457, column: 1, scope: !16582)
!16652 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14102, file: !14102, line: 1103, type: !14103, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16653)
!16653 = !{!16654}
!16654 = !DILocalVariable(name: "t", arg: 1, scope: !16652, file: !14102, line: 1103, type: !111)
!16655 = !DILocation(line: 0, scope: !16652)
!16656 = !DILocation(line: 0, scope: !14756, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 1106, column: 9, scope: !16652)
!16658 = !DILocation(line: 139, column: 13, scope: !16659, inlinedAt: !16657)
!16659 = distinct !DILexicalBlock(scope: !16660, file: !14102, line: 138, column: 10)
!16660 = distinct !DILexicalBlock(scope: !16661, file: !14102, line: 136, column: 7)
!16661 = distinct !DILexicalBlock(scope: !14777, file: !14102, line: 134, column: 17)
!16662 = !DILocation(line: 1106, column: 2, scope: !16652)
!16663 = distinct !DISubprogram(name: "k_yield", scope: !3299, file: !3299, line: 140, type: !3153, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16664 = !DILocation(line: 148, column: 2, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16663, file: !3299, line: 148, column: 2)
!16666 = !{i64 2155112053}
!16667 = !DILocation(line: 149, column: 2, scope: !16663)
!16668 = !DILocation(line: 150, column: 1, scope: !16663)
!16669 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2516, file: !2516, line: 1495, type: !16670, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16672)
!16670 = !DISubroutineType(types: !16671)
!16671 = !{!774, !109}
!16672 = !{!16673, !16674}
!16673 = !DILocalVariable(name: "us", arg: 1, scope: !16669, file: !2516, line: 1495, type: !109)
!16674 = !DILocalVariable(name: "ticks", scope: !16669, file: !2516, line: 1497, type: !774)
!16675 = !DILocation(line: 0, scope: !16669)
!16676 = !DILocation(line: 1501, column: 31, scope: !16669)
!16677 = !DILocation(line: 1501, column: 10, scope: !16669)
!16678 = !DILocation(line: 1502, column: 23, scope: !16669)
!16679 = !DILocation(line: 1502, column: 10, scope: !16669)
!16680 = !DILocation(line: 1506, column: 31, scope: !16669)
!16681 = !DILocation(line: 1506, column: 9, scope: !16669)
!16682 = !DILocation(line: 1506, column: 2, scope: !16669)
!16683 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14102, file: !14102, line: 571, type: !14103, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16684)
!16684 = !{!16685}
!16685 = !DILocalVariable(name: "t", arg: 1, scope: !16683, file: !14102, line: 571, type: !111)
!16686 = !DILocation(line: 0, scope: !16683)
!16687 = !DILocation(line: 0, scope: !14756, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 574, column: 9, scope: !16683)
!16689 = !DILocation(line: 135, column: 5, scope: !16661, inlinedAt: !16688)
!16690 = !DILocation(line: 139, column: 13, scope: !16659, inlinedAt: !16688)
!16691 = !DILocation(line: 574, column: 2, scope: !16683)
!16692 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14102, file: !14102, line: 1187, type: !14103, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16693)
!16693 = !{!16694}
!16694 = !DILocalVariable(name: "t", arg: 1, scope: !16692, file: !14102, line: 1187, type: !111)
!16695 = !DILocation(line: 0, scope: !16692)
!16696 = !DILocation(line: 0, scope: !14756, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 1190, column: 9, scope: !16692)
!16698 = !DILocation(line: 145, column: 13, scope: !16699, inlinedAt: !16697)
!16699 = distinct !DILexicalBlock(scope: !14774, file: !14102, line: 144, column: 10)
!16700 = !DILocation(line: 1190, column: 2, scope: !16692)
!16701 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2516, file: !2516, line: 1517, type: !16572, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16702)
!16702 = !{!16703}
!16703 = !DILocalVariable(name: "thread", arg: 1, scope: !16701, file: !2516, line: 1517, type: !16430)
!16704 = !DILocation(line: 0, scope: !16701)
!16705 = !DILocation(line: 1521, column: 6, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16701, file: !2516, line: 1521, column: 6)
!16707 = !DILocation(line: 1521, column: 6, scope: !16701)
!16708 = !DILocation(line: 1525, column: 6, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16701, file: !2516, line: 1525, column: 6)
!16710 = !DILocation(line: 1525, column: 37, scope: !16709)
!16711 = !DILocation(line: 1525, column: 6, scope: !16701)
!16712 = !DILocation(line: 1527, column: 20, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !2516, line: 1527, column: 7)
!16714 = distinct !DILexicalBlock(scope: !16709, file: !2516, line: 1525, column: 42)
!16715 = !DILocation(line: 1527, column: 33, scope: !16713)
!16716 = !DILocation(line: 1527, column: 7, scope: !16714)
!16717 = !DILocation(line: 1532, column: 2, scope: !16701)
!16718 = !DILocation(line: 1533, column: 2, scope: !16701)
!16719 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 1537, column: 7, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16701, file: !2516, line: 1537, column: 6)
!16723 = !DILocation(line: 0, scope: !15421, inlinedAt: !16720)
!16724 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16721)
!16725 = !DILocation(line: 1537, column: 6, scope: !16701)
!16726 = !DILocation(line: 1538, column: 3, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16722, file: !2516, line: 1537, column: 25)
!16728 = !DILocation(line: 1539, column: 2, scope: !16727)
!16729 = !DILocation(line: 1540, column: 1, scope: !16701)
!16730 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13483, file: !13483, line: 101, type: !14837, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16731)
!16731 = !{!16732}
!16732 = !DILocalVariable(name: "thread", arg: 1, scope: !16730, file: !13483, line: 101, type: !2408)
!16733 = !DILocation(line: 0, scope: !16730)
!16734 = !DILocation(line: 103, column: 23, scope: !16730)
!16735 = !DILocation(line: 103, column: 36, scope: !16730)
!16736 = !DILocation(line: 103, column: 55, scope: !16730)
!16737 = !DILocation(line: 103, column: 2, scope: !16730)
!16738 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2516, file: !2516, line: 1567, type: !16739, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16741)
!16739 = !DISubroutineType(types: !16740)
!16740 = !{!16430}
!16741 = !{!16742}
!16742 = !DILocalVariable(name: "ret", scope: !16738, file: !2516, line: 1577, type: !16430)
!16743 = !DILocation(line: 1577, column: 30, scope: !16738)
!16744 = !DILocation(line: 0, scope: !16738)
!16745 = !DILocation(line: 1582, column: 2, scope: !16738)
!16746 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2516, file: !2516, line: 1593, type: !7838, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !2104)
!16747 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 1595, column: 10, scope: !16746)
!16750 = !DILocation(line: 0, scope: !15421, inlinedAt: !16748)
!16751 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16749)
!16752 = !DILocation(line: 1595, column: 27, scope: !16746)
!16753 = !DILocation(line: 1595, column: 41, scope: !16746)
!16754 = !DILocation(line: 1595, column: 30, scope: !16746)
!16755 = !DILocation(line: 1595, column: 2, scope: !16746)
!16756 = distinct !DISubprogram(name: "z_thread_abort", scope: !2516, file: !2516, line: 1725, type: !14654, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16757)
!16757 = !{!16758, !16759}
!16758 = !DILocalVariable(name: "thread", arg: 1, scope: !16756, file: !2516, line: 1725, type: !2408)
!16759 = !DILocalVariable(name: "key", scope: !16756, file: !2516, line: 1727, type: !14688)
!16760 = !DILocation(line: 0, scope: !16756)
!16761 = !DILocation(line: 0, scope: !14696, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 1727, column: 25, scope: !16756)
!16763 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16762)
!16765 = !DILocation(line: 0, scope: !14705, inlinedAt: !16764)
!16766 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16762)
!16767 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16762)
!16768 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16762)
!16769 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16762)
!16770 = !DILocation(line: 1729, column: 20, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16756, file: !2516, line: 1729, column: 6)
!16772 = !DILocation(line: 1729, column: 33, scope: !16771)
!16773 = !DILocation(line: 1729, column: 48, scope: !16771)
!16774 = !DILocation(line: 1729, column: 6, scope: !16756)
!16775 = !DILocation(line: 0, scope: !14730, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 1730, column: 3, scope: !16777)
!16777 = distinct !DILexicalBlock(scope: !16771, file: !2516, line: 1729, column: 54)
!16778 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16776)
!16779 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16776)
!16780 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16776)
!16781 = !DILocation(line: 0, scope: !14744, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16776)
!16783 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16782)
!16784 = !DILocation(line: 1731, column: 3, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16786, file: !2516, line: 1731, column: 3)
!16786 = distinct !DILexicalBlock(scope: !16787, file: !2516, line: 1731, column: 3)
!16787 = distinct !DILexicalBlock(scope: !16777, file: !2516, line: 1731, column: 3)
!16788 = !DILocation(line: 1736, column: 20, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16756, file: !2516, line: 1736, column: 6)
!16790 = !DILocation(line: 1736, column: 33, scope: !16789)
!16791 = !DILocation(line: 1736, column: 49, scope: !16789)
!16792 = !DILocation(line: 1736, column: 6, scope: !16756)
!16793 = !DILocation(line: 0, scope: !14730, inlinedAt: !16794)
!16794 = distinct !DILocation(line: 1737, column: 3, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16789, file: !2516, line: 1736, column: 56)
!16796 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16794)
!16797 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16794)
!16798 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16794)
!16799 = !DILocation(line: 0, scope: !14744, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16794)
!16801 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16800)
!16802 = !DILocation(line: 1738, column: 3, scope: !16795)
!16803 = !DILocation(line: 1775, column: 2, scope: !16756)
!16804 = !DILocation(line: 1776, column: 16, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16756, file: !2516, line: 1776, column: 6)
!16806 = !DILocation(line: 1776, column: 13, scope: !16805)
!16807 = !DILocation(line: 1776, column: 25, scope: !16805)
!16808 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16810)
!16810 = distinct !DILocation(line: 1776, column: 29, scope: !16805)
!16811 = !DILocation(line: 0, scope: !15421, inlinedAt: !16809)
!16812 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16810)
!16813 = !DILocation(line: 1776, column: 6, scope: !16756)
!16814 = !DILocation(line: 0, scope: !15372, inlinedAt: !16815)
!16815 = distinct !DILocation(line: 1777, column: 3, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16805, file: !2516, line: 1776, column: 47)
!16817 = !DILocation(line: 0, scope: !15381, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !16815)
!16819 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16818)
!16820 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !16818)
!16821 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !16818)
!16822 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16815)
!16823 = !DILocation(line: 1778, column: 3, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2516, line: 1778, column: 3)
!16825 = distinct !DILexicalBlock(scope: !16826, file: !2516, line: 1778, column: 3)
!16826 = distinct !DILexicalBlock(scope: !16816, file: !2516, line: 1778, column: 3)
!16827 = !DILocation(line: 0, scope: !14730, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 1780, column: 2, scope: !16756)
!16829 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16828)
!16830 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16828)
!16831 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16828)
!16832 = !DILocation(line: 0, scope: !14744, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16828)
!16834 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16833)
!16835 = !DILocation(line: 1781, column: 1, scope: !16756)
!16836 = distinct !DISubprogram(name: "end_thread", scope: !2516, file: !2516, line: 1690, type: !14654, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16837)
!16837 = !{!16838}
!16838 = !DILocalVariable(name: "thread", arg: 1, scope: !16836, file: !2516, line: 1690, type: !2408)
!16839 = !DILocation(line: 0, scope: !16836)
!16840 = !DILocation(line: 1695, column: 20, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16836, file: !2516, line: 1695, column: 6)
!16842 = !DILocation(line: 1695, column: 33, scope: !16841)
!16843 = !DILocation(line: 1695, column: 49, scope: !16841)
!16844 = !DILocation(line: 1695, column: 6, scope: !16836)
!16845 = !DILocation(line: 1697, column: 29, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16841, file: !2516, line: 1695, column: 56)
!16847 = !DILocation(line: 1698, column: 7, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16846, file: !2516, line: 1698, column: 7)
!16849 = !DILocation(line: 1698, column: 7, scope: !16846)
!16850 = !DILocation(line: 0, scope: !14888, inlinedAt: !16851)
!16851 = distinct !DILocation(line: 1699, column: 4, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16848, file: !2516, line: 1698, column: 35)
!16853 = !DILocation(line: 266, column: 28, scope: !14888, inlinedAt: !16851)
!16854 = !DILocation(line: 0, scope: !14896, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 268, column: 3, scope: !14900, inlinedAt: !16851)
!16856 = !DILocation(line: 234, column: 2, scope: !14896, inlinedAt: !16855)
!16857 = !DILocation(line: 1700, column: 3, scope: !16852)
!16858 = !DILocation(line: 1701, column: 20, scope: !16859)
!16859 = distinct !DILexicalBlock(scope: !16846, file: !2516, line: 1701, column: 7)
!16860 = !DILocation(line: 1701, column: 30, scope: !16859)
!16861 = !DILocation(line: 1701, column: 7, scope: !16846)
!16862 = !DILocation(line: 1702, column: 4, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16859, file: !2516, line: 1701, column: 39)
!16864 = !DILocation(line: 1703, column: 3, scope: !16863)
!16865 = !DILocation(line: 1704, column: 9, scope: !16846)
!16866 = !DILocation(line: 1705, column: 23, scope: !16846)
!16867 = !DILocation(line: 1705, column: 3, scope: !16846)
!16868 = !DILocation(line: 1706, column: 3, scope: !16846)
!16869 = !DILocation(line: 1722, column: 2, scope: !16846)
!16870 = !DILocation(line: 1723, column: 1, scope: !16836)
!16871 = distinct !DISubprogram(name: "unpend_all", scope: !2516, file: !2516, line: 1674, type: !16872, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16874)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{null, !2439}
!16874 = !{!16875, !16876}
!16875 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16871, file: !2516, line: 1674, type: !2439)
!16876 = !DILocalVariable(name: "thread", scope: !16871, file: !2516, line: 1676, type: !2408)
!16877 = !DILocation(line: 0, scope: !16871)
!16878 = !DILocation(line: 1678, column: 19, scope: !16871)
!16879 = !DILocation(line: 1678, column: 41, scope: !16871)
!16880 = !DILocation(line: 1678, column: 2, scope: !16871)
!16881 = !DILocation(line: 1679, column: 3, scope: !16882)
!16882 = distinct !DILexicalBlock(scope: !16871, file: !2516, line: 1678, column: 50)
!16883 = !DILocation(line: 1680, column: 9, scope: !16882)
!16884 = !DILocalVariable(name: "thread", arg: 1, scope: !16885, file: !13503, line: 65, type: !2408)
!16885 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13503, file: !13503, line: 65, type: !16886, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16888)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{null, !2408, !32}
!16888 = !{!16884, !16889}
!16889 = !DILocalVariable(name: "value", arg: 2, scope: !16885, file: !13503, line: 65, type: !32)
!16890 = !DILocation(line: 0, scope: !16885, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 1681, column: 3, scope: !16882)
!16892 = !DILocation(line: 67, column: 15, scope: !16885, inlinedAt: !16891)
!16893 = !DILocation(line: 67, column: 33, scope: !16885, inlinedAt: !16891)
!16894 = !DILocation(line: 1682, column: 3, scope: !16882)
!16895 = distinct !{!16895, !16880, !16896}
!16896 = !DILocation(line: 1683, column: 2, scope: !16871)
!16897 = !DILocation(line: 1684, column: 1, scope: !16871)
!16898 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2516, file: !2516, line: 1794, type: !16899, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16901)
!16899 = !DISubroutineType(types: !16900)
!16900 = !{!109, !2408, !15582}
!16901 = !{!16902, !16903, !16904, !16905}
!16902 = !DILocalVariable(name: "thread", arg: 1, scope: !16898, file: !2516, line: 1794, type: !2408)
!16903 = !DILocalVariable(name: "timeout", arg: 2, scope: !16898, file: !2516, line: 1794, type: !15582)
!16904 = !DILocalVariable(name: "key", scope: !16898, file: !2516, line: 1796, type: !14688)
!16905 = !DILocalVariable(name: "ret", scope: !16898, file: !2516, line: 1797, type: !109)
!16906 = !DILocation(line: 0, scope: !16898)
!16907 = !DILocation(line: 0, scope: !14696, inlinedAt: !16908)
!16908 = distinct !DILocation(line: 1796, column: 25, scope: !16898)
!16909 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16908)
!16911 = !DILocation(line: 0, scope: !14705, inlinedAt: !16910)
!16912 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16908)
!16913 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16908)
!16914 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16908)
!16915 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16908)
!16916 = !DILocation(line: 1801, column: 20, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16898, file: !2516, line: 1801, column: 6)
!16918 = !DILocation(line: 1801, column: 33, scope: !16917)
!16919 = !DILocation(line: 1801, column: 49, scope: !16917)
!16920 = !DILocation(line: 1801, column: 6, scope: !16898)
!16921 = !DILocation(line: 1803, column: 13, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16917, file: !2516, line: 1803, column: 13)
!16923 = !DILocation(line: 1803, column: 13, scope: !16917)
!16924 = !DILocation(line: 1805, column: 24, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16922, file: !2516, line: 1805, column: 13)
!16926 = !DILocation(line: 1805, column: 21, scope: !16925)
!16927 = !DILocation(line: 1805, column: 34, scope: !16925)
!16928 = !DILocation(line: 1806, column: 20, scope: !16925)
!16929 = !DILocation(line: 1806, column: 44, scope: !16925)
!16930 = !DILocation(line: 1806, column: 30, scope: !16925)
!16931 = !DILocation(line: 1805, column: 13, scope: !16922)
!16932 = !DILocation(line: 1031, column: 3, scope: !15421, inlinedAt: !16933)
!16933 = distinct !DILocation(line: 48, column: 10, scope: !15425, inlinedAt: !16934)
!16934 = distinct !DILocation(line: 1809, column: 3, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2516, line: 1809, column: 3)
!16936 = distinct !DILexicalBlock(scope: !16937, file: !2516, line: 1809, column: 3)
!16937 = distinct !DILexicalBlock(scope: !16925, file: !2516, line: 1808, column: 9)
!16938 = !DILocation(line: 0, scope: !15421, inlinedAt: !16933)
!16939 = !DILocation(line: 48, column: 9, scope: !15425, inlinedAt: !16934)
!16940 = !DILocation(line: 1809, column: 3, scope: !16936)
!16941 = !DILocation(line: 1809, column: 3, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16935, file: !2516, line: 1809, column: 3)
!16943 = !DILocation(line: 1810, column: 23, scope: !16937)
!16944 = !DILocation(line: 1810, column: 42, scope: !16937)
!16945 = !DILocation(line: 1810, column: 3, scope: !16937)
!16946 = !DILocation(line: 1811, column: 22, scope: !16937)
!16947 = !DILocation(line: 1811, column: 3, scope: !16937)
!16948 = !DILocation(line: 0, scope: !15372, inlinedAt: !16949)
!16949 = distinct !DILocation(line: 1814, column: 9, scope: !16937)
!16950 = !DILocation(line: 0, scope: !15381, inlinedAt: !16951)
!16951 = distinct !DILocation(line: 195, column: 2, scope: !15372, inlinedAt: !16949)
!16952 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16951)
!16953 = !DILocation(line: 225, column: 2, scope: !15389, inlinedAt: !16951)
!16954 = !DILocation(line: 225, column: 2, scope: !15392, inlinedAt: !16951)
!16955 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16949)
!16956 = !DILocation(line: 1817, column: 3, scope: !16937)
!16957 = !DILocation(line: 0, scope: !16917)
!16958 = !DILocation(line: 0, scope: !14730, inlinedAt: !16959)
!16959 = distinct !DILocation(line: 1822, column: 2, scope: !16898)
!16960 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16959)
!16961 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !16959)
!16962 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !16959)
!16963 = !DILocation(line: 0, scope: !14744, inlinedAt: !16964)
!16964 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !16959)
!16965 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !16964)
!16966 = !DILocation(line: 1823, column: 2, scope: !16898)
!16967 = !DILocation(line: 1824, column: 1, scope: !16898)
!16968 = distinct !DISubprogram(name: "z_sched_wake", scope: !2516, file: !2516, line: 1882, type: !16969, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !16971)
!16969 = !DISubroutineType(types: !16970)
!16970 = !{!347, !2439, !109, !107}
!16971 = !{!16972, !16973, !16974, !16975, !16976, !16977, !16979}
!16972 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16968, file: !2516, line: 1882, type: !2439)
!16973 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16968, file: !2516, line: 1882, type: !109)
!16974 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16968, file: !2516, line: 1882, type: !107)
!16975 = !DILocalVariable(name: "thread", scope: !16968, file: !2516, line: 1884, type: !2408)
!16976 = !DILocalVariable(name: "ret", scope: !16968, file: !2516, line: 1885, type: !347)
!16977 = !DILocalVariable(name: "__i", scope: !16978, file: !2516, line: 1887, type: !14688)
!16978 = distinct !DILexicalBlock(scope: !16968, file: !2516, line: 1887, column: 2)
!16979 = !DILocalVariable(name: "__key", scope: !16978, file: !2516, line: 1887, type: !14688)
!16980 = !DILocation(line: 0, scope: !16968)
!16981 = !DILocation(line: 0, scope: !16978)
!16982 = !DILocation(line: 0, scope: !14696, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 1887, column: 2, scope: !16978)
!16984 = !DILocation(line: 55, column: 2, scope: !14705, inlinedAt: !16985)
!16985 = distinct !DILocation(line: 145, column: 10, scope: !14696, inlinedAt: !16983)
!16986 = !DILocation(line: 0, scope: !14705, inlinedAt: !16985)
!16987 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16983)
!16988 = !DILocation(line: 148, column: 2, scope: !14714, inlinedAt: !16983)
!16989 = !DILocation(line: 148, column: 2, scope: !14717, inlinedAt: !16983)
!16990 = !DILocation(line: 160, column: 2, scope: !14696, inlinedAt: !16983)
!16991 = !DILocation(line: 1888, column: 12, scope: !16992)
!16992 = distinct !DILexicalBlock(scope: !16993, file: !2516, line: 1887, column: 26)
!16993 = distinct !DILexicalBlock(scope: !16978, file: !2516, line: 1887, column: 2)
!16994 = !DILocation(line: 1890, column: 14, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16992, file: !2516, line: 1890, column: 7)
!16996 = !DILocation(line: 1890, column: 7, scope: !16992)
!16997 = !DILocalVariable(name: "thread", arg: 1, scope: !16998, file: !16999, line: 134, type: !2408)
!16998 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16999, file: !16999, line: 134, type: !17000, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !17002)
!16999 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17000 = !DISubroutineType(types: !17001)
!17001 = !{null, !2408, !32, !107}
!17002 = !{!16997, !17003, !17004}
!17003 = !DILocalVariable(name: "value", arg: 2, scope: !16998, file: !16999, line: 135, type: !32)
!17004 = !DILocalVariable(name: "data", arg: 3, scope: !16998, file: !16999, line: 136, type: !107)
!17005 = !DILocation(line: 0, scope: !16998, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 1891, column: 4, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !16995, file: !2516, line: 1890, column: 23)
!17008 = !DILocation(line: 0, scope: !16885, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 138, column: 2, scope: !16998, inlinedAt: !17006)
!17010 = !DILocation(line: 67, column: 15, scope: !16885, inlinedAt: !17009)
!17011 = !DILocation(line: 67, column: 33, scope: !16885, inlinedAt: !17009)
!17012 = !DILocation(line: 139, column: 15, scope: !16998, inlinedAt: !17006)
!17013 = !DILocation(line: 139, column: 25, scope: !16998, inlinedAt: !17006)
!17014 = !DILocation(line: 1894, column: 4, scope: !17007)
!17015 = !DILocation(line: 1895, column: 10, scope: !17007)
!17016 = !DILocation(line: 1896, column: 4, scope: !17007)
!17017 = !DILocation(line: 1898, column: 3, scope: !17007)
!17018 = !DILocation(line: 0, scope: !14730, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 1887, column: 2, scope: !16993)
!17020 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !17019)
!17021 = !DILocation(line: 194, column: 2, scope: !14739, inlinedAt: !17019)
!17022 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !17019)
!17023 = !DILocation(line: 0, scope: !14744, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 215, column: 2, scope: !14730, inlinedAt: !17019)
!17025 = !DILocation(line: 95, column: 2, scope: !14744, inlinedAt: !17024)
!17026 = !DILocation(line: 1901, column: 2, scope: !16968)
!17027 = distinct !DISubprogram(name: "z_sched_wait", scope: !2516, file: !2516, line: 1904, type: !17028, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2405, retainedNodes: !17031)
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!109, !14699, !14688, !2439, !15582, !17030}
!17030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!17031 = !{!17032, !17033, !17034, !17035, !17036, !17037}
!17032 = !DILocalVariable(name: "lock", arg: 1, scope: !17027, file: !2516, line: 1904, type: !14699)
!17033 = !DILocalVariable(name: "key", arg: 2, scope: !17027, file: !2516, line: 1904, type: !14688)
!17034 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17027, file: !2516, line: 1905, type: !2439)
!17035 = !DILocalVariable(name: "timeout", arg: 4, scope: !17027, file: !2516, line: 1905, type: !15582)
!17036 = !DILocalVariable(name: "data", arg: 5, scope: !17027, file: !2516, line: 1905, type: !17030)
!17037 = !DILocalVariable(name: "ret", scope: !17027, file: !2516, line: 1907, type: !109)
!17038 = !DILocation(line: 0, scope: !17027)
!17039 = !DILocation(line: 1907, column: 12, scope: !17027)
!17040 = !DILocation(line: 1909, column: 11, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17027, file: !2516, line: 1909, column: 6)
!17042 = !DILocation(line: 1909, column: 6, scope: !17027)
!17043 = !DILocation(line: 1910, column: 11, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17041, file: !2516, line: 1909, column: 20)
!17045 = !DILocation(line: 1910, column: 26, scope: !17044)
!17046 = !DILocation(line: 1910, column: 9, scope: !17044)
!17047 = !DILocation(line: 1911, column: 2, scope: !17044)
!17048 = !DILocation(line: 1912, column: 2, scope: !17027)
!17049 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2542, file: !2542, line: 16, type: !17050, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17061)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!109, !17052}
!17052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17053, size: 32)
!17053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !17054)
!17054 = !{!17055}
!17055 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17053, file: !118, line: 2829, baseType: !17056, size: 64)
!17056 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !17057)
!17057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !17058)
!17058 = !{!17059}
!17059 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17057, file: !122, line: 232, baseType: !17060, size: 64)
!17060 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2528)
!17061 = !{!17062}
!17062 = !DILocalVariable(name: "condvar", arg: 1, scope: !17049, file: !2542, line: 16, type: !17052)
!17063 = !DILocation(line: 0, scope: !17049)
!17064 = !DILocation(line: 18, column: 25, scope: !17049)
!17065 = !DILocation(line: 18, column: 2, scope: !17049)
!17066 = !DILocation(line: 23, column: 2, scope: !17049)
!17067 = distinct !DISubprogram(name: "z_waitq_init", scope: !13844, file: !13844, line: 47, type: !17068, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17071)
!17068 = !DISubroutineType(types: !17069)
!17069 = !{null, !17070}
!17070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17056, size: 32)
!17071 = !{!17072}
!17072 = !DILocalVariable(name: "w", arg: 1, scope: !17067, file: !13844, line: 47, type: !17070)
!17073 = !DILocation(line: 0, scope: !17067)
!17074 = !DILocation(line: 49, column: 21, scope: !17067)
!17075 = !DILocation(line: 49, column: 2, scope: !17067)
!17076 = !DILocation(line: 50, column: 1, scope: !17067)
!17077 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !17078, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17081)
!17078 = !DISubroutineType(types: !17079)
!17079 = !{null, !17080}
!17080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17060, size: 32)
!17081 = !{!17082}
!17082 = !DILocalVariable(name: "list", arg: 1, scope: !17077, file: !127, line: 197, type: !17080)
!17083 = !DILocation(line: 0, scope: !17077)
!17084 = !DILocation(line: 199, column: 8, scope: !17077)
!17085 = !DILocation(line: 199, column: 13, scope: !17077)
!17086 = !DILocation(line: 200, column: 8, scope: !17077)
!17087 = !DILocation(line: 200, column: 13, scope: !17077)
!17088 = !DILocation(line: 201, column: 1, scope: !17077)
!17089 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2542, file: !2542, line: 35, type: !17050, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17090)
!17090 = !{!17091, !17092, !17097}
!17091 = !DILocalVariable(name: "condvar", arg: 1, scope: !17089, file: !2542, line: 35, type: !17052)
!17092 = !DILocalVariable(name: "key", scope: !17089, file: !2542, line: 37, type: !17093)
!17093 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !17094)
!17094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !17095)
!17095 = !{!17096}
!17096 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17094, file: !253, line: 33, baseType: !109, size: 32)
!17097 = !DILocalVariable(name: "thread", scope: !17089, file: !2542, line: 41, type: !17098)
!17098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17099, size: 32)
!17099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !17100)
!17100 = !{!17101, !17139, !17151, !17152, !17153, !17154, !17155, !17161, !17173}
!17101 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17099, file: !158, line: 247, baseType: !17102, size: 384)
!17102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !17103)
!17103 = !{!17104, !17114, !17115, !17116, !17117, !17126, !17127, !17128}
!17104 = !DIDerivedType(tag: DW_TAG_member, scope: !17102, file: !158, line: 60, baseType: !17105, size: 64)
!17105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17102, file: !158, line: 60, size: 64, elements: !17106)
!17106 = !{!17107, !17108}
!17107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17105, file: !158, line: 61, baseType: !2527, size: 64)
!17108 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17105, file: !158, line: 62, baseType: !17109, size: 64)
!17109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !17110)
!17110 = !{!17111}
!17111 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17109, file: !170, line: 50, baseType: !17112, size: 64)
!17112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17113, size: 64, elements: !175)
!17113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17109, size: 32)
!17114 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17102, file: !158, line: 68, baseType: !17070, size: 32, offset: 64)
!17115 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17102, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!17116 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17102, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!17117 = !DIDerivedType(tag: DW_TAG_member, scope: !17102, file: !158, line: 90, baseType: !17118, size: 16, offset: 112)
!17118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17102, file: !158, line: 90, size: 16, elements: !17119)
!17119 = !{!17120, !17125}
!17120 = !DIDerivedType(tag: DW_TAG_member, scope: !17118, file: !158, line: 91, baseType: !17121, size: 16)
!17121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17118, file: !158, line: 91, size: 16, elements: !17122)
!17122 = !{!17123, !17124}
!17123 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17121, file: !158, line: 96, baseType: !190, size: 8)
!17124 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17121, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!17125 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17118, file: !158, line: 100, baseType: !194, size: 16)
!17126 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17102, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!17127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17102, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!17128 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17102, file: !158, line: 131, baseType: !17129, size: 192, offset: 192)
!17129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !17130)
!17130 = !{!17131, !17132, !17138}
!17131 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17129, file: !122, line: 245, baseType: !2527, size: 64)
!17132 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17129, file: !122, line: 246, baseType: !17133, size: 32, offset: 64)
!17133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !17134)
!17134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17135, size: 32)
!17135 = !DISubroutineType(types: !17136)
!17136 = !{null, !17137}
!17137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17129, size: 32)
!17138 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17129, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!17139 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17099, file: !158, line: 250, baseType: !17140, size: 288, offset: 384)
!17140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !17141)
!17141 = !{!17142, !17143, !17144, !17145, !17146, !17147, !17148, !17149, !17150}
!17142 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17140, file: !211, line: 26, baseType: !110, size: 32)
!17143 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17140, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!17144 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17140, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!17145 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17140, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!17146 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17140, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!17147 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17140, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17140, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!17149 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17140, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!17150 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17140, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!17151 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17099, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!17152 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17099, file: !158, line: 256, baseType: !17056, size: 64, offset: 704)
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17099, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!17154 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17099, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!17155 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17099, file: !158, line: 300, baseType: !17156, size: 96, offset: 1056)
!17156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !17157)
!17157 = !{!17158, !17159, !17160}
!17158 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17156, file: !158, line: 153, baseType: !22, size: 32)
!17159 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17156, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17156, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17099, file: !158, line: 325, baseType: !17162, size: 32, offset: 1152)
!17162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17163, size: 32)
!17163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !17164)
!17164 = !{!17165, !17171, !17172}
!17165 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17163, file: !118, line: 5074, baseType: !17166, size: 96)
!17166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !17167)
!17167 = !{!17168, !17169, !17170}
!17168 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17166, file: !243, line: 57, baseType: !246, size: 32)
!17169 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17166, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!17170 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17166, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!17171 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17163, file: !118, line: 5075, baseType: !17056, size: 64, offset: 96)
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17163, file: !118, line: 5076, baseType: !2543, size: 32, offset: 160)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17099, file: !158, line: 343, baseType: !17174, size: 64, offset: 1184)
!17174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !17175)
!17175 = !{!17176, !17177}
!17176 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17174, file: !211, line: 63, baseType: !110, size: 32)
!17177 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17174, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!17178 = !DILocation(line: 0, scope: !17089)
!17179 = !DILocalVariable(name: "l", arg: 1, scope: !17180, file: !253, line: 136, type: !17183)
!17180 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !17181, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17184)
!17181 = !DISubroutineType(types: !17182)
!17182 = !{!17093, !17183}
!17183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!17184 = !{!17179, !17185}
!17185 = !DILocalVariable(name: "k", scope: !17180, file: !253, line: 139, type: !17093)
!17186 = !DILocation(line: 0, scope: !17180, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 37, column: 25, scope: !17089)
!17188 = !DILocation(line: 55, column: 2, scope: !17189, inlinedAt: !17193)
!17189 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17190)
!17190 = !{!17191, !17192}
!17191 = !DILocalVariable(name: "key", scope: !17189, file: !6161, line: 44, type: !32)
!17192 = !DILocalVariable(name: "tmp", scope: !17189, file: !6161, line: 53, type: !32)
!17193 = distinct !DILocation(line: 145, column: 10, scope: !17180, inlinedAt: !17187)
!17194 = !{i64 2282029}
!17195 = !DILocation(line: 0, scope: !17189, inlinedAt: !17193)
!17196 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17187)
!17197 = distinct !DILexicalBlock(scope: !17198, file: !253, line: 148, column: 2)
!17198 = distinct !DILexicalBlock(scope: !17180, file: !253, line: 148, column: 2)
!17199 = !DILocation(line: 148, column: 2, scope: !17198, inlinedAt: !17187)
!17200 = !DILocation(line: 148, column: 2, scope: !17201, inlinedAt: !17187)
!17201 = distinct !DILexicalBlock(scope: !17197, file: !253, line: 148, column: 2)
!17202 = !DILocation(line: 160, column: 2, scope: !17180, inlinedAt: !17187)
!17203 = !DILocation(line: 41, column: 60, scope: !17089)
!17204 = !DILocation(line: 41, column: 28, scope: !17089)
!17205 = !DILocation(line: 43, column: 13, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17089, file: !2542, line: 43, column: 6)
!17207 = !DILocation(line: 43, column: 6, scope: !17089)
!17208 = !DILocalVariable(name: "thread", arg: 1, scope: !17209, file: !13503, line: 65, type: !17098)
!17209 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13503, file: !13503, line: 65, type: !17210, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17212)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{null, !17098, !32}
!17212 = !{!17208, !17213}
!17213 = !DILocalVariable(name: "value", arg: 2, scope: !17209, file: !13503, line: 65, type: !32)
!17214 = !DILocation(line: 0, scope: !17209, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 46, column: 3, scope: !17216)
!17216 = distinct !DILexicalBlock(scope: !17206, file: !2542, line: 43, column: 22)
!17217 = !DILocation(line: 67, column: 15, scope: !17209, inlinedAt: !17215)
!17218 = !DILocation(line: 67, column: 33, scope: !17209, inlinedAt: !17215)
!17219 = !DILocation(line: 47, column: 3, scope: !17216)
!17220 = !DILocation(line: 48, column: 3, scope: !17216)
!17221 = !DILocation(line: 49, column: 2, scope: !17216)
!17222 = !DILocalVariable(name: "key", arg: 2, scope: !17223, file: !253, line: 190, type: !17093)
!17223 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !17224, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17226)
!17224 = !DISubroutineType(types: !17225)
!17225 = !{null, !17183, !17093}
!17226 = !{!17227, !17222}
!17227 = !DILocalVariable(name: "l", arg: 1, scope: !17223, file: !253, line: 189, type: !17183)
!17228 = !DILocation(line: 0, scope: !17223, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 50, column: 3, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17206, file: !2542, line: 49, column: 9)
!17231 = !DILocation(line: 194, column: 2, scope: !17232, inlinedAt: !17229)
!17232 = distinct !DILexicalBlock(scope: !17233, file: !253, line: 194, column: 2)
!17233 = distinct !DILexicalBlock(scope: !17223, file: !253, line: 194, column: 2)
!17234 = !DILocation(line: 194, column: 2, scope: !17233, inlinedAt: !17229)
!17235 = !DILocation(line: 194, column: 2, scope: !17236, inlinedAt: !17229)
!17236 = distinct !DILexicalBlock(scope: !17232, file: !253, line: 194, column: 2)
!17237 = !DILocalVariable(name: "key", arg: 1, scope: !17238, file: !6161, line: 84, type: !32)
!17238 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17239)
!17239 = !{!17237}
!17240 = !DILocation(line: 0, scope: !17238, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 215, column: 2, scope: !17223, inlinedAt: !17229)
!17242 = !DILocation(line: 95, column: 2, scope: !17238, inlinedAt: !17241)
!17243 = !{i64 2282846}
!17244 = !DILocation(line: 55, column: 2, scope: !17089)
!17245 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2542, file: !2542, line: 67, type: !17050, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17246)
!17246 = !{!17247, !17248, !17249, !17250}
!17247 = !DILocalVariable(name: "condvar", arg: 1, scope: !17245, file: !2542, line: 67, type: !17052)
!17248 = !DILocalVariable(name: "pending_thread", scope: !17245, file: !2542, line: 69, type: !17098)
!17249 = !DILocalVariable(name: "key", scope: !17245, file: !2542, line: 70, type: !17093)
!17250 = !DILocalVariable(name: "woken", scope: !17245, file: !2542, line: 71, type: !109)
!17251 = !DILocation(line: 0, scope: !17245)
!17252 = !DILocation(line: 0, scope: !17180, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 73, column: 8, scope: !17245)
!17254 = !DILocation(line: 55, column: 2, scope: !17189, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 145, column: 10, scope: !17180, inlinedAt: !17253)
!17256 = !DILocation(line: 0, scope: !17189, inlinedAt: !17255)
!17257 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17253)
!17258 = !DILocation(line: 148, column: 2, scope: !17198, inlinedAt: !17253)
!17259 = !DILocation(line: 148, column: 2, scope: !17201, inlinedAt: !17253)
!17260 = !DILocation(line: 160, column: 2, scope: !17180, inlinedAt: !17253)
!17261 = !DILocation(line: 78, column: 27, scope: !17245)
!17262 = !DILocation(line: 78, column: 68, scope: !17245)
!17263 = !DILocation(line: 78, column: 2, scope: !17245)
!17264 = !DILocation(line: 80, column: 8, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17245, file: !2542, line: 79, column: 15)
!17266 = !DILocation(line: 0, scope: !17209, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 81, column: 3, scope: !17265)
!17268 = !DILocation(line: 67, column: 15, scope: !17209, inlinedAt: !17267)
!17269 = !DILocation(line: 67, column: 33, scope: !17209, inlinedAt: !17267)
!17270 = !DILocation(line: 82, column: 3, scope: !17265)
!17271 = distinct !{!17271, !17263, !17272}
!17272 = !DILocation(line: 83, column: 2, scope: !17245)
!17273 = !DILocation(line: 87, column: 2, scope: !17245)
!17274 = !DILocation(line: 89, column: 2, scope: !17245)
!17275 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2542, file: !2542, line: 100, type: !17276, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17289)
!17276 = !DISubroutineType(types: !17277)
!17277 = !{!109, !17052, !17278, !17285}
!17278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17279, size: 32)
!17279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !17280)
!17280 = !{!17281, !17282, !17283, !17284}
!17281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17279, file: !118, line: 2722, baseType: !17056, size: 64)
!17282 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !17279, file: !118, line: 2724, baseType: !17098, size: 32, offset: 64)
!17283 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !17279, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!17284 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !17279, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!17285 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !17286)
!17286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !17287)
!17287 = !{!17288}
!17288 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17286, file: !104, line: 66, baseType: !103, size: 64)
!17289 = !{!17290, !17291, !17292, !17293, !17294}
!17290 = !DILocalVariable(name: "condvar", arg: 1, scope: !17275, file: !2542, line: 100, type: !17052)
!17291 = !DILocalVariable(name: "mutex", arg: 2, scope: !17275, file: !2542, line: 100, type: !17278)
!17292 = !DILocalVariable(name: "timeout", arg: 3, scope: !17275, file: !2542, line: 101, type: !17285)
!17293 = !DILocalVariable(name: "key", scope: !17275, file: !2542, line: 103, type: !17093)
!17294 = !DILocalVariable(name: "ret", scope: !17275, file: !2542, line: 104, type: !109)
!17295 = !DILocation(line: 0, scope: !17275)
!17296 = !DILocation(line: 0, scope: !17180, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 108, column: 8, scope: !17275)
!17298 = !DILocation(line: 55, column: 2, scope: !17189, inlinedAt: !17299)
!17299 = distinct !DILocation(line: 145, column: 10, scope: !17180, inlinedAt: !17297)
!17300 = !DILocation(line: 0, scope: !17189, inlinedAt: !17299)
!17301 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17297)
!17302 = !DILocation(line: 148, column: 2, scope: !17198, inlinedAt: !17297)
!17303 = !DILocation(line: 148, column: 2, scope: !17201, inlinedAt: !17297)
!17304 = !DILocation(line: 160, column: 2, scope: !17180, inlinedAt: !17297)
!17305 = !DILocation(line: 109, column: 2, scope: !17275)
!17306 = !DILocation(line: 111, column: 42, scope: !17275)
!17307 = !DILocation(line: 111, column: 8, scope: !17275)
!17308 = !DILocation(line: 112, column: 2, scope: !17275)
!17309 = !DILocation(line: 116, column: 2, scope: !17275)
!17310 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3299, file: !3299, line: 944, type: !17311, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{!109, !17278}
!17313 = !{!17314}
!17314 = !DILocalVariable(name: "mutex", arg: 1, scope: !17310, file: !3299, line: 944, type: !17278)
!17315 = !DILocation(line: 0, scope: !17310)
!17316 = !DILocation(line: 952, column: 2, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17310, file: !3299, line: 952, column: 2)
!17318 = !{i64 2155071221}
!17319 = !DILocation(line: 953, column: 9, scope: !17310)
!17320 = !DILocation(line: 953, column: 2, scope: !17310)
!17321 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3299, file: !3299, line: 927, type: !17322, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !17324)
!17322 = !DISubroutineType(types: !17323)
!17323 = !{!109, !17278, !17285}
!17324 = !{!17325, !17326}
!17325 = !DILocalVariable(name: "mutex", arg: 1, scope: !17321, file: !3299, line: 927, type: !17278)
!17326 = !DILocalVariable(name: "timeout", arg: 2, scope: !17321, file: !3299, line: 927, type: !17285)
!17327 = !DILocation(line: 0, scope: !17321)
!17328 = !DILocation(line: 936, column: 2, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17321, file: !3299, line: 936, column: 2)
!17330 = !{i64 2155071153}
!17331 = !DILocation(line: 937, column: 9, scope: !17321)
!17332 = !DILocation(line: 937, column: 2, scope: !17321)
!17333 = distinct !DISubprogram(name: "z_data_copy", scope: !17334, file: !17334, line: 22, type: !3153, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3136, retainedNodes: !2104)
!17334 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17335 = !DILocation(line: 24, column: 2, scope: !17333)
!17336 = !DILocation(line: 27, column: 2, scope: !17333)
!17337 = !DILocation(line: 71, column: 1, scope: !17333)
!17338 = distinct !DISubprogram(name: "z_add_timeout", scope: !2578, file: !2578, line: 88, type: !17339, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17345)
!17339 = !DISubroutineType(types: !17340)
!17340 = !{null, !2551, !2570, !17341}
!17341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !17342)
!17342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !17343)
!17343 = !{!17344}
!17344 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17342, file: !104, line: 66, baseType: !103, size: 64)
!17345 = !{!17346, !17347, !17348, !17349, !17355, !17356, !17359, !17362}
!17346 = !DILocalVariable(name: "to", arg: 1, scope: !17338, file: !2578, line: 88, type: !2551)
!17347 = !DILocalVariable(name: "fn", arg: 2, scope: !17338, file: !2578, line: 88, type: !2570)
!17348 = !DILocalVariable(name: "timeout", arg: 3, scope: !17338, file: !2578, line: 89, type: !17341)
!17349 = !DILocalVariable(name: "__i", scope: !17350, file: !2578, line: 102, type: !17351)
!17350 = distinct !DILexicalBlock(scope: !17338, file: !2578, line: 102, column: 2)
!17351 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !17352)
!17352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !17353)
!17353 = !{!17354}
!17354 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17352, file: !253, line: 33, baseType: !109, size: 32)
!17355 = !DILocalVariable(name: "__key", scope: !17350, file: !2578, line: 102, type: !17351)
!17356 = !DILocalVariable(name: "t", scope: !17357, file: !2578, line: 103, type: !2551)
!17357 = distinct !DILexicalBlock(scope: !17358, file: !2578, line: 102, column: 24)
!17358 = distinct !DILexicalBlock(scope: !17350, file: !2578, line: 102, column: 2)
!17359 = !DILocalVariable(name: "ticks", scope: !17360, file: !2578, line: 107, type: !103)
!17360 = distinct !DILexicalBlock(scope: !17361, file: !2578, line: 106, column: 39)
!17361 = distinct !DILexicalBlock(scope: !17357, file: !2578, line: 105, column: 7)
!17362 = !DILocalVariable(name: "next_time", scope: !17363, file: !2578, line: 137, type: !774)
!17363 = distinct !DILexicalBlock(scope: !17364, file: !2578, line: 127, column: 22)
!17364 = distinct !DILexicalBlock(scope: !17357, file: !2578, line: 127, column: 7)
!17365 = !DILocation(line: 0, scope: !17338)
!17366 = !DILocation(line: 91, column: 6, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17338, file: !2578, line: 91, column: 6)
!17368 = !DILocation(line: 91, column: 6, scope: !17338)
!17369 = !DILocation(line: 99, column: 2, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17371, file: !2578, line: 99, column: 2)
!17371 = distinct !DILexicalBlock(scope: !17338, file: !2578, line: 99, column: 2)
!17372 = !DILocation(line: 99, column: 2, scope: !17371)
!17373 = !DILocation(line: 99, column: 2, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17370, file: !2578, line: 99, column: 2)
!17375 = !DILocation(line: 100, column: 6, scope: !17338)
!17376 = !DILocation(line: 100, column: 9, scope: !17338)
!17377 = !DILocation(line: 0, scope: !17350)
!17378 = !DILocalVariable(name: "l", arg: 1, scope: !17379, file: !253, line: 136, type: !17382)
!17379 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !17380, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17383)
!17380 = !DISubroutineType(types: !17381)
!17381 = !{!17351, !17382}
!17382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!17383 = !{!17378, !17384}
!17384 = !DILocalVariable(name: "k", scope: !17379, file: !253, line: 139, type: !17351)
!17385 = !DILocation(line: 0, scope: !17379, inlinedAt: !17386)
!17386 = distinct !DILocation(line: 102, column: 2, scope: !17350)
!17387 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17392)
!17388 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6161, file: !6161, line: 42, type: !6162, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17389)
!17389 = !{!17390, !17391}
!17390 = !DILocalVariable(name: "key", scope: !17388, file: !6161, line: 44, type: !32)
!17391 = !DILocalVariable(name: "tmp", scope: !17388, file: !6161, line: 53, type: !32)
!17392 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17386)
!17393 = !{i64 2287635}
!17394 = !DILocation(line: 0, scope: !17388, inlinedAt: !17392)
!17395 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17386)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !253, line: 148, column: 2)
!17397 = distinct !DILexicalBlock(scope: !17379, file: !253, line: 148, column: 2)
!17398 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17386)
!17399 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17386)
!17400 = distinct !DILexicalBlock(scope: !17396, file: !253, line: 148, column: 2)
!17401 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17386)
!17402 = !DILocation(line: 106, column: 33, scope: !17361)
!17403 = !DILocation(line: 105, column: 7, scope: !17357)
!17404 = !DILocation(line: 107, column: 50, scope: !17360)
!17405 = !DILocation(line: 107, column: 48, scope: !17360)
!17406 = !DILocation(line: 0, scope: !17360)
!17407 = !DILocation(line: 109, column: 17, scope: !17360)
!17408 = !DILocation(line: 110, column: 3, scope: !17360)
!17409 = !DILocation(line: 111, column: 31, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !17361, file: !2578, line: 110, column: 10)
!17411 = !DILocation(line: 111, column: 37, scope: !17410)
!17412 = !DILocation(line: 111, column: 35, scope: !17410)
!17413 = !DILocation(line: 0, scope: !17361)
!17414 = !DILocation(line: 109, column: 8, scope: !17360)
!17415 = !DILocation(line: 109, column: 15, scope: !17360)
!17416 = !DILocation(line: 114, column: 12, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17357, file: !2578, line: 114, column: 3)
!17418 = !DILocation(line: 0, scope: !17357)
!17419 = !DILocation(line: 114, column: 3, scope: !17417)
!17420 = !DILocation(line: 115, column: 24, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17422, file: !2578, line: 115, column: 8)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !2578, line: 114, column: 45)
!17423 = distinct !DILexicalBlock(scope: !17417, file: !2578, line: 114, column: 3)
!17424 = !DILocation(line: 115, column: 11, scope: !17421)
!17425 = !DILocation(line: 115, column: 18, scope: !17421)
!17426 = !DILocation(line: 115, column: 8, scope: !17422)
!17427 = !DILocation(line: 116, column: 15, scope: !17428)
!17428 = distinct !DILexicalBlock(scope: !17421, file: !2578, line: 115, column: 32)
!17429 = !DILocation(line: 117, column: 26, scope: !17428)
!17430 = !DILocation(line: 117, column: 5, scope: !17428)
!17431 = !DILocation(line: 123, column: 7, scope: !17357)
!17432 = !DILocation(line: 120, column: 15, scope: !17422)
!17433 = !DILocation(line: 114, column: 36, scope: !17423)
!17434 = distinct !{!17434, !17419, !17435}
!17435 = !DILocation(line: 121, column: 3, scope: !17417)
!17436 = !DILocation(line: 124, column: 4, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17438, file: !2578, line: 123, column: 18)
!17438 = distinct !DILexicalBlock(scope: !17357, file: !2578, line: 123, column: 7)
!17439 = !DILocation(line: 125, column: 3, scope: !17437)
!17440 = !DILocation(line: 127, column: 13, scope: !17364)
!17441 = !DILocation(line: 127, column: 10, scope: !17364)
!17442 = !DILocation(line: 127, column: 7, scope: !17357)
!17443 = !DILocation(line: 137, column: 24, scope: !17363)
!17444 = !DILocation(line: 0, scope: !17363)
!17445 = !DILocation(line: 139, column: 18, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17363, file: !2578, line: 139, column: 8)
!17447 = !DILocation(line: 139, column: 23, scope: !17446)
!17448 = !DILocation(line: 141, column: 5, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17446, file: !2578, line: 140, column: 48)
!17450 = !DILocation(line: 142, column: 4, scope: !17449)
!17451 = !DILocalVariable(name: "key", arg: 2, scope: !17452, file: !253, line: 190, type: !17351)
!17452 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !17453, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17455)
!17453 = !DISubroutineType(types: !17454)
!17454 = !{null, !17382, !17351}
!17455 = !{!17456, !17451}
!17456 = !DILocalVariable(name: "l", arg: 1, scope: !17452, file: !253, line: 189, type: !17382)
!17457 = !DILocation(line: 0, scope: !17452, inlinedAt: !17458)
!17458 = distinct !DILocation(line: 102, column: 2, scope: !17358)
!17459 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17458)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !253, line: 194, column: 2)
!17461 = distinct !DILexicalBlock(scope: !17452, file: !253, line: 194, column: 2)
!17462 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17458)
!17463 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17458)
!17464 = distinct !DILexicalBlock(scope: !17460, file: !253, line: 194, column: 2)
!17465 = !DILocalVariable(name: "key", arg: 1, scope: !17466, file: !6161, line: 84, type: !32)
!17466 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6161, file: !6161, line: 84, type: !6172, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17467)
!17467 = !{!17465}
!17468 = !DILocation(line: 0, scope: !17466, inlinedAt: !17469)
!17469 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17458)
!17470 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17469)
!17471 = !{i64 2288452}
!17472 = !DILocation(line: 148, column: 1, scope: !17338)
!17473 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !17474, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17478)
!17474 = !DISubroutineType(types: !17475)
!17475 = !{!347, !17476}
!17476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17477, size: 32)
!17477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2555)
!17478 = !{!17479}
!17479 = !DILocalVariable(name: "node", arg: 1, scope: !17473, file: !127, line: 225, type: !17476)
!17480 = !DILocation(line: 0, scope: !17473)
!17481 = !DILocation(line: 227, column: 15, scope: !17473)
!17482 = !DILocation(line: 227, column: 20, scope: !17473)
!17483 = !DILocation(line: 227, column: 2, scope: !17473)
!17484 = distinct !DISubprogram(name: "elapsed", scope: !2578, file: !2578, line: 62, type: !17485, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !2104)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{!774}
!17487 = !DILocation(line: 64, column: 9, scope: !17484)
!17488 = !DILocation(line: 64, column: 28, scope: !17484)
!17489 = !DILocation(line: 64, column: 35, scope: !17484)
!17490 = !DILocation(line: 64, column: 2, scope: !17484)
!17491 = distinct !DISubprogram(name: "first", scope: !2578, file: !2578, line: 39, type: !17492, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17494)
!17492 = !DISubroutineType(types: !17493)
!17493 = !{!2551}
!17494 = !{!17495}
!17495 = !DILocalVariable(name: "t", scope: !17491, file: !2578, line: 41, type: !17496)
!17496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!17497 = !DILocation(line: 41, column: 19, scope: !17491)
!17498 = !DILocation(line: 0, scope: !17491)
!17499 = !DILocation(line: 43, column: 9, scope: !17491)
!17500 = !DILocation(line: 43, column: 2, scope: !17491)
!17501 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !17502, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17504)
!17502 = !DISubroutineType(types: !17503)
!17503 = !{null, !17496, !17496}
!17504 = !{!17505, !17506, !17507}
!17505 = !DILocalVariable(name: "successor", arg: 1, scope: !17501, file: !127, line: 443, type: !17496)
!17506 = !DILocalVariable(name: "node", arg: 2, scope: !17501, file: !127, line: 443, type: !17496)
!17507 = !DILocalVariable(name: "prev", scope: !17501, file: !127, line: 445, type: !17508)
!17508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17496)
!17509 = !DILocation(line: 0, scope: !17501)
!17510 = !DILocation(line: 445, column: 39, scope: !17501)
!17511 = !DILocation(line: 447, column: 8, scope: !17501)
!17512 = !DILocation(line: 447, column: 13, scope: !17501)
!17513 = !DILocation(line: 448, column: 8, scope: !17501)
!17514 = !DILocation(line: 448, column: 13, scope: !17501)
!17515 = !DILocation(line: 449, column: 8, scope: !17501)
!17516 = !DILocation(line: 449, column: 13, scope: !17501)
!17517 = !DILocation(line: 450, column: 18, scope: !17501)
!17518 = !DILocation(line: 451, column: 1, scope: !17501)
!17519 = distinct !DISubprogram(name: "next", scope: !2578, file: !2578, line: 46, type: !17520, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17522)
!17520 = !DISubroutineType(types: !17521)
!17521 = !{!2551, !2551}
!17522 = !{!17523, !17524}
!17523 = !DILocalVariable(name: "t", arg: 1, scope: !17519, file: !2578, line: 46, type: !2551)
!17524 = !DILocalVariable(name: "n", scope: !17519, file: !2578, line: 48, type: !17496)
!17525 = !DILocation(line: 0, scope: !17519)
!17526 = !DILocation(line: 48, column: 58, scope: !17519)
!17527 = !DILocation(line: 48, column: 19, scope: !17519)
!17528 = !DILocation(line: 50, column: 9, scope: !17519)
!17529 = !DILocation(line: 50, column: 2, scope: !17519)
!17530 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !17531, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17534)
!17531 = !DISubroutineType(types: !17532)
!17532 = !{null, !17533, !17496}
!17533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!17534 = !{!17535, !17536, !17537}
!17535 = !DILocalVariable(name: "list", arg: 1, scope: !17530, file: !127, line: 404, type: !17533)
!17536 = !DILocalVariable(name: "node", arg: 2, scope: !17530, file: !127, line: 404, type: !17496)
!17537 = !DILocalVariable(name: "tail", scope: !17530, file: !127, line: 406, type: !17508)
!17538 = !DILocation(line: 0, scope: !17530)
!17539 = !DILocation(line: 406, column: 34, scope: !17530)
!17540 = !DILocation(line: 408, column: 8, scope: !17530)
!17541 = !DILocation(line: 408, column: 13, scope: !17530)
!17542 = !DILocation(line: 409, column: 8, scope: !17530)
!17543 = !DILocation(line: 409, column: 13, scope: !17530)
!17544 = !DILocation(line: 411, column: 8, scope: !17530)
!17545 = !DILocation(line: 411, column: 13, scope: !17530)
!17546 = !DILocation(line: 412, column: 13, scope: !17530)
!17547 = !DILocation(line: 413, column: 1, scope: !17530)
!17548 = distinct !DISubprogram(name: "next_timeout", scope: !2578, file: !2578, line: 67, type: !17485, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17549)
!17549 = !{!17550, !17551, !17552}
!17550 = !DILocalVariable(name: "to", scope: !17548, file: !2578, line: 69, type: !2551)
!17551 = !DILocalVariable(name: "ticks_elapsed", scope: !17548, file: !2578, line: 70, type: !774)
!17552 = !DILocalVariable(name: "ret", scope: !17548, file: !2578, line: 71, type: !774)
!17553 = !DILocation(line: 69, column: 24, scope: !17548)
!17554 = !DILocation(line: 0, scope: !17548)
!17555 = !DILocation(line: 70, column: 26, scope: !17548)
!17556 = !DILocation(line: 73, column: 10, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17548, file: !2578, line: 73, column: 6)
!17558 = !DILocation(line: 73, column: 19, scope: !17557)
!17559 = !DILocation(line: 74, column: 21, scope: !17557)
!17560 = !DILocation(line: 74, column: 30, scope: !17557)
!17561 = !DILocation(line: 74, column: 28, scope: !17557)
!17562 = !DILocation(line: 74, column: 45, scope: !17557)
!17563 = !DILocation(line: 73, column: 6, scope: !17548)
!17564 = !DILocation(line: 77, column: 9, scope: !17565)
!17565 = distinct !DILexicalBlock(scope: !17557, file: !2578, line: 76, column: 9)
!17566 = !DILocation(line: 0, scope: !17557)
!17567 = !DILocation(line: 81, column: 20, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17548, file: !2578, line: 81, column: 6)
!17569 = !DILocation(line: 81, column: 6, scope: !17568)
!17570 = !DILocation(line: 81, column: 32, scope: !17568)
!17571 = !DILocation(line: 85, column: 2, scope: !17548)
!17572 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !17573, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17575)
!17573 = !DISubroutineType(types: !17574)
!17574 = !{!17496, !17533, !17496}
!17575 = !{!17576, !17577}
!17576 = !DILocalVariable(name: "list", arg: 1, scope: !17572, file: !127, line: 341, type: !17533)
!17577 = !DILocalVariable(name: "node", arg: 2, scope: !17572, file: !127, line: 342, type: !17496)
!17578 = !DILocation(line: 0, scope: !17572)
!17579 = !DILocation(line: 344, column: 15, scope: !17572)
!17580 = !DILocation(line: 344, column: 9, scope: !17572)
!17581 = !DILocation(line: 344, column: 26, scope: !17572)
!17582 = !DILocation(line: 344, column: 2, scope: !17572)
!17583 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !17573, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17584)
!17584 = !{!17585, !17586}
!17585 = !DILocalVariable(name: "list", arg: 1, scope: !17583, file: !127, line: 325, type: !17533)
!17586 = !DILocalVariable(name: "node", arg: 2, scope: !17583, file: !127, line: 326, type: !17496)
!17587 = !DILocation(line: 0, scope: !17583)
!17588 = !DILocation(line: 328, column: 24, scope: !17583)
!17589 = !DILocation(line: 328, column: 15, scope: !17583)
!17590 = !DILocation(line: 328, column: 9, scope: !17583)
!17591 = !DILocation(line: 328, column: 45, scope: !17583)
!17592 = !DILocation(line: 328, column: 2, scope: !17583)
!17593 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !17594, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17596)
!17594 = !DISubroutineType(types: !17595)
!17595 = !{!17496, !17533}
!17596 = !{!17597}
!17597 = !DILocalVariable(name: "list", arg: 1, scope: !17593, file: !127, line: 294, type: !17533)
!17598 = !DILocation(line: 0, scope: !17593)
!17599 = !DILocation(line: 296, column: 9, scope: !17593)
!17600 = !DILocation(line: 296, column: 2, scope: !17593)
!17601 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !17602, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17604)
!17602 = !DISubroutineType(types: !17603)
!17603 = !{!347, !17533}
!17604 = !{!17605}
!17605 = !DILocalVariable(name: "list", arg: 1, scope: !17601, file: !127, line: 266, type: !17533)
!17606 = !DILocation(line: 0, scope: !17601)
!17607 = !DILocation(line: 268, column: 15, scope: !17601)
!17608 = !DILocation(line: 268, column: 20, scope: !17601)
!17609 = !DILocation(line: 268, column: 2, scope: !17601)
!17610 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2578, file: !2578, line: 150, type: !17611, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17613)
!17611 = !DISubroutineType(types: !17612)
!17612 = !{!109, !2551}
!17613 = !{!17614, !17615, !17616, !17618}
!17614 = !DILocalVariable(name: "to", arg: 1, scope: !17610, file: !2578, line: 150, type: !2551)
!17615 = !DILocalVariable(name: "ret", scope: !17610, file: !2578, line: 152, type: !109)
!17616 = !DILocalVariable(name: "__i", scope: !17617, file: !2578, line: 154, type: !17351)
!17617 = distinct !DILexicalBlock(scope: !17610, file: !2578, line: 154, column: 2)
!17618 = !DILocalVariable(name: "__key", scope: !17617, file: !2578, line: 154, type: !17351)
!17619 = !DILocation(line: 0, scope: !17610)
!17620 = !DILocation(line: 0, scope: !17617)
!17621 = !DILocation(line: 0, scope: !17379, inlinedAt: !17622)
!17622 = distinct !DILocation(line: 154, column: 2, scope: !17617)
!17623 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17622)
!17625 = !DILocation(line: 0, scope: !17388, inlinedAt: !17624)
!17626 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17622)
!17627 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17622)
!17628 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17622)
!17629 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17622)
!17630 = !DILocation(line: 155, column: 7, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17632, file: !2578, line: 155, column: 7)
!17632 = distinct !DILexicalBlock(scope: !17633, file: !2578, line: 154, column: 24)
!17633 = distinct !DILexicalBlock(scope: !17617, file: !2578, line: 154, column: 2)
!17634 = !DILocation(line: 155, column: 7, scope: !17632)
!17635 = !DILocation(line: 156, column: 4, scope: !17636)
!17636 = distinct !DILexicalBlock(scope: !17631, file: !2578, line: 155, column: 39)
!17637 = !DILocation(line: 158, column: 3, scope: !17636)
!17638 = !DILocation(line: 0, scope: !17452, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 154, column: 2, scope: !17633)
!17640 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17639)
!17641 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17639)
!17642 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17639)
!17643 = !DILocation(line: 0, scope: !17466, inlinedAt: !17644)
!17644 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17639)
!17645 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17644)
!17646 = !DILocation(line: 161, column: 2, scope: !17610)
!17647 = distinct !DISubprogram(name: "remove_timeout", scope: !2578, file: !2578, line: 53, type: !2572, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17648)
!17648 = !{!17649}
!17649 = !DILocalVariable(name: "t", arg: 1, scope: !17647, file: !2578, line: 53, type: !2551)
!17650 = !DILocation(line: 0, scope: !17647)
!17651 = !DILocation(line: 55, column: 6, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17647, file: !2578, line: 55, column: 6)
!17653 = !DILocation(line: 55, column: 14, scope: !17652)
!17654 = !DILocation(line: 55, column: 6, scope: !17647)
!17655 = !DILocation(line: 56, column: 25, scope: !17656)
!17656 = distinct !DILexicalBlock(scope: !17652, file: !2578, line: 55, column: 23)
!17657 = !DILocation(line: 56, column: 12, scope: !17656)
!17658 = !DILocation(line: 56, column: 19, scope: !17656)
!17659 = !DILocation(line: 57, column: 2, scope: !17656)
!17660 = !DILocation(line: 59, column: 23, scope: !17647)
!17661 = !DILocation(line: 59, column: 2, scope: !17647)
!17662 = !DILocation(line: 60, column: 1, scope: !17647)
!17663 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17664, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17666)
!17664 = !DISubroutineType(types: !17665)
!17665 = !{null, !17496}
!17666 = !{!17667, !17668, !17669}
!17667 = !DILocalVariable(name: "node", arg: 1, scope: !17663, file: !127, line: 496, type: !17496)
!17668 = !DILocalVariable(name: "prev", scope: !17663, file: !127, line: 498, type: !17508)
!17669 = !DILocalVariable(name: "next", scope: !17663, file: !127, line: 499, type: !17508)
!17670 = !DILocation(line: 0, scope: !17663)
!17671 = !DILocation(line: 498, column: 34, scope: !17663)
!17672 = !DILocation(line: 499, column: 34, scope: !17663)
!17673 = !DILocation(line: 501, column: 8, scope: !17663)
!17674 = !DILocation(line: 501, column: 13, scope: !17663)
!17675 = !DILocation(line: 502, column: 8, scope: !17663)
!17676 = !DILocation(line: 502, column: 13, scope: !17663)
!17677 = !DILocation(line: 503, column: 2, scope: !17663)
!17678 = !DILocation(line: 504, column: 1, scope: !17663)
!17679 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17664, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17680)
!17680 = !{!17681}
!17681 = !DILocalVariable(name: "node", arg: 1, scope: !17679, file: !127, line: 211, type: !17496)
!17682 = !DILocation(line: 0, scope: !17679)
!17683 = !DILocation(line: 213, column: 8, scope: !17679)
!17684 = !DILocation(line: 213, column: 13, scope: !17679)
!17685 = !DILocation(line: 214, column: 8, scope: !17679)
!17686 = !DILocation(line: 214, column: 13, scope: !17679)
!17687 = !DILocation(line: 215, column: 1, scope: !17679)
!17688 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2578, file: !2578, line: 183, type: !17689, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17693)
!17689 = !DISubroutineType(types: !17690)
!17690 = !{!103, !17691}
!17691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17692, size: 32)
!17692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2552)
!17693 = !{!17694, !17695, !17696, !17698}
!17694 = !DILocalVariable(name: "timeout", arg: 1, scope: !17688, file: !2578, line: 183, type: !17691)
!17695 = !DILocalVariable(name: "ticks", scope: !17688, file: !2578, line: 185, type: !103)
!17696 = !DILocalVariable(name: "__i", scope: !17697, file: !2578, line: 187, type: !17351)
!17697 = distinct !DILexicalBlock(scope: !17688, file: !2578, line: 187, column: 2)
!17698 = !DILocalVariable(name: "__key", scope: !17697, file: !2578, line: 187, type: !17351)
!17699 = !DILocation(line: 0, scope: !17688)
!17700 = !DILocation(line: 0, scope: !17697)
!17701 = !DILocation(line: 0, scope: !17379, inlinedAt: !17702)
!17702 = distinct !DILocation(line: 187, column: 2, scope: !17697)
!17703 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17704)
!17704 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17702)
!17705 = !DILocation(line: 0, scope: !17388, inlinedAt: !17704)
!17706 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17702)
!17707 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17702)
!17708 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17702)
!17709 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17702)
!17710 = !DILocation(line: 188, column: 11, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17712, file: !2578, line: 187, column: 24)
!17712 = distinct !DILexicalBlock(scope: !17697, file: !2578, line: 187, column: 2)
!17713 = !DILocation(line: 0, scope: !17452, inlinedAt: !17714)
!17714 = distinct !DILocation(line: 187, column: 2, scope: !17712)
!17715 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17714)
!17716 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17714)
!17717 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17714)
!17718 = !DILocation(line: 0, scope: !17466, inlinedAt: !17719)
!17719 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17714)
!17720 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17719)
!17721 = !DILocation(line: 191, column: 2, scope: !17688)
!17722 = distinct !DISubprogram(name: "timeout_rem", scope: !2578, file: !2578, line: 165, type: !17689, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17723)
!17723 = !{!17724, !17725, !17726}
!17724 = !DILocalVariable(name: "timeout", arg: 1, scope: !17722, file: !2578, line: 165, type: !17691)
!17725 = !DILocalVariable(name: "ticks", scope: !17722, file: !2578, line: 167, type: !103)
!17726 = !DILocalVariable(name: "t", scope: !17727, file: !2578, line: 173, type: !2551)
!17727 = distinct !DILexicalBlock(scope: !17722, file: !2578, line: 173, column: 2)
!17728 = !DILocation(line: 0, scope: !17722)
!17729 = !DILocation(line: 169, column: 6, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17722, file: !2578, line: 169, column: 6)
!17731 = !DILocation(line: 169, column: 6, scope: !17722)
!17732 = !DILocation(line: 173, column: 28, scope: !17727)
!17733 = !DILocation(line: 0, scope: !17727)
!17734 = !DILocation(line: 173, column: 39, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17727, file: !2578, line: 173, column: 2)
!17736 = !DILocation(line: 173, column: 2, scope: !17727)
!17737 = !DILocation(line: 174, column: 15, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17735, file: !2578, line: 173, column: 61)
!17739 = !DILocation(line: 174, column: 9, scope: !17738)
!17740 = !DILocation(line: 175, column: 15, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17738, file: !2578, line: 175, column: 7)
!17742 = !DILocation(line: 175, column: 7, scope: !17738)
!17743 = !DILocation(line: 173, column: 52, scope: !17735)
!17744 = distinct !{!17744, !17736, !17745}
!17745 = !DILocation(line: 178, column: 2, scope: !17727)
!17746 = !DILocation(line: 180, column: 17, scope: !17722)
!17747 = !DILocation(line: 180, column: 15, scope: !17722)
!17748 = !DILocation(line: 180, column: 2, scope: !17722)
!17749 = !DILocation(line: 181, column: 1, scope: !17722)
!17750 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13912, file: !13912, line: 35, type: !17751, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17753)
!17751 = !DISubroutineType(types: !17752)
!17752 = !{!347, !17691}
!17753 = !{!17754}
!17754 = !DILocalVariable(name: "to", arg: 1, scope: !17750, file: !13912, line: 35, type: !17691)
!17755 = !DILocation(line: 0, scope: !17750)
!17756 = !DILocation(line: 37, column: 35, scope: !17750)
!17757 = !DILocation(line: 37, column: 10, scope: !17750)
!17758 = !DILocation(line: 37, column: 9, scope: !17750)
!17759 = !DILocation(line: 37, column: 2, scope: !17750)
!17760 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2578, file: !2578, line: 194, type: !17689, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17761)
!17761 = !{!17762, !17763, !17764, !17766}
!17762 = !DILocalVariable(name: "timeout", arg: 1, scope: !17760, file: !2578, line: 194, type: !17691)
!17763 = !DILocalVariable(name: "ticks", scope: !17760, file: !2578, line: 196, type: !103)
!17764 = !DILocalVariable(name: "__i", scope: !17765, file: !2578, line: 198, type: !17351)
!17765 = distinct !DILexicalBlock(scope: !17760, file: !2578, line: 198, column: 2)
!17766 = !DILocalVariable(name: "__key", scope: !17765, file: !2578, line: 198, type: !17351)
!17767 = !DILocation(line: 0, scope: !17760)
!17768 = !DILocation(line: 0, scope: !17765)
!17769 = !DILocation(line: 0, scope: !17379, inlinedAt: !17770)
!17770 = distinct !DILocation(line: 198, column: 2, scope: !17765)
!17771 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17772)
!17772 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17770)
!17773 = !DILocation(line: 0, scope: !17388, inlinedAt: !17772)
!17774 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17770)
!17775 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17770)
!17776 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17770)
!17777 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17770)
!17778 = !DILocation(line: 199, column: 11, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17780, file: !2578, line: 198, column: 24)
!17780 = distinct !DILexicalBlock(scope: !17765, file: !2578, line: 198, column: 2)
!17781 = !DILocation(line: 199, column: 23, scope: !17779)
!17782 = !DILocation(line: 0, scope: !17452, inlinedAt: !17783)
!17783 = distinct !DILocation(line: 198, column: 2, scope: !17780)
!17784 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17783)
!17785 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17783)
!17786 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17783)
!17787 = !DILocation(line: 0, scope: !17466, inlinedAt: !17788)
!17788 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17783)
!17789 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17788)
!17790 = !DILocation(line: 199, column: 21, scope: !17779)
!17791 = !DILocation(line: 202, column: 2, scope: !17760)
!17792 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2578, file: !2578, line: 205, type: !17485, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17793)
!17793 = !{!17794, !17795, !17797}
!17794 = !DILocalVariable(name: "ret", scope: !17792, file: !2578, line: 207, type: !774)
!17795 = !DILocalVariable(name: "__i", scope: !17796, file: !2578, line: 209, type: !17351)
!17796 = distinct !DILexicalBlock(scope: !17792, file: !2578, line: 209, column: 2)
!17797 = !DILocalVariable(name: "__key", scope: !17796, file: !2578, line: 209, type: !17351)
!17798 = !DILocation(line: 0, scope: !17792)
!17799 = !DILocation(line: 0, scope: !17796)
!17800 = !DILocation(line: 0, scope: !17379, inlinedAt: !17801)
!17801 = distinct !DILocation(line: 209, column: 2, scope: !17796)
!17802 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17803)
!17803 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17801)
!17804 = !DILocation(line: 0, scope: !17388, inlinedAt: !17803)
!17805 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17801)
!17806 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17801)
!17807 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17801)
!17808 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17801)
!17809 = !DILocation(line: 210, column: 9, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17811, file: !2578, line: 209, column: 24)
!17811 = distinct !DILexicalBlock(scope: !17796, file: !2578, line: 209, column: 2)
!17812 = !DILocation(line: 0, scope: !17452, inlinedAt: !17813)
!17813 = distinct !DILocation(line: 209, column: 2, scope: !17811)
!17814 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17813)
!17815 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17813)
!17816 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17813)
!17817 = !DILocation(line: 0, scope: !17466, inlinedAt: !17818)
!17818 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17813)
!17819 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17818)
!17820 = !DILocation(line: 212, column: 2, scope: !17792)
!17821 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2578, file: !2578, line: 215, type: !10797, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17822)
!17822 = !{!17823, !17824, !17825, !17827, !17828, !17831, !17832}
!17823 = !DILocalVariable(name: "ticks", arg: 1, scope: !17821, file: !2578, line: 215, type: !774)
!17824 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17821, file: !2578, line: 215, type: !347)
!17825 = !DILocalVariable(name: "__i", scope: !17826, file: !2578, line: 217, type: !17351)
!17826 = distinct !DILexicalBlock(scope: !17821, file: !2578, line: 217, column: 2)
!17827 = !DILocalVariable(name: "__key", scope: !17826, file: !2578, line: 217, type: !17351)
!17828 = !DILocalVariable(name: "next_to", scope: !17829, file: !2578, line: 218, type: !109)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !2578, line: 217, column: 24)
!17830 = distinct !DILexicalBlock(scope: !17826, file: !2578, line: 217, column: 2)
!17831 = !DILocalVariable(name: "sooner", scope: !17829, file: !2578, line: 219, type: !347)
!17832 = !DILocalVariable(name: "imminent", scope: !17829, file: !2578, line: 221, type: !347)
!17833 = !DILocation(line: 0, scope: !17821)
!17834 = !DILocation(line: 0, scope: !17826)
!17835 = !DILocation(line: 0, scope: !17379, inlinedAt: !17836)
!17836 = distinct !DILocation(line: 217, column: 2, scope: !17826)
!17837 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17838)
!17838 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17836)
!17839 = !DILocation(line: 0, scope: !17388, inlinedAt: !17838)
!17840 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17836)
!17841 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17836)
!17842 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17836)
!17843 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17836)
!17844 = !DILocation(line: 218, column: 17, scope: !17829)
!17845 = !DILocation(line: 0, scope: !17829)
!17846 = !DILocation(line: 221, column: 27, scope: !17829)
!17847 = !DILocation(line: 233, column: 17, scope: !17848)
!17848 = distinct !DILexicalBlock(scope: !17829, file: !2578, line: 233, column: 7)
!17849 = !DILocation(line: 234, column: 26, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17848, file: !2578, line: 233, column: 56)
!17851 = !DILocation(line: 234, column: 4, scope: !17850)
!17852 = !DILocation(line: 235, column: 3, scope: !17850)
!17853 = !DILocation(line: 0, scope: !17452, inlinedAt: !17854)
!17854 = distinct !DILocation(line: 217, column: 2, scope: !17830)
!17855 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17854)
!17856 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17854)
!17857 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17854)
!17858 = !DILocation(line: 0, scope: !17466, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17854)
!17860 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17859)
!17861 = !DILocation(line: 237, column: 1, scope: !17821)
!17862 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2578, file: !2578, line: 239, type: !17863, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17865)
!17863 = !DISubroutineType(types: !17864)
!17864 = !{null, !774}
!17865 = !{!17866, !17867, !17868, !17870}
!17866 = !DILocalVariable(name: "ticks", arg: 1, scope: !17862, file: !2578, line: 239, type: !774)
!17867 = !DILocalVariable(name: "key", scope: !17862, file: !2578, line: 245, type: !17351)
!17868 = !DILocalVariable(name: "t", scope: !17869, file: !2578, line: 262, type: !2551)
!17869 = distinct !DILexicalBlock(scope: !17862, file: !2578, line: 261, column: 67)
!17870 = !DILocalVariable(name: "dt", scope: !17869, file: !2578, line: 263, type: !109)
!17871 = !DILocation(line: 0, scope: !17862)
!17872 = !DILocation(line: 242, column: 2, scope: !17862)
!17873 = !DILocation(line: 0, scope: !17379, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 245, column: 25, scope: !17862)
!17875 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17876)
!17876 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17874)
!17877 = !DILocation(line: 0, scope: !17388, inlinedAt: !17876)
!17878 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17874)
!17879 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17874)
!17880 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17874)
!17881 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17874)
!17882 = !DILocation(line: 261, column: 9, scope: !17862)
!17883 = !DILocation(line: 261, column: 17, scope: !17862)
!17884 = !DILocation(line: 261, column: 25, scope: !17862)
!17885 = !DILocation(line: 261, column: 37, scope: !17862)
!17886 = !DILocation(line: 261, column: 47, scope: !17862)
!17887 = !DILocation(line: 261, column: 44, scope: !17862)
!17888 = !DILocation(line: 261, column: 2, scope: !17862)
!17889 = !DILocation(line: 0, scope: !17869)
!17890 = !DILocation(line: 263, column: 12, scope: !17869)
!17891 = !DILocation(line: 265, column: 16, scope: !17869)
!17892 = !DILocation(line: 265, column: 13, scope: !17869)
!17893 = !DILocation(line: 266, column: 13, scope: !17869)
!17894 = !DILocation(line: 267, column: 3, scope: !17869)
!17895 = !DILocation(line: 0, scope: !17452, inlinedAt: !17896)
!17896 = distinct !DILocation(line: 269, column: 3, scope: !17869)
!17897 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17896)
!17898 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17896)
!17899 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17896)
!17900 = !DILocation(line: 0, scope: !17466, inlinedAt: !17901)
!17901 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17896)
!17902 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17901)
!17903 = !DILocation(line: 270, column: 6, scope: !17869)
!17904 = !DILocation(line: 270, column: 3, scope: !17869)
!17905 = !DILocation(line: 0, scope: !17379, inlinedAt: !17906)
!17906 = distinct !DILocation(line: 271, column: 9, scope: !17869)
!17907 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17908)
!17908 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17906)
!17909 = !DILocation(line: 0, scope: !17388, inlinedAt: !17908)
!17910 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17906)
!17911 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17906)
!17912 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17906)
!17913 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17906)
!17914 = !DILocation(line: 272, column: 22, scope: !17869)
!17915 = distinct !{!17915, !17888, !17916}
!17916 = !DILocation(line: 273, column: 2, scope: !17862)
!17917 = !DILocation(line: 276, column: 19, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17919, file: !2578, line: 275, column: 23)
!17919 = distinct !DILexicalBlock(scope: !17862, file: !2578, line: 275, column: 6)
!17920 = !DILocation(line: 277, column: 2, scope: !17918)
!17921 = !DILocation(line: 279, column: 15, scope: !17862)
!17922 = !DILocation(line: 279, column: 12, scope: !17862)
!17923 = !DILocation(line: 280, column: 21, scope: !17862)
!17924 = !DILocation(line: 282, column: 24, scope: !17862)
!17925 = !DILocation(line: 282, column: 2, scope: !17862)
!17926 = !DILocation(line: 0, scope: !17452, inlinedAt: !17927)
!17927 = distinct !DILocation(line: 284, column: 2, scope: !17862)
!17928 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17927)
!17929 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17927)
!17930 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17927)
!17931 = !DILocation(line: 0, scope: !17466, inlinedAt: !17932)
!17932 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17927)
!17933 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17932)
!17934 = !DILocation(line: 285, column: 1, scope: !17862)
!17935 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2578, file: !2578, line: 287, type: !17936, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17938)
!17936 = !DISubroutineType(types: !17937)
!17937 = !{!105}
!17938 = !{!17939, !17940, !17942}
!17939 = !DILocalVariable(name: "t", scope: !17935, file: !2578, line: 289, type: !111)
!17940 = !DILocalVariable(name: "__i", scope: !17941, file: !2578, line: 291, type: !17351)
!17941 = distinct !DILexicalBlock(scope: !17935, file: !2578, line: 291, column: 2)
!17942 = !DILocalVariable(name: "__key", scope: !17941, file: !2578, line: 291, type: !17351)
!17943 = !DILocation(line: 0, scope: !17935)
!17944 = !DILocation(line: 0, scope: !17941)
!17945 = !DILocation(line: 0, scope: !17379, inlinedAt: !17946)
!17946 = distinct !DILocation(line: 291, column: 2, scope: !17941)
!17947 = !DILocation(line: 55, column: 2, scope: !17388, inlinedAt: !17948)
!17948 = distinct !DILocation(line: 145, column: 10, scope: !17379, inlinedAt: !17946)
!17949 = !DILocation(line: 0, scope: !17388, inlinedAt: !17948)
!17950 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17946)
!17951 = !DILocation(line: 148, column: 2, scope: !17397, inlinedAt: !17946)
!17952 = !DILocation(line: 148, column: 2, scope: !17400, inlinedAt: !17946)
!17953 = !DILocation(line: 160, column: 2, scope: !17379, inlinedAt: !17946)
!17954 = !DILocation(line: 292, column: 7, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17956, file: !2578, line: 291, column: 24)
!17956 = distinct !DILexicalBlock(scope: !17941, file: !2578, line: 291, column: 2)
!17957 = !DILocation(line: 292, column: 19, scope: !17955)
!17958 = !DILocation(line: 0, scope: !17452, inlinedAt: !17959)
!17959 = distinct !DILocation(line: 291, column: 2, scope: !17956)
!17960 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17959)
!17961 = !DILocation(line: 194, column: 2, scope: !17461, inlinedAt: !17959)
!17962 = !DILocation(line: 194, column: 2, scope: !17464, inlinedAt: !17959)
!17963 = !DILocation(line: 0, scope: !17466, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 215, column: 2, scope: !17452, inlinedAt: !17959)
!17965 = !DILocation(line: 95, column: 2, scope: !17466, inlinedAt: !17964)
!17966 = !DILocation(line: 292, column: 17, scope: !17955)
!17967 = !DILocation(line: 294, column: 2, scope: !17935)
!17968 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2578, file: !2578, line: 297, type: !6569, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !2104)
!17969 = !DILocation(line: 300, column: 19, scope: !17968)
!17970 = !DILocation(line: 300, column: 9, scope: !17968)
!17971 = !DILocation(line: 300, column: 2, scope: !17968)
!17972 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2578, file: !2578, line: 306, type: !17936, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !2104)
!17973 = !DILocation(line: 308, column: 9, scope: !17972)
!17974 = !DILocation(line: 308, column: 2, scope: !17972)
!17975 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2578, file: !2578, line: 319, type: !6579, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !17976)
!17976 = !{!17977, !17978, !17979, !17980}
!17977 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17975, file: !2578, line: 319, type: !110)
!17978 = !DILocalVariable(name: "start_cycles", scope: !17975, file: !2578, line: 328, type: !110)
!17979 = !DILocalVariable(name: "cycles_to_wait", scope: !17975, file: !2578, line: 331, type: !110)
!17980 = !DILocalVariable(name: "current_cycles", scope: !17981, file: !2578, line: 338, type: !110)
!17981 = distinct !DILexicalBlock(scope: !17982, file: !2578, line: 337, column: 11)
!17982 = distinct !DILexicalBlock(scope: !17983, file: !2578, line: 337, column: 2)
!17983 = distinct !DILexicalBlock(scope: !17975, file: !2578, line: 337, column: 2)
!17984 = !DILocation(line: 0, scope: !17975)
!17985 = !DILocation(line: 322, column: 19, scope: !17986)
!17986 = distinct !DILexicalBlock(scope: !17975, file: !2578, line: 322, column: 6)
!17987 = !DILocation(line: 322, column: 6, scope: !17975)
!17988 = !DILocation(line: 328, column: 26, scope: !17975)
!17989 = !DILocation(line: 333, column: 43, scope: !17975)
!17990 = !DILocation(line: 337, column: 2, scope: !17975)
!17991 = !DILocation(line: 338, column: 29, scope: !17981)
!17992 = !DILocation(line: 0, scope: !17981)
!17993 = !DILocation(line: 341, column: 23, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17981, file: !2578, line: 341, column: 7)
!17995 = !DILocation(line: 341, column: 39, scope: !17994)
!17996 = !DILocation(line: 349, column: 1, scope: !17975)
!17997 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6569, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !2104)
!17998 = !DILocation(line: 1677, column: 9, scope: !17997)
!17999 = !DILocation(line: 1677, column: 2, scope: !17997)
!18000 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18001, file: !18001, line: 24, type: !6569, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !2104)
!18001 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18002 = !DILocation(line: 26, column: 9, scope: !18000)
!18003 = !DILocation(line: 26, column: 2, scope: !18000)
!18004 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2578, file: !2578, line: 364, type: !18005, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !18007)
!18005 = !DISubroutineType(types: !18006)
!18006 = !{!111, !17341}
!18007 = !{!18008, !18009}
!18008 = !DILocalVariable(name: "timeout", arg: 1, scope: !18004, file: !2578, line: 364, type: !17341)
!18009 = !DILocalVariable(name: "dt", scope: !18004, file: !2578, line: 366, type: !103)
!18010 = !DILocation(line: 0, scope: !18004)
!18011 = !DILocation(line: 368, column: 6, scope: !18004)
!18012 = !DILocation(line: 371, column: 10, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18014, file: !2578, line: 370, column: 47)
!18014 = distinct !DILexicalBlock(scope: !18015, file: !2578, line: 370, column: 13)
!18015 = distinct !DILexicalBlock(scope: !18004, file: !2578, line: 368, column: 6)
!18016 = !DILocation(line: 371, column: 3, scope: !18013)
!18017 = !DILocation(line: 376, column: 58, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18019, file: !2578, line: 376, column: 7)
!18019 = distinct !DILexicalBlock(scope: !18014, file: !2578, line: 372, column: 9)
!18020 = !DILocation(line: 376, column: 7, scope: !18019)
!18021 = !DILocation(line: 376, column: 43, scope: !18018)
!18022 = !DILocation(line: 377, column: 4, scope: !18023)
!18023 = distinct !DILexicalBlock(scope: !18018, file: !2578, line: 376, column: 64)
!18024 = !DILocation(line: 379, column: 10, scope: !18019)
!18025 = !DILocation(line: 379, column: 33, scope: !18019)
!18026 = !DILocation(line: 379, column: 31, scope: !18019)
!18027 = !DILocation(line: 379, column: 3, scope: !18019)
!18028 = !DILocation(line: 0, scope: !18015)
!18029 = !DILocation(line: 381, column: 1, scope: !18004)
!18030 = distinct !DISubprogram(name: "boot_banner", scope: !18031, file: !18031, line: 26, type: !3153, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !2104)
!18031 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18032 = !DILocation(line: 34, column: 2, scope: !18030)
!18033 = !DILocation(line: 36, column: 1, scope: !18030)
