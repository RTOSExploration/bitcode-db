; ModuleID = 'build/96b_stm32_sensor_mez/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231097 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231077 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231067 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231167 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231157 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231147 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231137 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231127 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231117 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234516 to i8*), void (i8*)* inttoptr (i32 134232497 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234492 to i8*), void (i8*)* inttoptr (i32 134232497 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234468 to i8*), void (i8*)* inttoptr (i32 134232497 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231107 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234228 to i8*), void (i8*)* inttoptr (i32 134231087 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234444 to i8*), void (i8*)* inttoptr (i32 134232497 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [50 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !742
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !725
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !698
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !714
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !758
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !760
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !766
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !768
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !776
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !819
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !917
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !906
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !958
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1059
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1099
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1052
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1107
@esc_state = internal global i32 0, align 4, !dbg !1126
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1134
@end = internal unnamed_addr global i8 0, align 1, !dbg !1136
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1130
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1132
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1138
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1416
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1386
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1372
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1317
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1418
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1388
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1331
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !802
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1431
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1394
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1392
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !800
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1433
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1435
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1437
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1439
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1441
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.61 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1443
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1703
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1647
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1705
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1620
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1622
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.1.62 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1714
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1649
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1746
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.62, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1631
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1633
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.2.63 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1748
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1651
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1763
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1637
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1639
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.3.66 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48, void (%struct.device*)* @uart_stm32_irq_config_func_3 }, align 4, !dbg !1765
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1653
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1780
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.66, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1643
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1645
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1655
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1663
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1686
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1689
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*) }, section ".intList", align 4, !dbg !1692
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !890
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1733
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1735
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1737
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1739
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1741
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1750
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1752
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1754
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1756
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1758
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1767
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1769
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1771
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1773
@uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 = internal global %struct._isr_list { i32 52, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*) }, section ".intList", align 4, !dbg !1775
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1782
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1891
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1893
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1889
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1860
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1895
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1315
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1329
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1985
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2029
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2032
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2038
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2044
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2253
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2262
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2269
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2274
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.116 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.120, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.121, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.123, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.117, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.124, i32 0, i32 0)], align 4, !dbg !2302
@.str.118 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.119 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.120 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.121 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.122 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.123 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.117 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.124 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2414
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2427
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2535
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2538
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2540
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2267
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2264
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2542
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2578
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2576
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2131
@.str.195 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2581
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3253 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3311, !srcloc !3314
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3339, !srcloc !3340
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3361, !srcloc !3362
  ret void, !dbg !3363
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3366 {
  tail call void @console_getline_init() #26, !dbg !3371
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3372
  br label %1, !dbg !3373

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %2, metadata !3369, metadata !DIExpression()), !dbg !3375
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3376
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3377
  %4 = add i32 %3, -1, !dbg !3378
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3379
  %6 = load i8, i8* %5, align 1, !dbg !3379
  %7 = zext i8 %6 to i32, !dbg !3379
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3380
  br label %1, !dbg !3373, !llvm.loop !3381
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3385, metadata !DIExpression()), !dbg !3386
  ret i32 0, !dbg !3387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3388 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3392, metadata !DIExpression()), !dbg !3393
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3394
  ret void, !dbg !3395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3396 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3399
  ret i8* %1, !dbg !3400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3401 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3413, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i8* %0, metadata !3412, metadata !DIExpression()), !dbg !3422
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3423
  ret void, !dbg !3425
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3430, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.value(metadata i8* %1, metadata !3431, metadata !DIExpression()), !dbg !3432
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3433
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3433
  ret i32 %4, !dbg !3434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3435 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3447, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3444, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i8* %1, metadata !3445, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i8* %2, metadata !3446, metadata !DIExpression()), !dbg !3448
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3449
  ret void, !dbg !3450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3455, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i32 %1, metadata !3456, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i32 0, metadata !3457, metadata !DIExpression()), !dbg !3458
  %3 = icmp eq i32 %1, 0, !dbg !3459
  br i1 %3, label %13, label %4, !dbg !3462

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3457, metadata !DIExpression()), !dbg !3458
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3463
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3465
  %8 = load i8, i8* %7, align 1, !dbg !3465
  %9 = zext i8 %8 to i32, !dbg !3465
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3463
  %11 = add nuw i32 %5, 1, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %11, metadata !3457, metadata !DIExpression()), !dbg !3458
  %12 = icmp eq i32 %11, %1, !dbg !3459
  br i1 %12, label %13, label %4, !dbg !3462, !llvm.loop !3467

13:                                               ; preds = %4, %2
  ret void, !dbg !3469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3470 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3474, metadata !DIExpression()), !dbg !3476
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3477
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3475, metadata !DIExpression()), !dbg !3478
  call void @llvm.va_start(i8* nonnull %3), !dbg !3479
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3480
  %5 = load i32, i32* %4, align 4, !dbg !3480
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3480
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3480
  call void @llvm.va_end(i8* nonnull %3), !dbg !3481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3482
  ret void, !dbg !3482
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3483 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3487, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %1, metadata !3488, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %2, metadata !3489, metadata !DIExpression()), !dbg !3492
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3493
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3490, metadata !DIExpression()), !dbg !3494
  call void @llvm.va_start(i8* nonnull %5), !dbg !3495
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3496
  %7 = load i32, i32* %6, align 4, !dbg !3496
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3496
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %9, metadata !3491, metadata !DIExpression()), !dbg !3492
  call void @llvm.va_end(i8* nonnull %5), !dbg !3497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3498
  ret i32 %9, !dbg !3499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3500 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3507, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i8* %0, metadata !3504, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %1, metadata !3505, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i8* %2, metadata !3506, metadata !DIExpression()), !dbg !3514
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3515
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3515
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3508, metadata !DIExpression()), !dbg !3516
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3517
  store i8* %0, i8** %7, align 4, !dbg !3517
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3517
  store i32 %1, i32* %8, align 4, !dbg !3517
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3517
  store i32 0, i32* %9, align 4, !dbg !3517
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3518
  %10 = load i32, i32* %9, align 4, !dbg !3519
  %11 = load i32, i32* %8, align 4, !dbg !3521
  %12 = icmp slt i32 %10, %11, !dbg !3522
  br i1 %12, label %13, label %15, !dbg !3523

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3524
  store i8 0, i8* %14, align 1, !dbg !3526
  br label %15, !dbg !3527

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3528
  ret i32 %10, !dbg !3529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3535, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3536, metadata !DIExpression()), !dbg !3537
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3538
  %4 = load i8*, i8** %3, align 4, !dbg !3538
  %5 = icmp eq i8* %4, null, !dbg !3540
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3541
  br i1 %5, label %12, label %8, !dbg !3542

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3543
  %10 = load i32, i32* %9, align 4, !dbg !3543
  %11 = icmp slt i32 %7, %10, !dbg !3544
  br i1 %11, label %15, label %12, !dbg !3545

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3546
  %14 = add nsw i32 %7, 1, !dbg !3548
  store i32 %14, i32* %13, align 4, !dbg !3548
  br label %25, !dbg !3549

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3550
  %17 = icmp eq i32 %7, %16, !dbg !3552
  br i1 %17, label %18, label %21, !dbg !3553

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3554
  store i32 %19, i32* %6, align 4, !dbg !3554
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3556
  store i8 0, i8* %20, align 1, !dbg !3557
  br label %25, !dbg !3558

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3559
  %23 = add nsw i32 %7, 1, !dbg !3561
  store i32 %23, i32* %6, align 4, !dbg !3561
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3562
  store i8 %22, i8* %24, align 1, !dbg !3563
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3564
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3565 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3575, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.value(metadata i8* %1, metadata !3576, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.value(metadata i8* %2, metadata !3577, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.value(metadata i8* %3, metadata !3578, metadata !DIExpression()), !dbg !3579
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3580
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3581
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3582
  unreachable, !dbg !3583
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3584 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3688
  ret %struct.k_thread* %1, !dbg !3689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3695, metadata !DIExpression()), !dbg !3696
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3697, !srcloc !3699
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3700
  ret void, !dbg !3701
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3702 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3703, !srcloc !3705
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3706
  ret %struct.k_thread* %1, !dbg !3707
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3708 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3719, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i8* %1, metadata !3720, metadata !DIExpression()), !dbg !3723
  %3 = icmp eq i8* %1, null, !dbg !3724
  br i1 %3, label %8, label %4, !dbg !3726

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3727
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3727
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3721, metadata !DIExpression()), !dbg !3723
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3728, !range !3729
  call void @llvm.dbg.value(metadata i32 %7, metadata !3722, metadata !DIExpression()), !dbg !3723
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3730
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3731
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3733 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3737, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8* %1, metadata !3738, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8* %1, metadata !3739, metadata !DIExpression()), !dbg !3741
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3742
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3740, metadata !DIExpression()), !dbg !3741
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3743
  %5 = ptrtoint i8* %4 to i32, !dbg !3744
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3744
  %7 = sub i32 %5, %6, !dbg !3744
  %8 = lshr i32 %7, 3, !dbg !3745
  ret i32 %8, !dbg !3746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3747 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3751, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1, metadata !3752, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i1 %2, metadata !3753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3756
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3757
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3754, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3755, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3756
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3758
  %6 = bitcast i8* %5 to i16*, !dbg !3758
  %7 = load i16, i16* %6, align 2, !dbg !3758
  %8 = and i16 %7, -2, !dbg !3762
  %9 = zext i1 %2 to i16, !dbg !3762
  %10 = or i16 %8, %9, !dbg !3762
  store i16 %10, i16* %6, align 2, !dbg !3758
  ret void, !dbg !3763
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3764 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3768, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.value(metadata i32 %1, metadata !3769, metadata !DIExpression()), !dbg !3770
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3771
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3773
  br i1 %4, label %7, label %5, !dbg !3774

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3775
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3777
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3778
  br label %7, !dbg !3779

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3780, !range !3782
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3783
  br i1 %9, label %13, label %10, !dbg !3784

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3785
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3787, !range !3782
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3788
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %12, metadata !3769, metadata !DIExpression()), !dbg !3770
  br label %13, !dbg !3790

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3769, metadata !DIExpression()), !dbg !3770
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3791
  ret void, !dbg !3792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3793 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3797, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 %1, metadata !3798, metadata !DIExpression()), !dbg !3799
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3800
  %4 = add i32 %3, %1, !dbg !3801
  ret i32 %4, !dbg !3802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3803 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3807, metadata !DIExpression()), !dbg !3809
  call void @llvm.dbg.value(metadata i32 %1, metadata !3808, metadata !DIExpression()), !dbg !3809
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3810
  %4 = and i32 %3, 1, !dbg !3811
  %5 = icmp ne i32 %4, 0, !dbg !3810
  ret i1 %5, !dbg !3812
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3813 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3815, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.value(metadata i32 %1, metadata !3816, metadata !DIExpression()), !dbg !3820
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3821, !range !3822
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %4, metadata !3817, metadata !DIExpression()), !dbg !3824
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3825
  ret void, !dbg !3826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3827 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3831, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i32 %1, metadata !3832, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i32 %2, metadata !3833, metadata !DIExpression()), !dbg !3836
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3837
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3838
  %6 = add i32 %5, %4, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %6, metadata !3834, metadata !DIExpression()), !dbg !3836
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3840
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3841
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3842
  ret void, !dbg !3843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3844 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3846, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i32 %1, metadata !3847, metadata !DIExpression()), !dbg !3848
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3849
  %4 = sub i32 %1, %3, !dbg !3850
  ret i32 %4, !dbg !3851
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3852 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3854, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i32 %1, metadata !3855, metadata !DIExpression()), !dbg !3859
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3860, !range !3822
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %4, metadata !3856, metadata !DIExpression()), !dbg !3862
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3863
  ret void, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3865 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3869, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 %1, metadata !3870, metadata !DIExpression()), !dbg !3871
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3872
  %4 = lshr i32 %3, 1, !dbg !3873
  ret i32 %4, !dbg !3874
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3875 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3879, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32 %1, metadata !3880, metadata !DIExpression()), !dbg !3882
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3883
  %4 = add i32 %1, 1, !dbg !3884
  %5 = sub i32 %4, %3, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %5, metadata !3881, metadata !DIExpression()), !dbg !3882
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3886, !range !3887
  %7 = sub nsw i32 31, %6, !dbg !3888
  ret i32 %7, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3894, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %1, metadata !3895, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %2, metadata !3896, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3897, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3903
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3904
  %5 = load i32, i32* %4, align 4, !dbg !3904
  %6 = icmp eq i32 %5, 0, !dbg !3905
  br i1 %6, label %7, label %12, !dbg !3906

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3907
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3909
  %10 = load i32, i32* %9, align 4, !dbg !3910
  %11 = or i32 %10, %8, !dbg !3910
  store i32 %11, i32* %9, align 4, !dbg !3910
  store i32 %1, i32* %4, align 4, !dbg !3911
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3912
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3913
  br label %14, !dbg !3914

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3899, metadata !DIExpression()), !dbg !3915
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3916, !range !3917
  call void @llvm.dbg.value(metadata i32 %13, metadata !3902, metadata !DIExpression()), !dbg !3915
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3918
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3919
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3920
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3921
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3923 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3925, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.value(metadata i32 %1, metadata !3926, metadata !DIExpression()), !dbg !3928
  call void @llvm.dbg.value(metadata i32 %2, metadata !3927, metadata !DIExpression()), !dbg !3928
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3929
  ret void, !dbg !3930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3931 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3933, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %2, metadata !3935, metadata !DIExpression()), !dbg !3936
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3937
  ret void, !dbg !3938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3939 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3941, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.value(metadata i32 %1, metadata !3942, metadata !DIExpression()), !dbg !3943
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3944
  ret i32 %3, !dbg !3945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3946 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3950, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 %1, metadata !3951, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata i32 %2, metadata !3952, metadata !DIExpression()), !dbg !3955
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3956
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3953, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3954, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3955
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3954, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3955
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3957
  call void @llvm.dbg.value(metadata i8* %5, metadata !3954, metadata !DIExpression()), !dbg !3955
  %6 = bitcast i8* %5 to i16*, !dbg !3958
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3961
  %8 = load i16, i16* %7, align 2, !dbg !3961
  %9 = zext i16 %8 to i32, !dbg !3961
  ret i32 %9, !dbg !3962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3963 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3967, metadata !DIExpression()), !dbg !3968
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3969
  ret %struct.chunk_unit_t* %2, !dbg !3970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3971 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3975, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %1, metadata !3976, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %2, metadata !3977, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %3, metadata !3978, metadata !DIExpression()), !dbg !3981
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3982
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3979, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3981
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3983
  call void @llvm.dbg.value(metadata i8* %6, metadata !3980, metadata !DIExpression()), !dbg !3981
  %7 = trunc i32 %3 to i16, !dbg !3984
  %8 = bitcast i8* %6 to i16*, !dbg !3987
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3988
  store i16 %7, i16* %9, align 2, !dbg !3989
  ret void, !dbg !3990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3991 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3995, metadata !DIExpression()), !dbg !3996
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3997
  ret i32 %2, !dbg !3998
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3999 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4003, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %1, metadata !4004, metadata !DIExpression()), !dbg !4005
  %3 = add i32 %1, 4, !dbg !4006
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !4007
  ret i32 %4, !dbg !4008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4013, metadata !DIExpression()), !dbg !4014
  %2 = add i32 %0, 7, !dbg !4015
  %3 = lshr i32 %2, 3, !dbg !4016
  ret i32 %3, !dbg !4017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4018 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4022, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %1, metadata !4023, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %2, metadata !4024, metadata !DIExpression()), !dbg !4025
  %4 = shl i32 %2, 1, !dbg !4026
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !4027
  ret void, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4031, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %1, metadata !4032, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata i32 %2, metadata !4033, metadata !DIExpression()), !dbg !4034
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !4035
  ret void, !dbg !4036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4037 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4039, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %1, metadata !4040, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %2, metadata !4041, metadata !DIExpression()), !dbg !4047
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4048
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4042, metadata !DIExpression()), !dbg !4047
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4049
  %6 = icmp eq i32 %5, %1, !dbg !4050
  br i1 %6, label %7, label %14, !dbg !4051

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4052
  %9 = xor i32 %8, -1, !dbg !4054
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4055
  %11 = load i32, i32* %10, align 4, !dbg !4056
  %12 = and i32 %11, %9, !dbg !4056
  store i32 %12, i32* %10, align 4, !dbg !4056
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4057
  store i32 0, i32* %13, align 4, !dbg !4058
  br label %17, !dbg !4059

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4060
  call void @llvm.dbg.value(metadata i32 %15, metadata !4043, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata i32 %5, metadata !4046, metadata !DIExpression()), !dbg !4061
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4062
  store i32 %5, i32* %16, align 4, !dbg !4063
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !4064
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !4065
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4067 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4069, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.value(metadata i32 %1, metadata !4070, metadata !DIExpression()), !dbg !4071
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !4072
  ret i32 %3, !dbg !4073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4074 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4078, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i8* %1, metadata !4079, metadata !DIExpression()), !dbg !4085
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4086
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4086
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4080, metadata !DIExpression()), !dbg !4085
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %5, metadata !4081, metadata !DIExpression()), !dbg !4085
  %6 = ptrtoint i8* %1 to i32, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %6, metadata !4082, metadata !DIExpression()), !dbg !4085
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !4089
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4089
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %9, metadata !4083, metadata !DIExpression()), !dbg !4085
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !4091
  %11 = shl i32 %10, 3, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %11, metadata !4084, metadata !DIExpression()), !dbg !4085
  %12 = sub i32 %9, %6, !dbg !4093
  %13 = add i32 %12, %11, !dbg !4094
  ret i32 %13, !dbg !4095
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4096 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4100, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.value(metadata i32 %1, metadata !4101, metadata !DIExpression()), !dbg !4106
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4107
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4107
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4102, metadata !DIExpression()), !dbg !4106
  %5 = icmp eq i32 %1, 0, !dbg !4108
  br i1 %5, label %19, label %6, !dbg !4110

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4111
  br i1 %7, label %19, label %8, !dbg !4112

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4113, !range !3729
  call void @llvm.dbg.value(metadata i32 %9, metadata !4104, metadata !DIExpression()), !dbg !4106
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %10, metadata !4105, metadata !DIExpression()), !dbg !4106
  %11 = icmp eq i32 %10, 0, !dbg !4115
  br i1 %11, label %19, label %12, !dbg !4117

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4118
  %14 = icmp ugt i32 %13, %9, !dbg !4120
  br i1 %14, label %15, label %17, !dbg !4121

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4122
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4124
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4125
  br label %17, !dbg !4126

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4127
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %18, metadata !4103, metadata !DIExpression()), !dbg !4106
  br label %19, !dbg !4129

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4106
  ret i8* %20, !dbg !4130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4131 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4135, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %1, metadata !4136, metadata !DIExpression()), !dbg !4137
  %3 = lshr i32 %1, 3, !dbg !4138
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4139
  %5 = load i32, i32* %4, align 4, !dbg !4139
  %6 = icmp uge i32 %3, %5, !dbg !4140
  ret i1 %6, !dbg !4141
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4142 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4146, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %1, metadata !4147, metadata !DIExpression()), !dbg !4161
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %3, metadata !4148, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4149, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4161
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4163
  %5 = load i32, i32* %4, align 4, !dbg !4163
  %6 = icmp eq i32 %5, 0, !dbg !4164
  br i1 %6, label %19, label %7, !dbg !4165

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4166
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4167
  call void @llvm.dbg.value(metadata i32 %9, metadata !4153, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata i32 %8, metadata !4154, metadata !DIExpression()), !dbg !4168
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4169
  %11 = icmp ult i32 %10, %1, !dbg !4171
  br i1 %11, label %13, label %12, !dbg !4172

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4173
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4175
  store i32 %14, i32* %4, align 4, !dbg !4176
  %15 = add nsw i32 %9, -1, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %15, metadata !4153, metadata !DIExpression()), !dbg !4167
  %16 = icmp eq i32 %15, 0, !dbg !4177
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4178
  br i1 %18, label %19, label %7, !dbg !4178, !llvm.loop !4179

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4182
  %21 = load i32, i32* %20, align 4, !dbg !4182
  %22 = add nsw i32 %3, 1, !dbg !4183
  %23 = shl nsw i32 -1, %22, !dbg !4183
  %24 = and i32 %21, %23, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %24, metadata !4156, metadata !DIExpression()), !dbg !4161
  %25 = icmp eq i32 %24, 0, !dbg !4185
  br i1 %25, label %30, label %26, !dbg !4186

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4187, !range !3887
  call void @llvm.dbg.value(metadata i32 %27, metadata !4157, metadata !DIExpression()), !dbg !4188
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4189
  %29 = load i32, i32* %28, align 4, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %29, metadata !4160, metadata !DIExpression()), !dbg !4188
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4190
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4161
  ret i32 %31, !dbg !4191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4192 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4194, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %1, metadata !4195, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata i32 %2, metadata !4196, metadata !DIExpression()), !dbg !4200
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %4, metadata !4197, metadata !DIExpression()), !dbg !4200
  %5 = sub i32 %2, %1, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %5, metadata !4198, metadata !DIExpression()), !dbg !4200
  %6 = sub i32 %4, %5, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %6, metadata !4199, metadata !DIExpression()), !dbg !4200
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4204
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4205
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4206
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4207
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4208
  ret void, !dbg !4209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4210 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4215, metadata !DIExpression()), !dbg !4218
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4219
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4216, metadata !DIExpression()), !dbg !4218
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4220
  call void @llvm.dbg.value(metadata i8* %4, metadata !4217, metadata !DIExpression()), !dbg !4218
  ret i8* %4, !dbg !4221
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4222 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4226, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %1, metadata !4227, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %2, metadata !4228, metadata !DIExpression()), !dbg !4238
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4239
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4229, metadata !DIExpression()), !dbg !4238
  %6 = sub i32 0, %1, !dbg !4240
  %7 = and i32 %6, %1, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %7, metadata !4231, metadata !DIExpression()), !dbg !4238
  %8 = icmp eq i32 %7, %1, !dbg !4242
  br i1 %8, label %13, label %9, !dbg !4244

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %10, metadata !4227, metadata !DIExpression()), !dbg !4238
  %11 = icmp ult i32 %7, 4, !dbg !4247
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4247
  br label %17, !dbg !4247

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4248
  br i1 %14, label %15, label %17, !dbg !4251

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4252
  br label %57, !dbg !4254

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4238
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4255
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4227, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %19, metadata !4230, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i32 %18, metadata !4231, metadata !DIExpression()), !dbg !4238
  %21 = icmp eq i32 %2, 0, !dbg !4256
  br i1 %21, label %57, label %22, !dbg !4258

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4259
  br i1 %23, label %57, label %24, !dbg !4260

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4261
  %26 = add i32 %25, %20, !dbg !4262
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4263, !range !3729
  call void @llvm.dbg.value(metadata i32 %27, metadata !4232, metadata !DIExpression()), !dbg !4238
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %28, metadata !4233, metadata !DIExpression()), !dbg !4238
  %29 = icmp eq i32 %28, 0, !dbg !4265
  br i1 %29, label %57, label %30, !dbg !4267

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4268
  call void @llvm.dbg.value(metadata i8* %31, metadata !4234, metadata !DIExpression()), !dbg !4238
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4269
  %33 = ptrtoint i8* %32 to i32, !dbg !4269
  %34 = add i32 %20, -1, !dbg !4269
  %35 = add i32 %34, %33, !dbg !4269
  %36 = sub i32 0, %20, !dbg !4269
  %37 = and i32 %35, %36, !dbg !4269
  %38 = inttoptr i32 %37 to i8*, !dbg !4270
  %39 = sub i32 0, %18, !dbg !4271
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %40, metadata !4234, metadata !DIExpression()), !dbg !4238
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4272
  %42 = ptrtoint i8* %41 to i32, !dbg !4272
  %43 = add i32 %42, 7, !dbg !4272
  %44 = and i32 %43, -8, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %44, metadata !4235, metadata !DIExpression()), !dbg !4238
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %45, metadata !4236, metadata !DIExpression()), !dbg !4238
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4274
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4275
  %48 = sub i32 %44, %47, !dbg !4275
  %49 = ashr exact i32 %48, 3, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %49, metadata !4237, metadata !DIExpression()), !dbg !4238
  %50 = icmp ugt i32 %45, %28, !dbg !4276
  br i1 %50, label %51, label %52, !dbg !4278

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4279
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4281
  br label %52, !dbg !4282

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4283
  %54 = icmp ugt i32 %53, %49, !dbg !4285
  br i1 %54, label %55, label %56, !dbg !4286

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4287
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4289
  br label %56, !dbg !4290

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4291
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4238
  ret i8* %58, !dbg !4292
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4293 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4297, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.value(metadata i8* %1, metadata !4298, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.value(metadata i32 %2, metadata !4299, metadata !DIExpression()), !dbg !4316
  call void @llvm.dbg.value(metadata i32 %3, metadata !4300, metadata !DIExpression()), !dbg !4316
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4317
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4301, metadata !DIExpression()), !dbg !4316
  %7 = icmp eq i8* %1, null, !dbg !4318
  br i1 %7, label %8, label %10, !dbg !4320

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4321
  br label %59, !dbg !4323

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4324
  br i1 %11, label %12, label %13, !dbg !4326

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4327
  br label %59, !dbg !4329

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4330
  br i1 %14, label %59, label %15, !dbg !4332

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4333, !range !3729
  call void @llvm.dbg.value(metadata i32 %16, metadata !4302, metadata !DIExpression()), !dbg !4316
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %17, metadata !4303, metadata !DIExpression()), !dbg !4316
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4335
  %19 = ptrtoint i8* %1 to i32, !dbg !4336
  %20 = ptrtoint i8* %18 to i32, !dbg !4336
  %21 = sub i32 %19, %20, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %21, metadata !4304, metadata !DIExpression()), !dbg !4316
  %22 = add i32 %21, %3, !dbg !4337
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %23, metadata !4305, metadata !DIExpression()), !dbg !4316
  %24 = icmp eq i32 %2, 0, !dbg !4339
  br i1 %24, label %29, label %25, !dbg !4340

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4341
  %27 = and i32 %26, %19, !dbg !4342
  %28 = icmp eq i32 %27, 0, !dbg !4342
  br i1 %28, label %29, label %49, !dbg !4343

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4344
  %31 = icmp eq i32 %23, %30, !dbg !4345
  br i1 %31, label %59, label %32, !dbg !4346

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4347
  br i1 %33, label %34, label %36, !dbg !4348

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4349
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4351
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4352
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4353
  br label %59, !dbg !4354

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4355
  br i1 %37, label %49, label %38, !dbg !4356

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4357
  %40 = add i32 %39, %30, !dbg !4358
  %41 = icmp ult i32 %40, %23, !dbg !4359
  br i1 %41, label %49, label %42, !dbg !4360

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %43, metadata !4306, metadata !DIExpression()), !dbg !4362
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4363
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4364
  %45 = icmp ult i32 %43, %44, !dbg !4366
  br i1 %45, label %46, label %48, !dbg !4367

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4368
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4370
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4371
  br label %48, !dbg !4372

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4373
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4374
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4375
  call void @llvm.dbg.value(metadata i8* %50, metadata !4312, metadata !DIExpression()), !dbg !4316
  %51 = icmp eq i8* %50, null, !dbg !4376
  br i1 %51, label %59, label %52, !dbg !4377

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4378, !range !3822
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4379
  %55 = sub i32 %54, %21, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %55, metadata !4313, metadata !DIExpression()), !dbg !4381
  %56 = icmp ult i32 %55, %3, !dbg !4382
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4382
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4383
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4384
  br label %59, !dbg !4385

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4316
  ret i8* %60, !dbg !4386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4387 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4391, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %1, metadata !4392, metadata !DIExpression()), !dbg !4393
  %3 = shl i32 %1, 3, !dbg !4394
  %4 = add i32 %3, -4, !dbg !4395
  ret i32 %4, !dbg !4396
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4397 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4401, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i8* %1, metadata !4402, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 %2, metadata !4403, metadata !DIExpression()), !dbg !4412
  %4 = add i32 %2, -4, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %4, metadata !4403, metadata !DIExpression()), !dbg !4412
  %5 = ptrtoint i8* %1 to i32, !dbg !4414
  %6 = add i32 %5, 7, !dbg !4414
  %7 = and i32 %6, -8, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %7, metadata !4404, metadata !DIExpression()), !dbg !4412
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4415
  %9 = ptrtoint i8* %8 to i32, !dbg !4415
  %10 = and i32 %9, -8, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %10, metadata !4405, metadata !DIExpression()), !dbg !4412
  %11 = sub i32 %10, %7, !dbg !4416
  %12 = lshr exact i32 %11, 3, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %12, metadata !4406, metadata !DIExpression()), !dbg !4412
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4418
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4407, metadata !DIExpression()), !dbg !4412
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4419
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4420
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4421
  store i32 %12, i32* %15, align 8, !dbg !4422
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4423
  store i32 0, i32* %16, align 4, !dbg !4424
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %17, metadata !4408, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4412
  %18 = shl i32 %17, 2, !dbg !4426
  %19 = add i32 %18, 20, !dbg !4427
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %20, metadata !4409, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 0, metadata !4410, metadata !DIExpression()), !dbg !4429
  %21 = icmp slt i32 %17, 0, !dbg !4430
  br i1 %21, label %22, label %24, !dbg !4432

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4433
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4434
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4435
  %23 = sub i32 %12, %20, !dbg !4436
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4437
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4438
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4439
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4440
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4441
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4442
  ret void, !dbg !4443

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4410, metadata !DIExpression()), !dbg !4429
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4444
  store i32 0, i32* %26, align 4, !dbg !4446
  %27 = add nuw i32 %25, 1, !dbg !4447
  call void @llvm.dbg.value(metadata i32 %27, metadata !4410, metadata !DIExpression()), !dbg !4429
  %28 = icmp eq i32 %25, %17, !dbg !4430
  br i1 %28, label %22, label %24, !dbg !4432, !llvm.loop !4448
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4450 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4460, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %1, metadata !4461, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %2, metadata !4462, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %4, metadata !4464, metadata !DIExpression()), !dbg !4591
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4592
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4592
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4465, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 0, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i1 undef, metadata !4471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4591
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4594

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4594

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4595
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %30, metadata !4462, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %29, metadata !4469, metadata !DIExpression()), !dbg !4591
  %31 = load i8, i8* %30, align 1, !dbg !4596
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4594

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4596
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4597
  call void @llvm.dbg.value(metadata i8* %34, metadata !4462, metadata !DIExpression()), !dbg !4591
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %35, metadata !4473, metadata !DIExpression()), !dbg !4598
  %36 = icmp slt i32 %35, 0, !dbg !4599
  %37 = add i32 %29, 1, !dbg !4597
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %36, label %365, label %28, !llvm.loop !4601

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4603
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4478, metadata !DIExpression()), !dbg !4604
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4604
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4523, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4526, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %30, metadata !4529, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 -1, metadata !4530, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 -1, metadata !4531, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* null, metadata !4532, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %14, metadata !4533, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8 0, metadata !4534, metadata !DIExpression()), !dbg !4605
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %39, metadata !4462, metadata !DIExpression()), !dbg !4591
  %40 = load i24, i24* %15, align 8, !dbg !4607
  %41 = and i24 %40, 256, !dbg !4607
  %42 = icmp eq i24 %41, 0, !dbg !4607
  br i1 %42, label %51, label %43, !dbg !4609

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %44, metadata !4463, metadata !DIExpression()), !dbg !4591
  %45 = bitcast i8* %27 to i32*, !dbg !4610
  %46 = load i32, i32* %45, align 4, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %46, metadata !4530, metadata !DIExpression()), !dbg !4605
  %47 = icmp slt i32 %46, 0, !dbg !4612
  br i1 %47, label %48, label %56, !dbg !4614

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4615
  store i24 %49, i24* %15, align 8, !dbg !4615
  %50 = sub nsw i32 0, %46, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %50, metadata !4530, metadata !DIExpression()), !dbg !4605
  br label %56, !dbg !4618

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4619
  %53 = icmp eq i24 %52, 0, !dbg !4619
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4621
  br label %56, !dbg !4621

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4622
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4605
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %58, metadata !4530, metadata !DIExpression()), !dbg !4605
  %60 = and i24 %57, 1024, !dbg !4622
  %61 = icmp eq i24 %60, 0, !dbg !4622
  br i1 %61, label %69, label %62, !dbg !4623

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %63, metadata !4463, metadata !DIExpression()), !dbg !4591
  %64 = bitcast i8* %59 to i32*, !dbg !4624
  %65 = load i32, i32* %64, align 4, !dbg !4624
  call void @llvm.dbg.value(metadata i32 %65, metadata !4535, metadata !DIExpression()), !dbg !4625
  %66 = icmp slt i32 %65, 0, !dbg !4626
  br i1 %66, label %67, label %74, !dbg !4628

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4629
  store i24 %68, i24* %15, align 8, !dbg !4629
  br label %74, !dbg !4631

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4632
  %71 = icmp eq i24 %70, 0, !dbg !4632
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4634
  br label %74, !dbg !4634

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4635
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4605
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4605
  call void @llvm.dbg.value(metadata i8* %77, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %76, metadata !4531, metadata !DIExpression()), !dbg !4605
  store i32 0, i32* %16, align 4, !dbg !4636
  store i32 0, i32* %17, align 8, !dbg !4637
  %78 = lshr i24 %75, 16, !dbg !4635
  call void @llvm.dbg.value(metadata i24 %78, metadata !4538, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4605
  %79 = lshr i24 %75, 11, !dbg !4638
  %80 = and i24 %79, 15, !dbg !4638
  %81 = zext i24 %80 to i32, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %81, metadata !4539, metadata !DIExpression()), !dbg !4605
  %82 = trunc i24 %78 to i3, !dbg !4639
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4639

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4640

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %85, metadata !4463, metadata !DIExpression()), !dbg !4591
  %86 = bitcast i8* %77 to i32*, !dbg !4643
  %87 = load i32, i32* %86, align 4, !dbg !4643
  %88 = sext i32 %87 to i64, !dbg !4643
  store i64 %88, i64* %20, align 8, !dbg !4645
  br label %115, !dbg !4646

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %90, metadata !4463, metadata !DIExpression()), !dbg !4591
  %91 = bitcast i8* %77 to i32*, !dbg !4647
  %92 = load i32, i32* %91, align 4, !dbg !4647
  %93 = sext i32 %92 to i64, !dbg !4647
  store i64 %93, i64* %20, align 8, !dbg !4650
  br label %115, !dbg !4651

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4652
  %96 = add i32 %95, 7, !dbg !4652
  %97 = and i32 %96, -8, !dbg !4652
  %98 = inttoptr i32 %97 to i8*, !dbg !4652
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4652
  call void @llvm.dbg.value(metadata i8* %99, metadata !4463, metadata !DIExpression()), !dbg !4591
  %100 = inttoptr i32 %97 to i64*, !dbg !4652
  %101 = load i64, i64* %100, align 8, !dbg !4652
  store i64 %101, i64* %20, align 8, !dbg !4653
  br label %115, !dbg !4654

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4655
  %104 = add i32 %103, 7, !dbg !4655
  %105 = and i32 %104, -8, !dbg !4655
  %106 = inttoptr i32 %105 to i8*, !dbg !4655
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4655
  call void @llvm.dbg.value(metadata i8* %107, metadata !4463, metadata !DIExpression()), !dbg !4591
  %108 = inttoptr i32 %105 to i64*, !dbg !4655
  %109 = load i64, i64* %108, align 8, !dbg !4655
  store i64 %109, i64* %20, align 8, !dbg !4656
  br label %115, !dbg !4657

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %111, metadata !4463, metadata !DIExpression()), !dbg !4591
  %112 = bitcast i8* %77 to i32*, !dbg !4658
  %113 = load i32, i32* %112, align 4, !dbg !4658
  %114 = sext i32 %113 to i64, !dbg !4659
  store i64 %114, i64* %20, align 8, !dbg !4660
  br label %115, !dbg !4661

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4662
  call void @llvm.dbg.value(metadata i8* %117, metadata !4463, metadata !DIExpression()), !dbg !4591
  %118 = trunc i24 %79 to i4, !dbg !4663
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4663

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4664
  %121 = ashr exact i64 %120, 56, !dbg !4664
  store i64 %121, i64* %20, align 8, !dbg !4667
  br label %177, !dbg !4668

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4669
  %124 = ashr exact i64 %123, 48, !dbg !4669
  store i64 %124, i64* %20, align 8, !dbg !4672
  br label %177, !dbg !4673

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4674

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %127, metadata !4463, metadata !DIExpression()), !dbg !4591
  %128 = bitcast i8* %77 to i32*, !dbg !4677
  %129 = load i32, i32* %128, align 4, !dbg !4677
  %130 = zext i32 %129 to i64, !dbg !4677
  store i64 %130, i64* %20, align 8, !dbg !4679
  br label %157, !dbg !4680

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4681
  call void @llvm.dbg.value(metadata i8* %132, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %132, metadata !4463, metadata !DIExpression()), !dbg !4591
  %133 = bitcast i8* %77 to i32*, !dbg !4681
  %134 = load i32, i32* %133, align 4, !dbg !4681
  %135 = zext i32 %134 to i64, !dbg !4681
  store i64 %135, i64* %20, align 8, !dbg !4681
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4683
  %138 = add i32 %137, 7, !dbg !4683
  %139 = and i32 %138, -8, !dbg !4683
  %140 = inttoptr i32 %139 to i8*, !dbg !4683
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %141, metadata !4463, metadata !DIExpression()), !dbg !4591
  %142 = inttoptr i32 %139 to i64*, !dbg !4683
  %143 = load i64, i64* %142, align 8, !dbg !4683
  store i64 %143, i64* %20, align 8, !dbg !4684
  br label %157, !dbg !4685

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4686
  %146 = add i32 %145, 7, !dbg !4686
  %147 = and i32 %146, -8, !dbg !4686
  %148 = inttoptr i32 %147 to i8*, !dbg !4686
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %149, metadata !4463, metadata !DIExpression()), !dbg !4591
  %150 = inttoptr i32 %147 to i64*, !dbg !4686
  %151 = load i64, i64* %150, align 8, !dbg !4686
  store i64 %151, i64* %20, align 8, !dbg !4687
  br label %157, !dbg !4688

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4689
  call void @llvm.dbg.value(metadata i8* %153, metadata !4463, metadata !DIExpression()), !dbg !4591
  %154 = bitcast i8* %77 to i32*, !dbg !4689
  %155 = load i32, i32* %154, align 4, !dbg !4689
  %156 = zext i32 %155 to i64, !dbg !4690
  store i64 %156, i64* %20, align 8, !dbg !4691
  br label %157, !dbg !4692

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4693
  call void @llvm.dbg.value(metadata i8* %159, metadata !4463, metadata !DIExpression()), !dbg !4591
  %160 = trunc i24 %79 to i4, !dbg !4694
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4694

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4695
  store i64 %162, i64* %20, align 8, !dbg !4698
  br label %177, !dbg !4699

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4700
  store i64 %164, i64* %20, align 8, !dbg !4703
  br label %177, !dbg !4704

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4705
  %167 = add i32 %166, 7, !dbg !4705
  %168 = and i32 %167, -8, !dbg !4705
  %169 = inttoptr i32 %168 to i8*, !dbg !4705
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %170, metadata !4463, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %170, metadata !4463, metadata !DIExpression()), !dbg !4591
  %171 = inttoptr i32 %168 to double*, !dbg !4705
  %172 = load double, double* %171, align 8, !dbg !4705
  store double %172, double* %19, align 8, !dbg !4705
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %174, metadata !4463, metadata !DIExpression()), !dbg !4591
  %175 = bitcast i8* %77 to i8**, !dbg !4709
  %176 = load i8*, i8** %175, align 4, !dbg !4709
  store i8* %176, i8** %18, align 8, !dbg !4712
  br label %177, !dbg !4713

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4605
  call void @llvm.dbg.value(metadata i8* %178, metadata !4463, metadata !DIExpression()), !dbg !4591
  %179 = and i24 %75, 3, !dbg !4714
  %180 = icmp eq i24 %179, 0, !dbg !4714
  br i1 %180, label %185, label %181, !dbg !4714

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %182, metadata !4540, metadata !DIExpression()), !dbg !4716
  %183 = icmp slt i32 %182, 0, !dbg !4717
  %184 = add i32 %182, %29, !dbg !4715
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4719
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4720

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %188, metadata !4544, metadata !DIExpression()), !dbg !4722
  %189 = icmp slt i32 %188, 0, !dbg !4723
  %190 = add i32 %29, 1, !dbg !4721
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %192, metadata !4532, metadata !DIExpression()), !dbg !4605
  %193 = icmp sgt i32 %76, -1, !dbg !4726
  br i1 %193, label %194, label %196, !dbg !4728

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %195, metadata !4547, metadata !DIExpression()), !dbg !4731
  br label %241, !dbg !4732

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %197, metadata !4547, metadata !DIExpression()), !dbg !4731
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4532, metadata !DIExpression()), !dbg !4605
  %199 = load i64, i64* %20, align 8, !dbg !4735
  %200 = trunc i64 %199 to i8, !dbg !4736
  store i8 %200, i8* %10, align 1, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %23, metadata !4533, metadata !DIExpression()), !dbg !4605
  br label %245, !dbg !4738

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4739
  %203 = icmp eq i24 %202, 0, !dbg !4739
  %204 = trunc i24 %75 to i8, !dbg !4741
  %205 = shl i8 %204, 1, !dbg !4741
  %206 = and i8 %205, 32, !dbg !4741
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4741
  call void @llvm.dbg.value(metadata i8 %207, metadata !4534, metadata !DIExpression()), !dbg !4605
  %208 = load i64, i64* %20, align 8, !dbg !4742
  call void @llvm.dbg.value(metadata i64 %208, metadata !4470, metadata !DIExpression()), !dbg !4591
  %209 = icmp slt i64 %208, 0, !dbg !4743
  br i1 %209, label %210, label %212, !dbg !4745

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4534, metadata !DIExpression()), !dbg !4605
  %211 = sub nsw i64 0, %208, !dbg !4746
  store i64 %211, i64* %20, align 8, !dbg !4748
  br label %212, !dbg !4749

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4605
  call void @llvm.dbg.value(metadata i8 %213, metadata !4534, metadata !DIExpression()), !dbg !4605
  %214 = load i64, i64* %20, align 8, !dbg !4750
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4751
  call void @llvm.dbg.value(metadata i8* %215, metadata !4532, metadata !DIExpression()), !dbg !4605
  br label %216, !dbg !4752

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4753
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4754
  call void @llvm.dbg.value(metadata i8* %218, metadata !4532, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8 %217, metadata !4534, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.label(metadata !4590), !dbg !4755
  %219 = icmp sgt i32 %76, -1, !dbg !4756
  br i1 %219, label %222, label %220, !dbg !4757

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4758
  br label %245, !dbg !4757

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4760
  %224 = sub i32 %22, %223, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %224, metadata !4549, metadata !DIExpression()), !dbg !4761
  %225 = load i24, i24* %15, align 8, !dbg !4762
  %226 = and i24 %225, -65, !dbg !4762
  store i24 %226, i24* %15, align 8, !dbg !4762
  %227 = icmp ugt i32 %76, %224, !dbg !4763
  br i1 %227, label %228, label %245, !dbg !4765

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4766
  store i32 %229, i32* %16, align 4, !dbg !4768
  br label %245, !dbg !4769

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4770
  %232 = icmp eq i8* %231, null, !dbg !4772
  br i1 %232, label %245, label %233, !dbg !4773

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4774
  %235 = zext i32 %234 to i64, !dbg !4774
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4776
  call void @llvm.dbg.value(metadata i8* %236, metadata !4532, metadata !DIExpression()), !dbg !4605
  %237 = load i24, i24* %15, align 8, !dbg !4777
  %238 = or i24 %237, 1048576, !dbg !4777
  store i24 %238, i24* %15, align 8, !dbg !4777
  store i8 120, i8* %21, align 1, !dbg !4778
  br label %216, !dbg !4779

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4780
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4783
  br label %363, !dbg !4784

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4785
  call void @llvm.dbg.value(metadata i32 %242, metadata !4547, metadata !DIExpression()), !dbg !4731
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4786
  call void @llvm.dbg.value(metadata i32 -1, metadata !4531, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %29, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8* %192, metadata !4532, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %243, metadata !4533, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8 0, metadata !4534, metadata !DIExpression()), !dbg !4605
  %244 = icmp eq i8* %192, null, !dbg !4787
  br i1 %244, label %363, label %245, !dbg !4789, !llvm.loop !4601

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4758
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i32 0, metadata !4553, metadata !DIExpression()), !dbg !4605
  %250 = zext i8 %249 to i32, !dbg !4790
  %251 = icmp eq i8 %249, 0, !dbg !4792
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4605
  %252 = icmp sgt i32 %58, 0, !dbg !4793
  br i1 %252, label %253, label %302, !dbg !4794

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4758
  %255 = icmp eq i24 %254, 0, !dbg !4758
  %256 = ptrtoint i8* %248 to i32, !dbg !4795
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %257 = ptrtoint i8* %247 to i32, !dbg !4795
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %258 = xor i1 %251, true, !dbg !4796
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %259 = sext i1 %258 to i32, !dbg !4796
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %260 = lshr i24 %246, 19, !dbg !4797
  %261 = and i24 %260, 1, !dbg !4797
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4797
  %263 = zext i24 %262 to i32, !dbg !4797
  %264 = add i32 %257, %259, !dbg !4797
  %265 = add i32 %256, %263, !dbg !4797
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %266 = and i24 %246, 4194304, !dbg !4798
  %267 = icmp eq i24 %266, 0, !dbg !4798
  %268 = load i32, i32* %16, align 4, !dbg !4800
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4552, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4605
  %269 = load i32, i32* %17, align 8, !dbg !4801
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4801
  call void @llvm.dbg.value(metadata i32 undef, metadata !4552, metadata !DIExpression()), !dbg !4605
  %271 = add i32 %264, %58, !dbg !4801
  %272 = add i32 %265, %268, !dbg !4801
  %273 = add i32 %272, %270, !dbg !4802
  %274 = sub i32 %271, %273, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %274, metadata !4530, metadata !DIExpression()), !dbg !4605
  %275 = and i24 %246, 4, !dbg !4803
  %276 = icmp eq i24 %275, 0, !dbg !4803
  br i1 %276, label %277, label %302, !dbg !4804

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4554, metadata !DIExpression()), !dbg !4805
  %278 = and i24 %246, 64, !dbg !4806
  %279 = icmp eq i24 %278, 0, !dbg !4806
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4807
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4807
  %282 = select i1 %279, i32 32, i32 48, !dbg !4807
  br i1 %280, label %287, label %283, !dbg !4807

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %284, metadata !4559, metadata !DIExpression()), !dbg !4809
  %285 = icmp slt i32 %284, 0, !dbg !4810
  %286 = add i32 %29, 1, !dbg !4808
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4605
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %290, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 undef, metadata !4554, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata i8 %288, metadata !4534, metadata !DIExpression()), !dbg !4605
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4812
  %292 = add i32 %291, -1, !dbg !4812
  br label %293, !dbg !4812

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4813
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %295, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %294, metadata !4530, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %294, metadata !4530, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4605
  %296 = icmp sgt i32 %294, 0, !dbg !4814
  br i1 %296, label %297, label %302, !dbg !4812

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %298, metadata !4530, metadata !DIExpression()), !dbg !4605
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %299, metadata !4565, metadata !DIExpression()), !dbg !4817
  %300 = icmp slt i32 %299, 0, !dbg !4818
  %301 = add i32 %295, 1, !dbg !4816
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %300, label %361, label %293, !llvm.loop !4820

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4605
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4605
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %305, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %304, metadata !4530, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8 %303, metadata !4534, metadata !DIExpression()), !dbg !4605
  %306 = icmp eq i8 %303, 0, !dbg !4822
  br i1 %306, label %312, label %307, !dbg !4823

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4824
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %309, metadata !4568, metadata !DIExpression()), !dbg !4826
  %310 = icmp slt i32 %309, 0, !dbg !4827
  %311 = add i32 %305, 1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %313, metadata !4469, metadata !DIExpression()), !dbg !4591
  %314 = lshr i24 %246, 20, !dbg !4829
  %315 = lshr i24 %246, 19, !dbg !4830
  %316 = or i24 %314, %315, !dbg !4831
  %317 = and i24 %316, 1, !dbg !4831
  %318 = icmp eq i24 %317, 0, !dbg !4831
  br i1 %318, label %323, label %319, !dbg !4832

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %320, metadata !4572, metadata !DIExpression()), !dbg !4834
  %321 = icmp slt i32 %320, 0, !dbg !4835
  %322 = add i32 %313, 1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %324, metadata !4469, metadata !DIExpression()), !dbg !4591
  %325 = and i24 %246, 1048576, !dbg !4837
  %326 = icmp eq i24 %325, 0, !dbg !4837
  br i1 %326, label %333, label %327, !dbg !4838

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4839
  %329 = zext i8 %328 to i32, !dbg !4839
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %330, metadata !4578, metadata !DIExpression()), !dbg !4840
  %331 = icmp slt i32 %330, 0, !dbg !4841
  %332 = add i32 %324, 1, !dbg !4839
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %334, metadata !4469, metadata !DIExpression()), !dbg !4591
  %335 = load i32, i32* %16, align 4, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %335, metadata !4553, metadata !DIExpression()), !dbg !4605
  br label %336, !dbg !4844

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4845
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %338, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %337, metadata !4553, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4605
  %339 = icmp sgt i32 %337, 0, !dbg !4846
  br i1 %339, label %340, label %345, !dbg !4844

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %341, metadata !4553, metadata !DIExpression()), !dbg !4605
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4848
  call void @llvm.dbg.value(metadata i32 %342, metadata !4582, metadata !DIExpression()), !dbg !4849
  %343 = icmp slt i32 %342, 0, !dbg !4850
  %344 = add i32 %338, 1, !dbg !4848
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %343, label %361, label %336, !llvm.loop !4852

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %346, metadata !4585, metadata !DIExpression()), !dbg !4855
  %347 = icmp slt i32 %346, 0, !dbg !4856
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %349, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %304, metadata !4530, metadata !DIExpression()), !dbg !4605
  %350 = icmp sgt i32 %304, 0, !dbg !4858
  br i1 %350, label %351, label %363, !dbg !4859

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4859
  %353 = add i32 %352, %338, !dbg !4859
  br label %354, !dbg !4859

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %355, metadata !4530, metadata !DIExpression()), !dbg !4605
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %356, metadata !4587, metadata !DIExpression()), !dbg !4861
  %357 = icmp slt i32 %356, 0, !dbg !4862
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4864
  call void @llvm.dbg.value(metadata i32 undef, metadata !4469, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4591
  call void @llvm.dbg.value(metadata i32 %359, metadata !4530, metadata !DIExpression()), !dbg !4605
  %360 = icmp sgt i32 %355, 1, !dbg !4858
  br i1 %360, label %354, label %363, !dbg !4859, !llvm.loop !4865

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4602
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4595
  call void @llvm.dbg.value(metadata i32 %364, metadata !4469, metadata !DIExpression()), !dbg !4591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4602
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4591
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4867
  ret i32 %366, !dbg !4867
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4868 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4872, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %1, metadata !4873, metadata !DIExpression()), !dbg !4874
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4875
  store i24 0, i24* %3, align 4, !dbg !4875
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4875
  store i8 0, i8* %4, align 1, !dbg !4875
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4875
  store i32 0, i32* %5, align 4, !dbg !4875
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4875
  store i32 0, i32* %6, align 4, !dbg !4875
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %7, metadata !4873, metadata !DIExpression()), !dbg !4874
  %8 = load i8, i8* %7, align 1, !dbg !4877
  %9 = icmp eq i8 %8, 37, !dbg !4879
  br i1 %9, label %10, label %12, !dbg !4880

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %11, metadata !4873, metadata !DIExpression()), !dbg !4874
  store i8 37, i8* %4, align 1, !dbg !4883
  br label %18, !dbg !4884

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %13, metadata !4873, metadata !DIExpression()), !dbg !4874
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %14, metadata !4873, metadata !DIExpression()), !dbg !4874
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %15, metadata !4873, metadata !DIExpression()), !dbg !4874
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %16, metadata !4873, metadata !DIExpression()), !dbg !4874
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %17, metadata !4873, metadata !DIExpression()), !dbg !4874
  br label %18, !dbg !4890

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4874
  ret i8* %19, !dbg !4891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4892 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4896, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %1, metadata !4897, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %2, metadata !4898, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %3, metadata !4899, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i32 0, metadata !4900, metadata !DIExpression()), !dbg !4903
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4904

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4905
  call void @llvm.dbg.value(metadata i32 %9, metadata !4900, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata i8* %8, metadata !4898, metadata !DIExpression()), !dbg !4903
  %10 = icmp ult i8* %8, %3, !dbg !4906
  br i1 %10, label %11, label %13, !dbg !4907

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4908
  br label %17, !dbg !4907

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4909

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4910
  %16 = icmp eq i8 %15, 0, !dbg !4909
  br i1 %16, label %24, label %17, !dbg !4904

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4908
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4911
  call void @llvm.dbg.value(metadata i8* %19, metadata !4898, metadata !DIExpression()), !dbg !4903
  %20 = zext i8 %18 to i32, !dbg !4912
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4913
  call void @llvm.dbg.value(metadata i32 %21, metadata !4901, metadata !DIExpression()), !dbg !4914
  %22 = icmp slt i32 %21, 0, !dbg !4915
  %23 = add i32 %9, 1, !dbg !4917
  call void @llvm.dbg.value(metadata i32 undef, metadata !4900, metadata !DIExpression()), !dbg !4903
  br i1 %22, label %24, label %7, !llvm.loop !4918

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4903
  ret i32 %25, !dbg !4920
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4921 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4925, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4926, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %2, metadata !4927, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %3, metadata !4928, metadata !DIExpression()), !dbg !4935
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4936
  %6 = load i8, i8* %5, align 1, !dbg !4936
  %7 = zext i8 %6 to i32, !dbg !4937
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4938
  %9 = icmp eq i32 %8, 0, !dbg !4938
  call void @llvm.dbg.value(metadata i1 %9, metadata !4929, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4935
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %10, metadata !4930, metadata !DIExpression()), !dbg !4935
  %11 = ptrtoint i8* %3 to i32, !dbg !4940
  %12 = ptrtoint i8* %2 to i32, !dbg !4940
  %13 = sub i32 %11, %12, !dbg !4940
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %14, metadata !4932, metadata !DIExpression()), !dbg !4935
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4942

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4935
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4925, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.value(metadata i8* %18, metadata !4932, metadata !DIExpression()), !dbg !4935
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4943
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %25, metadata !4933, metadata !DIExpression()), !dbg !4945
  %26 = icmp ult i32 %25, 10, !dbg !4946
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4947
  %28 = add i32 %27, %25, !dbg !4945
  %29 = trunc i32 %28 to i8, !dbg !4947
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %30, metadata !4932, metadata !DIExpression()), !dbg !4935
  store i8 %29, i8* %30, align 1, !dbg !4949
  call void @llvm.dbg.value(metadata i64 %22, metadata !4925, metadata !DIExpression()), !dbg !4935
  %31 = icmp uge i64 %19, %15, !dbg !4950
  %32 = icmp ugt i8* %30, %2, !dbg !4951
  %33 = and i1 %31, %32, !dbg !4951
  br i1 %33, label %17, label %34, !dbg !4952, !llvm.loop !4953

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4955
  %36 = load i24, i24* %35, align 4, !dbg !4955
  %37 = and i24 %36, 32, !dbg !4955
  %38 = icmp eq i24 %37, 0, !dbg !4955
  br i1 %38, label %44, label %39, !dbg !4957

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4958

40:                                               ; preds = %39
  br label %41, !dbg !4960

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4964
  store i24 %43, i24* %35, align 4, !dbg !4964
  br label %44, !dbg !4965

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4965
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4966 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4972, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.value(metadata i8* %1, metadata !4973, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.value(metadata i32 %2, metadata !4974, metadata !DIExpression()), !dbg !4975
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4976
  %5 = load i24, i24* %4, align 4, !dbg !4976
  %6 = lshr i24 %5, 11, !dbg !4976
  %7 = and i24 %6, 15, !dbg !4976
  %8 = zext i24 %7 to i32, !dbg !4976
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4977

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4978
  store i32 %2, i32* %10, align 4, !dbg !4980
  br label %28, !dbg !4981

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4982
  store i8 %12, i8* %1, align 1, !dbg !4983
  br label %28, !dbg !4984

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4985
  %15 = bitcast i8* %1 to i16*, !dbg !4986
  store i16 %14, i16* %15, align 2, !dbg !4987
  br label %28, !dbg !4988

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4989
  store i32 %2, i32* %17, align 4, !dbg !4990
  br label %28, !dbg !4991

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4992
  %20 = bitcast i8* %1 to i64*, !dbg !4993
  store i64 %19, i64* %20, align 8, !dbg !4994
  br label %28, !dbg !4995

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4996
  %23 = bitcast i8* %1 to i64*, !dbg !4997
  store i64 %22, i64* %23, align 8, !dbg !4998
  br label %28, !dbg !4999

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5000
  store i32 %2, i32* %25, align 4, !dbg !5001
  br label %28, !dbg !5002

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5003
  store i32 %2, i32* %27, align 4, !dbg !5004
  br label %28, !dbg !5005

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5006
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5010, metadata !DIExpression()), !dbg !5011
  %2 = add i32 %0, -65, !dbg !5012
  %3 = icmp ult i32 %2, 26, !dbg !5013
  %4 = zext i1 %3 to i32, !dbg !5013
  ret i32 %4, !dbg !5014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5015 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5019, metadata !DIExpression()), !dbg !5020
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5021

2:                                                ; preds = %1
  br label %4, !dbg !5022

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5024

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5025
  ret i32 %5, !dbg !5026
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5027 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5029, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i8* %1, metadata !5030, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i8 1, metadata !5031, metadata !DIExpression()), !dbg !5032
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5033

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i8* %5, metadata !5030, metadata !DIExpression()), !dbg !5032
  %6 = load i8, i8* %5, align 1, !dbg !5034
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5036

7:                                                ; preds = %4
  br label %11, !dbg !5037

8:                                                ; preds = %4
  br label %11, !dbg !5039

9:                                                ; preds = %4
  br label %11, !dbg !5040

10:                                               ; preds = %4
  br label %11, !dbg !5041

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5042
  %14 = or i24 %13, %12, !dbg !5042
  store i24 %14, i24* %3, align 4, !dbg !5042
  call void @llvm.dbg.value(metadata i8 poison, metadata !5031, metadata !DIExpression()), !dbg !5032
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5030, metadata !DIExpression()), !dbg !5032
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i8* %15, metadata !5030, metadata !DIExpression()), !dbg !5032
  %17 = load i24, i24* %3, align 4, !dbg !5043
  %18 = and i24 %17, 68, !dbg !5045
  %19 = icmp eq i24 %18, 68, !dbg !5045
  br i1 %19, label %20, label %22, !dbg !5045

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5046
  store i24 %21, i24* %3, align 4, !dbg !5046
  br label %22, !dbg !5048

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5050 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5052, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i8* %1, metadata !5053, metadata !DIExpression()), !dbg !5056
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5057
  %5 = load i24, i24* %4, align 4, !dbg !5058
  %6 = or i24 %5, 128, !dbg !5058
  store i24 %6, i24* %4, align 4, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %1, metadata !5053, metadata !DIExpression()), !dbg !5056
  %7 = load i8, i8* %1, align 1, !dbg !5059
  %8 = icmp eq i8 %7, 42, !dbg !5061
  br i1 %8, label %9, label %12, !dbg !5062

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5063
  store i24 %10, i24* %4, align 4, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5053, metadata !DIExpression()), !dbg !5056
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5065
  call void @llvm.dbg.value(metadata i8* %11, metadata !5053, metadata !DIExpression()), !dbg !5056
  store i8* %11, i8** %3, align 4, !dbg !5065
  br label %29, !dbg !5066

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5054, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.value(metadata i8** %3, metadata !5053, metadata !DIExpression(DW_OP_deref)), !dbg !5056
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %13, metadata !5055, metadata !DIExpression()), !dbg !5056
  %14 = load i8*, i8** %3, align 4, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %14, metadata !5053, metadata !DIExpression()), !dbg !5056
  %15 = icmp eq i8* %14, %1, !dbg !5070
  br i1 %15, label %29, label %16, !dbg !5071

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5072
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5074
  store i32 %13, i32* %18, align 4, !dbg !5075
  %19 = lshr i32 %13, 31, !dbg !5076
  %20 = lshr i24 %17, 1, !dbg !5077
  %21 = and i24 %20, 1, !dbg !5077
  %22 = zext i24 %21 to i32, !dbg !5077
  %23 = or i32 %19, %22, !dbg !5077
  %24 = trunc i32 %23 to i24, !dbg !5077
  %25 = shl nuw nsw i24 %24, 1, !dbg !5077
  %26 = and i24 %17, -131, !dbg !5077
  %27 = or i24 %26, 128, !dbg !5077
  %28 = or i24 %25, %27, !dbg !5077
  store i24 %28, i24* %4, align 4, !dbg !5077
  br label %29, !dbg !5078

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5056
  ret i8* %30, !dbg !5079
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5080 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5082, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i8* %1, metadata !5083, metadata !DIExpression()), !dbg !5085
  %4 = load i8, i8* %1, align 1, !dbg !5086
  %5 = icmp eq i8 %4, 46, !dbg !5087
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5088
  %7 = load i24, i24* %6, align 4, !dbg !5089
  %8 = select i1 %5, i24 512, i24 0, !dbg !5089
  %9 = and i24 %7, -513, !dbg !5089
  %10 = or i24 %9, %8, !dbg !5089
  store i24 %10, i24* %6, align 4, !dbg !5089
  br i1 %5, label %11, label %32, !dbg !5090

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5083, metadata !DIExpression()), !dbg !5085
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %12, metadata !5083, metadata !DIExpression()), !dbg !5085
  store i8* %12, i8** %3, align 4, !dbg !5091
  %13 = load i8, i8* %12, align 1, !dbg !5092
  %14 = icmp eq i8 %13, 42, !dbg !5094
  br i1 %14, label %15, label %18, !dbg !5095

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5096
  store i24 %16, i24* %6, align 4, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %12, metadata !5083, metadata !DIExpression()), !dbg !5085
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %17, metadata !5083, metadata !DIExpression()), !dbg !5085
  store i8* %17, i8** %3, align 4, !dbg !5098
  br label %32, !dbg !5099

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5083, metadata !DIExpression(DW_OP_deref)), !dbg !5085
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5100
  call void @llvm.dbg.value(metadata i32 %19, metadata !5084, metadata !DIExpression()), !dbg !5085
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5101
  store i32 %19, i32* %20, align 4, !dbg !5102
  %21 = lshr i32 %19, 31, !dbg !5103
  %22 = load i24, i24* %6, align 4, !dbg !5104
  %23 = lshr i24 %22, 1, !dbg !5104
  %24 = and i24 %23, 1, !dbg !5104
  %25 = zext i24 %24 to i32, !dbg !5104
  %26 = or i32 %21, %25, !dbg !5104
  %27 = trunc i32 %26 to i24, !dbg !5104
  %28 = shl nuw nsw i24 %27, 1, !dbg !5104
  %29 = and i24 %22, -3, !dbg !5104
  %30 = or i24 %28, %29, !dbg !5104
  store i24 %30, i24* %6, align 4, !dbg !5104
  %31 = load i8*, i8** %3, align 4, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %31, metadata !5083, metadata !DIExpression()), !dbg !5085
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5085
  ret i8* %33, !dbg !5106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5107 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5109, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i8* %1, metadata !5110, metadata !DIExpression()), !dbg !5111
  %3 = load i8, i8* %1, align 1, !dbg !5112
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5113

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5114
  call void @llvm.dbg.value(metadata i8* %5, metadata !5110, metadata !DIExpression()), !dbg !5111
  %6 = load i8, i8* %5, align 1, !dbg !5117
  %7 = icmp eq i8 %6, 104, !dbg !5118
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5119
  %9 = load i24, i24* %8, align 4, !dbg !5119
  %10 = and i24 %9, -30721, !dbg !5119
  br i1 %7, label %11, label %14, !dbg !5120

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5121
  store i24 %12, i24* %8, align 4, !dbg !5121
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %13, metadata !5110, metadata !DIExpression()), !dbg !5111
  br label %56, !dbg !5124

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5125
  store i24 %15, i24* %8, align 4, !dbg !5125
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %17, metadata !5110, metadata !DIExpression()), !dbg !5111
  %18 = load i8, i8* %17, align 1, !dbg !5129
  %19 = icmp eq i8 %18, 108, !dbg !5130
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5131
  %21 = load i24, i24* %20, align 4, !dbg !5131
  %22 = and i24 %21, -30721, !dbg !5131
  br i1 %19, label %23, label %26, !dbg !5132

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5133
  store i24 %24, i24* %20, align 4, !dbg !5133
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %25, metadata !5110, metadata !DIExpression()), !dbg !5111
  br label %56, !dbg !5136

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5137
  store i24 %27, i24* %20, align 4, !dbg !5137
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5139
  %30 = load i24, i24* %29, align 4, !dbg !5140
  %31 = and i24 %30, -30721, !dbg !5140
  %32 = or i24 %31, 10240, !dbg !5140
  store i24 %32, i24* %29, align 4, !dbg !5140
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %33, metadata !5110, metadata !DIExpression()), !dbg !5111
  br label %56, !dbg !5142

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5143
  %36 = load i24, i24* %35, align 4, !dbg !5144
  %37 = and i24 %36, -30721, !dbg !5144
  %38 = or i24 %37, 12288, !dbg !5144
  store i24 %38, i24* %35, align 4, !dbg !5144
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5145
  call void @llvm.dbg.value(metadata i8* %39, metadata !5110, metadata !DIExpression()), !dbg !5111
  br label %56, !dbg !5146

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %42 = load i24, i24* %41, align 4, !dbg !5148
  %43 = and i24 %42, -30721, !dbg !5148
  %44 = or i24 %43, 14336, !dbg !5148
  store i24 %44, i24* %41, align 4, !dbg !5148
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5149
  call void @llvm.dbg.value(metadata i8* %45, metadata !5110, metadata !DIExpression()), !dbg !5111
  br label %56, !dbg !5150

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5151
  %48 = load i24, i24* %47, align 4, !dbg !5152
  %49 = and i24 %48, -30723, !dbg !5152
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5153
  call void @llvm.dbg.value(metadata i8* %50, metadata !5110, metadata !DIExpression()), !dbg !5111
  %51 = or i24 %49, 16386, !dbg !5154
  store i24 %51, i24* %47, align 4, !dbg !5154
  br label %56, !dbg !5155

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5156
  %54 = load i24, i24* %53, align 4, !dbg !5157
  %55 = and i24 %54, -30721, !dbg !5157
  store i24 %55, i24* %53, align 4, !dbg !5157
  br label %56, !dbg !5158

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5110, metadata !DIExpression()), !dbg !5111
  ret i8* %57, !dbg !5159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5160 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5162, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8* %1, metadata !5163, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8 0, metadata !5164, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8* %1, metadata !5163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5167
  %3 = load i8, i8* %1, align 1, !dbg !5168
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5169
  store i8 %3, i8* %4, align 1, !dbg !5170
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5171

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5172

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5173
  %9 = load i24, i24* %8, align 4, !dbg !5173
  %10 = and i24 %9, -458753, !dbg !5173
  %11 = or i24 %10, %7, !dbg !5173
  call void @llvm.dbg.label(metadata !5165), !dbg !5174
  %12 = and i24 %9, 30720, !dbg !5175
  %13 = icmp eq i24 %12, 16384, !dbg !5175
  %14 = zext i1 %13 to i24, !dbg !5177
  %15 = or i24 %11, %14, !dbg !5177
  %16 = icmp eq i8 %3, 99, !dbg !5178
  br i1 %16, label %17, label %43, !dbg !5180

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5181
  %19 = icmp ne i24 %18, 0, !dbg !5181
  call void @llvm.dbg.value(metadata i1 %19, metadata !5164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5167
  br label %43, !dbg !5183

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5184
  %22 = load i24, i24* %21, align 4, !dbg !5185
  %23 = and i24 %22, -458753, !dbg !5185
  %24 = or i24 %23, 262144, !dbg !5185
  call void @llvm.dbg.value(metadata i8 1, metadata !5164, metadata !DIExpression()), !dbg !5167
  br label %43, !dbg !5186

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5189
  %27 = load i24, i24* %26, align 4, !dbg !5190
  %28 = and i24 %27, -458753, !dbg !5190
  %29 = or i24 %28, 196608, !dbg !5190
  %30 = and i24 %27, 30720, !dbg !5191
  %31 = icmp eq i24 %30, 16384, !dbg !5191
  br label %43, !dbg !5193

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5194
  %34 = load i24, i24* %33, align 4, !dbg !5195
  %35 = and i24 %34, -458753, !dbg !5195
  %36 = or i24 %35, 196608, !dbg !5195
  %37 = and i24 %34, 30720, !dbg !5196
  %38 = icmp ne i24 %37, 0, !dbg !5196
  br label %43, !dbg !5198

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5199
  %41 = load i24, i24* %40, align 4, !dbg !5200
  %42 = or i24 %41, 1, !dbg !5200
  br label %43, !dbg !5201

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5202
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5203
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %48, metadata !5163, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i8 poison, metadata !5164, metadata !DIExpression()), !dbg !5167
  %49 = lshr i24 %44, 1, !dbg !5202
  %50 = and i24 %49, 1, !dbg !5202
  %51 = zext i24 %50 to i32, !dbg !5202
  %52 = or i32 %51, %47, !dbg !5202
  %53 = trunc i32 %52 to i24, !dbg !5202
  %54 = shl nuw nsw i24 %53, 1, !dbg !5202
  %55 = and i24 %44, -3, !dbg !5202
  %56 = or i24 %54, %55, !dbg !5202
  store i24 %56, i24* %46, align 4, !dbg !5202
  ret i8* %48, !dbg !5205
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5206 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5211, metadata !DIExpression()), !dbg !5214
  %2 = load i8*, i8** %0, align 4, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %2, metadata !5212, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i32 0, metadata !5213, metadata !DIExpression()), !dbg !5214
  %3 = load i8, i8* %2, align 1, !dbg !5216
  %4 = zext i8 %3 to i32, !dbg !5217
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5218
  %6 = icmp eq i32 %5, 0, !dbg !5219
  br i1 %6, label %19, label %7, !dbg !5219

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5213, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i8* %10, metadata !5212, metadata !DIExpression()), !dbg !5214
  %11 = mul i32 %9, 10, !dbg !5220
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %12, metadata !5212, metadata !DIExpression()), !dbg !5214
  %13 = add i32 %11, -48, !dbg !5223
  %14 = add i32 %13, %8, !dbg !5224
  call void @llvm.dbg.value(metadata i32 %14, metadata !5213, metadata !DIExpression()), !dbg !5214
  %15 = load i8, i8* %12, align 1, !dbg !5216
  %16 = zext i8 %15 to i32, !dbg !5217
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5218
  %18 = icmp eq i32 %17, 0, !dbg !5219
  br i1 %18, label %19, label %7, !dbg !5219, !llvm.loop !5225

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5214
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5214
  store i8* %20, i8** %0, align 4, !dbg !5227
  ret i32 %21, !dbg !5228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5231, metadata !DIExpression()), !dbg !5232
  %2 = add i32 %0, -48, !dbg !5233
  %3 = icmp ult i32 %2, 10, !dbg !5234
  %4 = zext i1 %3 to i32, !dbg !5234
  ret i32 %4, !dbg !5235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5236 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5806, !srcloc !5807
  ret void, !dbg !5808
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5811, metadata !DIExpression()), !dbg !5813
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5814
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5815
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5816, !srcloc !5825
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %3, metadata !5822, metadata !DIExpression()) #25, !dbg !5826
  call void @llvm.dbg.value(metadata i32 undef, metadata !5823, metadata !DIExpression()) #25, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %3, metadata !5812, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.value(metadata i32 %3, metadata !5827, metadata !DIExpression()) #25, !dbg !5832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5834, !srcloc !5835
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5836
  ret i32 0, !dbg !5837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5838 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5840
  %2 = or i32 %1, 512, !dbg !5840
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5840
  ret void, !dbg !5841
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5842 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5843
  %2 = or i32 %1, 1024, !dbg !5843
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5843
  ret void, !dbg !5844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5847, metadata !DIExpression()), !dbg !5848
  ret i32 0, !dbg !5849
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5850
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5852
  br i1 %2, label %5, label %3, !dbg !5853

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5854
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5854
  br label %5, !dbg !5857

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5858
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5859
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5860
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5861
  ret i8* %7, !dbg !5862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5863 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5872, metadata !DIExpression()), !dbg !5874
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5875, !srcloc !5877
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5878
  ret i8* %1, !dbg !5879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5880 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5882, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.value(metadata i32 0, metadata !5882, metadata !DIExpression()), !dbg !5883
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5884
  call void @llvm.dbg.value(metadata i32 0, metadata !5882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5883
  call void @llvm.dbg.value(metadata i32 0, metadata !5882, metadata !DIExpression()), !dbg !5883
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5884
  call void @llvm.dbg.value(metadata i32 0, metadata !5882, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5883
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5889
  ret void, !dbg !5890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5940, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5941, metadata !DIExpression()), !dbg !5942
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5943
  ret void, !dbg !5944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5962, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5963, metadata !DIExpression()), !dbg !5965
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5966
  %4 = load i32, i32* %3, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata i32 %4, metadata !5964, metadata !DIExpression()), !dbg !5965
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5967
  ret void, !dbg !5968
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5969 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5973, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i8* %0, metadata !5974, metadata !DIExpression()), !dbg !5976
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5977
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5975, metadata !DIExpression()), !dbg !5978
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5978
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5979
  %5 = bitcast i8* %4 to i32*, !dbg !5979
  %6 = load i32, i32* %5, align 4, !dbg !5979
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5980
  store i32 %6, i32* %7, align 4, !dbg !5981
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5982
  unreachable, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5987, metadata !DIExpression()), !dbg !5988
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5989
  ret void, !dbg !5990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5995, metadata !DIExpression()), !dbg !5996
  %2 = icmp sgt i32 %0, -1, !dbg !5997
  br i1 %2, label %3, label %8, !dbg !5999

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6000, !srcloc !6002
  %4 = and i32 %0, 31, !dbg !6003
  %5 = shl nuw i32 1, %4, !dbg !6004
  %6 = lshr i32 %0, 5, !dbg !6005
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6006
  store volatile i32 %5, i32* %7, align 4, !dbg !6007
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6008, !srcloc !6009
  br label %8, !dbg !6010

8:                                                ; preds = %3, %1
  ret void, !dbg !6011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6014, metadata !DIExpression()), !dbg !6015
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !6016
  ret void, !dbg !6017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6020, metadata !DIExpression()), !dbg !6021
  %2 = icmp sgt i32 %0, -1, !dbg !6022
  br i1 %2, label %3, label %8, !dbg !6024

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6025
  %5 = shl nuw i32 1, %4, !dbg !6027
  %6 = lshr i32 %0, 5, !dbg !6028
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6029
  store volatile i32 %5, i32* %7, align 4, !dbg !6030
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6031, !srcloc !6035
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6036, !srcloc !6039
  br label %8, !dbg !6040

8:                                                ; preds = %3, %1
  ret void, !dbg !6041
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6046, metadata !DIExpression()), !dbg !6047
  %2 = lshr i32 %0, 5, !dbg !6048
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6049
  %4 = load volatile i32, i32* %3, align 4, !dbg !6049
  %5 = and i32 %0, 31, !dbg !6050
  %6 = shl nuw i32 1, %5, !dbg !6050
  %7 = and i32 %4, %6, !dbg !6051
  ret i32 %7, !dbg !6052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6057, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %1, metadata !6058, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %2, metadata !6059, metadata !DIExpression()), !dbg !6060
  %4 = add i32 %1, 1, !dbg !6061
  call void @llvm.dbg.value(metadata i32 %4, metadata !6058, metadata !DIExpression()), !dbg !6060
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !6064
  ret void, !dbg !6065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6070, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.value(metadata i32 %1, metadata !6071, metadata !DIExpression()), !dbg !6072
  %3 = trunc i32 %1 to i8, !dbg !6073
  %4 = shl i8 %3, 4, !dbg !6073
  %5 = and i32 %0, 15, !dbg !6075
  %6 = add nsw i32 %5, -4, !dbg !6075
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6075
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6075
  %9 = icmp slt i32 %0, 0, !dbg !6075
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6075
  store volatile i8 %4, i8* %10, align 1, !dbg !6073
  ret void, !dbg !6076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6079, metadata !DIExpression()), !dbg !6080
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6081
  ret void, !dbg !6082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6083 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6085
  tail call void @z_arm_int_exit() #26, !dbg !6086
  ret void, !dbg !6087
}

; Function Attrs: optsize
declare !dbg !6088 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6089 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6091 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !6093
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !6094
  tail call void @z_bss_zero() #26, !dbg !6095
  tail call void @z_data_copy() #26, !dbg !6096
  tail call void @z_arm_interrupt_init() #26, !dbg !6097
  tail call void @z_cstart() #29, !dbg !6098
  unreachable, !dbg !6098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6099 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6100
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6101, !srcloc !6104
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6105, !srcloc !6108
  ret void, !dbg !6109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6110 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6111
  %2 = and i32 %1, -15728641, !dbg !6111
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6111
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6112, !srcloc !6119
  call void @llvm.dbg.value(metadata i32 %3, metadata !6117, metadata !DIExpression()) #25, !dbg !6120
  %4 = and i32 %3, -5, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %4, metadata !6122, metadata !DIExpression()) #25, !dbg !6127
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6131, !srcloc !6108
  ret void, !dbg !6133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6137, metadata !DIExpression()), !dbg !6138
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6139
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6140
  store i32 %0, i32* %3, align 4, !dbg !6141
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6142
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6143
  store i32 %4, i32* %5, align 4, !dbg !6144
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6145
  %7 = or i32 %6, 268435456, !dbg !6145
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6145
  call void @llvm.dbg.value(metadata i32 0, metadata !6146, metadata !DIExpression()) #25, !dbg !6149
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6151, !srcloc !6152
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6153
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6154
  %10 = load i32, i32* %9, align 4, !dbg !6154
  ret i32 %10, !dbg !6155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6266, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6267, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %2, metadata !6268, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6269, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %4, metadata !6270, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %5, metadata !6271, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.value(metadata i8* %6, metadata !6272, metadata !DIExpression()), !dbg !6274
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6275
  call void @llvm.dbg.value(metadata i8* %8, metadata !6273, metadata !DIExpression()), !dbg !6274
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6276
  %10 = bitcast i8* %9 to i32*, !dbg !6276
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6277
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6278
  %12 = bitcast i8* %8 to i32*, !dbg !6279
  store i32 %11, i32* %12, align 4, !dbg !6280
  %13 = ptrtoint i8* %4 to i32, !dbg !6281
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6282
  %15 = bitcast i8* %14 to i32*, !dbg !6282
  store i32 %13, i32* %15, align 4, !dbg !6283
  %16 = ptrtoint i8* %5 to i32, !dbg !6284
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6285
  %18 = bitcast i8* %17 to i32*, !dbg !6285
  store i32 %16, i32* %18, align 4, !dbg !6286
  %19 = ptrtoint i8* %6 to i32, !dbg !6287
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6288
  %21 = bitcast i8* %20 to i32*, !dbg !6288
  store i32 %19, i32* %21, align 4, !dbg !6289
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6290
  %23 = bitcast i8* %22 to i32*, !dbg !6290
  store i32 16777216, i32* %23, align 4, !dbg !6291
  %24 = ptrtoint i8* %8 to i32, !dbg !6292
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6293
  store i32 %24, i32* %25, align 8, !dbg !6294
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6295
  store i32 0, i32* %26, align 4, !dbg !6296
  ret void, !dbg !6297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6303, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %1, metadata !6304, metadata !DIExpression()), !dbg !6309
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6310
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6305, metadata !DIExpression()), !dbg !6309
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6311
  br i1 %4, label %19, label %5, !dbg !6313

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6308, metadata !DIExpression()), !dbg !6309
  %6 = icmp eq i32 %0, -22, !dbg !6314
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6314
  %8 = load i32, i32* %7, align 4, !dbg !6314
  br i1 %6, label %16, label %9, !dbg !6316

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6314
  %11 = icmp ule i32 %10, %0, !dbg !6314
  %12 = icmp ugt i32 %8, %0, !dbg !6314
  %13 = and i1 %12, %11, !dbg !6314
  %14 = icmp ugt i32 %8, %1, !dbg !6314
  %15 = and i1 %14, %13, !dbg !6314
  br i1 %15, label %18, label %19, !dbg !6314

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6314
  br i1 %17, label %18, label %19, !dbg !6316

18:                                               ; preds = %9, %16
  br label %19, !dbg !6317

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6309
  ret i32 %20, !dbg !6319
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6324, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %1, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6328
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6329
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6330, !srcloc !6331
  unreachable, !dbg !6332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6333 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6351, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %1, metadata !6352, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %2, metadata !6353, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6354, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 0, metadata !6355, metadata !DIExpression()), !dbg !6361
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6362
  %9 = and i32 %8, 511, !dbg !6363
  call void @llvm.dbg.value(metadata i32 %9, metadata !6356, metadata !DIExpression()), !dbg !6361
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6364
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6364
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6365
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6360, metadata !DIExpression()), !dbg !6366
  call void @llvm.dbg.value(metadata i32 0, metadata !6367, metadata !DIExpression()) #25, !dbg !6370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6372, !srcloc !6373
  call void @llvm.dbg.value(metadata i8* %6, metadata !6358, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6374
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %5, metadata !6357, metadata !DIExpression(DW_OP_deref)), !dbg !6361
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6375
  call void @llvm.dbg.value(metadata i32 %12, metadata !6355, metadata !DIExpression()), !dbg !6361
  %13 = load i8, i8* %5, align 1, !dbg !6376, !range !6378
  call void @llvm.dbg.value(metadata i8 %13, metadata !6357, metadata !DIExpression()), !dbg !6361
  %14 = icmp eq i8 %13, 0, !dbg !6376
  br i1 %14, label %15, label %32, !dbg !6379

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6380
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6381
  %18 = load i8, i8* %6, align 1, !dbg !6382, !range !6378
  call void @llvm.dbg.value(metadata i8 %18, metadata !6358, metadata !DIExpression()), !dbg !6361
  %19 = icmp eq i8 %18, 0, !dbg !6382
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6384
  %21 = load i32, i32* %20, align 4, !dbg !6384
  br i1 %19, label %27, label %22, !dbg !6385

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6386
  %24 = icmp eq i32 %23, 0, !dbg !6389
  br i1 %24, label %25, label %31, !dbg !6390

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6391
  br label %29, !dbg !6393

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6394
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6384
  br label %31, !dbg !6396

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6396
  br label %32, !dbg !6397

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6397
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6397
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6397
  ret void, !dbg !6397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %1, metadata !6404, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %2, metadata !6405, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i8* %3, metadata !6406, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i8 0, metadata !6407, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6408, metadata !DIExpression()), !dbg !6409
  store i8 0, i8* %3, align 1, !dbg !6410
  %5 = icmp ult i32 %2, -16777216, !dbg !6411
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6413
  br i1 %8, label %16, label %9, !dbg !6413

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6414
  %11 = icmp eq i32 %10, 0, !dbg !6414
  br i1 %11, label %12, label %13, !dbg !6416

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  store i8 1, i8* %3, align 1, !dbg !6419
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6409
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6408, metadata !DIExpression()), !dbg !6409
  br label %16, !dbg !6422

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6409
  ret %struct.__esf* %17, !dbg !6423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6424 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6428, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 %1, metadata !6429, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %2, metadata !6430, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  store i8 0, i8* %2, align 1, !dbg !6433
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6434

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6435
  call void @llvm.dbg.value(metadata i32 %5, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6437

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %7, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6439

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6440
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6441

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6431, metadata !DIExpression()), !dbg !6432
  br label %11, !dbg !6443

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6444
  br label %11, !dbg !6445

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6447 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6451, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata i8* %1, metadata !6452, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  store i8 0, i8* %1, align 1, !dbg !6455
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6456
  %4 = and i32 %3, 2, !dbg !6458
  %5 = icmp eq i32 %4, 0, !dbg !6459
  br i1 %5, label %6, label %33, !dbg !6460

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6461
  %8 = icmp sgt i32 %7, -1, !dbg !6463
  br i1 %8, label %9, label %33, !dbg !6464

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6465
  %11 = and i32 %10, 1073741824, !dbg !6467
  %12 = icmp eq i32 %11, 0, !dbg !6468
  br i1 %12, label %33, label %13, !dbg !6469

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6470
  br i1 %14, label %15, label %18, !dbg !6473

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6474
  %17 = load i32, i32* %16, align 4, !dbg !6474
  call void @llvm.dbg.value(metadata i32 %17, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6476

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6477
  %20 = and i32 %19, 255, !dbg !6479
  %21 = icmp eq i32 %20, 0, !dbg !6480
  br i1 %21, label %24, label %22, !dbg !6481

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6482
  call void @llvm.dbg.value(metadata i32 %23, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6484

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6485
  %26 = and i32 %25, 65280, !dbg !6487
  %27 = icmp eq i32 %26, 0, !dbg !6488
  br i1 %27, label %29, label %28, !dbg !6489

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6490
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6492

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6493
  %31 = icmp ult i32 %30, 65536, !dbg !6495
  br i1 %31, label %33, label %32, !dbg !6496

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6497
  call void @llvm.dbg.value(metadata i32 0, metadata !6453, metadata !DIExpression()), !dbg !6454
  br label %33, !dbg !6499

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6454
  call void @llvm.dbg.value(metadata i32 %34, metadata !6453, metadata !DIExpression()), !dbg !6454
  ret i32 %34, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6503, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 %1, metadata !6504, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i8* %2, metadata !6505, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 0, metadata !6506, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 -22, metadata !6507, metadata !DIExpression()), !dbg !6516
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6517
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6519
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6521
  %7 = and i32 %6, 2, !dbg !6522
  %8 = icmp eq i32 %7, 0, !dbg !6523
  br i1 %8, label %19, label %9, !dbg !6524

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %10, metadata !6508, metadata !DIExpression()), !dbg !6526
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6527
  %12 = and i32 %11, 128, !dbg !6529
  %13 = icmp eq i32 %12, 0, !dbg !6530
  br i1 %13, label %19, label %14, !dbg !6531

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6507, metadata !DIExpression()), !dbg !6516
  %15 = icmp eq i32 %1, 0, !dbg !6532
  br i1 %15, label %19, label %16, !dbg !6535

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6536
  %18 = and i32 %17, -129, !dbg !6536
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6536
  br label %19, !dbg !6538

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6516
  call void @llvm.dbg.value(metadata i32 %20, metadata !6507, metadata !DIExpression()), !dbg !6516
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6541
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6543
  %24 = and i32 %23, 16, !dbg !6544
  %25 = icmp eq i32 %24, 0, !dbg !6544
  br i1 %25, label %26, label %30, !dbg !6545

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6546
  %28 = and i32 %27, 2, !dbg !6547
  %29 = icmp eq i32 %28, 0, !dbg !6547
  br i1 %29, label %39, label %30, !dbg !6548

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6549
  %32 = and i32 %31, 2048, !dbg !6550
  %33 = icmp eq i32 %32, 0, !dbg !6550
  br i1 %33, label %39, label %34, !dbg !6551

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6552
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6553
  call void @llvm.dbg.value(metadata i32 %36, metadata !6511, metadata !DIExpression()), !dbg !6554
  %37 = icmp eq i32 %36, 0, !dbg !6555
  br i1 %37, label %39, label %38, !dbg !6557

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6558, metadata !DIExpression()) #25, !dbg !6561
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6564, !srcloc !6565
  call void @llvm.dbg.value(metadata i32 2, metadata !6506, metadata !DIExpression()), !dbg !6516
  br label %39, !dbg !6566

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6516
  call void @llvm.dbg.value(metadata i32 %40, metadata !6506, metadata !DIExpression()), !dbg !6516
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6567
  %42 = and i32 %41, 32, !dbg !6569
  %43 = icmp eq i32 %42, 0, !dbg !6570
  br i1 %43, label %47, label %44, !dbg !6571

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6572
  %46 = and i32 %45, -8193, !dbg !6572
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6572
  br label %47, !dbg !6574

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6575
  %49 = or i32 %48, 255, !dbg !6575
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6575
  store i8 0, i8* %2, align 1, !dbg !6576
  ret i32 %40, !dbg !6577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6578 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6582, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %0, metadata !6583, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %1, metadata !6584, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 0, metadata !6585, metadata !DIExpression()), !dbg !6589
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6590
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6592
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6594
  %6 = and i32 %5, 512, !dbg !6595
  %7 = icmp eq i32 %6, 0, !dbg !6595
  br i1 %7, label %18, label %8, !dbg !6596

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6597
  call void @llvm.dbg.value(metadata i32 %9, metadata !6586, metadata !DIExpression()), !dbg !6598
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6599
  %11 = and i32 %10, 32768, !dbg !6601
  %12 = icmp ne i32 %11, 0, !dbg !6602
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6603
  br i1 %14, label %15, label %18, !dbg !6603

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6604
  %17 = and i32 %16, -32769, !dbg !6604
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6604
  br label %18, !dbg !6608

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6609
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6611
  %21 = and i32 %20, 256, !dbg !6613
  %22 = icmp eq i32 %21, 0, !dbg !6614
  br i1 %22, label %23, label %25, !dbg !6615

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6616
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6618
  %27 = or i32 %26, 65280, !dbg !6618
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6618
  store i8 0, i8* %1, align 1, !dbg !6619
  ret void, !dbg !6620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6621 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6627, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i32 0, metadata !6628, metadata !DIExpression()), !dbg !6629
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6630
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6632
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6634
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6636
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6638
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6640
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6642
  %8 = or i32 %7, -65536, !dbg !6642
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6642
  ret void, !dbg !6643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6644 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6648, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i8* %0, metadata !6649, metadata !DIExpression()), !dbg !6650
  store i8 0, i8* %0, align 1, !dbg !6651
  ret void, !dbg !6652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6653 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6657, metadata !DIExpression()), !dbg !6660
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6661
  %3 = load i32, i32* %2, align 4, !dbg !6661
  %4 = inttoptr i32 %3 to i16*, !dbg !6662
  call void @llvm.dbg.value(metadata i16* %4, metadata !6658, metadata !DIExpression()), !dbg !6660
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6663
  %6 = or i32 %5, 256, !dbg !6663
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6663
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6664, !srcloc !6667
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6668, !srcloc !6671
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6672
  %8 = load i16, i16* %7, align 2, !dbg !6673
  call void @llvm.dbg.value(metadata i16 %8, metadata !6659, metadata !DIExpression()), !dbg !6660
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6674
  %10 = and i32 %9, -257, !dbg !6674
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6674
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6675, !srcloc !6667
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6677, !srcloc !6671
  %11 = icmp eq i16 %8, -8446, !dbg !6679
  ret i1 %11, !dbg !6681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6682 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6683
  %2 = or i32 %1, 16, !dbg !6683
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6683
  ret void, !dbg !6684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6685 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6688, metadata !DIExpression()), !dbg !6689
  br label %1, !dbg !6690

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6688, metadata !DIExpression()), !dbg !6689
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6692
  %3 = add nuw nsw i32 %2, 1, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %3, metadata !6688, metadata !DIExpression()), !dbg !6689
  %4 = icmp eq i32 %3, 97, !dbg !6696
  br i1 %4, label %5, label %1, !dbg !6690, !llvm.loop !6697

5:                                                ; preds = %1
  ret void, !dbg !6699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6702, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 1, metadata !6703, metadata !DIExpression()), !dbg !6704
  %2 = and i32 %0, 15, !dbg !6705
  %3 = add nsw i32 %2, -4, !dbg !6705
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6705
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6705
  %6 = icmp slt i32 %0, 0, !dbg !6705
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6705
  store volatile i8 16, i8* %7, align 1, !dbg !6706
  ret void, !dbg !6708
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6815, metadata !DIExpression()), !dbg !6816
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6817
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6819
  br i1 %3, label %4, label %12, !dbg !6820

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6821, !srcloc !6833
  call void @llvm.dbg.value(metadata i32 %5, metadata !6824, metadata !DIExpression()) #25, !dbg !6834
  %6 = icmp eq i32 %5, 0, !dbg !6835
  br i1 %6, label %12, label %7, !dbg !6836

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6837
  %9 = or i32 %8, 268435456, !dbg !6837
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6837
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6839
  %11 = and i32 %10, -32769, !dbg !6839
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6839
  br label %12, !dbg !6840

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6841
  ret void, !dbg !6842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6843 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6844
  ret void, !dbg !6845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6846
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6847
  %3 = load i32, i32* %2, align 4, !dbg !6847
  %4 = add i32 %3, -64, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6846
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6850
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6851
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6852
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6846
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6853
  ret void, !dbg !6854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6855 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6856
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6857, !srcloc !6860
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6861, !srcloc !6864
  ret void, !dbg !6865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6866 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6867, !srcloc !6870
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6871
  ret void, !dbg !6872
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6873 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6888, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i8 %1, metadata !6889, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i32 %2, metadata !6890, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i32 %3, metadata !6891, metadata !DIExpression()), !dbg !6892
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6893
  ret void, !dbg !6895
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6896 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6901, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8 %1, metadata !6902, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i32 undef, metadata !6903, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i32 undef, metadata !6904, metadata !DIExpression()), !dbg !6906
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6907
  call void @llvm.dbg.value(metadata i8 %3, metadata !6905, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6906
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6908
  call void @llvm.dbg.value(metadata i32 %4, metadata !6905, metadata !DIExpression()), !dbg !6906
  %5 = trunc i32 %4 to i8, !dbg !6909
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6910
  ret void, !dbg !6911
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6912 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6916, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i8 %1, metadata !6917, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i8 %2, metadata !6918, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i1 %3, metadata !6919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6922
  %5 = zext i8 %2 to i32, !dbg !6923
  call void @llvm.dbg.value(metadata i32 %5, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i32 0, metadata !6920, metadata !DIExpression()), !dbg !6922
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i32 0, metadata !6920, metadata !DIExpression()), !dbg !6922
  %7 = icmp eq i8 %1, 0, !dbg !6924
  br i1 %7, label %29, label %8, !dbg !6927

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.value(metadata i32 %10, metadata !6920, metadata !DIExpression()), !dbg !6922
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6928
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6931
  %13 = load i32, i32* %12, align 4, !dbg !6931
  %14 = icmp eq i32 %13, 0, !dbg !6932
  br i1 %14, label %25, label %15, !dbg !6933

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6934

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6936
  %18 = icmp eq i32 %17, 0, !dbg !6936
  br i1 %18, label %29, label %19, !dbg !6937

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6938
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %21, metadata !6921, metadata !DIExpression()), !dbg !6922
  %22 = icmp eq i32 %21, -22, !dbg !6940
  br i1 %22, label %29, label %23, !dbg !6942

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %24, metadata !6921, metadata !DIExpression()), !dbg !6922
  br label %25, !dbg !6944

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6922
  call void @llvm.dbg.value(metadata i32 %26, metadata !6921, metadata !DIExpression()), !dbg !6922
  %27 = add nuw nsw i32 %10, 1, !dbg !6945
  call void @llvm.dbg.value(metadata i32 %27, metadata !6920, metadata !DIExpression()), !dbg !6922
  %28 = icmp eq i32 %27, %6, !dbg !6924
  br i1 %28, label %29, label %8, !dbg !6927, !llvm.loop !6946

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6922
  ret i32 %30, !dbg !6948
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6949 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6953, metadata !DIExpression()), !dbg !6955
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6956
  %3 = load i32, i32* %2, align 4, !dbg !6956
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6957, !range !3887
  %5 = icmp ult i32 %4, 2, !dbg !6957
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6958
  br i1 %7, label %8, label %15, !dbg !6958

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6959
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6960
  %11 = load i32, i32* %10, align 4, !dbg !6960
  %12 = and i32 %11, %9, !dbg !6961
  %13 = icmp eq i32 %12, 0, !dbg !6962
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6954, metadata !DIExpression()), !dbg !6955
  ret i32 %16, !dbg !6963
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6964 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6968, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6969, metadata !DIExpression()), !dbg !6971
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6972
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6972
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6970, metadata !DIExpression()), !dbg !6973
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6974
  %6 = load i32, i32* %5, align 4, !dbg !6974
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6975
  store i32 %6, i32* %7, align 4, !dbg !6976
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6977
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6978
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6979
  %11 = load i32, i32* %10, align 4, !dbg !6979
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6980
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6981
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6982
  ret i32 %12, !dbg !6983
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6984 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6991, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6992, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 undef, metadata !6993, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 %2, metadata !6994, metadata !DIExpression()), !dbg !6995
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6996
  %5 = load i32, i32* %4, align 4, !dbg !6996
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6997
  %7 = or i32 %6, %5, !dbg !6998
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6999
  store i32 %7, i32* %8, align 4, !dbg !7000
  ret void, !dbg !7001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7002 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7006, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7007, metadata !DIExpression()), !dbg !7008
  %3 = zext i8 %0 to i32, !dbg !7009
  %4 = icmp ugt i8 %0, 7, !dbg !7011
  br i1 %4, label %6, label %5, !dbg !7012

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !7013
  br label %6, !dbg !7014

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7008
  ret i32 %7, !dbg !7015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7020, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7021, metadata !DIExpression()), !dbg !7022
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !7023
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7024
  %4 = load i32, i32* %3, align 4, !dbg !7024
  %5 = and i32 %4, -32, !dbg !7025
  %6 = or i32 %5, %0, !dbg !7026
  %7 = or i32 %6, 16, !dbg !7026
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7027
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7028
  %9 = load i32, i32* %8, align 4, !dbg !7028
  %10 = or i32 %9, 1, !dbg !7029
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7030
  ret void, !dbg !7031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7035, metadata !DIExpression()), !dbg !7036
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7037
  ret void, !dbg !7038
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7043, metadata !DIExpression()), !dbg !7044
  %2 = icmp ult i32 %0, 33, !dbg !7045
  br i1 %2, label %11, label %3, !dbg !7047

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7048
  br i1 %4, label %11, label %5, !dbg !7050

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7051
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7052, !range !3887
  %8 = mul nsw i32 %7, -2, !dbg !7053
  %9 = add nsw i32 %8, 62, !dbg !7053
  %10 = and i32 %9, 62, !dbg !7054
  br label %11, !dbg !7055

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7044
  ret i32 %12, !dbg !7056
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7057 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7061, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8 %1, metadata !7062, metadata !DIExpression()), !dbg !7063
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !7064
  ret void, !dbg !7066
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7067 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7071, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8 %1, metadata !7072, metadata !DIExpression()), !dbg !7078
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7079
  call void @llvm.dbg.value(metadata i8 %3, metadata !7073, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7078
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !7080
  call void @llvm.dbg.value(metadata i32 %4, metadata !7073, metadata !DIExpression()), !dbg !7078
  %5 = icmp ne i32 %4, -22, !dbg !7081
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7082
  call void @llvm.dbg.value(metadata i32 %4, metadata !7074, metadata !DIExpression()), !dbg !7083
  br i1 %7, label %8, label %12, !dbg !7082

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7074, metadata !DIExpression()), !dbg !7083
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !7084
  %10 = add i32 %9, 1, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %10, metadata !7074, metadata !DIExpression()), !dbg !7083
  %11 = icmp eq i32 %10, 8, !dbg !7088
  br i1 %11, label %12, label %8, !dbg !7089, !llvm.loop !7090

12:                                               ; preds = %8, %2
  ret void, !dbg !7092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7096, metadata !DIExpression()), !dbg !7097
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7098
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7099
  ret void, !dbg !7100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7101 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7106
  %2 = icmp ugt i32 %1, 8, !dbg !7108
  br i1 %2, label %14, label %3, !dbg !7109

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !7110
  call void @llvm.dbg.value(metadata i32 0, metadata !7105, metadata !DIExpression()), !dbg !7111
  %4 = icmp eq i32 %1, 0, !dbg !7112
  br i1 %4, label %12, label %5, !dbg !7115

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7115

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7105, metadata !DIExpression()), !dbg !7111
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7116
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7118
  %10 = add nuw i32 %8, 1, !dbg !7119
  call void @llvm.dbg.value(metadata i32 %10, metadata !7105, metadata !DIExpression()), !dbg !7111
  %11 = icmp eq i32 %10, %1, !dbg !7112
  br i1 %11, label %12, label %7, !dbg !7115, !llvm.loop !7120

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7122
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7123
  tail call void @arm_core_mpu_enable() #27, !dbg !7124
  br label %14, !dbg !7125

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7111
  ret i32 %15, !dbg !7126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %1, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %0, metadata !7136, metadata !DIExpression()), !dbg !7137
  %3 = load i8, i8* %1, align 1, !dbg !7138
  %4 = icmp eq i8 %3, 0, !dbg !7139
  br i1 %4, label %13, label %5, !dbg !7140

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %8, metadata !7135, metadata !DIExpression()), !dbg !7137
  store i8 %6, i8* %7, align 1, !dbg !7141
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7143
  call void @llvm.dbg.value(metadata i8* %9, metadata !7134, metadata !DIExpression()), !dbg !7137
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7144
  call void @llvm.dbg.value(metadata i8* %10, metadata !7135, metadata !DIExpression()), !dbg !7137
  %11 = load i8, i8* %10, align 1, !dbg !7138
  %12 = icmp eq i8 %11, 0, !dbg !7139
  br i1 %12, label %13, label %5, !dbg !7140, !llvm.loop !7145

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7147
  ret i8* %0, !dbg !7148
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7153, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %1, metadata !7154, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %2, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %0, metadata !7156, metadata !DIExpression()), !dbg !7157
  %4 = icmp eq i32 %2, 0, !dbg !7158
  br i1 %4, label %22, label %5, !dbg !7159

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7153, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %7, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %8, metadata !7154, metadata !DIExpression()), !dbg !7157
  %9 = load i8, i8* %8, align 1, !dbg !7160
  %10 = icmp eq i8 %9, 0, !dbg !7161
  br i1 %10, label %16, label %11, !dbg !7162

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7163
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7165
  call void @llvm.dbg.value(metadata i8* %12, metadata !7154, metadata !DIExpression()), !dbg !7157
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7166
  call void @llvm.dbg.value(metadata i8* %13, metadata !7153, metadata !DIExpression()), !dbg !7157
  %14 = add i32 %7, -1, !dbg !7167
  call void @llvm.dbg.value(metadata i32 %14, metadata !7155, metadata !DIExpression()), !dbg !7157
  %15 = icmp eq i32 %14, 0, !dbg !7158
  br i1 %15, label %22, label %5, !dbg !7159, !llvm.loop !7168

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7153, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %18, metadata !7155, metadata !DIExpression()), !dbg !7157
  store i8 0, i8* %17, align 1, !dbg !7170
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7172
  call void @llvm.dbg.value(metadata i8* %19, metadata !7153, metadata !DIExpression()), !dbg !7157
  %20 = add i32 %18, -1, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %20, metadata !7155, metadata !DIExpression()), !dbg !7157
  %21 = icmp eq i32 %20, 0, !dbg !7174
  br i1 %21, label %22, label %16, !dbg !7175, !llvm.loop !7176

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7178
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7183, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 %1, metadata !7184, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 %1, metadata !7185, metadata !DIExpression()), !dbg !7186
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7187

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7183, metadata !DIExpression()), !dbg !7186
  %6 = load i8, i8* %5, align 1, !dbg !7188
  %7 = icmp eq i8 %6, %3, !dbg !7189
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7190
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7191
  call void @llvm.dbg.value(metadata i8* %10, metadata !7183, metadata !DIExpression()), !dbg !7186
  br i1 %9, label %11, label %4, !dbg !7190, !llvm.loop !7193

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7195
  ret i8* %12, !dbg !7196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7199, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %1, metadata !7200, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* null, metadata !7201, metadata !DIExpression()), !dbg !7202
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7203

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7202
  call void @llvm.dbg.value(metadata i8* %6, metadata !7201, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* %5, metadata !7199, metadata !DIExpression()), !dbg !7202
  %7 = load i8, i8* %5, align 1, !dbg !7204
  %8 = icmp eq i8 %7, %3, !dbg !7207
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7208
  call void @llvm.dbg.value(metadata i8* %9, metadata !7201, metadata !DIExpression()), !dbg !7202
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7209
  call void @llvm.dbg.value(metadata i8* %10, metadata !7199, metadata !DIExpression()), !dbg !7202
  %11 = icmp eq i8 %7, 0, !dbg !7210
  br i1 %11, label %12, label %4, !dbg !7210, !llvm.loop !7211

12:                                               ; preds = %4
  ret i8* %9, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7218, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i32 0, metadata !7219, metadata !DIExpression()), !dbg !7220
  %2 = load i8, i8* %0, align 1, !dbg !7221
  %3 = icmp eq i8 %2, 0, !dbg !7222
  br i1 %3, label %11, label %4, !dbg !7223

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7219, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata i8* %6, metadata !7218, metadata !DIExpression()), !dbg !7220
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7224
  call void @llvm.dbg.value(metadata i8* %7, metadata !7218, metadata !DIExpression()), !dbg !7220
  %8 = add i32 %5, 1, !dbg !7226
  call void @llvm.dbg.value(metadata i32 %8, metadata !7219, metadata !DIExpression()), !dbg !7220
  %9 = load i8, i8* %7, align 1, !dbg !7221
  %10 = icmp eq i8 %9, 0, !dbg !7222
  br i1 %10, label %11, label %4, !dbg !7223, !llvm.loop !7227

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7220
  ret i32 %12, !dbg !7229
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7230 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7234, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %1, metadata !7235, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 0, metadata !7236, metadata !DIExpression()), !dbg !7237
  %3 = load i8, i8* %0, align 1, !dbg !7238
  %4 = icmp ne i8 %3, 0, !dbg !7239
  %5 = icmp ne i32 %1, 0, !dbg !7240
  %6 = and i1 %4, %5, !dbg !7240
  br i1 %6, label %7, label %16, !dbg !7241

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i8* %9, metadata !7234, metadata !DIExpression()), !dbg !7237
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7242
  call void @llvm.dbg.value(metadata i8* %10, metadata !7234, metadata !DIExpression()), !dbg !7237
  %11 = add nuw i32 %8, 1, !dbg !7244
  call void @llvm.dbg.value(metadata i32 %11, metadata !7236, metadata !DIExpression()), !dbg !7237
  %12 = load i8, i8* %10, align 1, !dbg !7238
  %13 = icmp ne i8 %12, 0, !dbg !7239
  %14 = icmp ult i32 %11, %1, !dbg !7240
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7240
  br i1 %15, label %7, label %16, !dbg !7241, !llvm.loop !7245

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7237
  ret i32 %17, !dbg !7247
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7248 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7252, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8* %1, metadata !7253, metadata !DIExpression()), !dbg !7254
  %3 = load i8, i8* %0, align 1, !dbg !7255
  %4 = load i8, i8* %1, align 1, !dbg !7256
  %5 = icmp ne i8 %3, %4, !dbg !7257
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7258
  br i1 %7, label %18, label %8, !dbg !7258

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i8* %10, metadata !7252, metadata !DIExpression()), !dbg !7254
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7259
  call void @llvm.dbg.value(metadata i8* %11, metadata !7252, metadata !DIExpression()), !dbg !7254
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7261
  call void @llvm.dbg.value(metadata i8* %12, metadata !7253, metadata !DIExpression()), !dbg !7254
  %13 = load i8, i8* %11, align 1, !dbg !7255
  %14 = load i8, i8* %12, align 1, !dbg !7256
  %15 = icmp ne i8 %13, %14, !dbg !7257
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7258
  br i1 %17, label %18, label %8, !dbg !7258, !llvm.loop !7262

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7255
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7256
  %21 = zext i8 %19 to i32, !dbg !7265
  %22 = zext i8 %20 to i32, !dbg !7266
  %23 = sub nsw i32 %21, %22, !dbg !7267
  ret i32 %23, !dbg !7268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7273, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i8* %1, metadata !7274, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i32 %2, metadata !7275, metadata !DIExpression()), !dbg !7276
  %4 = icmp eq i32 %2, 0, !dbg !7277
  br i1 %4, label %23, label %5, !dbg !7277

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7275, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i8* %7, metadata !7274, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i8* %8, metadata !7273, metadata !DIExpression()), !dbg !7276
  %9 = load i8, i8* %8, align 1, !dbg !7278
  %10 = load i8, i8* %7, align 1, !dbg !7279
  %11 = icmp ne i8 %9, %10, !dbg !7280
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7281
  br i1 %13, label %19, label %14, !dbg !7281

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7282
  call void @llvm.dbg.value(metadata i8* %15, metadata !7273, metadata !DIExpression()), !dbg !7276
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7284
  call void @llvm.dbg.value(metadata i8* %16, metadata !7274, metadata !DIExpression()), !dbg !7276
  %17 = add i32 %6, -1, !dbg !7285
  call void @llvm.dbg.value(metadata i32 %17, metadata !7275, metadata !DIExpression()), !dbg !7276
  %18 = icmp eq i32 %17, 0, !dbg !7277
  br i1 %18, label %23, label %5, !dbg !7277, !llvm.loop !7286

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7289
  %21 = zext i8 %10 to i32, !dbg !7290
  %22 = sub nsw i32 %20, %21, !dbg !7291
  br label %23, !dbg !7292

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7292
  ret i32 %24, !dbg !7293
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7294 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7299, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %1, metadata !7300, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8** %2, metadata !7301, metadata !DIExpression()), !dbg !7304
  %4 = icmp eq i8* %0, null, !dbg !7305
  br i1 %4, label %5, label %7, !dbg !7305

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7306
  br label %7, !dbg !7305

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7305
  call void @llvm.dbg.value(metadata i8* %8, metadata !7302, metadata !DIExpression()), !dbg !7304
  %9 = load i8, i8* %8, align 1, !dbg !7307
  %10 = icmp eq i8 %9, 0, !dbg !7307
  br i1 %10, label %33, label %11, !dbg !7308

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7302, metadata !DIExpression()), !dbg !7304
  %14 = zext i8 %12 to i32, !dbg !7307
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7309
  %16 = icmp eq i8* %15, null, !dbg !7308
  br i1 %16, label %21, label %17, !dbg !7310

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7311
  call void @llvm.dbg.value(metadata i8* %18, metadata !7302, metadata !DIExpression()), !dbg !7304
  %19 = load i8, i8* %18, align 1, !dbg !7307
  %20 = icmp eq i8 %19, 0, !dbg !7307
  br i1 %20, label %33, label %11, !dbg !7308, !llvm.loop !7313

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7303, metadata !DIExpression()), !dbg !7304
  %24 = zext i8 %22 to i32, !dbg !7315
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7316
  %26 = icmp eq i8* %25, null, !dbg !7317
  br i1 %26, label %27, label %31, !dbg !7318

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7319
  call void @llvm.dbg.value(metadata i8* %28, metadata !7303, metadata !DIExpression()), !dbg !7304
  %29 = load i8, i8* %28, align 1, !dbg !7315
  %30 = icmp eq i8 %29, 0, !dbg !7315
  br i1 %30, label %33, label %21, !dbg !7321, !llvm.loop !7322

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7324
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7327
  br label %33, !dbg !7328

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7304
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7304
  store i8* %34, i8** %2, align 4, !dbg !7304
  ret i8* %35, !dbg !7329
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7330 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7332, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i8* %1, metadata !7333, metadata !DIExpression()), !dbg !7334
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7335
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7336
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7337
  ret i8* %0, !dbg !7338
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7339 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %1, metadata !7342, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %2, metadata !7343, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %0, metadata !7344, metadata !DIExpression()), !dbg !7346
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7347
  call void @llvm.dbg.value(metadata i32 %4, metadata !7345, metadata !DIExpression()), !dbg !7346
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7348
  call void @llvm.dbg.value(metadata i8* %5, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %1, metadata !7342, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %2, metadata !7343, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %2, metadata !7343, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7346
  %6 = icmp eq i32 %2, 0, !dbg !7349
  br i1 %6, label %18, label %7, !dbg !7350

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7351
  call void @llvm.dbg.value(metadata i8* %9, metadata !7341, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8* %10, metadata !7342, metadata !DIExpression()), !dbg !7346
  %12 = load i8, i8* %10, align 1, !dbg !7352
  %13 = icmp eq i8 %12, 0, !dbg !7353
  br i1 %13, label %18, label %14, !dbg !7354

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7355
  call void @llvm.dbg.value(metadata i8* %15, metadata !7342, metadata !DIExpression()), !dbg !7346
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7357
  call void @llvm.dbg.value(metadata i8* %16, metadata !7341, metadata !DIExpression()), !dbg !7346
  store i8 %12, i8* %9, align 1, !dbg !7358
  call void @llvm.dbg.value(metadata i32 %11, metadata !7343, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i32 %11, metadata !7343, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7346
  %17 = icmp eq i32 %11, 0, !dbg !7349
  br i1 %17, label %18, label %7, !dbg !7350, !llvm.loop !7359

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7346
  store i8 0, i8* %19, align 1, !dbg !7361
  ret i8* %0, !dbg !7362
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7367, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %1, metadata !7368, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i32 %2, metadata !7369, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %0, metadata !7370, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %1, metadata !7371, metadata !DIExpression()), !dbg !7372
  %4 = icmp eq i32 %2, 0, !dbg !7373
  br i1 %4, label %31, label %5, !dbg !7375

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %0, metadata !7370, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i32 %2, metadata !7369, metadata !DIExpression()), !dbg !7372
  %6 = add i32 %2, -1, !dbg !7376
  call void @llvm.dbg.value(metadata i32 %6, metadata !7369, metadata !DIExpression()), !dbg !7372
  %7 = icmp eq i32 %6, 0, !dbg !7377
  br i1 %7, label %23, label %8, !dbg !7378

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7379
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7379
  br label %11, !dbg !7379

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %14, metadata !7370, metadata !DIExpression()), !dbg !7372
  %15 = load i8, i8* %14, align 1, !dbg !7380
  %16 = load i8, i8* %13, align 1, !dbg !7381
  %17 = icmp eq i8 %15, %16, !dbg !7382
  br i1 %17, label %18, label %23, !dbg !7379

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7383
  call void @llvm.dbg.value(metadata i8* %19, metadata !7370, metadata !DIExpression()), !dbg !7372
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7385
  call void @llvm.dbg.value(metadata i8* %20, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i32 %12, metadata !7369, metadata !DIExpression()), !dbg !7372
  %21 = add i32 %12, -1, !dbg !7376
  call void @llvm.dbg.value(metadata i32 %21, metadata !7369, metadata !DIExpression()), !dbg !7372
  %22 = icmp eq i32 %21, 0, !dbg !7377
  br i1 %22, label %23, label %11, !dbg !7378, !llvm.loop !7386

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7372
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7372
  %26 = load i8, i8* %24, align 1, !dbg !7388
  %27 = zext i8 %26 to i32, !dbg !7388
  %28 = load i8, i8* %25, align 1, !dbg !7389
  %29 = zext i8 %28 to i32, !dbg !7389
  %30 = sub nsw i32 %27, %29, !dbg !7390
  br label %31, !dbg !7391

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7372
  ret i32 %32, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %1, metadata !7398, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %2, metadata !7399, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %0, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %1, metadata !7401, metadata !DIExpression()), !dbg !7402
  %4 = ptrtoint i8* %0 to i32, !dbg !7403
  %5 = ptrtoint i8* %1 to i32, !dbg !7403
  %6 = sub i32 %4, %5, !dbg !7403
  %7 = icmp ult i32 %6, %2, !dbg !7405
  br i1 %7, label %10, label %8, !dbg !7406

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %0, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %2, metadata !7399, metadata !DIExpression()), !dbg !7402
  %9 = icmp eq i32 %2, 0, !dbg !7407
  br i1 %9, label %26, label %17, !dbg !7409

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7399, metadata !DIExpression()), !dbg !7402
  %12 = add i32 %11, -1, !dbg !7410
  call void @llvm.dbg.value(metadata i32 %12, metadata !7399, metadata !DIExpression()), !dbg !7402
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7413
  %14 = load i8, i8* %13, align 1, !dbg !7413
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7414
  store i8 %14, i8* %15, align 1, !dbg !7415
  %16 = icmp eq i32 %12, 0, !dbg !7416
  br i1 %16, label %26, label %10, !dbg !7417, !llvm.loop !7418

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8* %19, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 %20, metadata !7399, metadata !DIExpression()), !dbg !7402
  %21 = load i8, i8* %18, align 1, !dbg !7420
  store i8 %21, i8* %19, align 1, !dbg !7422
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7423
  call void @llvm.dbg.value(metadata i8* %22, metadata !7400, metadata !DIExpression()), !dbg !7402
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7424
  call void @llvm.dbg.value(metadata i8* %23, metadata !7401, metadata !DIExpression()), !dbg !7402
  %24 = add i32 %20, -1, !dbg !7425
  call void @llvm.dbg.value(metadata i32 %24, metadata !7399, metadata !DIExpression()), !dbg !7402
  %25 = icmp eq i32 %24, 0, !dbg !7407
  br i1 %25, label %26, label %17, !dbg !7409, !llvm.loop !7426

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7428
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7435, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8* %1, metadata !7436, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %2, metadata !7437, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8* %0, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8* %1, metadata !7439, metadata !DIExpression()), !dbg !7440
  %4 = icmp eq i32 %2, 0, !dbg !7441
  br i1 %4, label %14, label %5, !dbg !7442

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i8* %7, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %8, metadata !7437, metadata !DIExpression()), !dbg !7440
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7443
  call void @llvm.dbg.value(metadata i8* %9, metadata !7439, metadata !DIExpression()), !dbg !7440
  %10 = load i8, i8* %6, align 1, !dbg !7445
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7446
  call void @llvm.dbg.value(metadata i8* %11, metadata !7438, metadata !DIExpression()), !dbg !7440
  store i8 %10, i8* %7, align 1, !dbg !7447
  %12 = add i32 %8, -1, !dbg !7448
  call void @llvm.dbg.value(metadata i32 %12, metadata !7437, metadata !DIExpression()), !dbg !7440
  %13 = icmp eq i32 %12, 0, !dbg !7441
  br i1 %13, label %14, label %5, !dbg !7442, !llvm.loop !7449

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7451
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7456, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 %1, metadata !7457, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 %2, metadata !7458, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i8* %0, metadata !7459, metadata !DIExpression()), !dbg !7461
  %4 = trunc i32 %1 to i8, !dbg !7462
  call void @llvm.dbg.value(metadata i8 %4, metadata !7460, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i32 %2, metadata !7458, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i8* %0, metadata !7459, metadata !DIExpression()), !dbg !7461
  %5 = icmp eq i32 %2, 0, !dbg !7463
  br i1 %5, label %12, label %6, !dbg !7464

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7458, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata i8* %8, metadata !7459, metadata !DIExpression()), !dbg !7461
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7465
  call void @llvm.dbg.value(metadata i8* %9, metadata !7459, metadata !DIExpression()), !dbg !7461
  store i8 %4, i8* %8, align 1, !dbg !7467
  %10 = add i32 %7, -1, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %10, metadata !7458, metadata !DIExpression()), !dbg !7461
  %11 = icmp eq i32 %10, 0, !dbg !7463
  br i1 %11, label %12, label %6, !dbg !7464, !llvm.loop !7469

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7471
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7476, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.value(metadata i32 %1, metadata !7477, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.value(metadata i32 %2, metadata !7478, metadata !DIExpression()), !dbg !7482
  %4 = icmp eq i32 %2, 0, !dbg !7483
  br i1 %4, label %17, label %5, !dbg !7484

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7485

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7486
  call void @llvm.dbg.value(metadata i8* %9, metadata !7479, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %8, metadata !7478, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.value(metadata i8* %9, metadata !7479, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7486
  %10 = load i8, i8* %9, align 1, !dbg !7487
  %11 = icmp eq i8 %10, %6, !dbg !7490
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7491
  call void @llvm.dbg.value(metadata i8* %12, metadata !7479, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %13, metadata !7478, metadata !DIExpression()), !dbg !7482
  br i1 %15, label %16, label %7, !dbg !7491, !llvm.loop !7492

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7494

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7482
  ret i8* %19, !dbg !7495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7496 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7498, metadata !DIExpression()), !dbg !7499
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7500
  ret void, !dbg !7501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7504, metadata !DIExpression()), !dbg !7505
  ret i32 -1, !dbg !7506
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7511, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata i32* %1, metadata !7512, metadata !DIExpression()), !dbg !7513
  %3 = ptrtoint i32* %1 to i32, !dbg !7514
  %4 = and i32 %3, -2, !dbg !7514
  %5 = icmp eq i32 %4, 2, !dbg !7514
  br i1 %5, label %6, label %9, !dbg !7514

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7515
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7515
  br label %9, !dbg !7516

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7516
  ret i32 %10, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i32* %1, metadata !7521, metadata !DIExpression()), !dbg !7522
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7523
  ret i32 %3, !dbg !7524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7528, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata i32* %1, metadata !7529, metadata !DIExpression()), !dbg !7530
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7531, !srcloc !7533
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7534
  ret i32 %3, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7541, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32* %1, metadata !7542, metadata !DIExpression()), !dbg !7545
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %3, metadata !7543, metadata !DIExpression()), !dbg !7545
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %4, metadata !7544, metadata !DIExpression()), !dbg !7545
  %5 = icmp ne i32 %3, %4, !dbg !7548
  %6 = sext i1 %5 to i32, !dbg !7549
  ret i32 %6, !dbg !7550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7555, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 %1, metadata !7556, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 %2, metadata !7557, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32* %3, metadata !7558, metadata !DIExpression()), !dbg !7559
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7560
  ret i32 %5, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7564, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32 %1, metadata !7565, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32 %2, metadata !7566, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32* %3, metadata !7567, metadata !DIExpression()), !dbg !7568
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7569, !srcloc !7571
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7572
  ret i32 %5, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7576, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %1, metadata !7577, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %2, metadata !7578, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32* %3, metadata !7579, metadata !DIExpression()), !dbg !7584
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7585
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7587
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7587
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7587
  br i1 %11, label %33, label %12, !dbg !7587

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7584
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7584
  call void @llvm.dbg.value(metadata i8* %14, metadata !7582, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %13, metadata !7580, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %1, metadata !7581, metadata !DIExpression()), !dbg !7584
  br label %15, !dbg !7588

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7590
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7584
  call void @llvm.dbg.value(metadata i8* %17, metadata !7582, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %16, metadata !7581, metadata !DIExpression()), !dbg !7584
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7591
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7594
  call void @llvm.dbg.value(metadata i8* %19, metadata !7582, metadata !DIExpression()), !dbg !7584
  %20 = load i8, i8* %17, align 1, !dbg !7595
  %21 = zext i8 %20 to i32, !dbg !7596
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7591
  %23 = icmp eq i32 %22, -1, !dbg !7597
  br i1 %23, label %30, label %24, !dbg !7598

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %25, metadata !7581, metadata !DIExpression()), !dbg !7584
  %26 = icmp eq i32 %25, 0, !dbg !7600
  br i1 %26, label %27, label %15, !dbg !7601, !llvm.loop !7602

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7604
  call void @llvm.dbg.value(metadata i32 %28, metadata !7580, metadata !DIExpression()), !dbg !7584
  %29 = icmp eq i32 %28, 0, !dbg !7605
  br i1 %29, label %30, label %12, !dbg !7606, !llvm.loop !7607

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7584
  call void @llvm.dbg.value(metadata i32 %31, metadata !7580, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.label(metadata !7583), !dbg !7610
  %32 = sub i32 %2, %31, !dbg !7611
  br label %33, !dbg !7612

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7584
  ret i32 %34, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7614 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7618, metadata !DIExpression()), !dbg !7619
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7620
  %3 = icmp eq i32 %2, -1, !dbg !7622
  br i1 %3, label %8, label %4, !dbg !7623

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7624
  %6 = icmp eq i32 %5, -1, !dbg !7625
  %7 = sext i1 %6 to i32, !dbg !7624
  br label %8, !dbg !7626

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7619
  ret i32 %9, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7630, metadata !DIExpression()), !dbg !7631
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7638, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %1, metadata !7639, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7640, metadata !DIExpression()), !dbg !7644
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7645
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7645
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7645
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7641, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 %0, metadata !7643, metadata !DIExpression()), !dbg !7644
  %7 = icmp slt i32 %0, %1, !dbg !7646
  br i1 %7, label %8, label %22, !dbg !7649

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7643, metadata !DIExpression()), !dbg !7644
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7650
  %11 = icmp eq i32 %10, 0, !dbg !7650
  br i1 %11, label %19, label %12, !dbg !7653

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7654
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7656
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7656
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7658
  br i1 %15, label %19, label %16, !dbg !7659

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7660
  %18 = load i8*, i8** %17, align 4, !dbg !7660
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7661
  br label %19, !dbg !7662

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %20, metadata !7643, metadata !DIExpression()), !dbg !7644
  %21 = icmp eq i32 %20, %1, !dbg !7646
  br i1 %21, label %22, label %8, !dbg !7649, !llvm.loop !7664

22:                                               ; preds = %19, %3
  ret void, !dbg !7666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7669, metadata !DIExpression()), !dbg !7670
  %2 = shl nuw i32 1, %0, !dbg !7671
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7674
  ret i32 %3, !dbg !7675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  %2 = shl nuw i32 1, %0, !dbg !7682
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7690, metadata !DIExpression()), !dbg !7691
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7692
  ret void, !dbg !7693
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7696, metadata !DIExpression()), !dbg !7697
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7698
  %3 = and i32 %2, %0, !dbg !7698
  %4 = icmp eq i32 %3, %0, !dbg !7699
  %5 = zext i1 %4 to i32, !dbg !7699
  ret i32 %5, !dbg !7700
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7703, metadata !DIExpression()), !dbg !7704
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7705
  ret void, !dbg !7706
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7709, metadata !DIExpression()), !dbg !7710
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7711
  ret void, !dbg !7712
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7715, metadata !DIExpression()), !dbg !7716
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7717
  ret void, !dbg !7718
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7721, metadata !DIExpression()), !dbg !7722
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7723
  ret void, !dbg !7724
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7727, metadata !DIExpression()), !dbg !7728
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7729
  ret void, !dbg !7730
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7733, metadata !DIExpression()), !dbg !7734
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7735
  ret void, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7739, metadata !DIExpression()), !dbg !7740
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7745, metadata !DIExpression()), !dbg !7746
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7747
  ret void, !dbg !7748
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7751, metadata !DIExpression()), !dbg !7752
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7753
  ret void, !dbg !7754
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7757, metadata !DIExpression()), !dbg !7758
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7759
  ret void, !dbg !7760
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7763, metadata !DIExpression()), !dbg !7764
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7765
  ret i32 0, !dbg !7766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !746 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !750, metadata !DIExpression()), !dbg !7767
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7768
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7770
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7772
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7774
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7776
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7778
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7780
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7782
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7784
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7786
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7788
  ret void, !dbg !7790
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7793, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i32 0, metadata !7794, metadata !DIExpression()), !dbg !7795
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7796
  %3 = load i32, i32* %2, align 4, !dbg !7796
  call void @llvm.dbg.value(metadata i32 %3, metadata !7794, metadata !DIExpression()), !dbg !7795
  %4 = shl nuw i32 1, %0, !dbg !7797
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7798
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7799
  ret void, !dbg !7800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7803, metadata !DIExpression()), !dbg !7804
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7805
  %3 = or i32 %2, %0, !dbg !7805
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7805
  ret void, !dbg !7806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7809, metadata !DIExpression()), !dbg !7810
  %2 = icmp slt i32 %0, 32, !dbg !7811
  br i1 %2, label %3, label %5, !dbg !7813

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7814
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7816
  br label %5, !dbg !7817

5:                                                ; preds = %1, %3
  ret void, !dbg !7818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %2 = xor i32 %0, -1, !dbg !7823
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7823
  %4 = and i32 %3, %2, !dbg !7823
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7823
  ret void, !dbg !7824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7829, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %1, metadata !7830, metadata !DIExpression()), !dbg !7831
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7832

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7833
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7835
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7836
  br label %11, !dbg !7837

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7838
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7839
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7840
  br label %11, !dbg !7841

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7842
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7843
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7844
  br label %11, !dbg !7845

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7846
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7847
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7848
  br label %11, !dbg !7849

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7853, metadata !DIExpression()), !dbg !7854
  %2 = xor i32 %0, -1, !dbg !7855
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7855
  %4 = and i32 %3, %2, !dbg !7855
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7855
  ret void, !dbg !7856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7859, metadata !DIExpression()), !dbg !7860
  %2 = xor i32 %0, -1, !dbg !7861
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7861
  %4 = and i32 %3, %2, !dbg !7861
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7861
  ret void, !dbg !7862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7865, metadata !DIExpression()), !dbg !7866
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7867
  %3 = or i32 %2, %0, !dbg !7867
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7867
  ret void, !dbg !7868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7871, metadata !DIExpression()), !dbg !7872
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7873
  %3 = or i32 %2, %0, !dbg !7873
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7873
  ret void, !dbg !7874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7879, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %2, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7884, metadata !DIExpression()), !dbg !7885
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7886
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7886
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7888
  br i1 %6, label %7, label %9, !dbg !7889

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7890
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7891
  store i8* %2, i8** %8, align 4, !dbg !7892
  br label %9, !dbg !7893

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7885
  ret i32 %10, !dbg !7894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7899, metadata !DIExpression()), !dbg !7900
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7901
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7902
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7903
  store i8* null, i8** %3, align 4, !dbg !7904
  ret void, !dbg !7905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7906 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7908, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %1, metadata !7909, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %1, metadata !7910, metadata !DIExpression()), !dbg !7913
  %3 = bitcast i8* %1 to i32*, !dbg !7914
  %4 = load i32, i32* %3, align 4, !dbg !7914
  %5 = add i32 %4, -169, !dbg !7914
  %6 = icmp ult i32 %5, -121, !dbg !7914
  br i1 %6, label %15, label %7, !dbg !7916

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7917
  %9 = inttoptr i32 %8 to i32*, !dbg !7918
  call void @llvm.dbg.value(metadata i32* %9, metadata !7911, metadata !DIExpression()), !dbg !7913
  %10 = load volatile i32, i32* %9, align 4, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %10, metadata !7912, metadata !DIExpression()), !dbg !7913
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7920
  %12 = bitcast i8* %11 to i32*, !dbg !7920
  %13 = load i32, i32* %12, align 4, !dbg !7920
  %14 = or i32 %13, %10, !dbg !7921
  call void @llvm.dbg.value(metadata i32 %14, metadata !7912, metadata !DIExpression()), !dbg !7913
  store volatile i32 %14, i32* %9, align 4, !dbg !7922
  br label %15, !dbg !7923

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7913
  ret i32 %16, !dbg !7924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7925 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7927, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %1, metadata !7928, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.value(metadata i8* %1, metadata !7929, metadata !DIExpression()), !dbg !7932
  %3 = bitcast i8* %1 to i32*, !dbg !7933
  %4 = load i32, i32* %3, align 4, !dbg !7933
  %5 = add i32 %4, -169, !dbg !7933
  %6 = icmp ult i32 %5, -121, !dbg !7933
  br i1 %6, label %16, label %7, !dbg !7935

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7936
  %9 = inttoptr i32 %8 to i32*, !dbg !7937
  call void @llvm.dbg.value(metadata i32* %9, metadata !7930, metadata !DIExpression()), !dbg !7932
  %10 = load volatile i32, i32* %9, align 4, !dbg !7938
  call void @llvm.dbg.value(metadata i32 %10, metadata !7931, metadata !DIExpression()), !dbg !7932
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7939
  %12 = bitcast i8* %11 to i32*, !dbg !7939
  %13 = load i32, i32* %12, align 4, !dbg !7939
  %14 = xor i32 %13, -1, !dbg !7940
  %15 = and i32 %10, %14, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %15, metadata !7931, metadata !DIExpression()), !dbg !7932
  store volatile i32 %15, i32* %9, align 4, !dbg !7942
  br label %16, !dbg !7943

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7932
  ret i32 %17, !dbg !7944
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7947, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i8* %1, metadata !7948, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32* %2, metadata !7949, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i8* %1, metadata !7950, metadata !DIExpression()), !dbg !7955
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7956
  call void @llvm.dbg.value(metadata i32 %4, metadata !7951, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 undef, metadata !7952, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 undef, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata i32 %4, metadata !7954, metadata !DIExpression()), !dbg !7955
  %5 = bitcast i8* %1 to i32*, !dbg !7957
  %6 = load i32, i32* %5, align 4, !dbg !7957
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !7958

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %8, metadata !7952, metadata !DIExpression()), !dbg !7955
  br label %19, !dbg !7960

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !7962
  call void @llvm.dbg.value(metadata i32 %10, metadata !7953, metadata !DIExpression()), !dbg !7955
  br label %19, !dbg !7963

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7964
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !7965
  br label %19, !dbg !7966

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7967
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #27, !dbg !7968
  br label %19, !dbg !7969

17:                                               ; preds = %3
  br label %19, !dbg !7970

18:                                               ; preds = %3
  br label %19, !dbg !7971

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !7972
  br label %21, !dbg !7973

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !7955
  ret i32 %22, !dbg !7973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7976, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %2, metadata !7978, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %1, metadata !7979, metadata !DIExpression()), !dbg !7984
  %4 = bitcast i8* %1 to i32*, !dbg !7985
  %5 = load i32, i32* %4, align 4, !dbg !7985
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %6, metadata !7983, metadata !DIExpression()), !dbg !7984
  %7 = icmp slt i32 %6, 0, !dbg !7987
  br i1 %7, label %22, label %8, !dbg !7989

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7979, metadata !DIExpression()), !dbg !7984
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7990
  %10 = bitcast i8* %9 to i32*, !dbg !7990
  %11 = load i32, i32* %10, align 4, !dbg !7990
  %12 = lshr i32 %11, 16, !dbg !7990
  %13 = and i32 %12, 7, !dbg !7990
  %14 = lshr i32 %11, 8, !dbg !7991
  %15 = and i32 %14, 31, !dbg !7991
  %16 = shl i32 %13, %15, !dbg !7992
  call void @llvm.dbg.value(metadata i32 %16, metadata !7982, metadata !DIExpression()), !dbg !7984
  %17 = and i32 %11, 255, !dbg !7993
  %18 = or i32 %17, 1073887232, !dbg !7994
  %19 = inttoptr i32 %18 to i32*, !dbg !7995
  call void @llvm.dbg.value(metadata i32* %19, metadata !7980, metadata !DIExpression()), !dbg !7984
  %20 = load volatile i32, i32* %19, align 4, !dbg !7996
  call void @llvm.dbg.value(metadata i32 %20, metadata !7981, metadata !DIExpression()), !dbg !7984
  %21 = or i32 %16, %20, !dbg !7997
  call void @llvm.dbg.value(metadata i32 %21, metadata !7981, metadata !DIExpression()), !dbg !7984
  store volatile i32 %21, i32* %19, align 4, !dbg !7998
  br label %22, !dbg !7999

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7984
  ret i32 %23, !dbg !8000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8005, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32 0, metadata !8006, metadata !DIExpression()), !dbg !8007
  %2 = add i32 %0, -1, !dbg !8008
  %3 = icmp ult i32 %2, 6, !dbg !8008
  br i1 %3, label %4, label %7, !dbg !8008

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8008
  %6 = load i32, i32* %5, align 4, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %6, metadata !8006, metadata !DIExpression()), !dbg !8007
  br label %7, !dbg !8009

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8007
  ret i32 %8, !dbg !8010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %1, metadata !8016, metadata !DIExpression()), !dbg !8017
  %3 = udiv i32 %0, %1, !dbg !8018
  ret i32 %3, !dbg !8019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8024, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 8, metadata !8025, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 84, metadata !8026, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata i32 %1, metadata !8027, metadata !DIExpression()), !dbg !8028
  %3 = mul i32 %0, 84, !dbg !8029
  %4 = shl nsw i32 %1, 3, !dbg !8030
  %5 = udiv i32 %3, %4, !dbg !8031
  ret i32 %5, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8033 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8035, metadata !DIExpression()), !dbg !8038
  tail call void @config_enable_default_clocks() #26, !dbg !8039
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8040
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !8040
  %4 = lshr i32 %3, 4, !dbg !8040
  %5 = and i32 %4, 15, !dbg !8040
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8040
  %7 = load i8, i8* %6, align 1, !dbg !8040
  %8 = zext i8 %7 to i32, !dbg !8040
  %9 = lshr i32 %2, %8, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %9, metadata !8036, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8037, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8038
  %10 = icmp ult i32 %9, 84000000, !dbg !8041
  br i1 %10, label %11, label %13, !dbg !8043

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8044
  br label %13, !dbg !8046

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !8047
  tail call fastcc void @set_up_plls() #27, !dbg !8048
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8049
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !8052
  br label %14, !dbg !8053

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8054
  %16 = icmp eq i32 %15, 8, !dbg !8055
  br i1 %16, label %17, label %14, !dbg !8053, !llvm.loop !8056

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8058
  br i1 %18, label %19, label %21, !dbg !8060

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8061
  br label %21, !dbg !8063

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8064
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !8065
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !8066
  ret i32 0, !dbg !8067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8070
  %2 = and i32 %1, 240, !dbg !8070
  ret i32 %2, !dbg !8071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8072 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !8073
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !8078
  br label %1, !dbg !8079

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !8080
  %3 = icmp eq i32 %2, 1, !dbg !8081
  br i1 %3, label %4, label %1, !dbg !8079, !llvm.loop !8082

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !8084
  br label %5, !dbg !8087

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !8088
  %7 = icmp eq i32 %6, 1, !dbg !8089
  br i1 %7, label %8, label %5, !dbg !8087, !llvm.loop !8090

8:                                                ; preds = %5
  ret void, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8093 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8094
  %2 = icmp eq i32 %1, 8, !dbg !8096
  br i1 %2, label %3, label %4, !dbg !8097

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8098
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8100
  br label %4, !dbg !8101

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8102
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8103
  %6 = and i32 %5, -196609, !dbg !8103
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8103
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8104
  %8 = and i32 %7, -251658241, !dbg !8104
  %9 = or i32 %8, 134217728, !dbg !8104
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8104
  tail call void @config_pll_sysclock() #26, !dbg !8105
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8106
  br label %10, !dbg !8107

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8108
  %12 = icmp eq i32 %11, 1, !dbg !8109
  br i1 %12, label %13, label %10, !dbg !8107, !llvm.loop !8110

13:                                               ; preds = %10
  ret void, !dbg !8112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8113 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8115, metadata !DIExpression()), !dbg !8116
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8117
  %2 = and i32 %1, -241, !dbg !8117
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8117
  ret void, !dbg !8118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8121, metadata !DIExpression()), !dbg !8122
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8123
  %3 = and i32 %2, -4, !dbg !8123
  %4 = or i32 %3, %0, !dbg !8123
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8126
  %2 = and i32 %1, 12, !dbg !8126
  ret i32 %2, !dbg !8127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8128 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8130, metadata !DIExpression()), !dbg !8131
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8132
  %2 = and i32 %1, -7169, !dbg !8132
  %3 = or i32 %2, 4096, !dbg !8132
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8132
  ret void, !dbg !8133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8134 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8136, metadata !DIExpression()), !dbg !8137
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8138
  %2 = and i32 %1, -57345, !dbg !8138
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8138
  ret void, !dbg !8139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8140 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8141
  %2 = icmp eq i32 %1, 1, !dbg !8143
  br i1 %2, label %7, label %3, !dbg !8144

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8145
  br label %4, !dbg !8147

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8148
  %6 = icmp eq i32 %5, 1, !dbg !8149
  br i1 %6, label %7, label %4, !dbg !8147, !llvm.loop !8150

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8152
  br label %8, !dbg !8153

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8154
  %10 = icmp eq i32 %9, 0, !dbg !8155
  br i1 %10, label %11, label %8, !dbg !8153, !llvm.loop !8156

11:                                               ; preds = %8
  ret void, !dbg !8158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8159 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8160
  %2 = and i32 %1, -16777217, !dbg !8160
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8160
  ret void, !dbg !8161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8162 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8163
  %2 = or i32 %1, 16777216, !dbg !8163
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8165 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8166
  %2 = lshr i32 %1, 25, !dbg !8167
  %3 = and i32 %2, 1, !dbg !8167
  ret i32 %3, !dbg !8168
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8169 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8170
  %2 = lshr i32 %1, 1, !dbg !8171
  %3 = and i32 %2, 1, !dbg !8171
  ret i32 %3, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8173 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8174
  %2 = or i32 %1, 1, !dbg !8174
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8174
  ret void, !dbg !8175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8176 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8177
  %2 = and i32 %1, -262145, !dbg !8177
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8180
  %2 = or i32 %1, 65536, !dbg !8180
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8180
  ret void, !dbg !8181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8182 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8183
  %2 = lshr i32 %1, 17, !dbg !8184
  %3 = and i32 %2, 1, !dbg !8184
  ret i32 %3, !dbg !8185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8186 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8187
  %2 = or i32 %1, 1, !dbg !8187
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8187
  ret void, !dbg !8188
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8189 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8190
  %2 = lshr i32 %1, 1, !dbg !8191
  %3 = and i32 %2, 1, !dbg !8191
  ret i32 %3, !dbg !8192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8193 {
  ret i32 16000000, !dbg !8195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8199 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8200
  ret void, !dbg !8201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8202 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8206, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 8, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 84, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 0, metadata !8209, metadata !DIExpression()), !dbg !8210
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8211
  %2 = and i32 %1, -4227072, !dbg !8211
  %3 = or i32 %2, 4199688, !dbg !8211
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8211
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8212
  %5 = and i32 %4, -196609, !dbg !8212
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8212
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8213
  %7 = and i32 %6, -1879048193, !dbg !8213
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8215 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8216
  ret void, !dbg !8217
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8218 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8221, metadata !DIExpression()), !dbg !8223
  %2 = bitcast i32* %1 to i8*, !dbg !8224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8224
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8222, metadata !DIExpression()), !dbg !8225
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8226
  %4 = or i32 %3, 268435456, !dbg !8226
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8226
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8227
  %6 = and i32 %5, 268435456, !dbg !8227
  store volatile i32 %6, i32* %1, align 4, !dbg !8228
  %7 = load volatile i32, i32* %1, align 4, !dbg !8229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8230
  ret void, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8233, metadata !DIExpression()), !dbg !8234
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8235
  br i1 %2, label %3, label %4, !dbg !8237

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8238
  br label %4, !dbg !8239

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8234
  ret i32 %5, !dbg !8240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8241 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8246, metadata !DIExpression()), !dbg !8247
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8248, !srcloc !8250
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8251
  ret i1 %1, !dbg !8252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8253 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8254
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8259, metadata !DIExpression()), !dbg !8260
  %2 = icmp eq i32 %0, 10, !dbg !8261
  br i1 %2, label %3, label %4, !dbg !8263

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8264
  br label %4, !dbg !8266

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8267
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8268
  ret i32 %0, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8273, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i8 %0, metadata !8274, metadata !DIExpression()), !dbg !8275
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8276, !srcloc !8278
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8281 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8283, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i8 %0, metadata !8284, metadata !DIExpression()), !dbg !8286
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8287
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8285, metadata !DIExpression()), !dbg !8286
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8288
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8288
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #26, !dbg !8289
  ret void, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8291 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8293, metadata !DIExpression()), !dbg !8294
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8295
  ret i1 %1, !dbg !8296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8297 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8301, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8303, metadata !DIExpression()), !dbg !8304
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8305
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8306
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8307
  tail call fastcc void @console_input_init() #27, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8310 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8313
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8314
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8315
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8316
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8317
  %3 = icmp eq i32 %2, 0, !dbg !8318
  br i1 %3, label %8, label %4, !dbg !8318

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8312, metadata !DIExpression(DW_OP_deref)), !dbg !8319
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8320
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8317
  %7 = icmp eq i32 %6, 0, !dbg !8318
  br i1 %7, label %8, label %4, !dbg !8318, !llvm.loop !8322

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8324
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8325
  ret void, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8326 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8328, metadata !DIExpression()), !dbg !8329
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8330, !srcloc !8332
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8333
  ret void, !dbg !8334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8335 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8337, metadata !DIExpression()), !dbg !8338
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8339, !srcloc !8341
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8342
  ret void, !dbg !8343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8344 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8348, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8349, metadata !DIExpression()), !dbg !8350
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8351
  ret void, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8353 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8355, metadata !DIExpression()), !dbg !8357
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8358
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8356, metadata !DIExpression()), !dbg !8357
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8359
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8359
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8361
  br i1 %4, label %7, label %5, !dbg !8362

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8363
  br label %7, !dbg !8364

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8357
  ret i32 %8, !dbg !8365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8366 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8368, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %0, metadata !8369, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 1, metadata !8370, metadata !DIExpression()), !dbg !8372
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8373
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8371, metadata !DIExpression()), !dbg !8372
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8374
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8374
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8376
  br i1 %5, label %8, label %6, !dbg !8377

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8* noundef %0, i32 noundef 1) #26, !dbg !8378
  br label %8, !dbg !8379

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8372
  ret i32 %9, !dbg !8380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8383, metadata !DIExpression()), !dbg !8384
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8385, !srcloc !8387
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8390 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8392, metadata !DIExpression()), !dbg !8394
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8395
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8393, metadata !DIExpression()), !dbg !8394
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8396
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8396
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8398
  br i1 %4, label %6, label %5, !dbg !8399

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8400
  br label %6, !dbg !8402

6:                                                ; preds = %5, %0
  ret void, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1109 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1111, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.value(metadata i8* %1, metadata !1112, metadata !DIExpression()), !dbg !8404
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8405
  %5 = icmp eq i32 %4, 0, !dbg !8405
  br i1 %5, label %89, label %6, !dbg !8406

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8407
  %8 = icmp eq i32 %7, 0, !dbg !8406
  br i1 %8, label %89, label %9, !dbg !8408

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8409
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8410
  %11 = icmp eq i32 %10, 0, !dbg !8410
  br i1 %11, label %86, label %12, !dbg !8412, !llvm.loop !8413

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1113, metadata !DIExpression(DW_OP_deref)), !dbg !8415
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %13, metadata !1115, metadata !DIExpression()), !dbg !8415
  %14 = icmp slt i32 %13, 0, !dbg !8417
  br i1 %14, label %85, label %15, !dbg !8419

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8420
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8420
  br i1 %17, label %18, label %23, !dbg !8421

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8422
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8422
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8422
  call void @llvm.dbg.value(metadata i8* %21, metadata !1116, metadata !DIExpression()), !dbg !8423
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8424
  %22 = icmp eq i8* %21, null, !dbg !8425
  br i1 %22, label %85, label %23, !dbg !8427

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8428
  br i1 %24, label %25, label %29, !dbg !8430

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8431
  call void @llvm.dbg.value(metadata i8 %26, metadata !1113, metadata !DIExpression()), !dbg !8415
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8433
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8433
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8434
  br label %86, !dbg !8435, !llvm.loop !8413

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8436
  %31 = load i8, i8* %3, align 1, !dbg !8415
  call void @llvm.dbg.value(metadata i8 %31, metadata !1113, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i8 %31, metadata !1113, metadata !DIExpression()), !dbg !8415
  br i1 %30, label %32, label %35, !dbg !8438

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8439
  br i1 %33, label %34, label %86, !dbg !8442, !llvm.loop !8413

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8443
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8445
  br label %86, !dbg !8446, !llvm.loop !8413

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8447
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8449
  %38 = icmp eq i32 %37, 0, !dbg !8449
  br i1 %38, label %39, label %74, !dbg !8450

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1113, metadata !DIExpression()), !dbg !8415
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8451, !llvm.loop !8413

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8453
  %42 = icmp eq i8 %41, 0, !dbg !8456
  br i1 %42, label %86, label %43, !dbg !8457, !llvm.loop !8413

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8458
  %45 = add i8 %41, -1, !dbg !8460
  store i8 %45, i8* @cur, align 1, !dbg !8460
  %46 = zext i8 %45 to i32, !dbg !8458
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8458
  %48 = load i8, i8* @end, align 1, !dbg !8461
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8462
  br label %86, !dbg !8463, !llvm.loop !8413

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8464
  br label %86, !dbg !8465, !llvm.loop !8413

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8466
  %52 = load i8, i8* @cur, align 1, !dbg !8467
  %53 = zext i8 %52 to i32, !dbg !8467
  %54 = load i8, i8* @end, align 1, !dbg !8468
  %55 = zext i8 %54 to i32, !dbg !8468
  %56 = add nuw nsw i32 %55, %53, !dbg !8469
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8466
  store i8 0, i8* %57, align 1, !dbg !8470
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8471
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8472
  store i8 0, i8* @cur, align 1, !dbg !8473
  store i8 0, i8* @end, align 1, !dbg !8474
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8475
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8475
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8475
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8475
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8477
  br label %86, !dbg !8478, !llvm.loop !8413

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8479
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8479
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8481
  br i1 %66, label %86, label %67, !dbg !8481, !llvm.loop !8413

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8482
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8482
  %70 = load i8, i8* @cur, align 1, !dbg !8484
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8485
  %72 = load i8, i8* @cur, align 1, !dbg !8486
  %73 = add i8 %72, %71, !dbg !8486
  store i8 %73, i8* @cur, align 1, !dbg !8486
  br label %86, !dbg !8487, !llvm.loop !8413

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8488
  %76 = zext i8 %75 to i32, !dbg !8488
  %77 = load i8, i8* @end, align 1, !dbg !8490
  %78 = zext i8 %77 to i32, !dbg !8490
  %79 = add nuw nsw i32 %78, %76, !dbg !8491
  %80 = icmp ult i32 %79, 127, !dbg !8492
  br i1 %80, label %81, label %86, !dbg !8493

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8494
  %83 = add i8 %75, 1, !dbg !8496
  store i8 %83, i8* @cur, align 1, !dbg !8496
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8494
  call void @llvm.dbg.value(metadata i8 %31, metadata !1113, metadata !DIExpression()), !dbg !8415
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8497
  br label %86, !dbg !8498

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8414
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8414
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8405
  %88 = icmp eq i32 %87, 0, !dbg !8405
  br i1 %88, label %89, label %6, !dbg !8406

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8502, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8503, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i8* null, metadata !8504, metadata !DIExpression()), !dbg !8506
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8507
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8505, metadata !DIExpression()), !dbg !8506
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8508
  br i1 %2, label %8, label %3, !dbg !8510

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8511
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8511
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8512
  br i1 %6, label %8, label %7, !dbg !8513

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_48, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8514
  br label %8, !dbg !8516

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8520, metadata !DIExpression()), !dbg !8521
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8522, !srcloc !8524
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8525
  ret i32 %1, !dbg !8526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8529, metadata !DIExpression()), !dbg !8530
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8531, !srcloc !8533
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8534
  ret i32 %1, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8536 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8540, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i8* %0, metadata !8541, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i32 1, metadata !8542, metadata !DIExpression()), !dbg !8544
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8545
  call void @llvm.dbg.value(metadata i32 %2, metadata !8543, metadata !DIExpression()), !dbg !8544
  %3 = icmp slt i32 %2, 0, !dbg !8546
  br i1 %3, label %4, label %5, !dbg !8548

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8549
  br label %5, !dbg !8551

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8544
  ret i32 %6, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8553 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8562, metadata !DIExpression()), !dbg !8564
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8565, !srcloc !8567
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8568
  ret i8* %2, !dbg !8569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8570 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8576, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i32 %0, metadata !8577, metadata !DIExpression()), !dbg !8580
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %2, metadata !8578, metadata !DIExpression()), !dbg !8580
  %3 = and i32 %0, 31, !dbg !8582
  %4 = shl nuw i32 1, %3, !dbg !8583
  %5 = and i32 %2, %4, !dbg !8583
  %6 = icmp ne i32 %5, 0, !dbg !8583
  ret i1 %6, !dbg !8584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8585 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i8* %1, metadata !8590, metadata !DIExpression()), !dbg !8592
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8593
  br i1 %3, label %4, label %11, !dbg !8595

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8596
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8599
  %7 = icmp eq i32 %6, 0, !dbg !8599
  br i1 %7, label %8, label %9, !dbg !8600

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8601
  br label %34, !dbg !8603

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8604
  %10 = add nsw i32 %5, -48, !dbg !8605
  store i32 %10, i32* @ansi_val, align 4, !dbg !8606
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8607
  br label %81, !dbg !8608

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8609
  br i1 %12, label %13, label %34, !dbg !8611

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8612
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8615
  %16 = icmp eq i32 %15, 0, !dbg !8615
  br i1 %16, label %29, label %17, !dbg !8616

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8617
  br i1 %18, label %19, label %24, !dbg !8620

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8621
  %21 = mul i32 %20, 10, !dbg !8621
  %22 = add nsw i32 %14, -48, !dbg !8623
  %23 = add i32 %22, %21, !dbg !8624
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8624
  br label %81, !dbg !8625

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8626
  %26 = mul i32 %25, 10, !dbg !8626
  %27 = add nsw i32 %14, -48, !dbg !8628
  %28 = add i32 %27, %26, !dbg !8629
  store i32 %28, i32* @ansi_val, align 4, !dbg !8629
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8630
  br i1 %30, label %31, label %33, !dbg !8632

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8633
  br i1 %32, label %33, label %81, !dbg !8634

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8635
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8636
  br label %34, !dbg !8637

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8591), !dbg !8638
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8639

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8640
  %37 = load i8, i8* @cur, align 1, !dbg !8643
  %38 = zext i8 %37 to i32, !dbg !8643
  %39 = icmp ugt i32 %36, %38, !dbg !8644
  br i1 %39, label %80, label %40, !dbg !8645

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8646
  %42 = trunc i32 %36 to i8, !dbg !8646
  %43 = add i8 %41, %42, !dbg !8646
  store i8 %43, i8* @end, align 1, !dbg !8646
  %44 = sub i8 %37, %42, !dbg !8647
  store i8 %44, i8* @cur, align 1, !dbg !8647
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8648
  br label %80, !dbg !8649

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8650
  %47 = load i8, i8* @end, align 1, !dbg !8652
  %48 = zext i8 %47 to i32, !dbg !8652
  %49 = icmp ugt i32 %46, %48, !dbg !8653
  br i1 %49, label %80, label %50, !dbg !8654

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8655
  %52 = sub i8 %47, %51, !dbg !8655
  store i8 %52, i8* @end, align 1, !dbg !8655
  %53 = load i8, i8* @cur, align 1, !dbg !8656
  %54 = add i8 %53, %51, !dbg !8656
  store i8 %54, i8* @cur, align 1, !dbg !8656
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8657
  br label %80, !dbg !8658

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8659
  %57 = icmp eq i8 %56, 0, !dbg !8659
  br i1 %57, label %80, label %58, !dbg !8661

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8662
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8663
  %60 = load i8, i8* @cur, align 1, !dbg !8664
  %61 = load i8, i8* @end, align 1, !dbg !8665
  %62 = add i8 %61, %60, !dbg !8665
  store i8 %62, i8* @end, align 1, !dbg !8665
  store i8 0, i8* @cur, align 1, !dbg !8666
  br label %80, !dbg !8667

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8668
  %65 = icmp eq i8 %64, 0, !dbg !8668
  br i1 %65, label %80, label %66, !dbg !8670

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8671
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8672
  %68 = load i8, i8* @end, align 1, !dbg !8673
  %69 = load i8, i8* @cur, align 1, !dbg !8674
  %70 = add i8 %69, %68, !dbg !8674
  store i8 %70, i8* @cur, align 1, !dbg !8674
  store i8 0, i8* @end, align 1, !dbg !8675
  br label %80, !dbg !8676

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8677
  %73 = icmp eq i8 %72, 0, !dbg !8677
  br i1 %73, label %80, label %74, !dbg !8679

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8680
  %75 = load i8, i8* @cur, align 1, !dbg !8681
  %76 = zext i8 %75 to i32, !dbg !8682
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8682
  %78 = load i8, i8* @end, align 1, !dbg !8683
  %79 = add i8 %78, -1, !dbg !8683
  store i8 %79, i8* @end, align 1, !dbg !8683
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8684
  br label %80, !dbg !8685

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8686
  br label %81, !dbg !8687

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8688 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8693, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i32 %0, metadata !8694, metadata !DIExpression()), !dbg !8697
  %2 = and i32 %0, 31, !dbg !8698
  %3 = shl nuw i32 1, %2, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %3, metadata !8695, metadata !DIExpression()), !dbg !8697
  %4 = xor i32 %3, -1, !dbg !8699
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %5, metadata !8696, metadata !DIExpression()), !dbg !8697
  %6 = and i32 %5, %3, !dbg !8701
  %7 = icmp ne i32 %6, 0, !dbg !8702
  ret i1 %7, !dbg !8703
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8704 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8708, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.value(metadata i32 %0, metadata !8709, metadata !DIExpression()), !dbg !8711
  %2 = and i32 %0, 31, !dbg !8712
  %3 = shl nuw i32 1, %2, !dbg !8712
  call void @llvm.dbg.value(metadata i32 %3, metadata !8710, metadata !DIExpression()), !dbg !8711
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8713
  ret void, !dbg !8714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8717, metadata !DIExpression()), !dbg !8718
  %2 = add i32 %0, -32, !dbg !8719
  %3 = icmp ult i32 %2, 95, !dbg !8719
  %4 = zext i1 %3 to i32, !dbg !8719
  ret i32 %4, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8 %1, metadata !8726, metadata !DIExpression()), !dbg !8727
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8728
  %3 = icmp eq i8 %1, 0, !dbg !8729
  br i1 %3, label %4, label %5, !dbg !8731

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8732
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8734
  br label %14, !dbg !8735

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8736
  call void @llvm.dbg.value(metadata i8 %1, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %0, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8 %1, metadata !8726, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8727
  br label %6, !dbg !8737

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8726, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %8, metadata !8725, metadata !DIExpression()), !dbg !8727
  %9 = add i8 %7, -1, !dbg !8738
  call void @llvm.dbg.value(metadata i8 %9, metadata !8726, metadata !DIExpression()), !dbg !8727
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8739
  %11 = load i8, i8* %10, align 1, !dbg !8741
  store i8 %11, i8* %8, align 1, !dbg !8742
  call void @llvm.dbg.value(metadata i8* %10, metadata !8725, metadata !DIExpression()), !dbg !8727
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8743
  call void @llvm.dbg.value(metadata i8 %9, metadata !8726, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8727
  %12 = icmp eq i8 %9, 0, !dbg !8744
  br i1 %12, label %13, label %6, !dbg !8737, !llvm.loop !8745

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8747
  tail call fastcc void @cursor_restore() #27, !dbg !8748
  br label %14, !dbg !8749

14:                                               ; preds = %13, %4
  ret void, !dbg !8749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8754, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %1, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %2, metadata !8756, metadata !DIExpression()), !dbg !8758
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8759
  %4 = icmp eq i8 %2, 0, !dbg !8760
  br i1 %4, label %5, label %6, !dbg !8762

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8763
  br label %17, !dbg !8765

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8766
  call void @llvm.dbg.value(metadata i8 %7, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %0, metadata !8754, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8758
  store i8 %1, i8* %0, align 1, !dbg !8767
  tail call fastcc void @cursor_save() #27, !dbg !8768
  call void @llvm.dbg.value(metadata i8 %7, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %2, metadata !8756, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %0, metadata !8754, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %2, metadata !8756, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8758
  br label %8, !dbg !8769

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8758
  call void @llvm.dbg.value(metadata i8 %10, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %11, metadata !8756, metadata !DIExpression()), !dbg !8758
  %13 = add i8 %11, -1, !dbg !8770
  call void @llvm.dbg.value(metadata i8 %13, metadata !8756, metadata !DIExpression()), !dbg !8758
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8771
  %14 = load i8, i8* %12, align 1, !dbg !8773
  call void @llvm.dbg.value(metadata i8 %14, metadata !8755, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %12, metadata !8754, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8758
  store i8 %10, i8* %12, align 1, !dbg !8774
  call void @llvm.dbg.value(metadata i8 %14, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata i8* %12, metadata !8754, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8758
  call void @llvm.dbg.value(metadata i8 %13, metadata !8756, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8758
  %15 = icmp eq i8 %13, 0, !dbg !8775
  br i1 %15, label %16, label %8, !dbg !8769, !llvm.loop !8776

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8778
  br label %17, !dbg !8779

17:                                               ; preds = %16, %5
  ret void, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8780 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8781
  ret void, !dbg !8782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8783 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8784
  ret void, !dbg !8785
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8786 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32 %0, metadata !8792, metadata !DIExpression()), !dbg !8793
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8794
  ret i32 %2, !dbg !8795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8796 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8798, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 %0, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8801
  ret i32 %2, !dbg !8802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8805, metadata !DIExpression()), !dbg !8806
  %2 = add i32 %0, -48, !dbg !8807
  %3 = icmp ult i32 %2, 10, !dbg !8808
  %4 = zext i1 %3 to i32, !dbg !8808
  ret i32 %4, !dbg !8809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8810 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8812, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 4, metadata !8813, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata i32 16, metadata !8814, metadata !DIExpression()), !dbg !8816
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8816
  %2 = and i32 %1, 16, !dbg !8818
  %3 = icmp ne i32 %2, 0, !dbg !8819
  ret i1 %3, !dbg !8820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8821 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8823, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.value(metadata i32 %0, metadata !8824, metadata !DIExpression()), !dbg !8826
  %2 = and i32 %0, 31, !dbg !8827
  %3 = shl nuw i32 1, %2, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %3, metadata !8825, metadata !DIExpression()), !dbg !8826
  %4 = xor i32 %3, -1, !dbg !8828
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8833, metadata !DIExpression()), !dbg !8834
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8835
  ret void, !dbg !8836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8840
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8841
  ret void, !dbg !8842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8843 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8847, metadata !DIExpression()), !dbg !8848
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8849
  ret i32 %1, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8851 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8853, metadata !DIExpression()), !dbg !8855
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8857
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8857
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8859
  br i1 %4, label %7, label %5, !dbg !8860

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8861
  br label %7, !dbg !8862

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8855
  ret i32 %8, !dbg !8863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8864 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8866, metadata !DIExpression()), !dbg !8868
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8869
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8867, metadata !DIExpression()), !dbg !8868
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8870
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8870
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8872
  br i1 %4, label %7, label %5, !dbg !8873

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8874
  br label %7, !dbg !8875

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8868
  ret i32 %8, !dbg !8876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8877 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8879, metadata !DIExpression()), !dbg !8881
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8882
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8880, metadata !DIExpression()), !dbg !8881
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8883
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8883
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8885
  br i1 %4, label %6, label %5, !dbg !8886

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8887
  br label %6, !dbg !8889

6:                                                ; preds = %5, %0
  ret void, !dbg !8890
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8891 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8893, metadata !DIExpression()), !dbg !8895
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8896
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8894, metadata !DIExpression()), !dbg !8895
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8897
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8897
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8899
  br i1 %4, label %6, label %5, !dbg !8900

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8901
  br label %6, !dbg !8903

6:                                                ; preds = %5, %0
  ret void, !dbg !8904
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8905 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8907, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i8 %1, metadata !8908, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i32 %2, metadata !8909, metadata !DIExpression()), !dbg !8912
  %5 = bitcast i32* %4 to i8*, !dbg !8913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8913
  call void @llvm.dbg.value(metadata i32* %4, metadata !8911, metadata !DIExpression(DW_OP_deref)), !dbg !8912
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8914
  call void @llvm.dbg.value(metadata i32 %6, metadata !8910, metadata !DIExpression()), !dbg !8912
  %7 = icmp eq i32 %6, 0, !dbg !8915
  br i1 %7, label %8, label %31, !dbg !8917

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8910, metadata !DIExpression()), !dbg !8912
  %9 = and i32 %2, 131072, !dbg !8918
  %10 = icmp eq i32 %9, 0, !dbg !8920
  br i1 %10, label %28, label %11, !dbg !8921

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8922
  %13 = icmp eq i32 %12, 0, !dbg !8925
  br i1 %13, label %18, label %14, !dbg !8926

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8927
  %16 = shl nuw i32 1, %15, !dbg !8927
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8929
  br label %25, !dbg !8930

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8931
  %20 = icmp eq i32 %19, 0, !dbg !8933
  %21 = zext i8 %1 to i32, !dbg !8912
  br i1 %20, label %25, label %22, !dbg !8934

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8935
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8937
  br label %25, !dbg !8938

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8939
  %27 = load i32, i32* %4, align 4, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %30, metadata !8911, metadata !DIExpression()), !dbg !8912
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8941
  br label %31, !dbg !8942

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8939
  %30 = load i32, i32* %4, align 4, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %30, metadata !8911, metadata !DIExpression()), !dbg !8912
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8910, metadata !DIExpression()), !dbg !8912
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8943
  ret i32 %6, !dbg !8943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8944 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8948, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32* %1, metadata !8949, metadata !DIExpression()), !dbg !8953
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8954
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8954
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8954
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8950, metadata !DIExpression()), !dbg !8953
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8955
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8955
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8955
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8952, metadata !DIExpression()), !dbg !8953
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8956
  store i32 %9, i32* %1, align 4, !dbg !8957
  ret i32 0, !dbg !8958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8961, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 %1, metadata !8962, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression()), !dbg !8967
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8968
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8968
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8968
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8964, metadata !DIExpression()), !dbg !8967
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8969
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8969
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8969
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8965, metadata !DIExpression()), !dbg !8967
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %10, metadata !8966, metadata !DIExpression()), !dbg !8967
  %11 = xor i32 %1, -1, !dbg !8971
  %12 = and i32 %10, %11, !dbg !8972
  %13 = and i32 %2, %1, !dbg !8973
  %14 = or i32 %12, %13, !dbg !8974
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8975
  ret i32 0, !dbg !8976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8979, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i32 %1, metadata !8980, metadata !DIExpression()), !dbg !8983
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8984
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8984
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8984
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8981, metadata !DIExpression()), !dbg !8983
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8985
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8985
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8985
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8982, metadata !DIExpression()), !dbg !8983
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8986
  store volatile i32 %1, i32* %9, align 4, !dbg !8986
  ret i32 0, !dbg !8987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8990, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %1, metadata !8991, metadata !DIExpression()), !dbg !8994
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8995
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8995
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8995
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8992, metadata !DIExpression()), !dbg !8994
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8996
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8996
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8996
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8993, metadata !DIExpression()), !dbg !8994
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8997
  ret i32 0, !dbg !8998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9001, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.value(metadata i32 %1, metadata !9002, metadata !DIExpression()), !dbg !9005
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9006
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9006
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9006
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9003, metadata !DIExpression()), !dbg !9005
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9007
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9007
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9007
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9004, metadata !DIExpression()), !dbg !9005
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9008
  %10 = load volatile i32, i32* %9, align 4, !dbg !9008
  %11 = xor i32 %10, %1, !dbg !9008
  store volatile i32 %11, i32* %9, align 4, !dbg !9008
  ret i32 0, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9012, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i8 %1, metadata !9013, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %2, metadata !9014, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 %3, metadata !9015, metadata !DIExpression()), !dbg !9022
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9023
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9023
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9023
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9016, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i8* undef, metadata !9017, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 0, metadata !9019, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i32 0, metadata !9020, metadata !DIExpression()), !dbg !9022
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9024

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9025
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !9029
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9030
  %12 = load i32, i32* %11, align 4, !dbg !9030
  %13 = icmp eq i32 %10, %12, !dbg !9031
  br i1 %13, label %14, label %29, !dbg !9032

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !9033
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !9035
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !9036
  br label %29, !dbg !9037

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9038
  %17 = load i8*, i8** %16, align 4, !dbg !9038
  call void @llvm.dbg.value(metadata i8* %17, metadata !9017, metadata !DIExpression()), !dbg !9022
  %18 = zext i8 %1 to i32, !dbg !9039
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !9041
  %20 = icmp eq i32 %19, 0, !dbg !9042
  br i1 %20, label %21, label %29, !dbg !9043

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9044
  %23 = load i32, i32* %22, align 4, !dbg !9044
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !9045
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9046

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9019, metadata !DIExpression()), !dbg !9022
  br label %27, !dbg !9047

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9019, metadata !DIExpression()), !dbg !9022
  br label %27, !dbg !9049

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9019, metadata !DIExpression()), !dbg !9022
  br label %27, !dbg !9050

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9022
  call void @llvm.dbg.value(metadata i32 %28, metadata !9019, metadata !DIExpression()), !dbg !9022
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !9051
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !9052
  br label %29, !dbg !9052

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9022
  call void @llvm.dbg.value(metadata i32 %30, metadata !9020, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.label(metadata !9021), !dbg !9053
  ret i32 %30, !dbg !9054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9057, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9058, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i1 %2, metadata !9059, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9061
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9062
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9062
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9062
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9060, metadata !DIExpression()), !dbg !9061
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9063
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !9064
  ret i32 %8, !dbg !9065
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9072, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9073, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i1 %2, metadata !9074, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9075
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !9076
  br i1 %4, label %10, label %5, !dbg !9078

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9079
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !9082
  %8 = or i1 %7, %2, !dbg !9083
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9083
  br i1 %2, label %11, label %13, !dbg !9083

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9084

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9085
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !9088
  br label %13, !dbg !9089

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9075
  ret i32 %14, !dbg !9090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9091 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9097
  %3 = icmp eq %struct._snode* %2, null, !dbg !9097
  ret i1 %3, !dbg !9097
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9098 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9104, metadata !DIExpression()), !dbg !9106
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9107
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9104, metadata !DIExpression()), !dbg !9106
  %4 = icmp eq %struct._snode* %3, null, !dbg !9109
  br i1 %4, label %15, label %5, !dbg !9107

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9104, metadata !DIExpression()), !dbg !9106
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9111
  br i1 %6, label %9, label %11, !dbg !9114

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9104, metadata !DIExpression()), !dbg !9106
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9111
  br i1 %8, label %9, label %11, !dbg !9114, !llvm.loop !9115

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9116
  br label %15, !dbg !9116

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9104, metadata !DIExpression()), !dbg !9106
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !9109
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9105, metadata !DIExpression()), !dbg !9106
  %14 = icmp eq %struct._snode* %13, null, !dbg !9109
  br i1 %14, label %15, label %7, !dbg !9107, !llvm.loop !9115

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9119 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9123, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9124, metadata !DIExpression()), !dbg !9125
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9126
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9126
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9126
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9127
  %5 = icmp eq %struct._snode* %4, null, !dbg !9127
  br i1 %5, label %6, label %8, !dbg !9126

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9129
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9129
  br label %8, !dbg !9129

8:                                                ; preds = %6, %2
  ret void, !dbg !9126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9131 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9137
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9137
  ret %struct._snode* %3, !dbg !9138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9144, metadata !DIExpression()), !dbg !9145
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9146
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9151, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9152, metadata !DIExpression()), !dbg !9153
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9154
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9155
  ret void, !dbg !9156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9157 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9159, metadata !DIExpression()), !dbg !9160
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9161
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9161
  ret %struct._snode* %3, !dbg !9162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9165, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9166, metadata !DIExpression()), !dbg !9167
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9168
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9169
  ret void, !dbg !9170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9175, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9176, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9177, metadata !DIExpression()), !dbg !9178
  %4 = icmp eq %struct._snode* %1, null, !dbg !9179
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9181
  br i1 %4, label %6, label %11, !dbg !9182

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9183
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9185
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9185
  br i1 %8, label %9, label %15, !dbg !9183

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9187
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9187
  br label %15, !dbg !9187

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9189
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9191
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9191
  br i1 %13, label %14, label %15, !dbg !9189

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9193
  br label %15, !dbg !9193

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9182
  ret void, !dbg !9182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9199, metadata !DIExpression()), !dbg !9200
  %2 = icmp eq %struct._snode* %0, null, !dbg !9201
  br i1 %2, label %5, label %3, !dbg !9201

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9201
  br label %5, !dbg !9201

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9201
  ret %struct._snode* %6, !dbg !9201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9202 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9204, metadata !DIExpression()), !dbg !9205
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9206
  ret %struct._snode* %2, !dbg !9206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9207 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9209, metadata !DIExpression()), !dbg !9210
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9211
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9211
  ret %struct._snode* %3, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9215, metadata !DIExpression()), !dbg !9218
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9219, !range !9220
  call void @llvm.dbg.value(metadata i32 %2, metadata !9216, metadata !DIExpression()), !dbg !9218
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %3, metadata !9217, metadata !DIExpression()), !dbg !9218
  ret i32 %3, !dbg !9222
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9225, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i8* %1, metadata !9226, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i8* %1, metadata !9227, metadata !DIExpression()), !dbg !9228
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9229
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9229
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9230
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9230
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9230
  %8 = shl nuw i32 1, %0, !dbg !9231
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9232
  ret void, !dbg !9233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9234 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9238, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 %1, metadata !9239, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9240, metadata !DIExpression()), !dbg !9244
  %4 = bitcast i64* %3 to i8*, !dbg !9245
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9245
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9242, metadata !DIExpression()), !dbg !9244
  store i64 70368744177732, i64* %3, align 8, !dbg !9246
  call void @llvm.dbg.value(metadata i64* %3, metadata !9242, metadata !DIExpression(DW_OP_deref)), !dbg !9244
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9247
  call void @llvm.dbg.value(metadata i32 %5, metadata !9243, metadata !DIExpression()), !dbg !9244
  %6 = icmp eq i32 %5, 0, !dbg !9248
  br i1 %6, label %7, label %8, !dbg !9250

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9251
  br label %8, !dbg !9252

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9253
  ret void, !dbg !9253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9256, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata i8* %0, metadata !9257, metadata !DIExpression()), !dbg !9259
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9260
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9258, metadata !DIExpression()), !dbg !9259
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9261
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9261
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !9262
  ret i32 %5, !dbg !9263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9266, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %1, metadata !9267, metadata !DIExpression()), !dbg !9269
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %3, metadata !9268, metadata !DIExpression()), !dbg !9269
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9271
  ret void, !dbg !9272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9277, metadata !DIExpression()), !dbg !9278
  %2 = sdiv i32 %0, 4, !dbg !9279
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9280
  %6 = add nsw i32 %5, 16, !dbg !9281
  %7 = shl i32 15, %6, !dbg !9282
  %8 = or i32 %7, %2, !dbg !9283
  ret i32 %8, !dbg !9284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9289, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %1, metadata !9290, metadata !DIExpression()), !dbg !9291
  %3 = and i32 %1, 255, !dbg !9292
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9292
  %5 = load volatile i32, i32* %4, align 4, !dbg !9292
  %6 = lshr i32 %1, 16, !dbg !9292
  %7 = xor i32 %6, -1, !dbg !9292
  %8 = and i32 %5, %7, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %6, metadata !9293, metadata !DIExpression()) #25, !dbg !9297
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9299, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %9, metadata !9296, metadata !DIExpression()) #25, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %9, metadata !9301, metadata !DIExpression()) #25, !dbg !9306
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9308, !range !3887
  %11 = shl i32 %0, %10, !dbg !9292
  %12 = or i32 %11, %8, !dbg !9292
  store volatile i32 %12, i32* %4, align 4, !dbg !9292
  ret void, !dbg !9309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9310 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9314, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9315, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %2, metadata !9316, metadata !DIExpression()), !dbg !9319
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9320
  %5 = icmp eq %struct._snode* %4, null, !dbg !9320
  br i1 %5, label %21, label %6, !dbg !9320

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9322
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9318, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9317, metadata !DIExpression()), !dbg !9319
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9323
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9323
  %11 = load i32, i32* %10, align 4, !dbg !9323
  %12 = and i32 %11, %2, !dbg !9327
  %13 = icmp eq i32 %12, 0, !dbg !9327
  br i1 %13, label %19, label %14, !dbg !9328

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9317, metadata !DIExpression()), !dbg !9319
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9329
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9329
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9329
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9331
  br label %19, !dbg !9332

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9317, metadata !DIExpression()), !dbg !9319
  %20 = icmp eq %struct._snode* %8, null, !dbg !9333
  br i1 %20, label %21, label %6, !dbg !9333

21:                                               ; preds = %19, %3
  ret void, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9337, metadata !DIExpression()), !dbg !9338
  %2 = and i32 %0, 255, !dbg !9339
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9339
  %4 = load volatile i32, i32* %3, align 4, !dbg !9339
  %5 = lshr i32 %0, 16, !dbg !9339
  %6 = and i32 %4, %5, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %5, metadata !9293, metadata !DIExpression()) #25, !dbg !9340
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9342, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %7, metadata !9296, metadata !DIExpression()) #25, !dbg !9340
  call void @llvm.dbg.value(metadata i32 %7, metadata !9301, metadata !DIExpression()) #25, !dbg !9343
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9345, !range !3887
  %9 = lshr i32 %6, %8, !dbg !9346
  ret i32 %9, !dbg !9347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9348 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9353, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.value(metadata i32 %1, metadata !9354, metadata !DIExpression()), !dbg !9355
  %3 = shl i32 %1, 16, !dbg !9356
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9356
  store volatile i32 %3, i32* %4, align 4, !dbg !9356
  ret void, !dbg !9357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9358 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9362, metadata !DIExpression()), !dbg !9363
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9364
  %3 = load volatile i32, i32* %2, align 4, !dbg !9364
  ret i32 %3, !dbg !9365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9366 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9368, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %1, metadata !9369, metadata !DIExpression()), !dbg !9370
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9371
  store volatile i32 %1, i32* %3, align 4, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9375, metadata !DIExpression()), !dbg !9376
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9377
  %3 = load volatile i32, i32* %2, align 4, !dbg !9377
  ret i32 %3, !dbg !9378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.value(metadata i32* %1, metadata !9384, metadata !DIExpression()), !dbg !9385
  %3 = and i32 %0, 131072, !dbg !9386
  %4 = icmp eq i32 %3, 0, !dbg !9388
  br i1 %4, label %22, label %5, !dbg !9389

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9390
  %6 = and i32 %0, 2, !dbg !9392
  %7 = icmp eq i32 %6, 0, !dbg !9394
  br i1 %7, label %11, label %8, !dbg !9395

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9396
  %10 = icmp eq i32 %9, 0, !dbg !9396
  br i1 %10, label %33, label %11, !dbg !9399

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9400
  store i32 %12, i32* %1, align 4, !dbg !9400
  %13 = and i32 %0, 16, !dbg !9401
  %14 = icmp eq i32 %13, 0, !dbg !9403
  br i1 %14, label %17, label %15, !dbg !9404

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9405
  br label %31, !dbg !9407

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9408
  %19 = icmp eq i32 %18, 0, !dbg !9410
  br i1 %19, label %33, label %20, !dbg !9411

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9412
  br label %31, !dbg !9414

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9415
  %24 = icmp eq i32 %23, 0, !dbg !9417
  br i1 %24, label %31, label %25, !dbg !9418

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9419
  %27 = icmp eq i32 %26, 0, !dbg !9422
  br i1 %27, label %28, label %31, !dbg !9423

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9424
  br label %33, !dbg !9425

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9385
  ret i32 %34, !dbg !9425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9430, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9432, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %3, metadata !9433, metadata !DIExpression()), !dbg !9441
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9442
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9442
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9442
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9434, metadata !DIExpression()), !dbg !9441
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9443
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9443
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9443
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9435, metadata !DIExpression()), !dbg !9441
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %11, metadata !9436, metadata !DIExpression()), !dbg !9441
  %12 = and i32 %2, 48, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %12, metadata !9437, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9438, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9439, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9441
  call void @llvm.dbg.value(metadata i32 %2, metadata !9440, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9441
  %13 = lshr i32 %2, 6, !dbg !9446
  %14 = and i32 %13, 1, !dbg !9446
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9447
  %15 = lshr i32 %2, 7, !dbg !9448
  %16 = and i32 %15, 3, !dbg !9448
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9449
  %17 = lshr i32 %2, 9, !dbg !9450
  %18 = and i32 %17, 3, !dbg !9450
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9451
  %19 = icmp eq i32 %12, 32, !dbg !9452
  br i1 %19, label %20, label %24, !dbg !9454

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9455
  br i1 %21, label %22, label %23, !dbg !9458

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9459
  br label %24, !dbg !9461

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9462
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9464
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9465
  ret void, !dbg !9466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9469, metadata !DIExpression()), !dbg !9471
  %2 = shl nuw i32 1, %0, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %2, metadata !9470, metadata !DIExpression()), !dbg !9471
  ret i32 %2, !dbg !9473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9478, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9479, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %2, metadata !9480, metadata !DIExpression()), !dbg !9481
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9482
  %5 = load volatile i32, i32* %4, align 4, !dbg !9482
  %6 = xor i32 %1, -1, !dbg !9482
  %7 = and i32 %5, %6, !dbg !9482
  %8 = mul i32 %2, %1, !dbg !9482
  %9 = or i32 %7, %8, !dbg !9482
  store volatile i32 %9, i32* %4, align 4, !dbg !9482
  ret void, !dbg !9483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9484 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9486, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 %1, metadata !9487, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 %2, metadata !9488, metadata !DIExpression()), !dbg !9489
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9490
  %5 = load volatile i32, i32* %4, align 4, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9491
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9493, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9491
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9494
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9496, !range !3887
  %8 = shl nuw nsw i32 %7, 1, !dbg !9490
  %9 = shl i32 3, %8, !dbg !9490
  %10 = xor i32 %9, -1, !dbg !9490
  %11 = and i32 %5, %10, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9499
  %12 = shl i32 %2, %8, !dbg !9490
  %13 = or i32 %11, %12, !dbg !9490
  store volatile i32 %13, i32* %4, align 4, !dbg !9490
  ret void, !dbg !9501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9504, metadata !DIExpression()), !dbg !9507
  call void @llvm.dbg.value(metadata i32 %1, metadata !9505, metadata !DIExpression()), !dbg !9507
  call void @llvm.dbg.value(metadata i32 %2, metadata !9506, metadata !DIExpression()), !dbg !9507
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9508
  %5 = load volatile i32, i32* %4, align 4, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9509
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9511, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9512
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9514, !range !3887
  %8 = shl nuw nsw i32 %7, 1, !dbg !9508
  %9 = shl i32 3, %8, !dbg !9508
  %10 = xor i32 %9, -1, !dbg !9508
  %11 = and i32 %5, %10, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9517
  %12 = shl i32 %2, %8, !dbg !9508
  %13 = or i32 %11, %12, !dbg !9508
  store volatile i32 %13, i32* %4, align 4, !dbg !9508
  ret void, !dbg !9519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9522, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %1, metadata !9523, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %2, metadata !9524, metadata !DIExpression()), !dbg !9525
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9526
  %5 = load volatile i32, i32* %4, align 4, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9527
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9529, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9530
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9532, !range !3887
  %8 = shl nuw nsw i32 %7, 2, !dbg !9526
  %9 = shl i32 15, %8, !dbg !9526
  %10 = xor i32 %9, -1, !dbg !9526
  %11 = and i32 %5, %10, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9535
  %12 = shl i32 %2, %8, !dbg !9526
  %13 = or i32 %11, %12, !dbg !9526
  store volatile i32 %13, i32* %4, align 4, !dbg !9526
  ret void, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9540, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %1, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %2, metadata !9542, metadata !DIExpression()), !dbg !9543
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9544
  %5 = load volatile i32, i32* %4, align 4, !dbg !9544
  %6 = lshr i32 %1, 8, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %6, metadata !9293, metadata !DIExpression()) #25, !dbg !9545
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9547, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %7, metadata !9296, metadata !DIExpression()) #25, !dbg !9545
  call void @llvm.dbg.value(metadata i32 %7, metadata !9301, metadata !DIExpression()) #25, !dbg !9548
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9550, !range !3887
  %9 = shl nuw nsw i32 %8, 2, !dbg !9544
  %10 = shl i32 15, %9, !dbg !9544
  %11 = xor i32 %10, -1, !dbg !9544
  %12 = and i32 %5, %11, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %6, metadata !9293, metadata !DIExpression()) #25, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %7, metadata !9296, metadata !DIExpression()) #25, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %7, metadata !9301, metadata !DIExpression()) #25, !dbg !9553
  %13 = shl i32 %2, %9, !dbg !9544
  %14 = or i32 %12, %13, !dbg !9544
  store volatile i32 %14, i32* %4, align 4, !dbg !9544
  ret void, !dbg !9555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9556 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9558, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %2, metadata !9560, metadata !DIExpression()), !dbg !9561
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9562
  %5 = load volatile i32, i32* %4, align 4, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9563
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9565, !srcloc !9300
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9563
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9566
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9568, !range !3887
  %8 = shl nuw nsw i32 %7, 1, !dbg !9562
  %9 = shl i32 3, %8, !dbg !9562
  %10 = xor i32 %9, -1, !dbg !9562
  %11 = and i32 %5, %10, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %1, metadata !9293, metadata !DIExpression()) #25, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %6, metadata !9296, metadata !DIExpression()) #25, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %6, metadata !9301, metadata !DIExpression()) #25, !dbg !9571
  %12 = shl i32 %2, %8, !dbg !9562
  %13 = or i32 %11, %12, !dbg !9562
  store volatile i32 %13, i32* %4, align 4, !dbg !9562
  ret void, !dbg !9573
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9576, metadata !DIExpression()), !dbg !9579
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9580
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9580
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9580
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9577, metadata !DIExpression()), !dbg !9579
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9581
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9582
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9583
  br i1 %6, label %7, label %11, !dbg !9585

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %8, metadata !9578, metadata !DIExpression()), !dbg !9579
  %9 = icmp slt i32 %8, 0, !dbg !9587
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9589
  br label %11, !dbg !9589

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9579
  ret i32 %12, !dbg !9590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9591 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9595, metadata !DIExpression()), !dbg !9596
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9597, !srcloc !9599
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9600
  ret i1 %1, !dbg !9601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9606, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i8 1, metadata !9607, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9608, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 0, metadata !9609, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9610, metadata !DIExpression()), !dbg !9611
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9612
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9612
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9608, metadata !DIExpression()), !dbg !9611
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9613
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9616
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %7, metadata !9609, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %7, metadata !9609, metadata !DIExpression()), !dbg !9611
  ret i32 %7, !dbg !9618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9619 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9621, metadata !DIExpression()), !dbg !9622
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9623
  ret i1 %1, !dbg !9624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9629, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %2, metadata !9631, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %3, metadata !9632, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 0, metadata !9633, metadata !DIExpression()), !dbg !9637
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9638
  %5 = icmp eq i32 %3, 17, !dbg !9639
  br i1 %5, label %6, label %14, !dbg !9640

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %7, metadata !9634, metadata !DIExpression()), !dbg !9642
  %8 = icmp eq i32 %7, 0, !dbg !9643
  %9 = shl nuw i32 1, %1, !dbg !9645
  br i1 %8, label %12, label %10, !dbg !9646

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9647
  br label %14, !dbg !9649

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9650
  br label %14, !dbg !9653

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9654
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9657, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i8* %1, metadata !9658, metadata !DIExpression()), !dbg !9661
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9662
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9662
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9662
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9659, metadata !DIExpression()), !dbg !9661
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9663
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9663
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9665
  %9 = icmp eq i32 %8, 0, !dbg !9665
  br i1 %9, label %12, label %10, !dbg !9666

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9667
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9669
  br label %12, !dbg !9670

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9671
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9673
  %15 = icmp eq i32 %14, 0, !dbg !9673
  br i1 %15, label %19, label %16, !dbg !9674

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9675
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9676
  store i8 %18, i8* %1, align 1, !dbg !9677
  br label %19, !dbg !9678

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9661
  ret i32 %20, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9682, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i8 %1, metadata !9683, metadata !DIExpression()), !dbg !9686
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9687
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9687
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9687
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9684, metadata !DIExpression()), !dbg !9686
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9688

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9689
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9692
  %10 = icmp eq i32 %9, 0, !dbg !9692
  br i1 %10, label %18, label %11, !dbg !9693

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9694, !srcloc !9701
  call void @llvm.dbg.value(metadata i32 undef, metadata !9697, metadata !DIExpression()) #25, !dbg !9702
  call void @llvm.dbg.value(metadata i32 undef, metadata !9698, metadata !DIExpression()) #25, !dbg !9702
  call void @llvm.dbg.value(metadata i32 undef, metadata !9685, metadata !DIExpression()), !dbg !9686
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9703
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9705
  %15 = icmp eq i32 %14, 0, !dbg !9705
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9694
  br i1 %15, label %17, label %19, !dbg !9706

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9697, metadata !DIExpression()) #25, !dbg !9702
  call void @llvm.dbg.value(metadata i32 %16, metadata !9685, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i32 undef, metadata !9707, metadata !DIExpression()) #25, !dbg !9710
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9712, !srcloc !9713
  br label %18, !dbg !9714

18:                                               ; preds = %17, %7
  br label %7, !dbg !9689, !llvm.loop !9715

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9694
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9717
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %20, metadata !9707, metadata !DIExpression()) #25, !dbg !9719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9721, !srcloc !9713
  ret void, !dbg !9722
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9723 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9725, metadata !DIExpression()), !dbg !9728
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9729
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9729
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9729
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9726, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.value(metadata i32 0, metadata !9727, metadata !DIExpression()), !dbg !9728
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9730
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9730
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9732
  %8 = icmp ne i32 %7, 0, !dbg !9732
  %9 = zext i1 %8 to i32, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %9, metadata !9727, metadata !DIExpression()), !dbg !9728
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9734
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9736
  %12 = icmp eq i32 %11, 0, !dbg !9736
  %13 = or i32 %9, 2, !dbg !9737
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9737
  call void @llvm.dbg.value(metadata i32 %14, metadata !9727, metadata !DIExpression()), !dbg !9728
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9738
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9740
  %17 = icmp eq i32 %16, 0, !dbg !9740
  %18 = or i32 %14, 4, !dbg !9741
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9741
  call void @llvm.dbg.value(metadata i32 %19, metadata !9727, metadata !DIExpression()), !dbg !9728
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9742
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9744
  %22 = icmp eq i32 %21, 0, !dbg !9744
  %23 = or i32 %19, 8, !dbg !9745
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9745
  call void @llvm.dbg.value(metadata i32 %24, metadata !9727, metadata !DIExpression()), !dbg !9728
  %25 = and i32 %24, 8, !dbg !9746
  %26 = icmp eq i32 %25, 0, !dbg !9746
  br i1 %26, label %29, label %27, !dbg !9748

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9749
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9751
  br label %29, !dbg !9752

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9753
  %31 = icmp eq i32 %30, 0, !dbg !9753
  br i1 %31, label %34, label %32, !dbg !9755

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9756
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9758
  br label %34, !dbg !9759

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9760
  %36 = icmp eq i32 %35, 0, !dbg !9760
  br i1 %36, label %39, label %37, !dbg !9762

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9763
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9765
  br label %39, !dbg !9766

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9767
  %41 = icmp eq i32 %40, 0, !dbg !9767
  br i1 %41, label %44, label %42, !dbg !9769

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9770
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9772
  br label %44, !dbg !9773

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9774
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9775
  ret i32 %24, !dbg !9776
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9777 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9779, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9780, metadata !DIExpression()), !dbg !9788
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9789
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9789
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9789
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9781, metadata !DIExpression()), !dbg !9788
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9790
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9790
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9790
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9782, metadata !DIExpression()), !dbg !9788
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9791
  %10 = load i8, i8* %9, align 4, !dbg !9791
  %11 = zext i8 %10 to i32, !dbg !9792
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %12, metadata !9784, metadata !DIExpression()), !dbg !9788
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9794
  %14 = load i8, i8* %13, align 1, !dbg !9794
  %15 = zext i8 %14 to i32, !dbg !9795
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %16, metadata !9785, metadata !DIExpression()), !dbg !9788
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9797
  %18 = load i8, i8* %17, align 2, !dbg !9797
  %19 = zext i8 %18 to i32, !dbg !9798
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %20, metadata !9786, metadata !DIExpression()), !dbg !9788
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9800
  %22 = load i8, i8* %21, align 1, !dbg !9800
  %23 = zext i8 %22 to i32, !dbg !9801
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %24, metadata !9787, metadata !DIExpression()), !dbg !9788
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9803

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9805
  br i1 %26, label %69, label %27, !dbg !9807

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9808

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9809
  br i1 %29, label %65, label %30, !dbg !9809

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9811
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9788
  br i1 %31, label %38, label %34, !dbg !9813

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9814
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9814

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9817
  br i1 %37, label %38, label %69, !dbg !9818

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9819
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9820
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9821
  %41 = icmp eq i32 %12, %40, !dbg !9823
  br i1 %41, label %43, label %42, !dbg !9824

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9825
  br label %43, !dbg !9827

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9828
  %45 = icmp eq i32 %16, %44, !dbg !9830
  br i1 %45, label %47, label %46, !dbg !9831

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9832
  br label %47, !dbg !9834

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9835
  %49 = icmp eq i32 %20, %48, !dbg !9837
  br i1 %49, label %51, label %50, !dbg !9838

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9839
  br label %51, !dbg !9841

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9842
  %53 = icmp eq i32 %24, %52, !dbg !9844
  br i1 %53, label %55, label %54, !dbg !9845

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9846
  br label %55, !dbg !9848

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9849
  %57 = load i32, i32* %56, align 4, !dbg !9849
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9851
  %59 = load i32, i32* %58, align 4, !dbg !9851
  %60 = icmp eq i32 %57, %59, !dbg !9852
  br i1 %60, label %63, label %61, !dbg !9853

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9854
  %62 = load i32, i32* %56, align 4, !dbg !9856
  store i32 %62, i32* %58, align 4, !dbg !9857
  br label %63, !dbg !9858

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9859
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9860
  br label %69, !dbg !9861

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9809
  %67 = and i8 %66, 1, !dbg !9809
  %68 = icmp eq i8 %67, 0, !dbg !9809
  br i1 %68, label %30, label %69, !dbg !9809

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9788
  ret i32 %70, !dbg !9862
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9865, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9866, metadata !DIExpression()), !dbg !9868
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9869
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9869
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9869
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9867, metadata !DIExpression()), !dbg !9868
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9870
  %7 = load i32, i32* %6, align 4, !dbg !9870
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9871
  store i32 %7, i32* %8, align 4, !dbg !9872
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9873, !range !9874
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9875
  %11 = trunc i32 %10 to i8, !dbg !9875
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9876
  store i8 %11, i8* %12, align 4, !dbg !9877
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9878, !range !9879
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9880
  %15 = trunc i32 %14 to i8, !dbg !9880
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9881
  store i8 %15, i8* %16, align 1, !dbg !9882
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9883
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9884, !range !9874
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9885
  %20 = trunc i32 %19 to i8, !dbg !9885
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9886
  store i8 %20, i8* %21, align 2, !dbg !9887
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9888, !range !9889
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9890
  %24 = trunc i32 %23 to i8, !dbg !9890
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9891
  store i8 %24, i8* %25, align 1, !dbg !9892
  ret i32 0, !dbg !9893
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9896, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i8* %1, metadata !9897, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 %2, metadata !9898, metadata !DIExpression()), !dbg !9902
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9903
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9899, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i8 0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9904
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9904
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9906
  %10 = icmp eq i32 %9, 0, !dbg !9906
  br i1 %10, label %30, label %11, !dbg !9907

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9908, !srcloc !9701
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %13, metadata !9697, metadata !DIExpression()) #25, !dbg !9910
  call void @llvm.dbg.value(metadata i32 undef, metadata !9698, metadata !DIExpression()) #25, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %13, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i8 0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %14 = icmp sgt i32 %2, 0, !dbg !9911
  br i1 %14, label %15, label %28, !dbg !9912

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9900, metadata !DIExpression()), !dbg !9902
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9913
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9914
  %20 = icmp eq i32 %19, 0, !dbg !9912
  br i1 %20, label %28, label %21, !dbg !9915

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9916
  %23 = add i8 %17, 1, !dbg !9918
  call void @llvm.dbg.value(metadata i8 %23, metadata !9900, metadata !DIExpression()), !dbg !9902
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9919
  %25 = load i8, i8* %24, align 1, !dbg !9919
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9920
  %26 = zext i8 %23 to i32, !dbg !9921
  %27 = icmp slt i32 %26, %2, !dbg !9911
  br i1 %27, label %15, label %28, !dbg !9912, !llvm.loop !9922

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9921
  call void @llvm.dbg.value(metadata i32 %13, metadata !9707, metadata !DIExpression()) #25, !dbg !9924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9926, !srcloc !9713
  br label %30, !dbg !9927

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9902
  ret i32 %31, !dbg !9928
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9931, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %1, metadata !9932, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 %2, metadata !9933, metadata !DIExpression()), !dbg !9936
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9937
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9937
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9937
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8 0, metadata !9935, metadata !DIExpression()), !dbg !9936
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9938
  call void @llvm.dbg.value(metadata i8 0, metadata !9935, metadata !DIExpression()), !dbg !9936
  %8 = icmp sgt i32 %2, 0, !dbg !9939
  br i1 %8, label %9, label %28, !dbg !9940

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9935, metadata !DIExpression()), !dbg !9936
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9938
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9941
  %14 = icmp eq i32 %13, 0, !dbg !9940
  br i1 %14, label %28, label %15, !dbg !9942

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9943
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9945
  %18 = add i8 %11, 1, !dbg !9946
  call void @llvm.dbg.value(metadata i8 %18, metadata !9935, metadata !DIExpression()), !dbg !9936
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9947
  store i8 %17, i8* %19, align 1, !dbg !9948
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9949
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9951
  %22 = icmp eq i32 %21, 0, !dbg !9951
  br i1 %22, label %25, label %23, !dbg !9952

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9953
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9955
  br label %25, !dbg !9956

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9935, metadata !DIExpression()), !dbg !9936
  %26 = zext i8 %18 to i32, !dbg !9957
  %27 = icmp slt i32 %26, %2, !dbg !9939
  br i1 %27, label %9, label %28, !dbg !9940, !llvm.loop !9958

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9957
  ret i32 %29, !dbg !9960
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9963, metadata !DIExpression()), !dbg !9965
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9966
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9966
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9966
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9964, metadata !DIExpression()), !dbg !9965
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9967
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9967
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9968
  ret void, !dbg !9969
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9972, metadata !DIExpression()), !dbg !9974
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9975
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9975
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9975
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9973, metadata !DIExpression()), !dbg !9974
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9976
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9976
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9977
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9981, metadata !DIExpression()), !dbg !9983
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9984
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9984
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9984
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9982, metadata !DIExpression()), !dbg !9983
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9985
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9985
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9986
  %8 = icmp eq i32 %7, 0, !dbg !9986
  br i1 %8, label %14, label %9, !dbg !9987

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9988
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9989
  %12 = icmp ne i32 %11, 0, !dbg !9987
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9990
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9993, metadata !DIExpression()), !dbg !9995
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9996
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9996
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9996
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9994, metadata !DIExpression()), !dbg !9995
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9997
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9997
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9998
  ret void, !dbg !9999
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10002, metadata !DIExpression()), !dbg !10004
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10005
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10005
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10005
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10003, metadata !DIExpression()), !dbg !10004
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10006
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10006
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10007
  ret void, !dbg !10008
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10011, metadata !DIExpression()), !dbg !10013
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10014
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10014
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10014
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10012, metadata !DIExpression()), !dbg !10013
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10015
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10015
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !10016
  ret i32 %7, !dbg !10017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !10018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10020, metadata !DIExpression()), !dbg !10022
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10023
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10023
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10021, metadata !DIExpression()), !dbg !10022
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10024
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10024
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10025
  ret i32 %7, !dbg !10026
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10029, metadata !DIExpression()), !dbg !10031
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10032
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10032
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10032
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10030, metadata !DIExpression()), !dbg !10031
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10033
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10033
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !10034
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10035
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10035
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10035

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !10037
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10039
  br label %11, !dbg !10040

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10039
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10041
  ret void, !dbg !10042
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10043 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10045, metadata !DIExpression()), !dbg !10047
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10048
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10048
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10048
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10046, metadata !DIExpression()), !dbg !10047
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10049
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10049
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !10050
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10051
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10051
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !10051

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !10053
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10055
  br label %11, !dbg !10056

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10055
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !10057
  ret void, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10061, metadata !DIExpression()), !dbg !10063
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10064
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10064
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10064
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10062, metadata !DIExpression()), !dbg !10063
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10065
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10065
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !10066
  %8 = icmp eq i32 %7, 0, !dbg !10066
  br i1 %8, label %13, label %9, !dbg !10067

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10068
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !10069
  %12 = icmp eq i32 %11, 0, !dbg !10069
  br i1 %12, label %13, label %22, !dbg !10070

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10071
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !10072
  %16 = icmp eq i32 %15, 0, !dbg !10072
  br i1 %16, label %22, label %17, !dbg !10073

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10074
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !10075
  %20 = icmp ne i32 %19, 0, !dbg !10073
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10079, metadata !DIExpression()), !dbg !10080
  ret i32 1, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10084, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10085, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i8* %2, metadata !10086, metadata !DIExpression()), !dbg !10088
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10089
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10089
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10089
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10087, metadata !DIExpression()), !dbg !10088
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10090
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10091
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10092
  store i8* %2, i8** %8, align 4, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10100, metadata !DIExpression()), !dbg !10101
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10102
  %3 = load volatile i32, i32* %2, align 4, !dbg !10102
  %4 = lshr i32 %3, 5, !dbg !10103
  %5 = and i32 %4, 1, !dbg !10103
  ret i32 %5, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10107, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10109
  %3 = load volatile i32, i32* %2, align 4, !dbg !10109
  %4 = lshr i32 %3, 5, !dbg !10110
  %5 = and i32 %4, 1, !dbg !10110
  ret i32 %5, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10116
  %3 = load volatile i32, i32* %2, align 4, !dbg !10116
  %4 = lshr i32 %3, 6, !dbg !10117
  %5 = and i32 %4, 1, !dbg !10117
  ret i32 %5, !dbg !10118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10119 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10121, metadata !DIExpression()), !dbg !10122
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10123
  %3 = load volatile i32, i32* %2, align 4, !dbg !10123
  %4 = lshr i32 %3, 6, !dbg !10124
  %5 = and i32 %4, 1, !dbg !10124
  ret i32 %5, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10134

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10141
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10144, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10141
  %5 = and i32 %4, -2, !dbg !10146
  call void @llvm.dbg.value(metadata i32 %5, metadata !10131, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10155
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10155
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10157, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10155
  %7 = icmp eq i32 %6, 0, !dbg !10134
  br i1 %7, label %8, label %3, !dbg !10146, !llvm.loop !10159

8:                                                ; preds = %3
  ret void, !dbg !10160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10161 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10165
  %3 = load volatile i32, i32* %2, align 4, !dbg !10165
  %4 = and i32 %3, -65, !dbg !10165
  store volatile i32 %4, i32* %2, align 4, !dbg !10165
  ret void, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10167 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10169, metadata !DIExpression()), !dbg !10172
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10173

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10174
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10177, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10174
  %5 = and i32 %4, -257, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %5, metadata !10170, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10180
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10180
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10182, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10180
  %7 = icmp eq i32 %6, 0, !dbg !10173
  br i1 %7, label %8, label %3, !dbg !10178, !llvm.loop !10183

8:                                                ; preds = %3
  ret void, !dbg !10184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10187, metadata !DIExpression()), !dbg !10190
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10191

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10192
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10195, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10192
  %5 = or i32 %4, 1, !dbg !10196
  call void @llvm.dbg.value(metadata i32 %5, metadata !10188, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10198
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10198
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10200, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10198
  %7 = icmp eq i32 %6, 0, !dbg !10191
  br i1 %7, label %8, label %3, !dbg !10196, !llvm.loop !10201

8:                                                ; preds = %3
  ret void, !dbg !10202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10203 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10207
  %3 = load volatile i32, i32* %2, align 4, !dbg !10207
  %4 = or i32 %3, 64, !dbg !10207
  store volatile i32 %4, i32* %2, align 4, !dbg !10207
  ret void, !dbg !10208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10211, metadata !DIExpression()), !dbg !10214
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10215

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10216
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10219, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10216
  %5 = or i32 %4, 256, !dbg !10220
  call void @llvm.dbg.value(metadata i32 %5, metadata !10212, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10222
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10222
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10224, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10222
  %7 = icmp eq i32 %6, 0, !dbg !10215
  br i1 %7, label %8, label %3, !dbg !10220, !llvm.loop !10225

8:                                                ; preds = %3
  ret void, !dbg !10226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10229, metadata !DIExpression()), !dbg !10232
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10233

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10234
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10237, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10234
  %5 = and i32 %4, -33, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %5, metadata !10230, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10240
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10240
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10242, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10240
  %7 = icmp eq i32 %6, 0, !dbg !10233
  br i1 %7, label %8, label %3, !dbg !10238, !llvm.loop !10243

8:                                                ; preds = %3
  ret void, !dbg !10244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10245 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10247, metadata !DIExpression()), !dbg !10250
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10251

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10252
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10255, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10252
  %5 = or i32 %4, 32, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %5, metadata !10248, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10258
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10258
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10260, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10258
  %7 = icmp eq i32 %6, 0, !dbg !10251
  br i1 %7, label %8, label %3, !dbg !10256, !llvm.loop !10261

8:                                                ; preds = %3
  ret void, !dbg !10262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10263 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10265, metadata !DIExpression()), !dbg !10266
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10267
  %3 = load volatile i32, i32* %2, align 4, !dbg !10267
  %4 = lshr i32 %3, 7, !dbg !10268
  %5 = and i32 %4, 1, !dbg !10268
  ret i32 %5, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10272, metadata !DIExpression()), !dbg !10275
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10276

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10277
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10280, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10277
  %5 = and i32 %4, -65, !dbg !10281
  call void @llvm.dbg.value(metadata i32 %5, metadata !10273, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10283
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10283
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10285, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10283
  %7 = icmp eq i32 %6, 0, !dbg !10276
  br i1 %7, label %8, label %3, !dbg !10281, !llvm.loop !10286

8:                                                ; preds = %3
  ret void, !dbg !10287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10290, metadata !DIExpression()), !dbg !10293
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10294

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10295
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10298, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10295
  %5 = or i32 %4, 64, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %5, metadata !10291, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10301
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10301
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10303, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10301
  %7 = icmp eq i32 %6, 0, !dbg !10294
  br i1 %7, label %8, label %3, !dbg !10299, !llvm.loop !10304

8:                                                ; preds = %3
  ret void, !dbg !10305
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10306 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10310, metadata !DIExpression()), !dbg !10311
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10312
  %3 = load volatile i32, i32* %2, align 4, !dbg !10312
  %4 = trunc i32 %3 to i8, !dbg !10313
  ret i8 %4, !dbg !10314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10315 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10317, metadata !DIExpression()), !dbg !10318
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10319
  %3 = load volatile i32, i32* %2, align 4, !dbg !10319
  %4 = lshr i32 %3, 3, !dbg !10320
  %5 = and i32 %4, 1, !dbg !10320
  ret i32 %5, !dbg !10321
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10322 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10324, metadata !DIExpression()), !dbg !10326
  %3 = bitcast i32* %2 to i8*, !dbg !10327
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10325, metadata !DIExpression()), !dbg !10328
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10329
  %5 = load volatile i32, i32* %4, align 4, !dbg !10329
  store volatile i32 %5, i32* %2, align 4, !dbg !10330
  %6 = load volatile i32, i32* %2, align 4, !dbg !10331
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10332
  %8 = load volatile i32, i32* %7, align 4, !dbg !10332
  store volatile i32 %8, i32* %2, align 4, !dbg !10333
  %9 = load volatile i32, i32* %2, align 4, !dbg !10334
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10335
  ret void, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10340, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.value(metadata i8 %1, metadata !10341, metadata !DIExpression()), !dbg !10342
  %3 = zext i8 %1 to i32, !dbg !10343
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10344
  store volatile i32 %3, i32* %4, align 4, !dbg !10345
  ret void, !dbg !10346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10353
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10354
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10354
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10352, metadata !DIExpression()), !dbg !10353
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10355
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10355
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10356
  ret i32 %7, !dbg !10357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = icmp eq i32 %0, 1024, !dbg !10364
  %3 = select i1 %2, i32 2, i32 0, !dbg !10364
  %4 = icmp eq i32 %0, 1536, !dbg !10364
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10364
  ret i32 %5, !dbg !10365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10368, metadata !DIExpression()), !dbg !10370
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10371
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10371
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10371
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10369, metadata !DIExpression()), !dbg !10370
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10372
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10372
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10373
  ret i32 %7, !dbg !10374
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10379, metadata !DIExpression()), !dbg !10380
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10381
  %3 = icmp ult i32 %2, 4, !dbg !10381
  br i1 %3, label %4, label %7, !dbg !10381

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10381
  %6 = load i32, i32* %5, align 4, !dbg !10381
  br label %7, !dbg !10381

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10382
  ret i32 %8, !dbg !10384
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10387, metadata !DIExpression()), !dbg !10389
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10390
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10390
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10388, metadata !DIExpression()), !dbg !10389
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10391
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10391
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10392
  ret i32 %7, !dbg !10393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32 %1, metadata !10399, metadata !DIExpression()), !dbg !10400
  %3 = icmp eq i32 %0, 4096, !dbg !10401
  %4 = icmp eq i32 %1, 0, !dbg !10401
  %5 = select i1 %4, i32 4, i32 3, !dbg !10401
  %6 = select i1 %4, i32 3, i32 2, !dbg !10401
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10401
  ret i32 %7, !dbg !10402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10408
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10408
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10406, metadata !DIExpression()), !dbg !10407
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10409
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10409
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10410
  ret i32 %7, !dbg !10411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10416, metadata !DIExpression()), !dbg !10417
  %2 = icmp eq i32 %0, 768, !dbg !10418
  %3 = zext i1 %2 to i32, !dbg !10417
  ret i32 %3, !dbg !10420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10421 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10423, metadata !DIExpression()), !dbg !10424
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10425
  %3 = load volatile i32, i32* %2, align 4, !dbg !10425
  %4 = and i32 %3, 768, !dbg !10425
  ret i32 %4, !dbg !10426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10427 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10429, metadata !DIExpression()), !dbg !10430
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10431
  %3 = load volatile i32, i32* %2, align 4, !dbg !10431
  %4 = and i32 %3, 4096, !dbg !10431
  ret i32 %4, !dbg !10432
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10435, metadata !DIExpression()), !dbg !10436
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10437
  %3 = load volatile i32, i32* %2, align 4, !dbg !10437
  %4 = and i32 %3, 12288, !dbg !10437
  ret i32 %4, !dbg !10438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10441, metadata !DIExpression()), !dbg !10442
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10443
  %3 = load volatile i32, i32* %2, align 4, !dbg !10443
  %4 = and i32 %3, 1536, !dbg !10443
  ret i32 %4, !dbg !10444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10449, metadata !DIExpression()), !dbg !10450
  %2 = icmp eq i32 %0, 2, !dbg !10451
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10451
  %4 = icmp eq i32 %0, 1, !dbg !10451
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10451
  ret i32 %5, !dbg !10452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10457, metadata !DIExpression()), !dbg !10458
  %2 = icmp ult i32 %0, 3, !dbg !10459
  br i1 %2, label %3, label %6, !dbg !10459

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10459
  %5 = load i32, i32* %4, align 4, !dbg !10459
  br label %6, !dbg !10459

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10460
  ret i32 %7, !dbg !10462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10467, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %1, metadata !10468, metadata !DIExpression()), !dbg !10469
  %3 = icmp eq i32 %0, 4, !dbg !10470
  %4 = icmp eq i32 %1, 0, !dbg !10470
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10470
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10470
  ret i32 %6, !dbg !10471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10476, metadata !DIExpression()), !dbg !10477
  %2 = icmp eq i32 %0, 1, !dbg !10478
  %3 = select i1 %2, i32 768, i32 0, !dbg !10477
  ret i32 %3, !dbg !10480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10481 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10483, metadata !DIExpression()), !dbg !10484
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10485
  %3 = load volatile i32, i32* %2, align 4, !dbg !10485
  %4 = and i32 %3, -8193, !dbg !10485
  store volatile i32 %4, i32* %2, align 4, !dbg !10485
  ret void, !dbg !10486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10491, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i32 %1, metadata !10492, metadata !DIExpression()), !dbg !10494
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10495
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10495
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10495
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10493, metadata !DIExpression()), !dbg !10494
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10496
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10496
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10499 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10501, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %1, metadata !10502, metadata !DIExpression()), !dbg !10504
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10505
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10505
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10505
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10503, metadata !DIExpression()), !dbg !10504
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10506
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10506
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10507
  ret void, !dbg !10508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10509 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10511, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32 %1, metadata !10512, metadata !DIExpression()), !dbg !10514
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10515
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10515
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10515
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10513, metadata !DIExpression()), !dbg !10514
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10516
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10516
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10521, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.value(metadata i32 %1, metadata !10522, metadata !DIExpression()), !dbg !10524
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10525
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10525
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10525
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10523, metadata !DIExpression()), !dbg !10524
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10526
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10526
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10527
  ret void, !dbg !10528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10529 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10531, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %1, metadata !10532, metadata !DIExpression()), !dbg !10536
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10537
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10537
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10537
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10533, metadata !DIExpression()), !dbg !10536
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10538
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10538
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10538
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10534, metadata !DIExpression()), !dbg !10536
  %10 = bitcast i32* %3 to i8*, !dbg !10539
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10539
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10540
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10540
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10544
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10544
  %15 = load i8*, i8** %14, align 4, !dbg !10544
  call void @llvm.dbg.value(metadata i32* %3, metadata !10535, metadata !DIExpression(DW_OP_deref)), !dbg !10536
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10545
  %17 = icmp slt i32 %16, 0, !dbg !10546
  br i1 %17, label %23, label %18, !dbg !10547

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10548
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10548
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10549
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10550
  %22 = load i32, i32* %3, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %22, metadata !10535, metadata !DIExpression()), !dbg !10536
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10552
  br label %23, !dbg !10553

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10553
  ret void, !dbg !10553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10554 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10556, metadata !DIExpression()), !dbg !10557
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10558
  %3 = load volatile i32, i32* %2, align 4, !dbg !10558
  %4 = or i32 %3, 8192, !dbg !10558
  store volatile i32 %4, i32* %2, align 4, !dbg !10558
  ret void, !dbg !10559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10562, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i8* %1, metadata !10563, metadata !DIExpression()), !dbg !10566
  call void @llvm.dbg.value(metadata i32* %2, metadata !10564, metadata !DIExpression()), !dbg !10566
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10567
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10567
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10567
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10565, metadata !DIExpression()), !dbg !10566
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10568
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10568
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10570
  br i1 %9, label %12, label %10, !dbg !10571

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10572
  br label %12, !dbg !10573

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10566
  ret i32 %13, !dbg !10574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32 0, metadata !10580, metadata !DIExpression()), !dbg !10581
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10582
  %3 = load volatile i32, i32* %2, align 4, !dbg !10582
  %4 = and i32 %3, -32769, !dbg !10582
  store volatile i32 %4, i32* %2, align 4, !dbg !10582
  ret void, !dbg !10583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10584 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10588, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %1, metadata !10589, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 0, metadata !10590, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %2, metadata !10591, metadata !DIExpression()), !dbg !10592
  %4 = zext i32 %1 to i64, !dbg !10593
  %5 = mul nuw nsw i64 %4, 25, !dbg !10593
  %6 = zext i32 %2 to i64, !dbg !10593
  %7 = shl nuw nsw i64 %6, 2, !dbg !10593
  %8 = udiv i64 %5, %7, !dbg !10593
  %9 = trunc i64 %8 to i32, !dbg !10593
  %10 = udiv i32 %9, 100, !dbg !10593
  %11 = shl nuw nsw i32 %10, 4, !dbg !10593
  %12 = mul i32 %10, -100, !dbg !10593
  %13 = add i32 %12, %9, !dbg !10593
  %14 = shl i32 %13, 4, !dbg !10593
  %15 = add i32 %14, 50, !dbg !10593
  %16 = udiv i32 %15, 100, !dbg !10593
  %17 = and i32 %16, 240, !dbg !10593
  %18 = add nuw nsw i32 %17, %11, !dbg !10593
  %19 = and i32 %16, 15, !dbg !10593
  %20 = and i32 %18, 65520, !dbg !10596
  %21 = or i32 %20, %19, !dbg !10596
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10597
  store volatile i32 %21, i32* %22, align 4, !dbg !10598
  ret void, !dbg !10599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10600 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10602, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %1, metadata !10603, metadata !DIExpression()), !dbg !10604
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10605
  %4 = load volatile i32, i32* %3, align 4, !dbg !10605
  %5 = and i32 %4, -769, !dbg !10605
  %6 = or i32 %5, %1, !dbg !10605
  store volatile i32 %6, i32* %3, align 4, !dbg !10605
  ret void, !dbg !10606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10609, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %1, metadata !10610, metadata !DIExpression()), !dbg !10611
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10612
  %4 = load volatile i32, i32* %3, align 4, !dbg !10612
  %5 = and i32 %4, -4097, !dbg !10612
  %6 = or i32 %5, %1, !dbg !10612
  store volatile i32 %6, i32* %3, align 4, !dbg !10612
  ret void, !dbg !10613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10616, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i32 %1, metadata !10617, metadata !DIExpression()), !dbg !10618
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10619
  %4 = load volatile i32, i32* %3, align 4, !dbg !10619
  %5 = and i32 %4, -12289, !dbg !10619
  %6 = or i32 %5, %1, !dbg !10619
  store volatile i32 %6, i32* %3, align 4, !dbg !10619
  ret void, !dbg !10620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10623, metadata !DIExpression()), !dbg !10625
  call void @llvm.dbg.value(metadata i32 %1, metadata !10624, metadata !DIExpression()), !dbg !10625
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10626
  %4 = load volatile i32, i32* %3, align 4, !dbg !10626
  %5 = and i32 %4, -1537, !dbg !10626
  %6 = or i32 %5, %1, !dbg !10626
  store volatile i32 %6, i32* %3, align 4, !dbg !10626
  ret void, !dbg !10627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10628 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10630, metadata !DIExpression()), !dbg !10631
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10632
  %3 = load volatile i32, i32* %2, align 4, !dbg !10632
  %4 = and i32 %3, 1, !dbg !10632
  ret i32 %4, !dbg !10633
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10636, metadata !DIExpression()), !dbg !10637
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10638
  %3 = load volatile i32, i32* %2, align 4, !dbg !10638
  %4 = lshr i32 %3, 1, !dbg !10639
  %5 = and i32 %4, 1, !dbg !10639
  ret i32 %5, !dbg !10640
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10641 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10643, metadata !DIExpression()), !dbg !10644
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10645
  %3 = load volatile i32, i32* %2, align 4, !dbg !10645
  %4 = lshr i32 %3, 8, !dbg !10646
  %5 = and i32 %4, 1, !dbg !10646
  ret i32 %5, !dbg !10647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10648 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10650, metadata !DIExpression()), !dbg !10651
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10652
  store volatile i32 -257, i32* %2, align 4, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10654 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10656, metadata !DIExpression()), !dbg !10658
  %3 = bitcast i32* %2 to i8*, !dbg !10659
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10659
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10657, metadata !DIExpression()), !dbg !10660
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10661
  %5 = load volatile i32, i32* %4, align 4, !dbg !10661
  store volatile i32 %5, i32* %2, align 4, !dbg !10662
  %6 = load volatile i32, i32* %2, align 4, !dbg !10663
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10664
  %8 = load volatile i32, i32* %7, align 4, !dbg !10664
  store volatile i32 %8, i32* %2, align 4, !dbg !10665
  %9 = load volatile i32, i32* %2, align 4, !dbg !10666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10667
  ret void, !dbg !10667
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10668 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10670, metadata !DIExpression()), !dbg !10672
  %3 = bitcast i32* %2 to i8*, !dbg !10673
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10673
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10671, metadata !DIExpression()), !dbg !10674
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10675
  %5 = load volatile i32, i32* %4, align 4, !dbg !10675
  store volatile i32 %5, i32* %2, align 4, !dbg !10676
  %6 = load volatile i32, i32* %2, align 4, !dbg !10677
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10678
  %8 = load volatile i32, i32* %7, align 4, !dbg !10678
  store volatile i32 %8, i32* %2, align 4, !dbg !10679
  %9 = load volatile i32, i32* %2, align 4, !dbg !10680
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10681
  ret void, !dbg !10681
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10682 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10684, metadata !DIExpression()), !dbg !10686
  %3 = bitcast i32* %2 to i8*, !dbg !10687
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10687
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10685, metadata !DIExpression()), !dbg !10688
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10689
  %5 = load volatile i32, i32* %4, align 4, !dbg !10689
  store volatile i32 %5, i32* %2, align 4, !dbg !10690
  %6 = load volatile i32, i32* %2, align 4, !dbg !10691
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10692
  %8 = load volatile i32, i32* %7, align 4, !dbg !10692
  store volatile i32 %8, i32* %2, align 4, !dbg !10693
  %9 = load volatile i32, i32* %2, align 4, !dbg !10694
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10695
  ret void, !dbg !10695
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1694 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1696, metadata !DIExpression()), !dbg !10696
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10697
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10699
  ret void, !dbg !10699
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1745, metadata !DIExpression()), !dbg !10700
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #26, !dbg !10701
  tail call void @arch_irq_enable(i32 noundef 38) #26, !dbg !10703
  ret void, !dbg !10703
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1760 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1762, metadata !DIExpression()), !dbg !10704
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #26, !dbg !10705
  tail call void @arch_irq_enable(i32 noundef 39) #26, !dbg !10707
  ret void, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_3(%struct.device* nocapture noundef readnone %0) #1 !dbg !1777 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1779, metadata !DIExpression()), !dbg !10708
  tail call void @z_arm_irq_priority_set(i32 noundef 52, i32 noundef 0, i32 noundef 0) #26, !dbg !10709
  tail call void @arch_irq_enable(i32 noundef 52) #26, !dbg !10711
  ret void, !dbg !10711
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10714, metadata !DIExpression()), !dbg !10716
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10717
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10717
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10717
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10715, metadata !DIExpression()), !dbg !10716
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10718
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10718
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10720
  br i1 %7, label %11, label %8, !dbg !10721

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10722
  %10 = load i8*, i8** %9, align 4, !dbg !10722
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10724
  br label %11, !dbg !10725

11:                                               ; preds = %8, %1
  ret void, !dbg !10726
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10729, metadata !DIExpression()), !dbg !10735
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10736
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10736
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10736
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10730, metadata !DIExpression()), !dbg !10735
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10737
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10737
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10737
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10731, metadata !DIExpression()), !dbg !10735
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10738
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10739
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10739
  %10 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %9) #27, !dbg !10741
  br i1 %10, label %11, label %51, !dbg !10742

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10743
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10744
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10744
  %15 = load i8*, i8** %14, align 4, !dbg !10744
  %16 = tail call fastcc i32 @clock_control_on.69(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %16, metadata !10734, metadata !DIExpression()), !dbg !10735
  %17 = icmp eq i32 %16, 0, !dbg !10746
  br i1 %17, label %18, label %51, !dbg !10748

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10749
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10749
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %21, metadata !10734, metadata !DIExpression()), !dbg !10735
  %22 = icmp slt i32 %21, 0, !dbg !10751
  br i1 %22, label %51, label %23, !dbg !10753

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10754
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10754
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10755
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10756
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10757
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10758
  %28 = load i32, i32* %27, align 4, !dbg !10758
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10760

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10732, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i32 4096, metadata !10733, metadata !DIExpression()), !dbg !10735
  br label %31, !dbg !10761

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10732, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i32 0, metadata !10733, metadata !DIExpression()), !dbg !10735
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10764
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10764
  call void @llvm.dbg.value(metadata i32 %33, metadata !10733, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i32 %32, metadata !10732, metadata !DIExpression()), !dbg !10735
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10765
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10766
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10767
  %36 = load i8, i8* %35, align 4, !dbg !10767, !range !6378
  %37 = icmp eq i8 %36, 0, !dbg !10767
  br i1 %37, label %39, label %38, !dbg !10769

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10770
  br label %39, !dbg !10772

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10773
  %41 = load i32, i32* %40, align 4, !dbg !10773
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10774
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10775
  %43 = load i8, i8* %42, align 4, !dbg !10775, !range !6378
  %44 = icmp eq i8 %43, 0, !dbg !10775
  br i1 %44, label %47, label %45, !dbg !10777

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10778
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10780
  br label %47, !dbg !10781

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10782
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10783
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10784
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10784
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10785
  br label %51, !dbg !10786

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10735
  ret i32 %52, !dbg !10787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10790, metadata !DIExpression()), !dbg !10794
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10795
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10795
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10795
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10791, metadata !DIExpression()), !dbg !10794
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10792, metadata !DIExpression()), !dbg !10794
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10796
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10797
  ret void, !dbg !10798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !10799 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10803, metadata !DIExpression()), !dbg !10804
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10805, !srcloc !10807
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) #27, !dbg !10808
  ret i1 %2, !dbg !10809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.69(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10812, metadata !DIExpression()), !dbg !10815
  call void @llvm.dbg.value(metadata i8* %1, metadata !10813, metadata !DIExpression()), !dbg !10815
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10816
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10816
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10814, metadata !DIExpression()), !dbg !10815
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10817
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10817
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10818
  ret i32 %8, !dbg !10819
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10820 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10824, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8 0, metadata !10825, metadata !DIExpression()), !dbg !10828
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10829
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10827, metadata !DIExpression(DW_OP_deref)), !dbg !10828
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %4, metadata !10826, metadata !DIExpression()), !dbg !10828
  %5 = icmp slt i32 %4, 0, !dbg !10831
  br i1 %5, label %9, label %6, !dbg !10833

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10834
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10827, metadata !DIExpression()), !dbg !10828
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10835
  br label %9, !dbg !10836

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10828
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10837
  ret i32 %10, !dbg !10837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10838 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10840, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 12, metadata !10841, metadata !DIExpression()), !dbg !10844
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10845

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10135, metadata !DIExpression()) #25, !dbg !10846
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10849, !srcloc !10145
  call void @llvm.dbg.value(metadata i32 %4, metadata !10140, metadata !DIExpression()) #25, !dbg !10846
  %5 = or i32 %4, 12, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %5, metadata !10842, metadata !DIExpression()), !dbg !10851
  call void @llvm.dbg.value(metadata i32 %5, metadata !10148, metadata !DIExpression()) #25, !dbg !10852
  call void @llvm.dbg.value(metadata i32* %2, metadata !10153, metadata !DIExpression()) #25, !dbg !10852
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10854, !srcloc !10158
  call void @llvm.dbg.value(metadata i32 %6, metadata !10154, metadata !DIExpression()) #25, !dbg !10852
  %7 = icmp eq i32 %6, 0, !dbg !10845
  br i1 %7, label %8, label %3, !dbg !10850, !llvm.loop !10855

8:                                                ; preds = %3
  ret void, !dbg !10856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10859, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i32 %1, metadata !10860, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i32 %2, metadata !10861, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i32 0, metadata !10862, metadata !DIExpression()), !dbg !10863
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10864
  %5 = load volatile i32, i32* %4, align 4, !dbg !10864
  %6 = and i32 %5, -5633, !dbg !10864
  %7 = or i32 %2, %1, !dbg !10864
  %8 = or i32 %7, %6, !dbg !10864
  store volatile i32 %8, i32* %4, align 4, !dbg !10864
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10865
  %10 = load volatile i32, i32* %9, align 4, !dbg !10865
  %11 = and i32 %10, -12289, !dbg !10865
  store volatile i32 %11, i32* %9, align 4, !dbg !10865
  ret void, !dbg !10866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10871
  %3 = load volatile i32, i32* %2, align 4, !dbg !10871
  %4 = or i32 %3, 8, !dbg !10871
  store volatile i32 %4, i32* %2, align 4, !dbg !10871
  ret void, !dbg !10872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10877, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10878, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata i32 0, metadata !10879, metadata !DIExpression()), !dbg !10880
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10881
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10881
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10882
  %5 = load i8, i8* %4, align 4, !dbg !10882
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10883
  ret i32 %6, !dbg !10884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) unnamed_addr #1 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10887, metadata !DIExpression()), !dbg !10888
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10889
  ret i1 %2, !dbg !10890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10893, metadata !DIExpression()), !dbg !10894
  tail call fastcc void @__NVIC_SetPriority.72() #27, !dbg !10895
  store i32 8399, i32* @last_load, align 4, !dbg !10896
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10897
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10898
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10899
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10900
  %3 = or i32 %2, 7, !dbg !10900
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10900
  ret i32 0, !dbg !10901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.72() unnamed_addr #15 !dbg !10902 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10904, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i32 1, metadata !10905, metadata !DIExpression()), !dbg !10906
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10907
  ret void, !dbg !10910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10913, metadata !DIExpression()), !dbg !10915
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10916
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10917
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10918
  %5 = add i32 %4, %3, !dbg !10918
  store i32 %5, i32* @cycle_count, align 4, !dbg !10918
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10919
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10920
  %7 = sub i32 %5, %6, !dbg !10923
  %8 = udiv i32 %7, 8400, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %8, metadata !10914, metadata !DIExpression()), !dbg !10915
  %9 = mul nuw i32 %8, 8400, !dbg !10925
  %10 = add i32 %9, %6, !dbg !10926
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10926
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10927
  tail call void @z_arm_int_exit() #26, !dbg !10928
  ret void, !dbg !10929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10930 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10932, metadata !DIExpression()), !dbg !10936
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %2, metadata !10933, metadata !DIExpression()), !dbg !10936
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %3, metadata !10934, metadata !DIExpression()), !dbg !10936
  %4 = and i32 %2, 65536, !dbg !10939
  %5 = icmp ne i32 %4, 0, !dbg !10939
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10941
  %8 = load i32, i32* @last_load, align 4, !dbg !10936
  br i1 %7, label %9, label %13, !dbg !10941

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10942
  %11 = add i32 %10, %8, !dbg !10942
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10942
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10944
  br label %13, !dbg !10945

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10946
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10947
  %16 = add i32 %14, %15, !dbg !10948
  ret i32 %16, !dbg !10949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10954, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i1 %1, metadata !10955, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10967
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10968
  br i1 %4, label %5, label %8, !dbg !10968

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10970
  %7 = and i32 %6, -2, !dbg !10970
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10970
  store i32 -16777216, i32* @last_load, align 4, !dbg !10972
  br label %54, !dbg !10973

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10974
  call void @llvm.dbg.value(metadata i32 %9, metadata !10959, metadata !DIExpression()), !dbg !10967
  br i1 %3, label %18, label %10, !dbg !10975

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10975
  call void @llvm.dbg.value(metadata i32 undef, metadata !10954, metadata !DIExpression()), !dbg !10967
  %12 = icmp slt i32 %11, 1, !dbg !10976
  br i1 %12, label %18, label %13, !dbg !10976

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10976
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10976
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10976
  %17 = add nuw nsw i32 %16, 8399, !dbg !10976
  br label %18, !dbg !10976

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10954, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10977, metadata !DIExpression()) #25, !dbg !10984
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10986, !srcloc !10992
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %21, metadata !10989, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 undef, metadata !10990, metadata !DIExpression()) #25, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %21, metadata !10983, metadata !DIExpression()) #25, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %21, metadata !10960, metadata !DIExpression()), !dbg !10967
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10994
  call void @llvm.dbg.value(metadata i32 %22, metadata !10965, metadata !DIExpression()), !dbg !10967
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %23, metadata !10957, metadata !DIExpression()), !dbg !10967
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10996
  %25 = add i32 %24, %22, !dbg !10996
  store i32 %25, i32* @cycle_count, align 4, !dbg !10996
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10997
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10998
  %27 = sub i32 %25, %26, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %27, metadata !10966, metadata !DIExpression()), !dbg !10967
  %28 = icmp slt i32 %27, 0, !dbg !11000
  br i1 %28, label %38, label %29, !dbg !11002

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10956, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 undef, metadata !10956, metadata !DIExpression()), !dbg !10967
  %30 = add nuw i32 %19, %27, !dbg !11003
  %31 = urem i32 %30, 8400, !dbg !11005
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10956, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10967
  %32 = sub nuw nsw i32 %19, %31, !dbg !11006
  call void @llvm.dbg.value(metadata i32 %32, metadata !10956, metadata !DIExpression()), !dbg !10967
  %33 = icmp ugt i32 %32, 1024, !dbg !11007
  br i1 %33, label %34, label %36, !dbg !11007

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10956, metadata !DIExpression()), !dbg !10967
  %35 = icmp ugt i32 %32, 16766400, !dbg !11008
  br i1 %35, label %38, label %36, !dbg !11010

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11011
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %40, metadata !10958, metadata !DIExpression()), !dbg !10967
  %41 = add nsw i32 %39, -1, !dbg !11013
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11014
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11015
  %42 = icmp ult i32 %23, %40, !dbg !11016
  br i1 %42, label %43, label %48, !dbg !11018

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11019
  %45 = add i32 %23, %9, !dbg !11021
  %46 = sub i32 %45, %40, !dbg !11022
  %47 = add i32 %46, %44, !dbg !11019
  br label %52, !dbg !11023

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11024
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11026
  %51 = add i32 %49, %50, !dbg !11026
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11027
  store i32 %53, i32* @cycle_count, align 4, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %21, metadata !11028, metadata !DIExpression()) #25, !dbg !11034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11033, metadata !DIExpression()) #25, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %21, metadata !11036, metadata !DIExpression()) #25, !dbg !11039
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !11041, !srcloc !11042
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11044 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10977, metadata !DIExpression()) #25, !dbg !11048
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11050, !srcloc !10992
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()) #25, !dbg !11052
  call void @llvm.dbg.value(metadata i32 undef, metadata !10990, metadata !DIExpression()) #25, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %2, metadata !10983, metadata !DIExpression()) #25, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %2, metadata !11046, metadata !DIExpression()), !dbg !11053
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !11054
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11055
  %5 = add i32 %4, %3, !dbg !11056
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11057
  %7 = sub i32 %5, %6, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %7, metadata !11047, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 %2, metadata !11028, metadata !DIExpression()) #25, !dbg !11059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11033, metadata !DIExpression()) #25, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %2, metadata !11036, metadata !DIExpression()) #25, !dbg !11061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11063, !srcloc !11042
  %8 = udiv i32 %7, 8400, !dbg !11064
  ret i32 %8, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10977, metadata !DIExpression()) #25, !dbg !11070
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11072, !srcloc !10992
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()) #25, !dbg !11074
  call void @llvm.dbg.value(metadata i32 undef, metadata !10990, metadata !DIExpression()) #25, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %2, metadata !10983, metadata !DIExpression()) #25, !dbg !11070
  call void @llvm.dbg.value(metadata i32 %2, metadata !11068, metadata !DIExpression()), !dbg !11075
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !11076
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11077
  %5 = add i32 %4, %3, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %5, metadata !11069, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %2, metadata !11028, metadata !DIExpression()) #25, !dbg !11079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11033, metadata !DIExpression()) #25, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %2, metadata !11036, metadata !DIExpression()) #25, !dbg !11081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11083, !srcloc !11042
  ret i32 %5, !dbg !11084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11085 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11086
  %2 = icmp eq i32 %1, -16777216, !dbg !11088
  br i1 %2, label %3, label %6, !dbg !11089

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11090
  %5 = or i32 %4, 1, !dbg !11090
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11090
  br label %6, !dbg !11092

6:                                                ; preds = %3, %0
  ret void, !dbg !11093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11094 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11095
  %2 = and i32 %1, -2, !dbg !11095
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i8 %1, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11125, metadata !DIExpression()), !dbg !11126
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11127
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11127
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11126
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11128
  %8 = load i8, i8* %6, align 4, !dbg !11129
  %9 = zext i8 %8 to i32, !dbg !11130
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11130
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11131
  br i1 %11, label %18, label %24, !dbg !11132

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11126
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11128
  %14 = load i8, i8* %6, align 4, !dbg !11129
  %15 = zext i8 %14 to i32, !dbg !11130
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11130
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11131
  br i1 %17, label %18, label %24, !dbg !11132, !llvm.loop !11133

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11135
  %21 = load i8, i8* %20, align 1, !dbg !11135
  %22 = icmp eq i8 %21, %1, !dbg !11138
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11139
  br i1 %22, label %24, label %12, !dbg !11140

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11126
  ret i32 %25, !dbg !11141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11142 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11153, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i8 %1, metadata !11154, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 %2, metadata !11155, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 0, metadata !11158, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 0, metadata !11159, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i8 0, metadata !11160, metadata !DIExpression()), !dbg !11170
  %4 = icmp eq i8 %1, 0, !dbg !11171
  br i1 %4, label %35, label %5, !dbg !11172

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11171
  br label %9, !dbg !11172

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11160, metadata !DIExpression()), !dbg !11170
  call void @llvm.dbg.value(metadata i32 %29, metadata !11158, metadata !DIExpression()), !dbg !11169
  %8 = icmp eq i32 %34, %6, !dbg !11171
  br i1 %8, label %35, label %9, !dbg !11172, !llvm.loop !11173

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11160, metadata !DIExpression()), !dbg !11170
  call void @llvm.dbg.value(metadata i32 %11, metadata !11158, metadata !DIExpression()), !dbg !11169
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11175
  %13 = load i32, i32* %12, align 4, !dbg !11175
  call void @llvm.dbg.value(metadata i32 %13, metadata !11157, metadata !DIExpression()), !dbg !11169
  %14 = and i32 %13, 31, !dbg !11176
  %15 = icmp ult i32 %14, 16, !dbg !11177
  br i1 %15, label %16, label %20, !dbg !11178

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11179
  %18 = load i32, i32* %17, align 4, !dbg !11179
  %19 = or i32 %18, 32, !dbg !11181
  call void @llvm.dbg.value(metadata i32 %19, metadata !11158, metadata !DIExpression()), !dbg !11169
  br label %28, !dbg !11182

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11183

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11184
  %23 = load i32, i32* %22, align 4, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %23, metadata !11162, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11185
  %24 = lshr i32 %23, 7, !dbg !11186
  %25 = and i32 %24, 16, !dbg !11186
  %26 = or i32 %25, %23, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %26, metadata !11158, metadata !DIExpression()), !dbg !11169
  br label %28, !dbg !11187

27:                                               ; preds = %20
  br label %28, !dbg !11188

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11169
  call void @llvm.dbg.value(metadata i32 %29, metadata !11158, metadata !DIExpression()), !dbg !11169
  %30 = lshr i32 %13, 5, !dbg !11188
  %31 = and i32 %30, 255, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %31, metadata !11156, metadata !DIExpression()), !dbg !11169
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %32, metadata !11159, metadata !DIExpression()), !dbg !11169
  %33 = icmp slt i32 %32, 0, !dbg !11190
  %34 = add nuw nsw i32 %10, 1, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %34, metadata !11160, metadata !DIExpression()), !dbg !11170
  br i1 %33, label %35, label %7, !dbg !11193

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11199, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.value(metadata i32 %1, metadata !11200, metadata !DIExpression()), !dbg !11203
  call void @llvm.dbg.value(metadata i32 %2, metadata !11201, metadata !DIExpression()), !dbg !11203
  %4 = icmp ugt i32 %0, 175, !dbg !11204
  br i1 %4, label %16, label %5, !dbg !11206

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11207
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11208
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11208
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11202, metadata !DIExpression()), !dbg !11203
  %9 = add nsw i32 %6, -8, !dbg !11209
  %10 = icmp ult i32 %9, 3, !dbg !11209
  br i1 %10, label %16, label %11, !dbg !11211

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %8) #27, !dbg !11212
  br i1 %12, label %13, label %16, !dbg !11213

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11214
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !11215
  br label %16, !dbg !11216

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11203
  ret i32 %17, !dbg !11217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11222, metadata !DIExpression()), !dbg !11223
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11224, !srcloc !11226
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.78(%struct.device* noundef %0) #27, !dbg !11227
  ret i1 %2, !dbg !11228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.78(%struct.device* noundef %0) unnamed_addr #1 !dbg !11229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11231, metadata !DIExpression()), !dbg !11232
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11233
  ret i1 %2, !dbg !11234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11235 {
  ret void, !dbg !11236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11237 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11239, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 0, metadata !11240, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 2, metadata !11241, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 0, metadata !11242, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 2, metadata !11243, metadata !DIExpression()), !dbg !11244
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11245
  %2 = and i32 %1, 12, !dbg !11246
  call void @llvm.dbg.value(metadata i32 %2, metadata !11239, metadata !DIExpression()), !dbg !11244
  %3 = icmp eq i32 %2, 8, !dbg !11247
  br i1 %3, label %4, label %18, !dbg !11247

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11248
  call void @llvm.dbg.value(metadata i32 %5, metadata !11242, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11244
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11250
  %7 = and i32 %6, 63, !dbg !11251
  call void @llvm.dbg.value(metadata i32 %7, metadata !11243, metadata !DIExpression()), !dbg !11244
  %8 = udiv i32 16000000, %7, !dbg !11252
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11252
  %10 = lshr i32 %9, 6, !dbg !11252
  %11 = and i32 %10, 511, !dbg !11252
  %12 = mul i32 %11, %8, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %12, metadata !11240, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 %12, metadata !11240, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.value(metadata i32 %12, metadata !11240, metadata !DIExpression()), !dbg !11244
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11254
  %14 = lshr i32 %13, 15, !dbg !11255
  %15 = and i32 %14, 6, !dbg !11255
  %16 = add nuw nsw i32 %15, 2, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %16, metadata !11241, metadata !DIExpression()), !dbg !11244
  %17 = udiv i32 %12, %16, !dbg !11256
  br label %18, !dbg !11257

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11258
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11259
  %21 = lshr i32 %20, 4, !dbg !11260
  %22 = and i32 %21, 15, !dbg !11260
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11261
  %24 = load i8, i8* %23, align 1, !dbg !11261
  %25 = zext i8 %24 to i32, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %25, metadata !11239, metadata !DIExpression()), !dbg !11244
  %26 = lshr i32 %19, %25, !dbg !11262
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11262
  ret void, !dbg !11263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11264 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11306, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11307, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11308, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11309, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11310, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11311, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11312, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11313, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11314, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11315, metadata !DIExpression()), !dbg !11320
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11321
  %4 = load i32, i32* %3, align 4, !dbg !11321
  %5 = and i32 %4, 1, !dbg !11323
  %6 = icmp eq i32 %5, 0, !dbg !11324
  br i1 %6, label %17, label %7, !dbg !11325

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11326
  %9 = and i32 %8, -100663297, !dbg !11326
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11326
  %11 = load i32, i32* %10, align 4, !dbg !11326
  %12 = or i32 %9, %11, !dbg !11326
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11326
  %13 = load i32, i32* %10, align 4, !dbg !11328
  %14 = icmp eq i32 %13, 0, !dbg !11330
  %15 = zext i1 %14 to i32, !dbg !11331
  %16 = load i32, i32* %3, align 4, !dbg !11332
  br label %17, !dbg !11331

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !11332
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %19, metadata !11314, metadata !DIExpression()), !dbg !11320
  %20 = and i32 %18, 2, !dbg !11334
  %21 = icmp eq i32 %20, 0, !dbg !11335
  br i1 %21, label %32, label %22, !dbg !11336

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11337
  %24 = and i32 %23, -402653185, !dbg !11337
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11337
  %26 = load i32, i32* %25, align 4, !dbg !11337
  %27 = or i32 %24, %26, !dbg !11337
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11337
  %28 = load i32, i32* %25, align 4, !dbg !11339
  %29 = icmp eq i32 %28, 0, !dbg !11341
  %30 = select i1 %29, i32 1, i32 %19, !dbg !11342
  %31 = load i32, i32* %3, align 4, !dbg !11343
  br label %32, !dbg !11342

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !11343
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %34, metadata !11314, metadata !DIExpression()), !dbg !11320
  %35 = and i32 %33, 4, !dbg !11345
  %36 = icmp eq i32 %35, 0, !dbg !11346
  br i1 %36, label %49, label %37, !dbg !11347

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11348
  %39 = and i32 %38, -3145729, !dbg !11348
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11348
  %41 = load i32, i32* %40, align 4, !dbg !11348
  %42 = or i32 %39, %41, !dbg !11348
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11348
  %43 = load i32, i32* %40, align 4, !dbg !11350
  %44 = icmp eq i32 %43, 1048576, !dbg !11352
  %45 = select i1 %44, i32 1, i32 %34, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %45, metadata !11314, metadata !DIExpression()), !dbg !11320
  %46 = icmp eq i32 %43, 0, !dbg !11354
  %47 = zext i1 %46 to i32, !dbg !11356
  %48 = load i32, i32* %3, align 4, !dbg !11357
  br label %49, !dbg !11356

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !11357
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !11320
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %52, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %51, metadata !11314, metadata !DIExpression()), !dbg !11320
  %53 = and i32 %50, 8, !dbg !11359
  %54 = icmp eq i32 %53, 0, !dbg !11360
  br i1 %54, label %67, label %55, !dbg !11361

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11362
  %57 = and i32 %56, -12582913, !dbg !11362
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11362
  %59 = load i32, i32* %58, align 4, !dbg !11362
  %60 = or i32 %57, %59, !dbg !11362
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11362
  %61 = load i32, i32* %58, align 4, !dbg !11364
  %62 = icmp eq i32 %61, 4194304, !dbg !11366
  %63 = select i1 %62, i32 1, i32 %51, !dbg !11367
  call void @llvm.dbg.value(metadata i32 %63, metadata !11314, metadata !DIExpression()), !dbg !11320
  %64 = icmp eq i32 %61, 0, !dbg !11368
  %65 = select i1 %64, i32 1, i32 %52, !dbg !11370
  %66 = load i32, i32* %3, align 4, !dbg !11371
  br label %67, !dbg !11370

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !11371
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !11320
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %70, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %69, metadata !11314, metadata !DIExpression()), !dbg !11320
  %71 = and i32 %68, 32, !dbg !11372
  %72 = icmp eq i32 %71, 0, !dbg !11373
  br i1 %72, label %131, label %73, !dbg !11374

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !11375
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !11375
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11316, metadata !DIExpression()), !dbg !11375
  store volatile i32 0, i32* %2, align 4, !dbg !11375
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11375
  %76 = or i32 %75, 268435456, !dbg !11375
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11375
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11375
  %78 = and i32 %77, 268435456, !dbg !11375
  store volatile i32 %78, i32* %2, align 4, !dbg !11375
  %79 = load volatile i32, i32* %2, align 4, !dbg !11375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !11376
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11377
  %81 = or i32 %80, 256, !dbg !11377
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11377
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !11378
  call void @llvm.dbg.value(metadata i32 %82, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %83, !dbg !11379

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11380
  %85 = and i32 %84, 256, !dbg !11381
  %86 = icmp eq i32 %85, 0, !dbg !11382
  br i1 %86, label %87, label %91, !dbg !11379

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #26, !dbg !11383
  %89 = sub i32 %88, %82, !dbg !11386
  %90 = icmp ugt i32 %89, 2, !dbg !11387
  br i1 %90, label %439, label %83, !dbg !11388, !llvm.loop !11389

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11391
  %93 = and i32 %92, 768, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %93, metadata !11308, metadata !DIExpression()), !dbg !11320
  %94 = icmp eq i32 %93, 0, !dbg !11393
  br i1 %94, label %116, label %95, !dbg !11395

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11396
  %97 = load i32, i32* %96, align 4, !dbg !11396
  %98 = and i32 %97, 768, !dbg !11397
  %99 = icmp eq i32 %93, %98, !dbg !11398
  br i1 %99, label %116, label %100, !dbg !11399

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11400
  %102 = and i32 %101, -769, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %102, metadata !11308, metadata !DIExpression()), !dbg !11320
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11403
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11404
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11405
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11406
  %104 = and i32 %103, 1, !dbg !11406
  %105 = icmp eq i32 %104, 0, !dbg !11406
  br i1 %105, label %116, label %106, !dbg !11408

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #26, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %107, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %108, !dbg !11411

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11412
  %110 = and i32 %109, 2, !dbg !11413
  %111 = icmp eq i32 %110, 0, !dbg !11413
  br i1 %111, label %112, label %116, !dbg !11411

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #26, !dbg !11414
  %114 = sub i32 %113, %107, !dbg !11417
  %115 = icmp ugt i32 %114, 5000, !dbg !11418
  br i1 %115, label %439, label %108, !dbg !11419, !llvm.loop !11420

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11422
  %118 = load i32, i32* %117, align 4, !dbg !11422
  %119 = and i32 %118, 768, !dbg !11422
  %120 = icmp eq i32 %119, 768, !dbg !11422
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11422
  %122 = and i32 %121, -2031617, !dbg !11422
  %123 = and i32 %118, 268434687, !dbg !11422
  %124 = select i1 %120, i32 %123, i32 0, !dbg !11422
  %125 = or i32 %122, %124, !dbg !11422
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11422
  %126 = load i32, i32* %117, align 4, !dbg !11422
  %127 = and i32 %126, 4095, !dbg !11422
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11422
  %129 = or i32 %128, %127, !dbg !11422
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11422
  %130 = load i32, i32* %3, align 4, !dbg !11424
  br label %131, !dbg !11426

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11424
  %133 = and i32 %132, 16, !dbg !11427
  %134 = icmp eq i32 %133, 0, !dbg !11428
  br i1 %134, label %140, label %135, !dbg !11429

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11430
  %137 = load i8, i8* %136, align 4, !dbg !11430
  %138 = zext i8 %137 to i32, !dbg !11430
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11430
  %139 = load i32, i32* %3, align 4, !dbg !11432
  br label %140, !dbg !11434

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11432
  %142 = and i32 %141, 128, !dbg !11435
  %143 = icmp eq i32 %142, 0, !dbg !11436
  br i1 %143, label %151, label %144, !dbg !11437

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11438
  %146 = and i32 %145, -12582913, !dbg !11438
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11438
  %148 = load i32, i32* %147, align 4, !dbg !11438
  %149 = or i32 %146, %148, !dbg !11438
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11438
  %150 = load i32, i32* %3, align 4, !dbg !11440
  br label %151, !dbg !11442

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11440
  %153 = and i32 %152, 64, !dbg !11443
  %154 = icmp eq i32 %153, 0, !dbg !11444
  br i1 %154, label %162, label %155, !dbg !11445

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11446
  %157 = and i32 %156, -67108865, !dbg !11446
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11446
  %159 = load i32, i32* %158, align 4, !dbg !11446
  %160 = or i32 %157, %159, !dbg !11446
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11446
  %161 = load i32, i32* %3, align 4, !dbg !11448
  br label %162, !dbg !11450

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11448
  %164 = and i32 %163, 256, !dbg !11451
  %165 = icmp eq i32 %164, 0, !dbg !11452
  br i1 %165, label %176, label %166, !dbg !11453

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11454
  %168 = and i32 %167, -134217729, !dbg !11454
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11454
  %170 = load i32, i32* %169, align 4, !dbg !11454
  %171 = or i32 %168, %170, !dbg !11454
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11454
  %172 = load i32, i32* %169, align 4, !dbg !11456
  %173 = icmp eq i32 %172, 134217728, !dbg !11458
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11459
  %175 = load i32, i32* %3, align 4, !dbg !11460
  br label %176, !dbg !11459

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11460
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %178, metadata !11315, metadata !DIExpression()), !dbg !11320
  %179 = and i32 %177, 512, !dbg !11462
  %180 = icmp eq i32 %179, 0, !dbg !11463
  br i1 %180, label %188, label %181, !dbg !11464

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11465
  %183 = and i32 %182, -268435457, !dbg !11465
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11465
  %185 = load i32, i32* %184, align 4, !dbg !11465
  %186 = or i32 %183, %185, !dbg !11465
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11465
  %187 = load i32, i32* %3, align 4, !dbg !11467
  br label %188, !dbg !11469

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11467
  %190 = and i32 %189, 1024, !dbg !11470
  %191 = icmp eq i32 %190, 0, !dbg !11471
  br i1 %191, label %204, label %192, !dbg !11472

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11473
  %194 = and i32 %193, -536870913, !dbg !11473
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11473
  %196 = load i32, i32* %195, align 4, !dbg !11473
  %197 = or i32 %194, %196, !dbg !11473
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11473
  %198 = load i32, i32* %195, align 4, !dbg !11475
  %199 = icmp eq i32 %198, 536870912, !dbg !11477
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11478
  call void @llvm.dbg.value(metadata i32 %69, metadata !11314, metadata !DIExpression()), !dbg !11320
  br i1 %201, label %209, label %202, !dbg !11478

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11479
  br label %206, !dbg !11478

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !11314, metadata !DIExpression()), !dbg !11320
  %205 = icmp eq i32 %69, 1, !dbg !11481
  br i1 %205, label %209, label %206, !dbg !11482

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11479
  %208 = icmp eq i32 %207, 2048, !dbg !11483
  br i1 %208, label %209, label %356, !dbg !11484

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11485
  %210 = tail call i32 @HAL_GetTick() #26, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %210, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %211, !dbg !11488

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11489
  %213 = and i32 %212, 134217728, !dbg !11489
  %214 = icmp eq i32 %213, 0, !dbg !11489
  br i1 %214, label %219, label %215, !dbg !11488

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !11490
  %217 = sub i32 %216, %210, !dbg !11493
  %218 = icmp ugt i32 %217, 2, !dbg !11494
  br i1 %218, label %439, label %211, !dbg !11495, !llvm.loop !11496

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11498
  %221 = and i32 %220, 1, !dbg !11500
  %222 = icmp eq i32 %221, 0, !dbg !11501
  br i1 %222, label %227, label %223, !dbg !11502

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11503
  %225 = load i32, i32* %224, align 4, !dbg !11503
  %226 = icmp eq i32 %225, 0, !dbg !11504
  br i1 %226, label %234, label %227, !dbg !11505

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11506
  %229 = icmp eq i32 %228, 0, !dbg !11507
  br i1 %229, label %252, label %230, !dbg !11508

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11509
  %232 = load i32, i32* %231, align 4, !dbg !11509
  %233 = icmp eq i32 %232, 0, !dbg !11510
  br i1 %233, label %234, label %252, !dbg !11511

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11512
  %236 = and i32 %235, 196608, !dbg !11514
  call void @llvm.dbg.value(metadata i32 %236, metadata !11309, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11320
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11515
  %238 = and i32 %237, 251658240, !dbg !11516
  call void @llvm.dbg.value(metadata i32 %238, metadata !11310, metadata !DIExpression()), !dbg !11320
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11517
  %240 = load i32, i32* %239, align 4, !dbg !11517
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11517
  %242 = load i32, i32* %241, align 4, !dbg !11517
  %243 = shl i32 %242, 6, !dbg !11517
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11517
  %245 = load i32, i32* %244, align 4, !dbg !11517
  %246 = shl i32 %245, 28, !dbg !11517
  %247 = or i32 %240, %236, !dbg !11517
  %248 = or i32 %247, %238, !dbg !11517
  %249 = or i32 %248, %243, !dbg !11517
  %250 = or i32 %249, %246, !dbg !11517
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11517
  %251 = load i32, i32* %3, align 4, !dbg !11518
  br label %252, !dbg !11520

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11518
  %254 = and i32 %253, 4, !dbg !11521
  %255 = icmp eq i32 %254, 0, !dbg !11522
  br i1 %255, label %260, label %256, !dbg !11523

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11524
  %258 = load i32, i32* %257, align 4, !dbg !11524
  %259 = icmp eq i32 %258, 1048576, !dbg !11525
  br i1 %259, label %267, label %260, !dbg !11526

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11527
  %262 = icmp eq i32 %261, 0, !dbg !11528
  br i1 %262, label %291, label %263, !dbg !11529

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11530
  %265 = load i32, i32* %264, align 4, !dbg !11530
  %266 = icmp eq i32 %265, 4194304, !dbg !11531
  br i1 %266, label %267, label %291, !dbg !11532

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11533
  %269 = and i32 %268, 196608, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %269, metadata !11309, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11320
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11536
  %271 = and i32 %270, 1879048192, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %271, metadata !11311, metadata !DIExpression()), !dbg !11320
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11538
  %273 = load i32, i32* %272, align 4, !dbg !11538
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11538
  %275 = load i32, i32* %274, align 4, !dbg !11538
  %276 = shl i32 %275, 6, !dbg !11538
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11538
  %278 = load i32, i32* %277, align 4, !dbg !11538
  %279 = shl i32 %278, 24, !dbg !11538
  %280 = or i32 %273, %269, !dbg !11538
  %281 = or i32 %280, %271, !dbg !11538
  %282 = or i32 %281, %276, !dbg !11538
  %283 = or i32 %282, %279, !dbg !11538
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11538
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11539
  %285 = and i32 %284, -32, !dbg !11539
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11539
  %287 = load i32, i32* %286, align 4, !dbg !11539
  %288 = add i32 %287, -1, !dbg !11539
  %289 = or i32 %288, %285, !dbg !11539
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11539
  %290 = load i32, i32* %3, align 4, !dbg !11540
  br label %291, !dbg !11542

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11540
  %293 = and i32 %292, 1024, !dbg !11543
  %294 = icmp eq i32 %293, 0, !dbg !11544
  br i1 %294, label %321, label %295, !dbg !11545

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11546
  %297 = load i32, i32* %296, align 4, !dbg !11546
  %298 = icmp eq i32 %297, 536870912, !dbg !11547
  br i1 %298, label %299, label %321, !dbg !11548

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11549
  call void @llvm.dbg.value(metadata i32 %300, metadata !11310, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11320
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11551
  %302 = and i32 %301, 1879048192, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %302, metadata !11311, metadata !DIExpression()), !dbg !11320
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11553
  %304 = load i32, i32* %303, align 4, !dbg !11553
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11553
  %306 = load i32, i32* %305, align 4, !dbg !11553
  %307 = shl i32 %306, 6, !dbg !11553
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11553
  %309 = load i32, i32* %308, align 4, !dbg !11553
  %310 = shl i32 %309, 15, !dbg !11553
  %311 = add i32 %310, -65536, !dbg !11553
  %312 = and i32 %311, -65536, !dbg !11553
  %313 = shl i32 %300, 9, !dbg !11553
  %314 = and i32 %313, 100663296, !dbg !11553
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11553
  %316 = or i32 %302, %304, !dbg !11553
  %317 = or i32 %316, %315, !dbg !11553
  %318 = or i32 %317, %307, !dbg !11553
  %319 = or i32 %318, %312, !dbg !11553
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11553
  %320 = load i32, i32* %3, align 4, !dbg !11554
  br label %321, !dbg !11556

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11554
  %323 = and i32 %322, 2048, !dbg !11557
  %324 = icmp eq i32 %323, 0, !dbg !11558
  br i1 %324, label %346, label %325, !dbg !11559

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11560
  %327 = load i32, i32* %326, align 4, !dbg !11560
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11560
  %329 = load i32, i32* %328, align 4, !dbg !11560
  %330 = shl i32 %329, 6, !dbg !11560
  %331 = or i32 %330, %327, !dbg !11560
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11560
  %333 = load i32, i32* %332, align 4, !dbg !11560
  %334 = shl i32 %333, 15, !dbg !11560
  %335 = add i32 %334, -65536, !dbg !11560
  %336 = and i32 %335, -65536, !dbg !11560
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11560
  %338 = load i32, i32* %337, align 4, !dbg !11560
  %339 = shl i32 %338, 24, !dbg !11560
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11560
  %341 = load i32, i32* %340, align 4, !dbg !11560
  %342 = shl i32 %341, 28, !dbg !11560
  %343 = or i32 %331, %339, !dbg !11560
  %344 = or i32 %343, %336, !dbg !11560
  %345 = or i32 %344, %342, !dbg !11560
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11560
  br label %346, !dbg !11562

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11563
  %347 = tail call i32 @HAL_GetTick() #26, !dbg !11564
  call void @llvm.dbg.value(metadata i32 %347, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %348, !dbg !11565

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11566
  %350 = and i32 %349, 134217728, !dbg !11567
  %351 = icmp eq i32 %350, 0, !dbg !11567
  br i1 %351, label %352, label %356, !dbg !11565

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #26, !dbg !11568
  %354 = sub i32 %353, %347, !dbg !11571
  %355 = icmp ugt i32 %354, 2, !dbg !11572
  br i1 %355, label %439, label %348, !dbg !11573, !llvm.loop !11574

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11576
  br i1 %357, label %358, label %439, !dbg !11578

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11579
  %359 = tail call i32 @HAL_GetTick() #26, !dbg !11581
  call void @llvm.dbg.value(metadata i32 %359, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %360, !dbg !11582

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11583
  %362 = and i32 %361, 536870912, !dbg !11583
  %363 = icmp eq i32 %362, 0, !dbg !11583
  br i1 %363, label %368, label %364, !dbg !11582

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #26, !dbg !11584
  %366 = sub i32 %365, %359, !dbg !11587
  %367 = icmp ugt i32 %366, 2, !dbg !11588
  br i1 %367, label %439, label %360, !dbg !11589, !llvm.loop !11590

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11592
  %370 = and i32 %369, 4, !dbg !11594
  %371 = icmp eq i32 %370, 0, !dbg !11595
  br i1 %371, label %376, label %372, !dbg !11596

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11597
  %374 = load i32, i32* %373, align 4, !dbg !11597
  %375 = icmp eq i32 %374, 0, !dbg !11598
  br i1 %375, label %383, label %376, !dbg !11599

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11600
  %378 = icmp eq i32 %377, 0, !dbg !11601
  br i1 %378, label %405, label %379, !dbg !11602

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11603
  %381 = load i32, i32* %380, align 4, !dbg !11603
  %382 = icmp eq i32 %381, 0, !dbg !11604
  br i1 %382, label %383, label %405, !dbg !11605

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11606
  %385 = and i32 %384, 196608, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %385, metadata !11312, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11320
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11609
  %387 = load i32, i32* %386, align 4, !dbg !11609
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11609
  %389 = load i32, i32* %388, align 4, !dbg !11609
  %390 = shl i32 %389, 6, !dbg !11609
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11609
  %392 = load i32, i32* %391, align 4, !dbg !11609
  %393 = shl i32 %392, 24, !dbg !11609
  %394 = or i32 %385, %387, !dbg !11609
  %395 = or i32 %394, %390, !dbg !11609
  %396 = or i32 %395, %393, !dbg !11609
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11609
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11610
  %398 = and i32 %397, -7937, !dbg !11610
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11610
  %400 = load i32, i32* %399, align 4, !dbg !11610
  %401 = shl i32 %400, 8, !dbg !11610
  %402 = add i32 %401, -256, !dbg !11610
  %403 = or i32 %402, %398, !dbg !11610
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11610
  %404 = load i32, i32* %3, align 4, !dbg !11611
  br label %405, !dbg !11613

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11611
  %407 = and i32 %406, 256, !dbg !11614
  %408 = icmp eq i32 %407, 0, !dbg !11615
  br i1 %408, label %429, label %409, !dbg !11616

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11617
  %411 = load i32, i32* %410, align 4, !dbg !11617
  %412 = icmp eq i32 %411, 134217728, !dbg !11618
  br i1 %412, label %413, label %429, !dbg !11619

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11620
  %415 = and i32 %414, 251658240, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %415, metadata !11313, metadata !DIExpression()), !dbg !11320
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11623
  %417 = load i32, i32* %416, align 4, !dbg !11623
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11623
  %419 = load i32, i32* %418, align 4, !dbg !11623
  %420 = shl i32 %419, 6, !dbg !11623
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11623
  %422 = load i32, i32* %421, align 4, !dbg !11623
  %423 = shl i32 %422, 15, !dbg !11623
  %424 = add i32 %423, -65536, !dbg !11623
  %425 = and i32 %424, -65536, !dbg !11623
  %426 = or i32 %415, %417, !dbg !11623
  %427 = or i32 %426, %420, !dbg !11623
  %428 = or i32 %427, %425, !dbg !11623
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11623
  br label %429, !dbg !11624

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11625
  %430 = tail call i32 @HAL_GetTick() #26, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %430, metadata !11307, metadata !DIExpression()), !dbg !11320
  br label %431, !dbg !11627

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11628
  %433 = and i32 %432, 536870912, !dbg !11629
  %434 = icmp eq i32 %433, 0, !dbg !11629
  br i1 %434, label %435, label %439, !dbg !11627

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #26, !dbg !11630
  %437 = sub i32 %436, %430, !dbg !11633
  %438 = icmp ugt i32 %437, 2, !dbg !11634
  br i1 %438, label %439, label %431, !dbg !11635, !llvm.loop !11636

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !11320
  ret i32 %440, !dbg !11638
}

; Function Attrs: optsize
declare !dbg !11639 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11641 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11645, metadata !DIExpression()), !dbg !11647
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11648
  store i32 2047, i32* %2, align 4, !dbg !11649
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11650
  %4 = and i32 %3, 63, !dbg !11651
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11652
  store i32 %4, i32* %5, align 4, !dbg !11653
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11654
  %7 = lshr i32 %6, 6, !dbg !11655
  %8 = and i32 %7, 511, !dbg !11655
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11656
  store i32 %8, i32* %9, align 4, !dbg !11657
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11658
  %11 = lshr i32 %10, 15, !dbg !11659
  %12 = and i32 %11, 6, !dbg !11659
  %13 = add nuw nsw i32 %12, 2, !dbg !11659
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11660
  store i32 %13, i32* %14, align 4, !dbg !11661
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11662
  %16 = lshr i32 %15, 24, !dbg !11663
  %17 = and i32 %16, 15, !dbg !11663
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11664
  store i32 %17, i32* %18, align 4, !dbg !11665
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11666
  %20 = lshr i32 %19, 28, !dbg !11667
  %21 = and i32 %20, 7, !dbg !11667
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11668
  store i32 %21, i32* %22, align 4, !dbg !11669
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11670
  %24 = and i32 %23, 63, !dbg !11671
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11672
  store i32 %24, i32* %25, align 4, !dbg !11673
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11674
  %27 = lshr i32 %26, 6, !dbg !11675
  %28 = and i32 %27, 511, !dbg !11675
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11676
  store i32 %28, i32* %29, align 4, !dbg !11677
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11678
  %31 = lshr i32 %30, 15, !dbg !11679
  %32 = and i32 %31, 6, !dbg !11679
  %33 = add nuw nsw i32 %32, 2, !dbg !11679
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11680
  store i32 %33, i32* %34, align 4, !dbg !11681
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11682
  %36 = lshr i32 %35, 24, !dbg !11683
  %37 = and i32 %36, 15, !dbg !11683
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11684
  store i32 %37, i32* %38, align 4, !dbg !11685
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11686
  %40 = and i32 %39, 31, !dbg !11687
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11688
  store i32 %40, i32* %41, align 4, !dbg !11689
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11690
  %43 = lshr i32 %42, 8, !dbg !11691
  %44 = and i32 %43, 31, !dbg !11691
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11692
  store i32 %44, i32* %45, align 4, !dbg !11693
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11694
  %47 = and i32 %46, 3145728, !dbg !11694
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11695
  store i32 %47, i32* %48, align 4, !dbg !11696
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11697
  %50 = and i32 %49, 12582912, !dbg !11697
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11698
  store i32 %50, i32* %51, align 4, !dbg !11699
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11700
  %53 = and i32 %52, 100663296, !dbg !11700
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11701
  store i32 %53, i32* %54, align 4, !dbg !11702
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11703
  %56 = and i32 %55, 402653184, !dbg !11703
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11704
  store i32 %56, i32* %57, align 4, !dbg !11705
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11706
  %59 = and i32 %58, 2031616, !dbg !11707
  call void @llvm.dbg.value(metadata i32 %59, metadata !11646, metadata !DIExpression()), !dbg !11647
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11708
  %61 = and i32 %60, 768, !dbg !11709
  %62 = or i32 %61, %59, !dbg !11710
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11711
  store i32 %62, i32* %63, align 4, !dbg !11712
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11713
  %65 = and i32 %64, 67108864, !dbg !11713
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11714
  store i32 %65, i32* %66, align 4, !dbg !11715
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11716
  %68 = and i32 %67, 12582912, !dbg !11716
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11717
  store i32 %68, i32* %69, align 4, !dbg !11718
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11719
  %71 = and i32 %70, 134217728, !dbg !11719
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11720
  store i32 %71, i32* %72, align 4, !dbg !11721
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11722
  %74 = and i32 %73, 268435456, !dbg !11722
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11723
  store i32 %74, i32* %75, align 4, !dbg !11724
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11725
  %77 = and i32 %76, 536870912, !dbg !11725
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11726
  store i32 %77, i32* %78, align 4, !dbg !11727
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11728
  %80 = lshr i32 %79, 24, !dbg !11730
  %81 = trunc i32 %80 to i8, !dbg !11730
  %82 = and i8 %81, 1, !dbg !11730
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11731
  store i8 %82, i8* %83, align 4, !dbg !11733
  ret void, !dbg !11734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !11735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11737, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11738, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11739, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11741, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11742, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 0, metadata !11743, metadata !DIExpression()), !dbg !11744
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11745

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %3, metadata !11741, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 %3, metadata !11741, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11744
  %4 = lshr i32 %3, 20, !dbg !11749
  %5 = and i32 %4, 15, !dbg !11749
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11749

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11754
  %9 = and i32 %8, 63, !dbg !11754
  %10 = udiv i32 16000000, %9, !dbg !11754
  call void @llvm.dbg.value(metadata i32 %10, metadata !11740, metadata !DIExpression()), !dbg !11744
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11755
  %12 = lshr i32 %11, 24, !dbg !11756
  %13 = and i32 %12, 15, !dbg !11756
  call void @llvm.dbg.value(metadata i32 %13, metadata !11738, metadata !DIExpression()), !dbg !11744
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11757
  %15 = lshr i32 %14, 6, !dbg !11758
  %16 = and i32 %15, 511, !dbg !11758
  %17 = mul i32 %16, %10, !dbg !11759
  %18 = udiv i32 %17, %13, !dbg !11760
  call void @llvm.dbg.value(metadata i32 %18, metadata !11739, metadata !DIExpression()), !dbg !11744
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11761
  %20 = lshr i32 %19, 8, !dbg !11762
  %21 = and i32 %20, 31, !dbg !11762
  %22 = add nuw nsw i32 %21, 1, !dbg !11763
  call void @llvm.dbg.value(metadata i32 %22, metadata !11738, metadata !DIExpression()), !dbg !11744
  %23 = udiv i32 %18, %22, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %23, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11765

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11766
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11769
  %27 = and i32 %26, 63, !dbg !11769
  %28 = udiv i32 16000000, %27, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %28, metadata !11740, metadata !DIExpression()), !dbg !11744
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11770
  %30 = lshr i32 %29, 24, !dbg !11771
  %31 = and i32 %30, 15, !dbg !11771
  call void @llvm.dbg.value(metadata i32 %31, metadata !11738, metadata !DIExpression()), !dbg !11744
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11772
  %33 = lshr i32 %32, 6, !dbg !11773
  %34 = and i32 %33, 511, !dbg !11773
  %35 = mul i32 %34, %28, !dbg !11774
  %36 = udiv i32 %35, %31, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %36, metadata !11739, metadata !DIExpression()), !dbg !11744
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11776
  %38 = and i32 %37, 31, !dbg !11777
  %39 = add nuw nsw i32 %38, 1, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %39, metadata !11738, metadata !DIExpression()), !dbg !11744
  %40 = udiv i32 %36, %39, !dbg !11779
  call void @llvm.dbg.value(metadata i32 %40, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11780

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11784
  %44 = and i32 %43, 63, !dbg !11784
  %45 = udiv i32 16000000, %44, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %45, metadata !11740, metadata !DIExpression()), !dbg !11744
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11785
  %47 = lshr i32 %46, 28, !dbg !11786
  %48 = and i32 %47, 7, !dbg !11786
  call void @llvm.dbg.value(metadata i32 %48, metadata !11738, metadata !DIExpression()), !dbg !11744
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11787
  %50 = lshr i32 %49, 6, !dbg !11788
  %51 = and i32 %50, 511, !dbg !11788
  %52 = mul i32 %51, %45, !dbg !11789
  %53 = udiv i32 %52, %48, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %53, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11791

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11792

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11794
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11797
  call void @llvm.dbg.value(metadata i32 %58, metadata !11742, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11744
  %59 = lshr i32 %58, 25, !dbg !11799
  %60 = and i32 %59, 3, !dbg !11799
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11799

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11800
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11804
  %64 = and i32 %63, 63, !dbg !11804
  %65 = udiv i32 16000000, %64, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %65, metadata !11740, metadata !DIExpression()), !dbg !11744
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11805
  %67 = lshr i32 %66, 6, !dbg !11806
  %68 = and i32 %67, 511, !dbg !11806
  %69 = mul i32 %68, %65, !dbg !11807
  call void @llvm.dbg.value(metadata i32 %69, metadata !11743, metadata !DIExpression()), !dbg !11744
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11808
  %71 = lshr i32 %70, 28, !dbg !11809
  %72 = and i32 %71, 7, !dbg !11809
  %73 = udiv i32 %69, %72, !dbg !11810
  call void @llvm.dbg.value(metadata i32 %73, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11811

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11812
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11815
  %77 = and i32 %76, 63, !dbg !11815
  %78 = udiv i32 16000000, %77, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %78, metadata !11740, metadata !DIExpression()), !dbg !11744
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11816
  %80 = lshr i32 %79, 6, !dbg !11817
  %81 = and i32 %80, 511, !dbg !11817
  %82 = mul i32 %81, %78, !dbg !11818
  call void @llvm.dbg.value(metadata i32 %82, metadata !11743, metadata !DIExpression()), !dbg !11744
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11819
  %84 = lshr i32 %83, 28, !dbg !11820
  %85 = and i32 %84, 7, !dbg !11820
  %86 = udiv i32 %82, %85, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %86, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11822

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11823
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %91, metadata !11742, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11744
  %92 = lshr i32 %91, 27, !dbg !11828
  %93 = and i32 %92, 3, !dbg !11828
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11828

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11829
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11833
  %97 = and i32 %96, 63, !dbg !11833
  %98 = udiv i32 16000000, %97, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %98, metadata !11740, metadata !DIExpression()), !dbg !11744
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11834
  %100 = lshr i32 %99, 6, !dbg !11835
  %101 = and i32 %100, 511, !dbg !11835
  %102 = mul i32 %101, %98, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %102, metadata !11743, metadata !DIExpression()), !dbg !11744
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11837
  %104 = lshr i32 %103, 28, !dbg !11838
  %105 = and i32 %104, 7, !dbg !11838
  %106 = udiv i32 %102, %105, !dbg !11839
  call void @llvm.dbg.value(metadata i32 %106, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11840

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11841
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11740, metadata !DIExpression()), !dbg !11744
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11844
  %110 = and i32 %109, 63, !dbg !11844
  %111 = udiv i32 16000000, %110, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %111, metadata !11740, metadata !DIExpression()), !dbg !11744
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11845
  %113 = lshr i32 %112, 6, !dbg !11846
  %114 = and i32 %113, 511, !dbg !11846
  %115 = mul i32 %114, %111, !dbg !11847
  call void @llvm.dbg.value(metadata i32 %115, metadata !11743, metadata !DIExpression()), !dbg !11744
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11848
  %117 = lshr i32 %116, 28, !dbg !11849
  %118 = and i32 %117, 7, !dbg !11849
  %119 = udiv i32 %115, %118, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %119, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123, !dbg !11851

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11852
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11739, metadata !DIExpression()), !dbg !11744
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11744
  call void @llvm.dbg.value(metadata i32 %124, metadata !11739, metadata !DIExpression()), !dbg !11744
  ret i32 %124, !dbg !11855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !11856 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11860, metadata !DIExpression()), !dbg !11861
  %2 = icmp eq i8 %0, 1, !dbg !11862
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11864
  %4 = and i32 %3, -9, !dbg !11865
  %5 = select i1 %2, i32 8, i32 0, !dbg !11865
  %6 = or i32 %4, %5, !dbg !11865
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11864
  ret void, !dbg !11866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11867 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11872, metadata !DIExpression()), !dbg !11874
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11875
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %2, metadata !11873, metadata !DIExpression()), !dbg !11874
  br label %3, !dbg !11877

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11878
  %5 = and i32 %4, 134217728, !dbg !11878
  %6 = icmp eq i32 %5, 0, !dbg !11878
  br i1 %6, label %11, label %7, !dbg !11877

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !11879
  %9 = sub i32 %8, %2, !dbg !11882
  %10 = icmp ugt i32 %9, 2, !dbg !11883
  br i1 %10, label %41, label %3, !dbg !11884, !llvm.loop !11885

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11887
  %13 = load i32, i32* %12, align 4, !dbg !11887
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11887
  %15 = load i32, i32* %14, align 4, !dbg !11887
  %16 = shl i32 %15, 6, !dbg !11887
  %17 = or i32 %16, %13, !dbg !11887
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11887
  %19 = load i32, i32* %18, align 4, !dbg !11887
  %20 = shl i32 %19, 15, !dbg !11887
  %21 = add i32 %20, -65536, !dbg !11887
  %22 = and i32 %21, -65536, !dbg !11887
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11887
  %24 = load i32, i32* %23, align 4, !dbg !11887
  %25 = shl i32 %24, 24, !dbg !11887
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11887
  %27 = load i32, i32* %26, align 4, !dbg !11887
  %28 = shl i32 %27, 28, !dbg !11887
  %29 = or i32 %17, %25, !dbg !11887
  %30 = or i32 %29, %22, !dbg !11887
  %31 = or i32 %30, %28, !dbg !11887
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11887
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11888
  %32 = tail call i32 @HAL_GetTick() #26, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %32, metadata !11873, metadata !DIExpression()), !dbg !11874
  br label %33, !dbg !11890

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11891
  %35 = and i32 %34, 134217728, !dbg !11892
  %36 = icmp eq i32 %35, 0, !dbg !11892
  br i1 %36, label %37, label %41, !dbg !11890

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #26, !dbg !11893
  %39 = sub i32 %38, %32, !dbg !11896
  %40 = icmp ugt i32 %39, 2, !dbg !11897
  br i1 %40, label %41, label %33, !dbg !11898, !llvm.loop !11899

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11874
  ret i32 %42, !dbg !11901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11902 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11907
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %1, metadata !11906, metadata !DIExpression()), !dbg !11909
  br label %2, !dbg !11910

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11911
  %4 = and i32 %3, 134217728, !dbg !11911
  %5 = icmp eq i32 %4, 0, !dbg !11912
  br i1 %5, label %10, label %6, !dbg !11910

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !11913
  %8 = sub i32 %7, %1, !dbg !11916
  %9 = icmp ugt i32 %8, 2, !dbg !11917
  br i1 %9, label %10, label %2, !dbg !11918, !llvm.loop !11919

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11909
  ret i32 %11, !dbg !11921
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11922 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11927, metadata !DIExpression()), !dbg !11929
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11930
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !11931
  call void @llvm.dbg.value(metadata i32 %2, metadata !11928, metadata !DIExpression()), !dbg !11929
  br label %3, !dbg !11932

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11933
  %5 = and i32 %4, 536870912, !dbg !11933
  %6 = icmp eq i32 %5, 0, !dbg !11933
  br i1 %6, label %11, label %7, !dbg !11932

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !11934
  %9 = sub i32 %8, %2, !dbg !11937
  %10 = icmp ugt i32 %9, 2, !dbg !11938
  br i1 %10, label %37, label %3, !dbg !11939, !llvm.loop !11940

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11942
  %13 = load i32, i32* %12, align 4, !dbg !11942
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11942
  %15 = load i32, i32* %14, align 4, !dbg !11942
  %16 = shl i32 %15, 6, !dbg !11942
  %17 = or i32 %16, %13, !dbg !11942
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11942
  %19 = load i32, i32* %18, align 4, !dbg !11942
  %20 = shl i32 %19, 15, !dbg !11942
  %21 = add i32 %20, -65536, !dbg !11942
  %22 = and i32 %21, -65536, !dbg !11942
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11942
  %24 = load i32, i32* %23, align 4, !dbg !11942
  %25 = shl i32 %24, 24, !dbg !11942
  %26 = or i32 %17, %25, !dbg !11942
  %27 = or i32 %26, %22, !dbg !11942
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11942
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11943
  %28 = tail call i32 @HAL_GetTick() #26, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %28, metadata !11928, metadata !DIExpression()), !dbg !11929
  br label %29, !dbg !11945

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11946
  %31 = and i32 %30, 536870912, !dbg !11947
  %32 = icmp eq i32 %31, 0, !dbg !11947
  br i1 %32, label %33, label %37, !dbg !11945

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #26, !dbg !11948
  %35 = sub i32 %34, %28, !dbg !11951
  %36 = icmp ugt i32 %35, 2, !dbg !11952
  br i1 %36, label %37, label %29, !dbg !11953, !llvm.loop !11954

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11929
  ret i32 %38, !dbg !11956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11957 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11960
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !11961
  call void @llvm.dbg.value(metadata i32 %1, metadata !11959, metadata !DIExpression()), !dbg !11962
  br label %2, !dbg !11963

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %4 = and i32 %3, 536870912, !dbg !11964
  %5 = icmp eq i32 %4, 0, !dbg !11964
  br i1 %5, label %10, label %6, !dbg !11963

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !11965
  %8 = sub i32 %7, %1, !dbg !11968
  %9 = icmp ugt i32 %8, 2, !dbg !11969
  br i1 %9, label %10, label %2, !dbg !11970, !llvm.loop !11971

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11962
  ret i32 %11, !dbg !11973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11974 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11976, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11977, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11978, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11979, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11980, metadata !DIExpression()), !dbg !11981
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11982
  %2 = lshr i32 %1, 2, !dbg !11983
  %3 = and i32 %2, 3, !dbg !11983
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11983

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11984
  %6 = and i32 %5, 63, !dbg !11987
  call void @llvm.dbg.value(metadata i32 %6, metadata !11976, metadata !DIExpression()), !dbg !11981
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11988
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11990
  %9 = lshr i32 %8, 6, !dbg !11990
  %10 = and i32 %9, 511, !dbg !11990
  %11 = zext i32 %10 to i64, !dbg !11990
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11990
  %13 = zext i32 %6 to i64, !dbg !11990
  %14 = udiv i64 %12, %13, !dbg !11990
  %15 = trunc i64 %14 to i32, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %15, metadata !11977, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 %15, metadata !11977, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 %15, metadata !11977, metadata !DIExpression()), !dbg !11981
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11991
  %17 = lshr i32 %16, 15, !dbg !11992
  %18 = and i32 %17, 6, !dbg !11992
  %19 = add nuw nsw i32 %18, 2, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %19, metadata !11978, metadata !DIExpression()), !dbg !11981
  %20 = udiv i32 %15, %19, !dbg !11993
  call void @llvm.dbg.value(metadata i32 %20, metadata !11980, metadata !DIExpression()), !dbg !11981
  br label %38, !dbg !11994

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11995
  %23 = and i32 %22, 63, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %23, metadata !11976, metadata !DIExpression()), !dbg !11981
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11998
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12000
  %26 = lshr i32 %25, 6, !dbg !12000
  %27 = and i32 %26, 511, !dbg !12000
  %28 = zext i32 %27 to i64, !dbg !12000
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !12000
  %30 = zext i32 %23 to i64, !dbg !12000
  %31 = udiv i64 %29, %30, !dbg !12000
  %32 = trunc i64 %31 to i32, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %32, metadata !11977, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 %32, metadata !11977, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 %32, metadata !11977, metadata !DIExpression()), !dbg !11981
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12001
  %34 = lshr i32 %33, 28, !dbg !12002
  %35 = and i32 %34, 7, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %35, metadata !11979, metadata !DIExpression()), !dbg !11981
  %36 = udiv i32 %32, %35, !dbg !12003
  call void @llvm.dbg.value(metadata i32 %36, metadata !11980, metadata !DIExpression()), !dbg !11981
  br label %38, !dbg !12004

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !12005
  call void @llvm.dbg.value(metadata i32 %39, metadata !11980, metadata !DIExpression()), !dbg !11981
  ret i32 %39, !dbg !12006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12007 {
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %1, metadata !12009, metadata !DIExpression()), !dbg !12011
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12012
  %3 = or i32 %2, 1, !dbg !12012
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12012
  br label %4, !dbg !12013

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12014
  %6 = and i32 %5, 2, !dbg !12014
  %7 = icmp eq i32 %6, 0, !dbg !12015
  br i1 %7, label %8, label %12, !dbg !12013

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #26, !dbg !12016
  %10 = sub i32 %9, %1, !dbg !12019
  %11 = icmp ugt i32 %10, 2, !dbg !12020
  br i1 %11, label %89, label %4, !dbg !12021, !llvm.loop !12022

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12024
  %14 = or i32 %13, 128, !dbg !12024
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12024
  %15 = tail call i32 @HAL_GetTick() #26, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %15, metadata !12009, metadata !DIExpression()), !dbg !12011
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12026
  br label %16, !dbg !12027

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12028
  %18 = and i32 %17, 12, !dbg !12028
  %19 = icmp eq i32 %18, 0, !dbg !12029
  %20 = tail call i32 @HAL_GetTick() #26, !dbg !12011
  br i1 %19, label %24, label %21, !dbg !12027

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !12030
  %23 = icmp ugt i32 %22, 5000, !dbg !12033
  br i1 %23, label %89, label %16, !dbg !12034, !llvm.loop !12035

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !12009, metadata !DIExpression()), !dbg !12011
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12037
  %26 = and i32 %25, -851969, !dbg !12037
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12037
  br label %27, !dbg !12038

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12039
  %29 = and i32 %28, 131072, !dbg !12039
  %30 = icmp eq i32 %29, 0, !dbg !12040
  %31 = tail call i32 @HAL_GetTick() #26, !dbg !12011
  br i1 %30, label %35, label %32, !dbg !12038

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !12041
  %34 = icmp ugt i32 %33, 100, !dbg !12044
  br i1 %34, label %89, label %27, !dbg !12045, !llvm.loop !12046

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !12009, metadata !DIExpression()), !dbg !12011
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12048
  %37 = and i32 %36, -16777217, !dbg !12048
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12048
  br label %38, !dbg !12049

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12050
  %40 = and i32 %39, 33554432, !dbg !12050
  %41 = icmp eq i32 %40, 0, !dbg !12051
  %42 = tail call i32 @HAL_GetTick() #26, !dbg !12011
  br i1 %41, label %46, label %43, !dbg !12049

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !12052
  %45 = icmp ugt i32 %44, 2, !dbg !12055
  br i1 %45, label %89, label %38, !dbg !12056, !llvm.loop !12057

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !12009, metadata !DIExpression()), !dbg !12011
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  %48 = and i32 %47, -67108865, !dbg !12059
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  br label %49, !dbg !12060

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12061
  %51 = and i32 %50, 134217728, !dbg !12061
  %52 = icmp eq i32 %51, 0, !dbg !12062
  %53 = tail call i32 @HAL_GetTick() #26, !dbg !12011
  br i1 %52, label %57, label %54, !dbg !12060

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !12063
  %56 = icmp ugt i32 %55, 2, !dbg !12066
  br i1 %56, label %89, label %49, !dbg !12067, !llvm.loop !12068

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !12009, metadata !DIExpression()), !dbg !12011
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12070
  %59 = and i32 %58, -268435457, !dbg !12070
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12070
  br label %60, !dbg !12071

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12072
  %62 = and i32 %61, 536870912, !dbg !12072
  %63 = icmp eq i32 %62, 0, !dbg !12073
  br i1 %63, label %68, label %64, !dbg !12071

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #26, !dbg !12074
  %66 = sub i32 %65, %53, !dbg !12077
  %67 = icmp ugt i32 %66, 2, !dbg !12078
  br i1 %67, label %89, label %60, !dbg !12079, !llvm.loop !12080

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12082
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12083
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12084
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12085
  %70 = and i32 %69, -7937, !dbg !12085
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12085
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12086
  %72 = and i32 %71, -8193, !dbg !12086
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12086
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12087
  %74 = and i32 %73, -16385, !dbg !12087
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12087
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12088
  %76 = or i32 %75, 10420224, !dbg !12088
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12088
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12089
  %78 = or i32 %77, 2097152, !dbg !12089
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12089
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12090
  %80 = or i32 %79, 4194304, !dbg !12090
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12090
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12091
  %82 = and i32 %81, -2, !dbg !12091
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12091
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12092
  %84 = or i32 %83, 16777216, !dbg !12092
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12092
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !12093
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !12094
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #26, !dbg !12096
  %87 = icmp ne i32 %86, 0, !dbg !12097
  %88 = zext i1 %87 to i32, !dbg !12098
  br label %89, !dbg !12098

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !12011
  ret i32 %90, !dbg !12099
}

; Function Attrs: optsize
declare !dbg !12100 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12103 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12129, metadata !DIExpression()), !dbg !12140
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12141
  br i1 %3, label %337, label %4, !dbg !12143

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12144
  %6 = load i32, i32* %5, align 4, !dbg !12144
  %7 = and i32 %6, 1, !dbg !12146
  %8 = icmp eq i32 %7, 0, !dbg !12147
  br i1 %8, label %74, label %9, !dbg !12148

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12149
  %11 = and i32 %10, 12, !dbg !12149
  %12 = icmp eq i32 %11, 4, !dbg !12152
  br i1 %12, label %29, label %13, !dbg !12153

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12154
  %15 = and i32 %14, 12, !dbg !12154
  %16 = icmp eq i32 %15, 8, !dbg !12155
  br i1 %16, label %17, label %21, !dbg !12156

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12157
  %19 = and i32 %18, 4194304, !dbg !12158
  %20 = icmp eq i32 %19, 0, !dbg !12159
  br i1 %20, label %21, label %29, !dbg !12160

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12161
  %23 = and i32 %22, 12, !dbg !12161
  %24 = icmp eq i32 %23, 12, !dbg !12162
  br i1 %24, label %25, label %37, !dbg !12163

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12164
  %27 = and i32 %26, 4194304, !dbg !12165
  %28 = icmp eq i32 %27, 0, !dbg !12166
  br i1 %28, label %37, label %29, !dbg !12167

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12168
  %31 = and i32 %30, 131072, !dbg !12168
  %32 = icmp eq i32 %31, 0, !dbg !12168
  br i1 %32, label %74, label %33, !dbg !12171

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12172
  %35 = load i32, i32* %34, align 4, !dbg !12172
  %36 = icmp eq i32 %35, 0, !dbg !12173
  br i1 %36, label %337, label %74, !dbg !12174

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12175
  %39 = load i32, i32* %38, align 4, !dbg !12175
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12179

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12180
  %42 = or i32 %41, 65536, !dbg !12180
  br label %53, !dbg !12180

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %45 = or i32 %44, 262144, !dbg !12182
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %47 = or i32 %46, 65536, !dbg !12182
  br label %53, !dbg !12182

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12185
  %50 = and i32 %49, -65537, !dbg !12185
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12185
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12185
  %52 = and i32 %51, -262145, !dbg !12185
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12187
  %55 = load i32, i32* %38, align 4, !dbg !12188
  %56 = icmp eq i32 %55, 0, !dbg !12190
  %57 = tail call i32 @HAL_GetTick() #26, !dbg !12191
  call void @llvm.dbg.value(metadata i32 %57, metadata !12130, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %57, metadata !12130, metadata !DIExpression()), !dbg !12140
  br i1 %56, label %66, label %58, !dbg !12192

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  %60 = and i32 %59, 131072, !dbg !12195
  %61 = icmp eq i32 %60, 0, !dbg !12195
  br i1 %61, label %62, label %74, !dbg !12196

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !12197
  %64 = sub i32 %63, %57, !dbg !12200
  %65 = icmp ugt i32 %64, 100, !dbg !12201
  br i1 %65, label %337, label %58, !dbg !12202, !llvm.loop !12203

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12205
  %68 = and i32 %67, 131072, !dbg !12205
  %69 = icmp eq i32 %68, 0, !dbg !12205
  br i1 %69, label %74, label %70, !dbg !12207

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #26, !dbg !12208
  %72 = sub i32 %71, %57, !dbg !12211
  %73 = icmp ugt i32 %72, 100, !dbg !12212
  br i1 %73, label %337, label %66, !dbg !12213, !llvm.loop !12214

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12216
  %76 = and i32 %75, 2, !dbg !12218
  %77 = icmp eq i32 %76, 0, !dbg !12219
  br i1 %77, label %137, label %78, !dbg !12220

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12221
  %80 = and i32 %79, 12, !dbg !12221
  %81 = icmp eq i32 %80, 0, !dbg !12224
  br i1 %81, label %98, label %82, !dbg !12225

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12226
  %84 = and i32 %83, 12, !dbg !12226
  %85 = icmp eq i32 %84, 8, !dbg !12227
  br i1 %85, label %86, label %90, !dbg !12228

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12229
  %88 = and i32 %87, 4194304, !dbg !12230
  %89 = icmp eq i32 %88, 0, !dbg !12231
  br i1 %89, label %98, label %90, !dbg !12232

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12233
  %92 = and i32 %91, 12, !dbg !12233
  %93 = icmp eq i32 %92, 12, !dbg !12234
  br i1 %93, label %94, label %106, !dbg !12235

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12236
  %96 = and i32 %95, 4194304, !dbg !12237
  %97 = icmp eq i32 %96, 0, !dbg !12238
  br i1 %97, label %98, label %106, !dbg !12239

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12240
  %100 = and i32 %99, 2, !dbg !12240
  %101 = icmp eq i32 %100, 0, !dbg !12240
  br i1 %101, label %130, label %102, !dbg !12243

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12244
  %104 = load i32, i32* %103, align 4, !dbg !12244
  %105 = icmp eq i32 %104, 1, !dbg !12245
  br i1 %105, label %130, label %337, !dbg !12246

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12247
  %108 = load i32, i32* %107, align 4, !dbg !12247
  %109 = icmp eq i32 %108, 0, !dbg !12250
  br i1 %109, label %120, label %110, !dbg !12251

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12252
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %111, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %112, !dbg !12255

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12256
  %114 = and i32 %113, 2, !dbg !12257
  %115 = icmp eq i32 %114, 0, !dbg !12257
  br i1 %115, label %116, label %130, !dbg !12255

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #26, !dbg !12258
  %118 = sub i32 %117, %111, !dbg !12261
  %119 = icmp ugt i32 %118, 2, !dbg !12262
  br i1 %119, label %337, label %112, !dbg !12263, !llvm.loop !12264

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12266
  %121 = tail call i32 @HAL_GetTick() #26, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %121, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %122, !dbg !12269

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12270
  %124 = and i32 %123, 2, !dbg !12270
  %125 = icmp eq i32 %124, 0, !dbg !12270
  br i1 %125, label %137, label %126, !dbg !12269

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #26, !dbg !12271
  %128 = sub i32 %127, %121, !dbg !12274
  %129 = icmp ugt i32 %128, 2, !dbg !12275
  br i1 %129, label %337, label %122, !dbg !12276, !llvm.loop !12277

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12279
  %132 = and i32 %131, -249, !dbg !12279
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12279
  %134 = load i32, i32* %133, align 4, !dbg !12279
  %135 = shl i32 %134, 3, !dbg !12279
  %136 = or i32 %135, %132, !dbg !12279
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12279
  br label %137, !dbg !12280

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12280
  %139 = and i32 %138, 8, !dbg !12282
  %140 = icmp eq i32 %139, 0, !dbg !12283
  br i1 %140, label %165, label %141, !dbg !12284

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12285
  %143 = load i32, i32* %142, align 4, !dbg !12285
  %144 = icmp eq i32 %143, 0, !dbg !12288
  br i1 %144, label %155, label %145, !dbg !12289

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12290
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !12292
  call void @llvm.dbg.value(metadata i32 %146, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %147, !dbg !12293

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12294
  %149 = and i32 %148, 2, !dbg !12295
  %150 = icmp eq i32 %149, 0, !dbg !12295
  br i1 %150, label %151, label %165, !dbg !12293

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #26, !dbg !12296
  %153 = sub i32 %152, %146, !dbg !12299
  %154 = icmp ugt i32 %153, 2, !dbg !12300
  br i1 %154, label %337, label %147, !dbg !12301, !llvm.loop !12302

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12304
  %156 = tail call i32 @HAL_GetTick() #26, !dbg !12306
  call void @llvm.dbg.value(metadata i32 %156, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %157, !dbg !12307

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12308
  %159 = and i32 %158, 2, !dbg !12308
  %160 = icmp eq i32 %159, 0, !dbg !12308
  br i1 %160, label %165, label %161, !dbg !12307

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #26, !dbg !12309
  %163 = sub i32 %162, %156, !dbg !12312
  %164 = icmp ugt i32 %163, 2, !dbg !12313
  br i1 %164, label %337, label %157, !dbg !12314, !llvm.loop !12315

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !12317
  %167 = and i32 %166, 4, !dbg !12318
  %168 = icmp eq i32 %167, 0, !dbg !12319
  br i1 %168, label %237, label %169, !dbg !12320

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12321
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12322
  %171 = and i32 %170, 268435456, !dbg !12322
  %172 = icmp eq i32 %171, 0, !dbg !12322
  br i1 %172, label %173, label %180, !dbg !12323

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !12324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !12324
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12136, metadata !DIExpression()), !dbg !12324
  store volatile i32 0, i32* %2, align 4, !dbg !12324
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12324
  %176 = or i32 %175, 268435456, !dbg !12324
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12324
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12324
  %178 = and i32 %177, 268435456, !dbg !12324
  store volatile i32 %178, i32* %2, align 4, !dbg !12324
  %179 = load volatile i32, i32* %2, align 4, !dbg !12324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !12325
  call void @llvm.dbg.value(metadata i32 1, metadata !12132, metadata !DIExpression()), !dbg !12321
  br label %180, !dbg !12326

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()), !dbg !12321
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12327
  %182 = and i32 %181, 256, !dbg !12327
  %183 = icmp eq i32 %182, 0, !dbg !12327
  br i1 %183, label %184, label %196, !dbg !12329

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12330
  %186 = or i32 %185, 256, !dbg !12330
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12330
  %187 = tail call i32 @HAL_GetTick() #26, !dbg !12332
  call void @llvm.dbg.value(metadata i32 %187, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %188, !dbg !12333

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12334
  %190 = and i32 %189, 256, !dbg !12334
  %191 = icmp eq i32 %190, 0, !dbg !12334
  br i1 %191, label %192, label %196, !dbg !12333

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #26, !dbg !12335
  %194 = sub i32 %193, %187, !dbg !12338
  %195 = icmp ugt i32 %194, 2, !dbg !12339
  br i1 %195, label %337, label %188, !dbg !12340, !llvm.loop !12341

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12343
  %198 = load i32, i32* %197, align 4, !dbg !12343
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !12346

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12347
  %201 = or i32 %200, 1, !dbg !12347
  br label %212, !dbg !12347

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12349
  %204 = or i32 %203, 4, !dbg !12349
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12349
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12349
  %206 = or i32 %205, 1, !dbg !12349
  br label %212, !dbg !12349

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12352
  %209 = and i32 %208, -2, !dbg !12352
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12352
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12352
  %211 = and i32 %210, -5, !dbg !12352
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12354
  %214 = load i32, i32* %197, align 4, !dbg !12355
  %215 = icmp eq i32 %214, 0, !dbg !12357
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %216, metadata !12130, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %216, metadata !12130, metadata !DIExpression()), !dbg !12140
  br i1 %215, label %225, label %217, !dbg !12359

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12360
  %219 = and i32 %218, 2, !dbg !12362
  %220 = icmp eq i32 %219, 0, !dbg !12362
  br i1 %220, label %221, label %233, !dbg !12363

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #26, !dbg !12364
  %223 = sub i32 %222, %216, !dbg !12367
  %224 = icmp ugt i32 %223, 5000, !dbg !12368
  br i1 %224, label %337, label %217, !dbg !12369, !llvm.loop !12370

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12372
  %227 = and i32 %226, 2, !dbg !12372
  %228 = icmp eq i32 %227, 0, !dbg !12372
  br i1 %228, label %233, label %229, !dbg !12374

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !12375
  %231 = sub i32 %230, %216, !dbg !12378
  %232 = icmp ugt i32 %231, 5000, !dbg !12379
  br i1 %232, label %337, label %225, !dbg !12380, !llvm.loop !12381

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !12383

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12384
  %236 = and i32 %235, -268435457, !dbg !12384
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12384
  br label %237, !dbg !12387

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12388
  %239 = load i32, i32* %238, align 4, !dbg !12388
  %240 = icmp eq i32 %239, 0, !dbg !12390
  br i1 %240, label %336, label %241, !dbg !12391

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  %243 = and i32 %242, 12, !dbg !12392
  %244 = icmp eq i32 %243, 8, !dbg !12395
  br i1 %244, label %297, label %245, !dbg !12396

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !12397
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12400
  %247 = tail call i32 @HAL_GetTick() #26, !dbg !12400
  call void @llvm.dbg.value(metadata i32 %247, metadata !12130, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %247, metadata !12130, metadata !DIExpression()), !dbg !12140
  br i1 %246, label %248, label %289, !dbg !12401

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12402
  %250 = and i32 %249, 33554432, !dbg !12402
  %251 = icmp eq i32 %250, 0, !dbg !12402
  br i1 %251, label %256, label %252, !dbg !12404

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #26, !dbg !12405
  %254 = sub i32 %253, %247, !dbg !12408
  %255 = icmp ugt i32 %254, 2, !dbg !12409
  br i1 %255, label %337, label %248, !dbg !12410, !llvm.loop !12411

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12413
  %258 = load i32, i32* %257, align 4, !dbg !12413
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12413
  %260 = load i32, i32* %259, align 4, !dbg !12413
  %261 = or i32 %260, %258, !dbg !12413
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12413
  %263 = load i32, i32* %262, align 4, !dbg !12413
  %264 = shl i32 %263, 6, !dbg !12413
  %265 = or i32 %261, %264, !dbg !12413
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12413
  %267 = load i32, i32* %266, align 4, !dbg !12413
  %268 = shl i32 %267, 15, !dbg !12413
  %269 = add i32 %268, -65536, !dbg !12413
  %270 = and i32 %269, -65536, !dbg !12413
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12413
  %272 = load i32, i32* %271, align 4, !dbg !12413
  %273 = shl i32 %272, 24, !dbg !12413
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12413
  %275 = load i32, i32* %274, align 4, !dbg !12413
  %276 = shl i32 %275, 28, !dbg !12413
  %277 = or i32 %265, %273, !dbg !12413
  %278 = or i32 %277, %270, !dbg !12413
  %279 = or i32 %278, %276, !dbg !12413
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12413
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12414
  %280 = tail call i32 @HAL_GetTick() #26, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %280, metadata !12130, metadata !DIExpression()), !dbg !12140
  br label %281, !dbg !12416

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12417
  %283 = and i32 %282, 33554432, !dbg !12418
  %284 = icmp eq i32 %283, 0, !dbg !12418
  br i1 %284, label %285, label %336, !dbg !12416

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #26, !dbg !12419
  %287 = sub i32 %286, %280, !dbg !12422
  %288 = icmp ugt i32 %287, 2, !dbg !12423
  br i1 %288, label %337, label %281, !dbg !12424, !llvm.loop !12425

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12427
  %291 = and i32 %290, 33554432, !dbg !12427
  %292 = icmp eq i32 %291, 0, !dbg !12427
  br i1 %292, label %336, label %293, !dbg !12429

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #26, !dbg !12430
  %295 = sub i32 %294, %247, !dbg !12433
  %296 = icmp ugt i32 %295, 2, !dbg !12434
  br i1 %296, label %337, label %289, !dbg !12435, !llvm.loop !12436

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12438
  br i1 %298, label %337, label %299, !dbg !12441

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12442
  call void @llvm.dbg.value(metadata i32 %300, metadata !12131, metadata !DIExpression()), !dbg !12140
  %301 = and i32 %300, 4194304, !dbg !12444
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12446
  %303 = load i32, i32* %302, align 4, !dbg !12446
  %304 = icmp eq i32 %301, %303, !dbg !12447
  br i1 %304, label %305, label %337, !dbg !12448

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12449
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12450
  %308 = load i32, i32* %307, align 4, !dbg !12450
  %309 = icmp eq i32 %306, %308, !dbg !12451
  br i1 %309, label %310, label %337, !dbg !12452

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12453
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12454
  %313 = load i32, i32* %312, align 4, !dbg !12454
  %314 = shl i32 %313, 6, !dbg !12455
  %315 = icmp eq i32 %311, %314, !dbg !12456
  br i1 %315, label %316, label %337, !dbg !12457

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12458
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12459
  %319 = load i32, i32* %318, align 4, !dbg !12459
  %320 = shl i32 %319, 15, !dbg !12460
  %321 = add i32 %320, -65536, !dbg !12460
  %322 = and i32 %321, -65536, !dbg !12460
  %323 = icmp eq i32 %317, %322, !dbg !12461
  br i1 %323, label %324, label %337, !dbg !12462

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12463
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12464
  %327 = load i32, i32* %326, align 4, !dbg !12464
  %328 = shl i32 %327, 24, !dbg !12465
  %329 = icmp eq i32 %325, %328, !dbg !12466
  br i1 %329, label %330, label %337, !dbg !12467

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12468
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12469
  %333 = load i32, i32* %332, align 4, !dbg !12469
  %334 = shl i32 %333, 28, !dbg !12470
  %335 = icmp eq i32 %331, %334, !dbg !12471
  br i1 %335, label %336, label %337, !dbg !12472

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12473

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12140
  ret i32 %338, !dbg !12474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !12475 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12479, metadata !DIExpression()), !dbg !12480
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12481
  store i32 15, i32* %2, align 4, !dbg !12482
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12483
  %4 = and i32 %3, 262144, !dbg !12485
  %5 = icmp eq i32 %4, 0, !dbg !12486
  br i1 %5, label %8, label %6, !dbg !12487

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12488
  store i32 327680, i32* %7, align 4, !dbg !12490
  br label %15, !dbg !12491

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12492
  %10 = and i32 %9, 65536, !dbg !12494
  %11 = icmp eq i32 %10, 0, !dbg !12495
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12496
  br i1 %11, label %14, label %13, !dbg !12497

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12498
  br label %15, !dbg !12500

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12501
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12503
  %17 = and i32 %16, 1, !dbg !12505
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12506
  store i32 %17, i32* %18, align 4, !dbg !12508
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12509
  %20 = lshr i32 %19, 3, !dbg !12510
  %21 = and i32 %20, 31, !dbg !12510
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12511
  store i32 %21, i32* %22, align 4, !dbg !12512
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12513
  %24 = and i32 %23, 4, !dbg !12515
  %25 = icmp eq i32 %24, 0, !dbg !12516
  br i1 %25, label %28, label %26, !dbg !12517

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12518
  store i32 5, i32* %27, align 4, !dbg !12520
  br label %35, !dbg !12521

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12522
  %30 = and i32 %29, 1, !dbg !12524
  %31 = icmp eq i32 %30, 0, !dbg !12525
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12526
  br i1 %31, label %34, label %33, !dbg !12527

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12528
  br label %35, !dbg !12530

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12531
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12533
  %37 = and i32 %36, 1, !dbg !12535
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12536
  store i32 %37, i32* %38, align 4, !dbg !12538
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12539
  %40 = and i32 %39, 16777216, !dbg !12541
  %41 = icmp eq i32 %40, 0, !dbg !12542
  %42 = select i1 %41, i32 1, i32 2, !dbg !12543
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12544
  store i32 %42, i32* %43, align 4, !dbg !12546
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12547
  %45 = and i32 %44, 4194304, !dbg !12548
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12549
  store i32 %45, i32* %46, align 4, !dbg !12550
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12551
  %48 = and i32 %47, 63, !dbg !12552
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12553
  store i32 %48, i32* %49, align 4, !dbg !12554
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12555
  %51 = lshr i32 %50, 6, !dbg !12556
  %52 = and i32 %51, 511, !dbg !12556
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12557
  store i32 %52, i32* %53, align 4, !dbg !12558
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12559
  %55 = shl i32 %54, 1, !dbg !12560
  %56 = and i32 %55, 393216, !dbg !12560
  %57 = add nuw nsw i32 %56, 131072, !dbg !12560
  %58 = lshr exact i32 %57, 16, !dbg !12561
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12562
  store i32 %58, i32* %59, align 4, !dbg !12563
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12564
  %61 = lshr i32 %60, 24, !dbg !12565
  %62 = and i32 %61, 15, !dbg !12565
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12566
  store i32 %62, i32* %63, align 4, !dbg !12567
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12568
  %65 = lshr i32 %64, 28, !dbg !12569
  %66 = and i32 %65, 7, !dbg !12569
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12570
  store i32 %66, i32* %67, align 4, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12576, metadata !DIExpression()), !dbg !12577
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !12578
  ret void, !dbg !12579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 1000, metadata !12584, metadata !DIExpression()), !dbg !12585
  %2 = udiv i32 %0, 1000, !dbg !12586
  %3 = add nsw i32 %2, -1, !dbg !12587
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12588
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12589
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12590
  ret void, !dbg !12591
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12592 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12594, metadata !DIExpression()), !dbg !12596
  %3 = bitcast i32* %2 to i8*, !dbg !12597
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12597
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12595, metadata !DIExpression()), !dbg !12598
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12599
  store volatile i32 %4, i32* %2, align 4, !dbg !12598
  %5 = load volatile i32, i32* %2, align 4, !dbg !12600
  %6 = icmp eq i32 %0, -1, !dbg !12601
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12594, metadata !DIExpression()), !dbg !12596
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %8, metadata !12594, metadata !DIExpression()), !dbg !12596
  br label %9, !dbg !12603

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12594, metadata !DIExpression()), !dbg !12596
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12604
  call void @llvm.dbg.value(metadata i32 undef, metadata !12594, metadata !DIExpression()), !dbg !12596
  %12 = shl i32 %11, 15, !dbg !12596
  %13 = ashr i32 %12, 31, !dbg !12596
  %14 = add i32 %13, %10, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %14, metadata !12594, metadata !DIExpression()), !dbg !12596
  %15 = icmp eq i32 %14, 0, !dbg !12603
  br i1 %15, label %16, label %9, !dbg !12603

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12607
  ret void, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12610, metadata !DIExpression()), !dbg !12611
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12612
  ret void, !dbg !12613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12619, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 0, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 0, metadata !12623, metadata !DIExpression()), !dbg !12624
  %2 = icmp eq i32 %0, 0, !dbg !12625
  br i1 %2, label %72, label %3, !dbg !12627

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12628
  %5 = icmp eq i32 %4, 49152, !dbg !12631
  br i1 %5, label %6, label %21, !dbg !12632

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12633
  %8 = select i1 %7, i32 0, i32 5, !dbg !12636
  call void @llvm.dbg.value(metadata i32 %8, metadata !12622, metadata !DIExpression()), !dbg !12624
  %9 = add i32 %0, -120000001, !dbg !12637
  %10 = icmp ult i32 %9, 30000000, !dbg !12637
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12637
  call void @llvm.dbg.value(metadata i32 %11, metadata !12622, metadata !DIExpression()), !dbg !12624
  %12 = icmp ult i32 %9, -30000000, !dbg !12639
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12639
  call void @llvm.dbg.value(metadata i32 %13, metadata !12622, metadata !DIExpression()), !dbg !12624
  %14 = icmp ugt i32 %0, 60000000, !dbg !12641
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12643
  br i1 %16, label %21, label %17, !dbg !12643

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12644
  %19 = and i1 %18, %15, !dbg !12647
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12647
  br label %21, !dbg !12647

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12624
  call void @llvm.dbg.value(metadata i32 %22, metadata !12622, metadata !DIExpression()), !dbg !12624
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12648
  %24 = icmp eq i32 %23, 32768, !dbg !12650
  br i1 %24, label %25, label %45, !dbg !12651

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12652
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12655
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12655
  call void @llvm.dbg.value(metadata i32 %29, metadata !12622, metadata !DIExpression()), !dbg !12624
  %30 = icmp ugt i32 %0, 12000000, !dbg !12656
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12658
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %33, metadata !12622, metadata !DIExpression()), !dbg !12624
  %34 = icmp ugt i32 %0, 90000000, !dbg !12659
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12661
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %37, metadata !12622, metadata !DIExpression()), !dbg !12624
  %38 = icmp ugt i32 %0, 60000000, !dbg !12662
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12664
  br i1 %40, label %45, label %41, !dbg !12664

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12665
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12668
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12668
  br label %45, !dbg !12668

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12669
  call void @llvm.dbg.value(metadata i32 %46, metadata !12622, metadata !DIExpression()), !dbg !12624
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12670
  %48 = icmp eq i32 %47, 16384, !dbg !12672
  br i1 %48, label %49, label %61, !dbg !12673

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12674
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12677
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %53, metadata !12622, metadata !DIExpression()), !dbg !12624
  %54 = icmp ugt i32 %0, 60000000, !dbg !12678
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12680
  br i1 %56, label %61, label %57, !dbg !12680

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12681
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12684
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12684
  br label %61, !dbg !12684

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12669
  call void @llvm.dbg.value(metadata i32 %62, metadata !12622, metadata !DIExpression()), !dbg !12624
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #27, !dbg !12685
  call void @llvm.dbg.value(metadata i32 2, metadata !12620, metadata !DIExpression()), !dbg !12624
  br label %63, !dbg !12686

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12669
  call void @llvm.dbg.value(metadata i32 %64, metadata !12620, metadata !DIExpression()), !dbg !12624
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %65, metadata !12621, metadata !DIExpression()), !dbg !12624
  %66 = add nsw i32 %64, -1, !dbg !12689
  call void @llvm.dbg.value(metadata i32 %66, metadata !12620, metadata !DIExpression()), !dbg !12624
  %67 = icmp ne i32 %65, %62, !dbg !12690
  %68 = icmp ne i32 %66, 0, !dbg !12691
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12691
  br i1 %69, label %63, label %70, !dbg !12692, !llvm.loop !12693

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12695
  call void @llvm.dbg.value(metadata i32 %73, metadata !12623, metadata !DIExpression()), !dbg !12624
  ret i32 %73, !dbg !12696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12699
  %2 = and i32 %1, 49152, !dbg !12699
  ret i32 %2, !dbg !12700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12703, metadata !DIExpression()), !dbg !12704
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12705
  %3 = and i32 %2, -16, !dbg !12705
  %4 = or i32 %3, %0, !dbg !12705
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12708
  %2 = and i32 %1, 15, !dbg !12708
  ret i32 %2, !dbg !12709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12710 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12728, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12729, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.value(metadata i32 0, metadata !12730, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.value(metadata i32 0, metadata !12731, metadata !DIExpression()), !dbg !12732
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12733
  %4 = icmp eq i32 %3, 0, !dbg !12735
  br i1 %4, label %5, label %21, !dbg !12736

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12737
  call void @llvm.dbg.value(metadata i32 %6, metadata !12731, metadata !DIExpression()), !dbg !12732
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.87() #27, !dbg !12739
  %8 = icmp eq i32 %7, 1, !dbg !12741
  br i1 %8, label %13, label %9, !dbg !12742

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.88() #27, !dbg !12743
  br label %10, !dbg !12745

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.87() #27, !dbg !12746
  %12 = icmp eq i32 %11, 1, !dbg !12747
  br i1 %12, label %13, label %10, !dbg !12745, !llvm.loop !12748

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12750
  %15 = load i32, i32* %14, align 4, !dbg !12750
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12751
  %17 = load i32, i32* %16, align 4, !dbg !12751
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12752
  %19 = load i32, i32* %18, align 4, !dbg !12752
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.89(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12753
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12754
  call void @llvm.dbg.value(metadata i32 %20, metadata !12730, metadata !DIExpression()), !dbg !12732
  br label %21, !dbg !12755

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12756
  call void @llvm.dbg.value(metadata i32 %22, metadata !12730, metadata !DIExpression()), !dbg !12732
  ret i32 %22, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12758 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.91() #27, !dbg !12764
  %2 = icmp ne i32 %1, 0, !dbg !12766
  call void @llvm.dbg.value(metadata i1 %2, metadata !12762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12763
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #27, !dbg !12767
  %4 = icmp ne i32 %3, 0, !dbg !12769
  call void @llvm.dbg.value(metadata i1 undef, metadata !12762, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12763
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12770
  %6 = icmp ne i32 %5, 0, !dbg !12772
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12773
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12773
  %9 = zext i1 %8 to i32, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %9, metadata !12762, metadata !DIExpression()), !dbg !12763
  ret i32 %9, !dbg !12774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12779, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12780, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata i32 0, metadata !12781, metadata !DIExpression()), !dbg !12782
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12783
  %4 = load i32, i32* %3, align 4, !dbg !12783
  %5 = and i32 %4, 63, !dbg !12784
  %6 = udiv i32 %0, %5, !dbg !12785
  call void @llvm.dbg.value(metadata i32 %6, metadata !12781, metadata !DIExpression()), !dbg !12782
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12786
  %8 = load i32, i32* %7, align 4, !dbg !12786
  %9 = and i32 %8, 511, !dbg !12787
  %10 = mul i32 %9, %6, !dbg !12788
  call void @llvm.dbg.value(metadata i32 %10, metadata !12781, metadata !DIExpression()), !dbg !12782
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12789
  %12 = load i32, i32* %11, align 4, !dbg !12789
  %13 = lshr i32 %12, 15, !dbg !12790
  %14 = and i32 %13, 131070, !dbg !12790
  %15 = add nuw nsw i32 %14, 2, !dbg !12790
  %16 = udiv i32 %10, %15, !dbg !12791
  call void @llvm.dbg.value(metadata i32 %16, metadata !12781, metadata !DIExpression()), !dbg !12782
  ret i32 %16, !dbg !12792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.87() unnamed_addr #16 !dbg !12793 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12794
  %2 = lshr i32 %1, 1, !dbg !12795
  %3 = and i32 %2, 1, !dbg !12795
  ret i32 %3, !dbg !12796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.88() unnamed_addr #15 !dbg !12797 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12798
  %2 = or i32 %1, 1, !dbg !12798
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12798
  ret void, !dbg !12799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.89(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12802, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata i32 %1, metadata !12803, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata i32 %2, metadata !12804, metadata !DIExpression()), !dbg !12806
  call void @llvm.dbg.value(metadata i32 %3, metadata !12805, metadata !DIExpression()), !dbg !12806
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12807
  %6 = and i32 %5, -4227072, !dbg !12807
  %7 = or i32 %1, %0, !dbg !12807
  %8 = shl i32 %2, 6, !dbg !12807
  %9 = or i32 %7, %8, !dbg !12807
  %10 = or i32 %9, %6, !dbg !12807
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12807
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12808
  %12 = and i32 %11, -196609, !dbg !12808
  %13 = or i32 %12, %3, !dbg !12808
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12808
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12809
  %15 = and i32 %14, -1879048193, !dbg !12809
  %16 = or i32 %15, %3, !dbg !12809
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12809
  ret void, !dbg !12810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12815, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12816, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i32 0, metadata !12818, metadata !DIExpression()), !dbg !12819
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12820
  %4 = load i32, i32* %3, align 4, !dbg !12820
  %5 = lshr i32 %4, 4, !dbg !12820
  %6 = and i32 %5, 15, !dbg !12820
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12820
  %8 = load i8, i8* %7, align 1, !dbg !12820
  %9 = zext i8 %8 to i32, !dbg !12820
  %10 = lshr i32 %0, %9, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %10, metadata !12818, metadata !DIExpression()), !dbg !12819
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12821
  %12 = icmp ult i32 %11, %10, !dbg !12823
  br i1 %12, label %13, label %16, !dbg !12824

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12825
  call void @llvm.dbg.value(metadata i32 %14, metadata !12817, metadata !DIExpression()), !dbg !12819
  %15 = icmp eq i32 %14, 0, !dbg !12827
  br i1 %15, label %16, label %30, !dbg !12829

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.90() #27, !dbg !12830
  br label %17, !dbg !12832

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.91() #27, !dbg !12833
  %19 = icmp eq i32 %18, 1, !dbg !12834
  br i1 %19, label %20, label %17, !dbg !12832, !llvm.loop !12835

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12837
  tail call fastcc void @LL_RCC_SetAHBPrescaler.92(i32 noundef %21) #27, !dbg !12838
  tail call fastcc void @LL_RCC_SetSysClkSource.93() #27, !dbg !12839
  br label %22, !dbg !12840

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.94() #27, !dbg !12841
  %24 = icmp eq i32 %23, 8, !dbg !12842
  br i1 %24, label %25, label %22, !dbg !12840, !llvm.loop !12843

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12845
  %27 = load i32, i32* %26, align 4, !dbg !12845
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.95(i32 noundef %27) #27, !dbg !12846
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12847
  %29 = load i32, i32* %28, align 4, !dbg !12847
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.96(i32 noundef %29) #27, !dbg !12848
  br label %30, !dbg !12849

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12850
  %33 = icmp ugt i32 %32, %10, !dbg !12852
  br i1 %33, label %34, label %36, !dbg !12853

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %35, metadata !12817, metadata !DIExpression()), !dbg !12819
  br label %36, !dbg !12856

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12819
  call void @llvm.dbg.value(metadata i32 %37, metadata !12817, metadata !DIExpression()), !dbg !12819
  %38 = icmp eq i32 %37, 0, !dbg !12857
  br i1 %38, label %39, label %40, !dbg !12859

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12860
  br label %40, !dbg !12862

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.90() unnamed_addr #15 !dbg !12864 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  %2 = or i32 %1, 16777216, !dbg !12865
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  ret void, !dbg !12866
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.91() unnamed_addr #16 !dbg !12867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12868
  %2 = lshr i32 %1, 25, !dbg !12869
  %3 = and i32 %2, 1, !dbg !12869
  ret i32 %3, !dbg !12870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.92(i32 noundef %0) unnamed_addr #15 !dbg !12871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12873, metadata !DIExpression()), !dbg !12874
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %3 = and i32 %2, -241, !dbg !12875
  %4 = or i32 %3, %0, !dbg !12875
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.93() unnamed_addr #15 !dbg !12877 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12879, metadata !DIExpression()), !dbg !12880
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12881
  %2 = and i32 %1, -4, !dbg !12881
  %3 = or i32 %2, 2, !dbg !12881
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12881
  ret void, !dbg !12882
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.94() unnamed_addr #16 !dbg !12883 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12884
  %2 = and i32 %1, 12, !dbg !12884
  ret i32 %2, !dbg !12885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.95(i32 noundef %0) unnamed_addr #15 !dbg !12886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  %3 = and i32 %2, -7169, !dbg !12890
  %4 = or i32 %3, %0, !dbg !12890
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  ret void, !dbg !12891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.96(i32 noundef %0) unnamed_addr #15 !dbg !12892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12894, metadata !DIExpression()), !dbg !12895
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12896
  %3 = and i32 %2, -57345, !dbg !12896
  %4 = or i32 %3, %0, !dbg !12896
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12896
  ret void, !dbg !12897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !12898 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12899
  %2 = lshr i32 %1, 29, !dbg !12900
  %3 = and i32 %2, 1, !dbg !12900
  ret i32 %3, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12903
  %2 = lshr i32 %1, 27, !dbg !12904
  %3 = and i32 %2, 1, !dbg !12904
  ret i32 %3, !dbg !12905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12910, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 %1, metadata !12911, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12912, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12913, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 0, metadata !12914, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 0, metadata !12915, metadata !DIExpression()), !dbg !12916
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12917
  %6 = icmp eq i32 %5, 0, !dbg !12919
  br i1 %6, label %7, label %27, !dbg !12920

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12921
  call void @llvm.dbg.value(metadata i32 %8, metadata !12915, metadata !DIExpression()), !dbg !12916
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.97() #27, !dbg !12923
  %10 = icmp eq i32 %9, 1, !dbg !12925
  br i1 %10, label %19, label %11, !dbg !12926

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12927
  br i1 %12, label %13, label %14, !dbg !12930

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12931
  br label %15, !dbg !12933

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.98() #27, !dbg !12934
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.99() #27, !dbg !12936
  br label %16, !dbg !12937

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.97() #27, !dbg !12938
  %18 = icmp eq i32 %17, 1, !dbg !12939
  br i1 %18, label %19, label %16, !dbg !12937, !llvm.loop !12940

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12942
  %21 = load i32, i32* %20, align 4, !dbg !12942
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12943
  %23 = load i32, i32* %22, align 4, !dbg !12943
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12944
  %25 = load i32, i32* %24, align 4, !dbg !12944
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.89(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12945
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12946
  call void @llvm.dbg.value(metadata i32 %26, metadata !12914, metadata !DIExpression()), !dbg !12916
  br label %27, !dbg !12947

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12948
  call void @llvm.dbg.value(metadata i32 %28, metadata !12914, metadata !DIExpression()), !dbg !12916
  ret i32 %28, !dbg !12949
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.97() unnamed_addr #16 !dbg !12950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12951
  %2 = lshr i32 %1, 17, !dbg !12952
  %3 = and i32 %2, 1, !dbg !12952
  ret i32 %3, !dbg !12953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12954 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12955
  %2 = or i32 %1, 262144, !dbg !12955
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12955
  ret void, !dbg !12956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.98() unnamed_addr #15 !dbg !12957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12958
  %2 = and i32 %1, -262145, !dbg !12958
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12958
  ret void, !dbg !12959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.99() unnamed_addr #15 !dbg !12960 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12961
  %2 = or i32 %1, 65536, !dbg !12961
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12961
  ret void, !dbg !12962
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12963 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12966, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata i32 undef, metadata !12966, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata i32 undef, metadata !12966, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12984 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12988, metadata !DIExpression()), !dbg !12990
  %2 = icmp eq i8* %0, null, !dbg !12991
  br i1 %2, label %29, label %3, !dbg !12993

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12994
  %5 = icmp eq i8 %4, 0, !dbg !12995
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12996
  br i1 %6, label %29, label %8, !dbg !12996

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12989, metadata !DIExpression()), !dbg !12990
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12997

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12989, metadata !DIExpression()), !dbg !12990
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12999
  br i1 %10, label %11, label %15, !dbg !13004

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13005
  %13 = load i8*, i8** %12, align 4, !dbg !13005
  %14 = icmp eq i8* %13, %0, !dbg !13006
  br i1 %14, label %29, label %15, !dbg !13007

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13008
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12989, metadata !DIExpression()), !dbg !12990
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13009
  br i1 %17, label %7, label %8, !dbg !13010, !llvm.loop !13011

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12989, metadata !DIExpression()), !dbg !12990
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !13013
  br i1 %20, label %21, label %26, !dbg !13017

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13018
  %23 = load i8*, i8** %22, align 4, !dbg !13018
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !13019
  %25 = icmp eq i32 %24, 0, !dbg !13020
  br i1 %25, label %29, label %26, !dbg !13021

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13022
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12989, metadata !DIExpression()), !dbg !12990
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13023
  br i1 %28, label %29, label %18, !dbg !12997, !llvm.loop !13024

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12990
  ret %struct.device* %30, !dbg !13026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13031, metadata !DIExpression()), !dbg !13032
  %2 = icmp eq %struct.device* %0, null, !dbg !13033
  br i1 %2, label %14, label %3, !dbg !13035

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13036
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13036
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13037
  %7 = load i8, i8* %6, align 1, !dbg !13037
  %8 = and i8 %7, 1, !dbg !13037
  %9 = icmp eq i8 %8, 0, !dbg !13037
  br i1 %9, label %14, label %10, !dbg !13038

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13039
  %12 = load i8, i8* %11, align 1, !dbg !13039
  %13 = icmp eq i8 %12, 0, !dbg !13040
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13032
  ret i1 %15, !dbg !13041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13042 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13047, metadata !DIExpression()), !dbg !13048
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13049
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13051 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13059, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13060, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.value(metadata i8* %2, metadata !13061, metadata !DIExpression()), !dbg !13064
  %5 = bitcast i32* %4 to i8*, !dbg !13065
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13065
  call void @llvm.dbg.value(metadata i32 0, metadata !13062, metadata !DIExpression()), !dbg !13064
  store i32 0, i32* %4, align 4, !dbg !13066
  call void @llvm.dbg.value(metadata i32* %4, metadata !13062, metadata !DIExpression(DW_OP_deref)), !dbg !13064
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13067
  call void @llvm.dbg.value(metadata i16* %6, metadata !13063, metadata !DIExpression()), !dbg !13064
  %7 = load i32, i32* %4, align 4, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %7, metadata !13062, metadata !DIExpression()), !dbg !13064
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13070
  ret i32 %8, !dbg !13071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13076, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata i32* %1, metadata !13077, metadata !DIExpression()), !dbg !13082
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13083
  %4 = load i16*, i16** %3, align 4, !dbg !13083
  call void @llvm.dbg.value(metadata i16* %4, metadata !13078, metadata !DIExpression()), !dbg !13082
  %5 = icmp eq i16* %4, null, !dbg !13084
  br i1 %5, label %14, label %6, !dbg !13085

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13086
  call void @llvm.dbg.value(metadata i32 %7, metadata !13079, metadata !DIExpression()), !dbg !13086
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13087
  %9 = load i16, i16* %8, align 2, !dbg !13087
  %10 = add i16 %9, -32767, !dbg !13088
  %11 = icmp ult i16 %10, 2, !dbg !13088
  %12 = add i32 %7, 1, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %12, metadata !13079, metadata !DIExpression()), !dbg !13086
  br i1 %11, label %13, label %6, !dbg !13088, !llvm.loop !13091

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13094
  br label %14, !dbg !13095

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13097 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13101, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32 %1, metadata !13102, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13103, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i8* %3, metadata !13104, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.value(metadata i32 0, metadata !13105, metadata !DIExpression()), !dbg !13113
  %5 = icmp eq i32 %1, 0, !dbg !13114
  br i1 %5, label %16, label %8, !dbg !13115

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13105, metadata !DIExpression()), !dbg !13113
  %7 = icmp eq i32 %15, %1, !dbg !13114
  br i1 %7, label %16, label %8, !dbg !13115, !llvm.loop !13116

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13105, metadata !DIExpression()), !dbg !13113
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13118
  %11 = load i16, i16* %10, align 2, !dbg !13118
  call void @llvm.dbg.value(metadata i16 %11, metadata !13107, metadata !DIExpression()), !dbg !13119
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !13120
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13110, metadata !DIExpression()), !dbg !13119
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !13121
  call void @llvm.dbg.value(metadata i32 %13, metadata !13111, metadata !DIExpression()), !dbg !13119
  %14 = icmp slt i32 %13, 0, !dbg !13122
  %15 = add nuw i32 %9, 1, !dbg !13124
  call void @llvm.dbg.value(metadata i32 %15, metadata !13105, metadata !DIExpression()), !dbg !13113
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13126 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13130, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13131, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13132, metadata !DIExpression()), !dbg !13133
  %2 = sext i16 %0 to i32, !dbg !13134
  %3 = icmp slt i16 %0, 1, !dbg !13136
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13137
  %6 = add nsw i32 %2, -1, !dbg !13137
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13137
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13137
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13131, metadata !DIExpression()), !dbg !13133
  ret %struct.device* %8, !dbg !13138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13139 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13141, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13142, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i8* %2, metadata !13143, metadata !DIExpression()), !dbg !13146
  %5 = bitcast i32* %4 to i8*, !dbg !13147
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13147
  call void @llvm.dbg.value(metadata i32 0, metadata !13144, metadata !DIExpression()), !dbg !13146
  store i32 0, i32* %4, align 4, !dbg !13148
  call void @llvm.dbg.value(metadata i32* %4, metadata !13144, metadata !DIExpression(DW_OP_deref)), !dbg !13146
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !13149
  call void @llvm.dbg.value(metadata i16* %6, metadata !13145, metadata !DIExpression()), !dbg !13146
  %7 = load i32, i32* %4, align 4, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %7, metadata !13144, metadata !DIExpression()), !dbg !13146
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !13151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13152
  ret i32 %8, !dbg !13153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13156, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32* %1, metadata !13157, metadata !DIExpression()), !dbg !13161
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13162
  %4 = load i16*, i16** %3, align 4, !dbg !13162
  call void @llvm.dbg.value(metadata i16* %4, metadata !13158, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 0, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 0, metadata !13160, metadata !DIExpression()), !dbg !13161
  %5 = icmp eq i16* %4, null, !dbg !13163
  br i1 %5, label %22, label %6, !dbg !13165

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13159, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i16* %8, metadata !13158, metadata !DIExpression()), !dbg !13161
  %9 = load i16, i16* %8, align 2, !dbg !13166
  %10 = icmp eq i16 %9, -32768, !dbg !13170
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13161
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13171
  call void @llvm.dbg.value(metadata i16* %11, metadata !13158, metadata !DIExpression()), !dbg !13161
  %12 = zext i1 %10 to i32, !dbg !13172
  %13 = add i32 %7, %12, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %13, metadata !13159, metadata !DIExpression()), !dbg !13161
  %14 = icmp eq i32 %13, 2, !dbg !13173
  br i1 %14, label %15, label %6, !dbg !13174

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13161
  call void @llvm.dbg.value(metadata i32 %16, metadata !13160, metadata !DIExpression()), !dbg !13161
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13175
  %18 = load i16, i16* %17, align 2, !dbg !13175
  %19 = icmp eq i16 %18, 32767, !dbg !13176
  %20 = add i32 %16, 1, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %20, metadata !13160, metadata !DIExpression()), !dbg !13161
  br i1 %19, label %21, label %15, !dbg !13179, !llvm.loop !13180

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13182
  br label %22, !dbg !13183

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13184
  call void @llvm.dbg.value(metadata i16* %23, metadata !13158, metadata !DIExpression()), !dbg !13161
  ret i16* %23, !dbg !13185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13186 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13189
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13190
  ret i32* %2, !dbg !13191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13192 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13341, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13342, metadata !DIExpression()), !dbg !13343
  ret void, !dbg !13344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13349, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.value(metadata i32 %1, metadata !13350, metadata !DIExpression()), !dbg !13351
  ret void, !dbg !13352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13357, metadata !DIExpression()), !dbg !13359
  call void @llvm.dbg.value(metadata i32 %1, metadata !13358, metadata !DIExpression()), !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13365, metadata !DIExpression()), !dbg !13367
  call void @llvm.dbg.value(metadata i8* %1, metadata !13366, metadata !DIExpression()), !dbg !13367
  ret i32 -134, !dbg !13368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13373, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i8* %1, metadata !13374, metadata !DIExpression()), !dbg !13375
  ret i32 -134, !dbg !13376
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13381
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13382, !srcloc !13388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13385, metadata !DIExpression()) #25, !dbg !13389
  call void @llvm.dbg.value(metadata i32 undef, metadata !13386, metadata !DIExpression()) #25, !dbg !13389
  br label %3, !dbg !13390

3:                                                ; preds = %3, %1
  br label %3, !dbg !13391, !llvm.loop !13394
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13401, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13402, metadata !DIExpression()), !dbg !13403
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13404
  unreachable, !dbg !13404
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13407, metadata !DIExpression()), !dbg !13408
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13409
  unreachable, !dbg !13409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13413, metadata !DIExpression()), !dbg !13416
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13417, !srcloc !13388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13385, metadata !DIExpression()) #25, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13386, metadata !DIExpression()) #25, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13414, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13415, metadata !DIExpression()), !dbg !13416
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13420
  br i1 %4, label %6, label %5, !dbg !13422

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !13423
  br label %7, !dbg !13424

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !13423
  br label %7, !dbg !13427

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %8, metadata !13385, metadata !DIExpression()) #25, !dbg !13419
  call void @llvm.dbg.value(metadata i32 %8, metadata !13414, metadata !DIExpression()), !dbg !13416
  %9 = tail call fastcc %struct.k_thread* @k_current_get.106() #28, !dbg !13429
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13430, metadata !DIExpression()) #25, !dbg !13433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13435, !srcloc !13436
  tail call fastcc void @k_thread_abort.107(%struct.k_thread* noundef %9) #27, !dbg !13437
  ret void, !dbg !13440
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.106() unnamed_addr #9 !dbg !13441 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.108() #28, !dbg !13445
  ret %struct.k_thread* %1, !dbg !13446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.107(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13451, metadata !DIExpression()), !dbg !13452
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13453, !srcloc !13455
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !13456
  ret void, !dbg !13457
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.108() unnamed_addr #9 !dbg !13458 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13459, !srcloc !13461
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !13462
  ret %struct.k_thread* %1, !dbg !13463
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13468, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata i32 %1, metadata !13469, metadata !DIExpression()), !dbg !13471
  call void @llvm.dbg.value(metadata i32 %2, metadata !13470, metadata !DIExpression()), !dbg !13471
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !13472
  ret void, !dbg !13473
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13474 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13478, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8* %1, metadata !13479, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i32 %2, metadata !13480, metadata !DIExpression()), !dbg !13481
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !13482
  ret void, !dbg !13483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13484 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !13485
  ret void, !dbg !13486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13489, metadata !DIExpression()), !dbg !13490
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !13491
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13492
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13493
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13494
  %4 = trunc i32 %0 to i8, !dbg !13495
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13496
  store i8 %4, i8* %5, align 4, !dbg !13497
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13498
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !13499
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13500
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13501
  store i8* %8, i8** %9, align 4, !dbg !13502
  ret void, !dbg !13503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13506, metadata !DIExpression()), !dbg !13512
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13513
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13507, metadata !DIExpression()), !dbg !13512
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i8* null, metadata !13511, metadata !DIExpression()), !dbg !13512
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13515
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13516
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !13517
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !13518
  ret void, !dbg !13519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13520 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13524, metadata !DIExpression()), !dbg !13525
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13526
  ret i8* %2, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13533, metadata !DIExpression()), !dbg !13534
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13535
  %3 = load i8, i8* %2, align 1, !dbg !13536
  %4 = and i8 %3, -5, !dbg !13536
  store i8 %4, i8* %2, align 1, !dbg !13536
  ret void, !dbg !13537
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13538 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !13541
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !13542
  %3 = ptrtoint i8* %2 to i32, !dbg !13551
  %4 = add i32 %3, 2048, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %4, metadata !13546, metadata !DIExpression()) #25, !dbg !13553
  call void @llvm.dbg.value(metadata i32 %4, metadata !13554, metadata !DIExpression()) #25, !dbg !13557
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13559, !srcloc !13560
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13561
  %6 = or i32 %5, 512, !dbg !13561
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13561
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -2, i32 noundef 255) #26, !dbg !13562
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -5, i32 noundef 0) #26, !dbg !13565
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -12, i32 noundef 0) #26, !dbg !13566
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -11, i32 noundef 0) #26, !dbg !13567
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -10, i32 noundef 0) #26, !dbg !13568
  tail call fastcc void @__NVIC_SetPriority.115(i32 noundef -4, i32 noundef 0) #26, !dbg !13569
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13570
  %8 = or i32 %7, 458752, !dbg !13570
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13570
  tail call void @z_arm_fault_init() #26, !dbg !13571
  tail call void @z_arm_cpu_idle_init() #26, !dbg !13572
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13573
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13576
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !13577
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !13578
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13579
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13579
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13540, metadata !DIExpression()), !dbg !13580
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !13581
  call void @z_device_state_init() #26, !dbg !13582
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !13583
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !13584
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !13585
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !13586
  unreachable, !dbg !13586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2280, metadata !DIExpression()), !dbg !13587
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13588
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13588
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2281, metadata !DIExpression()), !dbg !13587
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2281, metadata !DIExpression()), !dbg !13587
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13589
  br i1 %7, label %8, label %35, !dbg !13590

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2281, metadata !DIExpression()), !dbg !13587
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13591
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13591
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2291, metadata !DIExpression()), !dbg !13592
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13593
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13593
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %14, metadata !2295, metadata !DIExpression()), !dbg !13592
  %15 = icmp eq %struct.device* %11, null, !dbg !13595
  br i1 %15, label %32, label %16, !dbg !13597

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13598
  br i1 %17, label %26, label %18, !dbg !13601

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13602
  call void @llvm.dbg.value(metadata i32 %19, metadata !2295, metadata !DIExpression()), !dbg !13592
  %20 = icmp ult i32 %19, 255, !dbg !13604
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13604
  call void @llvm.dbg.value(metadata i32 %21, metadata !2295, metadata !DIExpression()), !dbg !13592
  %22 = trunc i32 %21 to i8, !dbg !13605
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13606
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13606
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13607
  store i8 %22, i8* %25, align 1, !dbg !13608
  br label %26, !dbg !13609

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13610
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13610
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13611
  %30 = load i8, i8* %29, align 1, !dbg !13612
  %31 = or i8 %30, 1, !dbg !13612
  store i8 %31, i8* %29, align 1, !dbg !13612
  br label %32, !dbg !13613

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13614
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2281, metadata !DIExpression()), !dbg !13587
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13589
  br i1 %34, label %8, label %35, !dbg !13590, !llvm.loop !13615

35:                                               ; preds = %32, %1
  ret void, !dbg !13617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.115(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13620, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i32 %1, metadata !13621, metadata !DIExpression()), !dbg !13622
  %3 = trunc i32 %1 to i8, !dbg !13623
  %4 = shl i8 %3, 4, !dbg !13623
  %5 = and i32 %0, 15, !dbg !13626
  %6 = add nsw i32 %5, -4, !dbg !13627
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13628
  store volatile i8 %4, i8* %7, align 1, !dbg !13629
  ret void, !dbg !13630
}

; Function Attrs: optsize
declare !dbg !13631 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13632 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13635, metadata !DIExpression()), !dbg !13636
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13637
  store i8 1, i8* %2, align 1, !dbg !13638
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13639
  store i8 1, i8* %3, align 4, !dbg !13640
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13641
  store i32 0, i32* %4, align 4, !dbg !13642
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13643
  store i32 0, i32* %5, align 4, !dbg !13644
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13645
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13646
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13647
  ret void, !dbg !13648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13649 {
  tail call void @z_sched_init() #26, !dbg !13652
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13653
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0)) #26, !dbg !13654
  call void @llvm.dbg.value(metadata i8* %1, metadata !13651, metadata !DIExpression()), !dbg !13655
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !13656
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13657
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !13658
  ret i8* %1, !dbg !13659
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13664, metadata !DIExpression()), !dbg !13665
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !13666
  unreachable, !dbg !13667
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13670, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.value(metadata i8* %1, metadata !13671, metadata !DIExpression()), !dbg !13673
  call void @llvm.dbg.value(metadata i8* %2, metadata !13672, metadata !DIExpression()), !dbg !13673
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13674
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !13675
  tail call void @boot_banner() #26, !dbg !13676
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !13677
  tail call void @z_init_static_threads() #26, !dbg !13678
  tail call void @main() #26, !dbg !13679
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13680
  %5 = and i8 %4, -2, !dbg !13680
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13680
  ret void, !dbg !13681
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13682 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13692, metadata !DIExpression()), !dbg !13694
  call void @llvm.dbg.value(metadata i8* %1, metadata !13693, metadata !DIExpression()), !dbg !13694
  ret void, !dbg !13695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13696 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13698, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i8* %1, metadata !13699, metadata !DIExpression()), !dbg !13700
  ret void, !dbg !13701
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13702 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13703, !srcloc !13710
  call void @llvm.dbg.value(metadata i32 %1, metadata !13706, metadata !DIExpression()) #25, !dbg !13711
  %2 = icmp ne i32 %1, 0, !dbg !13712
  ret i1 %2, !dbg !13713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13714 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13715
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13716
  %3 = load i8, i8* %2, align 4, !dbg !13717
  %4 = or i8 %3, 1, !dbg !13717
  store i8 %4, i8* %2, align 4, !dbg !13717
  ret void, !dbg !13718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13719 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13720
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13721
  %3 = load i8, i8* %2, align 4, !dbg !13722
  %4 = and i8 %3, -2, !dbg !13722
  store i8 %4, i8* %2, align 4, !dbg !13722
  ret void, !dbg !13723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13724 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13725
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13726
  %3 = load i8, i8* %2, align 4, !dbg !13726
  %4 = and i8 %3, 1, !dbg !13727
  %5 = icmp ne i8 %4, 0, !dbg !13728
  ret i1 %5, !dbg !13729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13734, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata i8* %1, metadata !13735, metadata !DIExpression()), !dbg !13736
  ret i32 -88, !dbg !13737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13742, metadata !DIExpression()), !dbg !13743
  ret i8* null, !dbg !13744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13749, metadata !DIExpression()), !dbg !13752
  call void @llvm.dbg.value(metadata i8* %1, metadata !13750, metadata !DIExpression()), !dbg !13752
  call void @llvm.dbg.value(metadata i32 %2, metadata !13751, metadata !DIExpression()), !dbg !13752
  ret i32 -88, !dbg !13753
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2418, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i8* %1, metadata !2419, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 %2, metadata !2420, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 0, metadata !2421, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i8 undef, metadata !2423, metadata !DIExpression()), !dbg !13754
  %4 = icmp eq i8* %1, null, !dbg !13755
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13757
  br i1 %6, label %46, label %7, !dbg !13757

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13758
  %9 = load i8, i8* %8, align 1, !dbg !13758
  call void @llvm.dbg.value(metadata i8 %9, metadata !2423, metadata !DIExpression()), !dbg !13754
  %10 = add i32 %2, -1, !dbg !13759
  call void @llvm.dbg.value(metadata i32 %10, metadata !2420, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i8 0, metadata !2424, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i8 %9, metadata !2423, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 0, metadata !2421, metadata !DIExpression()), !dbg !13754
  %11 = icmp eq i8 %9, 0, !dbg !13761
  br i1 %11, label %12, label %15, !dbg !13763

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13764
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13765
  store i8 0, i8* %14, align 1, !dbg !13766
  br label %46, !dbg !13767

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2424, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i8 %17, metadata !2423, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 %18, metadata !2421, metadata !DIExpression()), !dbg !13754
  %19 = zext i8 %17 to i32, !dbg !13768
  %20 = zext i8 %16 to i32, !dbg !13769
  %21 = shl nuw i32 1, %20, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %21, metadata !2422, metadata !DIExpression()), !dbg !13754
  %22 = and i32 %21, %19, !dbg !13771
  %23 = icmp eq i32 %22, 0, !dbg !13773
  br i1 %23, label %42, label %24, !dbg !13774

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13775
  %26 = sub i32 %10, %18, !dbg !13776
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13777
  %28 = load i8*, i8** %27, align 4, !dbg !13777
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13778
  %30 = load i32, i32* %29, align 4, !dbg !13778
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13779
  %32 = add i32 %31, %18, !dbg !13780
  call void @llvm.dbg.value(metadata i32 %32, metadata !2421, metadata !DIExpression()), !dbg !13754
  %33 = trunc i32 %21 to i8, !dbg !13781
  %34 = xor i8 %33, -1, !dbg !13781
  %35 = and i8 %17, %34, !dbg !13781
  call void @llvm.dbg.value(metadata i8 %35, metadata !2423, metadata !DIExpression()), !dbg !13754
  %36 = icmp eq i8 %35, 0, !dbg !13782
  br i1 %36, label %12, label %37, !dbg !13784

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13785
  %39 = sub i32 %10, %32, !dbg !13787
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #27, !dbg !13788
  %41 = add i32 %40, %32, !dbg !13789
  call void @llvm.dbg.value(metadata i32 %41, metadata !2421, metadata !DIExpression()), !dbg !13754
  br label %42, !dbg !13790

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13754
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13754
  call void @llvm.dbg.value(metadata i8 %44, metadata !2423, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 %43, metadata !2421, metadata !DIExpression()), !dbg !13754
  %45 = add i8 %16, 1, !dbg !13791
  call void @llvm.dbg.value(metadata i8 %45, metadata !2424, metadata !DIExpression()), !dbg !13760
  br label %15, !dbg !13763

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.117, i32 0, i32 0), %3 ], !dbg !13754
  ret i8* %47, !dbg !13792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13797, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 %1, metadata !13798, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i8* %2, metadata !13799, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata i32 %3, metadata !13800, metadata !DIExpression()), !dbg !13802
  %5 = icmp ult i32 %1, %3, !dbg !13803
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13803
  call void @llvm.dbg.value(metadata i32 %6, metadata !13801, metadata !DIExpression()), !dbg !13802
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13804
  ret i32 %6, !dbg !13805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13810, metadata !DIExpression()), !dbg !13811
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13812
  ret void, !dbg !13813
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13823, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13824, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %2, metadata !13825, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13826, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8* %4, metadata !13827, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8* %5, metadata !13828, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8* %6, metadata !13829, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %7, metadata !13830, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %8, metadata !13831, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8* undef, metadata !13832, metadata !DIExpression()), !dbg !13834
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13835
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13836
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13837
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13838
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13839
  call void @llvm.dbg.value(metadata i8* %13, metadata !13833, metadata !DIExpression()), !dbg !13834
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13840
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13841
  store i8* null, i8** %14, align 4, !dbg !13842
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13843
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13843
  br i1 %16, label %20, label %17, !dbg !13845

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13846
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13846
  br label %20, !dbg !13847

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13834
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13848
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13850
  ret i8* %13, !dbg !13851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13852 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13857, metadata !DIExpression()), !dbg !13858
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13859
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13860
  ret void, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13867, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i32 %1, metadata !13868, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i32 %2, metadata !13869, metadata !DIExpression()), !dbg !13871
  call void @llvm.dbg.value(metadata i32 %3, metadata !13870, metadata !DIExpression()), !dbg !13871
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13872
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13873
  %6 = trunc i32 %3 to i8, !dbg !13874
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13875
  store i8 %6, i8* %7, align 4, !dbg !13876
  %8 = trunc i32 %2 to i8, !dbg !13877
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13878
  store i8 %8, i8* %9, align 1, !dbg !13879
  %10 = trunc i32 %1 to i8, !dbg !13880
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13881
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13881
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13881
  store i8 %10, i8* %13, align 2, !dbg !13882
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13883
  store i8 0, i8* %14, align 1, !dbg !13884
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13885
  ret void, !dbg !13886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13891, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13892, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata i32 %2, metadata !13893, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata i32 0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %4 = add i32 %2, 7, !dbg !13900
  %5 = and i32 %4, -8, !dbg !13900
  %6 = add i32 %5, 64, !dbg !13900
  call void @llvm.dbg.value(metadata i32 %6, metadata !13894, metadata !DIExpression()), !dbg !13899
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.127(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13902
  call void @llvm.dbg.value(metadata i8* %7, metadata !13897, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata i32 %5, metadata !13895, metadata !DIExpression()), !dbg !13899
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13903
  call void @llvm.dbg.value(metadata i8* %8, metadata !13896, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.value(metadata i32 0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %9 = ptrtoint i8* %7 to i32, !dbg !13904
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13905
  store i32 %9, i32* %10, align 4, !dbg !13906
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13907
  store i32 %5, i32* %11, align 4, !dbg !13908
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13909
  store i32 0, i32* %12, align 4, !dbg !13910
  call void @llvm.dbg.value(metadata i8* %8, metadata !13896, metadata !DIExpression()), !dbg !13899
  ret i8* %8, !dbg !13911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.127(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13912 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13916, metadata !DIExpression()), !dbg !13917
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13918
  ret i8* %2, !dbg !13919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13920 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13925, metadata !DIExpression()), !dbg !13926
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13927
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13928
  ret void, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13930 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13932, metadata !DIExpression()), !dbg !13933
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13934
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13935
  ret void, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13937 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13941, metadata !DIExpression()), !dbg !13942
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13943
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13944
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13945
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13946
  ret void, !dbg !13947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13948 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13953, metadata !DIExpression()), !dbg !13954
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13955
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13956
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13957
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13958
  ret void, !dbg !13959
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13960 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13977, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13968, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13969, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i32 %2, metadata !13970, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13971, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8* %4, metadata !13972, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8* %5, metadata !13973, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8* %6, metadata !13974, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i32 %7, metadata !13975, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i32 %8, metadata !13976, metadata !DIExpression()), !dbg !13978
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13979
  %13 = icmp eq i64 %11, -1, !dbg !13980
  br i1 %13, label %15, label %14, !dbg !13982

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13983
  br label %15, !dbg !13985

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13987 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13992, metadata !DIExpression()), !dbg !13993
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13991, metadata !DIExpression()), !dbg !13993
  %4 = icmp eq i64 %3, 0, !dbg !13994
  br i1 %4, label %5, label %6, !dbg !13996

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13997
  br label %7, !dbg !13999

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !14000
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14003 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14007, metadata !DIExpression()), !dbg !14008
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14009, !srcloc !14011
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !14012
  ret void, !dbg !14013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14014 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14017, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14016, metadata !DIExpression()), !dbg !14018
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14019
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !14020
  ret void, !dbg !14021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14022 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14024, metadata !DIExpression()), !dbg !14044
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14045

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !14046
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14042, metadata !DIExpression()), !dbg !14047
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14048

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14024, metadata !DIExpression()), !dbg !14044
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14049
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14049
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14052
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14052
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14053
  %9 = load i32, i32* %8, align 4, !dbg !14053
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14054
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14054
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14055
  %13 = load i8*, i8** %12, align 4, !dbg !14055
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14056
  %15 = load i8*, i8** %14, align 4, !dbg !14056
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14057
  %17 = load i8*, i8** %16, align 4, !dbg !14057
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14058
  %19 = load i32, i32* %18, align 4, !dbg !14058
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14059
  %21 = load i32, i32* %20, align 4, !dbg !14059
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !14060
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14061
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14062
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14063
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14063
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14064
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14024, metadata !DIExpression()), !dbg !14044
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14065
  br i1 %27, label %2, label %1, !dbg !14045, !llvm.loop !14067

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !14046
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14042, metadata !DIExpression()), !dbg !14047
  br label %29, !dbg !14048

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !14069
  ret void, !dbg !14070

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14042, metadata !DIExpression()), !dbg !14047
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14071
  %33 = load i32, i32* %32, align 4, !dbg !14071
  %34 = icmp eq i32 %33, -1, !dbg !14075
  br i1 %34, label %43, label %35, !dbg !14076

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14077
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14077
  %38 = icmp sgt i32 %33, 0, !dbg !14079
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14079
  %40 = zext i32 %39 to i64, !dbg !14079
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !14079
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14080
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !14080
  br label %43, !dbg !14081

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14082
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14042, metadata !DIExpression()), !dbg !14047
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14083
  br i1 %45, label %30, label %29, !dbg !14048, !llvm.loop !14085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14087 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14092, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i64 %0, metadata !14094, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 1000, metadata !14099, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 10000, metadata !14100, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 1, metadata !14101, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 0, metadata !14102, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 1, metadata !14103, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 1, metadata !14105, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 0, metadata !14106, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !14111
  %2 = mul i64 %0, 10, !dbg !14113
  ret i64 %2, !dbg !14119
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14120 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14122, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.value(metadata i8* %1, metadata !14123, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.value(metadata i8* %2, metadata !14124, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.value(metadata i8* %3, metadata !14125, metadata !DIExpression()), !dbg !14126
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14127
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14128
  %7 = load i8, i8* %6, align 4, !dbg !14129
  %8 = or i8 %7, 4, !dbg !14129
  store i8 %8, i8* %6, align 4, !dbg !14129
  tail call void @z_thread_essential_clear() #27, !dbg !14130
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14131
  unreachable, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14136, metadata !DIExpression()), !dbg !14137
  ret i32 -134, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14143, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %1, metadata !14144, metadata !DIExpression()), !dbg !14145
  ret i32 -134, !dbg !14146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14154, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14155, metadata !DIExpression()), !dbg !14156
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14157
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14159
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14156
  ret i32 %6, !dbg !14160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14161 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14165, metadata !DIExpression()), !dbg !14166
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14167
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14166
  ret i32 %3, !dbg !14169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14170 {
  tail call void @sys_clock_idle_exit() #26, !dbg !14172
  ret void, !dbg !14173
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14174 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14176, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i8* %1, metadata !14177, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i8* %2, metadata !14178, metadata !DIExpression()), !dbg !14179
  br label %4, !dbg !14180

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14181, !srcloc !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14184, metadata !DIExpression()) #25, !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()) #25, !dbg !14189
  tail call fastcc void @k_cpu_idle() #27, !dbg !14190
  br label %4, !dbg !14180, !llvm.loop !14191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14193 {
  tail call void @arch_cpu_idle() #26, !dbg !14194
  ret void, !dbg !14195
}

; Function Attrs: optsize
declare !dbg !14196 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14197 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14201, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.value(metadata i1 %1, metadata !14202, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14207
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14208
  br i1 %3, label %13, label %4, !dbg !14209

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14210
  %6 = icmp eq i8 %5, 0, !dbg !14211
  br i1 %6, label %13, label %7, !dbg !14212

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14204, metadata !DIExpression()), !dbg !14213
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !14214
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !14214
  %10 = load i8*, i8** %9, align 4, !dbg !14214
  call void @llvm.dbg.value(metadata i8* %10, metadata !14203, metadata !DIExpression()), !dbg !14207
  br i1 %1, label %11, label %15, !dbg !14215

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !14216
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !14217
  br label %15, !dbg !14220

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !14221
  call void @llvm.dbg.value(metadata i8* %14, metadata !14203, metadata !DIExpression()), !dbg !14207
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !14223
  call void @llvm.dbg.value(metadata i8* %16, metadata !14203, metadata !DIExpression()), !dbg !14207
  ret i8* %16, !dbg !14224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14225 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14231
  %3 = load i32, i32* %2, align 4, !dbg !14231
  %4 = trunc i32 %3 to i8, !dbg !14232
  %5 = and i8 %4, 3, !dbg !14232
  ret i8 %5, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14255, metadata !DIExpression()), !dbg !14256
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14257
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !14258
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14259
  tail call fastcc void @z_waitq_init.132(%union.anon* noundef nonnull %3) #27, !dbg !14260
  ret void, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14262 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14267, metadata !DIExpression()), !dbg !14268
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14269
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !14270
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14271
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !14272
  ret void, !dbg !14273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.132(%union.anon* noundef %0) unnamed_addr #4 !dbg !14274 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14279, metadata !DIExpression()), !dbg !14280
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14281
  tail call fastcc void @sys_dlist_init.133(%struct._dnode* noundef %2) #27, !dbg !14282
  ret void, !dbg !14283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.133(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14284 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14289, metadata !DIExpression()), !dbg !14290
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14291
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14292
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14293
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14298, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14385, metadata !DIExpression()) #25, !dbg !14392
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14394, !srcloc !14400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !14401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #25, !dbg !14401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14391, metadata !DIExpression()) #25, !dbg !14392
  call void @llvm.dbg.value(metadata i32 undef, metadata !14299, metadata !DIExpression()), !dbg !14384
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14402
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !14403
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14304, metadata !DIExpression()), !dbg !14384
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14404
  br i1 %5, label %7, label %6, !dbg !14406

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !14407
  br label %7, !dbg !14409

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14394
  call void @llvm.dbg.value(metadata i32 %8, metadata !14397, metadata !DIExpression()) #25, !dbg !14401
  call void @llvm.dbg.value(metadata i32 %8, metadata !14391, metadata !DIExpression()) #25, !dbg !14392
  call void @llvm.dbg.value(metadata i32 %8, metadata !14299, metadata !DIExpression()), !dbg !14384
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14410
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !14411
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !14411
  ret void, !dbg !14412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !14413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14417, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata i8* %1, metadata !14418, metadata !DIExpression()), !dbg !14419
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14420, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i32 0, metadata !14426, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata i8* %1, metadata !14427, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14430, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i32 0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !14438
  store i32 0, i32* %3, align 4, !dbg !14439
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !14440
  store i8* %1, i8** %4, align 4, !dbg !14441
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14442
  ret void, !dbg !14443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14448, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i8* %1, metadata !14449, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i8* %2, metadata !14450, metadata !DIExpression()), !dbg !14451
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !14452
  ret void, !dbg !14453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !14454 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14458, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i8* %1, metadata !14459, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i8* %2, metadata !14460, metadata !DIExpression()), !dbg !14468
  call void @llvm.dbg.value(metadata i1 %3, metadata !14461, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  call void @llvm.dbg.value(metadata i1 %4, metadata !14462, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14468
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14385, metadata !DIExpression()) #25, !dbg !14470
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14472, !srcloc !14400
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !14472
  call void @llvm.dbg.value(metadata i32 %8, metadata !14397, metadata !DIExpression()) #25, !dbg !14474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #25, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %8, metadata !14391, metadata !DIExpression()) #25, !dbg !14470
  call void @llvm.dbg.value(metadata i32 %8, metadata !14464, metadata !DIExpression()), !dbg !14468
  br i1 %4, label %9, label %13, !dbg !14475

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14476
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !14479
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !14479
  call void @llvm.dbg.value(metadata i8* %12, metadata !14459, metadata !DIExpression()), !dbg !14468
  br label %13, !dbg !14480

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !14459, metadata !DIExpression()), !dbg !14468
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14481
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !14482
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14463, metadata !DIExpression()), !dbg !14468
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !14483
  br i1 %17, label %20, label %18, !dbg !14485

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !14486
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !14488
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !14488
  br label %36, !dbg !14489

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !14490

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !14491
  call void @llvm.dbg.value(metadata i8* %22, metadata !14465, metadata !DIExpression()), !dbg !14492
  %23 = icmp eq i8* %22, null, !dbg !14493
  br i1 %23, label %24, label %25, !dbg !14495

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !14496, metadata !DIExpression()) #25, !dbg !14502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14501, metadata !DIExpression()) #25, !dbg !14502
  call void @llvm.dbg.value(metadata i32 %8, metadata !14505, metadata !DIExpression()) #25, !dbg !14508
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14510, !srcloc !14511
  call void @llvm.dbg.value(metadata i8* %22, metadata !14460, metadata !DIExpression()), !dbg !14468
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !14465, metadata !DIExpression()), !dbg !14492
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !14512
  %27 = bitcast i8* %26 to i8**, !dbg !14512
  store i8* %2, i8** %27, align 4, !dbg !14513
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !14514
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !14515
  call void @llvm.dbg.value(metadata i8* %22, metadata !14460, metadata !DIExpression()), !dbg !14468
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14516
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !14518
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !14519
  call void @llvm.dbg.value(metadata i8* undef, metadata !14460, metadata !DIExpression()), !dbg !14468
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14520
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !14521
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !14522
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !14523
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !14523
  br label %36, !dbg !14524

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !14468
  ret i32 %37, !dbg !14525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14526 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14530, metadata !DIExpression()), !dbg !14531
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14532
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !14532
  ret %struct.z_heap_bucket* %3, !dbg !14533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !14534 {
  call void @llvm.dbg.value(metadata i32 8, metadata !14537, metadata !DIExpression()), !dbg !14538
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !14539
  ret i8* %1, !dbg !14540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !14541 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14545, metadata !DIExpression()), !dbg !14547
  call void @llvm.dbg.value(metadata i8 %1, metadata !14546, metadata !DIExpression()), !dbg !14547
  %3 = zext i8 %1 to i32, !dbg !14548
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14549
  store i32 %3, i32* %4, align 4, !dbg !14550
  ret void, !dbg !14551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14552 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14556, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14557, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14558, metadata !DIExpression()), !dbg !14559
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14560
  br i1 %4, label %5, label %6, !dbg !14562

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !14563
  br label %11, !dbg !14563

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14565
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !14565
  br i1 %8, label %9, label %10, !dbg !14560

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !14567
  br label %11, !dbg !14567

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !14569
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !14569
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !14562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14571 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14575, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14576, metadata !DIExpression()), !dbg !14577
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14578
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !14578
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14578
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14579
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14579
  br i1 %5, label %6, label %8, !dbg !14578

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14581
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14581
  br label %8, !dbg !14581

8:                                                ; preds = %6, %2
  ret void, !dbg !14578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14583 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14587, metadata !DIExpression()), !dbg !14588
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14589
  %3 = load i32, i32* %2, align 4, !dbg !14589
  %4 = and i32 %3, -4, !dbg !14590
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !14591
  ret %struct.z_heap_bucket* %5, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14593 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14595, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14596, metadata !DIExpression()), !dbg !14597
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !14598
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14599
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14599
  br i1 %4, label %5, label %6, !dbg !14598

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14601
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14601
  br label %7, !dbg !14601

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !14603
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !14603
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !14605 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14609, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14610, metadata !DIExpression()), !dbg !14612
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !14613
  call void @llvm.dbg.value(metadata i8 %3, metadata !14611, metadata !DIExpression()), !dbg !14612
  %4 = zext i8 %3 to i32, !dbg !14614
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !14615
  %6 = or i32 %4, %5, !dbg !14616
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !14617
  store i32 %6, i32* %7, align 4, !dbg !14618
  ret void, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14622, metadata !DIExpression()), !dbg !14624
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14623, metadata !DIExpression()), !dbg !14624
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !14625
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !14626
  ret void, !dbg !14627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14630, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14631, metadata !DIExpression()), !dbg !14632
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14633
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !14634
  ret void, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14636 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14638, metadata !DIExpression()), !dbg !14639
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !14640
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !14640
  ret %struct.z_heap_bucket* %3, !dbg !14641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14642 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14646, metadata !DIExpression()), !dbg !14648
  call void @llvm.dbg.value(metadata i8* %1, metadata !14647, metadata !DIExpression()), !dbg !14648
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !14649
  ret void, !dbg !14650
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14651 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14653, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i8* %1, metadata !14654, metadata !DIExpression()), !dbg !14655
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !14656
  ret void, !dbg !14657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14662, metadata !DIExpression()), !dbg !14665
  call void @llvm.dbg.value(metadata i8* %1, metadata !14663, metadata !DIExpression()), !dbg !14665
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !14666
  call void @llvm.dbg.value(metadata i32 %3, metadata !14664, metadata !DIExpression()), !dbg !14665
  ret i32 %3, !dbg !14667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14668 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14670, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i8* %1, metadata !14671, metadata !DIExpression()), !dbg !14673
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !14674
  call void @llvm.dbg.value(metadata i32 %3, metadata !14672, metadata !DIExpression()), !dbg !14673
  ret i32 %3, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14680, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i8* %1, metadata !14681, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i8* %2, metadata !14682, metadata !DIExpression()), !dbg !14685
  %4 = icmp eq i8* %1, null, !dbg !14686
  %5 = icmp eq i8* %2, null, !dbg !14686
  %6 = or i1 %4, %5, !dbg !14686
  br i1 %6, label %29, label %7, !dbg !14686

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14385, metadata !DIExpression()) #25, !dbg !14689
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14691, !srcloc !14400
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %10, metadata !14397, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 %10, metadata !14391, metadata !DIExpression()) #25, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %10, metadata !14683, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14684, metadata !DIExpression()), !dbg !14685
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14694
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14697
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i8* %1, metadata !14681, metadata !DIExpression()), !dbg !14685
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14698
  br i1 %13, label %24, label %14, !dbg !14699

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14684, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i8* %16, metadata !14681, metadata !DIExpression()), !dbg !14685
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !14700
  %17 = bitcast i8* %16 to i8**, !dbg !14702
  %18 = load i8*, i8** %17, align 4, !dbg !14703
  call void @llvm.dbg.value(metadata i8* %18, metadata !14681, metadata !DIExpression()), !dbg !14685
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14704
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14684, metadata !DIExpression()), !dbg !14685
  %20 = icmp ne i8* %18, null, !dbg !14705
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !14698
  %22 = select i1 %20, i1 %21, i1 false, !dbg !14698
  br i1 %22, label %14, label %23, !dbg !14699, !llvm.loop !14706

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14708

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14709
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14712
  br label %27, !dbg !14713

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14714
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14714
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !14685
  ret i32 %30, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14720, metadata !DIExpression()), !dbg !14723
  call void @llvm.dbg.value(metadata i8* %1, metadata !14721, metadata !DIExpression()), !dbg !14723
  call void @llvm.dbg.value(metadata i8* %2, metadata !14722, metadata !DIExpression()), !dbg !14723
  %4 = icmp ne i8* %1, null, !dbg !14724
  %5 = icmp ne i8* %2, null, !dbg !14724
  %6 = and i1 %4, %5, !dbg !14724
  br i1 %6, label %7, label %15, !dbg !14724

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14726
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14726
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14729
  br i1 %9, label %11, label %12, !dbg !14730

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14731
  br label %13, !dbg !14731

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14733
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14730
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14730
  br label %15, !dbg !14730

15:                                               ; preds = %13, %3
  ret void, !dbg !14735
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14752, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14753, metadata !DIExpression()), !dbg !14755
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.136(%struct._slist* noundef %1) #27, !dbg !14756
  br i1 %3, label %13, label %4, !dbg !14758

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14759
  %6 = load i8*, i8** %5, align 4, !dbg !14759
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14760
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14760
  %9 = load i8*, i8** %8, align 4, !dbg !14760
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14761
  call void @llvm.dbg.value(metadata i32 %10, metadata !14754, metadata !DIExpression()), !dbg !14755
  %11 = icmp eq i32 %10, 0, !dbg !14762
  br i1 %11, label %12, label %13, !dbg !14764

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14765
  br label %13, !dbg !14766

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14755
  ret i32 %14, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.136(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14772, metadata !DIExpression()), !dbg !14773
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.137(%struct._slist* noundef %0) #27, !dbg !14774
  %3 = icmp eq %struct._snode* %2, null, !dbg !14774
  ret i1 %3, !dbg !14774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14775 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14779, metadata !DIExpression()), !dbg !14780
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14781
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14782
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14783
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.137(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14790, metadata !DIExpression()), !dbg !14791
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14792
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14792
  ret %struct._snode* %3, !dbg !14793
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14794 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14803, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14802, metadata !DIExpression()), !dbg !14810
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14385, metadata !DIExpression()) #25, !dbg !14812
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14814, !srcloc !14400
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %5, metadata !14397, metadata !DIExpression()) #25, !dbg !14816
  call void @llvm.dbg.value(metadata i32 undef, metadata !14398, metadata !DIExpression()) #25, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %5, metadata !14391, metadata !DIExpression()) #25, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %5, metadata !14804, metadata !DIExpression()), !dbg !14810
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14817
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14817
  br i1 %7, label %11, label %8, !dbg !14818, !prof !14819

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14820
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14806, metadata !DIExpression()), !dbg !14821
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14822
  call void @llvm.dbg.value(metadata i8* %10, metadata !14805, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata i32 %5, metadata !14496, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14501, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %5, metadata !14505, metadata !DIExpression()) #25, !dbg !14825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14827, !srcloc !14511
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14803, metadata !DIExpression()), !dbg !14810
  %13 = icmp eq i64 %12, 0, !dbg !14828
  br i1 %13, label %14, label %15, !dbg !14830

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !14496, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14501, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %5, metadata !14505, metadata !DIExpression()) #25, !dbg !14834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14836, !srcloc !14511
  br label %24, !dbg !14837

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14838
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14839
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14839
  call void @llvm.dbg.value(metadata i32 %18, metadata !14809, metadata !DIExpression()), !dbg !14810
  %19 = icmp eq i32 %18, 0, !dbg !14840
  br i1 %19, label %20, label %24, !dbg !14841

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14842
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14843
  %23 = load i8*, i8** %22, align 4, !dbg !14843
  br label %24, !dbg !14841

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14810
  ret i8* %25, !dbg !14844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14845 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14849, metadata !DIExpression()), !dbg !14850
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14851
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14851
  ret i1 %3, !dbg !14851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14854, metadata !DIExpression()), !dbg !14856
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14857
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14855, metadata !DIExpression()), !dbg !14856
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14857
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14857
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14858
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14858
  br i1 %5, label %6, label %8, !dbg !14857

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14860
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14860
  br label %8, !dbg !14860

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14866, metadata !DIExpression()), !dbg !14869
  call void @llvm.dbg.value(metadata i8* %1, metadata !14867, metadata !DIExpression()), !dbg !14869
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14870
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14871
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14872
  call void @llvm.dbg.value(metadata i1 %5, metadata !14868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14869
  ret i1 %5, !dbg !14873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14874 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14878, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14879, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14880, metadata !DIExpression()), !dbg !14882
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14883
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14881, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14880, metadata !DIExpression()), !dbg !14882
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14885
  br i1 %4, label %15, label %5, !dbg !14883

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14881, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14880, metadata !DIExpression()), !dbg !14882
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14887
  br i1 %6, label %9, label %11, !dbg !14890

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14881, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14880, metadata !DIExpression()), !dbg !14882
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14887
  br i1 %8, label %9, label %11, !dbg !14890, !llvm.loop !14891

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14892
  br label %15, !dbg !14892

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14881, metadata !DIExpression()), !dbg !14882
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14880, metadata !DIExpression()), !dbg !14882
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14885
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14881, metadata !DIExpression()), !dbg !14882
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14885
  br i1 %14, label %15, label %7, !dbg !14883, !llvm.loop !14891

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14895 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14897, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14898, metadata !DIExpression()), !dbg !14900
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14899, metadata !DIExpression()), !dbg !14900
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14901
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14903
  br i1 %4, label %6, label %11, !dbg !14904

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14905
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14907
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14907
  br i1 %8, label %9, label %15, !dbg !14905

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14909
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14909
  br label %15, !dbg !14909

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14911
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14913
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14913
  br i1 %13, label %14, label %15, !dbg !14911

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14915
  br label %15, !dbg !14915

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14904
  ret void, !dbg !14904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14917 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14919, metadata !DIExpression()), !dbg !14920
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14921
  br i1 %2, label %5, label %3, !dbg !14921

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14921
  br label %5, !dbg !14921

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14921
  ret %struct.z_heap_bucket* %6, !dbg !14921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14922 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14924, metadata !DIExpression()), !dbg !14925
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14926
  ret %struct.z_heap_bucket* %2, !dbg !14926
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14927 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14929, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i8* %1, metadata !14930, metadata !DIExpression()), !dbg !14932
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14933
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14933
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14931, metadata !DIExpression()), !dbg !14932
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14935
  br i1 %5, label %14, label %6, !dbg !14933

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14933

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14931, metadata !DIExpression()), !dbg !14932
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14937
  br i1 %10, label %15, label %11, !dbg !14940

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14935
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14931, metadata !DIExpression()), !dbg !14932
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14935
  br i1 %13, label %14, label %8, !dbg !14933, !llvm.loop !14941

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14943
  br label %15, !dbg !14944

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14945
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14946 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14950, metadata !DIExpression()), !dbg !14952
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14953
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14954
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14955
  call void @llvm.dbg.value(metadata i8* %4, metadata !14951, metadata !DIExpression()), !dbg !14952
  ret i8* %4, !dbg !14956
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14959, metadata !DIExpression()), !dbg !14961
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14962
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14963
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14964
  call void @llvm.dbg.value(metadata i8* %4, metadata !14960, metadata !DIExpression()), !dbg !14961
  ret i8* %4, !dbg !14965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14970, metadata !DIExpression()), !dbg !14974
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14971, metadata !DIExpression()), !dbg !14974
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14975
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14975
  %5 = load i8, i8* %4, align 2, !dbg !14975
  call void @llvm.dbg.value(metadata i8 %5, metadata !14972, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14974
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14976
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14976
  %8 = load i8, i8* %7, align 2, !dbg !14976
  call void @llvm.dbg.value(metadata i8 %8, metadata !14973, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14974
  %9 = icmp eq i8 %8, %5, !dbg !14977
  %10 = sext i8 %5 to i32, !dbg !14979
  %11 = sext i8 %8 to i32, !dbg !14979
  %12 = sub nsw i32 %11, %10, !dbg !14979
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14979
  ret i32 %13, !dbg !14980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14981 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14985, metadata !DIExpression()), !dbg !14986
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14987
  %3 = icmp eq i32 %2, 0, !dbg !14989
  br i1 %3, label %8, label %4, !dbg !14990

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14991
  %6 = add i32 %5, %2, !dbg !14993
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14994
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14995
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14996
  br label %8, !dbg !14997

8:                                                ; preds = %4, %1
  ret void, !dbg !14998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15003, metadata !DIExpression()), !dbg !15005
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %1, metadata !15004, metadata !DIExpression()), !dbg !15005
  ret i32 %1, !dbg !15007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15012, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i32 %1, metadata !15013, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i32 0, metadata !15014, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15030
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15032, !srcloc !15038
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15032
  call void @llvm.dbg.value(metadata i32 %4, metadata !15035, metadata !DIExpression()) #25, !dbg !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %4, metadata !15029, metadata !DIExpression()) #25, !dbg !15030
  call void @llvm.dbg.value(metadata i32 %4, metadata !15020, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15014, metadata !DIExpression()), !dbg !15022
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15040
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !15043
  %6 = icmp sgt i32 %0, 0, !dbg !15044
  %7 = icmp sgt i32 %5, 2, !dbg !15046
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15046
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15046
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15047
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15048
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15049
  call void @llvm.dbg.value(metadata i32 %4, metadata !15050, metadata !DIExpression()) #25, !dbg !15056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15056
  call void @llvm.dbg.value(metadata i32 %4, metadata !15058, metadata !DIExpression()) #25, !dbg !15061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15063, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15014, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15014, metadata !DIExpression()), !dbg !15022
  ret void, !dbg !15065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !15066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15068, metadata !DIExpression()), !dbg !15069
  call void @llvm.dbg.value(metadata i32 %0, metadata !15070, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15085
  call void @llvm.dbg.value(metadata i32 1000, metadata !15073, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i32 10000, metadata !15074, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i8 1, metadata !15075, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i1 true, metadata !15076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15085
  call void @llvm.dbg.value(metadata i1 true, metadata !15077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15085
  call void @llvm.dbg.value(metadata i8 0, metadata !15078, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i1 true, metadata !15079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15085
  call void @llvm.dbg.value(metadata i1 false, metadata !15080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15085
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !15085
  %2 = mul i32 %0, 10, !dbg !15087
  ret i32 %2, !dbg !15093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15096, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15099
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15101, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15099
  call void @llvm.dbg.value(metadata i32 %3, metadata !15097, metadata !DIExpression()), !dbg !15098
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15104
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15106
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15107
  br i1 %6, label %7, label %8, !dbg !15108

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15109
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15111
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15113
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15115, !srcloc !15064
  br label %24, !dbg !15116

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15117
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !15118
  %10 = icmp eq i32 %9, 0, !dbg !15118
  br i1 %10, label %21, label %11, !dbg !15120

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !15121
  br i1 %12, label %13, label %21, !dbg !15122

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15123
  %15 = icmp sgt i32 %14, %0, !dbg !15126
  br i1 %15, label %19, label %16, !dbg !15127

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15128
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !15128
  call void @llvm.dbg.value(metadata i32 %18, metadata !15097, metadata !DIExpression()), !dbg !15098
  br label %22, !dbg !15130

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15131
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15131
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15133
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15098
  call void @llvm.dbg.value(metadata i32 %23, metadata !15097, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 %23, metadata !15050, metadata !DIExpression()) #25, !dbg !15135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15135
  call void @llvm.dbg.value(metadata i32 %23, metadata !15058, metadata !DIExpression()) #25, !dbg !15137
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15139, !srcloc !15064
  br label %24, !dbg !15140

24:                                               ; preds = %22, %7
  ret void, !dbg !15140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !15141 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15145, metadata !DIExpression()), !dbg !15147
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !15148
  %3 = icmp eq i32 %2, 0, !dbg !15148
  br i1 %3, label %16, label %4, !dbg !15149

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !15150
  br i1 %5, label %16, label %6, !dbg !15151

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15152
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15152
  %9 = load i8, i8* %8, align 2, !dbg !15152
  %10 = sext i8 %9 to i32, !dbg !15153
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15154
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !15155
  br i1 %12, label %16, label %13, !dbg !15156

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !15157
  %15 = xor i1 %14, true, !dbg !15158
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15147
  call void @llvm.dbg.value(metadata i1 %17, metadata !15146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15147
  ret i1 %17, !dbg !15159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15160 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()), !dbg !15166
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15167
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15165, metadata !DIExpression()), !dbg !15166
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !15168
  br i1 %3, label %5, label %4, !dbg !15170

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !15171
  br label %5, !dbg !15173

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15164, metadata !DIExpression()), !dbg !15166
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15174
  ret i32 %6, !dbg !15175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15178, metadata !DIExpression()), !dbg !15180
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15181
  %3 = load i8, i8* %2, align 1, !dbg !15181
  call void @llvm.dbg.value(metadata i8 %3, metadata !15179, metadata !DIExpression()), !dbg !15180
  %4 = and i8 %3, 31, !dbg !15182
  %5 = icmp ne i8 %4, 0, !dbg !15183
  ret i1 %5, !dbg !15184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15185 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15187, metadata !DIExpression()), !dbg !15188
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15189
  br i1 %2, label %3, label %7, !dbg !15191

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()) #25, !dbg !15195
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15198
  %5 = load i8, i8* %4, align 1, !dbg !15199
  %6 = and i8 %5, 127, !dbg !15199
  store i8 %6, i8* %4, align 1, !dbg !15199
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()) #25, !dbg !15203
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15207
  br label %7, !dbg !15208

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15209, metadata !DIExpression()) #25, !dbg !15212
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15214
  %9 = load i8, i8* %8, align 1, !dbg !15215
  %10 = or i8 %9, -128, !dbg !15215
  store i8 %10, i8* %8, align 1, !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15216, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15223, metadata !DIExpression()) #25, !dbg !15231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()) #25, !dbg !15231
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15233
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15230, metadata !DIExpression()) #25, !dbg !15231
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15235
  br i1 %12, label %23, label %13, !dbg !15233

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15230, metadata !DIExpression()) #25, !dbg !15231
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15237
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15230, metadata !DIExpression()) #25, !dbg !15231
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !15238
  %17 = icmp sgt i32 %16, 0, !dbg !15241
  br i1 %17, label %18, label %20, !dbg !15242

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15243
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !15245
  br label %25, !dbg !15246

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !15235
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15230, metadata !DIExpression()) #25, !dbg !15231
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15235
  br i1 %22, label %23, label %13, !dbg !15233, !llvm.loop !15247

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15249
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !15250
  br label %25, !dbg !15251

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15252
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15253
  %28 = zext i1 %27 to i32, !dbg !15253
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !15254
  ret void, !dbg !15255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15258, metadata !DIExpression()), !dbg !15259
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !15260
  ret i1 %2, !dbg !15261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !15262 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15264, metadata !DIExpression()), !dbg !15266
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15265, metadata !DIExpression()), !dbg !15266
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15267
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !15268
  ret void, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15274, metadata !DIExpression()), !dbg !15275
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15276
  br i1 %2, label %6, label %3, !dbg !15276

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15277
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15277
  br label %6, !dbg !15276

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15276
  ret %struct._dnode* %7, !dbg !15278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15283, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15284, metadata !DIExpression()), !dbg !15287
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15288
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15288
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15285, metadata !DIExpression()), !dbg !15287
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15289
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15290
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15291
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15292
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15293
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15294
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15295
  ret void, !dbg !15296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15297 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15301, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15302, metadata !DIExpression()), !dbg !15303
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15304
  br i1 %3, label %6, label %4, !dbg !15305

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !15306
  br label %6, !dbg !15305

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15305
  ret %struct._dnode* %7, !dbg !15307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15308 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15312, metadata !DIExpression()), !dbg !15315
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15313, metadata !DIExpression()), !dbg !15315
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15316
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15316
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15314, metadata !DIExpression()), !dbg !15315
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15317
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15318
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15319
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15320
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15321
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15322
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15327, metadata !DIExpression()), !dbg !15329
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15330
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15337, metadata !DIExpression()) #25, !dbg !15339
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15340
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15341
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15341
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15328, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15342, metadata !DIExpression()) #25, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %0, metadata !15347, metadata !DIExpression()) #25, !dbg !15348
  %6 = icmp eq i32 %0, 0, !dbg !15351
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15353
  br i1 %6, label %8, label %15, !dbg !15354

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !15355
  br i1 %9, label %15, label %10, !dbg !15357

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !15358
  br i1 %11, label %15, label %12, !dbg !15360

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !15361
  %14 = icmp eq i32 %13, 0, !dbg !15361
  br i1 %14, label %18, label %15, !dbg !15363

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15364
  br i1 %16, label %18, label %17, !dbg !15367

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !15368
  br label %18, !dbg !15370

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15353
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15353
  ret void, !dbg !15371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15372 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15376, metadata !DIExpression()), !dbg !15379
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15377, metadata !DIExpression()), !dbg !15379
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !15380
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15378, metadata !DIExpression()), !dbg !15379
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15377, metadata !DIExpression()), !dbg !15379
  ret %struct.k_thread* %3, !dbg !15381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15384, metadata !DIExpression()), !dbg !15385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15386
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15387
  %4 = xor i1 %3, true, !dbg !15388
  ret i1 %4, !dbg !15389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15392, metadata !DIExpression()), !dbg !15393
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15394
  %3 = load i16, i16* %2, align 2, !dbg !15394
  %4 = icmp ult i16 %3, 128, !dbg !15395
  %5 = zext i1 %4 to i32, !dbg !15395
  ret i32 %5, !dbg !15396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15397 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15403, metadata !DIExpression()), !dbg !15404
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15405
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !15406
  %4 = xor i1 %3, true, !dbg !15407
  ret i1 %4, !dbg !15408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15409 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15415, metadata !DIExpression()), !dbg !15416
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15417
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15417
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15418
  ret i1 %4, !dbg !15419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15420 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15422, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15423, metadata !DIExpression()), !dbg !15424
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15425
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15425
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15426
  br i1 %5, label %9, label %6, !dbg !15427

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15428
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15428
  br label %9, !dbg !15427

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15427
  ret %struct._dnode* %10, !dbg !15429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15430 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15434, metadata !DIExpression()), !dbg !15435
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15436
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15436
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15437
  ret i1 %4, !dbg !15438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15439 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15443, metadata !DIExpression()), !dbg !15446
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15447
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15447
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15444, metadata !DIExpression()), !dbg !15446
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15448
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15448
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15445, metadata !DIExpression()), !dbg !15446
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15449
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15450
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15451
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15452
  tail call fastcc void @sys_dnode_init.140(%struct._dnode* noundef %0) #27, !dbg !15453
  ret void, !dbg !15454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.140(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15455 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15457, metadata !DIExpression()), !dbg !15458
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15459
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15460
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15461
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15462
  ret void, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15468, metadata !DIExpression()), !dbg !15470
  call void @llvm.dbg.value(metadata i32 128, metadata !15469, metadata !DIExpression()), !dbg !15470
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15471
  %3 = load i8, i8* %2, align 1, !dbg !15471
  %4 = icmp slt i8 %3, 0, !dbg !15472
  ret i1 %4, !dbg !15473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15478, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.value(metadata i32 %1, metadata !15479, metadata !DIExpression()), !dbg !15480
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !15481
  ret i1 %3, !dbg !15482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15485, metadata !DIExpression()), !dbg !15486
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15487
  ret i1 %2, !dbg !15488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15491, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.value(metadata i32 %1, metadata !15492, metadata !DIExpression()), !dbg !15493
  %3 = icmp slt i32 %0, %1, !dbg !15494
  ret i1 %3, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 0, metadata !15499, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15504
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15506, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %3, metadata !15501, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !15499, metadata !DIExpression()), !dbg !15503
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15514
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15518, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15499, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !15499, metadata !DIExpression()), !dbg !15503
  ret void, !dbg !15519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15522, metadata !DIExpression()), !dbg !15523
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15524
  br i1 %2, label %24, label %3, !dbg !15526

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15527
  br i1 %4, label %5, label %24, !dbg !15528

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15209, metadata !DIExpression()) #25, !dbg !15529
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15532
  %7 = load i8, i8* %6, align 1, !dbg !15533
  %8 = or i8 %7, -128, !dbg !15533
  store i8 %8, i8* %6, align 1, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15216, metadata !DIExpression()) #25, !dbg !15534
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15223, metadata !DIExpression()) #25, !dbg !15536
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()) #25, !dbg !15536
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15538
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15230, metadata !DIExpression()) #25, !dbg !15536
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15539
  br i1 %10, label %21, label %11, !dbg !15538

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15230, metadata !DIExpression()) #25, !dbg !15536
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15230, metadata !DIExpression()) #25, !dbg !15536
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !15541
  %15 = icmp sgt i32 %14, 0, !dbg !15542
  br i1 %15, label %16, label %18, !dbg !15543

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15544
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !15545
  br label %23, !dbg !15546

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !15539
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15230, metadata !DIExpression()) #25, !dbg !15536
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15539
  br i1 %20, label %21, label %11, !dbg !15538, !llvm.loop !15547

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15549
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !15550
  br label %23, !dbg !15551

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15552
  br label %24, !dbg !15553

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15557, metadata !DIExpression()), !dbg !15558
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !15559
  br i1 %2, label %6, label %3, !dbg !15560

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !15561
  %5 = xor i1 %4, true, !dbg !15560
  br label %6, !dbg !15560

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15565, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i32 0, metadata !15566, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15571
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15573, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15573
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !15575
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15575
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15571
  call void @llvm.dbg.value(metadata i32 %3, metadata !15568, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()), !dbg !15570
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !15576
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15579
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15583, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15566, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()), !dbg !15570
  ret void, !dbg !15584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15587, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15590
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15592, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15592
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15590
  call void @llvm.dbg.value(metadata i32 %3, metadata !15588, metadata !DIExpression()), !dbg !15589
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !15595
  br i1 %4, label %5, label %6, !dbg !15597

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15601
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15603, !srcloc !15064
  br label %8, !dbg !15604

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.145(%struct.k_thread* noundef %0) #27, !dbg !15605
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15606
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15607
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15607
  br label %8, !dbg !15608

8:                                                ; preds = %6, %5
  ret void, !dbg !15608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15609 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15611, metadata !DIExpression()), !dbg !15612
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15613
  %3 = load i8, i8* %2, align 1, !dbg !15613
  %4 = and i8 %3, 4, !dbg !15614
  %5 = icmp eq i8 %4, 0, !dbg !15615
  ret i1 %5, !dbg !15616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.145(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15619, metadata !DIExpression()), !dbg !15620
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15621
  %3 = load i8, i8* %2, align 1, !dbg !15622
  %4 = and i8 %3, -5, !dbg !15622
  store i8 %4, i8* %2, align 1, !dbg !15622
  ret void, !dbg !15623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15624 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15627, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15626, metadata !DIExpression()), !dbg !15628
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !15629
  br i1 %4, label %5, label %9, !dbg !15631

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !15632
  br i1 %6, label %7, label %9, !dbg !15633

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15634, metadata !DIExpression()) #25, !dbg !15640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !15640
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !15643
  br label %10, !dbg !15644

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15645
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15650, !srcloc !15064
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15656, metadata !DIExpression()), !dbg !15657
  call void @llvm.dbg.value(metadata i32 %0, metadata !15658, metadata !DIExpression()), !dbg !15663
  %2 = icmp eq i32 %0, 0, !dbg !15665
  br i1 %2, label %3, label %6, !dbg !15666

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15667, !srcloc !15674
  call void @llvm.dbg.value(metadata i32 %4, metadata !15670, metadata !DIExpression()) #25, !dbg !15675
  %5 = icmp eq i32 %4, 0, !dbg !15676
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15657
  ret i1 %7, !dbg !15677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15678 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15681
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15680, metadata !DIExpression()), !dbg !15682
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15683
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15684
  ret i1 %3, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15688, metadata !DIExpression()), !dbg !15690
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !15691
  call void @llvm.dbg.value(metadata i32 %2, metadata !15689, metadata !DIExpression()), !dbg !15690
  ret i32 %2, !dbg !15692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15695, metadata !DIExpression()), !dbg !15699
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15700
  call void @llvm.dbg.value(metadata i32 0, metadata !15696, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15702
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15704, !srcloc !15038
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15704
  call void @llvm.dbg.value(metadata i32 %4, metadata !15035, metadata !DIExpression()) #25, !dbg !15706
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15706
  call void @llvm.dbg.value(metadata i32 %4, metadata !15029, metadata !DIExpression()) #25, !dbg !15702
  call void @llvm.dbg.value(metadata i32 %4, metadata !15698, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15701
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15707
  br i1 %5, label %6, label %10, !dbg !15711

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()) #25, !dbg !15712
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15715
  %8 = load i8, i8* %7, align 1, !dbg !15716
  %9 = and i8 %8, 127, !dbg !15716
  store i8 %9, i8* %7, align 1, !dbg !15716
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()) #25, !dbg !15717
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15719
  br label %10, !dbg !15720

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15721
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15722
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15723
  %13 = zext i1 %12 to i32, !dbg !15723
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15724
  call void @llvm.dbg.value(metadata i32 %4, metadata !15050, metadata !DIExpression()) #25, !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %4, metadata !15058, metadata !DIExpression()) #25, !dbg !15727
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15729, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15696, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.value(metadata i32 undef, metadata !15696, metadata !DIExpression()), !dbg !15701
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15730
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15732
  br i1 %15, label %16, label %17, !dbg !15733

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15734
  br label %17, !dbg !15736

17:                                               ; preds = %16, %10
  ret void, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15740, metadata !DIExpression()), !dbg !15741
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15742
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15743
  ret i32 %3, !dbg !15744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15747, metadata !DIExpression()), !dbg !15748
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15749
  %3 = load i8, i8* %2, align 1, !dbg !15750
  %4 = or i8 %3, 16, !dbg !15750
  store i8 %4, i8* %2, align 1, !dbg !15750
  ret void, !dbg !15751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15752 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15753, !srcloc !15038
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %2, metadata !15035, metadata !DIExpression()) #25, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15755
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15756
  ret void, !dbg !15757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15760, metadata !DIExpression()), !dbg !15761
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15762
  br i1 %2, label %3, label %5, !dbg !15764

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15765
  br label %6, !dbg !15767

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15058, metadata !DIExpression()) #25, !dbg !15768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15771, !srcloc !15064
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15773 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15775, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15778
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15780, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %3, metadata !15776, metadata !DIExpression()), !dbg !15777
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15783
  br i1 %4, label %6, label %5, !dbg !15785

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !15789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15791, !srcloc !15064
  br label %8, !dbg !15792

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15793
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15794
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15795
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15795
  br label %8, !dbg !15796

8:                                                ; preds = %6, %5
  ret void, !dbg !15796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15799, metadata !DIExpression()), !dbg !15800
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15801
  %3 = load i8, i8* %2, align 1, !dbg !15801
  %4 = and i8 %3, 16, !dbg !15802
  %5 = icmp ne i8 %4, 0, !dbg !15803
  ret i1 %5, !dbg !15804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15807, metadata !DIExpression()), !dbg !15808
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15809
  %3 = load i8, i8* %2, align 1, !dbg !15810
  %4 = and i8 %3, -17, !dbg !15810
  store i8 %4, i8* %2, align 1, !dbg !15810
  ret void, !dbg !15811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15812 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15822, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15820, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15821, metadata !DIExpression()), !dbg !15826
  call void @llvm.dbg.value(metadata i32 0, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15828
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15830, !srcloc !15038
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15830
  call void @llvm.dbg.value(metadata i32 %5, metadata !15035, metadata !DIExpression()) #25, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %5, metadata !15029, metadata !DIExpression()) #25, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %5, metadata !15825, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()), !dbg !15827
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %5, metadata !15050, metadata !DIExpression()) #25, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %5, metadata !15058, metadata !DIExpression()) #25, !dbg !15838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15840, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15823, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()), !dbg !15827
  ret void, !dbg !15841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15842 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15846, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15844, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15845, metadata !DIExpression()), !dbg !15847
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15848
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15849
  ret void, !dbg !15850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15851 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15855, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15856, metadata !DIExpression()), !dbg !15857
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15858
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15859
  %3 = icmp eq %union.anon* %1, null, !dbg !15860
  br i1 %3, label %21, label %4, !dbg !15862

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15863
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15865
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15866
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15223, metadata !DIExpression()) #25, !dbg !15867
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()) #25, !dbg !15867
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15869
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15230, metadata !DIExpression()) #25, !dbg !15867
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15870
  br i1 %8, label %19, label %9, !dbg !15869

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15230, metadata !DIExpression()) #25, !dbg !15867
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15871
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15230, metadata !DIExpression()) #25, !dbg !15867
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15872
  %13 = icmp sgt i32 %12, 0, !dbg !15873
  br i1 %13, label %14, label %16, !dbg !15874

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15875
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15876
  br label %21, !dbg !15877

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15870
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15230, metadata !DIExpression()) #25, !dbg !15867
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15870
  br i1 %18, label %19, label %9, !dbg !15869, !llvm.loop !15878

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15880
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15881
  br label %21, !dbg !15882

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15884 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15889, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15888, metadata !DIExpression()), !dbg !15890
  %4 = icmp eq i64 %3, -1, !dbg !15891
  br i1 %4, label %6, label %5, !dbg !15893

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15894
  br label %6, !dbg !15896

6:                                                ; preds = %5, %2
  ret void, !dbg !15897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15898 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15901, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15900, metadata !DIExpression()), !dbg !15902
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15903
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15904
  ret void, !dbg !15905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15906 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15908, metadata !DIExpression()), !dbg !15916
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15917
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15909, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 0, metadata !15910, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15919
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15921, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15912, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15918
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15924
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15925
  %7 = load i8, i8* %6, align 1, !dbg !15925
  %8 = and i8 %7, 40, !dbg !15926
  %9 = icmp eq i8 %8, 0, !dbg !15926
  call void @llvm.dbg.value(metadata i1 %9, metadata !15913, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15927
  br i1 %9, label %10, label %17, !dbg !15928

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15929
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15929
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15929
  %14 = icmp eq %union.anon* %13, null, !dbg !15933
  br i1 %14, label %16, label %15, !dbg !15934

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15935
  br label %16, !dbg !15937

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.145(%struct.k_thread* noundef nonnull %3) #27, !dbg !15938
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15939
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15940
  br label %17, !dbg !15941

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %18, metadata !15035, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %18, metadata !15029, metadata !DIExpression()) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %18, metadata !15912, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !15942
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !15944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15946, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15910, metadata !DIExpression()), !dbg !15918
  call void @llvm.dbg.value(metadata i32 undef, metadata !15910, metadata !DIExpression()), !dbg !15918
  ret void, !dbg !15947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15950, metadata !DIExpression()), !dbg !15951
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15952
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15953
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15954
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15955
  ret void, !dbg !15956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15959, metadata !DIExpression()), !dbg !15960
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15961
  %3 = load i8, i8* %2, align 1, !dbg !15962
  %4 = and i8 %3, -3, !dbg !15962
  store i8 %4, i8* %2, align 1, !dbg !15962
  ret void, !dbg !15963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15966, metadata !DIExpression()), !dbg !15967
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15968
  br i1 %2, label %3, label %7, !dbg !15970

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()) #25, !dbg !15971
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15974
  %5 = load i8, i8* %4, align 1, !dbg !15975
  %6 = and i8 %5, 127, !dbg !15975
  store i8 %6, i8* %4, align 1, !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()) #25, !dbg !15976
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15978
  br label %7, !dbg !15979

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15980
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15981
  %10 = zext i1 %9 to i32, !dbg !15981
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15982
  ret void, !dbg !15983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15986, metadata !DIExpression()), !dbg !15987
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15988
  %3 = load i8, i8* %2, align 1, !dbg !15989
  %4 = or i8 %3, 2, !dbg !15989
  store i8 %4, i8* %2, align 1, !dbg !15989
  ret void, !dbg !15990
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15991 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15993, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 0, metadata !15994, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !15999
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16001, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !15999
  call void @llvm.dbg.value(metadata i32 %3, metadata !15996, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()), !dbg !15998
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !16009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16011, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15994, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()), !dbg !15998
  ret void, !dbg !16012
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16013 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16019, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.value(metadata i32 %0, metadata !16017, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16018, metadata !DIExpression()), !dbg !16024
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16025
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !16026
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16027
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16028
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !16029
  call void @llvm.dbg.value(metadata i32 %6, metadata !16020, metadata !DIExpression()), !dbg !16024
  call void @llvm.dbg.value(metadata i32 0, metadata !16021, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16031
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16033, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16035
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16035
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 undef, metadata !16023, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16021, metadata !DIExpression()), !dbg !16030
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16036
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16040
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16041
  br i1 %10, label %11, label %12, !dbg !16042

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16043
  br label %12, !dbg !16045

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16033
  call void @llvm.dbg.value(metadata i32 %13, metadata !15035, metadata !DIExpression()) #25, !dbg !16035
  call void @llvm.dbg.value(metadata i32 %13, metadata !15029, metadata !DIExpression()) #25, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %13, metadata !16023, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !16048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16050, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !16021, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16021, metadata !DIExpression()), !dbg !16030
  ret i32 %6, !dbg !16051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16057, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata i64 undef, metadata !16059, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16056, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16058, metadata !DIExpression()), !dbg !16060
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16061
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16063
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16065, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16063
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16068
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16069
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15634, metadata !DIExpression()) #25, !dbg !16070
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !16070
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !16072
  ret i32 %9, !dbg !16073
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16074 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16078, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16079, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata i32 0, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16085
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16087, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata i32 undef, metadata !16082, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16079, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16084
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16090
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16079, metadata !DIExpression()), !dbg !16083
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16093
  br i1 %5, label %7, label %6, !dbg !16095

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16096
  br label %7, !dbg !16098

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %8, metadata !15035, metadata !DIExpression()) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %8, metadata !15029, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %8, metadata !16082, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !16101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16103, !srcloc !15064
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16079, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16084
  ret %struct.k_thread* %4, !dbg !16104
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16105 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16107, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16108, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 0, metadata !16109, metadata !DIExpression()), !dbg !16113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16116, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16118
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()), !dbg !16113
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16108, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16109, metadata !DIExpression()), !dbg !16113
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !16119
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16108, metadata !DIExpression()), !dbg !16112
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16122
  br i1 %5, label %8, label %6, !dbg !16124

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16125
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !16127
  br label %8, !dbg !16128

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %9, metadata !15035, metadata !DIExpression()) #25, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %9, metadata !15029, metadata !DIExpression()) #25, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %9, metadata !16111, metadata !DIExpression()), !dbg !16113
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !16129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16129
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !16131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16133, !srcloc !15064
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16108, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 undef, metadata !16109, metadata !DIExpression()), !dbg !16113
  ret %struct.k_thread* %4, !dbg !16134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16137, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15993, metadata !DIExpression()) #25, !dbg !16139
  call void @llvm.dbg.value(metadata i32 0, metadata !15994, metadata !DIExpression()) #25, !dbg !16141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16142
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16144, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16144
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16146
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %3, metadata !15996, metadata !DIExpression()) #25, !dbg !16141
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()) #25, !dbg !16141
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16147
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !16148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16148
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !16150
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16152, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !15994, metadata !DIExpression()) #25, !dbg !16141
  call void @llvm.dbg.value(metadata i32 undef, metadata !15994, metadata !DIExpression()) #25, !dbg !16141
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16153
  ret void, !dbg !16154
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16157, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 %1, metadata !16158, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i8 0, metadata !16159, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 0, metadata !16160, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16165
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16167, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16165
  call void @llvm.dbg.value(metadata i32 undef, metadata !16162, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i8 poison, metadata !16159, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16160, metadata !DIExpression()), !dbg !16164
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16170
  call void @llvm.dbg.value(metadata i1 %6, metadata !16159, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16163
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16173

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()) #25, !dbg !16174
  %11 = load i8, i8* %4, align 1, !dbg !16180
  %12 = and i8 %11, 127, !dbg !16180
  store i8 %12, i8* %4, align 1, !dbg !16180
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()) #25, !dbg !16181
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16183
  store i8 %9, i8* %8, align 2, !dbg !16184
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15209, metadata !DIExpression()) #25, !dbg !16185
  %13 = load i8, i8* %4, align 1, !dbg !16187
  %14 = or i8 %13, -128, !dbg !16187
  store i8 %14, i8* %4, align 1, !dbg !16187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15216, metadata !DIExpression()) #25, !dbg !16188
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15223, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()) #25, !dbg !16190
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16192
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15230, metadata !DIExpression()) #25, !dbg !16190
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16193
  br i1 %16, label %26, label %17, !dbg !16192

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15230, metadata !DIExpression()) #25, !dbg !16190
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15230, metadata !DIExpression()) #25, !dbg !16190
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !16195
  %21 = icmp sgt i32 %20, 0, !dbg !16196
  br i1 %21, label %22, label %23, !dbg !16197

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !16198
  br label %27, !dbg !16199

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !16193
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15230, metadata !DIExpression()) #25, !dbg !16190
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16193
  br i1 %25, label %26, label %17, !dbg !16192, !llvm.loop !16200

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !16202
  br label %27, !dbg !16203

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16204
  br label %29, !dbg !16205

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16206
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16167
  call void @llvm.dbg.value(metadata i32 %30, metadata !15035, metadata !DIExpression()) #25, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %30, metadata !15029, metadata !DIExpression()) #25, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %30, metadata !16162, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !16208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16208
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !16210
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16212, !srcloc !15064
  call void @llvm.dbg.value(metadata i8 poison, metadata !16159, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16160, metadata !DIExpression()), !dbg !16164
  ret i1 %6, !dbg !16213
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16218, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 %1, metadata !16219, metadata !DIExpression()), !dbg !16221
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !16222
  call void @llvm.dbg.value(metadata i1 %3, metadata !16220, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16221
  br i1 %3, label %4, label %12, !dbg !16223

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16225
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16226
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16226
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16226
  %9 = load i8, i8* %8, align 1, !dbg !16226
  %10 = icmp eq i8 %9, 0, !dbg !16227
  br i1 %10, label %11, label %12, !dbg !16228

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16229
  br label %12, !dbg !16231

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16233 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16235, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16239
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16241, !srcloc !15038
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16241
  call void @llvm.dbg.value(metadata i32 %2, metadata !15035, metadata !DIExpression()) #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16243
  call void @llvm.dbg.value(metadata i32 %2, metadata !15029, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %2, metadata !16237, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16235, metadata !DIExpression()), !dbg !16238
  tail call fastcc void @z_sched_lock() #27, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %2, metadata !15050, metadata !DIExpression()) #25, !dbg !16247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %2, metadata !15058, metadata !DIExpression()) #25, !dbg !16249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16251, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !16235, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16235, metadata !DIExpression()), !dbg !16238
  ret void, !dbg !16252
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16253 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16254
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16255
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16255
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16255
  %5 = load i8, i8* %4, align 1, !dbg !16256
  %6 = add i8 %5, -1, !dbg !16256
  store i8 %6, i8* %4, align 1, !dbg !16256
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16257, !srcloc !16259
  ret void, !dbg !16260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16261 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16263, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16267
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16269, !srcloc !15038
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16269
  call void @llvm.dbg.value(metadata i32 %2, metadata !15035, metadata !DIExpression()) #25, !dbg !16271
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %2, metadata !15029, metadata !DIExpression()) #25, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %2, metadata !16265, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()), !dbg !16266
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16272
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16275
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16275
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16275
  %7 = load i8, i8* %6, align 1, !dbg !16276
  %8 = add i8 %7, 1, !dbg !16276
  store i8 %8, i8* %6, align 1, !dbg !16276
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16277
  call void @llvm.dbg.value(metadata i32 %2, metadata !15050, metadata !DIExpression()) #25, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %2, metadata !15058, metadata !DIExpression()) #25, !dbg !16280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16282, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 1, metadata !16263, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()), !dbg !16266
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16283
  ret void, !dbg !16284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16285 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16286
  ret %struct.k_thread* %1, !dbg !16287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16288 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16292, metadata !DIExpression()), !dbg !16297
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16293, metadata !DIExpression()), !dbg !16297
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16294, metadata !DIExpression()), !dbg !16297
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16295, metadata !DIExpression()), !dbg !16297
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %5, metadata !16296, metadata !DIExpression()), !dbg !16297
  %6 = icmp sgt i32 %5, 0, !dbg !16301
  br i1 %6, label %17, label %7, !dbg !16303

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16304
  br i1 %8, label %17, label %9, !dbg !16306

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16307
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16307
  %12 = load i32, i32* %11, align 8, !dbg !16307
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16309
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16309
  %15 = load i32, i32* %14, align 8, !dbg !16309
  %16 = icmp ult i32 %12, %15, !dbg !16310
  br label %17, !dbg !16311

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16312
  ret i1 %18, !dbg !16313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16314 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16331, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16332, metadata !DIExpression()), !dbg !16346
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16347
  %5 = load i32, i32* %4, align 4, !dbg !16348
  %6 = add nsw i32 %5, 1, !dbg !16348
  store i32 %6, i32* %4, align 4, !dbg !16348
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16349
  store i32 %5, i32* %7, align 8, !dbg !16350
  %8 = load i32, i32* %4, align 4, !dbg !16351
  %9 = icmp eq i32 %8, 0, !dbg !16352
  br i1 %9, label %10, label %32, !dbg !16353

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16354
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16354
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16334, metadata !DIExpression()), !dbg !16354
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16354
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16354
  %14 = load i32, i32* %13, align 4, !dbg !16354
  %15 = shl i32 %14, 2, !dbg !16354
  %16 = alloca i8, i32 %15, align 8, !dbg !16354
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16354
  store i8* %16, i8** %17, align 4, !dbg !16354
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16354
  %19 = alloca i8, i32 %14, align 8, !dbg !16354
  store i8* %19, i8** %18, align 4, !dbg !16354
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16354
  store i32 -1, i32* %20, align 4, !dbg !16354
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !16355
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16343, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16333, metadata !DIExpression()), !dbg !16346
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16357
  br i1 %22, label %23, label %24, !dbg !16354

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16357
  br label %32, !dbg !16358

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16333, metadata !DIExpression()), !dbg !16346
  %26 = load i32, i32* %4, align 4, !dbg !16359
  %27 = add nsw i32 %26, 1, !dbg !16359
  store i32 %27, i32* %4, align 4, !dbg !16359
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16361
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16361
  store i32 %26, i32* %29, align 8, !dbg !16362
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !16355
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16343, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16333, metadata !DIExpression()), !dbg !16346
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16357
  br i1 %31, label %23, label %24, !dbg !16354, !llvm.loop !16363

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16365
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16366
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !16367
  ret void, !dbg !16368
}

; Function Attrs: optsize
declare !dbg !16369 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16374 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16377 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16379, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16380, metadata !DIExpression()), !dbg !16381
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16382
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16383
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !16384
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16385
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16385
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16387
  br i1 %7, label %8, label %10, !dbg !16388

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16389
  store i32 0, i32* %9, align 4, !dbg !16391
  br label %10, !dbg !16392

10:                                               ; preds = %8, %2
  ret void, !dbg !16393
}

; Function Attrs: optsize
declare !dbg !16394 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16395 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16399, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16400, metadata !DIExpression()), !dbg !16402
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16403
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !16404
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16401, metadata !DIExpression()), !dbg !16402
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16400, metadata !DIExpression()), !dbg !16402
  ret %struct.k_thread* %4, !dbg !16405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16406 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16410, metadata !DIExpression()), !dbg !16411
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !16412
  ret %struct.rbnode* %2, !dbg !16413
}

; Function Attrs: optsize
declare !dbg !16414 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16417 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16429, metadata !DIExpression()), !dbg !16433
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16434
  %3 = load i32, i32* %2, align 4, !dbg !16434
  %4 = icmp eq i32 %3, 0, !dbg !16436
  br i1 %4, label %10, label %5, !dbg !16437

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16430, metadata !DIExpression()), !dbg !16433
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16438, !range !3887
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16439
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16431, metadata !DIExpression()), !dbg !16433
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !16440
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16432, metadata !DIExpression()), !dbg !16433
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16430, metadata !DIExpression()), !dbg !16433
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16433
  ret %struct.k_thread* %11, !dbg !16441
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16442 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16446, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.value(metadata i32 0, metadata !16447, metadata !DIExpression()), !dbg !16449
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16448, metadata !DIExpression()), !dbg !16449
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16451
  br i1 %3, label %8, label %4, !dbg !16452

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16453
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16455
  call void @llvm.dbg.value(metadata i32 1, metadata !16447, metadata !DIExpression()), !dbg !16449
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16448, metadata !DIExpression()), !dbg !16449
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16451
  br i1 %7, label %8, label %4, !dbg !16452, !llvm.loop !16456

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16449
  ret i32 %9, !dbg !16458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16459 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16461, metadata !DIExpression()), !dbg !16462
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16463
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !16464
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16465
  ret %struct.k_thread* %4, !dbg !16466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16467 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16476, metadata !DIExpression()), !dbg !16477
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16478
  tail call fastcc void @sys_dlist_init.159(%struct._dnode* noundef nonnull %2) #27, !dbg !16479
  ret void, !dbg !16480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.159(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16481 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16485, metadata !DIExpression()), !dbg !16486
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16487
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16488
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16489
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16490
  ret void, !dbg !16491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16492 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !16493
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !16494
  ret void, !dbg !16495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16501, metadata !DIExpression()), !dbg !16502
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16503
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16503
  %4 = load i8, i8* %3, align 2, !dbg !16503
  %5 = sext i8 %4 to i32, !dbg !16504
  ret i32 %5, !dbg !16505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16510, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata i32 %1, metadata !16511, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16512, metadata !DIExpression()), !dbg !16513
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !16514
  ret void, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16516 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !16517
  br i1 %1, label %8, label %2, !dbg !16518

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !16519
  br i1 %3, label %8, label %4, !dbg !16520

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16521
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !16522
  %7 = xor i1 %6, true, !dbg !16520
  br label %8, !dbg !16520

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16524 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16525, !range !6378
  %2 = icmp eq i8 %1, 0, !dbg !16525
  ret i1 %2, !dbg !16526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16530
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16532, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16534
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16534
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16530
  call void @llvm.dbg.value(metadata i32 undef, metadata !16529, metadata !DIExpression()), !dbg !16535
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16536
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15192, metadata !DIExpression()) #25, !dbg !16539
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16541
  %4 = load i8, i8* %3, align 1, !dbg !16542
  %5 = and i8 %4, 127, !dbg !16542
  store i8 %5, i8* %3, align 1, !dbg !16542
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15200, metadata !DIExpression()) #25, !dbg !16543
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !16545
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15209, metadata !DIExpression()) #25, !dbg !16547
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16549
  %8 = load i8, i8* %7, align 1, !dbg !16550
  %9 = or i8 %8, -128, !dbg !16550
  store i8 %9, i8* %7, align 1, !dbg !16550
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15216, metadata !DIExpression()) #25, !dbg !16551
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15223, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15229, metadata !DIExpression()) #25, !dbg !16553
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16555
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15230, metadata !DIExpression()) #25, !dbg !16553
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16556
  br i1 %11, label %22, label %12, !dbg !16555

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15230, metadata !DIExpression()) #25, !dbg !16553
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15230, metadata !DIExpression()) #25, !dbg !16553
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !16558
  %16 = icmp sgt i32 %15, 0, !dbg !16559
  br i1 %16, label %17, label %19, !dbg !16560

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16561
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !16562
  br label %24, !dbg !16563

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !16556
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15230, metadata !DIExpression()) #25, !dbg !16553
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16556
  br i1 %21, label %22, label %12, !dbg !16555, !llvm.loop !16564

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16566
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !16567
  br label %24, !dbg !16568

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %25, metadata !15035, metadata !DIExpression()) #25, !dbg !16534
  call void @llvm.dbg.value(metadata i32 %25, metadata !15029, metadata !DIExpression()) #25, !dbg !16530
  call void @llvm.dbg.value(metadata i32 %25, metadata !16529, metadata !DIExpression()), !dbg !16535
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16569
  call void @llvm.dbg.value(metadata i32 undef, metadata !15634, metadata !DIExpression()) #25, !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !16570
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !16572
  ret void, !dbg !16573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16574 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16578, metadata !DIExpression()), !dbg !16581
  %3 = icmp eq i64 %2, -1, !dbg !16582
  br i1 %3, label %4, label %6, !dbg !16584

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16585
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !16587
  br label %11, !dbg !16588

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16579, metadata !DIExpression()), !dbg !16581
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !16589
  %8 = sext i32 %7 to i64, !dbg !16589
  call void @llvm.dbg.value(metadata i64 %8, metadata !16579, metadata !DIExpression()), !dbg !16581
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !16590
  %10 = trunc i64 %9 to i32, !dbg !16590
  call void @llvm.dbg.value(metadata i32 %10, metadata !16580, metadata !DIExpression()), !dbg !16581
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16581
  ret i32 %12, !dbg !16591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16596, metadata !DIExpression()), !dbg !16597
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16598, !srcloc !16600
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !16601
  ret void, !dbg !16602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16603 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16607, metadata !DIExpression()), !dbg !16611
  %2 = icmp eq i64 %0, 0, !dbg !16612
  br i1 %2, label %3, label %4, !dbg !16614

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !16615
  br label %29, !dbg !16617

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16609, metadata !DIExpression()), !dbg !16611
  %5 = icmp sgt i64 %0, -3, !dbg !16618
  br i1 %5, label %6, label %10, !dbg !16620

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16621
  %8 = trunc i64 %0 to i32, !dbg !16623
  %9 = add i32 %7, %8, !dbg !16623
  call void @llvm.dbg.value(metadata i32 %9, metadata !16608, metadata !DIExpression()), !dbg !16611
  br label %13, !dbg !16624

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16625
  %12 = sub i32 -2, %11, !dbg !16625
  call void @llvm.dbg.value(metadata i32 %12, metadata !16608, metadata !DIExpression()), !dbg !16611
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16627
  call void @llvm.dbg.value(metadata i32 %14, metadata !16608, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16628
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16630, !srcloc !15038
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %16, metadata !15035, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 %16, metadata !15029, metadata !DIExpression()) #25, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %16, metadata !16610, metadata !DIExpression()), !dbg !16611
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16633
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16634
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !16635
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16636
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16637
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !16637
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16638
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %16, metadata !15634, metadata !DIExpression()) #25, !dbg !16640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !16640
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !16642
  %22 = zext i32 %14 to i64, !dbg !16643
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16644
  %24 = zext i32 %23 to i64, !dbg !16644
  %25 = sub nsw i64 %22, %24, !dbg !16645
  call void @llvm.dbg.value(metadata i64 %25, metadata !16607, metadata !DIExpression()), !dbg !16611
  %26 = icmp sgt i64 %25, 0, !dbg !16646
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16646
  %28 = trunc i64 %27 to i32, !dbg !16646
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16611
  ret i32 %30, !dbg !16647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16648 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16650, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata i64 %0, metadata !15070, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 10000, metadata !15073, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 1000, metadata !15074, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i8 1, metadata !15075, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i1 false, metadata !15076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16652
  call void @llvm.dbg.value(metadata i1 false, metadata !15077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16652
  call void @llvm.dbg.value(metadata i8 0, metadata !15078, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i1 false, metadata !15079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16652
  call void @llvm.dbg.value(metadata i1 true, metadata !15080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16652
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i64 %0, metadata !15070, metadata !DIExpression()), !dbg !16652
  %2 = udiv i64 %0, 10, !dbg !16654
  ret i64 %2, !dbg !16658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16659 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16660, !srcloc !16662
  tail call void @z_impl_k_yield() #27, !dbg !16663
  ret void, !dbg !16664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16669, metadata !DIExpression()), !dbg !16671
  %2 = sext i32 %0 to i64, !dbg !16672
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !16673
  call void @llvm.dbg.value(metadata i64 %3, metadata !16670, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16671
  %4 = shl i64 %3, 32, !dbg !16674
  %5 = ashr exact i64 %4, 32, !dbg !16674
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %6, metadata !16670, metadata !DIExpression()), !dbg !16671
  %7 = sext i32 %6 to i64, !dbg !16676
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !16677
  %9 = trunc i64 %8 to i32, !dbg !16677
  ret i32 %9, !dbg !16678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16679 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16681, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata i64 %0, metadata !15070, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15073, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i32 10000, metadata !15074, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i8 1, metadata !15075, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i1 false, metadata !15076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16683
  call void @llvm.dbg.value(metadata i1 true, metadata !15077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16683
  call void @llvm.dbg.value(metadata i8 0, metadata !15078, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i1 false, metadata !15079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16683
  call void @llvm.dbg.value(metadata i1 true, metadata !15080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16683
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16683
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16683
  %2 = add i64 %0, 99, !dbg !16685
  call void @llvm.dbg.value(metadata i64 %2, metadata !15070, metadata !DIExpression()), !dbg !16683
  %3 = udiv i64 %2, 100, !dbg !16686
  ret i64 %3, !dbg !16687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16688 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16690, metadata !DIExpression()), !dbg !16691
  call void @llvm.dbg.value(metadata i64 %0, metadata !15070, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 10000, metadata !15073, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15074, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i8 1, metadata !15075, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i1 false, metadata !15076, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16692
  call void @llvm.dbg.value(metadata i1 false, metadata !15077, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16692
  call void @llvm.dbg.value(metadata i8 0, metadata !15078, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i1 true, metadata !15079, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16692
  call void @llvm.dbg.value(metadata i1 false, metadata !15080, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16692
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i64 0, metadata !15081, metadata !DIExpression()), !dbg !16692
  %2 = mul i64 %0, 100, !dbg !16694
  ret i64 %2, !dbg !16696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16699, metadata !DIExpression()), !dbg !16700
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !16701
  br i1 %2, label %14, label %3, !dbg !16703

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16704
  %5 = icmp slt i32 %4, 0, !dbg !16706
  br i1 %5, label %6, label %10, !dbg !16707

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16708
  %8 = load i8, i8* %7, align 1, !dbg !16708
  %9 = icmp eq i8 %8, 16, !dbg !16711
  br i1 %9, label %10, label %14, !dbg !16712

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16713
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16714
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16715, !srcloc !15674
  call void @llvm.dbg.value(metadata i32 %11, metadata !15670, metadata !DIExpression()) #25, !dbg !16719
  %12 = icmp eq i32 %11, 0, !dbg !16720
  br i1 %12, label %13, label %14, !dbg !16721

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16722
  br label %14, !dbg !16724

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16728, metadata !DIExpression()), !dbg !16729
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16730
  %3 = load i8, i8* %2, align 1, !dbg !16730
  %4 = and i8 %3, 2, !dbg !16731
  %5 = icmp ne i8 %4, 0, !dbg !16732
  ret i1 %5, !dbg !16733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16734 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16738, metadata !DIExpression()), !dbg !16740
  ret %struct.k_thread* %1, !dbg !16741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16742 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16743, !srcloc !15674
  call void @llvm.dbg.value(metadata i32 %1, metadata !15670, metadata !DIExpression()) #25, !dbg !16746
  %2 = icmp eq i32 %1, 0, !dbg !16747
  br i1 %2, label %3, label %8, !dbg !16748

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16749
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16750
  %6 = icmp ne i32 %5, 0, !dbg !16748
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16754, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16757
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16759, !srcloc !15038
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16759
  call void @llvm.dbg.value(metadata i32 %3, metadata !15035, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %3, metadata !15029, metadata !DIExpression()) #25, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %3, metadata !16755, metadata !DIExpression()), !dbg !16756
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16762
  %5 = load i8, i8* %4, align 4, !dbg !16762
  %6 = and i8 %5, 1, !dbg !16764
  %7 = icmp eq i8 %6, 0, !dbg !16765
  br i1 %7, label %9, label %8, !dbg !16766

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !16767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !16770
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16772, !srcloc !15064
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16773, !srcloc !16775
  br label %24, !dbg !16776

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16777
  %11 = load i8, i8* %10, align 1, !dbg !16777
  %12 = and i8 %11, 8, !dbg !16779
  %13 = icmp eq i8 %12, 0, !dbg !16780
  br i1 %13, label %15, label %14, !dbg !16781

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !16782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !16785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16787, !srcloc !15064
  br label %24, !dbg !16788

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16789
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16790
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16792
  br i1 %17, label %18, label %23, !dbg !16793

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16794, !srcloc !15674
  call void @llvm.dbg.value(metadata i32 %19, metadata !15670, metadata !DIExpression()) #25, !dbg !16797
  %20 = icmp eq i32 %19, 0, !dbg !16798
  br i1 %20, label %21, label %23, !dbg !16799

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15634, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !16800
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16803
  br label %23, !dbg !16804

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15050, metadata !DIExpression()) #25, !dbg !16805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16805
  call void @llvm.dbg.value(metadata i32 %3, metadata !15058, metadata !DIExpression()) #25, !dbg !16807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16809, !srcloc !15064
  br label %24, !dbg !16810

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16813, metadata !DIExpression()), !dbg !16814
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16815
  %3 = load i8, i8* %2, align 1, !dbg !16815
  %4 = and i8 %3, 8, !dbg !16817
  %5 = icmp eq i8 %4, 0, !dbg !16818
  br i1 %5, label %6, label %20, !dbg !16819

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16820
  %8 = or i8 %7, 8, !dbg !16820
  store i8 %8, i8* %2, align 1, !dbg !16820
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16822
  br i1 %9, label %10, label %12, !dbg !16824

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15192, metadata !DIExpression()) #25, !dbg !16825
  %11 = and i8 %8, 95, !dbg !16828
  store i8 %11, i8* %2, align 1, !dbg !16828
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15200, metadata !DIExpression()) #25, !dbg !16829
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16831
  br label %12, !dbg !16832

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16833
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16833
  %15 = icmp eq %union.anon* %14, null, !dbg !16835
  br i1 %15, label %17, label %16, !dbg !16836

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16837
  br label %17, !dbg !16839

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16840
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16841
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16842
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16843
  br label %20, !dbg !16844

20:                                               ; preds = %17, %1
  ret void, !dbg !16845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16846 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16850, metadata !DIExpression()), !dbg !16852
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16853
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16851, metadata !DIExpression()), !dbg !16852
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16854
  br i1 %3, label %10, label %4, !dbg !16855

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16856
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16859, metadata !DIExpression()), !dbg !16865
  call void @llvm.dbg.value(metadata i32 0, metadata !16864, metadata !DIExpression()), !dbg !16865
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16867
  store i32 0, i32* %7, align 4, !dbg !16868
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16869
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16853
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16851, metadata !DIExpression()), !dbg !16852
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16854
  br i1 %9, label %10, label %4, !dbg !16855, !llvm.loop !16870

10:                                               ; preds = %4, %1
  ret void, !dbg !16872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16873 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16878, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16877, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16882
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16884, !srcloc !15038
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16884
  call void @llvm.dbg.value(metadata i32 %4, metadata !15035, metadata !DIExpression()) #25, !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16886
  call void @llvm.dbg.value(metadata i32 %4, metadata !15029, metadata !DIExpression()) #25, !dbg !16882
  call void @llvm.dbg.value(metadata i32 %4, metadata !16879, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 0, metadata !16880, metadata !DIExpression()), !dbg !16881
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16887
  %6 = load i8, i8* %5, align 1, !dbg !16887
  %7 = and i8 %6, 8, !dbg !16889
  %8 = icmp eq i8 %7, 0, !dbg !16890
  br i1 %8, label %9, label %24, !dbg !16891

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16878, metadata !DIExpression()), !dbg !16881
  %11 = icmp eq i64 %10, 0, !dbg !16892
  br i1 %11, label %24, label %12, !dbg !16894

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16895
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16897
  br i1 %14, label %24, label %15, !dbg !16898

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16899
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16899
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16900
  %19 = icmp eq %union.anon* %17, %18, !dbg !16901
  br i1 %19, label %24, label %20, !dbg !16902

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16903
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16905
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16906
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16907
  call void @llvm.dbg.value(metadata i32 %4, metadata !15634, metadata !DIExpression()) #25, !dbg !16908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15639, metadata !DIExpression()) #25, !dbg !16908
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16910
  call void @llvm.dbg.value(metadata i32 %23, metadata !16880, metadata !DIExpression()), !dbg !16881
  br label %26, !dbg !16911

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16912
  call void @llvm.dbg.value(metadata i32 %25, metadata !16880, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata i32 %4, metadata !15050, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata i32 %4, metadata !15058, metadata !DIExpression()) #25, !dbg !16915
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16917, !srcloc !15064
  br label %26, !dbg !16918

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16881
  ret i32 %27, !dbg !16919
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16920 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16924, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i32 %1, metadata !16925, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i8* %2, metadata !16926, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i8 0, metadata !16928, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i32 0, metadata !16929, metadata !DIExpression()), !dbg !16933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15023, metadata !DIExpression()) #25, !dbg !16934
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16936, !srcloc !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()) #25, !dbg !16938
  call void @llvm.dbg.value(metadata i32 undef, metadata !15036, metadata !DIExpression()) #25, !dbg !16938
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()) #25, !dbg !16934
  call void @llvm.dbg.value(metadata i32 undef, metadata !16931, metadata !DIExpression()), !dbg !16933
  call void @llvm.dbg.value(metadata i8 poison, metadata !16928, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()), !dbg !16933
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16939
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16927, metadata !DIExpression()), !dbg !16932
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16942
  br i1 %7, label %12, label %8, !dbg !16944

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16945, metadata !DIExpression()), !dbg !16952
  call void @llvm.dbg.value(metadata i32 %1, metadata !16950, metadata !DIExpression()), !dbg !16952
  call void @llvm.dbg.value(metadata i8* %2, metadata !16951, metadata !DIExpression()), !dbg !16952
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16859, metadata !DIExpression()), !dbg !16955
  call void @llvm.dbg.value(metadata i32 %1, metadata !16864, metadata !DIExpression()), !dbg !16955
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16957
  store i32 %1, i32* %9, align 4, !dbg !16958
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16959
  store i8* %2, i8** %10, align 4, !dbg !16960
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16961
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16962
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16963
  call void @llvm.dbg.value(metadata i8 1, metadata !16928, metadata !DIExpression()), !dbg !16932
  br label %12, !dbg !16964

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16936
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16936
  call void @llvm.dbg.value(metadata i32 %14, metadata !15035, metadata !DIExpression()) #25, !dbg !16938
  call void @llvm.dbg.value(metadata i32 %14, metadata !15029, metadata !DIExpression()) #25, !dbg !16934
  call void @llvm.dbg.value(metadata i32 %14, metadata !16931, metadata !DIExpression()), !dbg !16933
  call void @llvm.dbg.value(metadata i8 poison, metadata !16928, metadata !DIExpression()), !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !15050, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15055, metadata !DIExpression()) #25, !dbg !16965
  call void @llvm.dbg.value(metadata i32 undef, metadata !15058, metadata !DIExpression()) #25, !dbg !16967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16969, !srcloc !15064
  call void @llvm.dbg.value(metadata i32 undef, metadata !16929, metadata !DIExpression()), !dbg !16933
  ret i1 %13, !dbg !16970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16971 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata i64 undef, metadata !16978, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16975, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16977, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.value(metadata i8** %4, metadata !16979, metadata !DIExpression()), !dbg !16981
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %6, metadata !16980, metadata !DIExpression()), !dbg !16981
  %7 = icmp eq i8** %4, null, !dbg !16983
  br i1 %7, label %12, label %8, !dbg !16985

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16986
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16988
  %11 = load i8*, i8** %10, align 4, !dbg !16988
  store i8* %11, i8** %4, align 4, !dbg !16989
  br label %12, !dbg !16990

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16992 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16994
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16995
  ret void, !dbg !16996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16997 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17007, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17005, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17006, metadata !DIExpression()), !dbg !17024
  %5 = icmp eq i64 %4, -1, !dbg !17025
  br i1 %5, label %55, label %6, !dbg !17027

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17028
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17029
  call void @llvm.dbg.value(metadata i32 0, metadata !17008, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17038
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17040, !srcloc !17046
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17040
  call void @llvm.dbg.value(metadata i32 %9, metadata !17043, metadata !DIExpression()) #25, !dbg !17047
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17047
  call void @llvm.dbg.value(metadata i32 %9, metadata !17037, metadata !DIExpression()) #25, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %9, metadata !17014, metadata !DIExpression()), !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17030
  %10 = icmp slt i64 %4, -1, !dbg !17048
  br i1 %10, label %11, label %17, !dbg !17049

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17050
  %13 = add i64 %4, %12, !dbg !17051
  %14 = sub i64 -2, %13, !dbg !17051
  call void @llvm.dbg.value(metadata i64 %14, metadata !17018, metadata !DIExpression()), !dbg !17052
  %15 = icmp sgt i64 %14, 1, !dbg !17053
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17053
  br label %22, !dbg !17054

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17055
  %19 = tail call fastcc i32 @elapsed.170() #27, !dbg !17057
  %20 = sext i32 %19 to i64, !dbg !17057
  %21 = add nsw i64 %18, %20, !dbg !17058
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17059
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17060
  store i64 %23, i64* %24, align 8, !dbg !17061
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !17062
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17015, metadata !DIExpression()), !dbg !17064
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17065
  br i1 %26, label %42, label %27, !dbg !17065

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17066
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17015, metadata !DIExpression()), !dbg !17064
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17070
  %31 = load i64, i64* %30, align 8, !dbg !17070
  %32 = icmp slt i64 %28, %31, !dbg !17071
  br i1 %32, label %33, label %38, !dbg !17072

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17070
  %35 = sub nsw i64 %31, %28, !dbg !17073
  store i64 %35, i64* %34, align 8, !dbg !17073
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17075
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17076
  tail call fastcc void @sys_dlist_insert.171(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !17077
  br label %44, !dbg !17078

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17079
  store i64 %39, i64* %24, align 8, !dbg !17079
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !17080
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17015, metadata !DIExpression()), !dbg !17064
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17065
  br i1 %41, label %42, label %27, !dbg !17065, !llvm.loop !17081

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17083
  tail call fastcc void @sys_dlist_append.172(%struct._dnode* noundef %43) #27, !dbg !17086
  br label %44, !dbg !17087

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !17088
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17089
  br i1 %46, label %47, label %54, !dbg !17090

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !17091
  call void @llvm.dbg.value(metadata i32 %48, metadata !17021, metadata !DIExpression()), !dbg !17092
  %49 = icmp ne i32 %48, 0, !dbg !17093
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17095
  br i1 %52, label %54, label %53, !dbg !17095

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !17096
  br label %54, !dbg !17098

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17099, metadata !DIExpression()) #25, !dbg !17105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %9, metadata !17107, metadata !DIExpression()) #25, !dbg !17110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17112, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17008, metadata !DIExpression()), !dbg !17030
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.170() unnamed_addr #1 !dbg !17115 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17118
  %2 = icmp eq i32 %1, 0, !dbg !17119
  br i1 %2, label %3, label %5, !dbg !17118

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !17120
  br label %5, !dbg !17118

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17118
  ret i32 %6, !dbg !17121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !17122 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.175() #27, !dbg !17128
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17126, metadata !DIExpression()), !dbg !17129
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17130
  ret %struct._timeout* %2, !dbg !17131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.171(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !17132 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17136, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17137, metadata !DIExpression()), !dbg !17140
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17141
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17141
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17138, metadata !DIExpression()), !dbg !17140
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17142
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17143
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17144
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17145
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17146
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17147
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17148
  ret void, !dbg !17149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !17150 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17154, metadata !DIExpression()), !dbg !17156
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17157
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef %2) #27, !dbg !17158
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17155, metadata !DIExpression()), !dbg !17156
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17159
  ret %struct._timeout* %4, !dbg !17160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.172(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !17161 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17166, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17167, metadata !DIExpression()), !dbg !17169
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17170
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17168, metadata !DIExpression()), !dbg !17169
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17171
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17172
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17173
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17174
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17175
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17176
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17177
  ret void, !dbg !17178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17179 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !17184
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17181, metadata !DIExpression()), !dbg !17185
  %2 = tail call fastcc i32 @elapsed.170() #27, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %2, metadata !17182, metadata !DIExpression()), !dbg !17185
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17187
  br i1 %3, label %14, label %4, !dbg !17189

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17190
  %6 = load i64, i64* %5, align 8, !dbg !17190
  %7 = sext i32 %2 to i64, !dbg !17191
  %8 = sub nsw i64 %6, %7, !dbg !17192
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17193
  br i1 %9, label %14, label %10, !dbg !17194

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17195
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17195
  %13 = trunc i64 %12 to i32, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %13, metadata !17183, metadata !DIExpression()), !dbg !17185
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17197
  call void @llvm.dbg.value(metadata i32 %15, metadata !17183, metadata !DIExpression()), !dbg !17185
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17198
  %17 = icmp ne i32 %16, 0, !dbg !17200
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17201
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %20, metadata !17183, metadata !DIExpression()), !dbg !17185
  ret i32 %20, !dbg !17202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17203 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17207, metadata !DIExpression()), !dbg !17209
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17208, metadata !DIExpression()), !dbg !17209
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17210
  br i1 %2, label %5, label %3, !dbg !17211

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef nonnull %0) #27, !dbg !17212
  br label %5, !dbg !17211

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17211
  ret %struct._dnode* %6, !dbg !17213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !17214 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17216, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17217, metadata !DIExpression()), !dbg !17218
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17219
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17220
  br i1 %3, label %7, label %4, !dbg !17221

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17222
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17222
  br label %7, !dbg !17221

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17221
  ret %struct._dnode* %8, !dbg !17223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.175() unnamed_addr #5 !dbg !17224 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17228, metadata !DIExpression()), !dbg !17229
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.176() #27, !dbg !17230
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17230
  ret %struct._dnode* %3, !dbg !17231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.176() unnamed_addr #5 !dbg !17232 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17236, metadata !DIExpression()), !dbg !17237
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17238
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17239
  ret i1 %2, !dbg !17240
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17241 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17245, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 -22, metadata !17246, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 0, metadata !17247, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17252
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17254, !srcloc !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !17043, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !17249, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata i32 -22, metadata !17246, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !17247, metadata !DIExpression()), !dbg !17251
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17246, metadata !DIExpression()), !dbg !17250
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %3) #27, !dbg !17257
  br i1 %4, label %5, label %6, !dbg !17261

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !17262
  call void @llvm.dbg.value(metadata i32 0, metadata !17246, metadata !DIExpression()), !dbg !17250
  br label %6, !dbg !17264

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17250
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17254
  call void @llvm.dbg.value(metadata i32 %8, metadata !17043, metadata !DIExpression()) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 %8, metadata !17037, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %8, metadata !17249, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.value(metadata i32 %7, metadata !17246, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #25, !dbg !17265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17269, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17247, metadata !DIExpression()), !dbg !17251
  ret i32 %7, !dbg !17270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17271 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17277, metadata !DIExpression()), !dbg !17278
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17279
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17279
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17280
  ret i1 %4, !dbg !17281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17282 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17284, metadata !DIExpression()), !dbg !17285
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !17286
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17288
  br i1 %3, label %10, label %4, !dbg !17289

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17290
  %6 = load i64, i64* %5, align 8, !dbg !17290
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17292
  %8 = load i64, i64* %7, align 8, !dbg !17293
  %9 = add nsw i64 %8, %6, !dbg !17293
  store i64 %9, i64* %7, align 8, !dbg !17293
  br label %10, !dbg !17294

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17295
  tail call fastcc void @sys_dlist_remove.180(%struct._dnode* noundef %11) #27, !dbg !17296
  ret void, !dbg !17297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.180(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17298 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17302, metadata !DIExpression()), !dbg !17305
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17306
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17306
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17303, metadata !DIExpression()), !dbg !17305
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17307
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17307
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17304, metadata !DIExpression()), !dbg !17305
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17308
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17309
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17310
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17311
  tail call fastcc void @sys_dnode_init.181(%struct._dnode* noundef %0) #27, !dbg !17312
  ret void, !dbg !17313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.181(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17314 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17316, metadata !DIExpression()), !dbg !17317
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17318
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17319
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17320
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17321
  ret void, !dbg !17322
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17323 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17329, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i64 0, metadata !17330, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 0, metadata !17331, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17336
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17338, !srcloc !17046
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %3, metadata !17043, metadata !DIExpression()) #25, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17340
  call void @llvm.dbg.value(metadata i32 %3, metadata !17037, metadata !DIExpression()) #25, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %3, metadata !17333, metadata !DIExpression()), !dbg !17335
  call void @llvm.dbg.value(metadata i64 0, metadata !17330, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 undef, metadata !17331, metadata !DIExpression()), !dbg !17335
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !17341
  call void @llvm.dbg.value(metadata i64 %4, metadata !17330, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.value(metadata i32 %3, metadata !17099, metadata !DIExpression()) #25, !dbg !17344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17344
  call void @llvm.dbg.value(metadata i32 %3, metadata !17107, metadata !DIExpression()) #25, !dbg !17346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17348, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17331, metadata !DIExpression()), !dbg !17335
  ret i64 %4, !dbg !17349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17350 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17352, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i64 0, metadata !17353, metadata !DIExpression()), !dbg !17356
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* noundef %0) #27, !dbg !17357
  br i1 %2, label %21, label %3, !dbg !17359

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !17360
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17354, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata i64 0, metadata !17353, metadata !DIExpression()), !dbg !17356
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17362
  br i1 %5, label %16, label %6, !dbg !17364

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17354, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata i64 %8, metadata !17353, metadata !DIExpression()), !dbg !17356
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17365
  %10 = load i64, i64* %9, align 8, !dbg !17365
  %11 = add nsw i64 %10, %8, !dbg !17367
  call void @llvm.dbg.value(metadata i64 %11, metadata !17353, metadata !DIExpression()), !dbg !17356
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17368
  br i1 %12, label %16, label %13, !dbg !17370

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !17371
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17354, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata i64 %11, metadata !17353, metadata !DIExpression()), !dbg !17356
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17362
  br i1 %15, label %16, label %6, !dbg !17364, !llvm.loop !17372

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17356
  call void @llvm.dbg.value(metadata i64 %17, metadata !17353, metadata !DIExpression()), !dbg !17356
  %18 = tail call fastcc i32 @elapsed.170() #27, !dbg !17374
  %19 = sext i32 %18 to i64, !dbg !17374
  %20 = sub nsw i64 %17, %19, !dbg !17375
  br label %21, !dbg !17376

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17356
  ret i64 %22, !dbg !17377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17378 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17382, metadata !DIExpression()), !dbg !17383
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17384
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %2) #27, !dbg !17385
  %4 = xor i1 %3, true, !dbg !17386
  ret i1 %4, !dbg !17387
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17388 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17390, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata i64 0, metadata !17391, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata i32 0, metadata !17392, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17397
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17399, !srcloc !17046
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17399
  call void @llvm.dbg.value(metadata i32 %3, metadata !17043, metadata !DIExpression()) #25, !dbg !17401
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17401
  call void @llvm.dbg.value(metadata i32 %3, metadata !17037, metadata !DIExpression()) #25, !dbg !17397
  call void @llvm.dbg.value(metadata i32 %3, metadata !17394, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i64 0, metadata !17391, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata i32 undef, metadata !17392, metadata !DIExpression()), !dbg !17396
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17402
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !17405
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17391, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17395
  call void @llvm.dbg.value(metadata i32 %3, metadata !17099, metadata !DIExpression()) #25, !dbg !17406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %3, metadata !17107, metadata !DIExpression()) #25, !dbg !17408
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17410, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17392, metadata !DIExpression()), !dbg !17396
  %6 = add i64 %5, %4, !dbg !17411
  ret i64 %6, !dbg !17412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17413 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 0, metadata !17416, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17421
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17423, !srcloc !17046
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17423
  call void @llvm.dbg.value(metadata i32 %2, metadata !17043, metadata !DIExpression()) #25, !dbg !17425
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %2, metadata !17037, metadata !DIExpression()) #25, !dbg !17421
  call void @llvm.dbg.value(metadata i32 %2, metadata !17418, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata i32 -1, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()), !dbg !17420
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %3, metadata !17415, metadata !DIExpression()), !dbg !17419
  call void @llvm.dbg.value(metadata i32 %2, metadata !17099, metadata !DIExpression()) #25, !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17429
  call void @llvm.dbg.value(metadata i32 %2, metadata !17107, metadata !DIExpression()) #25, !dbg !17431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17433, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17416, metadata !DIExpression()), !dbg !17420
  ret i32 %3, !dbg !17434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17437, metadata !DIExpression()), !dbg !17447
  call void @llvm.dbg.value(metadata i1 %1, metadata !17438, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17447
  call void @llvm.dbg.value(metadata i32 0, metadata !17439, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17449
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17451, !srcloc !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !17043, metadata !DIExpression()) #25, !dbg !17453
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17453
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #25, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()), !dbg !17448
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !17454
  call void @llvm.dbg.value(metadata i32 %4, metadata !17442, metadata !DIExpression()), !dbg !17455
  call void @llvm.dbg.value(metadata i1 undef, metadata !17445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17455
  %5 = icmp slt i32 %4, 2, !dbg !17456
  call void @llvm.dbg.value(metadata i1 %5, metadata !17446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17455
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17457
  call void @llvm.dbg.value(metadata i1 %6, metadata !17445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17455
  br i1 %7, label %11, label %8, !dbg !17457

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17459
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17459
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !17461
  br label %11, !dbg !17462

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17451
  call void @llvm.dbg.value(metadata i32 %12, metadata !17043, metadata !DIExpression()) #25, !dbg !17453
  call void @llvm.dbg.value(metadata i32 %12, metadata !17037, metadata !DIExpression()) #25, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %12, metadata !17441, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17099, metadata !DIExpression()) #25, !dbg !17463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17463
  call void @llvm.dbg.value(metadata i32 undef, metadata !17107, metadata !DIExpression()) #25, !dbg !17465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17467, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 1, metadata !17439, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.value(metadata i32 undef, metadata !17439, metadata !DIExpression()), !dbg !17448
  ret void, !dbg !17468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17473, metadata !DIExpression()), !dbg !17478
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !17479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17480
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17482, !srcloc !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !17043, metadata !DIExpression()) #25, !dbg !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17484
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #25, !dbg !17480
  call void @llvm.dbg.value(metadata i32 undef, metadata !17474, metadata !DIExpression()), !dbg !17478
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17478
  call void @llvm.dbg.value(metadata i32 undef, metadata !17474, metadata !DIExpression()), !dbg !17478
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !17485
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17486
  br i1 %4, label %28, label %5, !dbg !17487

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17488
  %10 = load i64, i64* %9, align 8, !dbg !17488
  %11 = sext i32 %8 to i64, !dbg !17489
  %12 = icmp sgt i64 %10, %11, !dbg !17490
  br i1 %12, label %26, label %13, !dbg !17491

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17478
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17475, metadata !DIExpression()), !dbg !17492
  %15 = trunc i64 %10 to i32, !dbg !17493
  call void @llvm.dbg.value(metadata i32 %15, metadata !17477, metadata !DIExpression()), !dbg !17492
  %16 = sext i32 %15 to i64, !dbg !17494
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17495
  %18 = add i64 %17, %16, !dbg !17495
  store i64 %18, i64* @curr_tick, align 8, !dbg !17495
  store i64 0, i64* %9, align 8, !dbg !17496
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !17497
  call void @llvm.dbg.value(metadata i32 %14, metadata !17099, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17498
  call void @llvm.dbg.value(metadata i32 %14, metadata !17107, metadata !DIExpression()) #25, !dbg !17500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17502, !srcloc !17113
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17503
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17503
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !17504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17505
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17507, !srcloc !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !17043, metadata !DIExpression()) #25, !dbg !17509
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17509
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #25, !dbg !17505
  call void @llvm.dbg.value(metadata i32 undef, metadata !17474, metadata !DIExpression()), !dbg !17478
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17510
  %23 = sub nsw i32 %22, %15, !dbg !17510
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17478
  call void @llvm.dbg.value(metadata i32 undef, metadata !17474, metadata !DIExpression()), !dbg !17478
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !17485
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17486
  br i1 %25, label %28, label %5, !dbg !17487, !llvm.loop !17511

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17513
  store i64 %27, i64* %9, align 8, !dbg !17513
  br label %32, !dbg !17516

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17478
  %31 = sext i32 %30 to i64, !dbg !17517
  br label %32, !dbg !17517

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17517
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17478
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17518
  %37 = add i64 %36, %33, !dbg !17518
  store i64 %37, i64* @curr_tick, align 8, !dbg !17518
  store i32 0, i32* @announce_remaining, align 4, !dbg !17519
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !17520
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !17521
  call void @llvm.dbg.value(metadata i32 %35, metadata !17099, metadata !DIExpression()) #25, !dbg !17522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17522
  call void @llvm.dbg.value(metadata i32 %35, metadata !17107, metadata !DIExpression()) #25, !dbg !17524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17526, !srcloc !17113
  ret void, !dbg !17527
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17528 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17532, metadata !DIExpression()), !dbg !17536
  call void @llvm.dbg.value(metadata i32 0, metadata !17533, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17031, metadata !DIExpression()) #25, !dbg !17538
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17540, !srcloc !17046
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17540
  call void @llvm.dbg.value(metadata i32 %2, metadata !17043, metadata !DIExpression()) #25, !dbg !17542
  call void @llvm.dbg.value(metadata i32 undef, metadata !17044, metadata !DIExpression()) #25, !dbg !17542
  call void @llvm.dbg.value(metadata i32 %2, metadata !17037, metadata !DIExpression()) #25, !dbg !17538
  call void @llvm.dbg.value(metadata i32 %2, metadata !17535, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata i64 0, metadata !17532, metadata !DIExpression()), !dbg !17536
  call void @llvm.dbg.value(metadata i32 undef, metadata !17533, metadata !DIExpression()), !dbg !17537
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17543
  %4 = tail call fastcc i32 @elapsed.170() #27, !dbg !17546
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17532, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17536
  call void @llvm.dbg.value(metadata i32 %2, metadata !17099, metadata !DIExpression()) #25, !dbg !17547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17104, metadata !DIExpression()) #25, !dbg !17547
  call void @llvm.dbg.value(metadata i32 %2, metadata !17107, metadata !DIExpression()) #25, !dbg !17549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17551, !srcloc !17113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17533, metadata !DIExpression()), !dbg !17537
  %5 = sext i32 %4 to i64, !dbg !17546
  %6 = add i64 %3, %5, !dbg !17552
  ret i64 %6, !dbg !17553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17554 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !17555
  %2 = trunc i64 %1 to i32, !dbg !17556
  ret i32 %2, !dbg !17557
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17558 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !17559
  ret i64 %1, !dbg !17560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17563, metadata !DIExpression()), !dbg !17570
  %2 = icmp eq i32 %0, 0, !dbg !17571
  br i1 %2, label %10, label %3, !dbg !17573

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !17574
  call void @llvm.dbg.value(metadata i32 %4, metadata !17564, metadata !DIExpression()), !dbg !17570
  %5 = mul i32 %0, 84, !dbg !17575
  call void @llvm.dbg.value(metadata i32 %5, metadata !17565, metadata !DIExpression()), !dbg !17570
  br label %6, !dbg !17576

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !17577
  call void @llvm.dbg.value(metadata i32 %7, metadata !17566, metadata !DIExpression()), !dbg !17578
  %8 = sub i32 %7, %4, !dbg !17579
  %9 = icmp ult i32 %8, %5, !dbg !17581
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17583 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !17584
  ret i32 %1, !dbg !17585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17586 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !17588
  ret i32 %1, !dbg !17589
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17590 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17594, metadata !DIExpression()), !dbg !17596
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17597

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !17598
  br label %14, !dbg !17602

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17595, metadata !DIExpression()), !dbg !17596
  %6 = icmp slt i64 %2, -1, !dbg !17603
  br i1 %6, label %7, label %9, !dbg !17606

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17607
  br label %14, !dbg !17608

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !17610
  %11 = icmp ugt i64 %2, 1, !dbg !17611
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17611
  %13 = add nsw i64 %10, %12, !dbg !17612
  br label %14, !dbg !17613

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17614
  ret i64 %15, !dbg !17615
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17616 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17619, metadata !DIExpression()), !dbg !17652
  %2 = icmp eq i8* %0, null, !dbg !17653
  br i1 %2, label %7, label %3, !dbg !17655

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17620, metadata !DIExpression()), !dbg !17652
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17656
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17656
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17620, metadata !DIExpression()), !dbg !17652
  call void @llvm.dbg.value(metadata i8* %4, metadata !17619, metadata !DIExpression()), !dbg !17652
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17658
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !17659
  br label %7, !dbg !17660

7:                                                ; preds = %3, %1
  ret void, !dbg !17661
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17666, metadata !DIExpression()), !dbg !17670
  call void @llvm.dbg.value(metadata i32 %1, metadata !17667, metadata !DIExpression()), !dbg !17670
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !17671
  br i1 %3, label %11, label %4, !dbg !17673

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17674
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17676
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17676
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17669, metadata !DIExpression()), !dbg !17670
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17677
  br i1 %8, label %11, label %9, !dbg !17679

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !17680
  call void @llvm.dbg.value(metadata i8* %10, metadata !17668, metadata !DIExpression()), !dbg !17670
  br label %11, !dbg !17682

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !17683
  call void @llvm.dbg.value(metadata i8* %12, metadata !17668, metadata !DIExpression()), !dbg !17670
  ret i8* %12, !dbg !17684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17685 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17689, metadata !DIExpression()), !dbg !17695
  call void @llvm.dbg.value(metadata i32 %1, metadata !17690, metadata !DIExpression()), !dbg !17695
  call void @llvm.dbg.value(metadata i32 %2, metadata !17691, metadata !DIExpression()), !dbg !17695
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17691, metadata !DIExpression(DW_OP_deref)), !dbg !17695
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17696
  br i1 %5, label %14, label %6, !dbg !17698

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17699
  call void @llvm.dbg.value(metadata i32 %7, metadata !17694, metadata !DIExpression()), !dbg !17695
  %8 = load i32, i32* %4, align 4, !dbg !17700
  call void @llvm.dbg.value(metadata i32 %8, metadata !17691, metadata !DIExpression()), !dbg !17695
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !17701
  call void @llvm.dbg.value(metadata i8* %9, metadata !17692, metadata !DIExpression()), !dbg !17695
  %10 = icmp eq i8* %9, null, !dbg !17702
  br i1 %10, label %14, label %11, !dbg !17704

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17705
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17693, metadata !DIExpression()), !dbg !17695
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17706
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17707
  call void @llvm.dbg.value(metadata i8* %13, metadata !17693, metadata !DIExpression()), !dbg !17695
  call void @llvm.dbg.value(metadata i8* %13, metadata !17692, metadata !DIExpression()), !dbg !17695
  br label %14, !dbg !17708

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !17695
  ret i8* %15, !dbg !17709
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17715, metadata !DIExpression()), !dbg !17718
  call void @llvm.dbg.value(metadata i32 4, metadata !17716, metadata !DIExpression()), !dbg !17718
  call void @llvm.dbg.value(metadata i32* %1, metadata !17717, metadata !DIExpression()), !dbg !17718
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17719
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17719
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17719
  store i32 %5, i32* %1, align 4, !dbg !17719
  ret i1 %4, !dbg !17720
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17721 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.195, i32 0, i32 0)) #26, !dbg !17723
  ret void, !dbg !17724
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17727, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17728, metadata !DIExpression()), !dbg !17748
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17749

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17750

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17728, metadata !DIExpression()), !dbg !17748
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17751
  %6 = load i8*, i8** %5, align 4, !dbg !17751
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17755
  %8 = load i32, i32* %7, align 4, !dbg !17755
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17756
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17757
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17728, metadata !DIExpression()), !dbg !17748
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17758
  br i1 %10, label %3, label %2, !dbg !17749, !llvm.loop !17760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17762 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17766, metadata !DIExpression()), !dbg !17769
  call void @llvm.dbg.value(metadata i8* %1, metadata !17767, metadata !DIExpression()), !dbg !17769
  call void @llvm.dbg.value(metadata i32 %2, metadata !17768, metadata !DIExpression()), !dbg !17769
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17770
  tail call fastcc void @z_waitq_init.197(%union.anon* noundef nonnull %4) #27, !dbg !17771
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17772
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17773
  ret void, !dbg !17774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.197(%union.anon* noundef %0) unnamed_addr #4 !dbg !17775 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17780, metadata !DIExpression()), !dbg !17781
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17782
  tail call fastcc void @sys_dlist_init.198(%struct._dnode* noundef %2) #27, !dbg !17783
  ret void, !dbg !17784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.198(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17785 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17790, metadata !DIExpression()), !dbg !17791
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17792
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17793
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17794
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17795
  ret void, !dbg !17796
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17797 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17808, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17805, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 %1, metadata !17806, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 %2, metadata !17807, metadata !DIExpression()), !dbg !17818
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17819
  call void @llvm.dbg.value(metadata i64 %6, metadata !17810, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i8* null, metadata !17811, metadata !DIExpression()), !dbg !17818
  %7 = icmp eq i64 %5, -1, !dbg !17820
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17820
  call void @llvm.dbg.value(metadata i64 %8, metadata !17810, metadata !DIExpression()), !dbg !17818
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17822, metadata !DIExpression()) #25, !dbg !17829
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17831, !srcloc !17837
  call void @llvm.dbg.value(metadata i32 undef, metadata !17834, metadata !DIExpression()) #25, !dbg !17838
  call void @llvm.dbg.value(metadata i32 undef, metadata !17835, metadata !DIExpression()) #25, !dbg !17838
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()) #25, !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i8 0, metadata !17817, metadata !DIExpression()), !dbg !17818
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17811, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i8 0, metadata !17817, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17818
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17839
  call void @llvm.dbg.value(metadata i8* %12, metadata !17811, metadata !DIExpression()), !dbg !17818
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17841
  call void @llvm.dbg.value(metadata i64 %13, metadata !17809, metadata !DIExpression()), !dbg !17818
  %14 = icmp eq i8* %12, null, !dbg !17842
  br i1 %14, label %15, label %31, !dbg !17844

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17818
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17844

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17817, metadata !DIExpression()), !dbg !17818
  %20 = sub nsw i64 %8, %18, !dbg !17845
  %21 = icmp slt i64 %20, 1, !dbg !17846
  br i1 %21, label %31, label %22, !dbg !17847

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17818
  call void @llvm.dbg.value(metadata i8 undef, metadata !17817, metadata !DIExpression()), !dbg !17818
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17848
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17848
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17822, metadata !DIExpression()) #25, !dbg !17849
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17851, !srcloc !17837
  call void @llvm.dbg.value(metadata i32 undef, metadata !17834, metadata !DIExpression()) #25, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17835, metadata !DIExpression()) #25, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17828, metadata !DIExpression()) #25, !dbg !17849
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i8* null, metadata !17811, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 undef, metadata !17812, metadata !DIExpression()), !dbg !17818
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17839
  call void @llvm.dbg.value(metadata i8* %28, metadata !17811, metadata !DIExpression()), !dbg !17818
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17841
  call void @llvm.dbg.value(metadata i64 %29, metadata !17809, metadata !DIExpression()), !dbg !17818
  %30 = icmp eq i8* %28, null, !dbg !17842
  br i1 %30, label %17, label %31, !dbg !17844, !llvm.loop !17854

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17839
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17818
  call void @llvm.dbg.value(metadata i8* %33, metadata !17811, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 %34, metadata !17857, metadata !DIExpression()) #25, !dbg !17863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17862, metadata !DIExpression()) #25, !dbg !17863
  call void @llvm.dbg.value(metadata i32 %34, metadata !17865, metadata !DIExpression()) #25, !dbg !17868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17870, !srcloc !17871
  ret i8* %33, !dbg !17872
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17873 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17879, metadata !DIExpression()), !dbg !17881
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17877, metadata !DIExpression()), !dbg !17881
  call void @llvm.dbg.value(metadata i32 %1, metadata !17878, metadata !DIExpression()), !dbg !17881
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17882
  call void @llvm.dbg.value(metadata i8* %4, metadata !17880, metadata !DIExpression()), !dbg !17881
  ret i8* %4, !dbg !17883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17884 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17888, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata i8* %1, metadata !17889, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17822, metadata !DIExpression()) #25, !dbg !17892
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17894, !srcloc !17837
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17894
  call void @llvm.dbg.value(metadata i32 %4, metadata !17834, metadata !DIExpression()) #25, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !17835, metadata !DIExpression()) #25, !dbg !17896
  call void @llvm.dbg.value(metadata i32 %4, metadata !17828, metadata !DIExpression()) #25, !dbg !17892
  call void @llvm.dbg.value(metadata i32 %4, metadata !17890, metadata !DIExpression()), !dbg !17891
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17897
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17898
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17899
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17901
  %8 = icmp eq i32 %7, 0, !dbg !17902
  br i1 %8, label %12, label %9, !dbg !17903

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17904
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17905
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17905
  br label %13, !dbg !17907

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17857, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17862, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata i32 %4, metadata !17865, metadata !DIExpression()) #25, !dbg !17911
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17913, !srcloc !17871
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17914
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!783, !2, !2614, !2616, !27, !2618, !2620, !2653, !2690, !111, !168, !197, !2692, !2703, !2749, !2751, !2779, !2807, !2850, !2921, !2966, !367, !510, !2994, !546, !556, !581, !821, !2999, !960, !1140, !1445, !1784, !3040, !1897, !1987, !3042, !3105, !3172, !2040, !3175, !2046, !2409, !3193, !3195, !2429, !3236, !2544, !3239, !3241, !2583}
!llvm.ident = !{!3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243, !3243}
!llvm.module.flags = !{!3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 400, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !694, line: 72, type: !778, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !680, globals: !691, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!614 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!615 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!616 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!617 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!618 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!619 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!620 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!621 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!622 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!623 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!624 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!625 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!626 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!627 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!628 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!629 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!630 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!631 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!632 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!633 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!634 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!635 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!636 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!637 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!638 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!639 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!640 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!641 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!642 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!643 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!644 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!645 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!646 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!647 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!648 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!649 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!650 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!651 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!652 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!653 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!654 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!655 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!656 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!657 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!658 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!659 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!660 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!661 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!662 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!663 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!664 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!665 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!666 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!667 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!668 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!669 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!670 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!671 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!672 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!673 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!674 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!675 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!676 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!677 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!678 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!679 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!680 = !{!204, !103, !102, !681}
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 392, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 384, size: 192, elements: !684)
!684 = !{!685, !686, !687, !688, !689, !690}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !683, file: !116, line: 386, baseType: !120, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !683, file: !116, line: 387, baseType: !120, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !683, file: !116, line: 388, baseType: !120, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !683, file: !116, line: 389, baseType: !120, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !683, file: !116, line: 390, baseType: !120, size: 32, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !683, file: !116, line: 391, baseType: !120, size: 32, offset: 160)
!691 = !{!692, !698, !714, !725, !742, !579, !744, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776}
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !581, file: !694, line: 424, type: !695, isLocal: false, isDefinition: true, align: 16)
!694 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !696)
!696 = !{!697}
!697 = !DISubrange(count: 4)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !581, file: !694, line: 424, type: !700, isLocal: false, isDefinition: true, align: 32)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !702)
!702 = !{!703, !704, !705, !706, !712, !713}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !701, file: !141, line: 380, baseType: !144, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !701, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !701, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !701, file: !141, line: 386, baseType: !707, size: 32, offset: 96)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !709)
!709 = !{!710, !711}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !708, file: !141, line: 359, baseType: !154, size: 8)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !708, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !701, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !701, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !581, file: !694, line: 424, type: !716, isLocal: true, isDefinition: true, align: 32)
!716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !718)
!718 = !{!719, !724}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !717, file: !132, line: 60, baseType: !720, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!721 = !DISubroutineType(types: !722)
!722 = !{!103, !723}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !717, file: !132, line: 65, baseType: !723, size: 32, offset: 32)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !694, line: 423, type: !727, isLocal: true, isDefinition: true)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !694, line: 107, size: 1472, elements: !728)
!728 = !{!729}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !727, file: !694, line: 109, baseType: !730, size: 1472)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 1472, elements: !740)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !694, line: 101, size: 64, elements: !732)
!732 = !{!733, !739}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !731, file: !694, line: 102, baseType: !734, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !735, line: 63, baseType: !736)
!735 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 32)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !103, !102}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !731, file: !694, line: 103, baseType: !102, size: 32, offset: 32)
!740 = !{!741}
!741 = !DISubrange(count: 23)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !581, file: !694, line: 424, type: !708, isLocal: true, isDefinition: true, align: 8)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !746, file: !694, line: 493, type: !751, isLocal: true, isDefinition: true, align: 32)
!746 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !694, file: !694, line: 460, type: !747, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !749)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !723}
!749 = !{!750}
!750 = !DILocalVariable(name: "dev", arg: 1, scope: !746, file: !694, line: 460, type: !723)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !752)
!752 = !{!753, !755, !756, !757}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !751, file: !10, line: 55, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !751, file: !10, line: 57, baseType: !754, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !751, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !751, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !746, file: !694, line: 497, type: !751, isLocal: true, isDefinition: true, align: 32)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !746, file: !694, line: 507, type: !751, isLocal: true, isDefinition: true, align: 32)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !746, file: !694, line: 512, type: !751, isLocal: true, isDefinition: true, align: 32)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !746, file: !694, line: 516, type: !751, isLocal: true, isDefinition: true, align: 32)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !746, file: !694, line: 523, type: !751, isLocal: true, isDefinition: true, align: 32)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !746, file: !694, line: 527, type: !751, isLocal: true, isDefinition: true, align: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !746, file: !694, line: 581, type: !751, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !746, file: !694, line: 586, type: !751, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !746, file: !694, line: 591, type: !751, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !746, file: !694, line: 595, type: !751, isLocal: true, isDefinition: true, align: 32)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 736, elements: !740)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 163, baseType: !584)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !783, file: !788, line: 25, type: !816, isLocal: false, isDefinition: true, align: 16)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !785, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!785 = !{!786, !781, !792, !794, !796, !798, !800, !802, !804, !806, !808, !810, !812, !814}
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !783, file: !788, line: 20, type: !789, isLocal: false, isDefinition: true, align: 16)
!788 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 240, elements: !790)
!790 = !{!791}
!791 = !DISubrange(count: 15)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !783, file: !788, line: 32, type: !695, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !783, file: !788, line: 39, type: !695, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !783, file: !788, line: 46, type: !695, isLocal: false, isDefinition: true, align: 16)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !783, file: !788, line: 53, type: !695, isLocal: false, isDefinition: true, align: 16)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !783, file: !788, line: 60, type: !695, isLocal: false, isDefinition: true, align: 16)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !783, file: !788, line: 67, type: !695, isLocal: false, isDefinition: true, align: 16)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !783, file: !788, line: 74, type: !695, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !783, file: !788, line: 81, type: !695, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !783, file: !788, line: 88, type: !695, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !783, file: !788, line: 95, type: !695, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !783, file: !788, line: 102, type: !695, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !783, file: !788, line: 109, type: !695, isLocal: false, isDefinition: true, align: 16)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 3)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !821, file: !886, line: 398, type: !919, isLocal: true, isDefinition: true)
!821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !822, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !823, retainedTypes: !836, globals: !883, splitDebugInlining: false, nameTableKind: None)
!822 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!823 = !{!824, !30, !829}
!824 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !825, line: 197, baseType: !32, size: 32, elements: !826)
!825 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!826 = !{!827, !828}
!827 = !DIEnumerator(name: "SUCCESS", value: 0)
!828 = !DIEnumerator(name: "ERROR", value: 1)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !830, line: 44, baseType: !32, size: 32, elements: !831)
!830 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !{!832, !833, !834, !835}
!832 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!833 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!834 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!835 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!836 = !{!102, !103, !121, !837, !876, !882}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !839, file: !116, line: 552, baseType: !120, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !839, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !839, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !839, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !839, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !839, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !839, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !839, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !839, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !839, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !839, file: !116, line: 562, baseType: !852, size: 64, offset: 320)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !839, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !839, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !839, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !839, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !839, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !839, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !839, file: !116, line: 569, baseType: !852, size: 64, offset: 576)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !839, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !839, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !839, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !839, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !839, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !839, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !839, file: !116, line: 576, baseType: !852, size: 64, offset: 832)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !839, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !839, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !839, file: !116, line: 579, baseType: !852, size: 64, offset: 960)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !839, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !839, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !839, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !839, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !839, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !839, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !879)
!878 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !877, file: !878, line: 344, baseType: !121, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !877, file: !878, line: 345, baseType: !121, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!883 = !{!884, !890, !906, !917, !819}
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !821, file: !886, line: 752, type: !887, isLocal: false, isDefinition: true, align: 16)
!886 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 800, elements: !888)
!888 = !{!889}
!889 = !DISubrange(count: 50)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !821, file: !886, line: 752, type: !892, isLocal: false, isDefinition: true, align: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !894)
!894 = !{!895, !896, !897, !898, !904, !905}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !893, file: !141, line: 380, baseType: !144, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !893, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !893, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !893, file: !141, line: 386, baseType: !899, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !900, file: !141, line: 359, baseType: !154, size: 8)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !900, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !893, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !893, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !821, file: !886, line: 752, type: !908, isLocal: true, isDefinition: true, align: 32)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !910)
!910 = !{!911, !916}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !909, file: !132, line: 60, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !909, file: !132, line: 65, baseType: !915, size: 32, offset: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !821, file: !886, line: 752, type: !900, isLocal: true, isDefinition: true, align: 8)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !830, line: 100, size: 224, elements: !920)
!920 = !{!921, !927, !928, !937, !942, !947, !953}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !919, file: !830, line: 101, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !830, line: 76, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!103, !915, !926}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !830, line: 56, baseType: !102)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !919, file: !830, line: 102, baseType: !922, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !919, file: !830, line: 103, baseType: !929, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !830, line: 83, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!103, !915, !926, !933, !102}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !830, line: 72, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !915, !926, !102}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !919, file: !830, line: 104, baseType: !938, size: 32, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !830, line: 79, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!103, !915, !926, !882}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !919, file: !830, line: 105, baseType: !943, size: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !830, line: 88, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!829, !915, !926}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !919, file: !830, line: 106, baseType: !948, size: 32, offset: 160)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !830, line: 92, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!103, !915, !926, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !830, line: 64, baseType: !102)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !919, file: !830, line: 107, baseType: !954, size: 32, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !830, line: 96, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!103, !915, !926, !102}
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "avail_queue", scope: !960, file: !964, line: 108, type: !1061, isLocal: true, isDefinition: true)
!960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !962, retainedTypes: !971, globals: !1051, splitDebugInlining: false, nameTableKind: None)
!961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!962 = !{!30, !963}
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !964, line: 214, baseType: !32, size: 32, elements: !965)
!964 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!965 = !{!966, !967, !968, !969, !970}
!966 = !DIEnumerator(name: "ESC_ESC", value: 0)
!967 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!968 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!969 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!970 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!971 = !{!102, !103, !972, !32, !24}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !975)
!975 = !{!976, !995, !999, !1003, !1016, !1021, !1025, !1029, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !974, file: !209, line: 365, baseType: !977, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!103, !980, !230}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !983)
!983 = !{!984, !985, !986, !987, !993, !994}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !982, file: !141, line: 380, baseType: !144, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !982, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !982, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !982, file: !141, line: 386, baseType: !988, size: 32, offset: 96)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 32)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !989, file: !141, line: 359, baseType: !154, size: 8)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !989, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !982, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !982, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !974, file: !209, line: 366, baseType: !996, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !980, !155}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !974, file: !209, line: 374, baseType: !1000, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!103, !980}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !974, file: !209, line: 377, baseType: !1004, size: 32, offset: 96)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!103, !980, !1007}
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1010)
!1010 = !{!1011, !1012, !1013, !1014, !1015}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1009, file: !209, line: 123, baseType: !121, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1009, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1009, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1009, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1009, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !974, file: !209, line: 379, baseType: !1017, size: 32, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!103, !980, !1020}
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !974, file: !209, line: 384, baseType: !1022, size: 32, offset: 160)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!103, !980, !261, !103}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !974, file: !209, line: 393, baseType: !1026, size: 32, offset: 192)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!103, !980, !267, !268}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !974, file: !209, line: 402, baseType: !1030, size: 32, offset: 224)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !980}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !974, file: !209, line: 405, baseType: !1030, size: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !974, file: !209, line: 408, baseType: !1000, size: 32, offset: 288)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !974, file: !209, line: 411, baseType: !1030, size: 32, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !974, file: !209, line: 414, baseType: !1030, size: 32, offset: 352)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !974, file: !209, line: 417, baseType: !1000, size: 32, offset: 384)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !974, file: !209, line: 420, baseType: !1000, size: 32, offset: 416)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !974, file: !209, line: 423, baseType: !1030, size: 32, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !974, file: !209, line: 426, baseType: !1030, size: 32, offset: 480)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !974, file: !209, line: 429, baseType: !1000, size: 32, offset: 512)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !974, file: !209, line: 432, baseType: !1000, size: 32, offset: 544)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !974, file: !209, line: 435, baseType: !1044, size: 32, offset: 576)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !980, !1047, !102}
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !980, !102}
!1051 = !{!1052, !958, !1059, !1099, !1104, !1107, !1126, !1130, !1132, !1134, !1136}
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !960, file: !964, line: 603, type: !1054, isLocal: true, isDefinition: true, align: 32)
!1054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1056)
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1055, file: !132, line: 60, baseType: !1000, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1055, file: !132, line: 65, baseType: !980, size: 32, offset: 32)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "lines_queue", scope: !960, file: !964, line: 109, type: !1061, isLocal: true, isDefinition: true)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1063)
!1063 = !{!1064}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1062, file: !296, line: 2209, baseType: !1065, size: 128)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1066)
!1066 = !{!1067, !1078, !1080}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1065, file: !296, line: 1710, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1070)
!1070 = !{!1071, !1077}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1069, file: !303, line: 42, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1075)
!1075 = !{!1076}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1074, file: !303, line: 36, baseType: !312, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1069, file: !303, line: 43, baseType: !1072, size: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1065, file: !296, line: 1711, baseType: !1079, offset: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1065, file: !296, line: 1712, baseType: !1081, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1083)
!1083 = !{!1084}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1082, file: !320, line: 232, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1087)
!1087 = !{!1088, !1094}
!1088 = !DIDerivedType(tag: DW_TAG_member, scope: !1086, file: !325, line: 38, baseType: !1089, size: 32)
!1089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1086, file: !325, line: 38, size: 32, elements: !1090)
!1090 = !{!1091, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1089, file: !325, line: 39, baseType: !1092, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1089, file: !325, line: 40, baseType: !1092, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, scope: !1086, file: !325, line: 42, baseType: !1095, size: 32, offset: 32)
!1095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1086, file: !325, line: 42, size: 32, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1095, file: !325, line: 43, baseType: !1092, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1095, file: !325, line: 44, baseType: !1092, size: 32)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "completion_cb", scope: !960, file: !964, line: 110, type: !1101, isLocal: true, isDefinition: true)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!154, !344, !154}
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !960, file: !964, line: 38, type: !1106, isLocal: true, isDefinition: true)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "cmd", scope: !1109, file: !964, line: 435, type: !1120, isLocal: true, isDefinition: true)
!1109 = distinct !DISubprogram(name: "uart_console_isr", scope: !964, file: !964, line: 428, type: !1049, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !1110)
!1110 = !{!1111, !1112, !1113, !1115, !1116}
!1111 = !DILocalVariable(name: "unused", arg: 1, scope: !1109, file: !964, line: 428, type: !980)
!1112 = !DILocalVariable(name: "user_data", arg: 2, scope: !1109, file: !964, line: 428, type: !102)
!1113 = !DILocalVariable(name: "byte", scope: !1114, file: !964, line: 436, type: !154)
!1114 = distinct !DILexicalBlock(scope: !1109, file: !964, line: 434, column: 48)
!1115 = !DILocalVariable(name: "rx", scope: !1114, file: !964, line: 437, type: !103)
!1116 = !DILocalVariable(name: "ret", scope: !1117, file: !964, line: 461, type: !102)
!1117 = distinct !DILexicalBlock(scope: !1118, file: !964, line: 461, column: 10)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !964, line: 460, column: 13)
!1119 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 460, column: 7)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1122)
!1122 = !{!1123, !1124, !1125}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1121, file: !350, line: 23, baseType: !353, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1121, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1121, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "esc_state", scope: !960, file: !964, line: 228, type: !1128, isLocal: true, isDefinition: true)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1129, line: 22, baseType: !354)
!1129 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "ansi_val", scope: !960, file: !964, line: 229, type: !32, isLocal: true, isDefinition: true)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !960, file: !964, line: 229, type: !32, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "cur", scope: !960, file: !964, line: 230, type: !154, isLocal: true, isDefinition: true)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "end", scope: !960, file: !964, line: 230, type: !154, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1140, file: !1311, line: 762, type: !1420, isLocal: true, isDefinition: true)
!1140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1142, retainedTypes: !1160, globals: !1308, splitDebugInlining: false, nameTableKind: None)
!1141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!1142 = !{!30, !1143, !1149, !1154, !829}
!1143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1144, line: 506, baseType: !32, size: 32, elements: !1145)
!1144 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1145 = !{!1146, !1147, !1148}
!1146 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1147 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1148 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1144, line: 512, baseType: !32, size: 32, elements: !1150)
!1150 = !{!1151, !1152, !1153}
!1151 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1152 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1153 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !735, line: 43, baseType: !32, size: 32, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159}
!1156 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1157 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1158 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1160 = !{!102, !103, !1161, !1231, !1236, !1196, !1149, !1143, !1241, !1242, !121, !1256, !1211, !344, !1268, !1269}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1164)
!1164 = !{!1165, !1186, !1192, !1197, !1201, !1202, !1203, !1207, !1227}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1163, file: !1144, line: 524, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!103, !1169, !1184, !1185}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176, !1182, !1183}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1171, file: !141, line: 380, baseType: !144, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1171, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1171, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1171, file: !141, line: 386, baseType: !1177, size: 32, offset: 96)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1178, file: !141, line: 359, baseType: !154, size: 8)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1178, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1171, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1171, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1144, line: 237, baseType: !154)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1144, line: 257, baseType: !121)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1163, file: !1144, line: 530, baseType: !1187, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!103, !1169, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1144, line: 229, baseType: !121)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1163, file: !1144, line: 532, baseType: !1193, size: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!103, !1169, !1196, !1191}
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1144, line: 216, baseType: !121)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1163, file: !1144, line: 535, baseType: !1198, size: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!103, !1169, !1196}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1163, file: !1144, line: 537, baseType: !1198, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1163, file: !1144, line: 539, baseType: !1198, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1163, file: !1144, line: 541, baseType: !1204, size: 32, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!103, !1169, !1184, !1143, !1149}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1163, file: !1144, line: 544, baseType: !1208, size: 32, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!103, !1169, !1211, !157}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1213)
!1213 = !{!1214, !1221, !1226}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1212, file: !1144, line: 482, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1217)
!1216 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1217, file: !1216, line: 30, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1212, file: !1144, line: 485, baseType: !1222, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !1169, !1211, !1196}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1212, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1163, file: !1144, line: 547, baseType: !1228, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!121, !1169}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1233, file: !1144, line: 434, baseType: !1196, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1238, file: !1144, line: 447, baseType: !1196, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 469, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 458, size: 320, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1244, file: !116, line: 460, baseType: !120, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1244, file: !116, line: 461, baseType: !120, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1244, file: !116, line: 462, baseType: !120, size: 32, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1244, file: !116, line: 463, baseType: !120, size: 32, offset: 96)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1244, file: !116, line: 464, baseType: !120, size: 32, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1244, file: !116, line: 465, baseType: !120, size: 32, offset: 160)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1244, file: !116, line: 466, baseType: !120, size: 32, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1244, file: !116, line: 467, baseType: !120, size: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1244, file: !116, line: 468, baseType: !1255, size: 64, offset: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 484, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 475, size: 384, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1264, !1265, !1266, !1267}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1258, file: !116, line: 477, baseType: !120, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1258, file: !116, line: 478, baseType: !120, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1258, file: !116, line: 479, baseType: !1263, size: 128, offset: 64)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !696)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1258, file: !116, line: 480, baseType: !852, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1258, file: !116, line: 481, baseType: !120, size: 32, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1258, file: !116, line: 482, baseType: !852, size: 64, offset: 288)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1258, file: !116, line: 483, baseType: !120, size: 32, offset: 352)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !830, line: 100, size: 224, elements: !1272)
!1272 = !{!1273, !1278, !1279, !1288, !1293, !1298, !1303}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1271, file: !830, line: 101, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !830, line: 76, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1169, !926}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1271, file: !830, line: 102, baseType: !1274, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1271, file: !830, line: 103, baseType: !1280, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !830, line: 83, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1169, !926, !1284, !102}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !830, line: 72, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !1169, !926, !102}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1271, file: !830, line: 104, baseType: !1289, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !830, line: 79, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!103, !1169, !926, !882}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1271, file: !830, line: 105, baseType: !1294, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !830, line: 88, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!829, !1169, !926}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1271, file: !830, line: 106, baseType: !1299, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !830, line: 92, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1169, !926, !952}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1271, file: !830, line: 107, baseType: !1304, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !830, line: 96, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1169, !926, !102}
!1308 = !{!1309, !1315, !1317, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1138, !1416, !1418, !1431, !1433, !1435, !1437, !1439, !1441}
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1140, file: !1311, line: 762, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1311 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1313)
!1313 = !{!1314}
!1314 = !DISubrange(count: 5)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1140, file: !1311, line: 762, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1140, file: !1311, line: 762, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1320)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1321)
!1321 = !{!1322, !1326}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1320, file: !132, line: 60, baseType: !1323, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!103, !1169}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1320, file: !132, line: 65, baseType: !1169, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1140, file: !1311, line: 766, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1140, file: !1311, line: 766, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1140, file: !1311, line: 766, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1140, file: !1311, line: 770, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1140, file: !1311, line: 770, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1140, file: !1311, line: 770, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1140, file: !1311, line: 774, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !1342)
!1342 = !{!1343}
!1343 = !DISubrange(count: 9)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1140, file: !1311, line: 774, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1140, file: !1311, line: 774, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1140, file: !1311, line: 778, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1140, file: !1311, line: 778, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1140, file: !1311, line: 778, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1140, file: !1311, line: 782, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1140, file: !1311, line: 782, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1140, file: !1311, line: 782, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1140, file: !1311, line: 786, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1140, file: !1311, line: 786, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1140, file: !1311, line: 786, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1140, file: !1311, line: 790, type: !1312, isLocal: false, isDefinition: true, align: 16)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1140, file: !1311, line: 790, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1140, file: !1311, line: 790, type: !1319, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1140, file: !1311, line: 762, type: !1374, isLocal: true, isDefinition: true)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1375, line: 237, size: 128, elements: !1376)
!1375 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1376 = !{!1377, !1378, !1379}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1374, file: !1375, line: 239, baseType: !1238, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1374, file: !1375, line: 241, baseType: !1169, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1374, file: !1375, line: 243, baseType: !1380, size: 64, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1216, line: 40, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1216, line: 35, size: 64, elements: !1382)
!1382 = !{!1383, !1385}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1381, file: !1216, line: 36, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1381, file: !1216, line: 37, baseType: !1384, size: 32, offset: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1140, file: !1311, line: 762, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1140, file: !1311, line: 766, type: !1374, isLocal: true, isDefinition: true)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1140, file: !1311, line: 766, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1140, file: !1311, line: 770, type: !1374, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1140, file: !1311, line: 770, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1140, file: !1311, line: 774, type: !1374, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1140, file: !1311, line: 774, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1140, file: !1311, line: 778, type: !1374, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1140, file: !1311, line: 778, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1140, file: !1311, line: 782, type: !1374, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1140, file: !1311, line: 782, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1140, file: !1311, line: 786, type: !1374, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1140, file: !1311, line: 786, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1140, file: !1311, line: 790, type: !1374, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1140, file: !1311, line: 790, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1140, file: !1311, line: 656, type: !1162, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1140, file: !1311, line: 766, type: !1420, isLocal: true, isDefinition: true)
!1420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1375, line: 224, size: 160, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1421, file: !1375, line: 226, baseType: !1233, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1421, file: !1375, line: 228, baseType: !882, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1421, file: !1375, line: 230, baseType: !103, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1421, file: !1375, line: 231, baseType: !1427, size: 64, offset: 96)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1427, file: !878, line: 344, baseType: !121, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1427, file: !878, line: 345, baseType: !121, size: 32, offset: 32)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1140, file: !1311, line: 770, type: !1420, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1140, file: !1311, line: 774, type: !1420, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1140, file: !1311, line: 778, type: !1420, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1140, file: !1311, line: 782, type: !1420, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1140, file: !1311, line: 786, type: !1420, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1140, file: !1311, line: 790, type: !1420, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1445, file: !1616, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1447, retainedTypes: !1480, globals: !1613, splitDebugInlining: false, nameTableKind: None)
!1446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!1447 = !{!30, !1448, !1455, !1462, !1469, !1475, !829}
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454}
!1450 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1451 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1452 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1453 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1454 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461}
!1457 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1460 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1467 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474}
!1471 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1473 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1474 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479}
!1477 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1478 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1479 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1480 = !{!102, !103, !1481, !155, !154, !1560, !121, !926, !1571, !429, !1610, !1612}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1484)
!1484 = !{!1485, !1504, !1508, !1512, !1525, !1530, !1534, !1538, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1483, file: !209, line: 365, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!103, !1489, !230}
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1502, !1503}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1491, file: !141, line: 380, baseType: !144, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1491, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1491, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1491, file: !141, line: 386, baseType: !1497, size: 32, offset: 96)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1498, file: !141, line: 359, baseType: !154, size: 8)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1498, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1491, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1491, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1483, file: !209, line: 366, baseType: !1505, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !1489, !155}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1483, file: !209, line: 374, baseType: !1509, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!103, !1489}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1483, file: !209, line: 377, baseType: !1513, size: 32, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1489, !1516}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1518, file: !209, line: 123, baseType: !121, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1518, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1518, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1518, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1518, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1483, file: !209, line: 379, baseType: !1526, size: 32, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1489, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1483, file: !209, line: 384, baseType: !1531, size: 32, offset: 160)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!103, !1489, !261, !103}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1483, file: !209, line: 393, baseType: !1535, size: 32, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!103, !1489, !267, !268}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1483, file: !209, line: 402, baseType: !1539, size: 32, offset: 224)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{null, !1489}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1483, file: !209, line: 405, baseType: !1539, size: 32, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1483, file: !209, line: 408, baseType: !1509, size: 32, offset: 288)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1483, file: !209, line: 411, baseType: !1539, size: 32, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1483, file: !209, line: 414, baseType: !1539, size: 32, offset: 352)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1483, file: !209, line: 417, baseType: !1509, size: 32, offset: 384)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1483, file: !209, line: 420, baseType: !1509, size: 32, offset: 416)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1483, file: !209, line: 423, baseType: !1539, size: 32, offset: 448)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1483, file: !209, line: 426, baseType: !1539, size: 32, offset: 480)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1483, file: !209, line: 429, baseType: !1509, size: 32, offset: 512)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1483, file: !209, line: 432, baseType: !1509, size: 32, offset: 544)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1483, file: !209, line: 435, baseType: !1553, size: 32, offset: 576)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{null, !1489, !1556, !102}
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1489, !102}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 783, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 774, size: 224, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1562, file: !116, line: 776, baseType: !120, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1562, file: !116, line: 777, baseType: !120, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1562, file: !116, line: 778, baseType: !120, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1562, file: !116, line: 779, baseType: !120, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1562, file: !116, line: 780, baseType: !120, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1562, file: !116, line: 781, baseType: !120, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1562, file: !116, line: 782, baseType: !120, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !830, line: 100, size: 224, elements: !1574)
!1574 = !{!1575, !1580, !1581, !1590, !1595, !1600, !1605}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1573, file: !830, line: 101, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !830, line: 76, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1489, !926}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1573, file: !830, line: 102, baseType: !1576, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1573, file: !830, line: 103, baseType: !1582, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !830, line: 83, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!103, !1489, !926, !1586, !102}
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !830, line: 72, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1489, !926, !102}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1573, file: !830, line: 104, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !830, line: 79, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!103, !1489, !926, !882}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1573, file: !830, line: 105, baseType: !1596, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !830, line: 88, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!829, !1489, !926}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1573, file: !830, line: 106, baseType: !1601, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !830, line: 92, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!103, !1489, !926, !952}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1573, file: !830, line: 107, baseType: !1606, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !830, line: 96, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!103, !1489, !926, !102}
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1611)
!1611 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1613 = !{!1614, !1620, !1622, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1649, !1651, !1653, !1443, !1655, !1663, !1686, !1689, !1692, !1703, !1705, !1714, !1733, !1735, !1737, !1739, !1741, !1746, !1748, !1750, !1752, !1754, !1756, !1758, !1763, !1765, !1767, !1769, !1771, !1773, !1775, !1780}
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1616 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1618)
!1618 = !{!1619}
!1619 = !DISubrange(count: 8)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1490, isLocal: false, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1625, file: !132, line: 60, baseType: !1509, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1625, file: !132, line: 65, baseType: !1489, size: 32, offset: 32)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1490, isLocal: false, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1490, isLocal: false, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1490, isLocal: false, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 8)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 8)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 8)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 8)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1445, file: !1616, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1658, size: 64, elements: !504)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1659, file: !878, line: 344, baseType: !121, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1659, file: !878, line: 345, baseType: !121, size: 32, offset: 32)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1667, line: 60, size: 64, elements: !1668)
!1667 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1668 = !{!1669, !1685}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1666, file: !1667, line: 69, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1667, line: 50, size: 64, elements: !1673)
!1673 = !{!1674, !1683, !1684}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1672, file: !1667, line: 52, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1678, line: 37, baseType: !1679)
!1678 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1678, line: 32, size: 64, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1679, file: !1678, line: 34, baseType: !121, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1679, file: !1678, line: 36, baseType: !121, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1672, file: !1667, line: 54, baseType: !154, size: 8, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1672, file: !1667, line: 56, baseType: !154, size: 8, offset: 40)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1666, file: !1667, line: 71, baseType: !154, size: 8, offset: 32)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1671, size: 64, elements: !504)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1445, file: !1616, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 128, elements: !363)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1694, file: !1616, line: 1914, type: !1697, isLocal: true, isDefinition: true, align: 32)
!1694 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1616, file: !1616, line: 1914, type: !1540, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !1695)
!1695 = !{!1696}
!1696 = !DILocalVariable(name: "dev", arg: 1, scope: !1694, file: !1616, line: 1914, type: !1489)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1697, file: !10, line: 55, baseType: !754, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1697, file: !10, line: 57, baseType: !754, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1697, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1697, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1445, file: !1616, line: 1539, type: !1482, isLocal: true, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1445, file: !1616, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1708, line: 74, size: 128, elements: !1709)
!1708 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1709 = !{!1710, !1711, !1712, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1707, file: !1708, line: 76, baseType: !121, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1707, file: !1708, line: 78, baseType: !1489, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1707, file: !1708, line: 80, baseType: !1556, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1707, file: !1708, line: 81, baseType: !102, size: 32, offset: 96)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1445, file: !1616, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1708, line: 22, size: 256, elements: !1718)
!1718 = !{!1719, !1720, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1731}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1717, file: !1708, line: 24, baseType: !1560, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1717, file: !1708, line: 26, baseType: !1721, size: 32, offset: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1717, file: !1708, line: 28, baseType: !204, size: 32, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1717, file: !1708, line: 30, baseType: !157, size: 8, offset: 96)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1717, file: !1708, line: 32, baseType: !103, size: 32, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1717, file: !1708, line: 34, baseType: !157, size: 8, offset: 160)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1717, file: !1708, line: 36, baseType: !157, size: 8, offset: 168)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1717, file: !1708, line: 38, baseType: !157, size: 8, offset: 176)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1717, file: !1708, line: 40, baseType: !157, size: 8, offset: 184)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1717, file: !1708, line: 41, baseType: !1730, size: 32, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1717, file: !1708, line: 44, baseType: !1732, size: 32, offset: 224)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1539)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1445, file: !1616, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1445, file: !1616, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1743, file: !1616, line: 1914, type: !1697, isLocal: true, isDefinition: true, align: 32)
!1743 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1616, file: !1616, line: 1914, type: !1540, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !1744)
!1744 = !{!1745}
!1745 = !DILocalVariable(name: "dev", arg: 1, scope: !1743, file: !1616, line: 1914, type: !1489)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1445, file: !1616, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1445, file: !1616, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1445, file: !1616, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1445, file: !1616, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1760, file: !1616, line: 1914, type: !1697, isLocal: true, isDefinition: true, align: 32)
!1760 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1616, file: !1616, line: 1914, type: !1540, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !1761)
!1761 = !{!1762}
!1762 = !DILocalVariable(name: "dev", arg: 1, scope: !1760, file: !1616, line: 1914, type: !1489)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1445, file: !1616, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1445, file: !1616, line: 1914, type: !1716, isLocal: true, isDefinition: true)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1445, file: !1616, line: 1914, type: !1657, isLocal: true, isDefinition: true)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1688, isLocal: true, isDefinition: true)
!1773 = !DIGlobalVariableExpression(var: !1774, expr: !DIExpression())
!1774 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1445, file: !1616, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_3", scope: !1777, file: !1616, line: 1914, type: !1697, isLocal: true, isDefinition: true, align: 32)
!1777 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_3", scope: !1616, file: !1616, line: 1914, type: !1540, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !1778)
!1778 = !{!1779}
!1779 = !DILocalVariable(name: "dev", arg: 1, scope: !1777, file: !1616, line: 1914, type: !1489)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1445, file: !1616, line: 1914, type: !1707, isLocal: true, isDefinition: true)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1784, file: !1862, line: 65, type: !120, isLocal: true, isDefinition: true)
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1786, retainedTypes: !1787, globals: !1859, splitDebugInlining: false, nameTableKind: None)
!1785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!1786 = !{!584}
!1787 = !{!200, !1788, !754, !154, !121, !1796, !1827}
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1790)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1791)
!1791 = !{!1792, !1793, !1794, !1795}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1790, file: !515, line: 766, baseType: !120, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1790, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1790, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1790, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1799)
!1799 = !{!1800, !1802, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1817, !1822, !1826}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1798, file: !515, line: 413, baseType: !1801, size: 256)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1618)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1798, file: !515, line: 414, baseType: !1803, size: 768, offset: 256)
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1804)
!1804 = !{!1805}
!1805 = !DISubrange(count: 24)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1798, file: !515, line: 415, baseType: !1801, size: 256, offset: 1024)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1798, file: !515, line: 416, baseType: !1803, size: 768, offset: 1280)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1798, file: !515, line: 417, baseType: !1801, size: 256, offset: 2048)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1798, file: !515, line: 418, baseType: !1803, size: 768, offset: 2304)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1798, file: !515, line: 419, baseType: !1801, size: 256, offset: 3072)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1798, file: !515, line: 420, baseType: !1803, size: 768, offset: 3328)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1798, file: !515, line: 421, baseType: !1801, size: 256, offset: 4096)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1798, file: !515, line: 422, baseType: !1814, size: 1792, offset: 4352)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1815)
!1815 = !{!1816}
!1816 = !DISubrange(count: 56)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1798, file: !515, line: 423, baseType: !1818, size: 1920, offset: 6144)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 1920, elements: !1820)
!1819 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1820 = !{!1821}
!1821 = !DISubrange(count: 240)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1798, file: !515, line: 424, baseType: !1823, size: 20608, offset: 8064)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1824)
!1824 = !{!1825}
!1825 = !DISubrange(count: 644)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1798, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1836, !1837, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1850, !1851, !1852, !1854, !1856, !1858}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1829, file: !515, line: 447, baseType: !519, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1829, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1829, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1829, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1829, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1829, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1829, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 96, elements: !1839)
!1839 = !{!1840}
!1840 = !DISubrange(count: 12)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1829, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1829, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1829, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1829, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1829, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1829, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1829, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1829, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1829, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1829, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1829, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !696)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1829, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1313)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1829, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1313)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1829, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1859 = !{!1860, !1886, !1889, !1891, !1893, !1782}
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1784, file: !1862, line: 285, type: !1863, isLocal: true, isDefinition: true, align: 32)
!1862 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1865)
!1865 = !{!1866, !1885}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1864, file: !132, line: 60, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!103, !1870}
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877, !1883, !1884}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1872, file: !141, line: 380, baseType: !144, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1872, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1872, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1872, file: !141, line: 386, baseType: !1878, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1879, file: !141, line: 359, baseType: !154, size: 8)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1879, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1872, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1872, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1864, file: !132, line: 65, baseType: !1870, size: 32, offset: 32)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "lock", scope: !1784, file: !1862, line: 34, type: !1888, isLocal: true, isDefinition: true)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "last_load", scope: !1784, file: !1862, line: 36, type: !121, isLocal: true, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1784, file: !1862, line: 48, type: !121, isLocal: true, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1784, file: !1862, line: 54, type: !121, isLocal: true, isDefinition: true)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1897, file: !1979, line: 22, type: !1981, isLocal: true, isDefinition: true)
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1899, retainedTypes: !1900, globals: !1976, splitDebugInlining: false, nameTableKind: None)
!1898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!1899 = !{!1143, !1149}
!1900 = !{!1901, !1965, !1970, !1196, !1149, !1143, !1975, !102}
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1904)
!1904 = !{!1905, !1924, !1928, !1932, !1936, !1937, !1938, !1942, !1961}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1903, file: !1144, line: 524, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!103, !1909, !1184, !1185}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1922, !1923}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1911, file: !141, line: 380, baseType: !144, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1911, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1911, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1911, file: !141, line: 386, baseType: !1917, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1918, file: !141, line: 359, baseType: !154, size: 8)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1918, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1911, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1911, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1903, file: !1144, line: 530, baseType: !1925, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!103, !1909, !1190}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1903, file: !1144, line: 532, baseType: !1929, size: 32, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{!103, !1909, !1196, !1191}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1903, file: !1144, line: 535, baseType: !1933, size: 32, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 32)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{!103, !1909, !1196}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1903, file: !1144, line: 537, baseType: !1933, size: 32, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1903, file: !1144, line: 539, baseType: !1933, size: 32, offset: 160)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1903, file: !1144, line: 541, baseType: !1939, size: 32, offset: 192)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!103, !1909, !1184, !1143, !1149}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1903, file: !1144, line: 544, baseType: !1943, size: 32, offset: 224)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = !DISubroutineType(types: !1945)
!1945 = !{!103, !1909, !1946, !157}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1948)
!1948 = !{!1949, !1955, !1960}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1947, file: !1144, line: 482, baseType: !1950, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1951)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1952)
!1952 = !{!1953}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1951, file: !1216, line: 30, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1947, file: !1144, line: 485, baseType: !1956, size: 32, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !1909, !1946, !1196}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1947, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1903, file: !1144, line: 547, baseType: !1962, size: 32, offset: 256)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!121, !1909}
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1967, file: !1144, line: 434, baseType: !1196, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1972, file: !1144, line: 447, baseType: !1196, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1976 = !{!1977, !1895}
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1978 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1897, file: !1979, line: 37, type: !1980, isLocal: true, isDefinition: true)
!1979 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1982, size: 352, elements: !1983)
!1982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1909)
!1983 = !{!1984}
!1984 = !DISubrange(count: 11)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1987, file: !2031, line: 139, type: !2037, isLocal: false, isDefinition: true)
!1987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1989, globals: !2028, splitDebugInlining: false, nameTableKind: None)
!1988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1992, file: !116, line: 552, baseType: !120, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1992, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1992, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1992, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1992, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1992, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1992, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1992, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1992, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1992, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1992, file: !116, line: 562, baseType: !852, size: 64, offset: 320)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1992, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1992, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1992, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1992, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1992, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1992, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1992, file: !116, line: 569, baseType: !852, size: 64, offset: 576)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1992, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1992, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1992, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1992, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1992, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1992, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1992, file: !116, line: 576, baseType: !852, size: 64, offset: 832)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1992, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1992, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1992, file: !116, line: 579, baseType: !852, size: 64, offset: 960)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1992, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1992, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1992, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1992, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1992, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1992, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2028 = !{!2029, !2032, !1985}
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1987, file: !2031, line: 137, type: !121, isLocal: false, isDefinition: true)
!2031 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1987, file: !2031, line: 138, type: !2034, isLocal: false, isDefinition: true)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !2035)
!2035 = !{!2036}
!2036 = !DISubrange(count: 16)
!2037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1618)
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2040, file: !2043, line: 23, type: !268, isLocal: false, isDefinition: true)
!2040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2042, splitDebugInlining: false, nameTableKind: None)
!2041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2042 = !{!2038}
!2043 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2046, file: !2050, line: 86, type: !2299, isLocal: false, isDefinition: true, align: 512)
!2046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2048, retainedTypes: !2057, globals: !2130, splitDebugInlining: false, nameTableKind: None)
!2047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2048 = !{!2049, !30, !584}
!2049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2050, line: 63, baseType: !32, size: 32, elements: !2051)
!2050 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2051 = !{!2052, !2053, !2054, !2055, !2056}
!2052 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2053 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2054 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2055 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2056 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2057 = !{!204, !102, !103, !2058, !344, !121, !2088, !754, !154, !2113}
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2061, line: 51, size: 64, elements: !2062)
!2061 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2062 = !{!2063, !2083}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2060, file: !2061, line: 52, baseType: !2064, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2061, line: 38, baseType: !2065)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{!103, !2068, !267, !429}
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075, !2081, !2082}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2070, file: !141, line: 380, baseType: !144, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2070, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2070, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2070, file: !141, line: 386, baseType: !2076, size: 32, offset: 96)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2077, file: !141, line: 359, baseType: !154, size: 8)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2077, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2070, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2070, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2060, file: !2061, line: 53, baseType: !2084, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2061, line: 47, baseType: !2085)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!103, !2068, !267, !429, !121}
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2090, file: !515, line: 447, baseType: !519, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2090, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2090, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2090, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2090, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2090, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2090, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2090, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2090, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2090, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2090, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2090, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2090, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2090, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2090, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2090, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2090, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2090, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2090, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2090, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2090, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2115, file: !515, line: 413, baseType: !1801, size: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2115, file: !515, line: 414, baseType: !1803, size: 768, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2115, file: !515, line: 415, baseType: !1801, size: 256, offset: 1024)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2115, file: !515, line: 416, baseType: !1803, size: 768, offset: 1280)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2115, file: !515, line: 417, baseType: !1801, size: 256, offset: 2048)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2115, file: !515, line: 418, baseType: !1803, size: 768, offset: 2304)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2115, file: !515, line: 419, baseType: !1801, size: 256, offset: 3072)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2115, file: !515, line: 420, baseType: !1803, size: 768, offset: 3328)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2115, file: !515, line: 421, baseType: !1801, size: 256, offset: 4096)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2115, file: !515, line: 422, baseType: !1814, size: 1792, offset: 4352)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2115, file: !515, line: 423, baseType: !1818, size: 1920, offset: 6144)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2115, file: !515, line: 424, baseType: !1823, size: 20608, offset: 8064)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2115, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2130 = !{!2131, !2253, !2262, !2264, !2044, !2267, !2269, !2274}
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "_kernel", scope: !2046, file: !2050, line: 40, type: !2133, isLocal: false, isDefinition: true)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2134)
!2134 = !{!2135, !2248}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2133, file: !320, line: 159, baseType: !2136, size: 192)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 192, elements: !504)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2138)
!2138 = !{!2139, !2140, !2141, !2242, !2243, !2244, !2245}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2137, file: !320, line: 102, baseType: !121, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2137, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2137, file: !320, line: 108, baseType: !2142, size: 32, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2144)
!2144 = !{!2145, !2203, !2215, !2216, !2217, !2218, !2224, !2237}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2143, file: !379, line: 247, baseType: !2146, size: 384)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2147)
!2147 = !{!2148, !2172, !2179, !2180, !2181, !2190, !2191, !2192}
!2148 = !DIDerivedType(tag: DW_TAG_member, scope: !2146, file: !379, line: 60, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2146, file: !379, line: 60, size: 64, elements: !2150)
!2150 = !{!2151, !2166}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2149, file: !379, line: 61, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2154)
!2154 = !{!2155, !2161}
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !325, line: 38, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2153, file: !325, line: 38, size: 32, elements: !2157)
!2157 = !{!2158, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2156, file: !325, line: 39, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2156, file: !325, line: 40, baseType: !2159, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !325, line: 42, baseType: !2162, size: 32, offset: 32)
!2162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2153, file: !325, line: 42, size: 32, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2162, file: !325, line: 43, baseType: !2159, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2162, file: !325, line: 44, baseType: !2159, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2149, file: !379, line: 62, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2168)
!2168 = !{!2169}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2167, file: !404, line: 50, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 64, elements: !363)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2146, file: !379, line: 68, baseType: !2173, size: 32, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2175)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2175, file: !320, line: 232, baseType: !2178, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2153)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2146, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2146, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2181 = !DIDerivedType(tag: DW_TAG_member, scope: !2146, file: !379, line: 90, baseType: !2182, size: 16, offset: 112)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2146, file: !379, line: 90, size: 16, elements: !2183)
!2183 = !{!2184, !2189}
!2184 = !DIDerivedType(tag: DW_TAG_member, scope: !2182, file: !379, line: 91, baseType: !2185, size: 16)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2182, file: !379, line: 91, size: 16, elements: !2186)
!2186 = !{!2187, !2188}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2185, file: !379, line: 96, baseType: !425, size: 8)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2185, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2182, file: !379, line: 100, baseType: !429, size: 16)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2146, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2146, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2146, file: !379, line: 131, baseType: !2193, size: 192, offset: 192)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2194)
!2194 = !{!2195, !2196, !2202}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2193, file: !320, line: 245, baseType: !2152, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2193, file: !320, line: 246, baseType: !2197, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2198)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{null, !2201}
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2193, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2143, file: !379, line: 250, baseType: !2204, size: 288, offset: 384)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2204, file: !446, line: 26, baseType: !121, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2204, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2204, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2204, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2204, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2204, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2204, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2204, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2204, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2143, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2143, file: !379, line: 256, baseType: !2174, size: 64, offset: 704)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2143, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2143, file: !379, line: 300, baseType: !2219, size: 96, offset: 800)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2220)
!2220 = !{!2221, !2222, !2223}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2219, file: !379, line: 153, baseType: !22, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2219, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2219, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2143, file: !379, line: 325, baseType: !2225, size: 32, offset: 896)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2227)
!2227 = !{!2228, !2234, !2235}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2226, file: !296, line: 5074, baseType: !2229, size: 96)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2230)
!2230 = !{!2231, !2232, !2233}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2229, file: !472, line: 57, baseType: !475, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2229, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2229, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2226, file: !296, line: 5075, baseType: !2174, size: 64, offset: 96)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2226, file: !296, line: 5076, baseType: !2236, offset: 160)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2143, file: !379, line: 343, baseType: !2238, size: 64, offset: 928)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2238, file: !446, line: 63, baseType: !121, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2238, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2137, file: !320, line: 111, baseType: !2142, size: 32, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2137, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2137, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2137, file: !320, line: 153, baseType: !2246, offset: 168)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2247, line: 33, elements: !317)
!2247 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2133, file: !320, line: 170, baseType: !2249, size: 96, offset: 192)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2249, file: !320, line: 86, baseType: !2142, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2249, file: !320, line: 90, baseType: !2178, size: 64, offset: 32)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2046, file: !2050, line: 43, type: !2255, isLocal: false, isDefinition: true, align: 512)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 8704, elements: !2260)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2257, line: 47, size: 8, elements: !2258)
!2257 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2258 = !{!2259}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2256, file: !2257, line: 48, baseType: !146, size: 8)
!2260 = !{!2261}
!2261 = !DISubrange(count: 1088)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2046, file: !2050, line: 44, type: !2143, isLocal: false, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2046, file: !2050, line: 48, type: !2266, isLocal: false, isDefinition: true)
!2266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 1024, elements: !504)
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2046, file: !2050, line: 217, type: !157, isLocal: false, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2046, file: !2050, line: 50, type: !2271, isLocal: true, isDefinition: true, align: 512)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 3072, elements: !2272)
!2272 = !{!505, !2273}
!2273 = !DISubrange(count: 384)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "levels", scope: !2276, file: !2050, line: 232, type: !2296, isLocal: true, isDefinition: true)
!2276 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2050, file: !2050, line: 230, type: !2277, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2049}
!2279 = !{!2280, !2281, !2291, !2295}
!2280 = !DILocalVariable(name: "level", arg: 1, scope: !2276, file: !2050, line: 230, type: !2049)
!2281 = !DILocalVariable(name: "entry", scope: !2276, file: !2050, line: 244, type: !2282)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2285)
!2285 = !{!2286, !2290}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2284, file: !132, line: 60, baseType: !2287, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!103, !2068}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2284, file: !132, line: 65, baseType: !2068, size: 32, offset: 32)
!2291 = !DILocalVariable(name: "dev", scope: !2292, file: !2050, line: 247, type: !2068)
!2292 = distinct !DILexicalBlock(scope: !2293, file: !2050, line: 246, column: 64)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !2050, line: 246, column: 2)
!2294 = distinct !DILexicalBlock(scope: !2276, file: !2050, line: 246, column: 2)
!2295 = !DILocalVariable(name: "rc", scope: !2292, file: !2050, line: 248, type: !103)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 192, elements: !2297)
!2297 = !{!2298}
!2298 = !DISubrange(count: 6)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 16896, elements: !2300)
!2300 = !{!505, !2301}
!2301 = !DISubrange(count: 2112)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "states_str", scope: !2304, file: !2305, line: 276, type: !2426, isLocal: true, isDefinition: true)
!2304 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2305, file: !2305, line: 271, type: !2306, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !2417)
!2305 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!144, !2308, !344, !204}
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2309)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2311)
!2311 = !{!2312, !2370, !2382, !2383, !2384, !2385, !2391, !2404}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2310, file: !379, line: 247, baseType: !2313, size: 384)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2314)
!2314 = !{!2315, !2339, !2346, !2347, !2348, !2357, !2358, !2359}
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !379, line: 60, baseType: !2316, size: 64)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !379, line: 60, size: 64, elements: !2317)
!2317 = !{!2318, !2333}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2316, file: !379, line: 61, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2320)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2321)
!2321 = !{!2322, !2328}
!2322 = !DIDerivedType(tag: DW_TAG_member, scope: !2320, file: !325, line: 38, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2320, file: !325, line: 38, size: 32, elements: !2324)
!2324 = !{!2325, !2327}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2323, file: !325, line: 39, baseType: !2326, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !325, line: 40, baseType: !2326, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2320, file: !325, line: 42, baseType: !2329, size: 32, offset: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2320, file: !325, line: 42, size: 32, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2329, file: !325, line: 43, baseType: !2326, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2329, file: !325, line: 44, baseType: !2326, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2316, file: !379, line: 62, baseType: !2334, size: 64)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2335)
!2335 = !{!2336}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2334, file: !404, line: 50, baseType: !2337, size: 64)
!2337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2338, size: 64, elements: !363)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2313, file: !379, line: 68, baseType: !2340, size: 32, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2343)
!2343 = !{!2344}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2342, file: !320, line: 232, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2320)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2313, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2313, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2348 = !DIDerivedType(tag: DW_TAG_member, scope: !2313, file: !379, line: 90, baseType: !2349, size: 16, offset: 112)
!2349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2313, file: !379, line: 90, size: 16, elements: !2350)
!2350 = !{!2351, !2356}
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !379, line: 91, baseType: !2352, size: 16)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2349, file: !379, line: 91, size: 16, elements: !2353)
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2352, file: !379, line: 96, baseType: !425, size: 8)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2352, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2349, file: !379, line: 100, baseType: !429, size: 16)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2313, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2313, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2313, file: !379, line: 131, baseType: !2360, size: 192, offset: 192)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2361)
!2361 = !{!2362, !2363, !2369}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2360, file: !320, line: 245, baseType: !2319, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2360, file: !320, line: 246, baseType: !2364, size: 32, offset: 64)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2365)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{null, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2360, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2310, file: !379, line: 250, baseType: !2371, size: 288, offset: 384)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2371, file: !446, line: 26, baseType: !121, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2371, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2371, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2371, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2371, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2371, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2371, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2371, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2371, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2310, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2310, file: !379, line: 256, baseType: !2341, size: 64, offset: 704)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2310, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2310, file: !379, line: 300, baseType: !2386, size: 96, offset: 800)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2387)
!2387 = !{!2388, !2389, !2390}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2386, file: !379, line: 153, baseType: !22, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2386, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2386, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2310, file: !379, line: 325, baseType: !2392, size: 32, offset: 896)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2394)
!2394 = !{!2395, !2401, !2402}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2393, file: !296, line: 5074, baseType: !2396, size: 96)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2397)
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2396, file: !472, line: 57, baseType: !475, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2396, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2396, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2393, file: !296, line: 5075, baseType: !2341, size: 64, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2393, file: !296, line: 5076, baseType: !2403, offset: 160)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2310, file: !379, line: 343, baseType: !2405, size: 64, offset: 928)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2405, file: !446, line: 63, baseType: !121, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2405, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2411, globals: !2413, splitDebugInlining: false, nameTableKind: None)
!2410 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2411 = !{!102, !144, !200, !154, !103, !2412, !24, !204, !344, !22, !121, !1610}
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2413 = !{!2302, !2414}
!2414 = !DIGlobalVariableExpression(var: !2415, expr: !DIExpression())
!2415 = distinct !DIGlobalVariable(name: "states_sz", scope: !2304, file: !2305, line: 279, type: !2416, isLocal: true, isDefinition: true)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 256, elements: !1618)
!2417 = !{!2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2418 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2304, file: !2305, line: 271, type: !2308)
!2419 = !DILocalVariable(name: "buf", arg: 2, scope: !2304, file: !2305, line: 271, type: !344)
!2420 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2304, file: !2305, line: 271, type: !204)
!2421 = !DILocalVariable(name: "off", scope: !2304, file: !2305, line: 273, type: !204)
!2422 = !DILocalVariable(name: "bit", scope: !2304, file: !2305, line: 274, type: !154)
!2423 = !DILocalVariable(name: "thread_state", scope: !2304, file: !2305, line: 275, type: !154)
!2424 = !DILocalVariable(name: "index", scope: !2425, file: !2305, line: 293, type: !154)
!2425 = distinct !DILexicalBlock(scope: !2304, file: !2305, line: 293, column: 2)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1618)
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2429, file: !2537, line: 56, type: !2526, isLocal: false, isDefinition: true)
!2429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2430, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2431, globals: !2534, splitDebugInlining: false, nameTableKind: None)
!2430 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2431 = !{!2432, !344, !102, !2532, !267, !200, !754, !103, !121, !1610, !2533}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2434)
!2434 = !{!2435, !2493, !2505, !2506, !2507, !2508, !2514, !2527}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2433, file: !379, line: 247, baseType: !2436, size: 384)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2437)
!2437 = !{!2438, !2462, !2469, !2470, !2471, !2480, !2481, !2482}
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !379, line: 60, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !379, line: 60, size: 64, elements: !2440)
!2440 = !{!2441, !2456}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2439, file: !379, line: 61, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2444)
!2444 = !{!2445, !2451}
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !325, line: 38, baseType: !2446, size: 32)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !325, line: 38, size: 32, elements: !2447)
!2447 = !{!2448, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2446, file: !325, line: 39, baseType: !2449, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2446, file: !325, line: 40, baseType: !2449, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !325, line: 42, baseType: !2452, size: 32, offset: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !325, line: 42, size: 32, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2452, file: !325, line: 43, baseType: !2449, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2452, file: !325, line: 44, baseType: !2449, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2439, file: !379, line: 62, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2458)
!2458 = !{!2459}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2457, file: !404, line: 50, baseType: !2460, size: 64)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2461, size: 64, elements: !363)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2436, file: !379, line: 68, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2465, file: !320, line: 232, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2443)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2436, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2436, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !379, line: 90, baseType: !2472, size: 16, offset: 112)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !379, line: 90, size: 16, elements: !2473)
!2473 = !{!2474, !2479}
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !379, line: 91, baseType: !2475, size: 16)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2472, file: !379, line: 91, size: 16, elements: !2476)
!2476 = !{!2477, !2478}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2475, file: !379, line: 96, baseType: !425, size: 8)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2475, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2472, file: !379, line: 100, baseType: !429, size: 16)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2436, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2436, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2436, file: !379, line: 131, baseType: !2483, size: 192, offset: 192)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2484)
!2484 = !{!2485, !2486, !2492}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2483, file: !320, line: 245, baseType: !2442, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2483, file: !320, line: 246, baseType: !2487, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2488)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !2491}
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2483, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2433, file: !379, line: 250, baseType: !2494, size: 288, offset: 384)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2495)
!2495 = !{!2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2494, file: !446, line: 26, baseType: !121, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2494, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2494, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2494, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2494, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2494, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2494, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2494, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2494, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2433, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2433, file: !379, line: 256, baseType: !2464, size: 64, offset: 704)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2433, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2433, file: !379, line: 300, baseType: !2509, size: 96, offset: 800)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2510)
!2510 = !{!2511, !2512, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2509, file: !379, line: 153, baseType: !22, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2509, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2509, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2433, file: !379, line: 325, baseType: !2515, size: 32, offset: 896)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2517)
!2517 = !{!2518, !2524, !2525}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2516, file: !296, line: 5074, baseType: !2519, size: 96)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2520)
!2520 = !{!2521, !2522, !2523}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2519, file: !472, line: 57, baseType: !475, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2519, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2519, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2516, file: !296, line: 5075, baseType: !2464, size: 64, offset: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2516, file: !296, line: 5076, baseType: !2526, offset: 160)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2433, file: !379, line: 343, baseType: !2528, size: 64, offset: 928)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2528, file: !446, line: 63, baseType: !121, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2528, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2534 = !{!2427, !2535, !2538, !2540}
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2429, file: !2537, line: 404, type: !103, isLocal: true, isDefinition: true)
!2537 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2538 = !DIGlobalVariableExpression(var: !2539, expr: !DIExpression())
!2539 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2429, file: !2537, line: 405, type: !103, isLocal: true, isDefinition: true)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "pending_current", scope: !2429, file: !2537, line: 425, type: !2432, isLocal: true, isDefinition: true)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2544, file: !2574, line: 15, type: !1610, isLocal: true, isDefinition: true)
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2546, globals: !2571, splitDebugInlining: false, nameTableKind: None)
!2545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2546 = !{!200, !102, !754, !121, !1610, !103, !2547, !344, !202}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2549)
!2549 = !{!2550, !2565, !2570}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2548, file: !320, line: 245, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2553)
!2553 = !{!2554, !2560}
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !325, line: 38, baseType: !2555, size: 32)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !325, line: 38, size: 32, elements: !2556)
!2556 = !{!2557, !2559}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2555, file: !325, line: 39, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2555, file: !325, line: 40, baseType: !2558, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2552, file: !325, line: 42, baseType: !2561, size: 32, offset: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2552, file: !325, line: 42, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2561, file: !325, line: 43, baseType: !2558, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2561, file: !325, line: 44, baseType: !2558, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2548, file: !320, line: 246, baseType: !2566, size: 32, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2567)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !2547}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2548, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2571 = !{!2542, !2572, !2576, !2578}
!2572 = !DIGlobalVariableExpression(var: !2573, expr: !DIExpression())
!2573 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2544, file: !2574, line: 19, type: !2575, isLocal: true, isDefinition: true)
!2574 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2576 = !DIGlobalVariableExpression(var: !2577, expr: !DIExpression())
!2577 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2544, file: !2574, line: 25, type: !103, isLocal: true, isDefinition: true)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2544, file: !2574, line: 17, type: !2580, isLocal: true, isDefinition: true)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2552)
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2583, file: !2602, line: 55, type: !2603, isLocal: true, isDefinition: true, align: 32)
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2585, globals: !2601, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2585 = !{!102, !200, !103, !2586}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2588)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2589)
!2589 = !{!2590, !2596}
!2590 = !DIDerivedType(tag: DW_TAG_member, scope: !2588, file: !325, line: 38, baseType: !2591, size: 32)
!2591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2588, file: !325, line: 38, size: 32, elements: !2592)
!2592 = !{!2593, !2595}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2591, file: !325, line: 39, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2591, file: !325, line: 40, baseType: !2594, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2588, file: !325, line: 42, baseType: !2597, size: 32, offset: 32)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2588, file: !325, line: 42, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2597, file: !325, line: 43, baseType: !2594, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2597, file: !325, line: 44, baseType: !2594, size: 32)
!2601 = !{!2581}
!2602 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2605)
!2605 = !{!2606, !2613}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2604, file: !132, line: 60, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!103, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!2612 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2604, file: !132, line: 65, baseType: !2610, size: 32, offset: 32)
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2622, retainedTypes: !2630, splitDebugInlining: false, nameTableKind: None)
!2621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2622 = !{!30, !2623}
!2623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2624, line: 54, baseType: !32, size: 32, elements: !2625)
!2624 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2625 = !{!2626, !2627, !2628, !2629}
!2626 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2627 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2628 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2629 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2630 = !{!102, !204, !267, !24, !2631, !22, !2637, !103, !882, !2652}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2624, line: 58, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2624, line: 58, size: 64, elements: !2634)
!2634 = !{!2635}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2633, file: !2624, line: 58, baseType: !2636, size: 64)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1618)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2624, line: 68, size: 128, elements: !2639)
!2639 = !{!2640, !2643, !2644, !2645}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2638, file: !2624, line: 69, baseType: !2641, size: 64)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2642, size: 64, elements: !363)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2624, line: 61, baseType: !121)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2638, file: !2624, line: 70, baseType: !2642, size: 32, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2638, file: !2624, line: 71, baseType: !121, size: 32, offset: 96)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2638, file: !2624, line: 77, baseType: !2646, offset: 128)
!2646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2647, elements: !2650)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2624, line: 64, size: 32, elements: !2648)
!2648 = !{!2649}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2647, file: !2624, line: 65, baseType: !2642, size: 32)
!2650 = !{!2651}
!2651 = !DISubrange(count: 0)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2655, retainedTypes: !2675, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2655 = !{!2656, !2664}
!2656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2657, line: 69, baseType: !32, size: 32, elements: !2658)
!2657 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = !{!2659, !2660, !2661, !2662, !2663}
!2659 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2660 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2661 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2662 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2663 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2657, line: 56, baseType: !32, size: 32, elements: !2665)
!2665 = !{!2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!2666 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2667 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2668 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2669 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2670 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2671 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2672 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2673 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2674 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2675 = !{!103, !2656, !2664, !2676, !426, !164, !2678, !2679, !155, !430, !144, !204, !102, !22, !32, !2681, !2682, !2683, !354, !2684, !203, !2685, !2677, !2686, !2687, !2688, !2689}
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2657, line: 31, baseType: !2677)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2657, line: 32, baseType: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1611)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2693, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2694, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2693 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2694 = !{!2695, !30}
!2695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2696, line: 27, baseType: !32, size: 32, elements: !2697)
!2696 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2697 = !{!2698, !2699, !2700, !2701, !2702}
!2698 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2699 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2700 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2701 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2702 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2705, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2705 = !{!584, !2695, !30}
!2706 = !{!780, !2707, !102, !103, !754, !121, !154, !2724}
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2710)
!2710 = !{!2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2709, file: !515, line: 413, baseType: !1801, size: 256)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2709, file: !515, line: 414, baseType: !1803, size: 768, offset: 256)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2709, file: !515, line: 415, baseType: !1801, size: 256, offset: 1024)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2709, file: !515, line: 416, baseType: !1803, size: 768, offset: 1280)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2709, file: !515, line: 417, baseType: !1801, size: 256, offset: 2048)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2709, file: !515, line: 418, baseType: !1803, size: 768, offset: 2304)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2709, file: !515, line: 419, baseType: !1801, size: 256, offset: 3072)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2709, file: !515, line: 420, baseType: !1803, size: 768, offset: 3328)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2709, file: !515, line: 421, baseType: !1801, size: 256, offset: 4096)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2709, file: !515, line: 422, baseType: !1814, size: 1792, offset: 4352)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2709, file: !515, line: 423, baseType: !1818, size: 1920, offset: 6144)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2709, file: !515, line: 424, baseType: !1823, size: 20608, offset: 8064)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2709, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2726, file: !515, line: 447, baseType: !519, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2726, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2726, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2726, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2726, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2726, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2726, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2726, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2726, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2726, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2726, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2726, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2726, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2726, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2726, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2726, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2726, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2726, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2726, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2726, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2726, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2753 = !{!102, !103, !22, !2754}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2756, file: !515, line: 447, baseType: !519, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2756, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2756, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2756, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2756, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2756, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2756, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2756, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2756, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2756, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2756, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2756, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2756, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2756, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2756, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2756, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2756, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2756, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2756, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2756, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2756, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2781, splitDebugInlining: false, nameTableKind: None)
!2780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2781 = !{!2782, !102, !103}
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2784, file: !515, line: 447, baseType: !519, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2784, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2784, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2784, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2784, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2784, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2784, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2784, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2784, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2784, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2784, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2784, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2784, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2784, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2784, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2784, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2784, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2784, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2784, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2784, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2784, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2809, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2809 = !{!2810, !121, !102, !103}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2812, line: 98, size: 256, elements: !2813)
!2812 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2813 = !{!2814, !2819, !2824, !2829, !2834, !2839, !2844, !2849}
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 99, baseType: !2815, size: 32)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 99, size: 32, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2815, file: !2812, line: 99, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2815, file: !2812, line: 99, baseType: !121, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 100, baseType: !2820, size: 32, offset: 32)
!2820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 100, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2820, file: !2812, line: 100, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2820, file: !2812, line: 100, baseType: !121, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 101, baseType: !2825, size: 32, offset: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 101, size: 32, elements: !2826)
!2826 = !{!2827, !2828}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2825, file: !2812, line: 101, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2825, file: !2812, line: 101, baseType: !121, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 102, baseType: !2830, size: 32, offset: 96)
!2830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 102, size: 32, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2830, file: !2812, line: 102, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2830, file: !2812, line: 102, baseType: !121, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 103, baseType: !2835, size: 32, offset: 128)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 103, size: 32, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2835, file: !2812, line: 103, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2835, file: !2812, line: 103, baseType: !121, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 104, baseType: !2840, size: 32, offset: 160)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 104, size: 32, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2840, file: !2812, line: 104, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2840, file: !2812, line: 104, baseType: !121, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, scope: !2811, file: !2812, line: 105, baseType: !2845, size: 32, offset: 192)
!2845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2811, file: !2812, line: 105, size: 32, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2845, file: !2812, line: 105, baseType: !121, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2845, file: !2812, line: 105, baseType: !121, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2811, file: !2812, line: 106, baseType: !121, size: 32, offset: 224)
!2850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2851, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2694, retainedTypes: !2852, splitDebugInlining: false, nameTableKind: None)
!2851 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2852 = !{!2853, !102, !103, !2878, !2652, !121}
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2856)
!2856 = !{!2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2855, file: !515, line: 447, baseType: !519, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2855, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2855, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2855, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2855, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2855, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2855, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2855, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2855, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2855, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2855, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2855, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2855, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2855, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2855, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2855, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2855, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2855, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2855, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2855, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2855, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2812, line: 141, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2812, line: 97, size: 256, elements: !2881)
!2881 = !{!2882}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2880, file: !2812, line: 107, baseType: !2883, size: 256)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2812, line: 98, size: 256, elements: !2884)
!2884 = !{!2885, !2890, !2895, !2900, !2905, !2910, !2915, !2920}
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 99, baseType: !2886, size: 32)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 99, size: 32, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2886, file: !2812, line: 99, baseType: !121, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2886, file: !2812, line: 99, baseType: !121, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 100, baseType: !2891, size: 32, offset: 32)
!2891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 100, size: 32, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2891, file: !2812, line: 100, baseType: !121, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2891, file: !2812, line: 100, baseType: !121, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 101, baseType: !2896, size: 32, offset: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 101, size: 32, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2896, file: !2812, line: 101, baseType: !121, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2896, file: !2812, line: 101, baseType: !121, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 102, baseType: !2901, size: 32, offset: 96)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 102, size: 32, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2901, file: !2812, line: 102, baseType: !121, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2901, file: !2812, line: 102, baseType: !121, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 103, baseType: !2906, size: 32, offset: 128)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 103, size: 32, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2906, file: !2812, line: 103, baseType: !121, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2906, file: !2812, line: 103, baseType: !121, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 104, baseType: !2911, size: 32, offset: 160)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 104, size: 32, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2911, file: !2812, line: 104, baseType: !121, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2911, file: !2812, line: 104, baseType: !121, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, scope: !2883, file: !2812, line: 105, baseType: !2916, size: 32, offset: 192)
!2916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2883, file: !2812, line: 105, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2916, file: !2812, line: 105, baseType: !121, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2916, file: !2812, line: 105, baseType: !121, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2883, file: !2812, line: 106, baseType: !121, size: 32, offset: 224)
!2921 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2922, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1786, retainedTypes: !2923, splitDebugInlining: false, nameTableKind: None)
!2922 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2923 = !{!780, !754, !154, !121, !2924, !2941}
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2927)
!2927 = !{!2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2926, file: !515, line: 413, baseType: !1801, size: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2926, file: !515, line: 414, baseType: !1803, size: 768, offset: 256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2926, file: !515, line: 415, baseType: !1801, size: 256, offset: 1024)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2926, file: !515, line: 416, baseType: !1803, size: 768, offset: 1280)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2926, file: !515, line: 417, baseType: !1801, size: 256, offset: 2048)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2926, file: !515, line: 418, baseType: !1803, size: 768, offset: 2304)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2926, file: !515, line: 419, baseType: !1801, size: 256, offset: 3072)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2926, file: !515, line: 420, baseType: !1803, size: 768, offset: 3328)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2926, file: !515, line: 421, baseType: !1801, size: 256, offset: 4096)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2926, file: !515, line: 422, baseType: !1814, size: 1792, offset: 4352)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2926, file: !515, line: 423, baseType: !1818, size: 1920, offset: 6144)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2926, file: !515, line: 424, baseType: !1823, size: 20608, offset: 8064)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2926, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2943, file: !515, line: 447, baseType: !519, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2943, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2943, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2943, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2943, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2943, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2943, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2943, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2943, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2943, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2943, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2943, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2943, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2943, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2943, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2943, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2943, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2943, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2943, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2943, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2943, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2968, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2968 = !{!2969, !102, !103}
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2972)
!2972 = !{!2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2971, file: !515, line: 447, baseType: !519, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2971, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2971, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2971, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2971, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2971, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2971, file: !515, line: 453, baseType: !1838, size: 96, offset: 192)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2971, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2971, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2971, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2971, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2971, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2971, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2971, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2971, file: !515, line: 461, baseType: !1849, size: 64, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2971, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2971, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2971, file: !515, line: 464, baseType: !1853, size: 128, offset: 640)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2971, file: !515, line: 465, baseType: !1855, size: 160, offset: 768)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2971, file: !515, line: 466, baseType: !1857, size: 160, offset: 928)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2971, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2994 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2995, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2995 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!2996 = !{!146, !344, !204, !230, !2997, !155, !102}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3001, splitDebugInlining: false, nameTableKind: None)
!3000 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3001 = !{!3002}
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3004, file: !116, line: 552, baseType: !120, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3004, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3004, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3004, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3004, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3004, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3004, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3004, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3004, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3004, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3004, file: !116, line: 562, baseType: !852, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3004, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3004, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3004, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3004, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3004, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3004, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3004, file: !116, line: 569, baseType: !852, size: 64, offset: 576)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3004, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3004, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3004, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3004, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3004, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3004, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3004, file: !116, line: 576, baseType: !852, size: 64, offset: 832)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3004, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3004, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3004, file: !116, line: 579, baseType: !852, size: 64, offset: 960)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3004, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3004, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3004, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3004, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3004, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3004, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3043, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3044, retainedTypes: !3060, splitDebugInlining: false, nameTableKind: None)
!3043 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3044 = !{!3045, !3052, !3056}
!3045 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3046, line: 38, baseType: !32, size: 32, elements: !3047)
!3046 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3047 = !{!3048, !3049, !3050, !3051}
!3048 = !DIEnumerator(name: "HAL_OK", value: 0)
!3049 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3050 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3051 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3052 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !825, line: 184, baseType: !32, size: 32, elements: !3053)
!3053 = !{!3054, !3055}
!3054 = !DIEnumerator(name: "RESET", value: 0)
!3055 = !DIEnumerator(name: "SET", value: 1)
!3056 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !825, line: 190, baseType: !32, size: 32, elements: !3057)
!3057 = !{!3058, !3059}
!3058 = !DIEnumerator(name: "DISABLE", value: 0)
!3059 = !DIEnumerator(name: "ENABLE", value: 1)
!3060 = !{!3061, !121, !3099, !1612, !154, !1610, !102}
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3063, file: !116, line: 552, baseType: !120, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3063, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3063, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3063, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3063, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3063, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3063, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3063, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3063, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3063, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3063, file: !116, line: 562, baseType: !852, size: 64, offset: 320)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3063, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3063, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3063, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3063, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3063, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3063, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3063, file: !116, line: 569, baseType: !852, size: 64, offset: 576)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3063, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3063, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3063, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3063, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3063, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3063, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3063, file: !116, line: 576, baseType: !852, size: 64, offset: 832)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3063, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3063, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3063, file: !116, line: 579, baseType: !852, size: 64, offset: 960)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3063, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3063, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3063, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3063, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3063, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3063, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !3101)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3101, file: !116, line: 542, baseType: !120, size: 32)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3101, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!3105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3107, retainedTypes: !3108, splitDebugInlining: false, nameTableKind: None)
!3106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3107 = !{!824}
!3108 = !{!3109, !121, !3117, !3123, !3134}
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3111, file: !515, line: 766, baseType: !120, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3111, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3111, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3111, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !3119)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !3120)
!3120 = !{!3121, !3122}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3119, file: !116, line: 542, baseType: !120, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3119, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !3125)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130, !3131, !3132, !3133}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3125, file: !116, line: 400, baseType: !120, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3125, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3125, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3125, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3125, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3125, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3125, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3136, file: !116, line: 552, baseType: !120, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3136, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3136, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3136, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3136, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3136, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3136, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3136, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3136, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3136, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3136, file: !116, line: 562, baseType: !852, size: 64, offset: 320)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3136, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3136, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3136, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3136, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3136, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3136, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3136, file: !116, line: 569, baseType: !852, size: 64, offset: 576)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3136, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3136, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3136, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3136, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3136, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3136, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3136, file: !116, line: 576, baseType: !852, size: 64, offset: 832)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3136, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3136, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3136, file: !116, line: 579, baseType: !852, size: 64, offset: 960)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3136, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3136, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3136, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3136, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3136, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3136, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!3172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3174, splitDebugInlining: false, nameTableKind: None)
!3173 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3174 = !{!102, !204}
!3175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3177, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3176 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3177 = !{!3178, !3185, !30}
!3178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3179, line: 14, baseType: !32, size: 32, elements: !3180)
!3179 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3180 = !{!3181, !3182, !3183, !3184}
!3181 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3182 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3183 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3184 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3179, line: 42, baseType: !32, size: 32, elements: !3186)
!3186 = !{!3187, !3188, !3189, !3190, !3191, !3192}
!3187 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3188 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3189 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3190 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3191 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3192 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3197, retainedTypes: !3208, splitDebugInlining: false, nameTableKind: None)
!3196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3197 = !{!3198, !30}
!3198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3199)
!3199 = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207}
!3200 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3201 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3202 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3203 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3204 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3205 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3206 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3207 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3208 = !{!102, !154, !3209, !344, !3219, !157, !3220, !103, !3221, !312}
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3211, line: 25, size: 64, elements: !3212)
!3211 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3212 = !{!3213, !3218}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3210, file: !3211, line: 26, baseType: !3214, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3215)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3216)
!3216 = !{!3217}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3215, file: !303, line: 36, baseType: !312, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3210, file: !3211, line: 27, baseType: !102, size: 32, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3223)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3224)
!3224 = !{!3225, !3231}
!3225 = !DIDerivedType(tag: DW_TAG_member, scope: !3223, file: !325, line: 38, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3223, file: !325, line: 38, size: 32, elements: !3227)
!3227 = !{!3228, !3230}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3226, file: !325, line: 39, baseType: !3229, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3226, file: !325, line: 40, baseType: !3229, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, scope: !3223, file: !325, line: 42, baseType: !3232, size: 32, offset: 32)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3223, file: !325, line: 42, size: 32, elements: !3233)
!3233 = !{!3234, !3235}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3232, file: !325, line: 43, baseType: !3229, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3232, file: !325, line: 44, baseType: !3229, size: 32)
!3236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3238, splitDebugInlining: false, nameTableKind: None)
!3237 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3238 = !{!22, !102, !103}
!3239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3242, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3242 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3243 = !{!"Ubuntu clang version 14.0.6"}
!3244 = !{i32 7, !"Dwarf Version", i32 4}
!3245 = !{i32 2, !"Debug Info Version", i32 3}
!3246 = !{i32 1, !"wchar_size", i32 4}
!3247 = !{i32 1, !"min_enum_size", i32 4}
!3248 = !{i32 1, !"branch-target-enforcement", i32 0}
!3249 = !{i32 1, !"sign-return-address", i32 0}
!3250 = !{i32 1, !"sign-return-address-all", i32 0}
!3251 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3252 = !{i32 7, !"frame-pointer", i32 2}
!3253 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3254, file: !3254, line: 26, type: !3255, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !317)
!3254 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3255 = !DISubroutineType(types: !3256)
!3256 = !{null}
!3257 = !DILocation(line: 28, column: 1, scope: !3253)
!3258 = !{i64 2155360566, i64 2155360586, i64 2155360649}
!3259 = !DILocation(line: 29, column: 1, scope: !3253)
!3260 = !{i64 2155360981, i64 2155361001, i64 2155361064}
!3261 = !DILocation(line: 30, column: 1, scope: !3253)
!3262 = !{i64 2155361400, i64 2155361420, i64 2155361483}
!3263 = !DILocation(line: 31, column: 1, scope: !3253)
!3264 = !{i64 2155361819, i64 2155361839, i64 2155361902}
!3265 = !DILocation(line: 33, column: 1, scope: !3253)
!3266 = !{i64 2155362111, i64 2155362131, i64 2155362194}
!3267 = !DILocation(line: 35, column: 1, scope: !3253)
!3268 = !{i64 2155362436, i64 2155362456, i64 2155362519}
!3269 = !DILocation(line: 50, column: 1, scope: !3253)
!3270 = !{i64 2155362863, i64 2155362883, i64 2155362946}
!3271 = !DILocation(line: 54, column: 1, scope: !3253)
!3272 = !{i64 2155367363, i64 2155367383, i64 2155367446}
!3273 = !DILocation(line: 61, column: 1, scope: !3253)
!3274 = !{i64 2155367680, i64 2155367700, i64 2155367763}
!3275 = !DILocation(line: 63, column: 1, scope: !3253)
!3276 = !{i64 2155368060, i64 2155368080, i64 2155368143}
!3277 = !DILocation(line: 64, column: 1, scope: !3253)
!3278 = !{i64 2155368582, i64 2155368602, i64 2155368665}
!3279 = !DILocation(line: 65, column: 1, scope: !3253)
!3280 = !{i64 2155369080, i64 2155369100, i64 2155369163}
!3281 = !DILocation(line: 66, column: 1, scope: !3253)
!3282 = !{i64 2155369562, i64 2155369582, i64 2155369645}
!3283 = !DILocation(line: 67, column: 1, scope: !3253)
!3284 = !{i64 2155370069, i64 2155370089, i64 2155370152}
!3285 = !DILocation(line: 68, column: 1, scope: !3253)
!3286 = !{i64 2155370557, i64 2155370577, i64 2155370640}
!3287 = !DILocation(line: 70, column: 1, scope: !3253)
!3288 = !{i64 2155371025, i64 2155371045, i64 2155371108}
!3289 = !DILocation(line: 71, column: 1, scope: !3253)
!3290 = !{i64 2155371467, i64 2155371487, i64 2155371550}
!3291 = !DILocation(line: 72, column: 1, scope: !3253)
!3292 = !{i64 2155371925, i64 2155371945, i64 2155372008}
!3293 = !DILocation(line: 79, column: 1, scope: !3253)
!3294 = !{i64 2155372379, i64 2155372399, i64 2155372462}
!3295 = !DILocation(line: 80, column: 1, scope: !3253)
!3296 = !{i64 2155372890, i64 2155372910, i64 2155372973}
!3297 = !DILocation(line: 82, column: 1, scope: !3253)
!3298 = !{i64 2155373381, i64 2155373401, i64 2155373464}
!3299 = !DILocation(line: 97, column: 1, scope: !3253)
!3300 = !{i64 2155373718, i64 2155373738, i64 2155373801}
!3301 = !DILocation(line: 99, column: 1, scope: !3253)
!3302 = !{i64 2155373936, i64 2155373956, i64 2155374019}
!3303 = !DILocation(line: 102, column: 1, scope: !3253)
!3304 = !{i64 2155374193, i64 2155374213, i64 2155374276}
!3305 = !DILocation(line: 105, column: 1, scope: !3253)
!3306 = !{i64 2155374433, i64 2155374453, i64 2155374516}
!3307 = !DILocation(line: 115, column: 1, scope: !3253)
!3308 = !{i64 2155374772, i64 2155374792, i64 2155374855}
!3309 = !DILocation(line: 118, column: 1, scope: !3253)
!3310 = !{i64 2155375116, i64 2155375136, i64 2155375199}
!3311 = !DILocation(line: 32, column: 1, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3253, file: !3313, discriminator: 0)
!3313 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3314 = !{i64 2155375472, i64 2155375492, i64 2155375555}
!3315 = !DILocation(line: 33, column: 1, scope: !3312)
!3316 = !{i64 2155375984, i64 2155376004, i64 2155376067}
!3317 = !DILocation(line: 53, column: 1, scope: !3312)
!3318 = !{i64 2155376492, i64 2155376512, i64 2155376575}
!3319 = !DILocation(line: 54, column: 1, scope: !3312)
!3320 = !{i64 2155380971, i64 2155380991, i64 2155381054}
!3321 = !DILocation(line: 55, column: 1, scope: !3312)
!3322 = !{i64 2155381389, i64 2155381409, i64 2155381472}
!3323 = !DILocation(line: 56, column: 1, scope: !3312)
!3324 = !{i64 2155381807, i64 2155381827, i64 2155381890}
!3325 = !DILocation(line: 57, column: 1, scope: !3312)
!3326 = !{i64 2155382225, i64 2155382245, i64 2155382308}
!3327 = !DILocation(line: 58, column: 1, scope: !3312)
!3328 = !{i64 2155382643, i64 2155382663, i64 2155382726}
!3329 = !DILocation(line: 59, column: 1, scope: !3312)
!3330 = !{i64 2155383061, i64 2155383081, i64 2155383144}
!3331 = !DILocation(line: 60, column: 1, scope: !3312)
!3332 = !{i64 2155383485, i64 2155383505, i64 2155383568}
!3333 = !DILocation(line: 61, column: 1, scope: !3312)
!3334 = !{i64 2155383802, i64 2155383822, i64 2155383885}
!3335 = !DILocation(line: 70, column: 1, scope: !3312)
!3336 = !{i64 2155384031, i64 2155384051, i64 2155384114}
!3337 = !DILocation(line: 72, column: 1, scope: !3312)
!3338 = !{i64 2155384363, i64 2155384383, i64 2155384446}
!3339 = !DILocation(line: 73, column: 1, scope: !3312)
!3340 = !{i64 2155384813, i64 2155384833, i64 2155384896}
!3341 = !DILocation(line: 74, column: 1, scope: !3312)
!3342 = !{i64 2155385263, i64 2155385283, i64 2155385346}
!3343 = !DILocation(line: 75, column: 1, scope: !3312)
!3344 = !{i64 2155385713, i64 2155385733, i64 2155385796}
!3345 = !DILocation(line: 76, column: 1, scope: !3312)
!3346 = !{i64 2155386163, i64 2155386183, i64 2155386246}
!3347 = !DILocation(line: 77, column: 1, scope: !3312)
!3348 = !{i64 2155386613, i64 2155386633, i64 2155386696}
!3349 = !DILocation(line: 78, column: 1, scope: !3312)
!3350 = !{i64 2155387063, i64 2155387083, i64 2155387146}
!3351 = !DILocation(line: 79, column: 1, scope: !3312)
!3352 = !{i64 2155387513, i64 2155387533, i64 2155387596}
!3353 = !DILocation(line: 80, column: 1, scope: !3312)
!3354 = !{i64 2155387966, i64 2155387986, i64 2155388049}
!3355 = !DILocation(line: 84, column: 1, scope: !3312)
!3356 = !{i64 2155388298, i64 2155388318, i64 2155388381}
!3357 = !DILocation(line: 91, column: 1, scope: !3312)
!3358 = !{i64 2155388695, i64 2155388715, i64 2155388778}
!3359 = !DILocation(line: 93, column: 1, scope: !3312)
!3360 = !{i64 2155389062, i64 2155389082, i64 2155389145}
!3361 = !DILocation(line: 106, column: 1, scope: !3312)
!3362 = !{i64 2155389332, i64 2155389352, i64 2155389415}
!3363 = !DILocation(line: 11, column: 1, scope: !3364)
!3364 = !DILexicalBlockFile(scope: !3253, file: !3365, discriminator: 0)
!3365 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3366 = distinct !DISubprogram(name: "main", scope: !3367, file: !3367, line: 12, type: !3255, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !3368)
!3367 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3368 = !{!3369}
!3369 = !DILocalVariable(name: "s", scope: !3370, file: !3367, line: 19, type: !344)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !3367, line: 18, column: 12)
!3371 = !DILocation(line: 14, column: 2, scope: !3366)
!3372 = !DILocation(line: 16, column: 2, scope: !3366)
!3373 = !DILocation(line: 18, column: 2, scope: !3366)
!3374 = !DILocation(line: 19, column: 13, scope: !3370)
!3375 = !DILocation(line: 0, scope: !3370)
!3376 = !DILocation(line: 21, column: 3, scope: !3370)
!3377 = !DILocation(line: 22, column: 37, scope: !3370)
!3378 = !DILocation(line: 22, column: 47, scope: !3370)
!3379 = !DILocation(line: 22, column: 35, scope: !3370)
!3380 = !DILocation(line: 22, column: 3, scope: !3370)
!3381 = distinct !{!3381, !3373, !3382}
!3382 = !DILocation(line: 23, column: 2, scope: !3366)
!3383 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3384)
!3384 = !{!3385}
!3385 = !DILocalVariable(name: "c", arg: 1, scope: !3383, file: !105, line: 45, type: !103)
!3386 = !DILocation(line: 0, scope: !3383)
!3387 = !DILocation(line: 50, column: 2, scope: !3383)
!3388 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3389, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3391)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{null, !106}
!3391 = !{!3392}
!3392 = !DILocalVariable(name: "fn", arg: 1, scope: !3388, file: !105, line: 63, type: !106)
!3393 = !DILocation(line: 0, scope: !3388)
!3394 = !DILocation(line: 65, column: 12, scope: !3388)
!3395 = !DILocation(line: 66, column: 1, scope: !3388)
!3396 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3397, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!102}
!3399 = !DILocation(line: 78, column: 9, scope: !3396)
!3400 = !DILocation(line: 78, column: 2, scope: !3396)
!3401 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3402, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3411)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{null, !144, !3404}
!3404 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3405, line: 99, baseType: !3406)
!3405 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3405, line: 40, baseType: !3407)
!3407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3408)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3409)
!3409 = !{!3410}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3408, file: !105, line: 79, baseType: !102, size: 32)
!3411 = !{!3412, !3413, !3414}
!3412 = !DILocalVariable(name: "fmt", arg: 1, scope: !3401, file: !105, line: 113, type: !144)
!3413 = !DILocalVariable(name: "ap", arg: 2, scope: !3401, file: !105, line: 113, type: !3404)
!3414 = !DILocalVariable(name: "ctx", scope: !3415, file: !105, line: 121, type: !3417)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !105, line: 120, column: 27)
!3416 = distinct !DILexicalBlock(scope: !3401, file: !105, line: 120, column: 6)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3418)
!3418 = !{!3419, !3420}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3417, file: !105, line: 85, baseType: !32, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3417, file: !105, line: 86, baseType: !3421, offset: 32)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2650)
!3422 = !DILocation(line: 0, scope: !3401)
!3423 = !DILocation(line: 148, column: 3, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3416, file: !105, line: 138, column: 9)
!3425 = !DILocation(line: 155, column: 1, scope: !3401)
!3426 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3427, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3429)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!103, !103, !102}
!3429 = !{!3430, !3431}
!3430 = !DILocalVariable(name: "c", arg: 1, scope: !3426, file: !105, line: 107, type: !103)
!3431 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3426, file: !105, line: 107, type: !102)
!3432 = !DILocation(line: 0, scope: !3426)
!3433 = !DILocation(line: 110, column: 9, scope: !3426)
!3434 = !DILocation(line: 110, column: 2, scope: !3426)
!3435 = distinct !DISubprogram(name: "cbvprintf", scope: !3436, file: !3436, line: 739, type: !3437, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3443)
!3436 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!103, !3439, !102, !144, !3404}
!3439 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3436, line: 297, baseType: !3440)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 32)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!103, null}
!3443 = !{!3444, !3445, !3446, !3447}
!3444 = !DILocalVariable(name: "out", arg: 1, scope: !3435, file: !3436, line: 739, type: !3439)
!3445 = !DILocalVariable(name: "ctx", arg: 2, scope: !3435, file: !3436, line: 739, type: !102)
!3446 = !DILocalVariable(name: "format", arg: 3, scope: !3435, file: !3436, line: 739, type: !144)
!3447 = !DILocalVariable(name: "ap", arg: 4, scope: !3435, file: !3436, line: 739, type: !3404)
!3448 = !DILocation(line: 0, scope: !3435)
!3449 = !DILocation(line: 741, column: 9, scope: !3435)
!3450 = !DILocation(line: 741, column: 2, scope: !3435)
!3451 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3452, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !344, !204}
!3454 = !{!3455, !3456, !3457}
!3455 = !DILocalVariable(name: "c", arg: 1, scope: !3451, file: !105, line: 157, type: !344)
!3456 = !DILocalVariable(name: "n", arg: 2, scope: !3451, file: !105, line: 157, type: !204)
!3457 = !DILocalVariable(name: "i", scope: !3451, file: !105, line: 159, type: !204)
!3458 = !DILocation(line: 0, scope: !3451)
!3459 = !DILocation(line: 164, column: 16, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !105, line: 164, column: 2)
!3461 = distinct !DILexicalBlock(scope: !3451, file: !105, line: 164, column: 2)
!3462 = !DILocation(line: 164, column: 2, scope: !3461)
!3463 = !DILocation(line: 165, column: 3, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !105, line: 164, column: 26)
!3465 = !DILocation(line: 165, column: 13, scope: !3464)
!3466 = !DILocation(line: 164, column: 22, scope: !3460)
!3467 = distinct !{!3467, !3462, !3468}
!3468 = !DILocation(line: 166, column: 2, scope: !3461)
!3469 = !DILocation(line: 171, column: 1, scope: !3451)
!3470 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3471, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !144, null}
!3473 = !{!3474, !3475}
!3474 = !DILocalVariable(name: "fmt", arg: 1, scope: !3470, file: !105, line: 203, type: !144)
!3475 = !DILocalVariable(name: "ap", scope: !3470, file: !105, line: 205, type: !3404)
!3476 = !DILocation(line: 0, scope: !3470)
!3477 = !DILocation(line: 205, column: 2, scope: !3470)
!3478 = !DILocation(line: 205, column: 10, scope: !3470)
!3479 = !DILocation(line: 207, column: 2, scope: !3470)
!3480 = !DILocation(line: 209, column: 2, scope: !3470)
!3481 = !DILocation(line: 211, column: 2, scope: !3470)
!3482 = !DILocation(line: 212, column: 1, scope: !3470)
!3483 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3484, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3486)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!103, !344, !204, !144, null}
!3486 = !{!3487, !3488, !3489, !3490, !3491}
!3487 = !DILocalVariable(name: "str", arg: 1, scope: !3483, file: !105, line: 239, type: !344)
!3488 = !DILocalVariable(name: "size", arg: 2, scope: !3483, file: !105, line: 239, type: !204)
!3489 = !DILocalVariable(name: "fmt", arg: 3, scope: !3483, file: !105, line: 239, type: !144)
!3490 = !DILocalVariable(name: "ap", scope: !3483, file: !105, line: 241, type: !3404)
!3491 = !DILocalVariable(name: "ret", scope: !3483, file: !105, line: 242, type: !103)
!3492 = !DILocation(line: 0, scope: !3483)
!3493 = !DILocation(line: 241, column: 2, scope: !3483)
!3494 = !DILocation(line: 241, column: 10, scope: !3483)
!3495 = !DILocation(line: 244, column: 2, scope: !3483)
!3496 = !DILocation(line: 245, column: 8, scope: !3483)
!3497 = !DILocation(line: 246, column: 2, scope: !3483)
!3498 = !DILocation(line: 249, column: 1, scope: !3483)
!3499 = !DILocation(line: 248, column: 2, scope: !3483)
!3500 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3501, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3503)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!103, !344, !204, !144, !3404}
!3503 = !{!3504, !3505, !3506, !3507, !3508}
!3504 = !DILocalVariable(name: "str", arg: 1, scope: !3500, file: !105, line: 251, type: !344)
!3505 = !DILocalVariable(name: "size", arg: 2, scope: !3500, file: !105, line: 251, type: !204)
!3506 = !DILocalVariable(name: "fmt", arg: 3, scope: !3500, file: !105, line: 251, type: !144)
!3507 = !DILocalVariable(name: "ap", arg: 4, scope: !3500, file: !105, line: 251, type: !3404)
!3508 = !DILocalVariable(name: "ctx", scope: !3500, file: !105, line: 253, type: !3509)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3510)
!3510 = !{!3511, !3512, !3513}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3509, file: !105, line: 218, baseType: !344, size: 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3509, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3509, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3514 = !DILocation(line: 0, scope: !3500)
!3515 = !DILocation(line: 253, column: 2, scope: !3500)
!3516 = !DILocation(line: 253, column: 21, scope: !3500)
!3517 = !DILocation(line: 253, column: 27, scope: !3500)
!3518 = !DILocation(line: 255, column: 2, scope: !3500)
!3519 = !DILocation(line: 257, column: 10, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3500, file: !105, line: 257, column: 6)
!3521 = !DILocation(line: 257, column: 22, scope: !3520)
!3522 = !DILocation(line: 257, column: 16, scope: !3520)
!3523 = !DILocation(line: 257, column: 6, scope: !3500)
!3524 = !DILocation(line: 258, column: 3, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3520, file: !105, line: 257, column: 27)
!3526 = !DILocation(line: 258, column: 18, scope: !3525)
!3527 = !DILocation(line: 259, column: 2, scope: !3525)
!3528 = !DILocation(line: 262, column: 1, scope: !3500)
!3529 = !DILocation(line: 261, column: 2, scope: !3500)
!3530 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3531, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3534)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!103, !103, !3533}
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 32)
!3534 = !{!3535, !3536}
!3535 = !DILocalVariable(name: "c", arg: 1, scope: !3530, file: !105, line: 223, type: !103)
!3536 = !DILocalVariable(name: "ctx", arg: 2, scope: !3530, file: !105, line: 223, type: !3533)
!3537 = !DILocation(line: 0, scope: !3530)
!3538 = !DILocation(line: 225, column: 11, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3530, file: !105, line: 225, column: 6)
!3540 = !DILocation(line: 225, column: 15, scope: !3539)
!3541 = !DILocation(line: 0, scope: !3539)
!3542 = !DILocation(line: 225, column: 23, scope: !3539)
!3543 = !DILocation(line: 225, column: 45, scope: !3539)
!3544 = !DILocation(line: 225, column: 37, scope: !3539)
!3545 = !DILocation(line: 225, column: 6, scope: !3530)
!3546 = !DILocation(line: 226, column: 8, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3539, file: !105, line: 225, column: 50)
!3548 = !DILocation(line: 226, column: 13, scope: !3547)
!3549 = !DILocation(line: 227, column: 3, scope: !3547)
!3550 = !DILocation(line: 230, column: 29, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3530, file: !105, line: 230, column: 6)
!3552 = !DILocation(line: 230, column: 17, scope: !3551)
!3553 = !DILocation(line: 230, column: 6, scope: !3530)
!3554 = !DILocation(line: 231, column: 22, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3551, file: !105, line: 230, column: 34)
!3556 = !DILocation(line: 231, column: 3, scope: !3555)
!3557 = !DILocation(line: 231, column: 26, scope: !3555)
!3558 = !DILocation(line: 232, column: 2, scope: !3555)
!3559 = !DILocation(line: 233, column: 28, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3551, file: !105, line: 232, column: 9)
!3561 = !DILocation(line: 233, column: 22, scope: !3560)
!3562 = !DILocation(line: 233, column: 3, scope: !3560)
!3563 = !DILocation(line: 233, column: 26, scope: !3560)
!3564 = !DILocation(line: 237, column: 1, scope: !3530)
!3565 = distinct !DISubprogram(name: "z_thread_entry", scope: !3566, file: !3566, line: 30, type: !3567, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !3574)
!3566 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !3569, !102, !102, !102}
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3570, line: 46, baseType: !3571)
!3570 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 32)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !102, !102, !102}
!3574 = !{!3575, !3576, !3577, !3578}
!3575 = !DILocalVariable(name: "entry", arg: 1, scope: !3565, file: !3566, line: 30, type: !3569)
!3576 = !DILocalVariable(name: "p1", arg: 2, scope: !3565, file: !3566, line: 31, type: !102)
!3577 = !DILocalVariable(name: "p2", arg: 3, scope: !3565, file: !3566, line: 31, type: !102)
!3578 = !DILocalVariable(name: "p3", arg: 4, scope: !3565, file: !3566, line: 31, type: !102)
!3579 = !DILocation(line: 0, scope: !3565)
!3580 = !DILocation(line: 36, column: 2, scope: !3565)
!3581 = !DILocation(line: 38, column: 17, scope: !3565)
!3582 = !DILocation(line: 38, column: 2, scope: !3565)
!3583 = !DILocation(line: 45, column: 2, scope: !3565)
!3584 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3585, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !317)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!3587}
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3588)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 32)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3590)
!3590 = !{!3591, !3649, !3661, !3662, !3663, !3664, !3670, !3683}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3589, file: !379, line: 247, baseType: !3592, size: 384)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3593)
!3593 = !{!3594, !3618, !3625, !3626, !3627, !3636, !3637, !3638}
!3594 = !DIDerivedType(tag: DW_TAG_member, scope: !3592, file: !379, line: 60, baseType: !3595, size: 64)
!3595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3592, file: !379, line: 60, size: 64, elements: !3596)
!3596 = !{!3597, !3612}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3595, file: !379, line: 61, baseType: !3598, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3600)
!3600 = !{!3601, !3607}
!3601 = !DIDerivedType(tag: DW_TAG_member, scope: !3599, file: !325, line: 38, baseType: !3602, size: 32)
!3602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3599, file: !325, line: 38, size: 32, elements: !3603)
!3603 = !{!3604, !3606}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3602, file: !325, line: 39, baseType: !3605, size: 32)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3602, file: !325, line: 40, baseType: !3605, size: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, scope: !3599, file: !325, line: 42, baseType: !3608, size: 32, offset: 32)
!3608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3599, file: !325, line: 42, size: 32, elements: !3609)
!3609 = !{!3610, !3611}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3608, file: !325, line: 43, baseType: !3605, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3608, file: !325, line: 44, baseType: !3605, size: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3595, file: !379, line: 62, baseType: !3613, size: 64)
!3613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3614)
!3614 = !{!3615}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3613, file: !404, line: 50, baseType: !3616, size: 64)
!3616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3617, size: 64, elements: !363)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3592, file: !379, line: 68, baseType: !3619, size: 32, offset: 64)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 32)
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3621)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3622)
!3622 = !{!3623}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3621, file: !320, line: 232, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3599)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3592, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3592, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3627 = !DIDerivedType(tag: DW_TAG_member, scope: !3592, file: !379, line: 90, baseType: !3628, size: 16, offset: 112)
!3628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3592, file: !379, line: 90, size: 16, elements: !3629)
!3629 = !{!3630, !3635}
!3630 = !DIDerivedType(tag: DW_TAG_member, scope: !3628, file: !379, line: 91, baseType: !3631, size: 16)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3628, file: !379, line: 91, size: 16, elements: !3632)
!3632 = !{!3633, !3634}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3631, file: !379, line: 96, baseType: !425, size: 8)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3631, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3628, file: !379, line: 100, baseType: !429, size: 16)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3592, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3592, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3592, file: !379, line: 131, baseType: !3639, size: 192, offset: 192)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3640)
!3640 = !{!3641, !3642, !3648}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3639, file: !320, line: 245, baseType: !3598, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3639, file: !320, line: 246, baseType: !3643, size: 32, offset: 64)
!3643 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3644)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 32)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{null, !3647}
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3639, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3589, file: !379, line: 250, baseType: !3650, size: 288, offset: 384)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3651)
!3651 = !{!3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3650, file: !446, line: 26, baseType: !121, size: 32)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3650, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3650, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3650, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3650, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3650, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3650, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3650, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3650, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3589, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3589, file: !379, line: 256, baseType: !3620, size: 64, offset: 704)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3589, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3589, file: !379, line: 300, baseType: !3665, size: 96, offset: 800)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3666)
!3666 = !{!3667, !3668, !3669}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3665, file: !379, line: 153, baseType: !22, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3665, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3665, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3589, file: !379, line: 325, baseType: !3671, size: 32, offset: 896)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 32)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3673)
!3673 = !{!3674, !3680, !3681}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3672, file: !296, line: 5074, baseType: !3675, size: 96)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3676)
!3676 = !{!3677, !3678, !3679}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3675, file: !472, line: 57, baseType: !475, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3675, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3675, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3672, file: !296, line: 5075, baseType: !3620, size: 64, offset: 96)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3672, file: !296, line: 5076, baseType: !3682, offset: 160)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3589, file: !379, line: 343, baseType: !3684, size: 64, offset: 928)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3685)
!3685 = !{!3686, !3687}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3684, file: !446, line: 63, baseType: !121, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3684, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3688 = !DILocation(line: 535, column: 9, scope: !3584)
!3689 = !DILocation(line: 535, column: 2, scope: !3584)
!3690 = distinct !DISubprogram(name: "k_thread_abort", scope: !3691, file: !3691, line: 188, type: !3692, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !3694)
!3691 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !3587}
!3694 = !{!3695}
!3695 = !DILocalVariable(name: "thread", arg: 1, scope: !3690, file: !3691, line: 188, type: !3587)
!3696 = !DILocation(line: 0, scope: !3690)
!3697 = !DILocation(line: 197, column: 2, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3690, file: !3691, line: 197, column: 2)
!3699 = !{i64 2155057831}
!3700 = !DILocation(line: 198, column: 2, scope: !3690)
!3701 = !DILocation(line: 199, column: 1, scope: !3690)
!3702 = distinct !DISubprogram(name: "z_current_get", scope: !3691, file: !3691, line: 173, type: !3585, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !317)
!3703 = !DILocation(line: 180, column: 2, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3702, file: !3691, line: 180, column: 2)
!3705 = !{i64 2155057763}
!3706 = !DILocation(line: 181, column: 9, scope: !3702)
!3707 = !DILocation(line: 181, column: 2, scope: !3702)
!3708 = distinct !DISubprogram(name: "sys_heap_free", scope: !3709, file: !3709, line: 163, type: !3710, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3718)
!3709 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3710 = !DISubroutineType(types: !3711)
!3711 = !{null, !3712, !102}
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 32)
!3713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3714)
!3714 = !{!3715, !3716, !3717}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3713, file: !472, line: 57, baseType: !2637, size: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3713, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3713, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3718 = !{!3719, !3720, !3721, !3722}
!3719 = !DILocalVariable(name: "heap", arg: 1, scope: !3708, file: !3709, line: 163, type: !3712)
!3720 = !DILocalVariable(name: "mem", arg: 2, scope: !3708, file: !3709, line: 163, type: !102)
!3721 = !DILocalVariable(name: "h", scope: !3708, file: !3709, line: 168, type: !2637)
!3722 = !DILocalVariable(name: "c", scope: !3708, file: !3709, line: 169, type: !2642)
!3723 = !DILocation(line: 0, scope: !3708)
!3724 = !DILocation(line: 165, column: 10, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3708, file: !3709, line: 165, column: 6)
!3726 = !DILocation(line: 165, column: 6, scope: !3708)
!3727 = !DILocation(line: 168, column: 27, scope: !3708)
!3728 = !DILocation(line: 169, column: 16, scope: !3708)
!3729 = !{i32 0, i32 536870912}
!3730 = !DILocation(line: 187, column: 2, scope: !3708)
!3731 = !DILocation(line: 197, column: 2, scope: !3708)
!3732 = !DILocation(line: 198, column: 1, scope: !3708)
!3733 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3709, file: !3709, line: 157, type: !3734, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!2642, !2637, !102}
!3736 = !{!3737, !3738, !3739, !3740}
!3737 = !DILocalVariable(name: "h", arg: 1, scope: !3733, file: !3709, line: 157, type: !2637)
!3738 = !DILocalVariable(name: "p", arg: 2, scope: !3733, file: !3709, line: 157, type: !102)
!3739 = !DILocalVariable(name: "mem", scope: !3733, file: !3709, line: 159, type: !267)
!3740 = !DILocalVariable(name: "base", scope: !3733, file: !3709, line: 159, type: !267)
!3741 = !DILocation(line: 0, scope: !3733)
!3742 = !DILocation(line: 159, column: 39, scope: !3733)
!3743 = !DILocation(line: 160, column: 14, scope: !3733)
!3744 = !DILocation(line: 160, column: 38, scope: !3733)
!3745 = !DILocation(line: 160, column: 46, scope: !3733)
!3746 = !DILocation(line: 160, column: 2, scope: !3733)
!3747 = distinct !DISubprogram(name: "set_chunk_used", scope: !2624, file: !2624, line: 147, type: !3748, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3750)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !2637, !2642, !157}
!3750 = !{!3751, !3752, !3753, !3754, !3755}
!3751 = !DILocalVariable(name: "h", arg: 1, scope: !3747, file: !2624, line: 147, type: !2637)
!3752 = !DILocalVariable(name: "c", arg: 2, scope: !3747, file: !2624, line: 147, type: !2642)
!3753 = !DILocalVariable(name: "used", arg: 3, scope: !3747, file: !2624, line: 147, type: !157)
!3754 = !DILocalVariable(name: "buf", scope: !3747, file: !2624, line: 149, type: !2631)
!3755 = !DILocalVariable(name: "cmem", scope: !3747, file: !2624, line: 150, type: !102)
!3756 = !DILocation(line: 0, scope: !3747)
!3757 = !DILocation(line: 149, column: 22, scope: !3747)
!3758 = !DILocation(line: 0, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !2624, line: 159, column: 7)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !2624, line: 158, column: 9)
!3761 = distinct !DILexicalBlock(scope: !3747, file: !2624, line: 152, column: 6)
!3762 = !DILocation(line: 159, column: 7, scope: !3760)
!3763 = !DILocation(line: 165, column: 1, scope: !3747)
!3764 = distinct !DISubprogram(name: "free_chunk", scope: !3709, file: !3709, line: 133, type: !3765, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{null, !2637, !2642}
!3767 = !{!3768, !3769}
!3768 = !DILocalVariable(name: "h", arg: 1, scope: !3764, file: !3709, line: 133, type: !2637)
!3769 = !DILocalVariable(name: "c", arg: 2, scope: !3764, file: !3709, line: 133, type: !2642)
!3770 = !DILocation(line: 0, scope: !3764)
!3771 = !DILocation(line: 136, column: 21, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3764, file: !3709, line: 136, column: 6)
!3773 = !DILocation(line: 136, column: 7, scope: !3772)
!3774 = !DILocation(line: 136, column: 6, scope: !3764)
!3775 = !DILocation(line: 137, column: 3, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3772, file: !3709, line: 136, column: 41)
!3777 = !DILocation(line: 138, column: 22, scope: !3776)
!3778 = !DILocation(line: 138, column: 3, scope: !3776)
!3779 = !DILocation(line: 139, column: 2, scope: !3776)
!3780 = !DILocation(line: 142, column: 21, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3764, file: !3709, line: 142, column: 6)
!3782 = !{i32 -65535, i32 536903678}
!3783 = !DILocation(line: 142, column: 7, scope: !3781)
!3784 = !DILocation(line: 142, column: 6, scope: !3764)
!3785 = !DILocation(line: 143, column: 3, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3781, file: !3709, line: 142, column: 40)
!3787 = !DILocation(line: 144, column: 19, scope: !3786)
!3788 = !DILocation(line: 144, column: 3, scope: !3786)
!3789 = !DILocation(line: 145, column: 7, scope: !3786)
!3790 = !DILocation(line: 146, column: 2, scope: !3786)
!3791 = !DILocation(line: 148, column: 2, scope: !3764)
!3792 = !DILocation(line: 149, column: 1, scope: !3764)
!3793 = distinct !DISubprogram(name: "right_chunk", scope: !2624, file: !2624, line: 204, type: !3794, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3796)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!2642, !2637, !2642}
!3796 = !{!3797, !3798}
!3797 = !DILocalVariable(name: "h", arg: 1, scope: !3793, file: !2624, line: 204, type: !2637)
!3798 = !DILocalVariable(name: "c", arg: 2, scope: !3793, file: !2624, line: 204, type: !2642)
!3799 = !DILocation(line: 0, scope: !3793)
!3800 = !DILocation(line: 206, column: 13, scope: !3793)
!3801 = !DILocation(line: 206, column: 11, scope: !3793)
!3802 = !DILocation(line: 206, column: 2, scope: !3793)
!3803 = distinct !DISubprogram(name: "chunk_used", scope: !2624, file: !2624, line: 137, type: !3804, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3806)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!157, !2637, !2642}
!3806 = !{!3807, !3808}
!3807 = !DILocalVariable(name: "h", arg: 1, scope: !3803, file: !2624, line: 137, type: !2637)
!3808 = !DILocalVariable(name: "c", arg: 2, scope: !3803, file: !2624, line: 137, type: !2642)
!3809 = !DILocation(line: 0, scope: !3803)
!3810 = !DILocation(line: 139, column: 9, scope: !3803)
!3811 = !DILocation(line: 139, column: 42, scope: !3803)
!3812 = !DILocation(line: 139, column: 2, scope: !3803)
!3813 = distinct !DISubprogram(name: "free_list_remove", scope: !3709, file: !3709, line: 60, type: !3765, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3814)
!3814 = !{!3815, !3816, !3817}
!3815 = !DILocalVariable(name: "h", arg: 1, scope: !3813, file: !3709, line: 60, type: !2637)
!3816 = !DILocalVariable(name: "c", arg: 2, scope: !3813, file: !3709, line: 60, type: !2642)
!3817 = !DILocalVariable(name: "bidx", scope: !3818, file: !3709, line: 63, type: !103)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !3709, line: 62, column: 31)
!3819 = distinct !DILexicalBlock(scope: !3813, file: !3709, line: 62, column: 6)
!3820 = !DILocation(line: 0, scope: !3813)
!3821 = !DILocation(line: 63, column: 28, scope: !3818)
!3822 = !{i32 0, i32 32768}
!3823 = !DILocation(line: 63, column: 14, scope: !3818)
!3824 = !DILocation(line: 0, scope: !3818)
!3825 = !DILocation(line: 64, column: 3, scope: !3818)
!3826 = !DILocation(line: 66, column: 1, scope: !3813)
!3827 = distinct !DISubprogram(name: "merge_chunks", scope: !3709, file: !3709, line: 125, type: !3828, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{null, !2637, !2642, !2642}
!3830 = !{!3831, !3832, !3833, !3834}
!3831 = !DILocalVariable(name: "h", arg: 1, scope: !3827, file: !3709, line: 125, type: !2637)
!3832 = !DILocalVariable(name: "lc", arg: 2, scope: !3827, file: !3709, line: 125, type: !2642)
!3833 = !DILocalVariable(name: "rc", arg: 3, scope: !3827, file: !3709, line: 125, type: !2642)
!3834 = !DILocalVariable(name: "newsz", scope: !3827, file: !3709, line: 127, type: !3835)
!3835 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2624, line: 62, baseType: !121)
!3836 = !DILocation(line: 0, scope: !3827)
!3837 = !DILocation(line: 127, column: 20, scope: !3827)
!3838 = !DILocation(line: 127, column: 40, scope: !3827)
!3839 = !DILocation(line: 127, column: 38, scope: !3827)
!3840 = !DILocation(line: 129, column: 2, scope: !3827)
!3841 = !DILocation(line: 130, column: 25, scope: !3827)
!3842 = !DILocation(line: 130, column: 2, scope: !3827)
!3843 = !DILocation(line: 131, column: 1, scope: !3827)
!3844 = distinct !DISubprogram(name: "left_chunk", scope: !2624, file: !2624, line: 199, type: !3794, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3845)
!3845 = !{!3846, !3847}
!3846 = !DILocalVariable(name: "h", arg: 1, scope: !3844, file: !2624, line: 199, type: !2637)
!3847 = !DILocalVariable(name: "c", arg: 2, scope: !3844, file: !2624, line: 199, type: !2642)
!3848 = !DILocation(line: 0, scope: !3844)
!3849 = !DILocation(line: 201, column: 13, scope: !3844)
!3850 = !DILocation(line: 201, column: 11, scope: !3844)
!3851 = !DILocation(line: 201, column: 2, scope: !3844)
!3852 = distinct !DISubprogram(name: "free_list_add", scope: !3709, file: !3709, line: 98, type: !3765, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3853)
!3853 = !{!3854, !3855, !3856}
!3854 = !DILocalVariable(name: "h", arg: 1, scope: !3852, file: !3709, line: 98, type: !2637)
!3855 = !DILocalVariable(name: "c", arg: 2, scope: !3852, file: !3709, line: 98, type: !2642)
!3856 = !DILocalVariable(name: "bidx", scope: !3857, file: !3709, line: 101, type: !103)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !3709, line: 100, column: 31)
!3858 = distinct !DILexicalBlock(scope: !3852, file: !3709, line: 100, column: 6)
!3859 = !DILocation(line: 0, scope: !3852)
!3860 = !DILocation(line: 101, column: 28, scope: !3857)
!3861 = !DILocation(line: 101, column: 14, scope: !3857)
!3862 = !DILocation(line: 0, scope: !3857)
!3863 = !DILocation(line: 102, column: 3, scope: !3857)
!3864 = !DILocation(line: 104, column: 1, scope: !3852)
!3865 = distinct !DISubprogram(name: "chunk_size", scope: !2624, file: !2624, line: 142, type: !3866, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!3835, !2637, !2642}
!3868 = !{!3869, !3870}
!3869 = !DILocalVariable(name: "h", arg: 1, scope: !3865, file: !2624, line: 142, type: !2637)
!3870 = !DILocalVariable(name: "c", arg: 2, scope: !3865, file: !2624, line: 142, type: !2642)
!3871 = !DILocation(line: 0, scope: !3865)
!3872 = !DILocation(line: 144, column: 9, scope: !3865)
!3873 = !DILocation(line: 144, column: 42, scope: !3865)
!3874 = !DILocation(line: 144, column: 2, scope: !3865)
!3875 = distinct !DISubprogram(name: "bucket_idx", scope: !2624, file: !2624, line: 250, type: !3876, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3878)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!103, !2637, !3835}
!3878 = !{!3879, !3880, !3881}
!3879 = !DILocalVariable(name: "h", arg: 1, scope: !3875, file: !2624, line: 250, type: !2637)
!3880 = !DILocalVariable(name: "sz", arg: 2, scope: !3875, file: !2624, line: 250, type: !3835)
!3881 = !DILocalVariable(name: "usable_sz", scope: !3875, file: !2624, line: 252, type: !32)
!3882 = !DILocation(line: 0, scope: !3875)
!3883 = !DILocation(line: 252, column: 32, scope: !3875)
!3884 = !DILocation(line: 252, column: 30, scope: !3875)
!3885 = !DILocation(line: 252, column: 50, scope: !3875)
!3886 = !DILocation(line: 253, column: 14, scope: !3875)
!3887 = !{i32 0, i32 33}
!3888 = !DILocation(line: 253, column: 12, scope: !3875)
!3889 = !DILocation(line: 253, column: 2, scope: !3875)
!3890 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3709, file: !3709, line: 68, type: !3891, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !2637, !2642, !103}
!3893 = !{!3894, !3895, !3896, !3897, !3899, !3902}
!3894 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !3709, line: 68, type: !2637)
!3895 = !DILocalVariable(name: "c", arg: 2, scope: !3890, file: !3709, line: 68, type: !2642)
!3896 = !DILocalVariable(name: "bidx", arg: 3, scope: !3890, file: !3709, line: 68, type: !103)
!3897 = !DILocalVariable(name: "b", scope: !3890, file: !3709, line: 70, type: !3898)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!3899 = !DILocalVariable(name: "second", scope: !3900, file: !3709, line: 84, type: !2642)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !3709, line: 80, column: 9)
!3901 = distinct !DILexicalBlock(scope: !3890, file: !3709, line: 72, column: 6)
!3902 = !DILocalVariable(name: "first", scope: !3900, file: !3709, line: 85, type: !2642)
!3903 = !DILocation(line: 0, scope: !3890)
!3904 = !DILocation(line: 72, column: 9, scope: !3901)
!3905 = !DILocation(line: 72, column: 14, scope: !3901)
!3906 = !DILocation(line: 72, column: 6, scope: !3890)
!3907 = !DILocation(line: 76, column: 23, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3901, file: !3709, line: 72, column: 21)
!3909 = !DILocation(line: 76, column: 6, scope: !3908)
!3910 = !DILocation(line: 76, column: 20, scope: !3908)
!3911 = !DILocation(line: 77, column: 11, scope: !3908)
!3912 = !DILocation(line: 78, column: 3, scope: !3908)
!3913 = !DILocation(line: 79, column: 3, scope: !3908)
!3914 = !DILocation(line: 80, column: 2, scope: !3908)
!3915 = !DILocation(line: 0, scope: !3900)
!3916 = !DILocation(line: 85, column: 21, scope: !3900)
!3917 = !{i32 0, i32 65536}
!3918 = !DILocation(line: 87, column: 3, scope: !3900)
!3919 = !DILocation(line: 88, column: 3, scope: !3900)
!3920 = !DILocation(line: 89, column: 3, scope: !3900)
!3921 = !DILocation(line: 90, column: 3, scope: !3900)
!3922 = !DILocation(line: 96, column: 1, scope: !3890)
!3923 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2624, file: !2624, line: 187, type: !3828, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3924)
!3924 = !{!3925, !3926, !3927}
!3925 = !DILocalVariable(name: "h", arg: 1, scope: !3923, file: !2624, line: 187, type: !2637)
!3926 = !DILocalVariable(name: "c", arg: 2, scope: !3923, file: !2624, line: 187, type: !2642)
!3927 = !DILocalVariable(name: "prev", arg: 3, scope: !3923, file: !2624, line: 188, type: !2642)
!3928 = !DILocation(line: 0, scope: !3923)
!3929 = !DILocation(line: 190, column: 2, scope: !3923)
!3930 = !DILocation(line: 191, column: 1, scope: !3923)
!3931 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2624, file: !2624, line: 193, type: !3828, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3932)
!3932 = !{!3933, !3934, !3935}
!3933 = !DILocalVariable(name: "h", arg: 1, scope: !3931, file: !2624, line: 193, type: !2637)
!3934 = !DILocalVariable(name: "c", arg: 2, scope: !3931, file: !2624, line: 193, type: !2642)
!3935 = !DILocalVariable(name: "next", arg: 3, scope: !3931, file: !2624, line: 194, type: !2642)
!3936 = !DILocation(line: 0, scope: !3931)
!3937 = !DILocation(line: 196, column: 2, scope: !3931)
!3938 = !DILocation(line: 197, column: 1, scope: !3931)
!3939 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2624, file: !2624, line: 177, type: !3794, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3940)
!3940 = !{!3941, !3942}
!3941 = !DILocalVariable(name: "h", arg: 1, scope: !3939, file: !2624, line: 177, type: !2637)
!3942 = !DILocalVariable(name: "c", arg: 2, scope: !3939, file: !2624, line: 177, type: !2642)
!3943 = !DILocation(line: 0, scope: !3939)
!3944 = !DILocation(line: 179, column: 9, scope: !3939)
!3945 = !DILocation(line: 179, column: 2, scope: !3939)
!3946 = distinct !DISubprogram(name: "chunk_field", scope: !2624, file: !2624, line: 107, type: !3947, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3949)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!2642, !2637, !2642, !2623}
!3949 = !{!3950, !3951, !3952, !3953, !3954}
!3950 = !DILocalVariable(name: "h", arg: 1, scope: !3946, file: !2624, line: 107, type: !2637)
!3951 = !DILocalVariable(name: "c", arg: 2, scope: !3946, file: !2624, line: 107, type: !2642)
!3952 = !DILocalVariable(name: "f", arg: 3, scope: !3946, file: !2624, line: 108, type: !2623)
!3953 = !DILocalVariable(name: "buf", scope: !3946, file: !2624, line: 110, type: !2631)
!3954 = !DILocalVariable(name: "cmem", scope: !3946, file: !2624, line: 111, type: !102)
!3955 = !DILocation(line: 0, scope: !3946)
!3956 = !DILocation(line: 110, column: 22, scope: !3946)
!3957 = !DILocation(line: 111, column: 15, scope: !3946)
!3958 = !DILocation(line: 116, column: 11, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !2624, line: 115, column: 9)
!3960 = distinct !DILexicalBlock(scope: !3946, file: !2624, line: 113, column: 6)
!3961 = !DILocation(line: 116, column: 10, scope: !3959)
!3962 = !DILocation(line: 118, column: 1, scope: !3946)
!3963 = distinct !DISubprogram(name: "chunk_buf", scope: !2624, file: !2624, line: 101, type: !3964, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3966)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{!2631, !2637}
!3966 = !{!3967}
!3967 = !DILocalVariable(name: "h", arg: 1, scope: !3963, file: !2624, line: 101, type: !2637)
!3968 = !DILocation(line: 0, scope: !3963)
!3969 = !DILocation(line: 104, column: 9, scope: !3963)
!3970 = !DILocation(line: 104, column: 2, scope: !3963)
!3971 = distinct !DISubprogram(name: "chunk_set", scope: !2624, file: !2624, line: 120, type: !3972, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3974)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !2637, !2642, !2623, !2642}
!3974 = !{!3975, !3976, !3977, !3978, !3979, !3980}
!3975 = !DILocalVariable(name: "h", arg: 1, scope: !3971, file: !2624, line: 120, type: !2637)
!3976 = !DILocalVariable(name: "c", arg: 2, scope: !3971, file: !2624, line: 120, type: !2642)
!3977 = !DILocalVariable(name: "f", arg: 3, scope: !3971, file: !2624, line: 121, type: !2623)
!3978 = !DILocalVariable(name: "val", arg: 4, scope: !3971, file: !2624, line: 121, type: !2642)
!3979 = !DILocalVariable(name: "buf", scope: !3971, file: !2624, line: 125, type: !2631)
!3980 = !DILocalVariable(name: "cmem", scope: !3971, file: !2624, line: 126, type: !102)
!3981 = !DILocation(line: 0, scope: !3971)
!3982 = !DILocation(line: 125, column: 22, scope: !3971)
!3983 = !DILocation(line: 126, column: 15, scope: !3971)
!3984 = !DILocation(line: 133, column: 27, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !2624, line: 131, column: 9)
!3986 = distinct !DILexicalBlock(scope: !3971, file: !2624, line: 128, column: 6)
!3987 = !DILocation(line: 133, column: 4, scope: !3985)
!3988 = !DILocation(line: 133, column: 3, scope: !3985)
!3989 = !DILocation(line: 133, column: 25, scope: !3985)
!3990 = !DILocation(line: 135, column: 1, scope: !3971)
!3991 = distinct !DISubprogram(name: "min_chunk_size", scope: !2624, file: !2624, line: 240, type: !3992, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !3994)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!3835, !2637}
!3994 = !{!3995}
!3995 = !DILocalVariable(name: "h", arg: 1, scope: !3991, file: !2624, line: 240, type: !2637)
!3996 = !DILocation(line: 0, scope: !3991)
!3997 = !DILocation(line: 242, column: 9, scope: !3991)
!3998 = !DILocation(line: 242, column: 2, scope: !3991)
!3999 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2624, file: !2624, line: 235, type: !4000, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4002)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!3835, !2637, !204}
!4002 = !{!4003, !4004}
!4003 = !DILocalVariable(name: "h", arg: 1, scope: !3999, file: !2624, line: 235, type: !2637)
!4004 = !DILocalVariable(name: "bytes", arg: 2, scope: !3999, file: !2624, line: 235, type: !204)
!4005 = !DILocation(line: 0, scope: !3999)
!4006 = !DILocation(line: 237, column: 39, scope: !3999)
!4007 = !DILocation(line: 237, column: 9, scope: !3999)
!4008 = !DILocation(line: 237, column: 2, scope: !3999)
!4009 = distinct !DISubprogram(name: "chunksz", scope: !2624, file: !2624, line: 230, type: !4010, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4012)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{!3835, !204}
!4012 = !{!4013}
!4013 = !DILocalVariable(name: "bytes", arg: 1, scope: !4009, file: !2624, line: 230, type: !204)
!4014 = !DILocation(line: 0, scope: !4009)
!4015 = !DILocation(line: 232, column: 29, scope: !4009)
!4016 = !DILocation(line: 232, column: 35, scope: !4009)
!4017 = !DILocation(line: 232, column: 2, scope: !4009)
!4018 = distinct !DISubprogram(name: "set_chunk_size", scope: !2624, file: !2624, line: 172, type: !4019, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4021)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !2637, !2642, !3835}
!4021 = !{!4022, !4023, !4024}
!4022 = !DILocalVariable(name: "h", arg: 1, scope: !4018, file: !2624, line: 172, type: !2637)
!4023 = !DILocalVariable(name: "c", arg: 2, scope: !4018, file: !2624, line: 172, type: !2642)
!4024 = !DILocalVariable(name: "size", arg: 3, scope: !4018, file: !2624, line: 172, type: !3835)
!4025 = !DILocation(line: 0, scope: !4018)
!4026 = !DILocation(line: 174, column: 38, scope: !4018)
!4027 = !DILocation(line: 174, column: 2, scope: !4018)
!4028 = !DILocation(line: 175, column: 1, scope: !4018)
!4029 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2624, file: !2624, line: 209, type: !4019, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4030)
!4030 = !{!4031, !4032, !4033}
!4031 = !DILocalVariable(name: "h", arg: 1, scope: !4029, file: !2624, line: 209, type: !2637)
!4032 = !DILocalVariable(name: "c", arg: 2, scope: !4029, file: !2624, line: 209, type: !2642)
!4033 = !DILocalVariable(name: "size", arg: 3, scope: !4029, file: !2624, line: 210, type: !3835)
!4034 = !DILocation(line: 0, scope: !4029)
!4035 = !DILocation(line: 212, column: 2, scope: !4029)
!4036 = !DILocation(line: 213, column: 1, scope: !4029)
!4037 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3709, file: !3709, line: 34, type: !3891, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043, !4046}
!4039 = !DILocalVariable(name: "h", arg: 1, scope: !4037, file: !3709, line: 34, type: !2637)
!4040 = !DILocalVariable(name: "c", arg: 2, scope: !4037, file: !3709, line: 34, type: !2642)
!4041 = !DILocalVariable(name: "bidx", arg: 3, scope: !4037, file: !3709, line: 34, type: !103)
!4042 = !DILocalVariable(name: "b", scope: !4037, file: !3709, line: 36, type: !3898)
!4043 = !DILocalVariable(name: "first", scope: !4044, file: !3709, line: 47, type: !2642)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3709, line: 46, column: 9)
!4045 = distinct !DILexicalBlock(scope: !4037, file: !3709, line: 42, column: 6)
!4046 = !DILocalVariable(name: "second", scope: !4044, file: !3709, line: 48, type: !2642)
!4047 = !DILocation(line: 0, scope: !4037)
!4048 = !DILocation(line: 36, column: 29, scope: !4037)
!4049 = !DILocation(line: 42, column: 6, scope: !4045)
!4050 = !DILocation(line: 42, column: 28, scope: !4045)
!4051 = !DILocation(line: 42, column: 6, scope: !4037)
!4052 = !DILocation(line: 44, column: 24, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4045, file: !3709, line: 42, column: 34)
!4054 = !DILocation(line: 44, column: 23, scope: !4053)
!4055 = !DILocation(line: 44, column: 6, scope: !4053)
!4056 = !DILocation(line: 44, column: 20, scope: !4053)
!4057 = !DILocation(line: 45, column: 6, scope: !4053)
!4058 = !DILocation(line: 45, column: 11, scope: !4053)
!4059 = !DILocation(line: 46, column: 2, scope: !4053)
!4060 = !DILocation(line: 47, column: 21, scope: !4044)
!4061 = !DILocation(line: 0, scope: !4044)
!4062 = !DILocation(line: 50, column: 6, scope: !4044)
!4063 = !DILocation(line: 50, column: 11, scope: !4044)
!4064 = !DILocation(line: 51, column: 3, scope: !4044)
!4065 = !DILocation(line: 52, column: 3, scope: !4044)
!4066 = !DILocation(line: 58, column: 1, scope: !4037)
!4067 = distinct !DISubprogram(name: "next_free_chunk", scope: !2624, file: !2624, line: 182, type: !3794, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4068)
!4068 = !{!4069, !4070}
!4069 = !DILocalVariable(name: "h", arg: 1, scope: !4067, file: !2624, line: 182, type: !2637)
!4070 = !DILocalVariable(name: "c", arg: 2, scope: !4067, file: !2624, line: 182, type: !2642)
!4071 = !DILocation(line: 0, scope: !4067)
!4072 = !DILocation(line: 184, column: 9, scope: !4067)
!4073 = !DILocation(line: 184, column: 2, scope: !4067)
!4074 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3709, file: !3709, line: 200, type: !4075, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4077)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!204, !3712, !102}
!4077 = !{!4078, !4079, !4080, !4081, !4082, !4083, !4084}
!4078 = !DILocalVariable(name: "heap", arg: 1, scope: !4074, file: !3709, line: 200, type: !3712)
!4079 = !DILocalVariable(name: "mem", arg: 2, scope: !4074, file: !3709, line: 200, type: !102)
!4080 = !DILocalVariable(name: "h", scope: !4074, file: !3709, line: 202, type: !2637)
!4081 = !DILocalVariable(name: "c", scope: !4074, file: !3709, line: 203, type: !2642)
!4082 = !DILocalVariable(name: "addr", scope: !4074, file: !3709, line: 204, type: !204)
!4083 = !DILocalVariable(name: "chunk_base", scope: !4074, file: !3709, line: 205, type: !204)
!4084 = !DILocalVariable(name: "chunk_sz", scope: !4074, file: !3709, line: 206, type: !204)
!4085 = !DILocation(line: 0, scope: !4074)
!4086 = !DILocation(line: 202, column: 27, scope: !4074)
!4087 = !DILocation(line: 203, column: 16, scope: !4074)
!4088 = !DILocation(line: 204, column: 16, scope: !4074)
!4089 = !DILocation(line: 205, column: 31, scope: !4074)
!4090 = !DILocation(line: 205, column: 22, scope: !4074)
!4091 = !DILocation(line: 206, column: 20, scope: !4074)
!4092 = !DILocation(line: 206, column: 37, scope: !4074)
!4093 = !DILocation(line: 208, column: 26, scope: !4074)
!4094 = !DILocation(line: 208, column: 18, scope: !4074)
!4095 = !DILocation(line: 208, column: 2, scope: !4074)
!4096 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3709, file: !3709, line: 263, type: !4097, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4099)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!102, !3712, !204}
!4099 = !{!4100, !4101, !4102, !4103, !4104, !4105}
!4100 = !DILocalVariable(name: "heap", arg: 1, scope: !4096, file: !3709, line: 263, type: !3712)
!4101 = !DILocalVariable(name: "bytes", arg: 2, scope: !4096, file: !3709, line: 263, type: !204)
!4102 = !DILocalVariable(name: "h", scope: !4096, file: !3709, line: 265, type: !2637)
!4103 = !DILocalVariable(name: "mem", scope: !4096, file: !3709, line: 266, type: !102)
!4104 = !DILocalVariable(name: "chunk_sz", scope: !4096, file: !3709, line: 272, type: !3835)
!4105 = !DILocalVariable(name: "c", scope: !4096, file: !3709, line: 273, type: !2642)
!4106 = !DILocation(line: 0, scope: !4096)
!4107 = !DILocation(line: 265, column: 27, scope: !4096)
!4108 = !DILocation(line: 268, column: 12, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4096, file: !3709, line: 268, column: 6)
!4110 = !DILocation(line: 268, column: 18, scope: !4109)
!4111 = !DILocation(line: 268, column: 21, scope: !4109)
!4112 = !DILocation(line: 268, column: 6, scope: !4096)
!4113 = !DILocation(line: 272, column: 23, scope: !4096)
!4114 = !DILocation(line: 273, column: 16, scope: !4096)
!4115 = !DILocation(line: 274, column: 8, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4096, file: !3709, line: 274, column: 6)
!4117 = !DILocation(line: 274, column: 6, scope: !4096)
!4118 = !DILocation(line: 279, column: 6, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4096, file: !3709, line: 279, column: 6)
!4120 = !DILocation(line: 279, column: 23, scope: !4119)
!4121 = !DILocation(line: 279, column: 6, scope: !4096)
!4122 = !DILocation(line: 280, column: 24, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4119, file: !3709, line: 279, column: 35)
!4124 = !DILocation(line: 280, column: 3, scope: !4123)
!4125 = !DILocation(line: 281, column: 3, scope: !4123)
!4126 = !DILocation(line: 282, column: 2, scope: !4123)
!4127 = !DILocation(line: 284, column: 2, scope: !4096)
!4128 = !DILocation(line: 286, column: 8, scope: !4096)
!4129 = !DILocation(line: 298, column: 2, scope: !4096)
!4130 = !DILocation(line: 299, column: 1, scope: !4096)
!4131 = distinct !DISubprogram(name: "size_too_big", scope: !2624, file: !2624, line: 256, type: !4132, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4134)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!157, !2637, !204}
!4134 = !{!4135, !4136}
!4135 = !DILocalVariable(name: "h", arg: 1, scope: !4131, file: !2624, line: 256, type: !2637)
!4136 = !DILocalVariable(name: "bytes", arg: 2, scope: !4131, file: !2624, line: 256, type: !204)
!4137 = !DILocation(line: 0, scope: !4131)
!4138 = !DILocation(line: 262, column: 16, scope: !4131)
!4139 = !DILocation(line: 262, column: 36, scope: !4131)
!4140 = !DILocation(line: 262, column: 30, scope: !4131)
!4141 = !DILocation(line: 262, column: 2, scope: !4131)
!4142 = distinct !DISubprogram(name: "alloc_chunk", scope: !3709, file: !3709, line: 211, type: !4143, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4145)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!2642, !2637, !3835}
!4145 = !{!4146, !4147, !4148, !4149, !4150, !4153, !4154, !4156, !4157, !4160}
!4146 = !DILocalVariable(name: "h", arg: 1, scope: !4142, file: !3709, line: 211, type: !2637)
!4147 = !DILocalVariable(name: "sz", arg: 2, scope: !4142, file: !3709, line: 211, type: !3835)
!4148 = !DILocalVariable(name: "bi", scope: !4142, file: !3709, line: 213, type: !103)
!4149 = !DILocalVariable(name: "b", scope: !4142, file: !3709, line: 214, type: !3898)
!4150 = !DILocalVariable(name: "first", scope: !4151, file: !3709, line: 233, type: !2642)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !3709, line: 232, column: 15)
!4152 = distinct !DILexicalBlock(scope: !4142, file: !3709, line: 232, column: 6)
!4153 = !DILocalVariable(name: "i", scope: !4151, file: !3709, line: 234, type: !103)
!4154 = !DILocalVariable(name: "c", scope: !4155, file: !3709, line: 236, type: !2642)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !3709, line: 235, column: 6)
!4156 = !DILocalVariable(name: "bmask", scope: !4142, file: !3709, line: 249, type: !121)
!4157 = !DILocalVariable(name: "minbucket", scope: !4158, file: !3709, line: 252, type: !103)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !3709, line: 251, column: 19)
!4159 = distinct !DILexicalBlock(scope: !4142, file: !3709, line: 251, column: 6)
!4160 = !DILocalVariable(name: "c", scope: !4158, file: !3709, line: 253, type: !2642)
!4161 = !DILocation(line: 0, scope: !4142)
!4162 = !DILocation(line: 213, column: 11, scope: !4142)
!4163 = !DILocation(line: 232, column: 9, scope: !4152)
!4164 = !DILocation(line: 232, column: 6, scope: !4152)
!4165 = !DILocation(line: 232, column: 6, scope: !4142)
!4166 = !DILocation(line: 236, column: 21, scope: !4155)
!4167 = !DILocation(line: 0, scope: !4151)
!4168 = !DILocation(line: 0, scope: !4155)
!4169 = !DILocation(line: 237, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4155, file: !3709, line: 237, column: 8)
!4171 = !DILocation(line: 237, column: 25, scope: !4170)
!4172 = !DILocation(line: 237, column: 8, scope: !4155)
!4173 = !DILocation(line: 238, column: 5, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4170, file: !3709, line: 237, column: 32)
!4175 = !DILocation(line: 241, column: 14, scope: !4155)
!4176 = !DILocation(line: 241, column: 12, scope: !4155)
!4177 = !DILocation(line: 243, column: 12, scope: !4151)
!4178 = !DILocation(line: 243, column: 16, scope: !4151)
!4179 = distinct !{!4179, !4180, !4181}
!4180 = !DILocation(line: 235, column: 3, scope: !4151)
!4181 = !DILocation(line: 243, column: 35, scope: !4151)
!4182 = !DILocation(line: 249, column: 22, scope: !4142)
!4183 = !DILocation(line: 249, column: 39, scope: !4142)
!4184 = !DILocation(line: 249, column: 36, scope: !4142)
!4185 = !DILocation(line: 251, column: 12, scope: !4159)
!4186 = !DILocation(line: 251, column: 6, scope: !4142)
!4187 = !DILocation(line: 252, column: 19, scope: !4158)
!4188 = !DILocation(line: 0, scope: !4158)
!4189 = !DILocation(line: 253, column: 39, scope: !4158)
!4190 = !DILocation(line: 255, column: 3, scope: !4158)
!4191 = !DILocation(line: 261, column: 1, scope: !4142)
!4192 = distinct !DISubprogram(name: "split_chunks", scope: !3709, file: !3709, line: 109, type: !3828, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4193)
!4193 = !{!4194, !4195, !4196, !4197, !4198, !4199}
!4194 = !DILocalVariable(name: "h", arg: 1, scope: !4192, file: !3709, line: 109, type: !2637)
!4195 = !DILocalVariable(name: "lc", arg: 2, scope: !4192, file: !3709, line: 109, type: !2642)
!4196 = !DILocalVariable(name: "rc", arg: 3, scope: !4192, file: !3709, line: 109, type: !2642)
!4197 = !DILocalVariable(name: "sz0", scope: !4192, file: !3709, line: 114, type: !3835)
!4198 = !DILocalVariable(name: "lsz", scope: !4192, file: !3709, line: 115, type: !3835)
!4199 = !DILocalVariable(name: "rsz", scope: !4192, file: !3709, line: 116, type: !3835)
!4200 = !DILocation(line: 0, scope: !4192)
!4201 = !DILocation(line: 114, column: 18, scope: !4192)
!4202 = !DILocation(line: 115, column: 21, scope: !4192)
!4203 = !DILocation(line: 116, column: 22, scope: !4192)
!4204 = !DILocation(line: 118, column: 2, scope: !4192)
!4205 = !DILocation(line: 119, column: 2, scope: !4192)
!4206 = !DILocation(line: 120, column: 2, scope: !4192)
!4207 = !DILocation(line: 121, column: 25, scope: !4192)
!4208 = !DILocation(line: 121, column: 2, scope: !4192)
!4209 = !DILocation(line: 122, column: 1, scope: !4192)
!4210 = distinct !DISubprogram(name: "chunk_mem", scope: !3709, file: !3709, line: 24, type: !4211, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4213)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!102, !2637, !2642}
!4213 = !{!4214, !4215, !4216, !4217}
!4214 = !DILocalVariable(name: "h", arg: 1, scope: !4210, file: !3709, line: 24, type: !2637)
!4215 = !DILocalVariable(name: "c", arg: 2, scope: !4210, file: !3709, line: 24, type: !2642)
!4216 = !DILocalVariable(name: "buf", scope: !4210, file: !3709, line: 26, type: !2631)
!4217 = !DILocalVariable(name: "ret", scope: !4210, file: !3709, line: 27, type: !267)
!4218 = !DILocation(line: 0, scope: !4210)
!4219 = !DILocation(line: 26, column: 22, scope: !4210)
!4220 = !DILocation(line: 27, column: 38, scope: !4210)
!4221 = !DILocation(line: 31, column: 2, scope: !4210)
!4222 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3709, file: !3709, line: 301, type: !4223, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4225)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!102, !3712, !204, !204}
!4225 = !{!4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237}
!4226 = !DILocalVariable(name: "heap", arg: 1, scope: !4222, file: !3709, line: 301, type: !3712)
!4227 = !DILocalVariable(name: "align", arg: 2, scope: !4222, file: !3709, line: 301, type: !204)
!4228 = !DILocalVariable(name: "bytes", arg: 3, scope: !4222, file: !3709, line: 301, type: !204)
!4229 = !DILocalVariable(name: "h", scope: !4222, file: !3709, line: 303, type: !2637)
!4230 = !DILocalVariable(name: "gap", scope: !4222, file: !3709, line: 304, type: !204)
!4231 = !DILocalVariable(name: "rew", scope: !4222, file: !3709, line: 304, type: !204)
!4232 = !DILocalVariable(name: "padded_sz", scope: !4222, file: !3709, line: 335, type: !3835)
!4233 = !DILocalVariable(name: "c0", scope: !4222, file: !3709, line: 336, type: !2642)
!4234 = !DILocalVariable(name: "mem", scope: !4222, file: !3709, line: 341, type: !267)
!4235 = !DILocalVariable(name: "end", scope: !4222, file: !3709, line: 345, type: !2631)
!4236 = !DILocalVariable(name: "c", scope: !4222, file: !3709, line: 348, type: !2642)
!4237 = !DILocalVariable(name: "c_end", scope: !4222, file: !3709, line: 349, type: !2642)
!4238 = !DILocation(line: 0, scope: !4222)
!4239 = !DILocation(line: 303, column: 27, scope: !4222)
!4240 = !DILocation(line: 313, column: 16, scope: !4222)
!4241 = !DILocation(line: 313, column: 14, scope: !4222)
!4242 = !DILocation(line: 314, column: 12, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4222, file: !3709, line: 314, column: 6)
!4244 = !DILocation(line: 314, column: 6, scope: !4222)
!4245 = !DILocation(line: 315, column: 9, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4243, file: !3709, line: 314, column: 20)
!4247 = !DILocation(line: 316, column: 9, scope: !4246)
!4248 = !DILocation(line: 318, column: 13, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !3709, line: 318, column: 7)
!4250 = distinct !DILexicalBlock(scope: !4243, file: !3709, line: 317, column: 9)
!4251 = !DILocation(line: 318, column: 7, scope: !4250)
!4252 = !DILocation(line: 319, column: 11, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4249, file: !3709, line: 318, column: 39)
!4254 = !DILocation(line: 319, column: 4, scope: !4253)
!4255 = !DILocation(line: 0, scope: !4243)
!4256 = !DILocation(line: 326, column: 12, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4222, file: !3709, line: 326, column: 6)
!4258 = !DILocation(line: 326, column: 17, scope: !4257)
!4259 = !DILocation(line: 326, column: 20, scope: !4257)
!4260 = !DILocation(line: 326, column: 6, scope: !4222)
!4261 = !DILocation(line: 335, column: 50, scope: !4222)
!4262 = !DILocation(line: 335, column: 58, scope: !4222)
!4263 = !DILocation(line: 335, column: 24, scope: !4222)
!4264 = !DILocation(line: 336, column: 17, scope: !4222)
!4265 = !DILocation(line: 338, column: 9, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4222, file: !3709, line: 338, column: 6)
!4267 = !DILocation(line: 338, column: 6, scope: !4222)
!4268 = !DILocation(line: 341, column: 17, scope: !4222)
!4269 = !DILocation(line: 344, column: 20, scope: !4222)
!4270 = !DILocation(line: 344, column: 8, scope: !4222)
!4271 = !DILocation(line: 344, column: 47, scope: !4222)
!4272 = !DILocation(line: 345, column: 39, scope: !4222)
!4273 = !DILocation(line: 348, column: 16, scope: !4222)
!4274 = !DILocation(line: 349, column: 26, scope: !4222)
!4275 = !DILocation(line: 349, column: 24, scope: !4222)
!4276 = !DILocation(line: 353, column: 8, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4222, file: !3709, line: 353, column: 6)
!4278 = !DILocation(line: 353, column: 6, scope: !4222)
!4279 = !DILocation(line: 354, column: 3, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !3709, line: 353, column: 14)
!4281 = !DILocation(line: 355, column: 3, scope: !4280)
!4282 = !DILocation(line: 356, column: 2, scope: !4280)
!4283 = !DILocation(line: 359, column: 6, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4222, file: !3709, line: 359, column: 6)
!4285 = !DILocation(line: 359, column: 24, scope: !4284)
!4286 = !DILocation(line: 359, column: 6, scope: !4222)
!4287 = !DILocation(line: 360, column: 3, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4284, file: !3709, line: 359, column: 33)
!4289 = !DILocation(line: 361, column: 3, scope: !4288)
!4290 = !DILocation(line: 362, column: 2, scope: !4288)
!4291 = !DILocation(line: 364, column: 2, scope: !4222)
!4292 = !DILocation(line: 377, column: 1, scope: !4222)
!4293 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3709, file: !3709, line: 379, type: !4294, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!102, !3712, !102, !204, !204}
!4296 = !{!4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4312, !4313}
!4297 = !DILocalVariable(name: "heap", arg: 1, scope: !4293, file: !3709, line: 379, type: !3712)
!4298 = !DILocalVariable(name: "ptr", arg: 2, scope: !4293, file: !3709, line: 379, type: !102)
!4299 = !DILocalVariable(name: "align", arg: 3, scope: !4293, file: !3709, line: 380, type: !204)
!4300 = !DILocalVariable(name: "bytes", arg: 4, scope: !4293, file: !3709, line: 380, type: !204)
!4301 = !DILocalVariable(name: "h", scope: !4293, file: !3709, line: 382, type: !2637)
!4302 = !DILocalVariable(name: "c", scope: !4293, file: !3709, line: 399, type: !2642)
!4303 = !DILocalVariable(name: "rc", scope: !4293, file: !3709, line: 400, type: !2642)
!4304 = !DILocalVariable(name: "align_gap", scope: !4293, file: !3709, line: 401, type: !204)
!4305 = !DILocalVariable(name: "chunks_need", scope: !4293, file: !3709, line: 402, type: !3835)
!4306 = !DILocalVariable(name: "split_size", scope: !4307, file: !3709, line: 435, type: !3835)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !3709, line: 433, column: 61)
!4308 = distinct !DILexicalBlock(scope: !4309, file: !3709, line: 432, column: 13)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !3709, line: 409, column: 13)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !3709, line: 406, column: 13)
!4311 = distinct !DILexicalBlock(scope: !4293, file: !3709, line: 404, column: 6)
!4312 = !DILocalVariable(name: "ptr2", scope: !4293, file: !3709, line: 474, type: !102)
!4313 = !DILocalVariable(name: "prev_size", scope: !4314, file: !3709, line: 477, type: !204)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3709, line: 476, column: 20)
!4315 = distinct !DILexicalBlock(scope: !4293, file: !3709, line: 476, column: 6)
!4316 = !DILocation(line: 0, scope: !4293)
!4317 = !DILocation(line: 382, column: 27, scope: !4293)
!4318 = !DILocation(line: 385, column: 10, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4293, file: !3709, line: 385, column: 6)
!4320 = !DILocation(line: 385, column: 6, scope: !4293)
!4321 = !DILocation(line: 386, column: 10, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4319, file: !3709, line: 385, column: 19)
!4323 = !DILocation(line: 386, column: 3, scope: !4322)
!4324 = !DILocation(line: 388, column: 12, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4293, file: !3709, line: 388, column: 6)
!4326 = !DILocation(line: 388, column: 6, scope: !4293)
!4327 = !DILocation(line: 389, column: 3, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4325, file: !3709, line: 388, column: 18)
!4329 = !DILocation(line: 390, column: 3, scope: !4328)
!4330 = !DILocation(line: 395, column: 6, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4293, file: !3709, line: 395, column: 6)
!4332 = !DILocation(line: 395, column: 6, scope: !4293)
!4333 = !DILocation(line: 399, column: 16, scope: !4293)
!4334 = !DILocation(line: 400, column: 17, scope: !4293)
!4335 = !DILocation(line: 401, column: 49, scope: !4293)
!4336 = !DILocation(line: 401, column: 36, scope: !4293)
!4337 = !DILocation(line: 402, column: 52, scope: !4293)
!4338 = !DILocation(line: 402, column: 26, scope: !4293)
!4339 = !DILocation(line: 404, column: 6, scope: !4311)
!4340 = !DILocation(line: 404, column: 12, scope: !4311)
!4341 = !DILocation(line: 404, column: 40, scope: !4311)
!4342 = !DILocation(line: 404, column: 31, scope: !4311)
!4343 = !DILocation(line: 404, column: 6, scope: !4293)
!4344 = !DILocation(line: 406, column: 13, scope: !4310)
!4345 = !DILocation(line: 406, column: 30, scope: !4310)
!4346 = !DILocation(line: 406, column: 13, scope: !4311)
!4347 = !DILocation(line: 409, column: 30, scope: !4309)
!4348 = !DILocation(line: 409, column: 13, scope: !4310)
!4349 = !DILocation(line: 420, column: 24, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4309, file: !3709, line: 409, column: 45)
!4351 = !DILocation(line: 420, column: 3, scope: !4350)
!4352 = !DILocation(line: 421, column: 3, scope: !4350)
!4353 = !DILocation(line: 422, column: 3, scope: !4350)
!4354 = !DILocation(line: 431, column: 3, scope: !4350)
!4355 = !DILocation(line: 432, column: 14, scope: !4308)
!4356 = !DILocation(line: 432, column: 32, scope: !4308)
!4357 = !DILocation(line: 433, column: 26, scope: !4308)
!4358 = !DILocation(line: 433, column: 24, scope: !4308)
!4359 = !DILocation(line: 433, column: 44, scope: !4308)
!4360 = !DILocation(line: 432, column: 13, scope: !4309)
!4361 = !DILocation(line: 435, column: 38, scope: !4307)
!4362 = !DILocation(line: 0, scope: !4307)
!4363 = !DILocation(line: 445, column: 3, scope: !4307)
!4364 = !DILocation(line: 447, column: 20, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4307, file: !3709, line: 447, column: 7)
!4366 = !DILocation(line: 447, column: 18, scope: !4365)
!4367 = !DILocation(line: 447, column: 7, scope: !4307)
!4368 = !DILocation(line: 448, column: 27, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4365, file: !3709, line: 447, column: 39)
!4370 = !DILocation(line: 448, column: 4, scope: !4369)
!4371 = !DILocation(line: 449, column: 4, scope: !4369)
!4372 = !DILocation(line: 450, column: 3, scope: !4369)
!4373 = !DILocation(line: 452, column: 3, scope: !4307)
!4374 = !DILocation(line: 453, column: 3, scope: !4307)
!4375 = !DILocation(line: 474, column: 15, scope: !4293)
!4376 = !DILocation(line: 476, column: 11, scope: !4315)
!4377 = !DILocation(line: 476, column: 6, scope: !4293)
!4378 = !DILocation(line: 477, column: 42, scope: !4314)
!4379 = !DILocation(line: 477, column: 22, scope: !4314)
!4380 = !DILocation(line: 477, column: 60, scope: !4314)
!4381 = !DILocation(line: 0, scope: !4314)
!4382 = !DILocation(line: 479, column: 21, scope: !4314)
!4383 = !DILocation(line: 479, column: 3, scope: !4314)
!4384 = !DILocation(line: 480, column: 3, scope: !4314)
!4385 = !DILocation(line: 481, column: 2, scope: !4314)
!4386 = !DILocation(line: 483, column: 1, scope: !4293)
!4387 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2624, file: !2624, line: 245, type: !4388, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4390)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!204, !2637, !3835}
!4390 = !{!4391, !4392}
!4391 = !DILocalVariable(name: "h", arg: 1, scope: !4387, file: !2624, line: 245, type: !2637)
!4392 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4387, file: !2624, line: 245, type: !3835)
!4393 = !DILocation(line: 0, scope: !4387)
!4394 = !DILocation(line: 247, column: 20, scope: !4387)
!4395 = !DILocation(line: 247, column: 33, scope: !4387)
!4396 = !DILocation(line: 247, column: 2, scope: !4387)
!4397 = distinct !DISubprogram(name: "sys_heap_init", scope: !3709, file: !3709, line: 485, type: !4398, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !4400)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{null, !3712, !102, !204}
!4400 = !{!4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410}
!4401 = !DILocalVariable(name: "heap", arg: 1, scope: !4397, file: !3709, line: 485, type: !3712)
!4402 = !DILocalVariable(name: "mem", arg: 2, scope: !4397, file: !3709, line: 485, type: !102)
!4403 = !DILocalVariable(name: "bytes", arg: 3, scope: !4397, file: !3709, line: 485, type: !204)
!4404 = !DILocalVariable(name: "addr", scope: !4397, file: !3709, line: 502, type: !22)
!4405 = !DILocalVariable(name: "end", scope: !4397, file: !3709, line: 503, type: !22)
!4406 = !DILocalVariable(name: "heap_sz", scope: !4397, file: !3709, line: 504, type: !3835)
!4407 = !DILocalVariable(name: "h", scope: !4397, file: !3709, line: 509, type: !2637)
!4408 = !DILocalVariable(name: "nb_buckets", scope: !4397, file: !3709, line: 520, type: !103)
!4409 = !DILocalVariable(name: "chunk0_size", scope: !4397, file: !3709, line: 521, type: !3835)
!4410 = !DILocalVariable(name: "i", scope: !4411, file: !3709, line: 526, type: !103)
!4411 = distinct !DILexicalBlock(scope: !4397, file: !3709, line: 526, column: 2)
!4412 = !DILocation(line: 0, scope: !4397)
!4413 = !DILocation(line: 499, column: 8, scope: !4397)
!4414 = !DILocation(line: 502, column: 19, scope: !4397)
!4415 = !DILocation(line: 503, column: 18, scope: !4397)
!4416 = !DILocation(line: 504, column: 27, scope: !4397)
!4417 = !DILocation(line: 504, column: 35, scope: !4397)
!4418 = !DILocation(line: 509, column: 21, scope: !4397)
!4419 = !DILocation(line: 510, column: 8, scope: !4397)
!4420 = !DILocation(line: 510, column: 13, scope: !4397)
!4421 = !DILocation(line: 511, column: 5, scope: !4397)
!4422 = !DILocation(line: 511, column: 15, scope: !4397)
!4423 = !DILocation(line: 512, column: 5, scope: !4397)
!4424 = !DILocation(line: 512, column: 19, scope: !4397)
!4425 = !DILocation(line: 520, column: 19, scope: !4397)
!4426 = !DILocation(line: 522, column: 21, scope: !4397)
!4427 = !DILocation(line: 521, column: 56, scope: !4397)
!4428 = !DILocation(line: 521, column: 26, scope: !4397)
!4429 = !DILocation(line: 0, scope: !4411)
!4430 = !DILocation(line: 526, column: 20, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4411, file: !3709, line: 526, column: 2)
!4432 = !DILocation(line: 526, column: 2, scope: !4411)
!4433 = !DILocation(line: 531, column: 2, scope: !4397)
!4434 = !DILocation(line: 532, column: 2, scope: !4397)
!4435 = !DILocation(line: 533, column: 2, scope: !4397)
!4436 = !DILocation(line: 536, column: 41, scope: !4397)
!4437 = !DILocation(line: 536, column: 2, scope: !4397)
!4438 = !DILocation(line: 537, column: 2, scope: !4397)
!4439 = !DILocation(line: 540, column: 2, scope: !4397)
!4440 = !DILocation(line: 541, column: 2, scope: !4397)
!4441 = !DILocation(line: 542, column: 2, scope: !4397)
!4442 = !DILocation(line: 544, column: 2, scope: !4397)
!4443 = !DILocation(line: 545, column: 1, scope: !4397)
!4444 = !DILocation(line: 527, column: 17, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4431, file: !3709, line: 526, column: 39)
!4446 = !DILocation(line: 527, column: 22, scope: !4445)
!4447 = !DILocation(line: 526, column: 35, scope: !4431)
!4448 = distinct !{!4448, !4432, !4449}
!4449 = !DILocation(line: 528, column: 2, scope: !4411)
!4450 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2657, file: !2657, line: 1338, type: !4451, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4459)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!103, !3439, !102, !144, !4453, !121}
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3405, line: 99, baseType: !4454)
!4454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3405, line: 40, baseType: !4455)
!4455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2657, baseType: !4456)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4457)
!4457 = !{!4458}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4456, file: !2657, baseType: !102, size: 32)
!4459 = !{!4460, !4461, !4462, !4463, !4464, !4465, !4469, !4470, !4471, !4473, !4478, !4523, !4526, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4538, !4539, !4540, !4544, !4547, !4549, !4552, !4553, !4554, !4559, !4565, !4568, !4572, !4578, !4582, !4585, !4587, !4590}
!4460 = !DILocalVariable(name: "out", arg: 1, scope: !4450, file: !2657, line: 1338, type: !3439)
!4461 = !DILocalVariable(name: "ctx", arg: 2, scope: !4450, file: !2657, line: 1338, type: !102)
!4462 = !DILocalVariable(name: "fp", arg: 3, scope: !4450, file: !2657, line: 1338, type: !144)
!4463 = !DILocalVariable(name: "ap", arg: 4, scope: !4450, file: !2657, line: 1339, type: !4453)
!4464 = !DILocalVariable(name: "flags", arg: 5, scope: !4450, file: !2657, line: 1339, type: !121)
!4465 = !DILocalVariable(name: "buf", scope: !4450, file: !2657, line: 1341, type: !4466)
!4466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4467)
!4467 = !{!4468}
!4468 = !DISubrange(count: 22)
!4469 = !DILocalVariable(name: "count", scope: !4450, file: !2657, line: 1342, type: !204)
!4470 = !DILocalVariable(name: "sint", scope: !4450, file: !2657, line: 1343, type: !2676)
!4471 = !DILocalVariable(name: "tagged_ap", scope: !4450, file: !2657, line: 1345, type: !4472)
!4472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4473 = !DILocalVariable(name: "rc", scope: !4474, file: !2657, line: 1377, type: !103)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !2657, line: 1377, column: 4)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !2657, line: 1376, column: 19)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1376, column: 7)
!4477 = distinct !DILexicalBlock(scope: !4450, file: !2657, line: 1375, column: 19)
!4478 = !DILocalVariable(name: "state", scope: !4477, file: !2657, line: 1395, type: !4479)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4450, file: !2657, line: 1392, size: 192, elements: !4480)
!4480 = !{!4481, !4491}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4479, file: !2657, line: 1393, baseType: !4482, size: 64)
!4482 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2657, line: 166, size: 64, elements: !4483)
!4483 = !{!4484, !4485, !4486, !4488, !4490}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4482, file: !2657, line: 168, baseType: !2676, size: 64)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4482, file: !2657, line: 171, baseType: !2679, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4482, file: !2657, line: 174, baseType: !4487, size: 64)
!4487 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4482, file: !2657, line: 177, baseType: !4489, size: 64)
!4489 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4482, file: !2657, line: 180, baseType: !102, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4479, file: !2657, line: 1394, baseType: !4492, size: 96, offset: 64)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2657, line: 189, size: 96, elements: !4493)
!4493 = !{!4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4518}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4492, file: !2657, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4492, file: !2657, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4492, file: !2657, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4492, file: !2657, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4492, file: !2657, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4492, file: !2657, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4492, file: !2657, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4492, file: !2657, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4492, file: !2657, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4492, file: !2657, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4492, file: !2657, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4492, file: !2657, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4492, file: !2657, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4492, file: !2657, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4492, file: !2657, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4492, file: !2657, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4492, file: !2657, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4492, file: !2657, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4492, file: !2657, line: 260, baseType: !155, size: 8, offset: 24)
!4513 = !DIDerivedType(tag: DW_TAG_member, scope: !4492, file: !2657, line: 262, baseType: !4514, size: 32, offset: 32)
!4514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4492, file: !2657, line: 262, size: 32, elements: !4515)
!4515 = !{!4516, !4517}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4514, file: !2657, line: 267, baseType: !103, size: 32)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4514, file: !2657, line: 289, baseType: !103, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, scope: !4492, file: !2657, line: 292, baseType: !4519, size: 32, offset: 64)
!4519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4492, file: !2657, line: 292, size: 32, elements: !4520)
!4520 = !{!4521, !4522}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4519, file: !2657, line: 297, baseType: !103, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4519, file: !2657, line: 306, baseType: !103, size: 32)
!4523 = !DILocalVariable(name: "conv", scope: !4477, file: !2657, line: 1400, type: !4524)
!4524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4525)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 32)
!4526 = !DILocalVariable(name: "value", scope: !4477, file: !2657, line: 1401, type: !4527)
!4527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 32)
!4529 = !DILocalVariable(name: "sp", scope: !4477, file: !2657, line: 1402, type: !144)
!4530 = !DILocalVariable(name: "width", scope: !4477, file: !2657, line: 1403, type: !103)
!4531 = !DILocalVariable(name: "precision", scope: !4477, file: !2657, line: 1404, type: !103)
!4532 = !DILocalVariable(name: "bps", scope: !4477, file: !2657, line: 1405, type: !144)
!4533 = !DILocalVariable(name: "bpe", scope: !4477, file: !2657, line: 1406, type: !144)
!4534 = !DILocalVariable(name: "sign", scope: !4477, file: !2657, line: 1407, type: !146)
!4535 = !DILocalVariable(name: "arg", scope: !4536, file: !2657, line: 1432, type: !103)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2657, line: 1431, column: 24)
!4537 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1431, column: 7)
!4538 = !DILocalVariable(name: "specifier_cat", scope: !4477, file: !2657, line: 1468, type: !2656)
!4539 = !DILocalVariable(name: "length_mod", scope: !4477, file: !2657, line: 1470, type: !2664)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2657, line: 1575, type: !103)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2657, line: 1575, column: 4)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2657, line: 1574, column: 43)
!4543 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1574, column: 7)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2657, line: 1584, type: !103)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1584, column: 4)
!4546 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1582, column: 28)
!4547 = !DILocalVariable(name: "len", scope: !4548, file: !2657, line: 1589, type: !204)
!4548 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1586, column: 13)
!4549 = !DILocalVariable(name: "len", scope: !4550, file: !2657, line: 1641, type: !204)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !2657, line: 1640, column: 24)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1640, column: 8)
!4552 = !DILocalVariable(name: "nj_len", scope: !4477, file: !2657, line: 1722, type: !204)
!4553 = !DILocalVariable(name: "pad_len", scope: !4477, file: !2657, line: 1723, type: !103)
!4554 = !DILocalVariable(name: "pad", scope: !4555, file: !2657, line: 1751, type: !146)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !2657, line: 1750, column: 26)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !2657, line: 1750, column: 8)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !2657, line: 1747, column: 18)
!4558 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1747, column: 7)
!4559 = !DILocalVariable(name: "rc", scope: !4560, file: !2657, line: 1758, type: !103)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2657, line: 1758, column: 7)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !2657, line: 1757, column: 21)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !2657, line: 1757, column: 10)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !2657, line: 1756, column: 26)
!4564 = distinct !DILexicalBlock(scope: !4555, file: !2657, line: 1756, column: 9)
!4565 = !DILocalVariable(name: "rc", scope: !4566, file: !2657, line: 1765, type: !103)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2657, line: 1765, column: 6)
!4567 = distinct !DILexicalBlock(scope: !4555, file: !2657, line: 1764, column: 25)
!4568 = !DILocalVariable(name: "rc", scope: !4569, file: !2657, line: 1774, type: !103)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2657, line: 1774, column: 4)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !2657, line: 1773, column: 18)
!4571 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1773, column: 7)
!4572 = !DILocalVariable(name: "rc", scope: !4573, file: !2657, line: 1819, type: !103)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !2657, line: 1819, column: 5)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2657, line: 1818, column: 44)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !2657, line: 1818, column: 8)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !2657, line: 1817, column: 10)
!4577 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1777, column: 7)
!4578 = !DILocalVariable(name: "rc", scope: !4579, file: !2657, line: 1823, type: !103)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !2657, line: 1823, column: 5)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !2657, line: 1822, column: 26)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !2657, line: 1822, column: 8)
!4582 = !DILocalVariable(name: "rc", scope: !4583, file: !2657, line: 1828, type: !103)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !2657, line: 1828, column: 5)
!4584 = distinct !DILexicalBlock(scope: !4576, file: !2657, line: 1827, column: 26)
!4585 = !DILocalVariable(name: "rc", scope: !4586, file: !2657, line: 1831, type: !103)
!4586 = distinct !DILexicalBlock(scope: !4576, file: !2657, line: 1831, column: 4)
!4587 = !DILocalVariable(name: "rc", scope: !4588, file: !2657, line: 1836, type: !103)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !2657, line: 1836, column: 4)
!4589 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1835, column: 21)
!4590 = !DILabel(scope: !4546, name: "prec_int_pad0", file: !2657, line: 1634)
!4591 = !DILocation(line: 0, scope: !4450)
!4592 = !DILocation(line: 1341, column: 2, scope: !4450)
!4593 = !DILocation(line: 1341, column: 7, scope: !4450)
!4594 = !DILocation(line: 1375, column: 2, scope: !4450)
!4595 = !DILocation(line: 1342, column: 9, scope: !4450)
!4596 = !DILocation(line: 1375, column: 9, scope: !4450)
!4597 = !DILocation(line: 1377, column: 4, scope: !4474)
!4598 = !DILocation(line: 0, scope: !4474)
!4599 = !DILocation(line: 1377, column: 4, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4474, file: !2657, line: 1377, column: 4)
!4601 = distinct !{!4601, !4594, !4602}
!4602 = !DILocation(line: 1839, column: 2, scope: !4450)
!4603 = !DILocation(line: 1392, column: 3, scope: !4477)
!4604 = !DILocation(line: 1395, column: 5, scope: !4477)
!4605 = !DILocation(line: 0, scope: !4477)
!4606 = !DILocation(line: 1409, column: 8, scope: !4477)
!4607 = !DILocation(line: 1414, column: 13, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1414, column: 7)
!4609 = !DILocation(line: 1414, column: 7, scope: !4477)
!4610 = !DILocation(line: 1415, column: 12, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !2657, line: 1414, column: 25)
!4612 = !DILocation(line: 1417, column: 14, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4611, file: !2657, line: 1417, column: 8)
!4614 = !DILocation(line: 1417, column: 8, scope: !4611)
!4615 = !DILocation(line: 1418, column: 21, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !2657, line: 1417, column: 19)
!4617 = !DILocation(line: 1419, column: 13, scope: !4616)
!4618 = !DILocation(line: 1420, column: 4, scope: !4616)
!4619 = !DILocation(line: 1421, column: 20, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4608, file: !2657, line: 1421, column: 14)
!4621 = !DILocation(line: 1421, column: 14, scope: !4608)
!4622 = !DILocation(line: 1431, column: 13, scope: !4537)
!4623 = !DILocation(line: 1431, column: 7, scope: !4477)
!4624 = !DILocation(line: 1432, column: 14, scope: !4536)
!4625 = !DILocation(line: 0, scope: !4536)
!4626 = !DILocation(line: 1434, column: 12, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4536, file: !2657, line: 1434, column: 8)
!4628 = !DILocation(line: 1434, column: 8, scope: !4536)
!4629 = !DILocation(line: 1435, column: 24, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4627, file: !2657, line: 1434, column: 17)
!4631 = !DILocation(line: 1436, column: 4, scope: !4630)
!4632 = !DILocation(line: 1439, column: 20, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4537, file: !2657, line: 1439, column: 14)
!4634 = !DILocation(line: 1439, column: 14, scope: !4537)
!4635 = !DILocation(line: 1469, column: 37, scope: !4477)
!4636 = !DILocation(line: 1448, column: 20, scope: !4477)
!4637 = !DILocation(line: 1449, column: 22, scope: !4477)
!4638 = !DILocation(line: 1471, column: 34, scope: !4477)
!4639 = !DILocation(line: 1478, column: 7, scope: !4477)
!4640 = !DILocation(line: 1479, column: 4, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2657, line: 1478, column: 40)
!4642 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1478, column: 7)
!4643 = !DILocation(line: 1484, column: 19, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4641, file: !2657, line: 1479, column: 24)
!4645 = !DILocation(line: 1484, column: 17, scope: !4644)
!4646 = !DILocation(line: 1485, column: 5, scope: !4644)
!4647 = !DILocation(line: 1492, column: 20, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4649, file: !2657, line: 1491, column: 12)
!4649 = distinct !DILexicalBlock(scope: !4644, file: !2657, line: 1487, column: 9)
!4650 = !DILocation(line: 1492, column: 18, scope: !4648)
!4651 = !DILocation(line: 1494, column: 5, scope: !4644)
!4652 = !DILocation(line: 1497, column: 23, scope: !4644)
!4653 = !DILocation(line: 1496, column: 17, scope: !4644)
!4654 = !DILocation(line: 1498, column: 5, scope: !4644)
!4655 = !DILocation(line: 1501, column: 23, scope: !4644)
!4656 = !DILocation(line: 1500, column: 17, scope: !4644)
!4657 = !DILocation(line: 1502, column: 5, scope: !4644)
!4658 = !DILocation(line: 1513, column: 23, scope: !4644)
!4659 = !DILocation(line: 1513, column: 6, scope: !4644)
!4660 = !DILocation(line: 1512, column: 17, scope: !4644)
!4661 = !DILocation(line: 1514, column: 5, scope: !4644)
!4662 = !DILocation(line: 0, scope: !4644)
!4663 = !DILocation(line: 1516, column: 8, scope: !4641)
!4664 = !DILocation(line: 1517, column: 19, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2657, line: 1516, column: 33)
!4666 = distinct !DILexicalBlock(scope: !4641, file: !2657, line: 1516, column: 8)
!4667 = !DILocation(line: 1517, column: 17, scope: !4665)
!4668 = !DILocation(line: 1518, column: 4, scope: !4665)
!4669 = !DILocation(line: 1519, column: 19, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2657, line: 1518, column: 39)
!4671 = distinct !DILexicalBlock(scope: !4666, file: !2657, line: 1518, column: 15)
!4672 = !DILocation(line: 1519, column: 17, scope: !4670)
!4673 = !DILocation(line: 1520, column: 4, scope: !4670)
!4674 = !DILocation(line: 1522, column: 4, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2657, line: 1521, column: 47)
!4676 = distinct !DILexicalBlock(scope: !4642, file: !2657, line: 1521, column: 14)
!4677 = !DILocation(line: 1527, column: 19, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !2657, line: 1522, column: 24)
!4679 = !DILocation(line: 1527, column: 17, scope: !4678)
!4680 = !DILocation(line: 1528, column: 5, scope: !4678)
!4681 = !DILocation(line: 0, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4678, file: !2657, line: 1530, column: 9)
!4683 = !DILocation(line: 1540, column: 23, scope: !4678)
!4684 = !DILocation(line: 1539, column: 17, scope: !4678)
!4685 = !DILocation(line: 1542, column: 5, scope: !4678)
!4686 = !DILocation(line: 1545, column: 23, scope: !4678)
!4687 = !DILocation(line: 1544, column: 17, scope: !4678)
!4688 = !DILocation(line: 1547, column: 5, scope: !4678)
!4689 = !DILocation(line: 1551, column: 23, scope: !4678)
!4690 = !DILocation(line: 1551, column: 6, scope: !4678)
!4691 = !DILocation(line: 1550, column: 17, scope: !4678)
!4692 = !DILocation(line: 1552, column: 5, scope: !4678)
!4693 = !DILocation(line: 0, scope: !4678)
!4694 = !DILocation(line: 1554, column: 8, scope: !4675)
!4695 = !DILocation(line: 1555, column: 19, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2657, line: 1554, column: 33)
!4697 = distinct !DILexicalBlock(scope: !4675, file: !2657, line: 1554, column: 8)
!4698 = !DILocation(line: 1555, column: 17, scope: !4696)
!4699 = !DILocation(line: 1556, column: 4, scope: !4696)
!4700 = !DILocation(line: 1557, column: 19, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2657, line: 1556, column: 39)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !2657, line: 1556, column: 15)
!4703 = !DILocation(line: 1557, column: 17, scope: !4701)
!4704 = !DILocation(line: 1558, column: 4, scope: !4701)
!4705 = !DILocation(line: 0, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2657, line: 1560, column: 8)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2657, line: 1559, column: 45)
!4708 = distinct !DILexicalBlock(scope: !4676, file: !2657, line: 1559, column: 14)
!4709 = !DILocation(line: 1566, column: 17, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2657, line: 1565, column: 46)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !2657, line: 1565, column: 14)
!4712 = !DILocation(line: 1566, column: 15, scope: !4710)
!4713 = !DILocation(line: 1567, column: 3, scope: !4710)
!4714 = !DILocation(line: 1574, column: 21, scope: !4543)
!4715 = !DILocation(line: 1575, column: 4, scope: !4541)
!4716 = !DILocation(line: 0, scope: !4541)
!4717 = !DILocation(line: 1575, column: 4, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4541, file: !2657, line: 1575, column: 4)
!4719 = !DILocation(line: 1582, column: 17, scope: !4477)
!4720 = !DILocation(line: 1582, column: 3, scope: !4477)
!4721 = !DILocation(line: 1584, column: 4, scope: !4545)
!4722 = !DILocation(line: 0, scope: !4545)
!4723 = !DILocation(line: 1584, column: 4, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4545, file: !2657, line: 1584, column: 4)
!4725 = !DILocation(line: 1587, column: 31, scope: !4548)
!4726 = !DILocation(line: 1591, column: 18, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4548, file: !2657, line: 1591, column: 8)
!4728 = !DILocation(line: 1591, column: 8, scope: !4548)
!4729 = !DILocation(line: 1592, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !2657, line: 1591, column: 24)
!4731 = !DILocation(line: 0, scope: !4548)
!4732 = !DILocation(line: 1593, column: 4, scope: !4730)
!4733 = !DILocation(line: 1594, column: 11, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !2657, line: 1593, column: 11)
!4735 = !DILocation(line: 1604, column: 51, scope: !4546)
!4736 = !DILocation(line: 1604, column: 13, scope: !4546)
!4737 = !DILocation(line: 1604, column: 11, scope: !4546)
!4738 = !DILocation(line: 1606, column: 4, scope: !4546)
!4739 = !DILocation(line: 1609, column: 14, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1609, column: 8)
!4741 = !DILocation(line: 1609, column: 8, scope: !4546)
!4742 = !DILocation(line: 1619, column: 18, scope: !4546)
!4743 = !DILocation(line: 1620, column: 13, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1620, column: 8)
!4745 = !DILocation(line: 1620, column: 8, scope: !4546)
!4746 = !DILocation(line: 1622, column: 36, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4744, file: !2657, line: 1620, column: 18)
!4748 = !DILocation(line: 1622, column: 17, scope: !4747)
!4749 = !DILocation(line: 1623, column: 4, scope: !4747)
!4750 = !DILocation(line: 1632, column: 29, scope: !4546)
!4751 = !DILocation(line: 1632, column: 10, scope: !4546)
!4752 = !DILocation(line: 1632, column: 4, scope: !4546)
!4753 = !DILocation(line: 1407, column: 8, scope: !4477)
!4754 = !DILocation(line: 0, scope: !4546)
!4755 = !DILocation(line: 1634, column: 3, scope: !4546)
!4756 = !DILocation(line: 1640, column: 18, scope: !4551)
!4757 = !DILocation(line: 1640, column: 8, scope: !4546)
!4758 = !DILocation(line: 1729, column: 13, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1729, column: 7)
!4760 = !DILocation(line: 1641, column: 22, scope: !4550)
!4761 = !DILocation(line: 0, scope: !4550)
!4762 = !DILocation(line: 1646, column: 21, scope: !4550)
!4763 = !DILocation(line: 1649, column: 13, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4550, file: !2657, line: 1649, column: 9)
!4765 = !DILocation(line: 1649, column: 9, scope: !4550)
!4766 = !DILocation(line: 1650, column: 35, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !2657, line: 1649, column: 34)
!4768 = !DILocation(line: 1650, column: 23, scope: !4767)
!4769 = !DILocation(line: 1651, column: 5, scope: !4767)
!4770 = !DILocation(line: 1660, column: 15, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1660, column: 8)
!4772 = !DILocation(line: 1660, column: 19, scope: !4771)
!4773 = !DILocation(line: 1660, column: 8, scope: !4546)
!4774 = !DILocation(line: 1661, column: 23, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4771, file: !2657, line: 1660, column: 28)
!4776 = !DILocation(line: 1661, column: 11, scope: !4775)
!4777 = !DILocation(line: 1665, column: 22, scope: !4775)
!4778 = !DILocation(line: 1666, column: 21, scope: !4775)
!4779 = !DILocation(line: 1668, column: 5, scope: !4775)
!4780 = !DILocation(line: 1677, column: 30, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !2657, line: 1676, column: 49)
!4782 = distinct !DILexicalBlock(scope: !4546, file: !2657, line: 1676, column: 8)
!4783 = !DILocation(line: 1677, column: 5, scope: !4781)
!4784 = !DILocation(line: 1680, column: 4, scope: !4546)
!4785 = !DILocation(line: 0, scope: !4727)
!4786 = !DILocation(line: 1597, column: 14, scope: !4548)
!4787 = !DILocation(line: 1699, column: 11, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1699, column: 7)
!4789 = !DILocation(line: 1699, column: 7, scope: !4477)
!4790 = !DILocation(line: 1725, column: 7, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1725, column: 7)
!4792 = !DILocation(line: 1725, column: 12, scope: !4791)
!4793 = !DILocation(line: 1747, column: 13, scope: !4558)
!4794 = !DILocation(line: 1747, column: 7, scope: !4477)
!4795 = !DILocation(line: 1722, column: 24, scope: !4477)
!4796 = !DILocation(line: 1725, column: 7, scope: !4477)
!4797 = !DILocation(line: 1729, column: 7, scope: !4477)
!4798 = !DILocation(line: 1736, column: 13, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4477, file: !2657, line: 1736, column: 7)
!4800 = !DILocation(line: 1735, column: 19, scope: !4477)
!4801 = !DILocation(line: 1736, column: 7, scope: !4477)
!4802 = !DILocation(line: 1748, column: 10, scope: !4557)
!4803 = !DILocation(line: 1750, column: 15, scope: !4556)
!4804 = !DILocation(line: 1750, column: 8, scope: !4557)
!4805 = !DILocation(line: 0, scope: !4555)
!4806 = !DILocation(line: 1756, column: 15, scope: !4564)
!4807 = !DILocation(line: 1756, column: 9, scope: !4555)
!4808 = !DILocation(line: 1758, column: 7, scope: !4560)
!4809 = !DILocation(line: 0, scope: !4560)
!4810 = !DILocation(line: 1758, column: 7, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4560, file: !2657, line: 1758, column: 7)
!4812 = !DILocation(line: 1764, column: 5, scope: !4555)
!4813 = !DILocation(line: 0, scope: !4557)
!4814 = !DILocation(line: 1764, column: 20, scope: !4555)
!4815 = !DILocation(line: 1764, column: 17, scope: !4555)
!4816 = !DILocation(line: 1765, column: 6, scope: !4566)
!4817 = !DILocation(line: 0, scope: !4566)
!4818 = !DILocation(line: 1765, column: 6, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4566, file: !2657, line: 1765, column: 6)
!4820 = distinct !{!4820, !4812, !4821}
!4821 = !DILocation(line: 1766, column: 5, scope: !4555)
!4822 = !DILocation(line: 1773, column: 12, scope: !4571)
!4823 = !DILocation(line: 1773, column: 7, scope: !4477)
!4824 = !DILocation(line: 1773, column: 7, scope: !4571)
!4825 = !DILocation(line: 1774, column: 4, scope: !4569)
!4826 = !DILocation(line: 0, scope: !4569)
!4827 = !DILocation(line: 1774, column: 4, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4569, file: !2657, line: 1774, column: 4)
!4829 = !DILocation(line: 1818, column: 8, scope: !4575)
!4830 = !DILocation(line: 1818, column: 27, scope: !4575)
!4831 = !DILocation(line: 1818, column: 25, scope: !4575)
!4832 = !DILocation(line: 1818, column: 8, scope: !4576)
!4833 = !DILocation(line: 1819, column: 5, scope: !4573)
!4834 = !DILocation(line: 0, scope: !4573)
!4835 = !DILocation(line: 1819, column: 5, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4573, file: !2657, line: 1819, column: 5)
!4837 = !DILocation(line: 1822, column: 14, scope: !4581)
!4838 = !DILocation(line: 1822, column: 8, scope: !4576)
!4839 = !DILocation(line: 1823, column: 5, scope: !4579)
!4840 = !DILocation(line: 0, scope: !4579)
!4841 = !DILocation(line: 1823, column: 5, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4579, file: !2657, line: 1823, column: 5)
!4843 = !DILocation(line: 1826, column: 20, scope: !4576)
!4844 = !DILocation(line: 1827, column: 4, scope: !4576)
!4845 = !DILocation(line: 0, scope: !4576)
!4846 = !DILocation(line: 1827, column: 21, scope: !4576)
!4847 = !DILocation(line: 1827, column: 18, scope: !4576)
!4848 = !DILocation(line: 1828, column: 5, scope: !4583)
!4849 = !DILocation(line: 0, scope: !4583)
!4850 = !DILocation(line: 1828, column: 5, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4583, file: !2657, line: 1828, column: 5)
!4852 = distinct !{!4852, !4844, !4853}
!4853 = !DILocation(line: 1829, column: 4, scope: !4576)
!4854 = !DILocation(line: 1831, column: 4, scope: !4586)
!4855 = !DILocation(line: 0, scope: !4586)
!4856 = !DILocation(line: 1831, column: 4, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4586, file: !2657, line: 1831, column: 4)
!4858 = !DILocation(line: 1835, column: 16, scope: !4477)
!4859 = !DILocation(line: 1835, column: 3, scope: !4477)
!4860 = !DILocation(line: 1836, column: 4, scope: !4588)
!4861 = !DILocation(line: 0, scope: !4588)
!4862 = !DILocation(line: 1836, column: 4, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4588, file: !2657, line: 1836, column: 4)
!4864 = !DILocation(line: 1837, column: 4, scope: !4589)
!4865 = distinct !{!4865, !4859, !4866}
!4866 = !DILocation(line: 1838, column: 3, scope: !4477)
!4867 = !DILocation(line: 1844, column: 1, scope: !4450)
!4868 = distinct !DISubprogram(name: "extract_conversion", scope: !2657, file: !2657, line: 642, type: !4869, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4871)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!144, !4525, !144}
!4871 = !{!4872, !4873}
!4872 = !DILocalVariable(name: "conv", arg: 1, scope: !4868, file: !2657, line: 642, type: !4525)
!4873 = !DILocalVariable(name: "sp", arg: 2, scope: !4868, file: !2657, line: 643, type: !144)
!4874 = !DILocation(line: 0, scope: !4868)
!4875 = !DILocation(line: 645, column: 10, scope: !4868)
!4876 = !DILocation(line: 653, column: 2, scope: !4868)
!4877 = !DILocation(line: 654, column: 6, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4868, file: !2657, line: 654, column: 6)
!4879 = !DILocation(line: 654, column: 10, scope: !4878)
!4880 = !DILocation(line: 654, column: 6, scope: !4868)
!4881 = !DILocation(line: 655, column: 24, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !2657, line: 654, column: 18)
!4883 = !DILocation(line: 655, column: 19, scope: !4882)
!4884 = !DILocation(line: 656, column: 3, scope: !4882)
!4885 = !DILocation(line: 659, column: 7, scope: !4868)
!4886 = !DILocation(line: 660, column: 7, scope: !4868)
!4887 = !DILocation(line: 661, column: 7, scope: !4868)
!4888 = !DILocation(line: 662, column: 7, scope: !4868)
!4889 = !DILocation(line: 663, column: 7, scope: !4868)
!4890 = !DILocation(line: 665, column: 2, scope: !4868)
!4891 = !DILocation(line: 666, column: 1, scope: !4868)
!4892 = distinct !DISubprogram(name: "outs", scope: !2657, file: !2657, line: 1319, type: !4893, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4895)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{!103, !3439, !102, !144, !144}
!4895 = !{!4896, !4897, !4898, !4899, !4900, !4901}
!4896 = !DILocalVariable(name: "out", arg: 1, scope: !4892, file: !2657, line: 1319, type: !3439)
!4897 = !DILocalVariable(name: "ctx", arg: 2, scope: !4892, file: !2657, line: 1320, type: !102)
!4898 = !DILocalVariable(name: "sp", arg: 3, scope: !4892, file: !2657, line: 1321, type: !144)
!4899 = !DILocalVariable(name: "ep", arg: 4, scope: !4892, file: !2657, line: 1322, type: !144)
!4900 = !DILocalVariable(name: "count", scope: !4892, file: !2657, line: 1324, type: !204)
!4901 = !DILocalVariable(name: "rc", scope: !4902, file: !2657, line: 1327, type: !103)
!4902 = distinct !DILexicalBlock(scope: !4892, file: !2657, line: 1326, column: 45)
!4903 = !DILocation(line: 0, scope: !4892)
!4904 = !DILocation(line: 1326, column: 2, scope: !4892)
!4905 = !DILocation(line: 1324, column: 9, scope: !4892)
!4906 = !DILocation(line: 1326, column: 13, scope: !4892)
!4907 = !DILocation(line: 1326, column: 19, scope: !4892)
!4908 = !DILocation(line: 1327, column: 21, scope: !4902)
!4909 = !DILocation(line: 1326, column: 36, scope: !4892)
!4910 = !DILocation(line: 1326, column: 39, scope: !4892)
!4911 = !DILocation(line: 1327, column: 24, scope: !4902)
!4912 = !DILocation(line: 1327, column: 16, scope: !4902)
!4913 = !DILocation(line: 1327, column: 12, scope: !4902)
!4914 = !DILocation(line: 0, scope: !4902)
!4915 = !DILocation(line: 1329, column: 10, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4902, file: !2657, line: 1329, column: 7)
!4917 = !DILocation(line: 1329, column: 7, scope: !4902)
!4918 = distinct !{!4918, !4904, !4919}
!4919 = !DILocation(line: 1333, column: 2, scope: !4892)
!4920 = !DILocation(line: 1336, column: 1, scope: !4892)
!4921 = distinct !DISubprogram(name: "encode_uint", scope: !2657, file: !2657, line: 788, type: !4922, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4924)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!344, !2679, !4525, !344, !144}
!4924 = !{!4925, !4926, !4927, !4928, !4929, !4930, !4932, !4933}
!4925 = !DILocalVariable(name: "value", arg: 1, scope: !4921, file: !2657, line: 788, type: !2679)
!4926 = !DILocalVariable(name: "conv", arg: 2, scope: !4921, file: !2657, line: 789, type: !4525)
!4927 = !DILocalVariable(name: "bps", arg: 3, scope: !4921, file: !2657, line: 790, type: !344)
!4928 = !DILocalVariable(name: "bpe", arg: 4, scope: !4921, file: !2657, line: 791, type: !144)
!4929 = !DILocalVariable(name: "upcase", scope: !4921, file: !2657, line: 793, type: !157)
!4930 = !DILocalVariable(name: "radix", scope: !4921, file: !2657, line: 794, type: !4931)
!4931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4932 = !DILocalVariable(name: "bp", scope: !4921, file: !2657, line: 795, type: !344)
!4933 = !DILocalVariable(name: "lsv", scope: !4934, file: !2657, line: 798, type: !32)
!4934 = distinct !DILexicalBlock(scope: !4921, file: !2657, line: 797, column: 5)
!4935 = !DILocation(line: 0, scope: !4921)
!4936 = !DILocation(line: 793, column: 35, scope: !4921)
!4937 = !DILocation(line: 793, column: 24, scope: !4921)
!4938 = !DILocation(line: 793, column: 16, scope: !4921)
!4939 = !DILocation(line: 794, column: 29, scope: !4921)
!4940 = !DILocation(line: 795, column: 24, scope: !4921)
!4941 = !DILocation(line: 795, column: 17, scope: !4921)
!4942 = !DILocation(line: 797, column: 2, scope: !4921)
!4943 = !DILocation(line: 802, column: 9, scope: !4934)
!4944 = !DILocation(line: 798, column: 22, scope: !4934)
!4945 = !DILocation(line: 0, scope: !4934)
!4946 = !DILocation(line: 800, column: 16, scope: !4934)
!4947 = !DILocation(line: 800, column: 11, scope: !4934)
!4948 = !DILocation(line: 800, column: 4, scope: !4934)
!4949 = !DILocation(line: 800, column: 9, scope: !4934)
!4950 = !DILocation(line: 803, column: 18, scope: !4921)
!4951 = !DILocation(line: 803, column: 24, scope: !4921)
!4952 = !DILocation(line: 803, column: 2, scope: !4934)
!4953 = distinct !{!4953, !4942, !4954}
!4954 = !DILocation(line: 803, column: 37, scope: !4921)
!4955 = !DILocation(line: 808, column: 12, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4921, file: !2657, line: 808, column: 6)
!4957 = !DILocation(line: 808, column: 6, scope: !4921)
!4958 = !DILocation(line: 809, column: 7, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !2657, line: 808, column: 23)
!4960 = !DILocation(line: 813, column: 3, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4962, file: !2657, line: 811, column: 27)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !2657, line: 811, column: 14)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !2657, line: 809, column: 7)
!4964 = !DILocation(line: 0, scope: !4963)
!4965 = !DILocation(line: 818, column: 2, scope: !4921)
!4966 = distinct !DISubprogram(name: "store_count", scope: !2657, file: !2657, line: 1280, type: !4967, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !4971)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{null, !4969, !102, !103}
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 32)
!4970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4492)
!4971 = !{!4972, !4973, !4974}
!4972 = !DILocalVariable(name: "conv", arg: 1, scope: !4966, file: !2657, line: 1280, type: !4969)
!4973 = !DILocalVariable(name: "dp", arg: 2, scope: !4966, file: !2657, line: 1281, type: !102)
!4974 = !DILocalVariable(name: "count", arg: 3, scope: !4966, file: !2657, line: 1282, type: !103)
!4975 = !DILocation(line: 0, scope: !4966)
!4976 = !DILocation(line: 1284, column: 38, scope: !4966)
!4977 = !DILocation(line: 1284, column: 2, scope: !4966)
!4978 = !DILocation(line: 1286, column: 4, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4966, file: !2657, line: 1284, column: 50)
!4980 = !DILocation(line: 1286, column: 14, scope: !4979)
!4981 = !DILocation(line: 1287, column: 3, scope: !4979)
!4982 = !DILocation(line: 1289, column: 24, scope: !4979)
!4983 = !DILocation(line: 1289, column: 22, scope: !4979)
!4984 = !DILocation(line: 1290, column: 3, scope: !4979)
!4985 = !DILocation(line: 1292, column: 18, scope: !4979)
!4986 = !DILocation(line: 1292, column: 4, scope: !4979)
!4987 = !DILocation(line: 1292, column: 16, scope: !4979)
!4988 = !DILocation(line: 1293, column: 3, scope: !4979)
!4989 = !DILocation(line: 1295, column: 4, scope: !4979)
!4990 = !DILocation(line: 1295, column: 15, scope: !4979)
!4991 = !DILocation(line: 1296, column: 3, scope: !4979)
!4992 = !DILocation(line: 1298, column: 22, scope: !4979)
!4993 = !DILocation(line: 1298, column: 4, scope: !4979)
!4994 = !DILocation(line: 1298, column: 20, scope: !4979)
!4995 = !DILocation(line: 1299, column: 3, scope: !4979)
!4996 = !DILocation(line: 1301, column: 21, scope: !4979)
!4997 = !DILocation(line: 1301, column: 4, scope: !4979)
!4998 = !DILocation(line: 1301, column: 19, scope: !4979)
!4999 = !DILocation(line: 1302, column: 3, scope: !4979)
!5000 = !DILocation(line: 1304, column: 4, scope: !4979)
!5001 = !DILocation(line: 1304, column: 17, scope: !4979)
!5002 = !DILocation(line: 1305, column: 3, scope: !4979)
!5003 = !DILocation(line: 1307, column: 4, scope: !4979)
!5004 = !DILocation(line: 1307, column: 20, scope: !4979)
!5005 = !DILocation(line: 1308, column: 3, scope: !4979)
!5006 = !DILocation(line: 1316, column: 1, scope: !4966)
!5007 = distinct !DISubprogram(name: "isupper", scope: !5008, file: !5008, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5009)
!5008 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5009 = !{!5010}
!5010 = !DILocalVariable(name: "a", arg: 1, scope: !5007, file: !5008, line: 16, type: !103)
!5011 = !DILocation(line: 0, scope: !5007)
!5012 = !DILocation(line: 18, column: 29, scope: !5007)
!5013 = !DILocation(line: 18, column: 45, scope: !5007)
!5014 = !DILocation(line: 18, column: 2, scope: !5007)
!5015 = distinct !DISubprogram(name: "conversion_radix", scope: !2657, file: !2657, line: 761, type: !5016, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5018)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!204, !146}
!5018 = !{!5019}
!5019 = !DILocalVariable(name: "specifier", arg: 1, scope: !5015, file: !2657, line: 761, type: !146)
!5020 = !DILocation(line: 0, scope: !5015)
!5021 = !DILocation(line: 763, column: 2, scope: !5015)
!5022 = !DILocation(line: 770, column: 3, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5015, file: !2657, line: 763, column: 21)
!5024 = !DILocation(line: 774, column: 3, scope: !5023)
!5025 = !DILocation(line: 0, scope: !5023)
!5026 = !DILocation(line: 776, column: 1, scope: !5015)
!5027 = distinct !DISubprogram(name: "extract_flags", scope: !2657, file: !2657, line: 339, type: !4869, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5028)
!5028 = !{!5029, !5030, !5031}
!5029 = !DILocalVariable(name: "conv", arg: 1, scope: !5027, file: !2657, line: 339, type: !4525)
!5030 = !DILocalVariable(name: "sp", arg: 2, scope: !5027, file: !2657, line: 340, type: !144)
!5031 = !DILocalVariable(name: "loop", scope: !5027, file: !2657, line: 342, type: !157)
!5032 = !DILocation(line: 0, scope: !5027)
!5033 = !DILocation(line: 344, column: 2, scope: !5027)
!5034 = !DILocation(line: 345, column: 11, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5027, file: !2657, line: 344, column: 5)
!5036 = !DILocation(line: 345, column: 3, scope: !5035)
!5037 = !DILocation(line: 351, column: 4, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5035, file: !2657, line: 345, column: 16)
!5039 = !DILocation(line: 354, column: 4, scope: !5038)
!5040 = !DILocation(line: 357, column: 4, scope: !5038)
!5041 = !DILocation(line: 360, column: 4, scope: !5038)
!5042 = !DILocation(line: 0, scope: !5038)
!5043 = !DILocation(line: 370, column: 12, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5027, file: !2657, line: 370, column: 6)
!5045 = !DILocation(line: 370, column: 22, scope: !5044)
!5046 = !DILocation(line: 371, column: 19, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5044, file: !2657, line: 370, column: 42)
!5048 = !DILocation(line: 372, column: 2, scope: !5047)
!5049 = !DILocation(line: 376, column: 2, scope: !5027)
!5050 = distinct !DISubprogram(name: "extract_width", scope: !2657, file: !2657, line: 388, type: !4869, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5051)
!5051 = !{!5052, !5053, !5054, !5055}
!5052 = !DILocalVariable(name: "conv", arg: 1, scope: !5050, file: !2657, line: 388, type: !4525)
!5053 = !DILocalVariable(name: "sp", arg: 2, scope: !5050, file: !2657, line: 389, type: !144)
!5054 = !DILocalVariable(name: "wp", scope: !5050, file: !2657, line: 398, type: !144)
!5055 = !DILocalVariable(name: "width", scope: !5050, file: !2657, line: 399, type: !204)
!5056 = !DILocation(line: 0, scope: !5050)
!5057 = !DILocation(line: 391, column: 8, scope: !5050)
!5058 = !DILocation(line: 391, column: 22, scope: !5050)
!5059 = !DILocation(line: 393, column: 6, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5050, file: !2657, line: 393, column: 6)
!5061 = !DILocation(line: 393, column: 10, scope: !5060)
!5062 = !DILocation(line: 393, column: 6, scope: !5050)
!5063 = !DILocation(line: 394, column: 20, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5060, file: !2657, line: 393, column: 18)
!5065 = !DILocation(line: 395, column: 10, scope: !5064)
!5066 = !DILocation(line: 395, column: 3, scope: !5064)
!5067 = !DILocation(line: 399, column: 17, scope: !5050)
!5068 = !DILocation(line: 401, column: 6, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5050, file: !2657, line: 401, column: 6)
!5070 = !DILocation(line: 401, column: 9, scope: !5069)
!5071 = !DILocation(line: 401, column: 6, scope: !5050)
!5072 = !DILocation(line: 402, column: 23, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5069, file: !2657, line: 401, column: 16)
!5074 = !DILocation(line: 403, column: 9, scope: !5073)
!5075 = !DILocation(line: 403, column: 21, scope: !5073)
!5076 = !DILocation(line: 405, column: 11, scope: !5073)
!5077 = !DILocation(line: 404, column: 21, scope: !5073)
!5078 = !DILocation(line: 406, column: 2, scope: !5073)
!5079 = !DILocation(line: 409, column: 1, scope: !5050)
!5080 = distinct !DISubprogram(name: "extract_prec", scope: !2657, file: !2657, line: 420, type: !4869, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5081)
!5081 = !{!5082, !5083, !5084}
!5082 = !DILocalVariable(name: "conv", arg: 1, scope: !5080, file: !2657, line: 420, type: !4525)
!5083 = !DILocalVariable(name: "sp", arg: 2, scope: !5080, file: !2657, line: 421, type: !144)
!5084 = !DILocalVariable(name: "prec", scope: !5080, file: !2657, line: 435, type: !204)
!5085 = !DILocation(line: 0, scope: !5080)
!5086 = !DILocation(line: 423, column: 24, scope: !5080)
!5087 = !DILocation(line: 423, column: 28, scope: !5080)
!5088 = !DILocation(line: 423, column: 8, scope: !5080)
!5089 = !DILocation(line: 423, column: 21, scope: !5080)
!5090 = !DILocation(line: 425, column: 6, scope: !5080)
!5091 = !DILocation(line: 428, column: 2, scope: !5080)
!5092 = !DILocation(line: 430, column: 6, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5080, file: !2657, line: 430, column: 6)
!5094 = !DILocation(line: 430, column: 10, scope: !5093)
!5095 = !DILocation(line: 430, column: 6, scope: !5080)
!5096 = !DILocation(line: 431, column: 19, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !2657, line: 430, column: 18)
!5098 = !DILocation(line: 432, column: 10, scope: !5097)
!5099 = !DILocation(line: 432, column: 3, scope: !5097)
!5100 = !DILocation(line: 435, column: 16, scope: !5080)
!5101 = !DILocation(line: 437, column: 8, scope: !5080)
!5102 = !DILocation(line: 437, column: 19, scope: !5080)
!5103 = !DILocation(line: 439, column: 10, scope: !5080)
!5104 = !DILocation(line: 438, column: 20, scope: !5080)
!5105 = !DILocation(line: 441, column: 9, scope: !5080)
!5106 = !DILocation(line: 442, column: 1, scope: !5080)
!5107 = distinct !DISubprogram(name: "extract_length", scope: !2657, file: !2657, line: 453, type: !4869, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5108)
!5108 = !{!5109, !5110}
!5109 = !DILocalVariable(name: "conv", arg: 1, scope: !5107, file: !2657, line: 453, type: !4525)
!5110 = !DILocalVariable(name: "sp", arg: 2, scope: !5107, file: !2657, line: 454, type: !144)
!5111 = !DILocation(line: 0, scope: !5107)
!5112 = !DILocation(line: 456, column: 10, scope: !5107)
!5113 = !DILocation(line: 456, column: 2, scope: !5107)
!5114 = !DILocation(line: 458, column: 8, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5116, file: !2657, line: 458, column: 7)
!5116 = distinct !DILexicalBlock(scope: !5107, file: !2657, line: 456, column: 15)
!5117 = !DILocation(line: 458, column: 7, scope: !5115)
!5118 = !DILocation(line: 458, column: 13, scope: !5115)
!5119 = !DILocation(line: 0, scope: !5115)
!5120 = !DILocation(line: 458, column: 7, scope: !5116)
!5121 = !DILocation(line: 459, column: 21, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5115, file: !2657, line: 458, column: 21)
!5123 = !DILocation(line: 460, column: 4, scope: !5122)
!5124 = !DILocation(line: 461, column: 3, scope: !5122)
!5125 = !DILocation(line: 462, column: 21, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5115, file: !2657, line: 461, column: 10)
!5127 = !DILocation(line: 466, column: 8, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5116, file: !2657, line: 466, column: 7)
!5129 = !DILocation(line: 466, column: 7, scope: !5128)
!5130 = !DILocation(line: 466, column: 13, scope: !5128)
!5131 = !DILocation(line: 0, scope: !5128)
!5132 = !DILocation(line: 466, column: 7, scope: !5116)
!5133 = !DILocation(line: 467, column: 21, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5128, file: !2657, line: 466, column: 21)
!5135 = !DILocation(line: 468, column: 4, scope: !5134)
!5136 = !DILocation(line: 469, column: 3, scope: !5134)
!5137 = !DILocation(line: 470, column: 21, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5128, file: !2657, line: 469, column: 10)
!5139 = !DILocation(line: 474, column: 9, scope: !5116)
!5140 = !DILocation(line: 474, column: 20, scope: !5116)
!5141 = !DILocation(line: 475, column: 3, scope: !5116)
!5142 = !DILocation(line: 476, column: 3, scope: !5116)
!5143 = !DILocation(line: 478, column: 9, scope: !5116)
!5144 = !DILocation(line: 478, column: 20, scope: !5116)
!5145 = !DILocation(line: 479, column: 3, scope: !5116)
!5146 = !DILocation(line: 480, column: 3, scope: !5116)
!5147 = !DILocation(line: 482, column: 9, scope: !5116)
!5148 = !DILocation(line: 482, column: 20, scope: !5116)
!5149 = !DILocation(line: 483, column: 3, scope: !5116)
!5150 = !DILocation(line: 484, column: 3, scope: !5116)
!5151 = !DILocation(line: 486, column: 9, scope: !5116)
!5152 = !DILocation(line: 486, column: 20, scope: !5116)
!5153 = !DILocation(line: 487, column: 3, scope: !5116)
!5154 = !DILocation(line: 492, column: 21, scope: !5116)
!5155 = !DILocation(line: 493, column: 3, scope: !5116)
!5156 = !DILocation(line: 495, column: 9, scope: !5116)
!5157 = !DILocation(line: 495, column: 20, scope: !5116)
!5158 = !DILocation(line: 496, column: 3, scope: !5116)
!5159 = !DILocation(line: 498, column: 2, scope: !5107)
!5160 = distinct !DISubprogram(name: "extract_specifier", scope: !2657, file: !2657, line: 513, type: !4869, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5161)
!5161 = !{!5162, !5163, !5164, !5165}
!5162 = !DILocalVariable(name: "conv", arg: 1, scope: !5160, file: !2657, line: 513, type: !4525)
!5163 = !DILocalVariable(name: "sp", arg: 2, scope: !5160, file: !2657, line: 514, type: !144)
!5164 = !DILocalVariable(name: "unsupported", scope: !5160, file: !2657, line: 516, type: !157)
!5165 = !DILabel(scope: !5166, name: "int_conv", file: !2657, line: 526)
!5166 = distinct !DILexicalBlock(scope: !5160, file: !2657, line: 520, column: 27)
!5167 = !DILocation(line: 0, scope: !5160)
!5168 = !DILocation(line: 518, column: 20, scope: !5160)
!5169 = !DILocation(line: 518, column: 8, scope: !5160)
!5170 = !DILocation(line: 518, column: 18, scope: !5160)
!5171 = !DILocation(line: 520, column: 2, scope: !5160)
!5172 = !DILocation(line: 525, column: 3, scope: !5166)
!5173 = !DILocation(line: 0, scope: !5166)
!5174 = !DILocation(line: 526, column: 1, scope: !5166)
!5175 = !DILocation(line: 528, column: 24, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5166, file: !2657, line: 528, column: 7)
!5177 = !DILocation(line: 528, column: 7, scope: !5166)
!5178 = !DILocation(line: 535, column: 23, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5166, file: !2657, line: 535, column: 7)
!5180 = !DILocation(line: 535, column: 7, scope: !5166)
!5181 = !DILocation(line: 536, column: 36, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !2657, line: 535, column: 31)
!5183 = !DILocation(line: 537, column: 3, scope: !5182)
!5184 = !DILocation(line: 570, column: 9, scope: !5166)
!5185 = !DILocation(line: 570, column: 23, scope: !5166)
!5186 = !DILocation(line: 575, column: 4, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5188, file: !2657, line: 573, column: 48)
!5188 = distinct !DILexicalBlock(scope: !5166, file: !2657, line: 573, column: 7)
!5189 = !DILocation(line: 603, column: 9, scope: !5166)
!5190 = !DILocation(line: 603, column: 23, scope: !5166)
!5191 = !DILocation(line: 605, column: 24, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5166, file: !2657, line: 605, column: 7)
!5193 = !DILocation(line: 605, column: 7, scope: !5166)
!5194 = !DILocation(line: 612, column: 9, scope: !5166)
!5195 = !DILocation(line: 612, column: 23, scope: !5166)
!5196 = !DILocation(line: 619, column: 24, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5166, file: !2657, line: 619, column: 7)
!5198 = !DILocation(line: 619, column: 7, scope: !5166)
!5199 = !DILocation(line: 625, column: 9, scope: !5166)
!5200 = !DILocation(line: 625, column: 17, scope: !5166)
!5201 = !DILocation(line: 626, column: 3, scope: !5166)
!5202 = !DILocation(line: 629, column: 20, scope: !5160)
!5203 = !DILocation(line: 629, column: 8, scope: !5160)
!5204 = !DILocation(line: 518, column: 23, scope: !5160)
!5205 = !DILocation(line: 631, column: 2, scope: !5160)
!5206 = distinct !DISubprogram(name: "extract_decimal", scope: !2657, file: !2657, line: 318, type: !5207, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5210)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{!204, !5209}
!5209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5210 = !{!5211, !5212, !5213}
!5211 = !DILocalVariable(name: "str", arg: 1, scope: !5206, file: !2657, line: 318, type: !5209)
!5212 = !DILocalVariable(name: "sp", scope: !5206, file: !2657, line: 320, type: !144)
!5213 = !DILocalVariable(name: "val", scope: !5206, file: !2657, line: 321, type: !204)
!5214 = !DILocation(line: 0, scope: !5206)
!5215 = !DILocation(line: 320, column: 19, scope: !5206)
!5216 = !DILocation(line: 323, column: 37, scope: !5206)
!5217 = !DILocation(line: 323, column: 17, scope: !5206)
!5218 = !DILocation(line: 323, column: 9, scope: !5206)
!5219 = !DILocation(line: 323, column: 2, scope: !5206)
!5220 = !DILocation(line: 324, column: 13, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5206, file: !2657, line: 323, column: 43)
!5222 = !DILocation(line: 324, column: 24, scope: !5221)
!5223 = !DILocation(line: 324, column: 19, scope: !5221)
!5224 = !DILocation(line: 324, column: 27, scope: !5221)
!5225 = distinct !{!5225, !5219, !5226}
!5226 = !DILocation(line: 325, column: 2, scope: !5206)
!5227 = !DILocation(line: 326, column: 7, scope: !5206)
!5228 = !DILocation(line: 327, column: 2, scope: !5206)
!5229 = distinct !DISubprogram(name: "isdigit", scope: !5008, file: !5008, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !5230)
!5230 = !{!5231}
!5231 = !DILocalVariable(name: "a", arg: 1, scope: !5229, file: !5008, line: 43, type: !103)
!5232 = !DILocation(line: 0, scope: !5229)
!5233 = !DILocation(line: 45, column: 29, scope: !5229)
!5234 = !DILocation(line: 45, column: 45, scope: !5229)
!5235 = !DILocation(line: 45, column: 2, scope: !5229)
!5236 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5237, file: !5237, line: 9, type: !3255, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !317)
!5237 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!5238 = !DILocation(line: 11, column: 1, scope: !5236)
!5239 = !{i64 2147561924, i64 2147561967, i64 2147562007}
!5240 = !DILocation(line: 12, column: 1, scope: !5236)
!5241 = !{i64 2147566151, i64 2147566194, i64 2147566234}
!5242 = !DILocation(line: 13, column: 1, scope: !5236)
!5243 = !{i64 2147566360, i64 2147566403, i64 2147566443}
!5244 = !DILocation(line: 14, column: 1, scope: !5236)
!5245 = !{i64 2147566577, i64 2147566620, i64 2147566660}
!5246 = !DILocation(line: 15, column: 1, scope: !5236)
!5247 = !{i64 2147566746, i64 2147566789, i64 2147566829}
!5248 = !DILocation(line: 16, column: 1, scope: !5236)
!5249 = !{i64 2147566909, i64 2147566952, i64 2147566992}
!5250 = !DILocation(line: 17, column: 1, scope: !5236)
!5251 = !{i64 2147567093, i64 2147567136, i64 2147567176}
!5252 = !DILocation(line: 18, column: 1, scope: !5236)
!5253 = !{i64 2147567272, i64 2147567315, i64 2147567355}
!5254 = !DILocation(line: 19, column: 1, scope: !5236)
!5255 = !{i64 2147567514, i64 2147567557, i64 2147567597}
!5256 = !DILocation(line: 20, column: 1, scope: !5236)
!5257 = !{i64 2147567749, i64 2147567792, i64 2147567832}
!5258 = !DILocation(line: 21, column: 1, scope: !5236)
!5259 = !{i64 2147567935, i64 2147567978, i64 2147568018}
!5260 = !DILocation(line: 22, column: 1, scope: !5236)
!5261 = !{i64 2147568151, i64 2147568194, i64 2147568234}
!5262 = !DILocation(line: 23, column: 1, scope: !5236)
!5263 = !{i64 2147568354, i64 2147568397, i64 2147568437}
!5264 = !DILocation(line: 24, column: 1, scope: !5236)
!5265 = !{i64 2147568557, i64 2147568600, i64 2147568640}
!5266 = !DILocation(line: 25, column: 1, scope: !5236)
!5267 = !{i64 2147568732, i64 2147568775, i64 2147568815}
!5268 = !DILocation(line: 26, column: 1, scope: !5236)
!5269 = !{i64 2147568940, i64 2147568983, i64 2147569023}
!5270 = !DILocation(line: 27, column: 1, scope: !5236)
!5271 = !{i64 2147569144, i64 2147569187, i64 2147569227}
!5272 = !DILocation(line: 28, column: 1, scope: !5236)
!5273 = !{i64 2147569337, i64 2147569380, i64 2147569420}
!5274 = !DILocation(line: 29, column: 1, scope: !5236)
!5275 = !{i64 2147569539, i64 2147569582, i64 2147569622}
!5276 = !DILocation(line: 30, column: 1, scope: !5236)
!5277 = !{i64 2147569766, i64 2147569809, i64 2147569849}
!5278 = !DILocation(line: 31, column: 1, scope: !5236)
!5279 = !{i64 2147569968, i64 2147570011, i64 2147570051}
!5280 = !DILocation(line: 32, column: 1, scope: !5236)
!5281 = !{i64 2147570183, i64 2147570226, i64 2147570266}
!5282 = !DILocation(line: 33, column: 1, scope: !5236)
!5283 = !{i64 2147570355, i64 2147570398, i64 2147570438}
!5284 = !DILocation(line: 34, column: 1, scope: !5236)
!5285 = !{i64 2147570557, i64 2147570600, i64 2147570640}
!5286 = !DILocation(line: 35, column: 1, scope: !5236)
!5287 = !{i64 2147570783, i64 2147570826, i64 2147570866}
!5288 = !DILocation(line: 36, column: 1, scope: !5236)
!5289 = !{i64 2147570982, i64 2147571025, i64 2147571065}
!5290 = !DILocation(line: 37, column: 1, scope: !5236)
!5291 = !{i64 2147571157, i64 2147571200, i64 2147571240}
!5292 = !DILocation(line: 38, column: 1, scope: !5236)
!5293 = !{i64 2147571410, i64 2147571453, i64 2147571493}
!5294 = !DILocation(line: 39, column: 1, scope: !5236)
!5295 = !{i64 2147571651, i64 2147571694, i64 2147571734}
!5296 = !DILocation(line: 40, column: 1, scope: !5236)
!5297 = !{i64 2147571886, i64 2147571929, i64 2147571969}
!5298 = !DILocation(line: 41, column: 1, scope: !5236)
!5299 = !{i64 2147572118, i64 2147572161, i64 2147572201}
!5300 = !DILocation(line: 42, column: 1, scope: !5236)
!5301 = !{i64 2147572344, i64 2147572387, i64 2147572427}
!5302 = !DILocation(line: 43, column: 1, scope: !5236)
!5303 = !{i64 2147572570, i64 2147572613, i64 2147572653}
!5304 = !DILocation(line: 44, column: 1, scope: !5236)
!5305 = !{i64 2147572796, i64 2147572839, i64 2147572879}
!5306 = !DILocation(line: 45, column: 1, scope: !5236)
!5307 = !{i64 2147573031, i64 2147573074, i64 2147573114}
!5308 = !DILocation(line: 46, column: 1, scope: !5236)
!5309 = !{i64 2147573275, i64 2147573318, i64 2147573358}
!5310 = !DILocation(line: 47, column: 1, scope: !5236)
!5311 = !{i64 2147573522, i64 2147573565, i64 2147573605}
!5312 = !DILocation(line: 48, column: 1, scope: !5236)
!5313 = !{i64 2147573754, i64 2147573797, i64 2147573837}
!5314 = !DILocation(line: 49, column: 1, scope: !5236)
!5315 = !{i64 2147573998, i64 2147574041, i64 2147574081}
!5316 = !DILocation(line: 50, column: 1, scope: !5236)
!5317 = !{i64 2147574236, i64 2147574279, i64 2147574319}
!5318 = !DILocation(line: 51, column: 1, scope: !5236)
!5319 = !{i64 2147574510, i64 2147574553, i64 2147574593}
!5320 = !DILocation(line: 52, column: 1, scope: !5236)
!5321 = !{i64 2147574748, i64 2147574791, i64 2147574831}
!5322 = !DILocation(line: 53, column: 1, scope: !5236)
!5323 = !{i64 2147579062, i64 2147579105, i64 2147579145}
!5324 = !DILocation(line: 54, column: 1, scope: !5236)
!5325 = !{i64 2147579306, i64 2147579349, i64 2147579389}
!5326 = !DILocation(line: 55, column: 1, scope: !5236)
!5327 = !{i64 2147579541, i64 2147579584, i64 2147579624}
!5328 = !DILocation(line: 56, column: 1, scope: !5236)
!5329 = !{i64 2147579791, i64 2147579834, i64 2147579874}
!5330 = !DILocation(line: 57, column: 1, scope: !5236)
!5331 = !{i64 2147580038, i64 2147580081, i64 2147580121}
!5332 = !DILocation(line: 58, column: 1, scope: !5236)
!5333 = !{i64 2147580273, i64 2147580316, i64 2147580356}
!5334 = !DILocation(line: 59, column: 1, scope: !5236)
!5335 = !{i64 2147580508, i64 2147580551, i64 2147580591}
!5336 = !DILocation(line: 60, column: 1, scope: !5236)
!5337 = !{i64 2147580743, i64 2147580786, i64 2147580826}
!5338 = !DILocation(line: 61, column: 1, scope: !5236)
!5339 = !{i64 2147580978, i64 2147581021, i64 2147581061}
!5340 = !DILocation(line: 62, column: 1, scope: !5236)
!5341 = !{i64 2147581222, i64 2147581265, i64 2147581305}
!5342 = !DILocation(line: 63, column: 1, scope: !5236)
!5343 = !{i64 2147581460, i64 2147581503, i64 2147581543}
!5344 = !DILocation(line: 64, column: 1, scope: !5236)
!5345 = !{i64 2147581701, i64 2147581744, i64 2147581784}
!5346 = !DILocation(line: 65, column: 1, scope: !5236)
!5347 = !{i64 2147581981, i64 2147582024, i64 2147582064}
!5348 = !DILocation(line: 66, column: 1, scope: !5236)
!5349 = !{i64 2147582240, i64 2147582283, i64 2147582323}
!5350 = !DILocation(line: 67, column: 1, scope: !5236)
!5351 = !{i64 2147582478, i64 2147582521, i64 2147582561}
!5352 = !DILocation(line: 68, column: 1, scope: !5236)
!5353 = !{i64 2147582707, i64 2147582750, i64 2147582790}
!5354 = !DILocation(line: 69, column: 1, scope: !5236)
!5355 = !{i64 2147582915, i64 2147582958, i64 2147582998}
!5356 = !DILocation(line: 70, column: 1, scope: !5236)
!5357 = !{i64 2147583126, i64 2147583169, i64 2147583209}
!5358 = !DILocation(line: 71, column: 1, scope: !5236)
!5359 = !{i64 2147583361, i64 2147583404, i64 2147583444}
!5360 = !DILocation(line: 72, column: 1, scope: !5236)
!5361 = !{i64 2147583590, i64 2147583633, i64 2147583673}
!5362 = !DILocation(line: 73, column: 1, scope: !5236)
!5363 = !{i64 2147583828, i64 2147583871, i64 2147583911}
!5364 = !DILocation(line: 74, column: 1, scope: !5236)
!5365 = !{i64 2147584060, i64 2147584103, i64 2147584143}
!5366 = !DILocation(line: 75, column: 1, scope: !5236)
!5367 = !{i64 2147584286, i64 2147584329, i64 2147584369}
!5368 = !DILocation(line: 76, column: 1, scope: !5236)
!5369 = !{i64 2147584503, i64 2147584546, i64 2147584586}
!5370 = !DILocation(line: 77, column: 1, scope: !5236)
!5371 = !{i64 2147584735, i64 2147584778, i64 2147584818}
!5372 = !DILocation(line: 78, column: 1, scope: !5236)
!5373 = !{i64 2147584961, i64 2147585004, i64 2147585044}
!5374 = !DILocation(line: 79, column: 1, scope: !5236)
!5375 = !{i64 2147585175, i64 2147585218, i64 2147585258}
!5376 = !DILocation(line: 80, column: 1, scope: !5236)
!5377 = !{i64 2147585395, i64 2147585438, i64 2147585478}
!5378 = !DILocation(line: 81, column: 1, scope: !5236)
!5379 = !{i64 2147585627, i64 2147585670, i64 2147585710}
!5380 = !DILocation(line: 82, column: 1, scope: !5236)
!5381 = !{i64 2147585835, i64 2147585878, i64 2147585918}
!5382 = !DILocation(line: 83, column: 1, scope: !5236)
!5383 = !{i64 2147586040, i64 2147586083, i64 2147586123}
!5384 = !DILocation(line: 84, column: 1, scope: !5236)
!5385 = !{i64 2147586257, i64 2147586300, i64 2147586340}
!5386 = !DILocation(line: 85, column: 1, scope: !5236)
!5387 = !{i64 2147586471, i64 2147586514, i64 2147586554}
!5388 = !DILocation(line: 86, column: 1, scope: !5236)
!5389 = !{i64 2147586697, i64 2147586740, i64 2147586780}
!5390 = !DILocation(line: 87, column: 1, scope: !5236)
!5391 = !{i64 2147586917, i64 2147586960, i64 2147587000}
!5392 = !DILocation(line: 88, column: 1, scope: !5236)
!5393 = !{i64 2147591183, i64 2147591226, i64 2147591266}
!5394 = !DILocation(line: 89, column: 1, scope: !5236)
!5395 = !{i64 2147591415, i64 2147591458, i64 2147591498}
!5396 = !DILocation(line: 90, column: 1, scope: !5236)
!5397 = !{i64 2147591650, i64 2147591693, i64 2147591733}
!5398 = !DILocation(line: 91, column: 1, scope: !5236)
!5399 = !{i64 2147591900, i64 2147591943, i64 2147591983}
!5400 = !DILocation(line: 92, column: 1, scope: !5236)
!5401 = !{i64 2147592150, i64 2147592193, i64 2147592233}
!5402 = !DILocation(line: 93, column: 1, scope: !5236)
!5403 = !{i64 2147592388, i64 2147592431, i64 2147592471}
!5404 = !DILocation(line: 94, column: 1, scope: !5236)
!5405 = !{i64 2147592599, i64 2147592642, i64 2147592682}
!5406 = !DILocation(line: 95, column: 1, scope: !5236)
!5407 = !{i64 2147592816, i64 2147592859, i64 2147592899}
!5408 = !DILocation(line: 96, column: 1, scope: !5236)
!5409 = !{i64 2147593012, i64 2147593055, i64 2147593095}
!5410 = !DILocation(line: 97, column: 1, scope: !5236)
!5411 = !{i64 2147593214, i64 2147593257, i64 2147593297}
!5412 = !DILocation(line: 98, column: 1, scope: !5236)
!5413 = !{i64 2147593407, i64 2147593450, i64 2147593490}
!5414 = !DILocation(line: 99, column: 1, scope: !5236)
!5415 = !{i64 2147593615, i64 2147593658, i64 2147593698}
!5416 = !DILocation(line: 100, column: 1, scope: !5236)
!5417 = !{i64 2147593811, i64 2147593854, i64 2147593894}
!5418 = !DILocation(line: 101, column: 1, scope: !5236)
!5419 = !{i64 2147594043, i64 2147594086, i64 2147594126}
!5420 = !DILocation(line: 102, column: 1, scope: !5236)
!5421 = !{i64 2147594254, i64 2147594297, i64 2147594337}
!5422 = !DILocation(line: 103, column: 1, scope: !5236)
!5423 = !{i64 2147594453, i64 2147594496, i64 2147594536}
!5424 = !DILocation(line: 104, column: 1, scope: !5236)
!5425 = !{i64 2147594628, i64 2147594671, i64 2147594711}
!5426 = !DILocation(line: 105, column: 1, scope: !5236)
!5427 = !{i64 2147594812, i64 2147594855, i64 2147594895}
!5428 = !DILocation(line: 106, column: 1, scope: !5236)
!5429 = !{i64 2147595014, i64 2147595057, i64 2147595097}
!5430 = !DILocation(line: 107, column: 1, scope: !5236)
!5431 = !{i64 2147595213, i64 2147595256, i64 2147595296}
!5432 = !DILocation(line: 108, column: 1, scope: !5236)
!5433 = !{i64 2147595379, i64 2147595422, i64 2147595462}
!5434 = !DILocation(line: 109, column: 1, scope: !5236)
!5435 = !{i64 2147595563, i64 2147595606, i64 2147595646}
!5436 = !DILocation(line: 110, column: 1, scope: !5236)
!5437 = !{i64 2147595753, i64 2147595796, i64 2147595836}
!5438 = !DILocation(line: 111, column: 1, scope: !5236)
!5439 = !{i64 2147595937, i64 2147595980, i64 2147596020}
!5440 = !DILocation(line: 112, column: 1, scope: !5236)
!5441 = !{i64 2147596151, i64 2147596194, i64 2147596234}
!5442 = !DILocation(line: 113, column: 1, scope: !5236)
!5443 = !{i64 2147596362, i64 2147596405, i64 2147596445}
!5444 = !DILocation(line: 114, column: 1, scope: !5236)
!5445 = !{i64 2147596585, i64 2147596628, i64 2147596668}
!5446 = !DILocation(line: 115, column: 1, scope: !5236)
!5447 = !{i64 2147596769, i64 2147596812, i64 2147596852}
!5448 = !DILocation(line: 116, column: 1, scope: !5236)
!5449 = !{i64 2147596983, i64 2147597026, i64 2147597066}
!5450 = !DILocation(line: 117, column: 1, scope: !5236)
!5451 = !{i64 2147597149, i64 2147597192, i64 2147597232}
!5452 = !DILocation(line: 118, column: 1, scope: !5236)
!5453 = !{i64 2147597330, i64 2147597373, i64 2147597413}
!5454 = !DILocation(line: 119, column: 1, scope: !5236)
!5455 = !{i64 2147597523, i64 2147597566, i64 2147597606}
!5456 = !DILocation(line: 120, column: 1, scope: !5236)
!5457 = !{i64 2147597749, i64 2147597792, i64 2147597832}
!5458 = !DILocation(line: 121, column: 1, scope: !5236)
!5459 = !{i64 2147597963, i64 2147598006, i64 2147598046}
!5460 = !DILocation(line: 122, column: 1, scope: !5236)
!5461 = !{i64 2147598189, i64 2147598232, i64 2147598272}
!5462 = !DILocation(line: 123, column: 1, scope: !5236)
!5463 = !{i64 2147598406, i64 2147598449, i64 2147598489}
!5464 = !DILocation(line: 124, column: 1, scope: !5236)
!5465 = !{i64 2147598683, i64 2147598726, i64 2147598766}
!5466 = !DILocation(line: 125, column: 1, scope: !5236)
!5467 = !{i64 2147598909, i64 2147598952, i64 2147598992}
!5468 = !DILocation(line: 126, column: 1, scope: !5236)
!5469 = !{i64 2147599117, i64 2147599160, i64 2147599200}
!5470 = !DILocation(line: 127, column: 1, scope: !5236)
!5471 = !{i64 2147599313, i64 2147599356, i64 2147599396}
!5472 = !DILocation(line: 128, column: 1, scope: !5236)
!5473 = !{i64 2147599578, i64 2147599621, i64 2147599661}
!5474 = !DILocation(line: 129, column: 1, scope: !5236)
!5475 = !{i64 2147599792, i64 2147599835, i64 2147599875}
!5476 = !DILocation(line: 130, column: 1, scope: !5236)
!5477 = !{i64 2147599967, i64 2147600010, i64 2147600050}
!5478 = !DILocation(line: 131, column: 1, scope: !5236)
!5479 = !{i64 2147604282, i64 2147604325, i64 2147604365}
!5480 = !DILocation(line: 132, column: 1, scope: !5236)
!5481 = !{i64 2147604481, i64 2147604524, i64 2147604564}
!5482 = !DILocation(line: 133, column: 1, scope: !5236)
!5483 = !{i64 2147604723, i64 2147604766, i64 2147604806}
!5484 = !DILocation(line: 134, column: 1, scope: !5236)
!5485 = !{i64 2147604886, i64 2147604929, i64 2147604969}
!5486 = !DILocation(line: 135, column: 1, scope: !5236)
!5487 = !{i64 2147605073, i64 2147605116, i64 2147605156}
!5488 = !DILocation(line: 136, column: 1, scope: !5236)
!5489 = !{i64 2147605266, i64 2147605309, i64 2147605349}
!5490 = !DILocation(line: 137, column: 1, scope: !5236)
!5491 = !{i64 2147605449, i64 2147605492, i64 2147605532}
!5492 = !DILocation(line: 138, column: 1, scope: !5236)
!5493 = !{i64 2147605663, i64 2147605706, i64 2147605746}
!5494 = !DILocation(line: 139, column: 1, scope: !5236)
!5495 = !{i64 2147605874, i64 2147605917, i64 2147605957}
!5496 = !DILocation(line: 140, column: 1, scope: !5236)
!5497 = !{i64 2147606094, i64 2147606137, i64 2147606177}
!5498 = !DILocation(line: 141, column: 1, scope: !5236)
!5499 = !{i64 2147606301, i64 2147606344, i64 2147606384}
!5500 = !DILocation(line: 142, column: 1, scope: !5236)
!5501 = !{i64 2147606574, i64 2147606617, i64 2147606657}
!5502 = !DILocation(line: 143, column: 1, scope: !5236)
!5503 = !{i64 2147606822, i64 2147606865, i64 2147606905}
!5504 = !DILocation(line: 144, column: 1, scope: !5236)
!5505 = !{i64 2147607021, i64 2147607064, i64 2147607104}
!5506 = !DILocation(line: 145, column: 1, scope: !5236)
!5507 = !{i64 2147607256, i64 2147607299, i64 2147607339}
!5508 = !DILocation(line: 146, column: 1, scope: !5236)
!5509 = !{i64 2147607506, i64 2147607549, i64 2147607589}
!5510 = !DILocation(line: 147, column: 1, scope: !5236)
!5511 = !{i64 2147607708, i64 2147607751, i64 2147607791}
!5512 = !DILocation(line: 148, column: 1, scope: !5236)
!5513 = !{i64 2147607931, i64 2147607974, i64 2147608014}
!5514 = !DILocation(line: 149, column: 1, scope: !5236)
!5515 = !{i64 2147608145, i64 2147608188, i64 2147608228}
!5516 = !DILocation(line: 150, column: 1, scope: !5236)
!5517 = !{i64 2147608389, i64 2147608432, i64 2147608472}
!5518 = !DILocation(line: 151, column: 1, scope: !5236)
!5519 = !{i64 2147608618, i64 2147608661, i64 2147608701}
!5520 = !DILocation(line: 152, column: 1, scope: !5236)
!5521 = !{i64 2147608847, i64 2147608890, i64 2147608930}
!5522 = !DILocation(line: 153, column: 1, scope: !5236)
!5523 = !{i64 2147609055, i64 2147609098, i64 2147609138}
!5524 = !DILocation(line: 154, column: 1, scope: !5236)
!5525 = !{i64 2147609293, i64 2147609336, i64 2147609376}
!5526 = !DILocation(line: 155, column: 1, scope: !5236)
!5527 = !{i64 2147609519, i64 2147609562, i64 2147609602}
!5528 = !DILocation(line: 156, column: 1, scope: !5236)
!5529 = !{i64 2147609778, i64 2147609821, i64 2147609861}
!5530 = !DILocation(line: 157, column: 1, scope: !5236)
!5531 = !{i64 2147609998, i64 2147610041, i64 2147610081}
!5532 = !DILocation(line: 158, column: 1, scope: !5236)
!5533 = !{i64 2147610230, i64 2147610273, i64 2147610313}
!5534 = !DILocation(line: 159, column: 1, scope: !5236)
!5535 = !{i64 2147610471, i64 2147610514, i64 2147610554}
!5536 = !DILocation(line: 160, column: 1, scope: !5236)
!5537 = !{i64 2147610712, i64 2147610755, i64 2147610795}
!5538 = !DILocation(line: 161, column: 1, scope: !5236)
!5539 = !{i64 2147610935, i64 2147610978, i64 2147611018}
!5540 = !DILocation(line: 162, column: 1, scope: !5236)
!5541 = !{i64 2147611152, i64 2147611195, i64 2147611235}
!5542 = !DILocation(line: 163, column: 1, scope: !5236)
!5543 = !{i64 2147611393, i64 2147611436, i64 2147611476}
!5544 = !DILocation(line: 164, column: 1, scope: !5236)
!5545 = !{i64 2147611580, i64 2147611623, i64 2147611663}
!5546 = !DILocation(line: 165, column: 1, scope: !5236)
!5547 = !{i64 2147611767, i64 2147611810, i64 2147611850}
!5548 = !DILocation(line: 166, column: 1, scope: !5236)
!5549 = !{i64 2147611930, i64 2147611973, i64 2147612013}
!5550 = !DILocation(line: 167, column: 1, scope: !5236)
!5551 = !{i64 2147612189, i64 2147612232, i64 2147612272}
!5552 = !DILocation(line: 168, column: 1, scope: !5236)
!5553 = !{i64 2147612412, i64 2147612455, i64 2147612495}
!5554 = !DILocation(line: 169, column: 1, scope: !5236)
!5555 = !{i64 2147612641, i64 2147612684, i64 2147612724}
!5556 = !DILocation(line: 170, column: 1, scope: !5236)
!5557 = !{i64 2147616898, i64 2147616941, i64 2147616981}
!5558 = !DILocation(line: 171, column: 1, scope: !5236)
!5559 = !{i64 2147617110, i64 2147617153, i64 2147617193}
!5560 = !DILocation(line: 172, column: 1, scope: !5236)
!5561 = !{i64 2147617331, i64 2147617374, i64 2147617414}
!5562 = !DILocation(line: 173, column: 1, scope: !5236)
!5563 = !{i64 2147617545, i64 2147617588, i64 2147617628}
!5564 = !DILocation(line: 174, column: 1, scope: !5236)
!5565 = !{i64 2147617735, i64 2147617778, i64 2147617818}
!5566 = !DILocation(line: 175, column: 1, scope: !5236)
!5567 = !{i64 2147617934, i64 2147617977, i64 2147618017}
!5568 = !DILocation(line: 176, column: 1, scope: !5236)
!5569 = !{i64 2147618139, i64 2147618182, i64 2147618222}
!5570 = !DILocation(line: 177, column: 1, scope: !5236)
!5571 = !{i64 2147618359, i64 2147618402, i64 2147618442}
!5572 = !DILocation(line: 178, column: 1, scope: !5236)
!5573 = !{i64 2147618560, i64 2147618603, i64 2147618643}
!5574 = !DILocation(line: 179, column: 1, scope: !5236)
!5575 = !{i64 2147618759, i64 2147618802, i64 2147618842}
!5576 = !DILocation(line: 180, column: 1, scope: !5236)
!5577 = !{i64 2147618964, i64 2147619007, i64 2147619047}
!5578 = !DILocation(line: 181, column: 1, scope: !5236)
!5579 = !{i64 2147619133, i64 2147619176, i64 2147619216}
!5580 = !DILocation(line: 182, column: 1, scope: !5236)
!5581 = !{i64 2147619317, i64 2147619360, i64 2147619400}
!5582 = !DILocation(line: 183, column: 1, scope: !5236)
!5583 = !{i64 2147619501, i64 2147619544, i64 2147619584}
!5584 = !DILocation(line: 184, column: 1, scope: !5236)
!5585 = !{i64 2147619688, i64 2147619731, i64 2147619771}
!5586 = !DILocation(line: 185, column: 1, scope: !5236)
!5587 = !{i64 2147619872, i64 2147619915, i64 2147619955}
!5588 = !DILocation(line: 186, column: 1, scope: !5236)
!5589 = !{i64 2147620110, i64 2147620153, i64 2147620193}
!5590 = !DILocation(line: 187, column: 1, scope: !5236)
!5591 = !{i64 2147620340, i64 2147620383, i64 2147620423}
!5592 = !DILocation(line: 188, column: 1, scope: !5236)
!5593 = !{i64 2147620569, i64 2147620612, i64 2147620652}
!5594 = !DILocation(line: 189, column: 1, scope: !5236)
!5595 = !{i64 2147620756, i64 2147620799, i64 2147620839}
!5596 = !DILocation(line: 190, column: 1, scope: !5236)
!5597 = !{i64 2147620952, i64 2147620995, i64 2147621035}
!5598 = !DILocation(line: 191, column: 1, scope: !5236)
!5599 = !{i64 2147621160, i64 2147621203, i64 2147621243}
!5600 = !DILocation(line: 192, column: 1, scope: !5236)
!5601 = !{i64 2147621372, i64 2147621415, i64 2147621455}
!5602 = !DILocation(line: 193, column: 1, scope: !5236)
!5603 = !{i64 2147621571, i64 2147621614, i64 2147621654}
!5604 = !DILocation(line: 194, column: 1, scope: !5236)
!5605 = !{i64 2147621809, i64 2147621852, i64 2147621892}
!5606 = !DILocation(line: 195, column: 1, scope: !5236)
!5607 = !{i64 2147622005, i64 2147622048, i64 2147622088}
!5608 = !DILocation(line: 196, column: 1, scope: !5236)
!5609 = !{i64 2147622207, i64 2147622250, i64 2147622290}
!5610 = !DILocation(line: 197, column: 1, scope: !5236)
!5611 = !{i64 2147622400, i64 2147622443, i64 2147622483}
!5612 = !DILocation(line: 198, column: 1, scope: !5236)
!5613 = !{i64 2147622634, i64 2147622677, i64 2147622717}
!5614 = !DILocation(line: 199, column: 1, scope: !5236)
!5615 = !{i64 2147622797, i64 2147622840, i64 2147622880}
!5616 = !DILocation(line: 200, column: 1, scope: !5236)
!5617 = !{i64 2147623036, i64 2147623079, i64 2147623119}
!5618 = !DILocation(line: 201, column: 1, scope: !5236)
!5619 = !{i64 2147623275, i64 2147623318, i64 2147623358}
!5620 = !DILocation(line: 202, column: 1, scope: !5236)
!5621 = !{i64 2147623511, i64 2147623554, i64 2147623594}
!5622 = !DILocation(line: 203, column: 1, scope: !5236)
!5623 = !{i64 2147623741, i64 2147623784, i64 2147623824}
!5624 = !DILocation(line: 204, column: 1, scope: !5236)
!5625 = !{i64 2147623928, i64 2147623971, i64 2147624011}
!5626 = !DILocation(line: 205, column: 1, scope: !5236)
!5627 = !{i64 2147624127, i64 2147624170, i64 2147624210}
!5628 = !DILocation(line: 206, column: 1, scope: !5236)
!5629 = !{i64 2147624398, i64 2147624441, i64 2147624481}
!5630 = !DILocation(line: 207, column: 1, scope: !5236)
!5631 = !{i64 2147624573, i64 2147624616, i64 2147624656}
!5632 = !DILocation(line: 208, column: 1, scope: !5236)
!5633 = !{i64 2147624807, i64 2147624850, i64 2147624890}
!5634 = !DILocation(line: 209, column: 1, scope: !5236)
!5635 = !{i64 2147625015, i64 2147625058, i64 2147625098}
!5636 = !DILocation(line: 210, column: 1, scope: !5236)
!5637 = !{i64 2147625214, i64 2147625257, i64 2147625297}
!5638 = !DILocation(line: 211, column: 1, scope: !5236)
!5639 = !{i64 2147625432, i64 2147625475, i64 2147625515}
!5640 = !DILocation(line: 212, column: 1, scope: !5236)
!5641 = !{i64 2147625622, i64 2147625665, i64 2147625705}
!5642 = !DILocation(line: 213, column: 1, scope: !5236)
!5643 = !{i64 2147625818, i64 2147625861, i64 2147625901}
!5644 = !DILocation(line: 214, column: 1, scope: !5236)
!5645 = !{i64 2147626024, i64 2147626067, i64 2147626107}
!5646 = !DILocation(line: 215, column: 1, scope: !5236)
!5647 = !{i64 2147630290, i64 2147630333, i64 2147630373}
!5648 = !DILocation(line: 216, column: 1, scope: !5236)
!5649 = !{i64 2147630504, i64 2147630547, i64 2147630587}
!5650 = !DILocation(line: 217, column: 1, scope: !5236)
!5651 = !{i64 2147630730, i64 2147630773, i64 2147630813}
!5652 = !DILocation(line: 218, column: 1, scope: !5236)
!5653 = !{i64 2147630962, i64 2147631005, i64 2147631045}
!5654 = !DILocation(line: 219, column: 1, scope: !5236)
!5655 = !{i64 2147631146, i64 2147631189, i64 2147631229}
!5656 = !DILocation(line: 220, column: 1, scope: !5236)
!5657 = !{i64 2147631355, i64 2147631398, i64 2147631438}
!5658 = !DILocation(line: 221, column: 1, scope: !5236)
!5659 = !{i64 2147631539, i64 2147631582, i64 2147631622}
!5660 = !DILocation(line: 222, column: 1, scope: !5236)
!5661 = !{i64 2147631765, i64 2147631808, i64 2147631848}
!5662 = !DILocation(line: 223, column: 1, scope: !5236)
!5663 = !{i64 2147631991, i64 2147632034, i64 2147632074}
!5664 = !DILocation(line: 224, column: 1, scope: !5236)
!5665 = !{i64 2147632217, i64 2147632260, i64 2147632300}
!5666 = !DILocation(line: 225, column: 1, scope: !5236)
!5667 = !{i64 2147632443, i64 2147632486, i64 2147632526}
!5668 = !DILocation(line: 226, column: 1, scope: !5236)
!5669 = !{i64 2147632669, i64 2147632712, i64 2147632752}
!5670 = !DILocation(line: 227, column: 1, scope: !5236)
!5671 = !{i64 2147632901, i64 2147632944, i64 2147632984}
!5672 = !DILocation(line: 228, column: 1, scope: !5236)
!5673 = !{i64 2147633139, i64 2147633182, i64 2147633222}
!5674 = !DILocation(line: 229, column: 1, scope: !5236)
!5675 = !{i64 2147633359, i64 2147633402, i64 2147633442}
!5676 = !DILocation(line: 230, column: 1, scope: !5236)
!5677 = !{i64 2147633603, i64 2147633646, i64 2147633686}
!5678 = !DILocation(line: 231, column: 1, scope: !5236)
!5679 = !{i64 2147633844, i64 2147633887, i64 2147633927}
!5680 = !DILocation(line: 232, column: 1, scope: !5236)
!5681 = !{i64 2147634079, i64 2147634122, i64 2147634162}
!5682 = !DILocation(line: 233, column: 1, scope: !5236)
!5683 = !{i64 2147634311, i64 2147634354, i64 2147634394}
!5684 = !DILocation(line: 234, column: 1, scope: !5236)
!5685 = !{i64 2147634513, i64 2147634556, i64 2147634596}
!5686 = !DILocation(line: 235, column: 1, scope: !5236)
!5687 = !{i64 2147634763, i64 2147634806, i64 2147634846}
!5688 = !DILocation(line: 236, column: 1, scope: !5236)
!5689 = !{i64 2147635001, i64 2147635044, i64 2147635084}
!5690 = !DILocation(line: 237, column: 1, scope: !5236)
!5691 = !{i64 2147635185, i64 2147635228, i64 2147635268}
!5692 = !DILocation(line: 238, column: 1, scope: !5236)
!5693 = !{i64 2147635409, i64 2147635452, i64 2147635492}
!5694 = !DILocation(line: 239, column: 1, scope: !5236)
!5695 = !{i64 2147635647, i64 2147635690, i64 2147635730}
!5696 = !DILocation(line: 240, column: 1, scope: !5236)
!5697 = !{i64 2147635885, i64 2147635928, i64 2147635968}
!5698 = !DILocation(line: 241, column: 1, scope: !5236)
!5699 = !{i64 2147636078, i64 2147636121, i64 2147636161}
!5700 = !DILocation(line: 242, column: 1, scope: !5236)
!5701 = !{i64 2147636331, i64 2147636374, i64 2147636414}
!5702 = !DILocation(line: 243, column: 1, scope: !5236)
!5703 = !{i64 2147636545, i64 2147636588, i64 2147636628}
!5704 = !DILocation(line: 244, column: 1, scope: !5236)
!5705 = !{i64 2147636753, i64 2147636796, i64 2147636836}
!5706 = !DILocation(line: 245, column: 1, scope: !5236)
!5707 = !{i64 2147636943, i64 2147636986, i64 2147637026}
!5708 = !DILocation(line: 246, column: 1, scope: !5236)
!5709 = !{i64 2147637157, i64 2147637200, i64 2147637240}
!5710 = !DILocation(line: 247, column: 1, scope: !5236)
!5711 = !{i64 2147637419, i64 2147637462, i64 2147637502}
!5712 = !DILocation(line: 248, column: 1, scope: !5236)
!5713 = !{i64 2147637630, i64 2147637673, i64 2147637713}
!5714 = !DILocation(line: 249, column: 1, scope: !5236)
!5715 = !{i64 2147637874, i64 2147637917, i64 2147637957}
!5716 = !DILocation(line: 250, column: 1, scope: !5236)
!5717 = !{i64 2147638085, i64 2147638128, i64 2147638168}
!5718 = !DILocation(line: 251, column: 1, scope: !5236)
!5719 = !{i64 2147638314, i64 2147638357, i64 2147638397}
!5720 = !DILocation(line: 252, column: 1, scope: !5236)
!5721 = !{i64 2147642640, i64 2147642683, i64 2147642723}
!5722 = !DILocation(line: 253, column: 1, scope: !5236)
!5723 = !{i64 2147642845, i64 2147642888, i64 2147642928}
!5724 = !DILocation(line: 254, column: 1, scope: !5236)
!5725 = !{i64 2147643041, i64 2147643084, i64 2147643124}
!5726 = !DILocation(line: 255, column: 1, scope: !5236)
!5727 = !{i64 2147643264, i64 2147643307, i64 2147643347}
!5728 = !DILocation(line: 256, column: 1, scope: !5236)
!5729 = !{i64 2147643427, i64 2147643470, i64 2147643510}
!5730 = !DILocation(line: 257, column: 1, scope: !5236)
!5731 = !{i64 2147643632, i64 2147643675, i64 2147643715}
!5732 = !DILocation(line: 258, column: 1, scope: !5236)
!5733 = !{i64 2147643852, i64 2147643895, i64 2147643935}
!5734 = !DILocation(line: 259, column: 1, scope: !5236)
!5735 = !{i64 2147644066, i64 2147644109, i64 2147644149}
!5736 = !DILocation(line: 260, column: 1, scope: !5236)
!5737 = !{i64 2147644280, i64 2147644323, i64 2147644363}
!5738 = !DILocation(line: 261, column: 1, scope: !5236)
!5739 = !{i64 2147644491, i64 2147644534, i64 2147644574}
!5740 = !DILocation(line: 262, column: 1, scope: !5236)
!5741 = !{i64 2147644684, i64 2147644727, i64 2147644767}
!5742 = !DILocation(line: 263, column: 1, scope: !5236)
!5743 = !{i64 2147644883, i64 2147644926, i64 2147644966}
!5744 = !DILocation(line: 264, column: 1, scope: !5236)
!5745 = !{i64 2147645079, i64 2147645122, i64 2147645162}
!5746 = !DILocation(line: 265, column: 1, scope: !5236)
!5747 = !{i64 2147645278, i64 2147645321, i64 2147645361}
!5748 = !DILocation(line: 266, column: 1, scope: !5236)
!5749 = !{i64 2147645450, i64 2147645493, i64 2147645533}
!5750 = !DILocation(line: 267, column: 1, scope: !5236)
!5751 = !{i64 2147645643, i64 2147645686, i64 2147645726}
!5752 = !DILocation(line: 268, column: 1, scope: !5236)
!5753 = !{i64 2147645839, i64 2147645882, i64 2147645922}
!5754 = !DILocation(line: 269, column: 1, scope: !5236)
!5755 = !{i64 2147646066, i64 2147646109, i64 2147646149}
!5756 = !DILocation(line: 270, column: 1, scope: !5236)
!5757 = !{i64 2147646283, i64 2147646326, i64 2147646366}
!5758 = !DILocation(line: 271, column: 1, scope: !5236)
!5759 = !{i64 2147646575, i64 2147646618, i64 2147646658}
!5760 = !DILocation(line: 272, column: 1, scope: !5236)
!5761 = !{i64 2147646807, i64 2147646850, i64 2147646890}
!5762 = !DILocation(line: 273, column: 1, scope: !5236)
!5763 = !{i64 2147647024, i64 2147647067, i64 2147647107}
!5764 = !DILocation(line: 274, column: 1, scope: !5236)
!5765 = !{i64 2147647231, i64 2147647274, i64 2147647314}
!5766 = !DILocation(line: 275, column: 1, scope: !5236)
!5767 = !{i64 2147647432, i64 2147647475, i64 2147647515}
!5768 = !DILocation(line: 276, column: 1, scope: !5236)
!5769 = !{i64 2147647664, i64 2147647707, i64 2147647747}
!5770 = !DILocation(line: 277, column: 1, scope: !5236)
!5771 = !{i64 2147647872, i64 2147647915, i64 2147647955}
!5772 = !DILocation(line: 278, column: 1, scope: !5236)
!5773 = !{i64 2147648062, i64 2147648105, i64 2147648145}
!5774 = !DILocation(line: 279, column: 1, scope: !5236)
!5775 = !{i64 2147648288, i64 2147648331, i64 2147648371}
!5776 = !DILocation(line: 280, column: 1, scope: !5236)
!5777 = !{i64 2147648477, i64 2147648520, i64 2147648560}
!5778 = !DILocation(line: 281, column: 1, scope: !5236)
!5779 = !{i64 2147648748, i64 2147648791, i64 2147648831}
!5780 = !DILocation(line: 282, column: 1, scope: !5236)
!5781 = !{i64 2147648968, i64 2147649011, i64 2147649051}
!5782 = !DILocation(line: 283, column: 1, scope: !5236)
!5783 = !{i64 2147649221, i64 2147649264, i64 2147649304}
!5784 = !DILocation(line: 284, column: 1, scope: !5236)
!5785 = !{i64 2147649429, i64 2147649472, i64 2147649512}
!5786 = !DILocation(line: 285, column: 1, scope: !5236)
!5787 = !{i64 2147649661, i64 2147649704, i64 2147649744}
!5788 = !DILocation(line: 286, column: 1, scope: !5236)
!5789 = !{i64 2147649872, i64 2147649915, i64 2147649955}
!5790 = !DILocation(line: 287, column: 1, scope: !5236)
!5791 = !{i64 2147650062, i64 2147650105, i64 2147650145}
!5792 = !DILocation(line: 288, column: 1, scope: !5236)
!5793 = !{i64 2147650276, i64 2147650319, i64 2147650359}
!5794 = !DILocation(line: 289, column: 1, scope: !5236)
!5795 = !{i64 2147650475, i64 2147650518, i64 2147650558}
!5796 = !DILocation(line: 290, column: 1, scope: !5236)
!5797 = !{i64 2147650662, i64 2147650705, i64 2147650745}
!5798 = !DILocation(line: 291, column: 1, scope: !5236)
!5799 = !{i64 2147650870, i64 2147650913, i64 2147650953}
!5800 = !DILocation(line: 292, column: 1, scope: !5236)
!5801 = !{i64 2147651099, i64 2147651142, i64 2147651182}
!5802 = !DILocation(line: 293, column: 1, scope: !5236)
!5803 = !{i64 2147651301, i64 2147651344, i64 2147651384}
!5804 = !DILocation(line: 294, column: 1, scope: !5236)
!5805 = !{i64 2147651500, i64 2147651543, i64 2147651583}
!5806 = !DILocation(line: 295, column: 1, scope: !5236)
!5807 = !{i64 2147655778, i64 2147655821, i64 2147655861}
!5808 = !DILocation(line: 297, column: 1, scope: !5236)
!5809 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5810)
!5810 = !{!5811, !5812}
!5811 = !DILocalVariable(name: "arg", arg: 1, scope: !5809, file: !129, line: 30, type: !138)
!5812 = !DILocalVariable(name: "key", scope: !5809, file: !129, line: 32, type: !121)
!5813 = !DILocation(line: 0, scope: !5809)
!5814 = !DILocation(line: 37, column: 2, scope: !5809)
!5815 = !DILocation(line: 38, column: 2, scope: !5809)
!5816 = !DILocation(line: 55, column: 2, scope: !5817, inlinedAt: !5824)
!5817 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5821)
!5818 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5819 = !DISubroutineType(types: !5820)
!5820 = !{!32}
!5821 = !{!5822, !5823}
!5822 = !DILocalVariable(name: "key", scope: !5817, file: !5818, line: 44, type: !32)
!5823 = !DILocalVariable(name: "tmp", scope: !5817, file: !5818, line: 53, type: !32)
!5824 = distinct !DILocation(line: 40, column: 8, scope: !5809)
!5825 = !{i64 2184727}
!5826 = !DILocation(line: 0, scope: !5817, inlinedAt: !5824)
!5827 = !DILocalVariable(name: "key", arg: 1, scope: !5828, file: !5818, line: 84, type: !32)
!5828 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5831)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{null, !32}
!5831 = !{!5827}
!5832 = !DILocation(line: 0, scope: !5828, inlinedAt: !5833)
!5833 = distinct !DILocation(line: 47, column: 2, scope: !5809)
!5834 = !DILocation(line: 95, column: 2, scope: !5828, inlinedAt: !5833)
!5835 = !{i64 2185544}
!5836 = !DILocation(line: 51, column: 18, scope: !5809)
!5837 = !DILocation(line: 53, column: 2, scope: !5809)
!5838 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5839, file: !5839, line: 1609, type: !3255, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5839 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5840 = !DILocation(line: 1611, column: 3, scope: !5838)
!5841 = !DILocation(line: 1612, column: 1, scope: !5838)
!5842 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5839, file: !5839, line: 1629, type: !3255, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5843 = !DILocation(line: 1631, column: 3, scope: !5842)
!5844 = !DILocation(line: 1632, column: 1, scope: !5842)
!5845 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5846)
!5846 = !{!5847}
!5847 = !DILocalVariable(name: "dev", arg: 1, scope: !5845, file: !171, line: 26, type: !179)
!5848 = !DILocation(line: 0, scope: !5845)
!5849 = !DILocation(line: 68, column: 2, scope: !5845)
!5850 = !DILocation(line: 25, column: 6, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5852 = !DILocation(line: 25, column: 10, scope: !5851)
!5853 = !DILocation(line: 25, column: 6, scope: !341)
!5854 = !DILocation(line: 26, column: 3, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !294, line: 26, column: 3)
!5856 = distinct !DILexicalBlock(scope: !5851, file: !294, line: 25, column: 19)
!5857 = !DILocation(line: 27, column: 2, scope: !5856)
!5858 = !DILocation(line: 29, column: 8, scope: !347)
!5859 = !DILocation(line: 0, scope: !347)
!5860 = !DILocation(line: 29, column: 6, scope: !341)
!5861 = !DILocation(line: 30, column: 14, scope: !341)
!5862 = !DILocation(line: 30, column: 2, scope: !341)
!5863 = distinct !DISubprogram(name: "k_queue_get", scope: !3691, file: !3691, line: 649, type: !5864, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5871)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!102, !5866, !5867}
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5868)
!5868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5869)
!5869 = !{!5870}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5868, file: !201, line: 66, baseType: !200, size: 64)
!5871 = !{!5872, !5873}
!5872 = !DILocalVariable(name: "queue", arg: 1, scope: !5863, file: !3691, line: 649, type: !5866)
!5873 = !DILocalVariable(name: "timeout", arg: 2, scope: !5863, file: !3691, line: 649, type: !5867)
!5874 = !DILocation(line: 0, scope: !5863)
!5875 = !DILocation(line: 658, column: 2, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5863, file: !3691, line: 658, column: 2)
!5877 = !{i64 2155059582}
!5878 = !DILocation(line: 659, column: 9, scope: !5863)
!5879 = !DILocation(line: 659, column: 2, scope: !5863)
!5880 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3255, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5881)
!5881 = !{!5882}
!5882 = !DILocalVariable(name: "i", scope: !5880, file: !294, line: 35, type: !103)
!5883 = !DILocation(line: 0, scope: !5880)
!5884 = !DILocation(line: 38, column: 3, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !294, line: 38, column: 3)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !294, line: 37, column: 46)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !294, line: 37, column: 2)
!5888 = distinct !DILexicalBlock(scope: !5880, file: !294, line: 37, column: 2)
!5889 = !DILocation(line: 45, column: 2, scope: !5880)
!5890 = !DILocation(line: 46, column: 1, scope: !5880)
!5891 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5892, file: !5892, line: 57, type: !5893, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !5939)
!5892 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5893 = !DISubroutineType(types: !5894)
!5894 = !{null, !32, !5895}
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 32)
!5896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5897)
!5897 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2812, line: 141, baseType: !5898)
!5898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2812, line: 97, size: 256, elements: !5899)
!5899 = !{!5900}
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5898, file: !2812, line: 107, baseType: !5901, size: 256)
!5901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2812, line: 98, size: 256, elements: !5902)
!5902 = !{!5903, !5908, !5913, !5918, !5923, !5928, !5933, !5938}
!5903 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 99, baseType: !5904, size: 32)
!5904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 99, size: 32, elements: !5905)
!5905 = !{!5906, !5907}
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5904, file: !2812, line: 99, baseType: !121, size: 32)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5904, file: !2812, line: 99, baseType: !121, size: 32)
!5908 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 100, baseType: !5909, size: 32, offset: 32)
!5909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 100, size: 32, elements: !5910)
!5910 = !{!5911, !5912}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5909, file: !2812, line: 100, baseType: !121, size: 32)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5909, file: !2812, line: 100, baseType: !121, size: 32)
!5913 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 101, baseType: !5914, size: 32, offset: 64)
!5914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 101, size: 32, elements: !5915)
!5915 = !{!5916, !5917}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5914, file: !2812, line: 101, baseType: !121, size: 32)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5914, file: !2812, line: 101, baseType: !121, size: 32)
!5918 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 102, baseType: !5919, size: 32, offset: 96)
!5919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 102, size: 32, elements: !5920)
!5920 = !{!5921, !5922}
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5919, file: !2812, line: 102, baseType: !121, size: 32)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5919, file: !2812, line: 102, baseType: !121, size: 32)
!5923 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 103, baseType: !5924, size: 32, offset: 128)
!5924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 103, size: 32, elements: !5925)
!5925 = !{!5926, !5927}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5924, file: !2812, line: 103, baseType: !121, size: 32)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5924, file: !2812, line: 103, baseType: !121, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 104, baseType: !5929, size: 32, offset: 160)
!5929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 104, size: 32, elements: !5930)
!5930 = !{!5931, !5932}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5929, file: !2812, line: 104, baseType: !121, size: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5929, file: !2812, line: 104, baseType: !121, size: 32)
!5933 = !DIDerivedType(tag: DW_TAG_member, scope: !5901, file: !2812, line: 105, baseType: !5934, size: 32, offset: 192)
!5934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5901, file: !2812, line: 105, size: 32, elements: !5935)
!5935 = !{!5936, !5937}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5934, file: !2812, line: 105, baseType: !121, size: 32)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5934, file: !2812, line: 105, baseType: !121, size: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5901, file: !2812, line: 106, baseType: !121, size: 32, offset: 224)
!5939 = !{!5940, !5941}
!5940 = !DILocalVariable(name: "reason", arg: 1, scope: !5891, file: !5892, line: 57, type: !32)
!5941 = !DILocalVariable(name: "esf", arg: 2, scope: !5891, file: !5892, line: 57, type: !5895)
!5942 = !DILocation(line: 0, scope: !5891)
!5943 = !DILocation(line: 63, column: 2, scope: !5891)
!5944 = !DILocation(line: 64, column: 1, scope: !5891)
!5945 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5892, file: !5892, line: 82, type: !5946, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !5961)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !5895, !5948}
!5948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5949, size: 32)
!5949 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !5950)
!5950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !5951)
!5951 = !{!5952, !5953, !5954, !5955, !5956, !5957, !5958, !5959, !5960}
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5950, file: !446, line: 26, baseType: !121, size: 32)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5950, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5950, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5950, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5950, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5950, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5950, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5950, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5950, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!5961 = !{!5962, !5963, !5964}
!5962 = !DILocalVariable(name: "esf", arg: 1, scope: !5945, file: !5892, line: 82, type: !5895)
!5963 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5945, file: !5892, line: 82, type: !5948)
!5964 = !DILocalVariable(name: "reason", scope: !5945, file: !5892, line: 88, type: !32)
!5965 = !DILocation(line: 0, scope: !5945)
!5966 = !DILocation(line: 88, column: 35, scope: !5945)
!5967 = !DILocation(line: 108, column: 2, scope: !5945)
!5968 = !DILocation(line: 131, column: 1, scope: !5945)
!5969 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5892, file: !5892, line: 133, type: !5970, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2692, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !102}
!5972 = !{!5973, !5974, !5975}
!5973 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5969, file: !5892, line: 133, type: !102)
!5974 = !DILocalVariable(name: "ssf_contents", scope: !5969, file: !5892, line: 135, type: !882)
!5975 = !DILocalVariable(name: "oops_esf", scope: !5969, file: !5892, line: 136, type: !5897)
!5976 = !DILocation(line: 0, scope: !5969)
!5977 = !DILocation(line: 136, column: 2, scope: !5969)
!5978 = !DILocation(line: 136, column: 15, scope: !5969)
!5979 = !DILocation(line: 139, column: 22, scope: !5969)
!5980 = !DILocation(line: 139, column: 17, scope: !5969)
!5981 = !DILocation(line: 139, column: 20, scope: !5969)
!5982 = !DILocation(line: 141, column: 2, scope: !5969)
!5983 = !DILocation(line: 142, column: 2, scope: !5969)
!5984 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5985, file: !5985, line: 40, type: !5829, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !5986)
!5985 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5986 = !{!5987}
!5987 = !DILocalVariable(name: "irq", arg: 1, scope: !5984, file: !5985, line: 40, type: !32)
!5988 = !DILocation(line: 0, scope: !5984)
!5989 = !DILocation(line: 42, column: 2, scope: !5984)
!5990 = !DILocation(line: 43, column: 1, scope: !5984)
!5991 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !5992, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{null, !780}
!5994 = !{!5995}
!5995 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5991, file: !515, line: 1684, type: !780)
!5996 = !DILocation(line: 0, scope: !5991)
!5997 = !DILocation(line: 1686, column: 23, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5991, file: !515, line: 1686, column: 7)
!5999 = !DILocation(line: 1686, column: 7, scope: !5991)
!6000 = !DILocation(line: 1688, column: 5, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5998, file: !515, line: 1687, column: 3)
!6002 = !{i64 2151254249}
!6003 = !DILocation(line: 1689, column: 81, scope: !6001)
!6004 = !DILocation(line: 1689, column: 60, scope: !6001)
!6005 = !DILocation(line: 1689, column: 34, scope: !6001)
!6006 = !DILocation(line: 1689, column: 5, scope: !6001)
!6007 = !DILocation(line: 1689, column: 43, scope: !6001)
!6008 = !DILocation(line: 1690, column: 5, scope: !6001)
!6009 = !{i64 2151254363}
!6010 = !DILocation(line: 1691, column: 3, scope: !6001)
!6011 = !DILocation(line: 1692, column: 1, scope: !5991)
!6012 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5985, file: !5985, line: 45, type: !5829, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6013)
!6013 = !{!6014}
!6014 = !DILocalVariable(name: "irq", arg: 1, scope: !6012, file: !5985, line: 45, type: !32)
!6015 = !DILocation(line: 0, scope: !6012)
!6016 = !DILocation(line: 47, column: 2, scope: !6012)
!6017 = !DILocation(line: 48, column: 1, scope: !6012)
!6018 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !5992, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6019)
!6019 = !{!6020}
!6020 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6018, file: !515, line: 1722, type: !780)
!6021 = !DILocation(line: 0, scope: !6018)
!6022 = !DILocation(line: 1724, column: 23, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6018, file: !515, line: 1724, column: 7)
!6024 = !DILocation(line: 1724, column: 7, scope: !6018)
!6025 = !DILocation(line: 1726, column: 81, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !515, line: 1725, column: 3)
!6027 = !DILocation(line: 1726, column: 60, scope: !6026)
!6028 = !DILocation(line: 1726, column: 34, scope: !6026)
!6029 = !DILocation(line: 1726, column: 5, scope: !6026)
!6030 = !DILocation(line: 1726, column: 43, scope: !6026)
!6031 = !DILocation(line: 271, column: 3, scope: !6032, inlinedAt: !6034)
!6032 = distinct !DISubprogram(name: "__DSB", scope: !6033, file: !6033, line: 269, type: !3255, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !317)
!6033 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6034 = distinct !DILocation(line: 1727, column: 5, scope: !6026)
!6035 = !{i64 3708632}
!6036 = !DILocation(line: 260, column: 3, scope: !6037, inlinedAt: !6038)
!6037 = distinct !DISubprogram(name: "__ISB", scope: !6033, file: !6033, line: 258, type: !3255, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !317)
!6038 = distinct !DILocation(line: 1728, column: 5, scope: !6026)
!6039 = !{i64 3708349}
!6040 = !DILocation(line: 1729, column: 3, scope: !6026)
!6041 = !DILocation(line: 1730, column: 1, scope: !6018)
!6042 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5985, file: !5985, line: 50, type: !6043, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6045)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{!103, !32}
!6045 = !{!6046}
!6046 = !DILocalVariable(name: "irq", arg: 1, scope: !6042, file: !5985, line: 50, type: !32)
!6047 = !DILocation(line: 0, scope: !6042)
!6048 = !DILocation(line: 52, column: 20, scope: !6042)
!6049 = !DILocation(line: 52, column: 9, scope: !6042)
!6050 = !DILocation(line: 52, column: 41, scope: !6042)
!6051 = !DILocation(line: 52, column: 39, scope: !6042)
!6052 = !DILocation(line: 52, column: 2, scope: !6042)
!6053 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5985, file: !5985, line: 64, type: !6054, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6056)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !32, !32, !121}
!6056 = !{!6057, !6058, !6059}
!6057 = !DILocalVariable(name: "irq", arg: 1, scope: !6053, file: !5985, line: 64, type: !32)
!6058 = !DILocalVariable(name: "prio", arg: 2, scope: !6053, file: !5985, line: 64, type: !32)
!6059 = !DILocalVariable(name: "flags", arg: 3, scope: !6053, file: !5985, line: 64, type: !121)
!6060 = !DILocation(line: 0, scope: !6053)
!6061 = !DILocation(line: 83, column: 8, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !5985, line: 82, column: 9)
!6063 = distinct !DILexicalBlock(scope: !6053, file: !5985, line: 76, column: 6)
!6064 = !DILocation(line: 95, column: 2, scope: !6053)
!6065 = !DILocation(line: 96, column: 1, scope: !6053)
!6066 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6067, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6069)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !780, !121}
!6069 = !{!6070, !6071}
!6070 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6066, file: !515, line: 1814, type: !780)
!6071 = !DILocalVariable(name: "priority", arg: 2, scope: !6066, file: !515, line: 1814, type: !121)
!6072 = !DILocation(line: 0, scope: !6066)
!6073 = !DILocation(line: 0, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6066, file: !515, line: 1816, column: 7)
!6075 = !DILocation(line: 1816, column: 7, scope: !6066)
!6076 = !DILocation(line: 1824, column: 1, scope: !6066)
!6077 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5985, file: !5985, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2703, retainedNodes: !6078)
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "unused", arg: 1, scope: !6077, file: !5985, line: 155, type: !13)
!6080 = !DILocation(line: 0, scope: !6077)
!6081 = !DILocation(line: 159, column: 2, scope: !6077)
!6082 = !DILocation(line: 160, column: 1, scope: !6077)
!6083 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6084, file: !6084, line: 87, type: !3255, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !317)
!6084 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6085 = !DILocation(line: 89, column: 2, scope: !6083)
!6086 = !DILocation(line: 90, column: 2, scope: !6083)
!6087 = !DILocation(line: 91, column: 1, scope: !6083)
!6088 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6084, file: !6084, line: 23, type: !3255, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6089 = !DISubprogram(name: "z_arm_int_exit", scope: !6090, file: !6090, line: 153, type: !3255, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6090 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6091 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6092, file: !6092, line: 256, type: !3255, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !317)
!6092 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6093 = !DILocation(line: 258, column: 2, scope: !6091)
!6094 = !DILocation(line: 260, column: 2, scope: !6091)
!6095 = !DILocation(line: 262, column: 2, scope: !6091)
!6096 = !DILocation(line: 263, column: 2, scope: !6091)
!6097 = !DILocation(line: 267, column: 2, scope: !6091)
!6098 = !DILocation(line: 268, column: 2, scope: !6091)
!6099 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6092, file: !6092, line: 53, type: !3255, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !317)
!6100 = !DILocation(line: 55, column: 12, scope: !6099)
!6101 = !DILocation(line: 271, column: 3, scope: !6102, inlinedAt: !6103)
!6102 = distinct !DISubprogram(name: "__DSB", scope: !6033, file: !6033, line: 269, type: !3255, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !317)
!6103 = distinct !DILocation(line: 56, column: 2, scope: !6099)
!6104 = !{i64 3707303}
!6105 = !DILocation(line: 260, column: 3, scope: !6106, inlinedAt: !6107)
!6106 = distinct !DISubprogram(name: "__ISB", scope: !6033, file: !6033, line: 258, type: !3255, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !317)
!6107 = distinct !DILocation(line: 57, column: 2, scope: !6099)
!6108 = !{i64 3707020}
!6109 = !DILocation(line: 58, column: 1, scope: !6099)
!6110 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6092, file: !6092, line: 96, type: !3255, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !317)
!6111 = !DILocation(line: 103, column: 13, scope: !6110)
!6112 = !DILocation(line: 975, column: 3, scope: !6113, inlinedAt: !6118)
!6113 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6033, file: !6033, line: 971, type: !6114, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6116)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{!121}
!6116 = !{!6117}
!6117 = !DILocalVariable(name: "result", scope: !6113, file: !6033, line: 973, type: !121)
!6118 = distinct !DILocation(line: 189, column: 16, scope: !6110)
!6119 = !{i64 3728133}
!6120 = !DILocation(line: 0, scope: !6113, inlinedAt: !6118)
!6121 = !DILocation(line: 189, column: 32, scope: !6110)
!6122 = !DILocalVariable(name: "control", arg: 1, scope: !6123, file: !6033, line: 1001, type: !121)
!6123 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6033, file: !6033, line: 1001, type: !6124, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6126)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{null, !121}
!6126 = !{!6122}
!6127 = !DILocation(line: 0, scope: !6123, inlinedAt: !6128)
!6128 = distinct !DILocation(line: 189, column: 2, scope: !6110)
!6129 = !DILocation(line: 1003, column: 3, scope: !6123, inlinedAt: !6128)
!6130 = !{i64 3728853}
!6131 = !DILocation(line: 260, column: 3, scope: !6106, inlinedAt: !6132)
!6132 = distinct !DILocation(line: 1004, column: 3, scope: !6123, inlinedAt: !6128)
!6133 = !DILocation(line: 191, column: 1, scope: !6110)
!6134 = distinct !DISubprogram(name: "arch_swap", scope: !6135, file: !6135, line: 33, type: !6043, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6136)
!6135 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6136 = !{!6137}
!6137 = !DILocalVariable(name: "key", arg: 1, scope: !6134, file: !6135, line: 33, type: !32)
!6138 = !DILocation(line: 0, scope: !6134)
!6139 = !DILocation(line: 36, column: 2, scope: !6134)
!6140 = !DILocation(line: 36, column: 17, scope: !6134)
!6141 = !DILocation(line: 36, column: 25, scope: !6134)
!6142 = !DILocation(line: 37, column: 37, scope: !6134)
!6143 = !DILocation(line: 37, column: 17, scope: !6134)
!6144 = !DILocation(line: 37, column: 35, scope: !6134)
!6145 = !DILocation(line: 41, column: 12, scope: !6134)
!6146 = !DILocalVariable(name: "key", arg: 1, scope: !6147, file: !5818, line: 84, type: !32)
!6147 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6148)
!6148 = !{!6146}
!6149 = !DILocation(line: 0, scope: !6147, inlinedAt: !6150)
!6150 = distinct !DILocation(line: 44, column: 2, scope: !6134)
!6151 = !DILocation(line: 95, column: 2, scope: !6147, inlinedAt: !6150)
!6152 = !{i64 2277804}
!6153 = !DILocation(line: 53, column: 9, scope: !6134)
!6154 = !DILocation(line: 53, column: 24, scope: !6134)
!6155 = !DILocation(line: 53, column: 2, scope: !6134)
!6156 = distinct !DISubprogram(name: "arch_new_thread", scope: !6157, file: !6157, line: 56, type: !6158, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !6265)
!6157 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6158 = !DISubroutineType(types: !6159)
!6159 = !{null, !6160, !6260, !344, !3569, !102, !102, !102}
!6160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6161, size: 32)
!6161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6162)
!6162 = !{!6163, !6221, !6233, !6234, !6235, !6236, !6242, !6255}
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6161, file: !379, line: 247, baseType: !6164, size: 384)
!6164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6165)
!6165 = !{!6166, !6190, !6197, !6198, !6199, !6208, !6209, !6210}
!6166 = !DIDerivedType(tag: DW_TAG_member, scope: !6164, file: !379, line: 60, baseType: !6167, size: 64)
!6167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6164, file: !379, line: 60, size: 64, elements: !6168)
!6168 = !{!6169, !6184}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6167, file: !379, line: 61, baseType: !6170, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6171)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6172)
!6172 = !{!6173, !6179}
!6173 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !325, line: 38, baseType: !6174, size: 32)
!6174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !325, line: 38, size: 32, elements: !6175)
!6175 = !{!6176, !6178}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6174, file: !325, line: 39, baseType: !6177, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6171, size: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6174, file: !325, line: 40, baseType: !6177, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !325, line: 42, baseType: !6180, size: 32, offset: 32)
!6180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !325, line: 42, size: 32, elements: !6181)
!6181 = !{!6182, !6183}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6180, file: !325, line: 43, baseType: !6177, size: 32)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6180, file: !325, line: 44, baseType: !6177, size: 32)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6167, file: !379, line: 62, baseType: !6185, size: 64)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6186)
!6186 = !{!6187}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6185, file: !404, line: 50, baseType: !6188, size: 64)
!6188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6189, size: 64, elements: !363)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6164, file: !379, line: 68, baseType: !6191, size: 32, offset: 64)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6193)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6194)
!6194 = !{!6195}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6193, file: !320, line: 232, baseType: !6196, size: 64)
!6196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6171)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6164, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6164, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6199 = !DIDerivedType(tag: DW_TAG_member, scope: !6164, file: !379, line: 90, baseType: !6200, size: 16, offset: 112)
!6200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6164, file: !379, line: 90, size: 16, elements: !6201)
!6201 = !{!6202, !6207}
!6202 = !DIDerivedType(tag: DW_TAG_member, scope: !6200, file: !379, line: 91, baseType: !6203, size: 16)
!6203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6200, file: !379, line: 91, size: 16, elements: !6204)
!6204 = !{!6205, !6206}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6203, file: !379, line: 96, baseType: !425, size: 8)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6203, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6200, file: !379, line: 100, baseType: !429, size: 16)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6164, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6164, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6164, file: !379, line: 131, baseType: !6211, size: 192, offset: 192)
!6211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6212)
!6212 = !{!6213, !6214, !6220}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6211, file: !320, line: 245, baseType: !6170, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6211, file: !320, line: 246, baseType: !6215, size: 32, offset: 64)
!6215 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6216)
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 32)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !6219}
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6211, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6161, file: !379, line: 250, baseType: !6222, size: 288, offset: 384)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6223)
!6223 = !{!6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6222, file: !446, line: 26, baseType: !121, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6222, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6222, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6222, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6222, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6222, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6222, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6222, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6222, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6161, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6161, file: !379, line: 256, baseType: !6192, size: 64, offset: 704)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6161, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6161, file: !379, line: 300, baseType: !6237, size: 96, offset: 800)
!6237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6238)
!6238 = !{!6239, !6240, !6241}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6237, file: !379, line: 153, baseType: !22, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6237, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6237, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6161, file: !379, line: 325, baseType: !6243, size: 32, offset: 896)
!6243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6244, size: 32)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6245)
!6245 = !{!6246, !6252, !6253}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6244, file: !296, line: 5074, baseType: !6247, size: 96)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6248)
!6248 = !{!6249, !6250, !6251}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6247, file: !472, line: 57, baseType: !475, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6247, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6247, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6244, file: !296, line: 5075, baseType: !6192, size: 64, offset: 96)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6244, file: !296, line: 5076, baseType: !6254, offset: 160)
!6254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6161, file: !379, line: 343, baseType: !6256, size: 64, offset: 928)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6257)
!6257 = !{!6258, !6259}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6256, file: !446, line: 63, baseType: !121, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6256, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 32)
!6261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3570, line: 44, baseType: !6262)
!6262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2257, line: 47, size: 8, elements: !6263)
!6263 = !{!6264}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6262, file: !2257, line: 48, baseType: !146, size: 8)
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273}
!6266 = !DILocalVariable(name: "thread", arg: 1, scope: !6156, file: !6157, line: 56, type: !6160)
!6267 = !DILocalVariable(name: "stack", arg: 2, scope: !6156, file: !6157, line: 56, type: !6260)
!6268 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6156, file: !6157, line: 57, type: !344)
!6269 = !DILocalVariable(name: "entry", arg: 4, scope: !6156, file: !6157, line: 57, type: !3569)
!6270 = !DILocalVariable(name: "p1", arg: 5, scope: !6156, file: !6157, line: 58, type: !102)
!6271 = !DILocalVariable(name: "p2", arg: 6, scope: !6156, file: !6157, line: 58, type: !102)
!6272 = !DILocalVariable(name: "p3", arg: 7, scope: !6156, file: !6157, line: 58, type: !102)
!6273 = !DILocalVariable(name: "iframe", scope: !6156, file: !6157, line: 60, type: !2810)
!6274 = !DILocation(line: 0, scope: !6156)
!6275 = !DILocation(line: 85, column: 11, scope: !6156)
!6276 = !DILocation(line: 93, column: 10, scope: !6156)
!6277 = !DILocation(line: 98, column: 13, scope: !6156)
!6278 = !DILocation(line: 100, column: 15, scope: !6156)
!6279 = !DILocation(line: 100, column: 10, scope: !6156)
!6280 = !DILocation(line: 100, column: 13, scope: !6156)
!6281 = !DILocation(line: 101, column: 15, scope: !6156)
!6282 = !DILocation(line: 101, column: 10, scope: !6156)
!6283 = !DILocation(line: 101, column: 13, scope: !6156)
!6284 = !DILocation(line: 102, column: 15, scope: !6156)
!6285 = !DILocation(line: 102, column: 10, scope: !6156)
!6286 = !DILocation(line: 102, column: 13, scope: !6156)
!6287 = !DILocation(line: 103, column: 15, scope: !6156)
!6288 = !DILocation(line: 103, column: 10, scope: !6156)
!6289 = !DILocation(line: 103, column: 13, scope: !6156)
!6290 = !DILocation(line: 106, column: 10, scope: !6156)
!6291 = !DILocation(line: 106, column: 15, scope: !6156)
!6292 = !DILocation(line: 122, column: 29, scope: !6156)
!6293 = !DILocation(line: 122, column: 23, scope: !6156)
!6294 = !DILocation(line: 122, column: 27, scope: !6156)
!6295 = !DILocation(line: 123, column: 15, scope: !6156)
!6296 = !DILocation(line: 123, column: 23, scope: !6156)
!6297 = !DILocation(line: 143, column: 1, scope: !6156)
!6298 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6157, file: !6157, line: 385, type: !6299, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !6302)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!121, !6301, !6301}
!6301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6302 = !{!6303, !6304, !6305, !6308}
!6303 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6298, file: !6157, line: 385, type: !6301)
!6304 = !DILocalVariable(name: "psp", arg: 2, scope: !6298, file: !6157, line: 385, type: !6301)
!6305 = !DILocalVariable(name: "thread", scope: !6298, file: !6157, line: 388, type: !6306)
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6161)
!6308 = !DILocalVariable(name: "guard_len", scope: !6298, file: !6157, line: 405, type: !121)
!6309 = !DILocation(line: 0, scope: !6298)
!6310 = !DILocation(line: 388, column: 34, scope: !6298)
!6311 = !DILocation(line: 390, column: 13, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6298, file: !6157, line: 390, column: 6)
!6313 = !DILocation(line: 390, column: 6, scope: !6298)
!6314 = !DILocation(line: 438, column: 6, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6298, file: !6157, line: 438, column: 6)
!6316 = !DILocation(line: 438, column: 6, scope: !6298)
!6317 = !DILocation(line: 442, column: 3, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !6157, line: 440, column: 22)
!6319 = !DILocation(line: 455, column: 1, scope: !6298)
!6320 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6157, file: !6157, line: 530, type: !6321, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{null, !6160, !344, !3569}
!6323 = !{!6324, !6325, !6326}
!6324 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6320, file: !6157, line: 530, type: !6160)
!6325 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6320, file: !6157, line: 530, type: !344)
!6326 = !DILocalVariable(name: "_main", arg: 3, scope: !6320, file: !6157, line: 531, type: !3569)
!6327 = !DILocation(line: 0, scope: !6320)
!6328 = !DILocation(line: 535, column: 11, scope: !6320)
!6329 = !DILocation(line: 560, column: 2, scope: !6320)
!6330 = !DILocation(line: 576, column: 2, scope: !6320)
!6331 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6332 = !DILocation(line: 603, column: 2, scope: !6320)
!6333 = distinct !DISubprogram(name: "z_arm_fault", scope: !6334, file: !6334, line: 1036, type: !6335, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6350)
!6334 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6335 = !DISubroutineType(types: !6336)
!6336 = !{null, !121, !121, !121, !6337}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6339)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6340)
!6340 = !{!6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6339, file: !446, line: 26, baseType: !121, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6339, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6339, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6339, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6339, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6339, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6339, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6339, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6339, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6350 = !{!6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360}
!6351 = !DILocalVariable(name: "msp", arg: 1, scope: !6333, file: !6334, line: 1036, type: !121)
!6352 = !DILocalVariable(name: "psp", arg: 2, scope: !6333, file: !6334, line: 1036, type: !121)
!6353 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6333, file: !6334, line: 1036, type: !121)
!6354 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6333, file: !6334, line: 1037, type: !6337)
!6355 = !DILocalVariable(name: "reason", scope: !6333, file: !6334, line: 1039, type: !121)
!6356 = !DILocalVariable(name: "fault", scope: !6333, file: !6334, line: 1040, type: !103)
!6357 = !DILocalVariable(name: "recoverable", scope: !6333, file: !6334, line: 1041, type: !157)
!6358 = !DILocalVariable(name: "nested_exc", scope: !6333, file: !6334, line: 1041, type: !157)
!6359 = !DILocalVariable(name: "esf", scope: !6333, file: !6334, line: 1042, type: !2878)
!6360 = !DILocalVariable(name: "esf_copy", scope: !6333, file: !6334, line: 1047, type: !2879)
!6361 = !DILocation(line: 0, scope: !6333)
!6362 = !DILocation(line: 1040, column: 19, scope: !6333)
!6363 = !DILocation(line: 1040, column: 24, scope: !6333)
!6364 = !DILocation(line: 1041, column: 2, scope: !6333)
!6365 = !DILocation(line: 1047, column: 2, scope: !6333)
!6366 = !DILocation(line: 1047, column: 15, scope: !6333)
!6367 = !DILocalVariable(name: "key", arg: 1, scope: !6368, file: !5818, line: 84, type: !32)
!6368 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6369)
!6369 = !{!6367}
!6370 = !DILocation(line: 0, scope: !6368, inlinedAt: !6371)
!6371 = distinct !DILocation(line: 1050, column: 2, scope: !6333)
!6372 = !DILocation(line: 95, column: 2, scope: !6368, inlinedAt: !6371)
!6373 = !{i64 2311048}
!6374 = !DILocation(line: 1055, column: 9, scope: !6333)
!6375 = !DILocation(line: 1063, column: 11, scope: !6333)
!6376 = !DILocation(line: 1064, column: 6, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6333, file: !6334, line: 1064, column: 6)
!6378 = !{i8 0, i8 2}
!6379 = !DILocation(line: 1064, column: 6, scope: !6333)
!6380 = !DILocation(line: 1070, column: 20, scope: !6333)
!6381 = !DILocation(line: 1070, column: 2, scope: !6333)
!6382 = !DILocation(line: 1089, column: 6, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6333, file: !6334, line: 1089, column: 6)
!6384 = !DILocation(line: 0, scope: !6383)
!6385 = !DILocation(line: 1089, column: 6, scope: !6333)
!6386 = !DILocation(line: 1090, column: 28, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !6334, line: 1090, column: 7)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !6334, line: 1089, column: 18)
!6389 = !DILocation(line: 1090, column: 44, scope: !6387)
!6390 = !DILocation(line: 1090, column: 7, scope: !6388)
!6391 = !DILocation(line: 1091, column: 24, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !6334, line: 1090, column: 50)
!6393 = !DILocation(line: 1092, column: 3, scope: !6392)
!6394 = !DILocation(line: 1094, column: 23, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6383, file: !6334, line: 1093, column: 9)
!6396 = !DILocation(line: 1097, column: 2, scope: !6333)
!6397 = !DILocation(line: 1098, column: 1, scope: !6333)
!6398 = distinct !DISubprogram(name: "get_esf", scope: !6334, file: !6334, line: 894, type: !6399, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6402)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!2878, !121, !121, !121, !6401}
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6402 = !{!6403, !6404, !6405, !6406, !6407, !6408}
!6403 = !DILocalVariable(name: "msp", arg: 1, scope: !6398, file: !6334, line: 894, type: !121)
!6404 = !DILocalVariable(name: "psp", arg: 2, scope: !6398, file: !6334, line: 894, type: !121)
!6405 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6398, file: !6334, line: 894, type: !121)
!6406 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6398, file: !6334, line: 895, type: !6401)
!6407 = !DILocalVariable(name: "alternative_state_exc", scope: !6398, file: !6334, line: 897, type: !157)
!6408 = !DILocalVariable(name: "ptr_esf", scope: !6398, file: !6334, line: 898, type: !2878)
!6409 = !DILocation(line: 0, scope: !6398)
!6410 = !DILocation(line: 900, column: 14, scope: !6398)
!6411 = !DILocation(line: 902, column: 49, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 902, column: 6)
!6413 = !DILocation(line: 902, column: 6, scope: !6398)
!6414 = !DILocation(line: 983, column: 18, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 983, column: 6)
!6416 = !DILocation(line: 991, column: 7, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6418, file: !6334, line: 990, column: 30)
!6418 = distinct !DILexicalBlock(scope: !6398, file: !6334, line: 990, column: 6)
!6419 = !DILocation(line: 998, column: 16, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !6334, line: 995, column: 10)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !6334, line: 991, column: 7)
!6422 = !DILocation(line: 1002, column: 2, scope: !6398)
!6423 = !DILocation(line: 1003, column: 1, scope: !6398)
!6424 = distinct !DISubprogram(name: "fault_handle", scope: !6334, file: !6334, line: 786, type: !6425, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6427)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!121, !2878, !103, !6401}
!6427 = !{!6428, !6429, !6430, !6431}
!6428 = !DILocalVariable(name: "esf", arg: 1, scope: !6424, file: !6334, line: 786, type: !2878)
!6429 = !DILocalVariable(name: "fault", arg: 2, scope: !6424, file: !6334, line: 786, type: !103)
!6430 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6424, file: !6334, line: 786, type: !6401)
!6431 = !DILocalVariable(name: "reason", scope: !6424, file: !6334, line: 788, type: !121)
!6432 = !DILocation(line: 0, scope: !6424)
!6433 = !DILocation(line: 790, column: 15, scope: !6424)
!6434 = !DILocation(line: 792, column: 2, scope: !6424)
!6435 = !DILocation(line: 794, column: 12, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6424, file: !6334, line: 792, column: 17)
!6437 = !DILocation(line: 795, column: 3, scope: !6436)
!6438 = !DILocation(line: 800, column: 12, scope: !6436)
!6439 = !DILocation(line: 801, column: 3, scope: !6436)
!6440 = !DILocation(line: 803, column: 12, scope: !6436)
!6441 = !DILocation(line: 804, column: 3, scope: !6436)
!6442 = !DILocation(line: 806, column: 12, scope: !6436)
!6443 = !DILocation(line: 807, column: 3, scope: !6436)
!6444 = !DILocation(line: 814, column: 3, scope: !6436)
!6445 = !DILocation(line: 815, column: 3, scope: !6436)
!6446 = !DILocation(line: 829, column: 2, scope: !6424)
!6447 = distinct !DISubprogram(name: "hard_fault", scope: !6334, file: !6334, line: 709, type: !6448, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6450)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{!121, !2878, !6401}
!6450 = !{!6451, !6452, !6453}
!6451 = !DILocalVariable(name: "esf", arg: 1, scope: !6447, file: !6334, line: 709, type: !2878)
!6452 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6447, file: !6334, line: 709, type: !6401)
!6453 = !DILocalVariable(name: "reason", scope: !6447, file: !6334, line: 711, type: !121)
!6454 = !DILocation(line: 0, scope: !6447)
!6455 = !DILocation(line: 732, column: 15, scope: !6447)
!6456 = !DILocation(line: 734, column: 12, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6447, file: !6334, line: 734, column: 6)
!6458 = !DILocation(line: 734, column: 17, scope: !6457)
!6459 = !DILocation(line: 734, column: 41, scope: !6457)
!6460 = !DILocation(line: 734, column: 6, scope: !6447)
!6461 = !DILocation(line: 736, column: 19, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6457, file: !6334, line: 736, column: 13)
!6463 = !DILocation(line: 736, column: 49, scope: !6462)
!6464 = !DILocation(line: 736, column: 13, scope: !6457)
!6465 = !DILocation(line: 738, column: 19, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6462, file: !6334, line: 738, column: 13)
!6467 = !DILocation(line: 738, column: 24, scope: !6466)
!6468 = !DILocation(line: 738, column: 47, scope: !6466)
!6469 = !DILocation(line: 738, column: 13, scope: !6462)
!6470 = !DILocation(line: 740, column: 7, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !6334, line: 740, column: 7)
!6472 = distinct !DILexicalBlock(scope: !6466, file: !6334, line: 738, column: 53)
!6473 = !DILocation(line: 740, column: 7, scope: !6472)
!6474 = !DILocation(line: 742, column: 24, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !6334, line: 740, column: 38)
!6476 = !DILocation(line: 743, column: 3, scope: !6475)
!6477 = !DILocation(line: 743, column: 20, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6471, file: !6334, line: 743, column: 14)
!6479 = !DILocation(line: 743, column: 25, scope: !6478)
!6480 = !DILocation(line: 743, column: 52, scope: !6478)
!6481 = !DILocation(line: 743, column: 14, scope: !6471)
!6482 = !DILocation(line: 744, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6478, file: !6334, line: 743, column: 58)
!6484 = !DILocation(line: 745, column: 3, scope: !6483)
!6485 = !DILocation(line: 745, column: 20, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6478, file: !6334, line: 745, column: 14)
!6487 = !DILocation(line: 745, column: 25, scope: !6486)
!6488 = !DILocation(line: 745, column: 52, scope: !6486)
!6489 = !DILocation(line: 745, column: 14, scope: !6478)
!6490 = !DILocation(line: 746, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6486, file: !6334, line: 745, column: 58)
!6492 = !DILocation(line: 747, column: 3, scope: !6491)
!6493 = !DILocation(line: 747, column: 20, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6486, file: !6334, line: 747, column: 14)
!6495 = !DILocation(line: 747, column: 52, scope: !6494)
!6496 = !DILocation(line: 747, column: 14, scope: !6486)
!6497 = !DILocation(line: 748, column: 13, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6494, file: !6334, line: 747, column: 58)
!6499 = !DILocation(line: 753, column: 3, scope: !6498)
!6500 = !DILocation(line: 766, column: 2, scope: !6447)
!6501 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6334, file: !6334, line: 229, type: !6425, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6502)
!6502 = !{!6503, !6504, !6505, !6506, !6507, !6508, !6511}
!6503 = !DILocalVariable(name: "esf", arg: 1, scope: !6501, file: !6334, line: 229, type: !2878)
!6504 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6501, file: !6334, line: 229, type: !103)
!6505 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6501, file: !6334, line: 230, type: !6401)
!6506 = !DILocalVariable(name: "reason", scope: !6501, file: !6334, line: 232, type: !121)
!6507 = !DILocalVariable(name: "mmfar", scope: !6501, file: !6334, line: 233, type: !121)
!6508 = !DILocalVariable(name: "temp", scope: !6509, file: !6334, line: 254, type: !121)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !6334, line: 244, column: 48)
!6510 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 244, column: 6)
!6511 = !DILocalVariable(name: "min_stack_ptr", scope: !6512, file: !6334, line: 309, type: !121)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !6334, line: 308, column: 43)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !6334, line: 308, column: 7)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !6334, line: 289, column: 40)
!6515 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 288, column: 6)
!6516 = !DILocation(line: 0, scope: !6501)
!6517 = !DILocation(line: 237, column: 12, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 237, column: 6)
!6519 = !DILocation(line: 241, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 241, column: 6)
!6521 = !DILocation(line: 244, column: 12, scope: !6510)
!6522 = !DILocation(line: 244, column: 17, scope: !6510)
!6523 = !DILocation(line: 244, column: 42, scope: !6510)
!6524 = !DILocation(line: 244, column: 6, scope: !6501)
!6525 = !DILocation(line: 254, column: 24, scope: !6509)
!6526 = !DILocation(line: 0, scope: !6509)
!6527 = !DILocation(line: 256, column: 13, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6509, file: !6334, line: 256, column: 7)
!6529 = !DILocation(line: 256, column: 18, scope: !6528)
!6530 = !DILocation(line: 256, column: 44, scope: !6528)
!6531 = !DILocation(line: 256, column: 7, scope: !6509)
!6532 = !DILocation(line: 259, column: 24, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !6334, line: 259, column: 8)
!6534 = distinct !DILexicalBlock(scope: !6528, file: !6334, line: 256, column: 50)
!6535 = !DILocation(line: 259, column: 8, scope: !6534)
!6536 = !DILocation(line: 261, column: 15, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6533, file: !6334, line: 259, column: 30)
!6538 = !DILocation(line: 262, column: 4, scope: !6537)
!6539 = !DILocation(line: 265, column: 12, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 265, column: 6)
!6541 = !DILocation(line: 269, column: 12, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 269, column: 6)
!6543 = !DILocation(line: 288, column: 12, scope: !6515)
!6544 = !DILocation(line: 288, column: 17, scope: !6515)
!6545 = !DILocation(line: 288, column: 41, scope: !6515)
!6546 = !DILocation(line: 289, column: 9, scope: !6515)
!6547 = !DILocation(line: 289, column: 14, scope: !6515)
!6548 = !DILocation(line: 288, column: 6, scope: !6501)
!6549 = !DILocation(line: 308, column: 12, scope: !6513)
!6550 = !DILocation(line: 308, column: 17, scope: !6513)
!6551 = !DILocation(line: 308, column: 7, scope: !6514)
!6552 = !DILocation(line: 310, column: 6, scope: !6512)
!6553 = !DILocation(line: 309, column: 29, scope: !6512)
!6554 = !DILocation(line: 0, scope: !6512)
!6555 = !DILocation(line: 312, column: 8, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6512, file: !6334, line: 312, column: 8)
!6557 = !DILocation(line: 312, column: 8, scope: !6512)
!6558 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6559, file: !6033, line: 1099, type: !121)
!6559 = distinct !DISubprogram(name: "__set_PSP", scope: !6033, file: !6033, line: 1099, type: !6124, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6560)
!6560 = !{!6558}
!6561 = !DILocation(line: 0, scope: !6559, inlinedAt: !6562)
!6562 = distinct !DILocation(line: 338, column: 5, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !6334, line: 312, column: 23)
!6564 = !DILocation(line: 1101, column: 3, scope: !6559, inlinedAt: !6562)
!6565 = !{i64 3758272}
!6566 = !DILocation(line: 341, column: 4, scope: !6563)
!6567 = !DILocation(line: 360, column: 12, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6501, file: !6334, line: 360, column: 6)
!6569 = !DILocation(line: 360, column: 17, scope: !6568)
!6570 = !DILocation(line: 360, column: 41, scope: !6568)
!6571 = !DILocation(line: 360, column: 6, scope: !6501)
!6572 = !DILocation(line: 361, column: 14, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6568, file: !6334, line: 360, column: 47)
!6574 = !DILocation(line: 362, column: 2, scope: !6573)
!6575 = !DILocation(line: 366, column: 12, scope: !6501)
!6576 = !DILocation(line: 369, column: 15, scope: !6501)
!6577 = !DILocation(line: 371, column: 2, scope: !6501)
!6578 = distinct !DISubprogram(name: "bus_fault", scope: !6334, file: !6334, line: 383, type: !6579, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6581)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!103, !2878, !103, !6401}
!6581 = !{!6582, !6583, !6584, !6585, !6586}
!6582 = !DILocalVariable(name: "esf", arg: 1, scope: !6578, file: !6334, line: 383, type: !2878)
!6583 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6578, file: !6334, line: 383, type: !103)
!6584 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6578, file: !6334, line: 383, type: !6401)
!6585 = !DILocalVariable(name: "reason", scope: !6578, file: !6334, line: 385, type: !121)
!6586 = !DILocalVariable(name: "bfar", scope: !6587, file: !6334, line: 405, type: !121)
!6587 = distinct !DILexicalBlock(scope: !6588, file: !6334, line: 395, column: 42)
!6588 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 395, column: 6)
!6589 = !DILocation(line: 0, scope: !6578)
!6590 = !DILocation(line: 389, column: 11, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 389, column: 6)
!6592 = !DILocation(line: 392, column: 11, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 392, column: 6)
!6594 = !DILocation(line: 395, column: 11, scope: !6588)
!6595 = !DILocation(line: 395, column: 16, scope: !6588)
!6596 = !DILocation(line: 395, column: 6, scope: !6578)
!6597 = !DILocation(line: 405, column: 3, scope: !6587)
!6598 = !DILocation(line: 0, scope: !6587)
!6599 = !DILocation(line: 407, column: 13, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6587, file: !6334, line: 407, column: 7)
!6601 = !DILocation(line: 407, column: 18, scope: !6600)
!6602 = !DILocation(line: 407, column: 44, scope: !6600)
!6603 = !DILocation(line: 407, column: 7, scope: !6587)
!6604 = !DILocation(line: 411, column: 15, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !6334, line: 409, column: 30)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !6334, line: 409, column: 8)
!6607 = distinct !DILexicalBlock(scope: !6600, file: !6334, line: 407, column: 50)
!6608 = !DILocation(line: 412, column: 4, scope: !6605)
!6609 = !DILocation(line: 415, column: 11, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 415, column: 6)
!6611 = !DILocation(line: 418, column: 12, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6578, file: !6334, line: 418, column: 6)
!6613 = !DILocation(line: 418, column: 17, scope: !6612)
!6614 = !DILocation(line: 418, column: 41, scope: !6612)
!6615 = !DILocation(line: 418, column: 6, scope: !6578)
!6616 = !DILocation(line: 423, column: 18, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !6334, line: 423, column: 13)
!6618 = !DILocation(line: 524, column: 12, scope: !6578)
!6619 = !DILocation(line: 526, column: 15, scope: !6578)
!6620 = !DILocation(line: 528, column: 2, scope: !6578)
!6621 = distinct !DISubprogram(name: "usage_fault", scope: !6334, file: !6334, line: 539, type: !6622, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6626)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{!121, !6624}
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 32)
!6625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2879)
!6626 = !{!6627, !6628}
!6627 = !DILocalVariable(name: "esf", arg: 1, scope: !6621, file: !6334, line: 539, type: !6624)
!6628 = !DILocalVariable(name: "reason", scope: !6621, file: !6334, line: 541, type: !121)
!6629 = !DILocation(line: 0, scope: !6621)
!6630 = !DILocation(line: 546, column: 12, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 546, column: 6)
!6632 = !DILocation(line: 549, column: 12, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 549, column: 6)
!6634 = !DILocation(line: 567, column: 12, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 567, column: 6)
!6636 = !DILocation(line: 570, column: 12, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 570, column: 6)
!6638 = !DILocation(line: 573, column: 12, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 573, column: 6)
!6640 = !DILocation(line: 576, column: 12, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6621, file: !6334, line: 576, column: 6)
!6642 = !DILocation(line: 581, column: 12, scope: !6621)
!6643 = !DILocation(line: 583, column: 2, scope: !6621)
!6644 = distinct !DISubprogram(name: "debug_monitor", scope: !6334, file: !6334, line: 632, type: !6645, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6647)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{null, !2878, !6401}
!6647 = !{!6648, !6649}
!6648 = !DILocalVariable(name: "esf", arg: 1, scope: !6644, file: !6334, line: 632, type: !2878)
!6649 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6644, file: !6334, line: 632, type: !6401)
!6650 = !DILocation(line: 0, scope: !6644)
!6651 = !DILocation(line: 634, column: 15, scope: !6644)
!6652 = !DILocation(line: 652, column: 1, scope: !6644)
!6653 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6334, file: !6334, line: 658, type: !6654, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6656)
!6654 = !DISubroutineType(types: !6655)
!6655 = !{!157, !2878}
!6656 = !{!6657, !6658, !6659}
!6657 = !DILocalVariable(name: "esf", arg: 1, scope: !6653, file: !6334, line: 658, type: !2878)
!6658 = !DILocalVariable(name: "ret_addr", scope: !6653, file: !6334, line: 660, type: !2652)
!6659 = !DILocalVariable(name: "fault_insn", scope: !6653, file: !6334, line: 686, type: !429)
!6660 = !DILocation(line: 0, scope: !6653)
!6661 = !DILocation(line: 660, column: 46, scope: !6653)
!6662 = !DILocation(line: 660, column: 23, scope: !6653)
!6663 = !DILocation(line: 682, column: 11, scope: !6653)
!6664 = !DILocation(line: 271, column: 3, scope: !6665, inlinedAt: !6666)
!6665 = distinct !DISubprogram(name: "__DSB", scope: !6033, file: !6033, line: 269, type: !3255, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !317)
!6666 = distinct !DILocation(line: 683, column: 2, scope: !6653)
!6667 = !{i64 3734407}
!6668 = !DILocation(line: 260, column: 3, scope: !6669, inlinedAt: !6670)
!6669 = distinct !DISubprogram(name: "__ISB", scope: !6033, file: !6033, line: 258, type: !3255, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !317)
!6670 = distinct !DILocation(line: 684, column: 2, scope: !6653)
!6671 = !{i64 3734124}
!6672 = !DILocation(line: 686, column: 35, scope: !6653)
!6673 = !DILocation(line: 686, column: 24, scope: !6653)
!6674 = !DILocation(line: 688, column: 11, scope: !6653)
!6675 = !DILocation(line: 271, column: 3, scope: !6665, inlinedAt: !6676)
!6676 = distinct !DILocation(line: 689, column: 2, scope: !6653)
!6677 = !DILocation(line: 260, column: 3, scope: !6669, inlinedAt: !6678)
!6678 = distinct !DILocation(line: 690, column: 2, scope: !6653)
!6679 = !DILocation(line: 693, column: 45, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6653, file: !6334, line: 693, column: 6)
!6681 = !DILocation(line: 699, column: 1, scope: !6653)
!6682 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6334, file: !6334, line: 1107, type: !3255, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !317)
!6683 = !DILocation(line: 1111, column: 11, scope: !6682)
!6684 = !DILocation(line: 1136, column: 1, scope: !6682)
!6685 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6686, file: !6686, line: 26, type: !3255, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2921, retainedNodes: !6687)
!6686 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6687 = !{!6688}
!6688 = !DILocalVariable(name: "irq", scope: !6685, file: !6686, line: 28, type: !103)
!6689 = !DILocation(line: 0, scope: !6685)
!6690 = !DILocation(line: 30, column: 2, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6685, file: !6686, line: 30, column: 2)
!6692 = !DILocation(line: 31, column: 3, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !6686, line: 30, column: 39)
!6694 = distinct !DILexicalBlock(scope: !6691, file: !6686, line: 30, column: 2)
!6695 = !DILocation(line: 30, column: 35, scope: !6694)
!6696 = !DILocation(line: 30, column: 13, scope: !6694)
!6697 = distinct !{!6697, !6690, !6698}
!6698 = !DILocation(line: 32, column: 2, scope: !6691)
!6699 = !DILocation(line: 33, column: 1, scope: !6685)
!6700 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6067, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2921, retainedNodes: !6701)
!6701 = !{!6702, !6703}
!6702 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6700, file: !515, line: 1814, type: !780)
!6703 = !DILocalVariable(name: "priority", arg: 2, scope: !6700, file: !515, line: 1814, type: !121)
!6704 = !DILocation(line: 0, scope: !6700)
!6705 = !DILocation(line: 1816, column: 7, scope: !6700)
!6706 = !DILocation(line: 0, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6700, file: !515, line: 1816, column: 7)
!6708 = !DILocation(line: 1824, column: 1, scope: !6700)
!6709 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6710, file: !6710, line: 27, type: !6711, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !6814)
!6710 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6711 = !DISubroutineType(types: !6712)
!6712 = !{null, !6713}
!6713 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6714)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 32)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6716)
!6716 = !{!6717, !6775, !6787, !6788, !6789, !6790, !6796, !6809}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6715, file: !379, line: 247, baseType: !6718, size: 384)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6719)
!6719 = !{!6720, !6744, !6751, !6752, !6753, !6762, !6763, !6764}
!6720 = !DIDerivedType(tag: DW_TAG_member, scope: !6718, file: !379, line: 60, baseType: !6721, size: 64)
!6721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6718, file: !379, line: 60, size: 64, elements: !6722)
!6722 = !{!6723, !6738}
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6721, file: !379, line: 61, baseType: !6724, size: 64)
!6724 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6725)
!6725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6726)
!6726 = !{!6727, !6733}
!6727 = !DIDerivedType(tag: DW_TAG_member, scope: !6725, file: !325, line: 38, baseType: !6728, size: 32)
!6728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6725, file: !325, line: 38, size: 32, elements: !6729)
!6729 = !{!6730, !6732}
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6728, file: !325, line: 39, baseType: !6731, size: 32)
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6725, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6728, file: !325, line: 40, baseType: !6731, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, scope: !6725, file: !325, line: 42, baseType: !6734, size: 32, offset: 32)
!6734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6725, file: !325, line: 42, size: 32, elements: !6735)
!6735 = !{!6736, !6737}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6734, file: !325, line: 43, baseType: !6731, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6734, file: !325, line: 44, baseType: !6731, size: 32)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6721, file: !379, line: 62, baseType: !6739, size: 64)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6740)
!6740 = !{!6741}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6739, file: !404, line: 50, baseType: !6742, size: 64)
!6742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6743, size: 64, elements: !363)
!6743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 32)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6718, file: !379, line: 68, baseType: !6745, size: 32, offset: 64)
!6745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6746, size: 32)
!6746 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6747)
!6747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6748)
!6748 = !{!6749}
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6747, file: !320, line: 232, baseType: !6750, size: 64)
!6750 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6725)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6718, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6718, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6753 = !DIDerivedType(tag: DW_TAG_member, scope: !6718, file: !379, line: 90, baseType: !6754, size: 16, offset: 112)
!6754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6718, file: !379, line: 90, size: 16, elements: !6755)
!6755 = !{!6756, !6761}
!6756 = !DIDerivedType(tag: DW_TAG_member, scope: !6754, file: !379, line: 91, baseType: !6757, size: 16)
!6757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6754, file: !379, line: 91, size: 16, elements: !6758)
!6758 = !{!6759, !6760}
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6757, file: !379, line: 96, baseType: !425, size: 8)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6757, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6754, file: !379, line: 100, baseType: !429, size: 16)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6718, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6718, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6718, file: !379, line: 131, baseType: !6765, size: 192, offset: 192)
!6765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6766)
!6766 = !{!6767, !6768, !6774}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6765, file: !320, line: 245, baseType: !6724, size: 64)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6765, file: !320, line: 246, baseType: !6769, size: 32, offset: 64)
!6769 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6770)
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6771, size: 32)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{null, !6773}
!6773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6765, size: 32)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6765, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6715, file: !379, line: 250, baseType: !6776, size: 288, offset: 384)
!6776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6777)
!6777 = !{!6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6776, file: !446, line: 26, baseType: !121, size: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6776, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6776, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6776, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6776, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6776, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6776, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6776, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6776, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6715, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6715, file: !379, line: 256, baseType: !6746, size: 64, offset: 704)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6715, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6715, file: !379, line: 300, baseType: !6791, size: 96, offset: 800)
!6791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6792)
!6792 = !{!6793, !6794, !6795}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6791, file: !379, line: 153, baseType: !22, size: 32)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6791, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6791, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6715, file: !379, line: 325, baseType: !6797, size: 32, offset: 896)
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6798, size: 32)
!6798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6799)
!6799 = !{!6800, !6806, !6807}
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6798, file: !296, line: 5074, baseType: !6801, size: 96)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6802)
!6802 = !{!6803, !6804, !6805}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6801, file: !472, line: 57, baseType: !475, size: 32)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6801, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6801, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6798, file: !296, line: 5075, baseType: !6746, size: 64, offset: 96)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6798, file: !296, line: 5076, baseType: !6808, offset: 160)
!6808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6715, file: !379, line: 343, baseType: !6810, size: 64, offset: 928)
!6810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6811)
!6811 = !{!6812, !6813}
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6810, file: !446, line: 63, baseType: !121, size: 32)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6810, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6814 = !{!6815}
!6815 = !DILocalVariable(name: "thread", arg: 1, scope: !6709, file: !6710, line: 27, type: !6713)
!6816 = !DILocation(line: 0, scope: !6709)
!6817 = !DILocation(line: 29, column: 6, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6709, file: !6710, line: 29, column: 6)
!6819 = !DILocation(line: 29, column: 15, scope: !6818)
!6820 = !DILocation(line: 29, column: 6, scope: !6709)
!6821 = !DILocation(line: 1031, column: 3, scope: !6822, inlinedAt: !6825)
!6822 = distinct !DISubprogram(name: "__get_IPSR", scope: !6033, file: !6033, line: 1027, type: !6114, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !6823)
!6823 = !{!6824}
!6824 = !DILocalVariable(name: "result", scope: !6822, file: !6033, line: 1029, type: !121)
!6825 = distinct !DILocation(line: 48, column: 10, scope: !6826, inlinedAt: !6830)
!6826 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6827, file: !6827, line: 46, type: !6828, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !317)
!6827 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!157}
!6830 = distinct !DILocation(line: 30, column: 7, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6710, line: 30, column: 7)
!6832 = distinct !DILexicalBlock(scope: !6818, file: !6710, line: 29, column: 26)
!6833 = !{i64 3723255}
!6834 = !DILocation(line: 0, scope: !6822, inlinedAt: !6825)
!6835 = !DILocation(line: 48, column: 9, scope: !6826, inlinedAt: !6830)
!6836 = !DILocation(line: 30, column: 7, scope: !6832)
!6837 = !DILocation(line: 42, column: 14, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6831, file: !6710, line: 30, column: 25)
!6839 = !DILocation(line: 48, column: 15, scope: !6838)
!6840 = !DILocation(line: 49, column: 3, scope: !6838)
!6841 = !DILocation(line: 52, column: 2, scope: !6709)
!6842 = !DILocation(line: 53, column: 1, scope: !6709)
!6843 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3255, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6844 = !DILocation(line: 134, column: 2, scope: !6843)
!6845 = !DILocation(line: 156, column: 1, scope: !6843)
!6846 = !DILocation(line: 0, scope: !373)
!6847 = !DILocation(line: 289, column: 36, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6849 = !DILocation(line: 289, column: 42, scope: !6848)
!6850 = !DILocation(line: 300, column: 36, scope: !373)
!6851 = !DILocation(line: 301, column: 35, scope: !373)
!6852 = !DILocation(line: 302, column: 37, scope: !373)
!6853 = !DILocation(line: 311, column: 2, scope: !373)
!6854 = !DILocation(line: 316, column: 1, scope: !373)
!6855 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3255, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6856 = !DILocation(line: 188, column: 12, scope: !6855)
!6857 = !DILocation(line: 271, column: 3, scope: !6858, inlinedAt: !6859)
!6858 = distinct !DISubprogram(name: "__DSB", scope: !6033, file: !6033, line: 269, type: !3255, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6859 = distinct !DILocation(line: 192, column: 2, scope: !6855)
!6860 = !{i64 3911157}
!6861 = !DILocation(line: 260, column: 3, scope: !6862, inlinedAt: !6863)
!6862 = distinct !DISubprogram(name: "__ISB", scope: !6033, file: !6033, line: 258, type: !3255, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6863 = distinct !DILocation(line: 193, column: 2, scope: !6855)
!6864 = !{i64 3910874}
!6865 = !DILocation(line: 194, column: 1, scope: !6855)
!6866 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3255, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6867 = !DILocation(line: 282, column: 3, scope: !6868, inlinedAt: !6869)
!6868 = distinct !DISubprogram(name: "__DMB", scope: !6033, file: !6033, line: 280, type: !3255, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6869 = distinct !DILocation(line: 202, column: 2, scope: !6866)
!6870 = !{i64 3911433}
!6871 = !DILocation(line: 205, column: 12, scope: !6866)
!6872 = !DILocation(line: 206, column: 1, scope: !6866)
!6873 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6874, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6887)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{null, !6876, !262, !6301, !6301}
!6876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6877, size: 32)
!6877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6878)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6879)
!6879 = !{!6880, !6881, !6882}
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6878, file: !494, line: 53, baseType: !22, size: 32)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6878, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6878, file: !494, line: 55, baseType: !6883, size: 32, offset: 64)
!6883 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6884)
!6884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6885)
!6885 = !{!6886}
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6884, file: !500, line: 150, baseType: !121, size: 32)
!6887 = !{!6888, !6889, !6890, !6891}
!6888 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6873, file: !543, line: 276, type: !6876)
!6889 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6873, file: !543, line: 276, type: !262)
!6890 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6873, file: !543, line: 277, type: !6301)
!6891 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6873, file: !543, line: 277, type: !6301)
!6892 = !DILocation(line: 0, scope: !6873)
!6893 = !DILocation(line: 279, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6873, file: !543, line: 279, column: 6)
!6895 = !DILocation(line: 285, column: 1, scope: !6873)
!6896 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6897, file: !6897, line: 220, type: !6898, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6900)
!6897 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!103, !6876, !262, !6301, !6301}
!6900 = !{!6901, !6902, !6903, !6904, !6905}
!6901 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6896, file: !6897, line: 221, type: !6876)
!6902 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6896, file: !6897, line: 221, type: !262)
!6903 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6896, file: !6897, line: 222, type: !6301)
!6904 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6896, file: !6897, line: 223, type: !6301)
!6905 = !DILocalVariable(name: "mpu_reg_index", scope: !6896, file: !6897, line: 225, type: !103)
!6906 = !DILocation(line: 0, scope: !6896)
!6907 = !DILocation(line: 225, column: 22, scope: !6896)
!6908 = !DILocation(line: 233, column: 18, scope: !6896)
!6909 = !DILocation(line: 236, column: 23, scope: !6896)
!6910 = !DILocation(line: 236, column: 21, scope: !6896)
!6911 = !DILocation(line: 238, column: 2, scope: !6896)
!6912 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6913, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6915)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{!103, !6876, !154, !154, !157}
!6915 = !{!6916, !6917, !6918, !6919, !6920, !6921}
!6916 = !DILocalVariable(name: "regions", arg: 1, scope: !6912, file: !543, line: 106, type: !6876)
!6917 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6912, file: !543, line: 106, type: !154)
!6918 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6912, file: !543, line: 106, type: !154)
!6919 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6912, file: !543, line: 107, type: !157)
!6920 = !DILocalVariable(name: "i", scope: !6912, file: !543, line: 109, type: !103)
!6921 = !DILocalVariable(name: "reg_index", scope: !6912, file: !543, line: 110, type: !103)
!6922 = !DILocation(line: 0, scope: !6912)
!6923 = !DILocation(line: 110, column: 18, scope: !6912)
!6924 = !DILocation(line: 112, column: 16, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !543, line: 112, column: 2)
!6926 = distinct !DILexicalBlock(scope: !6912, file: !543, line: 112, column: 2)
!6927 = !DILocation(line: 112, column: 2, scope: !6926)
!6928 = !DILocation(line: 113, column: 7, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !543, line: 113, column: 7)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !543, line: 112, column: 36)
!6931 = !DILocation(line: 113, column: 18, scope: !6929)
!6932 = !DILocation(line: 113, column: 23, scope: !6929)
!6933 = !DILocation(line: 113, column: 7, scope: !6930)
!6934 = !DILocation(line: 118, column: 23, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6930, file: !543, line: 118, column: 7)
!6936 = !DILocation(line: 119, column: 7, scope: !6935)
!6937 = !DILocation(line: 118, column: 7, scope: !6930)
!6938 = !DILocation(line: 124, column: 36, scope: !6930)
!6939 = !DILocation(line: 124, column: 15, scope: !6930)
!6940 = !DILocation(line: 126, column: 17, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6930, file: !543, line: 126, column: 7)
!6942 = !DILocation(line: 126, column: 7, scope: !6930)
!6943 = !DILocation(line: 131, column: 12, scope: !6930)
!6944 = !DILocation(line: 132, column: 2, scope: !6930)
!6945 = !DILocation(line: 112, column: 32, scope: !6925)
!6946 = distinct !{!6946, !6927, !6947}
!6947 = !DILocation(line: 132, column: 2, scope: !6926)
!6948 = !DILocation(line: 135, column: 1, scope: !6912)
!6949 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6897, file: !6897, line: 63, type: !6950, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6952)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!103, !6876}
!6952 = !{!6953, !6954}
!6953 = !DILocalVariable(name: "part", arg: 1, scope: !6949, file: !6897, line: 63, type: !6876)
!6954 = !DILocalVariable(name: "partition_is_valid", scope: !6949, file: !6897, line: 70, type: !103)
!6955 = !DILocation(line: 0, scope: !6949)
!6956 = !DILocation(line: 71, column: 11, scope: !6949)
!6957 = !DILocation(line: 71, column: 37, scope: !6949)
!6958 = !DILocation(line: 72, column: 3, scope: !6949)
!6959 = !DILocation(line: 71, column: 30, scope: !6949)
!6960 = !DILocation(line: 75, column: 11, scope: !6949)
!6961 = !DILocation(line: 75, column: 17, scope: !6949)
!6962 = !DILocation(line: 75, column: 38, scope: !6949)
!6963 = !DILocation(line: 77, column: 2, scope: !6949)
!6964 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !6965, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6967)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!103, !262, !6876}
!6967 = !{!6968, !6969, !6970}
!6968 = !DILocalVariable(name: "index", arg: 1, scope: !6964, file: !543, line: 79, type: !262)
!6969 = !DILocalVariable(name: "new_region", arg: 2, scope: !6964, file: !543, line: 80, type: !6876)
!6970 = !DILocalVariable(name: "region_conf", scope: !6964, file: !543, line: 82, type: !532)
!6971 = !DILocation(line: 0, scope: !6964)
!6972 = !DILocation(line: 82, column: 2, scope: !6964)
!6973 = !DILocation(line: 82, column: 24, scope: !6964)
!6974 = !DILocation(line: 87, column: 33, scope: !6964)
!6975 = !DILocation(line: 87, column: 14, scope: !6964)
!6976 = !DILocation(line: 87, column: 19, scope: !6964)
!6977 = !DILocation(line: 91, column: 55, scope: !6964)
!6978 = !DILocation(line: 92, column: 16, scope: !6964)
!6979 = !DILocation(line: 92, column: 53, scope: !6964)
!6980 = !DILocation(line: 91, column: 2, scope: !6964)
!6981 = !DILocation(line: 95, column: 9, scope: !6964)
!6982 = !DILocation(line: 97, column: 1, scope: !6964)
!6983 = !DILocation(line: 95, column: 2, scope: !6964)
!6984 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6897, file: !6897, line: 113, type: !6985, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6990)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !6987, !6988, !121, !121}
!6987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 32)
!6989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6883)
!6990 = !{!6991, !6992, !6993, !6994}
!6991 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6984, file: !6897, line: 114, type: !6987)
!6992 = !DILocalVariable(name: "attr", arg: 2, scope: !6984, file: !6897, line: 115, type: !6988)
!6993 = !DILocalVariable(name: "base", arg: 3, scope: !6984, file: !6897, line: 115, type: !121)
!6994 = !DILocalVariable(name: "size", arg: 4, scope: !6984, file: !6897, line: 115, type: !121)
!6995 = !DILocation(line: 0, scope: !6984)
!6996 = !DILocation(line: 127, column: 23, scope: !6984)
!6997 = !DILocation(line: 127, column: 35, scope: !6984)
!6998 = !DILocation(line: 127, column: 33, scope: !6984)
!6999 = !DILocation(line: 127, column: 10, scope: !6984)
!7000 = !DILocation(line: 127, column: 15, scope: !6984)
!7001 = !DILocation(line: 129, column: 1, scope: !6984)
!7002 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !7003, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7005)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!103, !262, !530}
!7005 = !{!7006, !7007}
!7006 = !DILocalVariable(name: "index", arg: 1, scope: !7002, file: !543, line: 57, type: !262)
!7007 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7002, file: !543, line: 58, type: !530)
!7008 = !DILocation(line: 0, scope: !7002)
!7009 = !DILocation(line: 61, column: 6, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7002, file: !543, line: 61, column: 6)
!7011 = !DILocation(line: 61, column: 12, scope: !7010)
!7012 = !DILocation(line: 61, column: 6, scope: !7002)
!7013 = !DILocation(line: 71, column: 2, scope: !7002)
!7014 = !DILocation(line: 73, column: 2, scope: !7002)
!7015 = !DILocation(line: 74, column: 1, scope: !7002)
!7016 = distinct !DISubprogram(name: "region_init", scope: !6897, file: !6897, line: 29, type: !7017, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7019)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{null, !6301, !530}
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "index", arg: 1, scope: !7016, file: !6897, line: 29, type: !6301)
!7021 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7016, file: !6897, line: 30, type: !530)
!7022 = !DILocation(line: 0, scope: !7016)
!7023 = !DILocation(line: 33, column: 2, scope: !7016)
!7024 = !DILocation(line: 47, column: 28, scope: !7016)
!7025 = !DILocation(line: 47, column: 33, scope: !7016)
!7026 = !DILocation(line: 48, column: 26, scope: !7016)
!7027 = !DILocation(line: 47, column: 12, scope: !7016)
!7028 = !DILocation(line: 49, column: 32, scope: !7016)
!7029 = !DILocation(line: 49, column: 37, scope: !7016)
!7030 = !DILocation(line: 49, column: 12, scope: !7016)
!7031 = !DILocation(line: 53, column: 1, scope: !7016)
!7032 = distinct !DISubprogram(name: "set_region_number", scope: !7033, file: !7033, line: 32, type: !6124, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7034)
!7033 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7034 = !{!7035}
!7035 = !DILocalVariable(name: "index", arg: 1, scope: !7032, file: !7033, line: 32, type: !121)
!7036 = !DILocation(line: 0, scope: !7032)
!7037 = !DILocation(line: 34, column: 11, scope: !7032)
!7038 = !DILocation(line: 35, column: 1, scope: !7032)
!7039 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6897, file: !6897, line: 88, type: !7040, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7042)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!121, !121}
!7042 = !{!7043}
!7043 = !DILocalVariable(name: "size", arg: 1, scope: !7039, file: !6897, line: 88, type: !121)
!7044 = !DILocation(line: 0, scope: !7039)
!7045 = !DILocation(line: 91, column: 11, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7039, file: !6897, line: 91, column: 6)
!7047 = !DILocation(line: 91, column: 6, scope: !7039)
!7048 = !DILocation(line: 100, column: 11, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7039, file: !6897, line: 100, column: 6)
!7050 = !DILocation(line: 100, column: 6, scope: !7039)
!7051 = !DILocation(line: 104, column: 35, scope: !7039)
!7052 = !DILocation(line: 104, column: 16, scope: !7039)
!7053 = !DILocation(line: 104, column: 50, scope: !7039)
!7054 = !DILocation(line: 104, column: 72, scope: !7039)
!7055 = !DILocation(line: 104, column: 2, scope: !7039)
!7056 = !DILocation(line: 106, column: 1, scope: !7039)
!7057 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !7058, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7060)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{null, !6876, !154}
!7060 = !{!7061, !7062}
!7061 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7057, file: !543, line: 308, type: !6876)
!7062 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7057, file: !543, line: 308, type: !154)
!7063 = !DILocation(line: 0, scope: !7057)
!7064 = !DILocation(line: 310, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7057, file: !543, line: 310, column: 6)
!7066 = !DILocation(line: 316, column: 1, scope: !7057)
!7067 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6897, file: !6897, line: 249, type: !7068, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7070)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!103, !6876, !154}
!7070 = !{!7071, !7072, !7073, !7074}
!7071 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7067, file: !6897, line: 250, type: !6876)
!7072 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7067, file: !6897, line: 250, type: !154)
!7073 = !DILocalVariable(name: "mpu_reg_index", scope: !7067, file: !6897, line: 252, type: !103)
!7074 = !DILocalVariable(name: "i", scope: !7075, file: !6897, line: 264, type: !103)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6897, line: 264, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6897, line: 261, column: 32)
!7077 = distinct !DILexicalBlock(scope: !7067, file: !6897, line: 261, column: 6)
!7078 = !DILocation(line: 0, scope: !7067)
!7079 = !DILocation(line: 252, column: 22, scope: !7067)
!7080 = !DILocation(line: 258, column: 18, scope: !7067)
!7081 = !DILocation(line: 261, column: 20, scope: !7077)
!7082 = !DILocation(line: 261, column: 6, scope: !7067)
!7083 = !DILocation(line: 0, scope: !7075)
!7084 = !DILocation(line: 265, column: 4, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !6897, line: 264, column: 59)
!7086 = distinct !DILexicalBlock(scope: !7075, file: !6897, line: 264, column: 3)
!7087 = !DILocation(line: 264, column: 55, scope: !7086)
!7088 = !DILocation(line: 264, column: 33, scope: !7086)
!7089 = !DILocation(line: 264, column: 3, scope: !7075)
!7090 = distinct !{!7090, !7089, !7091}
!7091 = !DILocation(line: 266, column: 3, scope: !7075)
!7092 = !DILocation(line: 269, column: 2, scope: !7067)
!7093 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7094, file: !7094, line: 218, type: !6124, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7095)
!7094 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7095 = !{!7096}
!7096 = !DILocalVariable(name: "rnr", arg: 1, scope: !7093, file: !7094, line: 218, type: !121)
!7097 = !DILocation(line: 0, scope: !7093)
!7098 = !DILocation(line: 220, column: 12, scope: !7093)
!7099 = !DILocation(line: 221, column: 13, scope: !7093)
!7100 = !DILocation(line: 222, column: 1, scope: !7093)
!7101 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !7102, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7104)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{!103}
!7104 = !{!7105}
!7105 = !DILocalVariable(name: "r_index", scope: !7101, file: !543, line: 328, type: !121)
!7106 = !DILocation(line: 330, column: 17, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7101, file: !543, line: 330, column: 6)
!7108 = !DILocation(line: 330, column: 29, scope: !7107)
!7109 = !DILocation(line: 330, column: 6, scope: !7101)
!7110 = !DILocation(line: 347, column: 2, scope: !7101)
!7111 = !DILocation(line: 0, scope: !7101)
!7112 = !DILocation(line: 364, column: 29, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !543, line: 364, column: 2)
!7114 = distinct !DILexicalBlock(scope: !7101, file: !543, line: 364, column: 2)
!7115 = !DILocation(line: 364, column: 2, scope: !7114)
!7116 = !DILocation(line: 365, column: 25, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7113, file: !543, line: 364, column: 66)
!7118 = !DILocation(line: 365, column: 3, scope: !7117)
!7119 = !DILocation(line: 364, column: 62, scope: !7113)
!7120 = distinct !{!7120, !7115, !7121}
!7121 = !DILocation(line: 366, column: 2, scope: !7114)
!7122 = !DILocation(line: 369, column: 23, scope: !7101)
!7123 = !DILocation(line: 369, column: 21, scope: !7101)
!7124 = !DILocation(line: 372, column: 2, scope: !7101)
!7125 = !DILocation(line: 443, column: 2, scope: !7101)
!7126 = !DILocation(line: 444, column: 1, scope: !7101)
!7127 = distinct !DISubprogram(name: "strcpy", scope: !7128, file: !7128, line: 20, type: !7129, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7133)
!7128 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!344, !7131, !7132}
!7131 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7132 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7133 = !{!7134, !7135, !7136}
!7134 = !DILocalVariable(name: "d", arg: 1, scope: !7127, file: !7128, line: 20, type: !7131)
!7135 = !DILocalVariable(name: "s", arg: 2, scope: !7127, file: !7128, line: 20, type: !7132)
!7136 = !DILocalVariable(name: "dest", scope: !7127, file: !7128, line: 22, type: !344)
!7137 = !DILocation(line: 0, scope: !7127)
!7138 = !DILocation(line: 24, column: 9, scope: !7127)
!7139 = !DILocation(line: 24, column: 12, scope: !7127)
!7140 = !DILocation(line: 24, column: 2, scope: !7127)
!7141 = !DILocation(line: 25, column: 6, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7127, file: !7128, line: 24, column: 21)
!7143 = !DILocation(line: 26, column: 4, scope: !7142)
!7144 = !DILocation(line: 27, column: 4, scope: !7142)
!7145 = distinct !{!7145, !7140, !7146}
!7146 = !DILocation(line: 28, column: 2, scope: !7127)
!7147 = !DILocation(line: 30, column: 5, scope: !7127)
!7148 = !DILocation(line: 32, column: 2, scope: !7127)
!7149 = distinct !DISubprogram(name: "strncpy", scope: !7128, file: !7128, line: 42, type: !7150, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7152)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!344, !7131, !7132, !204}
!7152 = !{!7153, !7154, !7155, !7156}
!7153 = !DILocalVariable(name: "d", arg: 1, scope: !7149, file: !7128, line: 42, type: !7131)
!7154 = !DILocalVariable(name: "s", arg: 2, scope: !7149, file: !7128, line: 42, type: !7132)
!7155 = !DILocalVariable(name: "n", arg: 3, scope: !7149, file: !7128, line: 42, type: !204)
!7156 = !DILocalVariable(name: "dest", scope: !7149, file: !7128, line: 44, type: !344)
!7157 = !DILocation(line: 0, scope: !7149)
!7158 = !DILocation(line: 46, column: 12, scope: !7149)
!7159 = !DILocation(line: 46, column: 17, scope: !7149)
!7160 = !DILocation(line: 46, column: 20, scope: !7149)
!7161 = !DILocation(line: 46, column: 23, scope: !7149)
!7162 = !DILocation(line: 46, column: 2, scope: !7149)
!7163 = !DILocation(line: 47, column: 6, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7149, file: !7128, line: 46, column: 32)
!7165 = !DILocation(line: 48, column: 4, scope: !7164)
!7166 = !DILocation(line: 49, column: 4, scope: !7164)
!7167 = !DILocation(line: 50, column: 4, scope: !7164)
!7168 = distinct !{!7168, !7162, !7169}
!7169 = !DILocation(line: 51, column: 2, scope: !7149)
!7170 = !DILocation(line: 54, column: 6, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7149, file: !7128, line: 53, column: 16)
!7172 = !DILocation(line: 55, column: 4, scope: !7171)
!7173 = !DILocation(line: 56, column: 4, scope: !7171)
!7174 = !DILocation(line: 53, column: 11, scope: !7149)
!7175 = !DILocation(line: 53, column: 2, scope: !7149)
!7176 = distinct !{!7176, !7175, !7177}
!7177 = !DILocation(line: 57, column: 2, scope: !7149)
!7178 = !DILocation(line: 59, column: 2, scope: !7149)
!7179 = distinct !DISubprogram(name: "strchr", scope: !7128, file: !7128, line: 69, type: !7180, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7182)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!344, !144, !103}
!7182 = !{!7183, !7184, !7185}
!7183 = !DILocalVariable(name: "s", arg: 1, scope: !7179, file: !7128, line: 69, type: !144)
!7184 = !DILocalVariable(name: "c", arg: 2, scope: !7179, file: !7128, line: 69, type: !103)
!7185 = !DILocalVariable(name: "tmp", scope: !7179, file: !7128, line: 71, type: !146)
!7186 = !DILocation(line: 0, scope: !7179)
!7187 = !DILocation(line: 73, column: 2, scope: !7179)
!7188 = !DILocation(line: 73, column: 10, scope: !7179)
!7189 = !DILocation(line: 73, column: 13, scope: !7179)
!7190 = !DILocation(line: 73, column: 21, scope: !7179)
!7191 = !DILocation(line: 74, column: 4, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7179, file: !7128, line: 73, column: 38)
!7193 = distinct !{!7193, !7187, !7194}
!7194 = !DILocation(line: 75, column: 2, scope: !7179)
!7195 = !DILocation(line: 77, column: 9, scope: !7179)
!7196 = !DILocation(line: 77, column: 2, scope: !7179)
!7197 = distinct !DISubprogram(name: "strrchr", scope: !7128, file: !7128, line: 87, type: !7180, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7198)
!7198 = !{!7199, !7200, !7201}
!7199 = !DILocalVariable(name: "s", arg: 1, scope: !7197, file: !7128, line: 87, type: !144)
!7200 = !DILocalVariable(name: "c", arg: 2, scope: !7197, file: !7128, line: 87, type: !103)
!7201 = !DILocalVariable(name: "match", scope: !7197, file: !7128, line: 89, type: !344)
!7202 = !DILocation(line: 0, scope: !7197)
!7203 = !DILocation(line: 91, column: 2, scope: !7197)
!7204 = !DILocation(line: 92, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !7128, line: 92, column: 7)
!7206 = distinct !DILexicalBlock(scope: !7197, file: !7128, line: 91, column: 5)
!7207 = !DILocation(line: 92, column: 10, scope: !7205)
!7208 = !DILocation(line: 92, column: 7, scope: !7206)
!7209 = !DILocation(line: 95, column: 13, scope: !7197)
!7210 = !DILocation(line: 95, column: 2, scope: !7206)
!7211 = distinct !{!7211, !7203, !7212}
!7212 = !DILocation(line: 95, column: 15, scope: !7197)
!7213 = !DILocation(line: 97, column: 2, scope: !7197)
!7214 = distinct !DISubprogram(name: "strlen", scope: !7128, file: !7128, line: 107, type: !7215, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!204, !144}
!7217 = !{!7218, !7219}
!7218 = !DILocalVariable(name: "s", arg: 1, scope: !7214, file: !7128, line: 107, type: !144)
!7219 = !DILocalVariable(name: "n", scope: !7214, file: !7128, line: 109, type: !204)
!7220 = !DILocation(line: 0, scope: !7214)
!7221 = !DILocation(line: 111, column: 9, scope: !7214)
!7222 = !DILocation(line: 111, column: 12, scope: !7214)
!7223 = !DILocation(line: 111, column: 2, scope: !7214)
!7224 = !DILocation(line: 112, column: 4, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7214, file: !7128, line: 111, column: 21)
!7226 = !DILocation(line: 113, column: 4, scope: !7225)
!7227 = distinct !{!7227, !7223, !7228}
!7228 = !DILocation(line: 114, column: 2, scope: !7214)
!7229 = !DILocation(line: 116, column: 2, scope: !7214)
!7230 = distinct !DISubprogram(name: "strnlen", scope: !7128, file: !7128, line: 126, type: !7231, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7233)
!7231 = !DISubroutineType(types: !7232)
!7232 = !{!204, !144, !204}
!7233 = !{!7234, !7235, !7236}
!7234 = !DILocalVariable(name: "s", arg: 1, scope: !7230, file: !7128, line: 126, type: !144)
!7235 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7230, file: !7128, line: 126, type: !204)
!7236 = !DILocalVariable(name: "n", scope: !7230, file: !7128, line: 128, type: !204)
!7237 = !DILocation(line: 0, scope: !7230)
!7238 = !DILocation(line: 130, column: 9, scope: !7230)
!7239 = !DILocation(line: 130, column: 12, scope: !7230)
!7240 = !DILocation(line: 130, column: 20, scope: !7230)
!7241 = !DILocation(line: 130, column: 2, scope: !7230)
!7242 = !DILocation(line: 131, column: 4, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7230, file: !7128, line: 130, column: 35)
!7244 = !DILocation(line: 132, column: 4, scope: !7243)
!7245 = distinct !{!7245, !7241, !7246}
!7246 = !DILocation(line: 133, column: 2, scope: !7230)
!7247 = !DILocation(line: 135, column: 2, scope: !7230)
!7248 = distinct !DISubprogram(name: "strcmp", scope: !7128, file: !7128, line: 145, type: !7249, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7251)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!103, !144, !144}
!7251 = !{!7252, !7253}
!7252 = !DILocalVariable(name: "s1", arg: 1, scope: !7248, file: !7128, line: 145, type: !144)
!7253 = !DILocalVariable(name: "s2", arg: 2, scope: !7248, file: !7128, line: 145, type: !144)
!7254 = !DILocation(line: 0, scope: !7248)
!7255 = !DILocation(line: 147, column: 10, scope: !7248)
!7256 = !DILocation(line: 147, column: 17, scope: !7248)
!7257 = !DILocation(line: 147, column: 14, scope: !7248)
!7258 = !DILocation(line: 147, column: 22, scope: !7248)
!7259 = !DILocation(line: 148, column: 5, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7248, file: !7128, line: 147, column: 40)
!7261 = !DILocation(line: 149, column: 5, scope: !7260)
!7262 = distinct !{!7262, !7263, !7264}
!7263 = !DILocation(line: 147, column: 2, scope: !7248)
!7264 = !DILocation(line: 150, column: 2, scope: !7248)
!7265 = !DILocation(line: 152, column: 9, scope: !7248)
!7266 = !DILocation(line: 152, column: 15, scope: !7248)
!7267 = !DILocation(line: 152, column: 13, scope: !7248)
!7268 = !DILocation(line: 152, column: 2, scope: !7248)
!7269 = distinct !DISubprogram(name: "strncmp", scope: !7128, file: !7128, line: 162, type: !7270, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!103, !144, !144, !204}
!7272 = !{!7273, !7274, !7275}
!7273 = !DILocalVariable(name: "s1", arg: 1, scope: !7269, file: !7128, line: 162, type: !144)
!7274 = !DILocalVariable(name: "s2", arg: 2, scope: !7269, file: !7128, line: 162, type: !144)
!7275 = !DILocalVariable(name: "n", arg: 3, scope: !7269, file: !7128, line: 162, type: !204)
!7276 = !DILocation(line: 0, scope: !7269)
!7277 = !DILocation(line: 164, column: 17, scope: !7269)
!7278 = !DILocation(line: 164, column: 21, scope: !7269)
!7279 = !DILocation(line: 164, column: 28, scope: !7269)
!7280 = !DILocation(line: 164, column: 25, scope: !7269)
!7281 = !DILocation(line: 164, column: 33, scope: !7269)
!7282 = !DILocation(line: 165, column: 5, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7269, file: !7128, line: 164, column: 51)
!7284 = !DILocation(line: 166, column: 5, scope: !7283)
!7285 = !DILocation(line: 167, column: 4, scope: !7283)
!7286 = distinct !{!7286, !7287, !7288}
!7287 = !DILocation(line: 164, column: 2, scope: !7269)
!7288 = !DILocation(line: 168, column: 2, scope: !7269)
!7289 = !DILocation(line: 170, column: 25, scope: !7269)
!7290 = !DILocation(line: 170, column: 31, scope: !7269)
!7291 = !DILocation(line: 170, column: 29, scope: !7269)
!7292 = !DILocation(line: 170, column: 9, scope: !7269)
!7293 = !DILocation(line: 170, column: 2, scope: !7269)
!7294 = distinct !DISubprogram(name: "strtok_r", scope: !7128, file: !7128, line: 180, type: !7295, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7298)
!7295 = !DISubroutineType(types: !7296)
!7296 = !{!344, !344, !144, !7297}
!7297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7298 = !{!7299, !7300, !7301, !7302, !7303}
!7299 = !DILocalVariable(name: "str", arg: 1, scope: !7294, file: !7128, line: 180, type: !344)
!7300 = !DILocalVariable(name: "sep", arg: 2, scope: !7294, file: !7128, line: 180, type: !144)
!7301 = !DILocalVariable(name: "state", arg: 3, scope: !7294, file: !7128, line: 180, type: !7297)
!7302 = !DILocalVariable(name: "start", scope: !7294, file: !7128, line: 182, type: !344)
!7303 = !DILocalVariable(name: "end", scope: !7294, file: !7128, line: 182, type: !344)
!7304 = !DILocation(line: 0, scope: !7294)
!7305 = !DILocation(line: 184, column: 10, scope: !7294)
!7306 = !DILocation(line: 184, column: 22, scope: !7294)
!7307 = !DILocation(line: 187, column: 9, scope: !7294)
!7308 = !DILocation(line: 187, column: 16, scope: !7294)
!7309 = !DILocation(line: 187, column: 19, scope: !7294)
!7310 = !DILocation(line: 187, column: 2, scope: !7294)
!7311 = !DILocation(line: 188, column: 8, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7294, file: !7128, line: 187, column: 40)
!7313 = distinct !{!7313, !7310, !7314}
!7314 = !DILocation(line: 189, column: 2, scope: !7294)
!7315 = !DILocation(line: 198, column: 9, scope: !7294)
!7316 = !DILocation(line: 198, column: 18, scope: !7294)
!7317 = !DILocation(line: 198, column: 17, scope: !7294)
!7318 = !DILocation(line: 198, column: 2, scope: !7294)
!7319 = !DILocation(line: 199, column: 6, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7294, file: !7128, line: 198, column: 37)
!7321 = !DILocation(line: 198, column: 14, scope: !7294)
!7322 = distinct !{!7322, !7318, !7323}
!7323 = !DILocation(line: 200, column: 2, scope: !7294)
!7324 = !DILocation(line: 203, column: 8, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7326, file: !7128, line: 202, column: 20)
!7326 = distinct !DILexicalBlock(scope: !7294, file: !7128, line: 202, column: 6)
!7327 = !DILocation(line: 204, column: 16, scope: !7325)
!7328 = !DILocation(line: 205, column: 2, scope: !7325)
!7329 = !DILocation(line: 210, column: 1, scope: !7294)
!7330 = distinct !DISubprogram(name: "strcat", scope: !7128, file: !7128, line: 212, type: !7129, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7331)
!7331 = !{!7332, !7333}
!7332 = !DILocalVariable(name: "dest", arg: 1, scope: !7330, file: !7128, line: 212, type: !7131)
!7333 = !DILocalVariable(name: "src", arg: 2, scope: !7330, file: !7128, line: 212, type: !7132)
!7334 = !DILocation(line: 0, scope: !7330)
!7335 = !DILocation(line: 214, column: 16, scope: !7330)
!7336 = !DILocation(line: 214, column: 14, scope: !7330)
!7337 = !DILocation(line: 214, column: 2, scope: !7330)
!7338 = !DILocation(line: 215, column: 2, scope: !7330)
!7339 = distinct !DISubprogram(name: "strncat", scope: !7128, file: !7128, line: 218, type: !7150, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7340)
!7340 = !{!7341, !7342, !7343, !7344, !7345}
!7341 = !DILocalVariable(name: "dest", arg: 1, scope: !7339, file: !7128, line: 218, type: !7131)
!7342 = !DILocalVariable(name: "src", arg: 2, scope: !7339, file: !7128, line: 218, type: !7132)
!7343 = !DILocalVariable(name: "n", arg: 3, scope: !7339, file: !7128, line: 219, type: !204)
!7344 = !DILocalVariable(name: "orig_dest", scope: !7339, file: !7128, line: 221, type: !344)
!7345 = !DILocalVariable(name: "len", scope: !7339, file: !7128, line: 222, type: !204)
!7346 = !DILocation(line: 0, scope: !7339)
!7347 = !DILocation(line: 222, column: 15, scope: !7339)
!7348 = !DILocation(line: 224, column: 7, scope: !7339)
!7349 = !DILocation(line: 225, column: 14, scope: !7339)
!7350 = !DILocation(line: 225, column: 19, scope: !7339)
!7351 = !DILocation(line: 225, column: 11, scope: !7339)
!7352 = !DILocation(line: 225, column: 23, scope: !7339)
!7353 = !DILocation(line: 225, column: 28, scope: !7339)
!7354 = !DILocation(line: 225, column: 2, scope: !7339)
!7355 = !DILocation(line: 226, column: 17, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7339, file: !7128, line: 225, column: 38)
!7357 = !DILocation(line: 226, column: 8, scope: !7356)
!7358 = !DILocation(line: 226, column: 11, scope: !7356)
!7359 = distinct !{!7359, !7354, !7360}
!7360 = !DILocation(line: 227, column: 2, scope: !7339)
!7361 = !DILocation(line: 228, column: 8, scope: !7339)
!7362 = !DILocation(line: 230, column: 2, scope: !7339)
!7363 = distinct !DISubprogram(name: "memcmp", scope: !7128, file: !7128, line: 239, type: !7364, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7366)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!103, !13, !13, !204}
!7366 = !{!7367, !7368, !7369, !7370, !7371}
!7367 = !DILocalVariable(name: "m1", arg: 1, scope: !7363, file: !7128, line: 239, type: !13)
!7368 = !DILocalVariable(name: "m2", arg: 2, scope: !7363, file: !7128, line: 239, type: !13)
!7369 = !DILocalVariable(name: "n", arg: 3, scope: !7363, file: !7128, line: 239, type: !204)
!7370 = !DILocalVariable(name: "c1", scope: !7363, file: !7128, line: 241, type: !144)
!7371 = !DILocalVariable(name: "c2", scope: !7363, file: !7128, line: 242, type: !144)
!7372 = !DILocation(line: 0, scope: !7363)
!7373 = !DILocation(line: 244, column: 7, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7363, file: !7128, line: 244, column: 6)
!7375 = !DILocation(line: 244, column: 6, scope: !7363)
!7376 = !DILocation(line: 248, column: 10, scope: !7363)
!7377 = !DILocation(line: 248, column: 14, scope: !7363)
!7378 = !DILocation(line: 248, column: 19, scope: !7363)
!7379 = !DILocation(line: 248, column: 2, scope: !7363)
!7380 = !DILocation(line: 248, column: 23, scope: !7363)
!7381 = !DILocation(line: 248, column: 30, scope: !7363)
!7382 = !DILocation(line: 248, column: 27, scope: !7363)
!7383 = !DILocation(line: 249, column: 5, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7363, file: !7128, line: 248, column: 36)
!7385 = !DILocation(line: 250, column: 5, scope: !7384)
!7386 = distinct !{!7386, !7379, !7387}
!7387 = !DILocation(line: 251, column: 2, scope: !7363)
!7388 = !DILocation(line: 253, column: 9, scope: !7363)
!7389 = !DILocation(line: 253, column: 15, scope: !7363)
!7390 = !DILocation(line: 253, column: 13, scope: !7363)
!7391 = !DILocation(line: 253, column: 2, scope: !7363)
!7392 = !DILocation(line: 254, column: 1, scope: !7363)
!7393 = distinct !DISubprogram(name: "memmove", scope: !7128, file: !7128, line: 263, type: !7394, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7396)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!102, !102, !13, !204}
!7396 = !{!7397, !7398, !7399, !7400, !7401}
!7397 = !DILocalVariable(name: "d", arg: 1, scope: !7393, file: !7128, line: 263, type: !102)
!7398 = !DILocalVariable(name: "s", arg: 2, scope: !7393, file: !7128, line: 263, type: !13)
!7399 = !DILocalVariable(name: "n", arg: 3, scope: !7393, file: !7128, line: 263, type: !204)
!7400 = !DILocalVariable(name: "dest", scope: !7393, file: !7128, line: 265, type: !344)
!7401 = !DILocalVariable(name: "src", scope: !7393, file: !7128, line: 266, type: !144)
!7402 = !DILocation(line: 0, scope: !7393)
!7403 = !DILocation(line: 268, column: 21, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7393, file: !7128, line: 268, column: 6)
!7405 = !DILocation(line: 268, column: 28, scope: !7404)
!7406 = !DILocation(line: 268, column: 6, scope: !7393)
!7407 = !DILocation(line: 280, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !7128, line: 278, column: 9)
!7409 = !DILocation(line: 280, column: 3, scope: !7408)
!7410 = !DILocation(line: 275, column: 5, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7412, file: !7128, line: 274, column: 17)
!7412 = distinct !DILexicalBlock(scope: !7404, file: !7128, line: 268, column: 33)
!7413 = !DILocation(line: 276, column: 14, scope: !7411)
!7414 = !DILocation(line: 276, column: 4, scope: !7411)
!7415 = !DILocation(line: 276, column: 12, scope: !7411)
!7416 = !DILocation(line: 274, column: 12, scope: !7412)
!7417 = !DILocation(line: 274, column: 3, scope: !7412)
!7418 = distinct !{!7418, !7417, !7419}
!7419 = !DILocation(line: 277, column: 3, scope: !7412)
!7420 = !DILocation(line: 281, column: 12, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7408, file: !7128, line: 280, column: 17)
!7422 = !DILocation(line: 281, column: 10, scope: !7421)
!7423 = !DILocation(line: 282, column: 8, scope: !7421)
!7424 = !DILocation(line: 283, column: 7, scope: !7421)
!7425 = !DILocation(line: 284, column: 5, scope: !7421)
!7426 = distinct !{!7426, !7409, !7427}
!7427 = !DILocation(line: 285, column: 3, scope: !7408)
!7428 = !DILocation(line: 288, column: 2, scope: !7393)
!7429 = distinct !DISubprogram(name: "memcpy", scope: !7128, file: !7128, line: 298, type: !7430, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7434)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!102, !7432, !7433, !204}
!7432 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7433 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7434 = !{!7435, !7436, !7437, !7438, !7439}
!7435 = !DILocalVariable(name: "d", arg: 1, scope: !7429, file: !7128, line: 298, type: !7432)
!7436 = !DILocalVariable(name: "s", arg: 2, scope: !7429, file: !7128, line: 298, type: !7433)
!7437 = !DILocalVariable(name: "n", arg: 3, scope: !7429, file: !7128, line: 298, type: !204)
!7438 = !DILocalVariable(name: "d_byte", scope: !7429, file: !7128, line: 302, type: !230)
!7439 = !DILocalVariable(name: "s_byte", scope: !7429, file: !7128, line: 303, type: !2997)
!7440 = !DILocation(line: 0, scope: !7429)
!7441 = !DILocation(line: 337, column: 11, scope: !7429)
!7442 = !DILocation(line: 337, column: 2, scope: !7429)
!7443 = !DILocation(line: 338, column: 25, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7429, file: !7128, line: 337, column: 16)
!7445 = !DILocation(line: 338, column: 17, scope: !7444)
!7446 = !DILocation(line: 338, column: 11, scope: !7444)
!7447 = !DILocation(line: 338, column: 15, scope: !7444)
!7448 = !DILocation(line: 339, column: 4, scope: !7444)
!7449 = distinct !{!7449, !7442, !7450}
!7450 = !DILocation(line: 340, column: 2, scope: !7429)
!7451 = !DILocation(line: 342, column: 2, scope: !7429)
!7452 = distinct !DISubprogram(name: "memset", scope: !7128, file: !7128, line: 352, type: !7453, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7455)
!7453 = !DISubroutineType(types: !7454)
!7454 = !{!102, !102, !103, !204}
!7455 = !{!7456, !7457, !7458, !7459, !7460}
!7456 = !DILocalVariable(name: "buf", arg: 1, scope: !7452, file: !7128, line: 352, type: !102)
!7457 = !DILocalVariable(name: "c", arg: 2, scope: !7452, file: !7128, line: 352, type: !103)
!7458 = !DILocalVariable(name: "n", arg: 3, scope: !7452, file: !7128, line: 352, type: !204)
!7459 = !DILocalVariable(name: "d_byte", scope: !7452, file: !7128, line: 356, type: !230)
!7460 = !DILocalVariable(name: "c_byte", scope: !7452, file: !7128, line: 357, type: !155)
!7461 = !DILocation(line: 0, scope: !7452)
!7462 = !DILocation(line: 357, column: 25, scope: !7452)
!7463 = !DILocation(line: 389, column: 11, scope: !7452)
!7464 = !DILocation(line: 389, column: 2, scope: !7452)
!7465 = !DILocation(line: 390, column: 11, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7452, file: !7128, line: 389, column: 16)
!7467 = !DILocation(line: 390, column: 15, scope: !7466)
!7468 = !DILocation(line: 391, column: 4, scope: !7466)
!7469 = distinct !{!7469, !7464, !7470}
!7470 = !DILocation(line: 392, column: 2, scope: !7452)
!7471 = !DILocation(line: 394, column: 2, scope: !7452)
!7472 = distinct !DISubprogram(name: "memchr", scope: !7128, file: !7128, line: 404, type: !7473, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2994, retainedNodes: !7475)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!102, !13, !103, !204}
!7475 = !{!7476, !7477, !7478, !7479}
!7476 = !DILocalVariable(name: "s", arg: 1, scope: !7472, file: !7128, line: 404, type: !13)
!7477 = !DILocalVariable(name: "c", arg: 2, scope: !7472, file: !7128, line: 404, type: !103)
!7478 = !DILocalVariable(name: "n", arg: 3, scope: !7472, file: !7128, line: 404, type: !204)
!7479 = !DILocalVariable(name: "p", scope: !7480, file: !7128, line: 407, type: !2997)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !7128, line: 406, column: 14)
!7481 = distinct !DILexicalBlock(scope: !7472, file: !7128, line: 406, column: 6)
!7482 = !DILocation(line: 0, scope: !7472)
!7483 = !DILocation(line: 406, column: 8, scope: !7481)
!7484 = !DILocation(line: 406, column: 6, scope: !7472)
!7485 = !DILocation(line: 409, column: 3, scope: !7480)
!7486 = !DILocation(line: 0, scope: !7480)
!7487 = !DILocation(line: 410, column: 8, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7489, file: !7128, line: 410, column: 8)
!7489 = distinct !DILexicalBlock(scope: !7480, file: !7128, line: 409, column: 6)
!7490 = !DILocation(line: 410, column: 13, scope: !7488)
!7491 = !DILocation(line: 410, column: 8, scope: !7489)
!7492 = distinct !{!7492, !7485, !7493}
!7493 = !DILocation(line: 414, column: 20, scope: !7480)
!7494 = !DILocation(line: 417, column: 2, scope: !7472)
!7495 = !DILocation(line: 418, column: 1, scope: !7472)
!7496 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3389, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7497)
!7497 = !{!7498}
!7498 = !DILocalVariable(name: "hook", arg: 1, scope: !7496, file: !553, line: 23, type: !106)
!7499 = !DILocation(line: 0, scope: !7496)
!7500 = !DILocation(line: 25, column: 15, scope: !7496)
!7501 = !DILocation(line: 26, column: 1, scope: !7496)
!7502 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7503)
!7503 = !{!7504}
!7504 = !DILocalVariable(name: "c", arg: 1, scope: !7502, file: !553, line: 14, type: !103)
!7505 = !DILocation(line: 0, scope: !7502)
!7506 = !DILocation(line: 18, column: 2, scope: !7502)
!7507 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7508, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7510)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!103, !103, !549}
!7510 = !{!7511, !7512}
!7511 = !DILocalVariable(name: "c", arg: 1, scope: !7507, file: !553, line: 28, type: !103)
!7512 = !DILocalVariable(name: "stream", arg: 2, scope: !7507, file: !553, line: 28, type: !549)
!7513 = !DILocation(line: 0, scope: !7507)
!7514 = !DILocation(line: 30, column: 27, scope: !7507)
!7515 = !DILocation(line: 30, column: 50, scope: !7507)
!7516 = !DILocation(line: 30, column: 9, scope: !7507)
!7517 = !DILocation(line: 30, column: 2, scope: !7507)
!7518 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7508, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7519)
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "c", arg: 1, scope: !7518, file: !553, line: 41, type: !103)
!7521 = !DILocalVariable(name: "stream", arg: 2, scope: !7518, file: !553, line: 41, type: !549)
!7522 = !DILocation(line: 0, scope: !7518)
!7523 = !DILocation(line: 43, column: 9, scope: !7518)
!7524 = !DILocation(line: 43, column: 2, scope: !7518)
!7525 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7526, file: !7526, line: 72, type: !7508, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7527)
!7526 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!7527 = !{!7528, !7529}
!7528 = !DILocalVariable(name: "c", arg: 1, scope: !7525, file: !7526, line: 72, type: !103)
!7529 = !DILocalVariable(name: "stream", arg: 2, scope: !7525, file: !7526, line: 72, type: !549)
!7530 = !DILocation(line: 0, scope: !7525)
!7531 = !DILocation(line: 81, column: 2, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7525, file: !7526, line: 81, column: 2)
!7533 = !{i64 2155123380}
!7534 = !DILocation(line: 82, column: 9, scope: !7525)
!7535 = !DILocation(line: 82, column: 2, scope: !7525)
!7536 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7537, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7540)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!103, !7132, !7539}
!7539 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7540 = !{!7541, !7542, !7543, !7544}
!7541 = !DILocalVariable(name: "s", arg: 1, scope: !7536, file: !553, line: 46, type: !7132)
!7542 = !DILocalVariable(name: "stream", arg: 2, scope: !7536, file: !553, line: 46, type: !7539)
!7543 = !DILocalVariable(name: "len", scope: !7536, file: !553, line: 48, type: !103)
!7544 = !DILocalVariable(name: "ret", scope: !7536, file: !553, line: 49, type: !103)
!7545 = !DILocation(line: 0, scope: !7536)
!7546 = !DILocation(line: 48, column: 12, scope: !7536)
!7547 = !DILocation(line: 51, column: 8, scope: !7536)
!7548 = !DILocation(line: 53, column: 13, scope: !7536)
!7549 = !DILocation(line: 53, column: 9, scope: !7536)
!7550 = !DILocation(line: 53, column: 2, scope: !7536)
!7551 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7552, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!204, !7433, !204, !204, !7539}
!7554 = !{!7555, !7556, !7557, !7558}
!7555 = !DILocalVariable(name: "ptr", arg: 1, scope: !7551, file: !553, line: 99, type: !7433)
!7556 = !DILocalVariable(name: "size", arg: 2, scope: !7551, file: !553, line: 99, type: !204)
!7557 = !DILocalVariable(name: "nitems", arg: 3, scope: !7551, file: !553, line: 99, type: !204)
!7558 = !DILocalVariable(name: "stream", arg: 4, scope: !7551, file: !553, line: 100, type: !7539)
!7559 = !DILocation(line: 0, scope: !7551)
!7560 = !DILocation(line: 102, column: 9, scope: !7551)
!7561 = !DILocation(line: 102, column: 2, scope: !7551)
!7562 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7526, file: !7526, line: 96, type: !7552, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7563)
!7563 = !{!7564, !7565, !7566, !7567}
!7564 = !DILocalVariable(name: "ptr", arg: 1, scope: !7562, file: !7526, line: 96, type: !7433)
!7565 = !DILocalVariable(name: "size", arg: 2, scope: !7562, file: !7526, line: 96, type: !204)
!7566 = !DILocalVariable(name: "nitems", arg: 3, scope: !7562, file: !7526, line: 96, type: !204)
!7567 = !DILocalVariable(name: "stream", arg: 4, scope: !7562, file: !7526, line: 96, type: !7539)
!7568 = !DILocation(line: 0, scope: !7562)
!7569 = !DILocation(line: 107, column: 2, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7562, file: !7526, line: 107, column: 2)
!7571 = !{i64 2155123484}
!7572 = !DILocation(line: 108, column: 9, scope: !7562)
!7573 = !DILocation(line: 108, column: 2, scope: !7562)
!7574 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7552, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7575)
!7575 = !{!7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583}
!7576 = !DILocalVariable(name: "ptr", arg: 1, scope: !7574, file: !553, line: 56, type: !7433)
!7577 = !DILocalVariable(name: "size", arg: 2, scope: !7574, file: !553, line: 56, type: !204)
!7578 = !DILocalVariable(name: "nitems", arg: 3, scope: !7574, file: !553, line: 57, type: !204)
!7579 = !DILocalVariable(name: "stream", arg: 4, scope: !7574, file: !553, line: 57, type: !7539)
!7580 = !DILocalVariable(name: "i", scope: !7574, file: !553, line: 59, type: !204)
!7581 = !DILocalVariable(name: "j", scope: !7574, file: !553, line: 60, type: !204)
!7582 = !DILocalVariable(name: "p", scope: !7574, file: !553, line: 61, type: !2997)
!7583 = !DILabel(scope: !7574, name: "done", file: !553, line: 82)
!7584 = !DILocation(line: 0, scope: !7574)
!7585 = !DILocation(line: 63, column: 14, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7574, file: !553, line: 63, column: 6)
!7587 = !DILocation(line: 63, column: 24, scope: !7586)
!7588 = !DILocation(line: 72, column: 3, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7574, file: !553, line: 70, column: 5)
!7590 = !DILocation(line: 0, scope: !7589)
!7591 = !DILocation(line: 73, column: 8, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !553, line: 73, column: 8)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !553, line: 72, column: 6)
!7594 = !DILocation(line: 73, column: 29, scope: !7592)
!7595 = !DILocation(line: 73, column: 27, scope: !7592)
!7596 = !DILocation(line: 73, column: 21, scope: !7592)
!7597 = !DILocation(line: 73, column: 33, scope: !7592)
!7598 = !DILocation(line: 73, column: 8, scope: !7593)
!7599 = !DILocation(line: 76, column: 5, scope: !7593)
!7600 = !DILocation(line: 77, column: 14, scope: !7589)
!7601 = !DILocation(line: 77, column: 3, scope: !7593)
!7602 = distinct !{!7602, !7588, !7603}
!7603 = !DILocation(line: 77, column: 17, scope: !7589)
!7604 = !DILocation(line: 79, column: 4, scope: !7589)
!7605 = !DILocation(line: 80, column: 13, scope: !7574)
!7606 = !DILocation(line: 80, column: 2, scope: !7589)
!7607 = distinct !{!7607, !7608, !7609}
!7608 = !DILocation(line: 70, column: 2, scope: !7574)
!7609 = !DILocation(line: 80, column: 16, scope: !7574)
!7610 = !DILocation(line: 82, column: 1, scope: !7574)
!7611 = !DILocation(line: 83, column: 17, scope: !7574)
!7612 = !DILocation(line: 83, column: 2, scope: !7574)
!7613 = !DILocation(line: 84, column: 1, scope: !7574)
!7614 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7615, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7617)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!103, !144}
!7617 = !{!7618}
!7618 = !DILocalVariable(name: "s", arg: 1, scope: !7614, file: !553, line: 106, type: !144)
!7619 = !DILocation(line: 0, scope: !7614)
!7620 = !DILocation(line: 108, column: 6, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7614, file: !553, line: 108, column: 6)
!7622 = !DILocation(line: 108, column: 23, scope: !7621)
!7623 = !DILocation(line: 108, column: 6, scope: !7614)
!7624 = !DILocation(line: 112, column: 9, scope: !7614)
!7625 = !DILocation(line: 112, column: 29, scope: !7614)
!7626 = !DILocation(line: 112, column: 2, scope: !7614)
!7627 = !DILocation(line: 113, column: 1, scope: !7614)
!7628 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !694, file: !694, line: 368, type: !747, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7629)
!7629 = !{!7630}
!7630 = !DILocalVariable(name: "dev", arg: 1, scope: !7628, file: !694, line: 368, type: !723)
!7631 = !DILocation(line: 0, scope: !7628)
!7632 = !DILocation(line: 370, column: 2, scope: !7628)
!7633 = !DILocation(line: 371, column: 1, scope: !7628)
!7634 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !694, file: !694, line: 243, type: !7635, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7637)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{null, !103, !103, !723}
!7637 = !{!7638, !7639, !7640, !7641, !7643}
!7638 = !DILocalVariable(name: "min", arg: 1, scope: !7634, file: !694, line: 243, type: !103)
!7639 = !DILocalVariable(name: "max", arg: 2, scope: !7634, file: !694, line: 243, type: !103)
!7640 = !DILocalVariable(name: "dev", arg: 3, scope: !7634, file: !694, line: 243, type: !723)
!7641 = !DILocalVariable(name: "data", scope: !7634, file: !694, line: 245, type: !7642)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!7643 = !DILocalVariable(name: "line", scope: !7634, file: !694, line: 246, type: !103)
!7644 = !DILocation(line: 0, scope: !7634)
!7645 = !DILocation(line: 245, column: 38, scope: !7634)
!7646 = !DILocation(line: 249, column: 24, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !694, line: 249, column: 2)
!7648 = distinct !DILexicalBlock(scope: !7634, file: !694, line: 249, column: 2)
!7649 = !DILocation(line: 249, column: 2, scope: !7648)
!7650 = !DILocation(line: 251, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !694, line: 251, column: 7)
!7652 = distinct !DILexicalBlock(scope: !7647, file: !694, line: 249, column: 39)
!7653 = !DILocation(line: 251, column: 7, scope: !7652)
!7654 = !DILocation(line: 253, column: 4, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7651, file: !694, line: 251, column: 36)
!7656 = !DILocation(line: 256, column: 24, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7655, file: !694, line: 256, column: 8)
!7658 = !DILocation(line: 256, column: 9, scope: !7657)
!7659 = !DILocation(line: 256, column: 8, scope: !7655)
!7660 = !DILocation(line: 260, column: 43, scope: !7655)
!7661 = !DILocation(line: 260, column: 4, scope: !7655)
!7662 = !DILocation(line: 261, column: 3, scope: !7655)
!7663 = !DILocation(line: 249, column: 35, scope: !7647)
!7664 = distinct !{!7664, !7649, !7665}
!7665 = !DILocation(line: 262, column: 2, scope: !7648)
!7666 = !DILocation(line: 263, column: 1, scope: !7634)
!7667 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !694, file: !694, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7668)
!7668 = !{!7669}
!7669 = !DILocalVariable(name: "line", arg: 1, scope: !7667, file: !694, line: 158, type: !103)
!7670 = !DILocation(line: 0, scope: !7667)
!7671 = !DILocation(line: 170, column: 38, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !694, line: 160, column: 17)
!7673 = distinct !DILexicalBlock(scope: !7667, file: !694, line: 160, column: 6)
!7674 = !DILocation(line: 170, column: 10, scope: !7672)
!7675 = !DILocation(line: 176, column: 1, scope: !7667)
!7676 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !694, file: !694, line: 183, type: !7677, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !103}
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "line", arg: 1, scope: !7676, file: !694, line: 183, type: !103)
!7681 = !DILocation(line: 0, scope: !7676)
!7682 = !DILocation(line: 195, column: 28, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !694, line: 185, column: 17)
!7684 = distinct !DILexicalBlock(scope: !7676, file: !694, line: 185, column: 6)
!7685 = !DILocation(line: 195, column: 3, scope: !7683)
!7686 = !DILocation(line: 200, column: 1, scope: !7676)
!7687 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7688, file: !7688, line: 910, type: !6124, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7689)
!7688 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7689 = !{!7690}
!7690 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7687, file: !7688, line: 910, type: !121)
!7691 = !DILocation(line: 0, scope: !7687)
!7692 = !DILocation(line: 912, column: 3, scope: !7687)
!7693 = !DILocation(line: 913, column: 1, scope: !7687)
!7694 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7688, file: !7688, line: 834, type: !7040, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7695)
!7695 = !{!7696}
!7696 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7694, file: !7688, line: 834, type: !121)
!7697 = !DILocation(line: 0, scope: !7694)
!7698 = !DILocation(line: 836, column: 11, scope: !7694)
!7699 = !DILocation(line: 836, column: 40, scope: !7694)
!7700 = !DILocation(line: 836, column: 3, scope: !7694)
!7701 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !694, file: !694, line: 304, type: !747, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7702)
!7702 = !{!7703}
!7703 = !DILocalVariable(name: "dev", arg: 1, scope: !7701, file: !694, line: 304, type: !723)
!7704 = !DILocation(line: 0, scope: !7701)
!7705 = !DILocation(line: 306, column: 2, scope: !7701)
!7706 = !DILocation(line: 307, column: 1, scope: !7701)
!7707 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !694, file: !694, line: 299, type: !747, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7708)
!7708 = !{!7709}
!7709 = !DILocalVariable(name: "dev", arg: 1, scope: !7707, file: !694, line: 299, type: !723)
!7710 = !DILocation(line: 0, scope: !7707)
!7711 = !DILocation(line: 301, column: 2, scope: !7707)
!7712 = !DILocation(line: 302, column: 1, scope: !7707)
!7713 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !694, file: !694, line: 294, type: !747, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7714)
!7714 = !{!7715}
!7715 = !DILocalVariable(name: "dev", arg: 1, scope: !7713, file: !694, line: 294, type: !723)
!7716 = !DILocation(line: 0, scope: !7713)
!7717 = !DILocation(line: 296, column: 2, scope: !7713)
!7718 = !DILocation(line: 297, column: 1, scope: !7713)
!7719 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !694, file: !694, line: 397, type: !747, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7720)
!7720 = !{!7721}
!7721 = !DILocalVariable(name: "dev", arg: 1, scope: !7719, file: !694, line: 397, type: !723)
!7722 = !DILocation(line: 0, scope: !7719)
!7723 = !DILocation(line: 399, column: 2, scope: !7719)
!7724 = !DILocation(line: 400, column: 1, scope: !7719)
!7725 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !694, file: !694, line: 392, type: !747, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7726)
!7726 = !{!7727}
!7727 = !DILocalVariable(name: "dev", arg: 1, scope: !7725, file: !694, line: 392, type: !723)
!7728 = !DILocation(line: 0, scope: !7725)
!7729 = !DILocation(line: 394, column: 2, scope: !7725)
!7730 = !DILocation(line: 395, column: 1, scope: !7725)
!7731 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !694, file: !694, line: 289, type: !747, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7732)
!7732 = !{!7733}
!7733 = !DILocalVariable(name: "dev", arg: 1, scope: !7731, file: !694, line: 289, type: !723)
!7734 = !DILocation(line: 0, scope: !7731)
!7735 = !DILocation(line: 291, column: 2, scope: !7731)
!7736 = !DILocation(line: 292, column: 1, scope: !7731)
!7737 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !694, file: !694, line: 387, type: !747, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7738)
!7738 = !{!7739}
!7739 = !DILocalVariable(name: "dev", arg: 1, scope: !7737, file: !694, line: 387, type: !723)
!7740 = !DILocation(line: 0, scope: !7737)
!7741 = !DILocation(line: 389, column: 2, scope: !7737)
!7742 = !DILocation(line: 390, column: 1, scope: !7737)
!7743 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !694, file: !694, line: 382, type: !747, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7744)
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "dev", arg: 1, scope: !7743, file: !694, line: 382, type: !723)
!7746 = !DILocation(line: 0, scope: !7743)
!7747 = !DILocation(line: 384, column: 2, scope: !7743)
!7748 = !DILocation(line: 385, column: 1, scope: !7743)
!7749 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !694, file: !694, line: 373, type: !747, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7750)
!7750 = !{!7751}
!7751 = !DILocalVariable(name: "dev", arg: 1, scope: !7749, file: !694, line: 373, type: !723)
!7752 = !DILocation(line: 0, scope: !7749)
!7753 = !DILocation(line: 375, column: 2, scope: !7749)
!7754 = !DILocation(line: 376, column: 1, scope: !7749)
!7755 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !694, file: !694, line: 284, type: !747, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7756)
!7756 = !{!7757}
!7757 = !DILocalVariable(name: "dev", arg: 1, scope: !7755, file: !694, line: 284, type: !723)
!7758 = !DILocation(line: 0, scope: !7755)
!7759 = !DILocation(line: 286, column: 2, scope: !7755)
!7760 = !DILocation(line: 287, column: 1, scope: !7755)
!7761 = distinct !DISubprogram(name: "stm32_exti_init", scope: !694, file: !694, line: 416, type: !721, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7762)
!7762 = !{!7763}
!7763 = !DILocalVariable(name: "dev", arg: 1, scope: !7761, file: !694, line: 416, type: !723)
!7764 = !DILocation(line: 0, scope: !7761)
!7765 = !DILocation(line: 418, column: 2, scope: !7761)
!7766 = !DILocation(line: 420, column: 2, scope: !7761)
!7767 = !DILocation(line: 0, scope: !746)
!7768 = !DILocation(line: 493, column: 2, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !746, file: !694, line: 493, column: 2)
!7770 = !DILocation(line: 497, column: 2, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !746, file: !694, line: 497, column: 2)
!7772 = !DILocation(line: 507, column: 2, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !746, file: !694, line: 507, column: 2)
!7774 = !DILocation(line: 512, column: 2, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !746, file: !694, line: 512, column: 2)
!7776 = !DILocation(line: 516, column: 2, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !746, file: !694, line: 516, column: 2)
!7778 = !DILocation(line: 523, column: 2, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !746, file: !694, line: 523, column: 2)
!7780 = !DILocation(line: 527, column: 2, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !746, file: !694, line: 527, column: 2)
!7782 = !DILocation(line: 581, column: 2, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !746, file: !694, line: 581, column: 2)
!7784 = !DILocation(line: 586, column: 2, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !746, file: !694, line: 586, column: 2)
!7786 = !DILocation(line: 591, column: 2, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !746, file: !694, line: 591, column: 2)
!7788 = !DILocation(line: 595, column: 2, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !746, file: !694, line: 595, column: 2)
!7790 = !DILocation(line: 607, column: 1, scope: !746)
!7791 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !694, file: !694, line: 112, type: !7677, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7792)
!7792 = !{!7793, !7794}
!7793 = !DILocalVariable(name: "line", arg: 1, scope: !7791, file: !694, line: 112, type: !103)
!7794 = !DILocalVariable(name: "irqnum", scope: !7791, file: !694, line: 114, type: !103)
!7795 = !DILocation(line: 0, scope: !7791)
!7796 = !DILocation(line: 121, column: 11, scope: !7791)
!7797 = !DILocation(line: 130, column: 26, scope: !7791)
!7798 = !DILocation(line: 130, column: 2, scope: !7791)
!7799 = !DILocation(line: 134, column: 2, scope: !7791)
!7800 = !DILocation(line: 135, column: 1, scope: !7791)
!7801 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7688, file: !7688, line: 268, type: !6124, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7802)
!7802 = !{!7803}
!7803 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7801, file: !7688, line: 268, type: !121)
!7804 = !DILocation(line: 0, scope: !7801)
!7805 = !DILocation(line: 270, column: 3, scope: !7801)
!7806 = !DILocation(line: 271, column: 1, scope: !7801)
!7807 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !694, file: !694, line: 137, type: !7677, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7808)
!7808 = !{!7809}
!7809 = !DILocalVariable(name: "line", arg: 1, scope: !7807, file: !694, line: 137, type: !103)
!7810 = !DILocation(line: 0, scope: !7807)
!7811 = !DILocation(line: 141, column: 11, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7807, file: !694, line: 141, column: 6)
!7813 = !DILocation(line: 141, column: 6, scope: !7807)
!7814 = !DILocation(line: 145, column: 28, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7812, file: !694, line: 141, column: 17)
!7816 = !DILocation(line: 145, column: 3, scope: !7815)
!7817 = !DILocation(line: 147, column: 2, scope: !7815)
!7818 = !DILocation(line: 151, column: 1, scope: !7807)
!7819 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7688, file: !7688, line: 309, type: !6124, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7820)
!7820 = !{!7821}
!7821 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7819, file: !7688, line: 309, type: !121)
!7822 = !DILocation(line: 0, scope: !7819)
!7823 = !DILocation(line: 311, column: 3, scope: !7819)
!7824 = !DILocation(line: 312, column: 1, scope: !7819)
!7825 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !694, file: !694, line: 202, type: !7826, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7828)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{null, !103, !103}
!7828 = !{!7829, !7830}
!7829 = !DILocalVariable(name: "line", arg: 1, scope: !7825, file: !694, line: 202, type: !103)
!7830 = !DILocalVariable(name: "trigger", arg: 2, scope: !7825, file: !694, line: 202, type: !103)
!7831 = !DILocation(line: 0, scope: !7825)
!7832 = !DILocation(line: 211, column: 2, scope: !7825)
!7833 = !DILocation(line: 213, column: 36, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7825, file: !694, line: 211, column: 19)
!7835 = !DILocation(line: 213, column: 3, scope: !7834)
!7836 = !DILocation(line: 214, column: 3, scope: !7834)
!7837 = !DILocation(line: 215, column: 3, scope: !7834)
!7838 = !DILocation(line: 217, column: 35, scope: !7834)
!7839 = !DILocation(line: 217, column: 3, scope: !7834)
!7840 = !DILocation(line: 218, column: 3, scope: !7834)
!7841 = !DILocation(line: 219, column: 3, scope: !7834)
!7842 = !DILocation(line: 221, column: 36, scope: !7834)
!7843 = !DILocation(line: 221, column: 3, scope: !7834)
!7844 = !DILocation(line: 222, column: 3, scope: !7834)
!7845 = !DILocation(line: 223, column: 3, scope: !7834)
!7846 = !DILocation(line: 225, column: 35, scope: !7834)
!7847 = !DILocation(line: 225, column: 3, scope: !7834)
!7848 = !DILocation(line: 226, column: 3, scope: !7834)
!7849 = !DILocation(line: 227, column: 3, scope: !7834)
!7850 = !DILocation(line: 232, column: 1, scope: !7825)
!7851 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7688, file: !7688, line: 573, type: !6124, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7852)
!7852 = !{!7853}
!7853 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7851, file: !7688, line: 573, type: !121)
!7854 = !DILocation(line: 0, scope: !7851)
!7855 = !DILocation(line: 575, column: 3, scope: !7851)
!7856 = !DILocation(line: 577, column: 1, scope: !7851)
!7857 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7688, file: !7688, line: 703, type: !6124, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7858)
!7858 = !{!7859}
!7859 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7857, file: !7688, line: 703, type: !121)
!7860 = !DILocation(line: 0, scope: !7857)
!7861 = !DILocation(line: 705, column: 3, scope: !7857)
!7862 = !DILocation(line: 706, column: 1, scope: !7857)
!7863 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7688, file: !7688, line: 529, type: !6124, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7864)
!7864 = !{!7865}
!7865 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7863, file: !7688, line: 529, type: !121)
!7866 = !DILocation(line: 0, scope: !7863)
!7867 = !DILocation(line: 531, column: 3, scope: !7863)
!7868 = !DILocation(line: 533, column: 1, scope: !7863)
!7869 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7688, file: !7688, line: 661, type: !6124, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7870)
!7870 = !{!7871}
!7871 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7869, file: !7688, line: 661, type: !121)
!7872 = !DILocation(line: 0, scope: !7869)
!7873 = !DILocation(line: 663, column: 3, scope: !7869)
!7874 = !DILocation(line: 664, column: 1, scope: !7869)
!7875 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !694, file: !694, line: 433, type: !7876, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7878)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!103, !103, !734, !102}
!7878 = !{!7879, !7880, !7881, !7882, !7884}
!7879 = !DILocalVariable(name: "line", arg: 1, scope: !7875, file: !694, line: 433, type: !103)
!7880 = !DILocalVariable(name: "cb", arg: 2, scope: !7875, file: !694, line: 433, type: !734)
!7881 = !DILocalVariable(name: "arg", arg: 3, scope: !7875, file: !694, line: 433, type: !102)
!7882 = !DILocalVariable(name: "dev", scope: !7875, file: !694, line: 435, type: !7883)
!7883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !723)
!7884 = !DILocalVariable(name: "data", scope: !7875, file: !694, line: 436, type: !7642)
!7885 = !DILocation(line: 0, scope: !7875)
!7886 = !DILocation(line: 438, column: 21, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7875, file: !694, line: 438, column: 6)
!7888 = !DILocation(line: 438, column: 6, scope: !7887)
!7889 = !DILocation(line: 438, column: 6, scope: !7875)
!7890 = !DILocation(line: 442, column: 20, scope: !7875)
!7891 = !DILocation(line: 443, column: 17, scope: !7875)
!7892 = !DILocation(line: 443, column: 22, scope: !7875)
!7893 = !DILocation(line: 445, column: 2, scope: !7875)
!7894 = !DILocation(line: 446, column: 1, scope: !7875)
!7895 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !694, file: !694, line: 448, type: !7677, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7896)
!7896 = !{!7897, !7898, !7899}
!7897 = !DILocalVariable(name: "line", arg: 1, scope: !7895, file: !694, line: 448, type: !103)
!7898 = !DILocalVariable(name: "dev", scope: !7895, file: !694, line: 450, type: !7883)
!7899 = !DILocalVariable(name: "data", scope: !7895, file: !694, line: 451, type: !7642)
!7900 = !DILocation(line: 0, scope: !7895)
!7901 = !DILocation(line: 453, column: 17, scope: !7895)
!7902 = !DILocation(line: 453, column: 20, scope: !7895)
!7903 = !DILocation(line: 454, column: 17, scope: !7895)
!7904 = !DILocation(line: 454, column: 22, scope: !7895)
!7905 = !DILocation(line: 455, column: 1, scope: !7895)
!7906 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !886, file: !886, line: 183, type: !924, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !7907)
!7907 = !{!7908, !7909, !7910, !7911, !7912}
!7908 = !DILocalVariable(name: "dev", arg: 1, scope: !7906, file: !886, line: 183, type: !915)
!7909 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7906, file: !886, line: 184, type: !926)
!7910 = !DILocalVariable(name: "pclken", scope: !7906, file: !886, line: 186, type: !876)
!7911 = !DILocalVariable(name: "reg", scope: !7906, file: !886, line: 187, type: !1612)
!7912 = !DILocalVariable(name: "reg_val", scope: !7906, file: !886, line: 188, type: !121)
!7913 = !DILocation(line: 0, scope: !7906)
!7914 = !DILocation(line: 192, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7906, file: !886, line: 192, column: 6)
!7916 = !DILocation(line: 192, column: 6, scope: !7906)
!7917 = !DILocation(line: 197, column: 52, scope: !7906)
!7918 = !DILocation(line: 197, column: 8, scope: !7906)
!7919 = !DILocation(line: 198, column: 12, scope: !7906)
!7920 = !DILocation(line: 199, column: 21, scope: !7906)
!7921 = !DILocation(line: 199, column: 10, scope: !7906)
!7922 = !DILocation(line: 200, column: 7, scope: !7906)
!7923 = !DILocation(line: 202, column: 2, scope: !7906)
!7924 = !DILocation(line: 203, column: 1, scope: !7906)
!7925 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !886, file: !886, line: 205, type: !924, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !7926)
!7926 = !{!7927, !7928, !7929, !7930, !7931}
!7927 = !DILocalVariable(name: "dev", arg: 1, scope: !7925, file: !886, line: 205, type: !915)
!7928 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7925, file: !886, line: 206, type: !926)
!7929 = !DILocalVariable(name: "pclken", scope: !7925, file: !886, line: 208, type: !876)
!7930 = !DILocalVariable(name: "reg", scope: !7925, file: !886, line: 209, type: !1612)
!7931 = !DILocalVariable(name: "reg_val", scope: !7925, file: !886, line: 210, type: !121)
!7932 = !DILocation(line: 0, scope: !7925)
!7933 = !DILocation(line: 214, column: 6, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !886, line: 214, column: 6)
!7935 = !DILocation(line: 214, column: 6, scope: !7925)
!7936 = !DILocation(line: 219, column: 52, scope: !7925)
!7937 = !DILocation(line: 219, column: 8, scope: !7925)
!7938 = !DILocation(line: 220, column: 12, scope: !7925)
!7939 = !DILocation(line: 221, column: 22, scope: !7925)
!7940 = !DILocation(line: 221, column: 13, scope: !7925)
!7941 = !DILocation(line: 221, column: 10, scope: !7925)
!7942 = !DILocation(line: 222, column: 7, scope: !7925)
!7943 = !DILocation(line: 224, column: 2, scope: !7925)
!7944 = !DILocation(line: 225, column: 1, scope: !7925)
!7945 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !886, file: !886, line: 262, type: !940, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !7946)
!7946 = !{!7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954}
!7947 = !DILocalVariable(name: "clock", arg: 1, scope: !7945, file: !886, line: 262, type: !915)
!7948 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7945, file: !886, line: 263, type: !926)
!7949 = !DILocalVariable(name: "rate", arg: 3, scope: !7945, file: !886, line: 264, type: !882)
!7950 = !DILocalVariable(name: "pclken", scope: !7945, file: !886, line: 266, type: !876)
!7951 = !DILocalVariable(name: "ahb_clock", scope: !7945, file: !886, line: 273, type: !121)
!7952 = !DILocalVariable(name: "apb1_clock", scope: !7945, file: !886, line: 274, type: !121)
!7953 = !DILocalVariable(name: "apb2_clock", scope: !7945, file: !886, line: 276, type: !121)
!7954 = !DILocalVariable(name: "ahb3_clock", scope: !7945, file: !886, line: 286, type: !121)
!7955 = !DILocation(line: 0, scope: !7945)
!7956 = !DILocation(line: 273, column: 23, scope: !7945)
!7957 = !DILocation(line: 299, column: 18, scope: !7945)
!7958 = !DILocation(line: 299, column: 2, scope: !7945)
!7959 = !DILocation(line: 274, column: 24, scope: !7945)
!7960 = !DILocation(line: 319, column: 3, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7945, file: !886, line: 299, column: 23)
!7962 = !DILocation(line: 276, column: 24, scope: !7945)
!7963 = !DILocation(line: 323, column: 3, scope: !7961)
!7964 = !DILocation(line: 346, column: 33, scope: !7961)
!7965 = !DILocation(line: 346, column: 11, scope: !7961)
!7966 = !DILocation(line: 350, column: 3, scope: !7961)
!7967 = !DILocation(line: 354, column: 33, scope: !7961)
!7968 = !DILocation(line: 354, column: 11, scope: !7961)
!7969 = !DILocation(line: 358, column: 3, scope: !7961)
!7970 = !DILocation(line: 374, column: 3, scope: !7961)
!7971 = !DILocation(line: 379, column: 3, scope: !7961)
!7972 = !DILocation(line: 0, scope: !7961)
!7973 = !DILocation(line: 396, column: 1, scope: !7945)
!7974 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !886, file: !886, line: 227, type: !956, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !7975)
!7975 = !{!7976, !7977, !7978, !7979, !7980, !7981, !7982, !7983}
!7976 = !DILocalVariable(name: "dev", arg: 1, scope: !7974, file: !886, line: 227, type: !915)
!7977 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7974, file: !886, line: 228, type: !926)
!7978 = !DILocalVariable(name: "data", arg: 3, scope: !7974, file: !886, line: 229, type: !102)
!7979 = !DILocalVariable(name: "pclken", scope: !7974, file: !886, line: 233, type: !876)
!7980 = !DILocalVariable(name: "reg", scope: !7974, file: !886, line: 234, type: !1612)
!7981 = !DILocalVariable(name: "reg_val", scope: !7974, file: !886, line: 235, type: !121)
!7982 = !DILocalVariable(name: "dt_val", scope: !7974, file: !886, line: 235, type: !121)
!7983 = !DILocalVariable(name: "err", scope: !7974, file: !886, line: 236, type: !103)
!7984 = !DILocation(line: 0, scope: !7974)
!7985 = !DILocation(line: 241, column: 30, scope: !7974)
!7986 = !DILocation(line: 241, column: 8, scope: !7974)
!7987 = !DILocation(line: 242, column: 10, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7974, file: !886, line: 242, column: 6)
!7989 = !DILocation(line: 242, column: 6, scope: !7974)
!7990 = !DILocation(line: 247, column: 11, scope: !7974)
!7991 = !DILocation(line: 248, column: 6, scope: !7974)
!7992 = !DILocation(line: 247, column: 44, scope: !7974)
!7993 = !DILocation(line: 250, column: 6, scope: !7974)
!7994 = !DILocation(line: 249, column: 52, scope: !7974)
!7995 = !DILocation(line: 249, column: 8, scope: !7974)
!7996 = !DILocation(line: 251, column: 12, scope: !7974)
!7997 = !DILocation(line: 252, column: 10, scope: !7974)
!7998 = !DILocation(line: 253, column: 7, scope: !7974)
!7999 = !DILocation(line: 255, column: 2, scope: !7974)
!8000 = !DILocation(line: 260, column: 1, scope: !7974)
!8001 = distinct !DISubprogram(name: "enabled_clock", scope: !886, file: !886, line: 100, type: !8002, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8004)
!8002 = !DISubroutineType(types: !8003)
!8003 = !{!103, !121}
!8004 = !{!8005, !8006}
!8005 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8001, file: !886, line: 100, type: !121)
!8006 = !DILocalVariable(name: "r", scope: !8001, file: !886, line: 102, type: !103)
!8007 = !DILocation(line: 0, scope: !8001)
!8008 = !DILocation(line: 104, column: 2, scope: !8001)
!8009 = !DILocation(line: 180, column: 2, scope: !8001)
!8010 = !DILocation(line: 181, column: 1, scope: !8001)
!8011 = distinct !DISubprogram(name: "get_bus_clock", scope: !886, file: !886, line: 79, type: !8012, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8014)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!121, !121, !121}
!8014 = !{!8015, !8016}
!8015 = !DILocalVariable(name: "clock", arg: 1, scope: !8011, file: !886, line: 79, type: !121)
!8016 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8011, file: !886, line: 79, type: !121)
!8017 = !DILocation(line: 0, scope: !8011)
!8018 = !DILocation(line: 81, column: 15, scope: !8011)
!8019 = !DILocation(line: 81, column: 2, scope: !8011)
!8020 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !886, file: !886, line: 68, type: !8021, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8023)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!121, !121, !103, !103, !103}
!8023 = !{!8024, !8025, !8026, !8027}
!8024 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8020, file: !886, line: 68, type: !121)
!8025 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8020, file: !886, line: 69, type: !103)
!8026 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8020, file: !886, line: 70, type: !103)
!8027 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8020, file: !886, line: 71, type: !103)
!8028 = !DILocation(line: 0, scope: !8020)
!8029 = !DILocation(line: 75, column: 22, scope: !8020)
!8030 = !DILocation(line: 76, column: 13, scope: !8020)
!8031 = !DILocation(line: 75, column: 34, scope: !8020)
!8032 = !DILocation(line: 75, column: 2, scope: !8020)
!8033 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !886, file: !886, line: 641, type: !913, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8034)
!8034 = !{!8035, !8036, !8037}
!8035 = !DILocalVariable(name: "dev", arg: 1, scope: !8033, file: !886, line: 641, type: !915)
!8036 = !DILocalVariable(name: "old_flash_freq", scope: !8033, file: !886, line: 664, type: !121)
!8037 = !DILocalVariable(name: "new_flash_freq", scope: !8033, file: !886, line: 665, type: !121)
!8038 = !DILocation(line: 0, scope: !8033)
!8039 = !DILocation(line: 646, column: 2, scope: !8033)
!8040 = !DILocation(line: 667, column: 19, scope: !8033)
!8041 = !DILocation(line: 674, column: 21, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8033, file: !886, line: 674, column: 6)
!8043 = !DILocation(line: 674, column: 6, scope: !8033)
!8044 = !DILocation(line: 675, column: 3, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8042, file: !886, line: 674, column: 59)
!8046 = !DILocation(line: 676, column: 2, scope: !8045)
!8047 = !DILocation(line: 680, column: 2, scope: !8033)
!8048 = !DILocation(line: 683, column: 2, scope: !8033)
!8049 = !DILocation(line: 690, column: 3, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !886, line: 689, column: 9)
!8051 = distinct !DILexicalBlock(scope: !8033, file: !886, line: 685, column: 6)
!8052 = !DILocation(line: 695, column: 2, scope: !8033)
!8053 = !DILocation(line: 696, column: 2, scope: !8033)
!8054 = !DILocation(line: 696, column: 9, scope: !8033)
!8055 = !DILocation(line: 696, column: 34, scope: !8033)
!8056 = distinct !{!8056, !8053, !8057}
!8057 = !DILocation(line: 697, column: 2, scope: !8033)
!8058 = !DILocation(line: 720, column: 21, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8033, file: !886, line: 720, column: 6)
!8060 = !DILocation(line: 720, column: 6, scope: !8033)
!8061 = !DILocation(line: 721, column: 3, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8059, file: !886, line: 720, column: 60)
!8063 = !DILocation(line: 722, column: 2, scope: !8062)
!8064 = !DILocation(line: 725, column: 18, scope: !8033)
!8065 = !DILocation(line: 728, column: 2, scope: !8033)
!8066 = !DILocation(line: 730, column: 2, scope: !8033)
!8067 = !DILocation(line: 745, column: 2, scope: !8033)
!8068 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8069, file: !8069, line: 3275, type: !6114, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8069 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8070 = !DILocation(line: 3277, column: 21, scope: !8068)
!8071 = !DILocation(line: 3277, column: 3, scope: !8068)
!8072 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !886, file: !886, line: 507, type: !3255, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8073 = !DILocation(line: 516, column: 4, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !886, line: 515, column: 10)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !886, line: 513, column: 7)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !886, line: 510, column: 37)
!8077 = distinct !DILexicalBlock(scope: !8072, file: !886, line: 510, column: 6)
!8078 = !DILocation(line: 526, column: 3, scope: !8076)
!8079 = !DILocation(line: 527, column: 3, scope: !8076)
!8080 = !DILocation(line: 527, column: 10, scope: !8076)
!8081 = !DILocation(line: 527, column: 31, scope: !8076)
!8082 = distinct !{!8082, !8079, !8083}
!8083 = !DILocation(line: 529, column: 3, scope: !8076)
!8084 = !DILocation(line: 583, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !886, line: 577, column: 37)
!8086 = distinct !DILexicalBlock(scope: !8072, file: !886, line: 577, column: 6)
!8087 = !DILocation(line: 584, column: 3, scope: !8085)
!8088 = !DILocation(line: 584, column: 10, scope: !8085)
!8089 = !DILocation(line: 584, column: 31, scope: !8085)
!8090 = distinct !{!8090, !8087, !8091}
!8091 = !DILocation(line: 585, column: 3, scope: !8085)
!8092 = !DILocation(line: 627, column: 1, scope: !8072)
!8093 = distinct !DISubprogram(name: "set_up_plls", scope: !886, file: !886, line: 448, type: !3255, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8094 = !DILocation(line: 460, column: 6, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8093, file: !886, line: 460, column: 6)
!8096 = !DILocation(line: 460, column: 31, scope: !8095)
!8097 = !DILocation(line: 460, column: 6, scope: !8093)
!8098 = !DILocation(line: 461, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8095, file: !886, line: 460, column: 67)
!8100 = !DILocation(line: 462, column: 3, scope: !8099)
!8101 = !DILocation(line: 463, column: 2, scope: !8099)
!8102 = !DILocation(line: 464, column: 2, scope: !8093)
!8103 = !DILocation(line: 488, column: 2, scope: !8093)
!8104 = !DILocation(line: 492, column: 2, scope: !8093)
!8105 = !DILocation(line: 496, column: 2, scope: !8093)
!8106 = !DILocation(line: 499, column: 2, scope: !8093)
!8107 = !DILocation(line: 500, column: 2, scope: !8093)
!8108 = !DILocation(line: 500, column: 9, scope: !8093)
!8109 = !DILocation(line: 500, column: 30, scope: !8093)
!8110 = distinct !{!8110, !8107, !8111}
!8111 = !DILocation(line: 502, column: 2, scope: !8093)
!8112 = !DILocation(line: 505, column: 1, scope: !8093)
!8113 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8069, file: !8069, line: 3224, type: !6124, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8114)
!8114 = !{!8115}
!8115 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8113, file: !8069, line: 3224, type: !121)
!8116 = !DILocation(line: 0, scope: !8113)
!8117 = !DILocation(line: 3226, column: 3, scope: !8113)
!8118 = !DILocation(line: 3227, column: 1, scope: !8113)
!8119 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8069, file: !8069, line: 3188, type: !6124, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8120)
!8120 = !{!8121}
!8121 = !DILocalVariable(name: "Source", arg: 1, scope: !8119, file: !8069, line: 3188, type: !121)
!8122 = !DILocation(line: 0, scope: !8119)
!8123 = !DILocation(line: 3190, column: 3, scope: !8119)
!8124 = !DILocation(line: 3191, column: 1, scope: !8119)
!8125 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8069, file: !8069, line: 3204, type: !6114, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8126 = !DILocation(line: 3206, column: 21, scope: !8125)
!8127 = !DILocation(line: 3206, column: 3, scope: !8125)
!8128 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8069, file: !8069, line: 3240, type: !6124, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8129)
!8129 = !{!8130}
!8130 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8128, file: !8069, line: 3240, type: !121)
!8131 = !DILocation(line: 0, scope: !8128)
!8132 = !DILocation(line: 3242, column: 3, scope: !8128)
!8133 = !DILocation(line: 3243, column: 1, scope: !8128)
!8134 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8069, file: !8069, line: 3256, type: !6124, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !8135)
!8135 = !{!8136}
!8136 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8134, file: !8069, line: 3256, type: !121)
!8137 = !DILocation(line: 0, scope: !8134)
!8138 = !DILocation(line: 3258, column: 3, scope: !8134)
!8139 = !DILocation(line: 3259, column: 1, scope: !8134)
!8140 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !886, file: !886, line: 409, type: !3255, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8141 = !DILocation(line: 412, column: 6, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8140, file: !886, line: 412, column: 6)
!8143 = !DILocation(line: 412, column: 27, scope: !8142)
!8144 = !DILocation(line: 412, column: 6, scope: !8140)
!8145 = !DILocation(line: 414, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8142, file: !886, line: 412, column: 33)
!8147 = !DILocation(line: 415, column: 3, scope: !8146)
!8148 = !DILocation(line: 415, column: 10, scope: !8146)
!8149 = !DILocation(line: 415, column: 31, scope: !8146)
!8150 = distinct !{!8150, !8147, !8151}
!8151 = !DILocation(line: 417, column: 3, scope: !8146)
!8152 = !DILocation(line: 421, column: 2, scope: !8140)
!8153 = !DILocation(line: 422, column: 2, scope: !8140)
!8154 = !DILocation(line: 422, column: 9, scope: !8140)
!8155 = !DILocation(line: 422, column: 34, scope: !8140)
!8156 = distinct !{!8156, !8153, !8157}
!8157 = !DILocation(line: 423, column: 2, scope: !8140)
!8158 = !DILocation(line: 424, column: 1, scope: !8140)
!8159 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8069, file: !8069, line: 4195, type: !3255, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8160 = !DILocation(line: 4197, column: 3, scope: !8159)
!8161 = !DILocation(line: 4198, column: 1, scope: !8159)
!8162 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8069, file: !8069, line: 4184, type: !3255, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8163 = !DILocation(line: 4186, column: 3, scope: !8162)
!8164 = !DILocation(line: 4187, column: 1, scope: !8162)
!8165 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8069, file: !8069, line: 4205, type: !6114, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8166 = !DILocation(line: 4207, column: 11, scope: !8165)
!8167 = !DILocation(line: 4207, column: 44, scope: !8165)
!8168 = !DILocation(line: 4207, column: 3, scope: !8165)
!8169 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8069, file: !8069, line: 3007, type: !6114, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8170 = !DILocation(line: 3009, column: 11, scope: !8169)
!8171 = !DILocation(line: 3009, column: 44, scope: !8169)
!8172 = !DILocation(line: 3009, column: 3, scope: !8169)
!8173 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8069, file: !8069, line: 2987, type: !3255, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8174 = !DILocation(line: 2989, column: 3, scope: !8173)
!8175 = !DILocation(line: 2990, column: 1, scope: !8173)
!8176 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8069, file: !8069, line: 2939, type: !3255, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8177 = !DILocation(line: 2941, column: 3, scope: !8176)
!8178 = !DILocation(line: 2942, column: 1, scope: !8176)
!8179 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8069, file: !8069, line: 2949, type: !3255, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8180 = !DILocation(line: 2951, column: 3, scope: !8179)
!8181 = !DILocation(line: 2952, column: 1, scope: !8179)
!8182 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8069, file: !8069, line: 2969, type: !6114, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8183 = !DILocation(line: 2971, column: 11, scope: !8182)
!8184 = !DILocation(line: 2971, column: 44, scope: !8182)
!8185 = !DILocation(line: 2971, column: 3, scope: !8182)
!8186 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8069, file: !8069, line: 3143, type: !3255, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8187 = !DILocation(line: 3145, column: 3, scope: !8186)
!8188 = !DILocation(line: 3146, column: 1, scope: !8186)
!8189 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8069, file: !8069, line: 3163, type: !6114, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !821, retainedNodes: !317)
!8190 = !DILocation(line: 3165, column: 11, scope: !8189)
!8191 = !DILocation(line: 3165, column: 46, scope: !8189)
!8192 = !DILocation(line: 3165, column: 3, scope: !8189)
!8193 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8194, file: !8194, line: 40, type: !6114, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !317)
!8194 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8195 = !DILocation(line: 45, column: 3, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8197, file: !8194, line: 44, column: 44)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8194, line: 44, column: 13)
!8198 = distinct !DILexicalBlock(scope: !8193, file: !8194, line: 42, column: 6)
!8199 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8194, file: !8194, line: 56, type: !3255, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !317)
!8200 = !DILocation(line: 58, column: 2, scope: !8199)
!8201 = !DILocation(line: 62, column: 1, scope: !8199)
!8202 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8069, file: !8069, line: 4304, type: !8203, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !8205)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{null, !121, !121, !121, !121}
!8205 = !{!8206, !8207, !8208, !8209}
!8206 = !DILocalVariable(name: "Source", arg: 1, scope: !8202, file: !8069, line: 4304, type: !121)
!8207 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8202, file: !8069, line: 4304, type: !121)
!8208 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8202, file: !8069, line: 4304, type: !121)
!8209 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8202, file: !8069, line: 4304, type: !121)
!8210 = !DILocation(line: 0, scope: !8202)
!8211 = !DILocation(line: 4306, column: 3, scope: !8202)
!8212 = !DILocation(line: 4308, column: 3, scope: !8202)
!8213 = !DILocation(line: 4310, column: 3, scope: !8202)
!8214 = !DILocation(line: 4312, column: 1, scope: !8202)
!8215 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8194, file: !8194, line: 69, type: !3255, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !317)
!8216 = !DILocation(line: 72, column: 2, scope: !8215)
!8217 = !DILocation(line: 73, column: 1, scope: !8215)
!8218 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8219, file: !8219, line: 1185, type: !6124, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !8220)
!8219 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8220 = !{!8221, !8222}
!8221 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8218, file: !8219, line: 1185, type: !121)
!8222 = !DILocalVariable(name: "tmpreg", scope: !8218, file: !8219, line: 1187, type: !120)
!8223 = !DILocation(line: 0, scope: !8218)
!8224 = !DILocation(line: 1187, column: 3, scope: !8218)
!8225 = !DILocation(line: 1187, column: 17, scope: !8218)
!8226 = !DILocation(line: 1188, column: 3, scope: !8218)
!8227 = !DILocation(line: 1190, column: 12, scope: !8218)
!8228 = !DILocation(line: 1190, column: 10, scope: !8218)
!8229 = !DILocation(line: 1191, column: 9, scope: !8218)
!8230 = !DILocation(line: 1192, column: 1, scope: !8218)
!8231 = distinct !DISubprogram(name: "uart_console_init", scope: !964, file: !964, line: 588, type: !1001, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8232)
!8232 = !{!8233}
!8233 = !DILocalVariable(name: "arg", arg: 1, scope: !8231, file: !964, line: 588, type: !980)
!8234 = !DILocation(line: 0, scope: !8231)
!8235 = !DILocation(line: 593, column: 7, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8231, file: !964, line: 593, column: 6)
!8237 = !DILocation(line: 593, column: 6, scope: !8231)
!8238 = !DILocation(line: 597, column: 2, scope: !8231)
!8239 = !DILocation(line: 599, column: 2, scope: !8231)
!8240 = !DILocation(line: 600, column: 1, scope: !8231)
!8241 = distinct !DISubprogram(name: "device_is_ready", scope: !8242, file: !8242, line: 47, type: !8243, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8245)
!8242 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!157, !980}
!8245 = !{!8246}
!8246 = !DILocalVariable(name: "dev", arg: 1, scope: !8241, file: !8242, line: 47, type: !980)
!8247 = !DILocation(line: 0, scope: !8241)
!8248 = !DILocation(line: 55, column: 2, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8241, file: !8242, line: 55, column: 2)
!8250 = !{i64 2155286473}
!8251 = !DILocation(line: 56, column: 9, scope: !8241)
!8252 = !DILocation(line: 56, column: 2, scope: !8241)
!8253 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !964, file: !964, line: 573, type: !3255, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !317)
!8254 = !DILocation(line: 576, column: 2, scope: !8253)
!8255 = !DILocation(line: 579, column: 2, scope: !8253)
!8256 = !DILocation(line: 581, column: 1, scope: !8253)
!8257 = distinct !DISubprogram(name: "console_out", scope: !964, file: !964, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8258)
!8258 = !{!8259}
!8259 = !DILocalVariable(name: "c", arg: 1, scope: !8257, file: !964, line: 77, type: !103)
!8260 = !DILocation(line: 0, scope: !8257)
!8261 = !DILocation(line: 89, column: 11, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8257, file: !964, line: 89, column: 6)
!8263 = !DILocation(line: 89, column: 6, scope: !8257)
!8264 = !DILocation(line: 90, column: 3, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8262, file: !964, line: 89, column: 17)
!8266 = !DILocation(line: 91, column: 2, scope: !8265)
!8267 = !DILocation(line: 92, column: 34, scope: !8257)
!8268 = !DILocation(line: 92, column: 2, scope: !8257)
!8269 = !DILocation(line: 94, column: 2, scope: !8257)
!8270 = distinct !DISubprogram(name: "uart_poll_out", scope: !8271, file: !8271, line: 95, type: !997, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8272)
!8271 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/getline")
!8272 = !{!8273, !8274}
!8273 = !DILocalVariable(name: "dev", arg: 1, scope: !8270, file: !8271, line: 95, type: !980)
!8274 = !DILocalVariable(name: "out_char", arg: 2, scope: !8270, file: !8271, line: 95, type: !155)
!8275 = !DILocation(line: 0, scope: !8270)
!8276 = !DILocation(line: 105, column: 2, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8270, file: !8271, line: 105, column: 2)
!8278 = !{i64 2155369718}
!8279 = !DILocation(line: 106, column: 2, scope: !8270)
!8280 = !DILocation(line: 107, column: 1, scope: !8270)
!8281 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !997, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8282)
!8282 = !{!8283, !8284, !8285}
!8283 = !DILocalVariable(name: "dev", arg: 1, scope: !8281, file: !209, line: 574, type: !980)
!8284 = !DILocalVariable(name: "out_char", arg: 2, scope: !8281, file: !209, line: 575, type: !155)
!8285 = !DILocalVariable(name: "api", scope: !8281, file: !209, line: 577, type: !972)
!8286 = !DILocation(line: 0, scope: !8281)
!8287 = !DILocation(line: 578, column: 40, scope: !8281)
!8288 = !DILocation(line: 580, column: 7, scope: !8281)
!8289 = !DILocation(line: 580, column: 2, scope: !8281)
!8290 = !DILocation(line: 581, column: 1, scope: !8281)
!8291 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8243, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8292)
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "dev", arg: 1, scope: !8291, file: !141, line: 730, type: !980)
!8294 = !DILocation(line: 0, scope: !8291)
!8295 = !DILocation(line: 732, column: 9, scope: !8291)
!8296 = !DILocation(line: 732, column: 2, scope: !8291)
!8297 = distinct !DISubprogram(name: "uart_register_input", scope: !964, file: !964, line: 549, type: !8298, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8300)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{null, !1061, !1061, !1101}
!8300 = !{!8301, !8302, !8303}
!8301 = !DILocalVariable(name: "avail", arg: 1, scope: !8297, file: !964, line: 549, type: !1061)
!8302 = !DILocalVariable(name: "lines", arg: 2, scope: !8297, file: !964, line: 549, type: !1061)
!8303 = !DILocalVariable(name: "completion", arg: 3, scope: !8297, file: !964, line: 550, type: !1101)
!8304 = !DILocation(line: 0, scope: !8297)
!8305 = !DILocation(line: 552, column: 14, scope: !8297)
!8306 = !DILocation(line: 553, column: 14, scope: !8297)
!8307 = !DILocation(line: 554, column: 16, scope: !8297)
!8308 = !DILocation(line: 556, column: 2, scope: !8297)
!8309 = !DILocation(line: 557, column: 1, scope: !8297)
!8310 = distinct !DISubprogram(name: "console_input_init", scope: !964, file: !964, line: 532, type: !3255, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "c", scope: !8310, file: !964, line: 534, type: !154)
!8313 = !DILocation(line: 534, column: 2, scope: !8310)
!8314 = !DILocation(line: 536, column: 2, scope: !8310)
!8315 = !DILocation(line: 537, column: 2, scope: !8310)
!8316 = !DILocation(line: 539, column: 2, scope: !8310)
!8317 = !DILocation(line: 542, column: 9, scope: !8310)
!8318 = !DILocation(line: 542, column: 2, scope: !8310)
!8319 = !DILocation(line: 0, scope: !8310)
!8320 = !DILocation(line: 543, column: 3, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8310, file: !964, line: 542, column: 46)
!8322 = distinct !{!8322, !8318, !8323}
!8323 = !DILocation(line: 544, column: 2, scope: !8310)
!8324 = !DILocation(line: 546, column: 2, scope: !8310)
!8325 = !DILocation(line: 547, column: 1, scope: !8310)
!8326 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8271, file: !8271, line: 265, type: !1031, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8327)
!8327 = !{!8328}
!8328 = !DILocalVariable(name: "dev", arg: 1, scope: !8326, file: !8271, line: 265, type: !980)
!8329 = !DILocation(line: 0, scope: !8326)
!8330 = !DILocation(line: 274, column: 2, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8326, file: !8271, line: 274, column: 2)
!8332 = !{i64 2155370194}
!8333 = !DILocation(line: 275, column: 2, scope: !8326)
!8334 = !DILocation(line: 276, column: 1, scope: !8326)
!8335 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8271, file: !8271, line: 217, type: !1031, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8336)
!8336 = !{!8337}
!8337 = !DILocalVariable(name: "dev", arg: 1, scope: !8335, file: !8271, line: 217, type: !980)
!8338 = !DILocation(line: 0, scope: !8335)
!8339 = !DILocation(line: 226, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8335, file: !8271, line: 226, column: 2)
!8341 = !{i64 2155370058}
!8342 = !DILocation(line: 227, column: 2, scope: !8335)
!8343 = !DILocation(line: 228, column: 1, scope: !8335)
!8344 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8345, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8347)
!8345 = !DISubroutineType(types: !8346)
!8346 = !{null, !980, !1047}
!8347 = !{!8348, !8349}
!8348 = !DILocalVariable(name: "dev", arg: 1, scope: !8344, file: !209, line: 1190, type: !980)
!8349 = !DILocalVariable(name: "cb", arg: 2, scope: !8344, file: !209, line: 1191, type: !1047)
!8350 = !DILocation(line: 0, scope: !8344)
!8351 = !DILocation(line: 1193, column: 2, scope: !8344)
!8352 = !DILocation(line: 1194, column: 1, scope: !8344)
!8353 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !1001, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8354)
!8354 = !{!8355, !8356}
!8355 = !DILocalVariable(name: "dev", arg: 1, scope: !8353, file: !209, line: 1024, type: !980)
!8356 = !DILocalVariable(name: "api", scope: !8353, file: !209, line: 1027, type: !972)
!8357 = !DILocation(line: 0, scope: !8353)
!8358 = !DILocation(line: 1028, column: 40, scope: !8353)
!8359 = !DILocation(line: 1030, column: 11, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8353, file: !209, line: 1030, column: 6)
!8361 = !DILocation(line: 1030, column: 24, scope: !8360)
!8362 = !DILocation(line: 1030, column: 6, scope: !8353)
!8363 = !DILocation(line: 1033, column: 9, scope: !8353)
!8364 = !DILocation(line: 1033, column: 2, scope: !8353)
!8365 = !DILocation(line: 1038, column: 1, scope: !8353)
!8366 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !1027, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8367)
!8367 = !{!8368, !8369, !8370, !8371}
!8368 = !DILocalVariable(name: "dev", arg: 1, scope: !8366, file: !209, line: 785, type: !980)
!8369 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8366, file: !209, line: 785, type: !267)
!8370 = !DILocalVariable(name: "size", arg: 3, scope: !8366, file: !209, line: 786, type: !268)
!8371 = !DILocalVariable(name: "api", scope: !8366, file: !209, line: 789, type: !972)
!8372 = !DILocation(line: 0, scope: !8366)
!8373 = !DILocation(line: 790, column: 40, scope: !8366)
!8374 = !DILocation(line: 792, column: 11, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !209, line: 792, column: 6)
!8376 = !DILocation(line: 792, column: 21, scope: !8375)
!8377 = !DILocation(line: 792, column: 6, scope: !8366)
!8378 = !DILocation(line: 796, column: 9, scope: !8366)
!8379 = !DILocation(line: 796, column: 2, scope: !8366)
!8380 = !DILocation(line: 803, column: 1, scope: !8366)
!8381 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8271, file: !8271, line: 241, type: !1031, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "dev", arg: 1, scope: !8381, file: !8271, line: 241, type: !980)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 250, column: 2, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !8271, line: 250, column: 2)
!8387 = !{i64 2155370126}
!8388 = !DILocation(line: 251, column: 2, scope: !8381)
!8389 = !DILocation(line: 252, column: 1, scope: !8381)
!8390 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !1031, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8391)
!8391 = !{!8392, !8393}
!8392 = !DILocalVariable(name: "dev", arg: 1, scope: !8390, file: !209, line: 934, type: !980)
!8393 = !DILocalVariable(name: "api", scope: !8390, file: !209, line: 937, type: !972)
!8394 = !DILocation(line: 0, scope: !8390)
!8395 = !DILocation(line: 938, column: 40, scope: !8390)
!8396 = !DILocation(line: 940, column: 11, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8390, file: !209, line: 940, column: 6)
!8398 = !DILocation(line: 940, column: 25, scope: !8397)
!8399 = !DILocation(line: 940, column: 6, scope: !8390)
!8400 = !DILocation(line: 941, column: 3, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !209, line: 940, column: 34)
!8402 = !DILocation(line: 942, column: 2, scope: !8401)
!8403 = !DILocation(line: 946, column: 1, scope: !8390)
!8404 = !DILocation(line: 0, scope: !1109)
!8405 = !DILocation(line: 433, column: 9, scope: !1109)
!8406 = !DILocation(line: 433, column: 43, scope: !1109)
!8407 = !DILocation(line: 434, column: 9, scope: !1109)
!8408 = !DILocation(line: 433, column: 2, scope: !1109)
!8409 = !DILocation(line: 436, column: 3, scope: !1114)
!8410 = !DILocation(line: 439, column: 8, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 439, column: 7)
!8412 = !DILocation(line: 439, column: 7, scope: !1114)
!8413 = distinct !{!8413, !8408, !8414}
!8414 = !DILocation(line: 529, column: 2, scope: !1109)
!8415 = !DILocation(line: 0, scope: !1114)
!8416 = !DILocation(line: 445, column: 8, scope: !1114)
!8417 = !DILocation(line: 446, column: 10, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 446, column: 7)
!8419 = !DILocation(line: 446, column: 7, scope: !1114)
!8420 = !DILocation(line: 460, column: 8, scope: !1119)
!8421 = !DILocation(line: 460, column: 7, scope: !1114)
!8422 = !DILocation(line: 461, column: 10, scope: !1117)
!8423 = !DILocation(line: 0, scope: !1117)
!8424 = !DILocation(line: 461, column: 8, scope: !1118)
!8425 = !DILocation(line: 462, column: 9, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !1118, file: !964, line: 462, column: 8)
!8427 = !DILocation(line: 462, column: 8, scope: !1118)
!8428 = !DILocation(line: 477, column: 7, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 477, column: 7)
!8430 = !DILocation(line: 477, column: 7, scope: !1114)
!8431 = !DILocation(line: 478, column: 16, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8429, file: !964, line: 477, column: 46)
!8433 = !DILocation(line: 478, column: 22, scope: !8432)
!8434 = !DILocation(line: 478, column: 4, scope: !8432)
!8435 = !DILocation(line: 479, column: 4, scope: !8432)
!8436 = !DILocation(line: 483, column: 7, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 483, column: 7)
!8438 = !DILocation(line: 483, column: 7, scope: !1114)
!8439 = !DILocation(line: 484, column: 13, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !964, line: 484, column: 8)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !964, line: 483, column: 55)
!8442 = !DILocation(line: 484, column: 8, scope: !8441)
!8443 = !DILocation(line: 485, column: 5, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !964, line: 484, column: 26)
!8445 = !DILocation(line: 486, column: 5, scope: !8444)
!8446 = !DILocation(line: 487, column: 4, scope: !8444)
!8447 = !DILocation(line: 493, column: 16, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 493, column: 7)
!8449 = !DILocation(line: 493, column: 8, scope: !8448)
!8450 = !DILocation(line: 493, column: 7, scope: !1114)
!8451 = !DILocation(line: 494, column: 4, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8448, file: !964, line: 493, column: 23)
!8453 = !DILocation(line: 497, column: 9, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !964, line: 497, column: 9)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !964, line: 494, column: 18)
!8456 = !DILocation(line: 497, column: 13, scope: !8454)
!8457 = !DILocation(line: 497, column: 9, scope: !8455)
!8458 = !DILocation(line: 498, column: 16, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8454, file: !964, line: 497, column: 18)
!8460 = !DILocation(line: 498, column: 26, scope: !8459)
!8461 = !DILocation(line: 498, column: 34, scope: !8459)
!8462 = !DILocation(line: 498, column: 6, scope: !8459)
!8463 = !DILocation(line: 499, column: 5, scope: !8459)
!8464 = !DILocation(line: 502, column: 5, scope: !8455)
!8465 = !DILocation(line: 503, column: 5, scope: !8455)
!8466 = !DILocation(line: 505, column: 5, scope: !8455)
!8467 = !DILocation(line: 505, column: 15, scope: !8455)
!8468 = !DILocation(line: 505, column: 21, scope: !8455)
!8469 = !DILocation(line: 505, column: 19, scope: !8455)
!8470 = !DILocation(line: 505, column: 26, scope: !8455)
!8471 = !DILocation(line: 506, column: 5, scope: !8455)
!8472 = !DILocation(line: 507, column: 5, scope: !8455)
!8473 = !DILocation(line: 508, column: 9, scope: !8455)
!8474 = !DILocation(line: 509, column: 9, scope: !8455)
!8475 = !DILocation(line: 510, column: 5, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8455, file: !964, line: 510, column: 5)
!8477 = !DILocation(line: 511, column: 9, scope: !8455)
!8478 = !DILocation(line: 512, column: 5, scope: !8455)
!8479 = !DILocation(line: 514, column: 9, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8455, file: !964, line: 514, column: 9)
!8481 = !DILocation(line: 514, column: 23, scope: !8480)
!8482 = !DILocation(line: 515, column: 27, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !964, line: 514, column: 32)
!8484 = !DILocation(line: 515, column: 38, scope: !8483)
!8485 = !DILocation(line: 515, column: 13, scope: !8483)
!8486 = !DILocation(line: 515, column: 10, scope: !8483)
!8487 = !DILocation(line: 516, column: 5, scope: !8483)
!8488 = !DILocation(line: 526, column: 7, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !1114, file: !964, line: 526, column: 7)
!8490 = !DILocation(line: 526, column: 13, scope: !8489)
!8491 = !DILocation(line: 526, column: 11, scope: !8489)
!8492 = !DILocation(line: 526, column: 17, scope: !8489)
!8493 = !DILocation(line: 526, column: 7, scope: !1114)
!8494 = !DILocation(line: 527, column: 17, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8489, file: !964, line: 526, column: 42)
!8496 = !DILocation(line: 527, column: 30, scope: !8495)
!8497 = !DILocation(line: 527, column: 4, scope: !8495)
!8498 = !DILocation(line: 528, column: 3, scope: !8495)
!8499 = !DILocation(line: 530, column: 1, scope: !1109)
!8500 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1045, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8501)
!8501 = !{!8502, !8503, !8504, !8505}
!8502 = !DILocalVariable(name: "dev", arg: 1, scope: !8500, file: !209, line: 1163, type: !980)
!8503 = !DILocalVariable(name: "cb", arg: 2, scope: !8500, file: !209, line: 1164, type: !1047)
!8504 = !DILocalVariable(name: "user_data", arg: 3, scope: !8500, file: !209, line: 1165, type: !102)
!8505 = !DILocalVariable(name: "api", scope: !8500, file: !209, line: 1168, type: !972)
!8506 = !DILocation(line: 0, scope: !8500)
!8507 = !DILocation(line: 1169, column: 40, scope: !8500)
!8508 = !DILocation(line: 1171, column: 11, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8500, file: !209, line: 1171, column: 6)
!8510 = !DILocation(line: 1171, column: 20, scope: !8509)
!8511 = !DILocation(line: 1171, column: 29, scope: !8509)
!8512 = !DILocation(line: 1171, column: 46, scope: !8509)
!8513 = !DILocation(line: 1171, column: 6, scope: !8500)
!8514 = !DILocation(line: 1172, column: 3, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8509, file: !209, line: 1171, column: 56)
!8516 = !DILocation(line: 1173, column: 2, scope: !8515)
!8517 = !DILocation(line: 1179, column: 1, scope: !8500)
!8518 = distinct !DISubprogram(name: "uart_irq_update", scope: !8271, file: !8271, line: 360, type: !1001, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8519)
!8519 = !{!8520}
!8520 = !DILocalVariable(name: "dev", arg: 1, scope: !8518, file: !8271, line: 360, type: !980)
!8521 = !DILocation(line: 0, scope: !8518)
!8522 = !DILocation(line: 368, column: 2, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8518, file: !8271, line: 368, column: 2)
!8524 = !{i64 2155370466}
!8525 = !DILocation(line: 369, column: 9, scope: !8518)
!8526 = !DILocation(line: 369, column: 2, scope: !8518)
!8527 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8271, file: !8271, line: 337, type: !1001, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !8271, line: 337, type: !980)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 345, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8527, file: !8271, line: 345, column: 2)
!8533 = !{i64 2155370398}
!8534 = !DILocation(line: 346, column: 9, scope: !8527)
!8535 = !DILocation(line: 346, column: 2, scope: !8527)
!8536 = distinct !DISubprogram(name: "read_uart", scope: !964, file: !964, line: 127, type: !8537, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8539)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!103, !980, !267, !32}
!8539 = !{!8540, !8541, !8542, !8543}
!8540 = !DILocalVariable(name: "uart", arg: 1, scope: !8536, file: !964, line: 127, type: !980)
!8541 = !DILocalVariable(name: "buf", arg: 2, scope: !8536, file: !964, line: 127, type: !267)
!8542 = !DILocalVariable(name: "size", arg: 3, scope: !8536, file: !964, line: 128, type: !32)
!8543 = !DILocalVariable(name: "rx", scope: !8536, file: !964, line: 130, type: !103)
!8544 = !DILocation(line: 0, scope: !8536)
!8545 = !DILocation(line: 132, column: 7, scope: !8536)
!8546 = !DILocation(line: 133, column: 9, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8536, file: !964, line: 133, column: 6)
!8548 = !DILocation(line: 133, column: 6, scope: !8536)
!8549 = !DILocation(line: 135, column: 3, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8547, file: !964, line: 133, column: 14)
!8551 = !DILocation(line: 137, column: 3, scope: !8550)
!8552 = !DILocation(line: 141, column: 1, scope: !8536)
!8553 = distinct !DISubprogram(name: "k_queue_get", scope: !3691, file: !3691, line: 649, type: !8554, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8561)
!8554 = !DISubroutineType(types: !8555)
!8555 = !{!102, !8556, !8557}
!8556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!8557 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8558)
!8558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8559)
!8559 = !{!8560}
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8558, file: !201, line: 66, baseType: !200, size: 64)
!8561 = !{!8562, !8563}
!8562 = !DILocalVariable(name: "queue", arg: 1, scope: !8553, file: !3691, line: 649, type: !8556)
!8563 = !DILocalVariable(name: "timeout", arg: 2, scope: !8553, file: !3691, line: 649, type: !8557)
!8564 = !DILocation(line: 0, scope: !8553)
!8565 = !DILocation(line: 658, column: 2, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8553, file: !3691, line: 658, column: 2)
!8567 = !{i64 2155071150}
!8568 = !DILocation(line: 659, column: 9, scope: !8553)
!8569 = !DILocation(line: 659, column: 2, scope: !8553)
!8570 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1129, file: !1129, line: 131, type: !8571, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8575)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!157, !8573, !103}
!8573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8574, size: 32)
!8574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!8575 = !{!8576, !8577, !8578}
!8576 = !DILocalVariable(name: "target", arg: 1, scope: !8570, file: !1129, line: 131, type: !8573)
!8577 = !DILocalVariable(name: "bit", arg: 2, scope: !8570, file: !1129, line: 131, type: !103)
!8578 = !DILocalVariable(name: "val", scope: !8570, file: !1129, line: 133, type: !8579)
!8579 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1129, line: 23, baseType: !1128)
!8580 = !DILocation(line: 0, scope: !8570)
!8581 = !DILocation(line: 133, column: 21, scope: !8570)
!8582 = !DILocation(line: 135, column: 27, scope: !8570)
!8583 = !DILocation(line: 135, column: 50, scope: !8570)
!8584 = !DILocation(line: 135, column: 2, scope: !8570)
!8585 = distinct !DISubprogram(name: "handle_ansi", scope: !964, file: !964, line: 232, type: !8586, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8588)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{null, !154, !344}
!8588 = !{!8589, !8590, !8591}
!8589 = !DILocalVariable(name: "byte", arg: 1, scope: !8585, file: !964, line: 232, type: !154)
!8590 = !DILocalVariable(name: "line", arg: 2, scope: !8585, file: !964, line: 232, type: !344)
!8591 = !DILabel(scope: !8585, name: "ansi_cmd", file: !964, line: 268)
!8592 = !DILocation(line: 0, scope: !8585)
!8593 = !DILocation(line: 234, column: 6, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8585, file: !964, line: 234, column: 6)
!8595 = !DILocation(line: 234, column: 6, scope: !8585)
!8596 = !DILocation(line: 235, column: 16, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !964, line: 235, column: 7)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !964, line: 234, column: 61)
!8599 = !DILocation(line: 235, column: 8, scope: !8597)
!8600 = !DILocation(line: 235, column: 7, scope: !8598)
!8601 = !DILocation(line: 236, column: 13, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !964, line: 235, column: 23)
!8603 = !DILocation(line: 237, column: 4, scope: !8602)
!8604 = !DILocation(line: 240, column: 3, scope: !8598)
!8605 = !DILocation(line: 241, column: 19, scope: !8598)
!8606 = !DILocation(line: 241, column: 12, scope: !8598)
!8607 = !DILocation(line: 242, column: 14, scope: !8598)
!8608 = !DILocation(line: 243, column: 3, scope: !8598)
!8609 = !DILocation(line: 246, column: 6, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8585, file: !964, line: 246, column: 6)
!8611 = !DILocation(line: 246, column: 6, scope: !8585)
!8612 = !DILocation(line: 247, column: 15, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !964, line: 247, column: 7)
!8614 = distinct !DILexicalBlock(scope: !8610, file: !964, line: 246, column: 49)
!8615 = !DILocation(line: 247, column: 7, scope: !8613)
!8616 = !DILocation(line: 247, column: 7, scope: !8614)
!8617 = !DILocation(line: 248, column: 8, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !964, line: 248, column: 8)
!8619 = distinct !DILexicalBlock(scope: !8613, file: !964, line: 247, column: 22)
!8620 = !DILocation(line: 248, column: 8, scope: !8619)
!8621 = !DILocation(line: 249, column: 16, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8618, file: !964, line: 248, column: 53)
!8623 = !DILocation(line: 250, column: 24, scope: !8622)
!8624 = !DILocation(line: 250, column: 16, scope: !8622)
!8625 = !DILocation(line: 251, column: 4, scope: !8622)
!8626 = !DILocation(line: 252, column: 14, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8618, file: !964, line: 251, column: 11)
!8628 = !DILocation(line: 253, column: 22, scope: !8627)
!8629 = !DILocation(line: 253, column: 14, scope: !8627)
!8630 = !DILocation(line: 259, column: 12, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8614, file: !964, line: 259, column: 7)
!8632 = !DILocation(line: 259, column: 19, scope: !8631)
!8633 = !DILocation(line: 260, column: 8, scope: !8631)
!8634 = !DILocation(line: 259, column: 7, scope: !8614)
!8635 = !DILocation(line: 264, column: 3, scope: !8614)
!8636 = !DILocation(line: 265, column: 3, scope: !8614)
!8637 = !DILocation(line: 266, column: 2, scope: !8614)
!8638 = !DILocation(line: 268, column: 1, scope: !8585)
!8639 = !DILocation(line: 269, column: 2, scope: !8585)
!8640 = !DILocation(line: 271, column: 7, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !964, line: 271, column: 7)
!8642 = distinct !DILexicalBlock(scope: !8585, file: !964, line: 269, column: 16)
!8643 = !DILocation(line: 271, column: 18, scope: !8641)
!8644 = !DILocation(line: 271, column: 16, scope: !8641)
!8645 = !DILocation(line: 271, column: 7, scope: !8642)
!8646 = !DILocation(line: 275, column: 7, scope: !8642)
!8647 = !DILocation(line: 276, column: 7, scope: !8642)
!8648 = !DILocation(line: 277, column: 3, scope: !8642)
!8649 = !DILocation(line: 278, column: 3, scope: !8642)
!8650 = !DILocation(line: 280, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8642, file: !964, line: 280, column: 7)
!8652 = !DILocation(line: 280, column: 18, scope: !8651)
!8653 = !DILocation(line: 280, column: 16, scope: !8651)
!8654 = !DILocation(line: 280, column: 7, scope: !8642)
!8655 = !DILocation(line: 284, column: 7, scope: !8642)
!8656 = !DILocation(line: 285, column: 7, scope: !8642)
!8657 = !DILocation(line: 286, column: 3, scope: !8642)
!8658 = !DILocation(line: 287, column: 3, scope: !8642)
!8659 = !DILocation(line: 289, column: 8, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8642, file: !964, line: 289, column: 7)
!8661 = !DILocation(line: 289, column: 7, scope: !8642)
!8662 = !DILocation(line: 293, column: 19, scope: !8642)
!8663 = !DILocation(line: 293, column: 3, scope: !8642)
!8664 = !DILocation(line: 294, column: 10, scope: !8642)
!8665 = !DILocation(line: 294, column: 7, scope: !8642)
!8666 = !DILocation(line: 295, column: 7, scope: !8642)
!8667 = !DILocation(line: 296, column: 3, scope: !8642)
!8668 = !DILocation(line: 298, column: 8, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8642, file: !964, line: 298, column: 7)
!8670 = !DILocation(line: 298, column: 7, scope: !8642)
!8671 = !DILocation(line: 302, column: 18, scope: !8642)
!8672 = !DILocation(line: 302, column: 3, scope: !8642)
!8673 = !DILocation(line: 303, column: 10, scope: !8642)
!8674 = !DILocation(line: 303, column: 7, scope: !8642)
!8675 = !DILocation(line: 304, column: 7, scope: !8642)
!8676 = !DILocation(line: 305, column: 3, scope: !8642)
!8677 = !DILocation(line: 307, column: 8, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8642, file: !964, line: 307, column: 7)
!8679 = !DILocation(line: 307, column: 7, scope: !8642)
!8680 = !DILocation(line: 311, column: 3, scope: !8642)
!8681 = !DILocation(line: 312, column: 18, scope: !8642)
!8682 = !DILocation(line: 312, column: 13, scope: !8642)
!8683 = !DILocation(line: 312, column: 24, scope: !8642)
!8684 = !DILocation(line: 312, column: 3, scope: !8642)
!8685 = !DILocation(line: 313, column: 3, scope: !8642)
!8686 = !DILocation(line: 318, column: 2, scope: !8585)
!8687 = !DILocation(line: 319, column: 1, scope: !8585)
!8688 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1129, file: !1129, line: 152, type: !8689, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8692)
!8689 = !DISubroutineType(types: !8690)
!8690 = !{!157, !8691, !103}
!8691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!8692 = !{!8693, !8694, !8695, !8696}
!8693 = !DILocalVariable(name: "target", arg: 1, scope: !8688, file: !1129, line: 152, type: !8691)
!8694 = !DILocalVariable(name: "bit", arg: 2, scope: !8688, file: !1129, line: 152, type: !103)
!8695 = !DILocalVariable(name: "mask", scope: !8688, file: !1129, line: 154, type: !8579)
!8696 = !DILocalVariable(name: "old", scope: !8688, file: !1129, line: 155, type: !8579)
!8697 = !DILocation(line: 0, scope: !8688)
!8698 = !DILocation(line: 154, column: 22, scope: !8688)
!8699 = !DILocation(line: 157, column: 45, scope: !8688)
!8700 = !DILocation(line: 157, column: 8, scope: !8688)
!8701 = !DILocation(line: 159, column: 14, scope: !8688)
!8702 = !DILocation(line: 159, column: 22, scope: !8688)
!8703 = !DILocation(line: 159, column: 2, scope: !8688)
!8704 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1129, file: !1129, line: 217, type: !8705, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8707)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{null, !8691, !103}
!8707 = !{!8708, !8709, !8710}
!8708 = !DILocalVariable(name: "target", arg: 1, scope: !8704, file: !1129, line: 217, type: !8691)
!8709 = !DILocalVariable(name: "bit", arg: 2, scope: !8704, file: !1129, line: 217, type: !103)
!8710 = !DILocalVariable(name: "mask", scope: !8704, file: !1129, line: 219, type: !8579)
!8711 = !DILocation(line: 0, scope: !8704)
!8712 = !DILocation(line: 219, column: 22, scope: !8704)
!8713 = !DILocation(line: 221, column: 8, scope: !8704)
!8714 = !DILocation(line: 222, column: 1, scope: !8704)
!8715 = distinct !DISubprogram(name: "isprint", scope: !5008, file: !5008, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8716)
!8716 = !{!8717}
!8717 = !DILocalVariable(name: "c", arg: 1, scope: !8715, file: !5008, line: 37, type: !103)
!8718 = !DILocation(line: 0, scope: !8715)
!8719 = !DILocation(line: 39, column: 38, scope: !8715)
!8720 = !DILocation(line: 39, column: 2, scope: !8715)
!8721 = distinct !DISubprogram(name: "del_char", scope: !964, file: !964, line: 191, type: !8722, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8724)
!8722 = !DISubroutineType(types: !8723)
!8723 = !{null, !344, !154}
!8724 = !{!8725, !8726}
!8725 = !DILocalVariable(name: "pos", arg: 1, scope: !8721, file: !964, line: 191, type: !344)
!8726 = !DILocalVariable(name: "end", arg: 2, scope: !8721, file: !964, line: 191, type: !154)
!8727 = !DILocation(line: 0, scope: !8721)
!8728 = !DILocation(line: 193, column: 2, scope: !8721)
!8729 = !DILocation(line: 195, column: 10, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8721, file: !964, line: 195, column: 6)
!8731 = !DILocation(line: 195, column: 6, scope: !8721)
!8732 = !DILocation(line: 196, column: 3, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8730, file: !964, line: 195, column: 17)
!8734 = !DILocation(line: 197, column: 3, scope: !8733)
!8735 = !DILocation(line: 198, column: 3, scope: !8733)
!8736 = !DILocation(line: 201, column: 2, scope: !8721)
!8737 = !DILocation(line: 203, column: 2, scope: !8721)
!8738 = !DILocation(line: 203, column: 12, scope: !8721)
!8739 = !DILocation(line: 204, column: 16, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8721, file: !964, line: 203, column: 20)
!8741 = !DILocation(line: 204, column: 10, scope: !8740)
!8742 = !DILocation(line: 204, column: 8, scope: !8740)
!8743 = !DILocation(line: 205, column: 3, scope: !8740)
!8744 = !DILocation(line: 203, column: 15, scope: !8721)
!8745 = distinct !{!8745, !8737, !8746}
!8746 = !DILocation(line: 206, column: 2, scope: !8721)
!8747 = !DILocation(line: 208, column: 2, scope: !8721)
!8748 = !DILocation(line: 211, column: 2, scope: !8721)
!8749 = !DILocation(line: 212, column: 1, scope: !8721)
!8750 = distinct !DISubprogram(name: "insert_char", scope: !964, file: !964, line: 163, type: !8751, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{null, !344, !146, !154}
!8753 = !{!8754, !8755, !8756, !8757}
!8754 = !DILocalVariable(name: "pos", arg: 1, scope: !8750, file: !964, line: 163, type: !344)
!8755 = !DILocalVariable(name: "c", arg: 2, scope: !8750, file: !964, line: 163, type: !146)
!8756 = !DILocalVariable(name: "end", arg: 3, scope: !8750, file: !964, line: 163, type: !154)
!8757 = !DILocalVariable(name: "tmp", scope: !8750, file: !964, line: 165, type: !146)
!8758 = !DILocation(line: 0, scope: !8750)
!8759 = !DILocation(line: 168, column: 2, scope: !8750)
!8760 = !DILocation(line: 170, column: 10, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8750, file: !964, line: 170, column: 6)
!8762 = !DILocation(line: 170, column: 6, scope: !8750)
!8763 = !DILocation(line: 171, column: 8, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8761, file: !964, line: 170, column: 17)
!8765 = !DILocation(line: 172, column: 3, scope: !8764)
!8766 = !DILocation(line: 175, column: 8, scope: !8750)
!8767 = !DILocation(line: 176, column: 11, scope: !8750)
!8768 = !DILocation(line: 178, column: 2, scope: !8750)
!8769 = !DILocation(line: 180, column: 2, scope: !8750)
!8770 = !DILocation(line: 180, column: 12, scope: !8750)
!8771 = !DILocation(line: 181, column: 3, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8750, file: !964, line: 180, column: 20)
!8773 = !DILocation(line: 182, column: 7, scope: !8772)
!8774 = !DILocation(line: 183, column: 12, scope: !8772)
!8775 = !DILocation(line: 180, column: 15, scope: !8750)
!8776 = distinct !{!8776, !8769, !8777}
!8777 = !DILocation(line: 185, column: 2, scope: !8750)
!8778 = !DILocation(line: 188, column: 2, scope: !8750)
!8779 = !DILocation(line: 189, column: 1, scope: !8750)
!8780 = distinct !DISubprogram(name: "cursor_save", scope: !964, file: !964, line: 153, type: !3255, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !317)
!8781 = !DILocation(line: 155, column: 2, scope: !8780)
!8782 = !DILocation(line: 156, column: 1, scope: !8780)
!8783 = distinct !DISubprogram(name: "cursor_restore", scope: !964, file: !964, line: 158, type: !3255, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !317)
!8784 = !DILocation(line: 160, column: 2, scope: !8783)
!8785 = !DILocation(line: 161, column: 1, scope: !8783)
!8786 = distinct !DISubprogram(name: "atomic_or", scope: !8787, file: !8787, line: 279, type: !8788, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8790)
!8787 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8788 = !DISubroutineType(types: !8789)
!8789 = !{!8579, !8691, !8579}
!8790 = !{!8791, !8792}
!8791 = !DILocalVariable(name: "target", arg: 1, scope: !8786, file: !8787, line: 279, type: !8691)
!8792 = !DILocalVariable(name: "value", arg: 2, scope: !8786, file: !8787, line: 279, type: !8579)
!8793 = !DILocation(line: 0, scope: !8786)
!8794 = !DILocation(line: 281, column: 9, scope: !8786)
!8795 = !DILocation(line: 281, column: 2, scope: !8786)
!8796 = distinct !DISubprogram(name: "atomic_and", scope: !8787, file: !8787, line: 319, type: !8788, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8797)
!8797 = !{!8798, !8799}
!8798 = !DILocalVariable(name: "target", arg: 1, scope: !8796, file: !8787, line: 319, type: !8691)
!8799 = !DILocalVariable(name: "value", arg: 2, scope: !8796, file: !8787, line: 319, type: !8579)
!8800 = !DILocation(line: 0, scope: !8796)
!8801 = !DILocation(line: 321, column: 9, scope: !8796)
!8802 = !DILocation(line: 321, column: 2, scope: !8796)
!8803 = distinct !DISubprogram(name: "isdigit", scope: !5008, file: !5008, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8804)
!8804 = !{!8805}
!8805 = !DILocalVariable(name: "a", arg: 1, scope: !8803, file: !5008, line: 43, type: !103)
!8806 = !DILocation(line: 0, scope: !8803)
!8807 = !DILocation(line: 45, column: 29, scope: !8803)
!8808 = !DILocation(line: 45, column: 45, scope: !8803)
!8809 = !DILocation(line: 45, column: 2, scope: !8803)
!8810 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1129, file: !1129, line: 176, type: !8689, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8811)
!8811 = !{!8812, !8813, !8814, !8815}
!8812 = !DILocalVariable(name: "target", arg: 1, scope: !8810, file: !1129, line: 176, type: !8691)
!8813 = !DILocalVariable(name: "bit", arg: 2, scope: !8810, file: !1129, line: 176, type: !103)
!8814 = !DILocalVariable(name: "mask", scope: !8810, file: !1129, line: 178, type: !8579)
!8815 = !DILocalVariable(name: "old", scope: !8810, file: !1129, line: 179, type: !8579)
!8816 = !DILocation(line: 0, scope: !8810)
!8817 = !DILocation(line: 181, column: 8, scope: !8810)
!8818 = !DILocation(line: 183, column: 14, scope: !8810)
!8819 = !DILocation(line: 183, column: 22, scope: !8810)
!8820 = !DILocation(line: 183, column: 2, scope: !8810)
!8821 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1129, file: !1129, line: 198, type: !8705, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8822)
!8822 = !{!8823, !8824, !8825}
!8823 = !DILocalVariable(name: "target", arg: 1, scope: !8821, file: !1129, line: 198, type: !8691)
!8824 = !DILocalVariable(name: "bit", arg: 2, scope: !8821, file: !1129, line: 198, type: !103)
!8825 = !DILocalVariable(name: "mask", scope: !8821, file: !1129, line: 200, type: !8579)
!8826 = !DILocation(line: 0, scope: !8821)
!8827 = !DILocation(line: 200, column: 22, scope: !8821)
!8828 = !DILocation(line: 202, column: 45, scope: !8821)
!8829 = !DILocation(line: 202, column: 8, scope: !8821)
!8830 = !DILocation(line: 203, column: 1, scope: !8821)
!8831 = distinct !DISubprogram(name: "cursor_backward", scope: !964, file: !964, line: 148, type: !5829, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8832)
!8832 = !{!8833}
!8833 = !DILocalVariable(name: "count", arg: 1, scope: !8831, file: !964, line: 148, type: !32)
!8834 = !DILocation(line: 0, scope: !8831)
!8835 = !DILocation(line: 150, column: 2, scope: !8831)
!8836 = !DILocation(line: 151, column: 1, scope: !8831)
!8837 = distinct !DISubprogram(name: "cursor_forward", scope: !964, file: !964, line: 143, type: !5829, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8838)
!8838 = !{!8839}
!8839 = !DILocalVariable(name: "count", arg: 1, scope: !8837, file: !964, line: 143, type: !32)
!8840 = !DILocation(line: 0, scope: !8837)
!8841 = !DILocation(line: 145, column: 2, scope: !8837)
!8842 = !DILocation(line: 146, column: 1, scope: !8837)
!8843 = distinct !DISubprogram(name: "atomic_get", scope: !8787, file: !8787, line: 159, type: !8844, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8846)
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!8579, !8573}
!8846 = !{!8847}
!8847 = !DILocalVariable(name: "target", arg: 1, scope: !8843, file: !8787, line: 159, type: !8573)
!8848 = !DILocation(line: 0, scope: !8843)
!8849 = !DILocation(line: 161, column: 9, scope: !8843)
!8850 = !DILocation(line: 161, column: 2, scope: !8843)
!8851 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !1001, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8852)
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "dev", arg: 1, scope: !8851, file: !209, line: 1093, type: !980)
!8854 = !DILocalVariable(name: "api", scope: !8851, file: !209, line: 1096, type: !972)
!8855 = !DILocation(line: 0, scope: !8851)
!8856 = !DILocation(line: 1097, column: 40, scope: !8851)
!8857 = !DILocation(line: 1099, column: 11, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8851, file: !209, line: 1099, column: 6)
!8859 = !DILocation(line: 1099, column: 26, scope: !8858)
!8860 = !DILocation(line: 1099, column: 6, scope: !8851)
!8861 = !DILocation(line: 1102, column: 9, scope: !8851)
!8862 = !DILocation(line: 1102, column: 2, scope: !8851)
!8863 = !DILocation(line: 1107, column: 1, scope: !8851)
!8864 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !1001, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8865)
!8865 = !{!8866, !8867}
!8866 = !DILocalVariable(name: "dev", arg: 1, scope: !8864, file: !209, line: 1136, type: !980)
!8867 = !DILocalVariable(name: "api", scope: !8864, file: !209, line: 1139, type: !972)
!8868 = !DILocation(line: 0, scope: !8864)
!8869 = !DILocation(line: 1140, column: 40, scope: !8864)
!8870 = !DILocation(line: 1142, column: 11, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8864, file: !209, line: 1142, column: 6)
!8872 = !DILocation(line: 1142, column: 22, scope: !8871)
!8873 = !DILocation(line: 1142, column: 6, scope: !8864)
!8874 = !DILocation(line: 1145, column: 9, scope: !8864)
!8875 = !DILocation(line: 1145, column: 2, scope: !8864)
!8876 = !DILocation(line: 1150, column: 1, scope: !8864)
!8877 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !1031, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8878)
!8878 = !{!8879, !8880}
!8879 = !DILocalVariable(name: "dev", arg: 1, scope: !8877, file: !209, line: 878, type: !980)
!8880 = !DILocalVariable(name: "api", scope: !8877, file: !209, line: 881, type: !972)
!8881 = !DILocation(line: 0, scope: !8877)
!8882 = !DILocation(line: 882, column: 40, scope: !8877)
!8883 = !DILocation(line: 884, column: 11, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8877, file: !209, line: 884, column: 6)
!8885 = !DILocation(line: 884, column: 26, scope: !8884)
!8886 = !DILocation(line: 884, column: 6, scope: !8877)
!8887 = !DILocation(line: 885, column: 3, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8884, file: !209, line: 884, column: 35)
!8889 = !DILocation(line: 886, column: 2, scope: !8888)
!8890 = !DILocation(line: 890, column: 1, scope: !8877)
!8891 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !1031, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8892)
!8892 = !{!8893, !8894}
!8893 = !DILocalVariable(name: "dev", arg: 1, scope: !8891, file: !209, line: 955, type: !980)
!8894 = !DILocalVariable(name: "api", scope: !8891, file: !209, line: 958, type: !972)
!8895 = !DILocation(line: 0, scope: !8891)
!8896 = !DILocation(line: 959, column: 40, scope: !8891)
!8897 = !DILocation(line: 961, column: 11, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8891, file: !209, line: 961, column: 6)
!8899 = !DILocation(line: 961, column: 26, scope: !8898)
!8900 = !DILocation(line: 961, column: 6, scope: !8891)
!8901 = !DILocation(line: 962, column: 3, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8898, file: !209, line: 961, column: 35)
!8903 = !DILocation(line: 963, column: 2, scope: !8902)
!8904 = !DILocation(line: 967, column: 1, scope: !8891)
!8905 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1311, file: !1311, line: 523, type: !1167, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !8906)
!8906 = !{!8907, !8908, !8909, !8910, !8911}
!8907 = !DILocalVariable(name: "dev", arg: 1, scope: !8905, file: !1311, line: 523, type: !1169)
!8908 = !DILocalVariable(name: "pin", arg: 2, scope: !8905, file: !1311, line: 524, type: !1184)
!8909 = !DILocalVariable(name: "flags", arg: 3, scope: !8905, file: !1311, line: 524, type: !1185)
!8910 = !DILocalVariable(name: "err", scope: !8905, file: !1311, line: 526, type: !103)
!8911 = !DILocalVariable(name: "pincfg", scope: !8905, file: !1311, line: 527, type: !103)
!8912 = !DILocation(line: 0, scope: !8905)
!8913 = !DILocation(line: 527, column: 2, scope: !8905)
!8914 = !DILocation(line: 532, column: 8, scope: !8905)
!8915 = !DILocation(line: 533, column: 10, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8905, file: !1311, line: 533, column: 6)
!8917 = !DILocation(line: 533, column: 6, scope: !8905)
!8918 = !DILocation(line: 543, column: 13, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8905, file: !1311, line: 543, column: 6)
!8920 = !DILocation(line: 543, column: 28, scope: !8919)
!8921 = !DILocation(line: 543, column: 6, scope: !8905)
!8922 = !DILocation(line: 544, column: 14, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8924, file: !1311, line: 544, column: 7)
!8924 = distinct !DILexicalBlock(scope: !8919, file: !1311, line: 543, column: 34)
!8925 = !DILocation(line: 544, column: 39, scope: !8923)
!8926 = !DILocation(line: 544, column: 7, scope: !8924)
!8927 = !DILocation(line: 545, column: 38, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8923, file: !1311, line: 544, column: 45)
!8929 = !DILocation(line: 545, column: 4, scope: !8928)
!8930 = !DILocation(line: 546, column: 3, scope: !8928)
!8931 = !DILocation(line: 546, column: 21, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8923, file: !1311, line: 546, column: 14)
!8933 = !DILocation(line: 546, column: 45, scope: !8932)
!8934 = !DILocation(line: 546, column: 14, scope: !8923)
!8935 = !DILocation(line: 547, column: 40, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !1311, line: 546, column: 51)
!8937 = !DILocation(line: 547, column: 4, scope: !8936)
!8938 = !DILocation(line: 548, column: 3, scope: !8936)
!8939 = !DILocation(line: 551, column: 32, scope: !8905)
!8940 = !DILocation(line: 551, column: 37, scope: !8905)
!8941 = !DILocation(line: 551, column: 2, scope: !8905)
!8942 = !DILocation(line: 554, column: 6, scope: !8905)
!8943 = !DILocation(line: 562, column: 1, scope: !8905)
!8944 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1311, file: !1311, line: 410, type: !8945, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !8947)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!103, !1169, !882}
!8947 = !{!8948, !8949, !8950, !8952}
!8948 = !DILocalVariable(name: "dev", arg: 1, scope: !8944, file: !1311, line: 410, type: !1169)
!8949 = !DILocalVariable(name: "value", arg: 2, scope: !8944, file: !1311, line: 410, type: !882)
!8950 = !DILocalVariable(name: "cfg", scope: !8944, file: !1311, line: 412, type: !8951)
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!8952 = !DILocalVariable(name: "gpio", scope: !8944, file: !1311, line: 413, type: !1242)
!8953 = !DILocation(line: 0, scope: !8944)
!8954 = !DILocation(line: 412, column: 45, scope: !8944)
!8955 = !DILocation(line: 413, column: 44, scope: !8944)
!8956 = !DILocation(line: 415, column: 11, scope: !8944)
!8957 = !DILocation(line: 415, column: 9, scope: !8944)
!8958 = !DILocation(line: 417, column: 2, scope: !8944)
!8959 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1311, file: !1311, line: 420, type: !1194, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !8960)
!8960 = !{!8961, !8962, !8963, !8964, !8965, !8966}
!8961 = !DILocalVariable(name: "dev", arg: 1, scope: !8959, file: !1311, line: 420, type: !1169)
!8962 = !DILocalVariable(name: "mask", arg: 2, scope: !8959, file: !1311, line: 421, type: !1196)
!8963 = !DILocalVariable(name: "value", arg: 3, scope: !8959, file: !1311, line: 422, type: !1191)
!8964 = !DILocalVariable(name: "cfg", scope: !8959, file: !1311, line: 424, type: !8951)
!8965 = !DILocalVariable(name: "gpio", scope: !8959, file: !1311, line: 425, type: !1242)
!8966 = !DILocalVariable(name: "port_value", scope: !8959, file: !1311, line: 426, type: !121)
!8967 = !DILocation(line: 0, scope: !8959)
!8968 = !DILocation(line: 424, column: 45, scope: !8959)
!8969 = !DILocation(line: 425, column: 44, scope: !8959)
!8970 = !DILocation(line: 430, column: 15, scope: !8959)
!8971 = !DILocation(line: 431, column: 46, scope: !8959)
!8972 = !DILocation(line: 431, column: 44, scope: !8959)
!8973 = !DILocation(line: 431, column: 61, scope: !8959)
!8974 = !DILocation(line: 431, column: 53, scope: !8959)
!8975 = !DILocation(line: 431, column: 2, scope: !8959)
!8976 = !DILocation(line: 435, column: 2, scope: !8959)
!8977 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1311, file: !1311, line: 438, type: !1199, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !8978)
!8978 = !{!8979, !8980, !8981, !8982}
!8979 = !DILocalVariable(name: "dev", arg: 1, scope: !8977, file: !1311, line: 438, type: !1169)
!8980 = !DILocalVariable(name: "pins", arg: 2, scope: !8977, file: !1311, line: 439, type: !1196)
!8981 = !DILocalVariable(name: "cfg", scope: !8977, file: !1311, line: 441, type: !8951)
!8982 = !DILocalVariable(name: "gpio", scope: !8977, file: !1311, line: 442, type: !1242)
!8983 = !DILocation(line: 0, scope: !8977)
!8984 = !DILocation(line: 441, column: 45, scope: !8977)
!8985 = !DILocation(line: 442, column: 44, scope: !8977)
!8986 = !DILocation(line: 448, column: 2, scope: !8977)
!8987 = !DILocation(line: 450, column: 2, scope: !8977)
!8988 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1311, file: !1311, line: 453, type: !1199, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !8989)
!8989 = !{!8990, !8991, !8992, !8993}
!8990 = !DILocalVariable(name: "dev", arg: 1, scope: !8988, file: !1311, line: 453, type: !1169)
!8991 = !DILocalVariable(name: "pins", arg: 2, scope: !8988, file: !1311, line: 454, type: !1196)
!8992 = !DILocalVariable(name: "cfg", scope: !8988, file: !1311, line: 456, type: !8951)
!8993 = !DILocalVariable(name: "gpio", scope: !8988, file: !1311, line: 457, type: !1242)
!8994 = !DILocation(line: 0, scope: !8988)
!8995 = !DILocation(line: 456, column: 45, scope: !8988)
!8996 = !DILocation(line: 457, column: 44, scope: !8988)
!8997 = !DILocation(line: 467, column: 2, scope: !8988)
!8998 = !DILocation(line: 470, column: 2, scope: !8988)
!8999 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1311, file: !1311, line: 473, type: !1199, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9000)
!9000 = !{!9001, !9002, !9003, !9004}
!9001 = !DILocalVariable(name: "dev", arg: 1, scope: !8999, file: !1311, line: 473, type: !1169)
!9002 = !DILocalVariable(name: "pins", arg: 2, scope: !8999, file: !1311, line: 474, type: !1196)
!9003 = !DILocalVariable(name: "cfg", scope: !8999, file: !1311, line: 476, type: !8951)
!9004 = !DILocalVariable(name: "gpio", scope: !8999, file: !1311, line: 477, type: !1242)
!9005 = !DILocation(line: 0, scope: !8999)
!9006 = !DILocation(line: 476, column: 45, scope: !8999)
!9007 = !DILocation(line: 477, column: 44, scope: !8999)
!9008 = !DILocation(line: 484, column: 2, scope: !8999)
!9009 = !DILocation(line: 487, column: 2, scope: !8999)
!9010 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1311, file: !1311, line: 594, type: !1205, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9011)
!9011 = !{!9012, !9013, !9014, !9015, !9016, !9017, !9019, !9020, !9021}
!9012 = !DILocalVariable(name: "dev", arg: 1, scope: !9010, file: !1311, line: 594, type: !1169)
!9013 = !DILocalVariable(name: "pin", arg: 2, scope: !9010, file: !1311, line: 595, type: !1184)
!9014 = !DILocalVariable(name: "mode", arg: 3, scope: !9010, file: !1311, line: 596, type: !1143)
!9015 = !DILocalVariable(name: "trig", arg: 4, scope: !9010, file: !1311, line: 597, type: !1149)
!9016 = !DILocalVariable(name: "cfg", scope: !9010, file: !1311, line: 599, type: !8951)
!9017 = !DILocalVariable(name: "data", scope: !9010, file: !1311, line: 600, type: !9018)
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!9019 = !DILocalVariable(name: "edge", scope: !9010, file: !1311, line: 601, type: !103)
!9020 = !DILocalVariable(name: "err", scope: !9010, file: !1311, line: 602, type: !103)
!9021 = !DILabel(scope: !9010, name: "exit", file: !1311, line: 643)
!9022 = !DILocation(line: 0, scope: !9010)
!9023 = !DILocation(line: 599, column: 45, scope: !9010)
!9024 = !DILocation(line: 604, column: 6, scope: !9010)
!9025 = !DILocation(line: 605, column: 34, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !1311, line: 605, column: 7)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !1311, line: 604, column: 38)
!9028 = distinct !DILexicalBlock(scope: !9010, file: !1311, line: 604, column: 6)
!9029 = !DILocation(line: 605, column: 7, scope: !9026)
!9030 = !DILocation(line: 605, column: 47, scope: !9026)
!9031 = !DILocation(line: 605, column: 39, scope: !9026)
!9032 = !DILocation(line: 605, column: 7, scope: !9027)
!9033 = !DILocation(line: 606, column: 4, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9026, file: !1311, line: 605, column: 53)
!9035 = !DILocation(line: 607, column: 4, scope: !9034)
!9036 = !DILocation(line: 608, column: 4, scope: !9034)
!9037 = !DILocation(line: 609, column: 3, scope: !9034)
!9038 = !DILocation(line: 600, column: 38, scope: !9010)
!9039 = !DILocation(line: 620, column: 30, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9010, file: !1311, line: 620, column: 6)
!9041 = !DILocation(line: 620, column: 6, scope: !9040)
!9042 = !DILocation(line: 620, column: 57, scope: !9040)
!9043 = !DILocation(line: 620, column: 6, scope: !9010)
!9044 = !DILocation(line: 625, column: 29, scope: !9010)
!9045 = !DILocation(line: 625, column: 2, scope: !9010)
!9046 = !DILocation(line: 627, column: 2, scope: !9010)
!9047 = !DILocation(line: 630, column: 3, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9010, file: !1311, line: 627, column: 16)
!9049 = !DILocation(line: 633, column: 3, scope: !9048)
!9050 = !DILocation(line: 636, column: 3, scope: !9048)
!9051 = !DILocation(line: 639, column: 2, scope: !9010)
!9052 = !DILocation(line: 641, column: 2, scope: !9010)
!9053 = !DILocation(line: 643, column: 1, scope: !9010)
!9054 = !DILocation(line: 644, column: 2, scope: !9010)
!9055 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1311, file: !1311, line: 647, type: !1209, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9056)
!9056 = !{!9057, !9058, !9059, !9060}
!9057 = !DILocalVariable(name: "dev", arg: 1, scope: !9055, file: !1311, line: 647, type: !1169)
!9058 = !DILocalVariable(name: "callback", arg: 2, scope: !9055, file: !1311, line: 648, type: !1211)
!9059 = !DILocalVariable(name: "set", arg: 3, scope: !9055, file: !1311, line: 649, type: !157)
!9060 = !DILocalVariable(name: "data", scope: !9055, file: !1311, line: 651, type: !9018)
!9061 = !DILocation(line: 0, scope: !9055)
!9062 = !DILocation(line: 651, column: 38, scope: !9055)
!9063 = !DILocation(line: 653, column: 37, scope: !9055)
!9064 = !DILocation(line: 653, column: 9, scope: !9055)
!9065 = !DILocation(line: 653, column: 2, scope: !9055)
!9066 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9067, file: !9067, line: 38, type: !9068, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9071)
!9067 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!103, !9070, !1211, !157}
!9070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!9071 = !{!9072, !9073, !9074}
!9072 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9066, file: !9067, line: 38, type: !9070)
!9073 = !DILocalVariable(name: "callback", arg: 2, scope: !9066, file: !9067, line: 39, type: !1211)
!9074 = !DILocalVariable(name: "set", arg: 3, scope: !9066, file: !9067, line: 40, type: !157)
!9075 = !DILocation(line: 0, scope: !9066)
!9076 = !DILocation(line: 45, column: 7, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9066, file: !9067, line: 45, column: 6)
!9078 = !DILocation(line: 45, column: 6, scope: !9066)
!9079 = !DILocation(line: 46, column: 56, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !9067, line: 46, column: 7)
!9081 = distinct !DILexicalBlock(scope: !9077, file: !9067, line: 45, column: 38)
!9082 = !DILocation(line: 46, column: 8, scope: !9080)
!9083 = !DILocation(line: 46, column: 7, scope: !9081)
!9084 = !DILocation(line: 51, column: 13, scope: !9077)
!9085 = !DILocation(line: 56, column: 43, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !9067, line: 55, column: 11)
!9087 = distinct !DILexicalBlock(scope: !9066, file: !9067, line: 55, column: 6)
!9088 = !DILocation(line: 56, column: 3, scope: !9086)
!9089 = !DILocation(line: 57, column: 2, scope: !9086)
!9090 = !DILocation(line: 60, column: 1, scope: !9066)
!9091 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1216, file: !1216, line: 261, type: !9092, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9094)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!157, !9070}
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "list", arg: 1, scope: !9091, file: !1216, line: 261, type: !9070)
!9096 = !DILocation(line: 0, scope: !9091)
!9097 = !DILocation(line: 261, column: 1, scope: !9091)
!9098 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1216, file: !1216, line: 417, type: !9099, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9101)
!9099 = !DISubroutineType(types: !9100)
!9100 = !{!157, !9070, !1384}
!9101 = !{!9102, !9103, !9104, !9105}
!9102 = !DILocalVariable(name: "list", arg: 1, scope: !9098, file: !1216, line: 417, type: !9070)
!9103 = !DILocalVariable(name: "node", arg: 2, scope: !9098, file: !1216, line: 417, type: !1384)
!9104 = !DILocalVariable(name: "prev", scope: !9098, file: !1216, line: 417, type: !1384)
!9105 = !DILocalVariable(name: "test", scope: !9098, file: !1216, line: 417, type: !1384)
!9106 = !DILocation(line: 0, scope: !9098)
!9107 = !DILocation(line: 417, column: 1, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9098, file: !1216, line: 417, column: 1)
!9109 = !DILocation(line: 417, column: 1, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9108, file: !1216, line: 417, column: 1)
!9111 = !DILocation(line: 417, column: 1, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !1216, line: 417, column: 1)
!9113 = distinct !DILexicalBlock(scope: !9110, file: !1216, line: 417, column: 1)
!9114 = !DILocation(line: 417, column: 1, scope: !9113)
!9115 = distinct !{!9115, !9107, !9107}
!9116 = !DILocation(line: 417, column: 1, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9112, file: !1216, line: 417, column: 1)
!9118 = !DILocation(line: 417, column: 1, scope: !9098)
!9119 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1216, file: !1216, line: 298, type: !9120, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9122)
!9120 = !DISubroutineType(types: !9121)
!9121 = !{null, !9070, !1384}
!9122 = !{!9123, !9124}
!9123 = !DILocalVariable(name: "list", arg: 1, scope: !9119, file: !1216, line: 298, type: !9070)
!9124 = !DILocalVariable(name: "node", arg: 2, scope: !9119, file: !1216, line: 298, type: !1384)
!9125 = !DILocation(line: 0, scope: !9119)
!9126 = !DILocation(line: 298, column: 1, scope: !9119)
!9127 = !DILocation(line: 298, column: 1, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9119, file: !1216, line: 298, column: 1)
!9129 = !DILocation(line: 298, column: 1, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9128, file: !1216, line: 298, column: 1)
!9131 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1216, file: !1216, line: 231, type: !9132, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9134)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!1384, !9070}
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "list", arg: 1, scope: !9131, file: !1216, line: 231, type: !9070)
!9136 = !DILocation(line: 0, scope: !9131)
!9137 = !DILocation(line: 233, column: 15, scope: !9131)
!9138 = !DILocation(line: 233, column: 2, scope: !9131)
!9139 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1216, file: !1216, line: 209, type: !9140, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9142)
!9140 = !DISubroutineType(types: !9141)
!9141 = !{null, !1384, !1384}
!9142 = !{!9143, !9144}
!9143 = !DILocalVariable(name: "parent", arg: 1, scope: !9139, file: !1216, line: 209, type: !1384)
!9144 = !DILocalVariable(name: "child", arg: 2, scope: !9139, file: !1216, line: 209, type: !1384)
!9145 = !DILocation(line: 0, scope: !9139)
!9146 = !DILocation(line: 211, column: 10, scope: !9139)
!9147 = !DILocation(line: 211, column: 15, scope: !9139)
!9148 = !DILocation(line: 212, column: 1, scope: !9139)
!9149 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1216, file: !1216, line: 214, type: !9120, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9150)
!9150 = !{!9151, !9152}
!9151 = !DILocalVariable(name: "list", arg: 1, scope: !9149, file: !1216, line: 214, type: !9070)
!9152 = !DILocalVariable(name: "node", arg: 2, scope: !9149, file: !1216, line: 214, type: !1384)
!9153 = !DILocation(line: 0, scope: !9149)
!9154 = !DILocation(line: 216, column: 8, scope: !9149)
!9155 = !DILocation(line: 216, column: 13, scope: !9149)
!9156 = !DILocation(line: 217, column: 1, scope: !9149)
!9157 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1216, file: !1216, line: 243, type: !9132, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9158)
!9158 = !{!9159}
!9159 = !DILocalVariable(name: "list", arg: 1, scope: !9157, file: !1216, line: 243, type: !9070)
!9160 = !DILocation(line: 0, scope: !9157)
!9161 = !DILocation(line: 245, column: 15, scope: !9157)
!9162 = !DILocation(line: 245, column: 2, scope: !9157)
!9163 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1216, file: !1216, line: 219, type: !9120, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "list", arg: 1, scope: !9163, file: !1216, line: 219, type: !9070)
!9166 = !DILocalVariable(name: "node", arg: 2, scope: !9163, file: !1216, line: 219, type: !1384)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 221, column: 8, scope: !9163)
!9169 = !DILocation(line: 221, column: 13, scope: !9163)
!9170 = !DILocation(line: 222, column: 1, scope: !9163)
!9171 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1216, file: !1216, line: 401, type: !9172, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9174)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{null, !9070, !1384, !1384}
!9174 = !{!9175, !9176, !9177}
!9175 = !DILocalVariable(name: "list", arg: 1, scope: !9171, file: !1216, line: 401, type: !9070)
!9176 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9171, file: !1216, line: 401, type: !1384)
!9177 = !DILocalVariable(name: "node", arg: 3, scope: !9171, file: !1216, line: 401, type: !1384)
!9178 = !DILocation(line: 0, scope: !9171)
!9179 = !DILocation(line: 401, column: 1, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9171, file: !1216, line: 401, column: 1)
!9181 = !DILocation(line: 0, scope: !9180)
!9182 = !DILocation(line: 401, column: 1, scope: !9171)
!9183 = !DILocation(line: 401, column: 1, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9180, file: !1216, line: 401, column: 1)
!9185 = !DILocation(line: 401, column: 1, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9184, file: !1216, line: 401, column: 1)
!9187 = !DILocation(line: 401, column: 1, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9186, file: !1216, line: 401, column: 1)
!9189 = !DILocation(line: 401, column: 1, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9180, file: !1216, line: 401, column: 1)
!9191 = !DILocation(line: 401, column: 1, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9190, file: !1216, line: 401, column: 1)
!9193 = !DILocation(line: 401, column: 1, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9192, file: !1216, line: 401, column: 1)
!9195 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1216, file: !1216, line: 285, type: !9196, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9198)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{!1384, !1384}
!9198 = !{!9199}
!9199 = !DILocalVariable(name: "node", arg: 1, scope: !9195, file: !1216, line: 285, type: !1384)
!9200 = !DILocation(line: 0, scope: !9195)
!9201 = !DILocation(line: 285, column: 1, scope: !9195)
!9202 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1216, file: !1216, line: 274, type: !9196, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9203)
!9203 = !{!9204}
!9204 = !DILocalVariable(name: "node", arg: 1, scope: !9202, file: !1216, line: 274, type: !1384)
!9205 = !DILocation(line: 0, scope: !9202)
!9206 = !DILocation(line: 274, column: 1, scope: !9202)
!9207 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1216, file: !1216, line: 204, type: !9196, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9208)
!9208 = !{!9209}
!9209 = !DILocalVariable(name: "node", arg: 1, scope: !9207, file: !1216, line: 204, type: !1384)
!9210 = !DILocation(line: 0, scope: !9207)
!9211 = !DILocation(line: 206, column: 15, scope: !9207)
!9212 = !DILocation(line: 206, column: 2, scope: !9207)
!9213 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1311, file: !1311, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9214)
!9214 = !{!9215, !9216, !9217}
!9215 = !DILocalVariable(name: "pin", arg: 1, scope: !9213, file: !1311, line: 342, type: !103)
!9216 = !DILocalVariable(name: "line", scope: !9213, file: !1311, line: 344, type: !121)
!9217 = !DILocalVariable(name: "port", scope: !9213, file: !1311, line: 345, type: !103)
!9218 = !DILocation(line: 0, scope: !9213)
!9219 = !DILocation(line: 344, column: 18, scope: !9213)
!9220 = !{i32 983040, i32 0}
!9221 = !DILocation(line: 356, column: 9, scope: !9213)
!9222 = !DILocation(line: 370, column: 2, scope: !9213)
!9223 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1311, file: !1311, line: 37, type: !737, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9224)
!9224 = !{!9225, !9226, !9227}
!9225 = !DILocalVariable(name: "line", arg: 1, scope: !9223, file: !1311, line: 37, type: !103)
!9226 = !DILocalVariable(name: "arg", arg: 2, scope: !9223, file: !1311, line: 37, type: !102)
!9227 = !DILocalVariable(name: "data", scope: !9223, file: !1311, line: 39, type: !9018)
!9228 = !DILocation(line: 0, scope: !9223)
!9229 = !DILocation(line: 41, column: 29, scope: !9223)
!9230 = !DILocation(line: 41, column: 39, scope: !9223)
!9231 = !DILocation(line: 41, column: 44, scope: !9223)
!9232 = !DILocation(line: 41, column: 2, scope: !9223)
!9233 = !DILocation(line: 42, column: 1, scope: !9223)
!9234 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1311, file: !1311, line: 376, type: !9235, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9237)
!9235 = !DISubroutineType(types: !9236)
!9236 = !{!103, !103, !103}
!9237 = !{!9238, !9239, !9240, !9242, !9243}
!9238 = !DILocalVariable(name: "port", arg: 1, scope: !9234, file: !1311, line: 376, type: !103)
!9239 = !DILocalVariable(name: "pin", arg: 2, scope: !9234, file: !1311, line: 376, type: !103)
!9240 = !DILocalVariable(name: "clk", scope: !9234, file: !1311, line: 386, type: !9241)
!9241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!9242 = !DILocalVariable(name: "pclken", scope: !9234, file: !1311, line: 387, type: !1427)
!9243 = !DILocalVariable(name: "ret", scope: !9234, file: !1311, line: 396, type: !103)
!9244 = !DILocation(line: 0, scope: !9234)
!9245 = !DILocation(line: 387, column: 2, scope: !9234)
!9246 = !DILocation(line: 387, column: 22, scope: !9234)
!9247 = !DILocation(line: 399, column: 8, scope: !9234)
!9248 = !DILocation(line: 400, column: 10, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9234, file: !1311, line: 400, column: 6)
!9250 = !DILocation(line: 400, column: 6, scope: !9234)
!9251 = !DILocation(line: 405, column: 2, scope: !9234)
!9252 = !DILocation(line: 407, column: 2, scope: !9234)
!9253 = !DILocation(line: 408, column: 1, scope: !9234)
!9254 = distinct !DISubprogram(name: "clock_control_on", scope: !830, file: !830, line: 123, type: !1276, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9255)
!9255 = !{!9256, !9257, !9258}
!9256 = !DILocalVariable(name: "dev", arg: 1, scope: !9254, file: !830, line: 123, type: !1169)
!9257 = !DILocalVariable(name: "sys", arg: 2, scope: !9254, file: !830, line: 124, type: !926)
!9258 = !DILocalVariable(name: "api", scope: !9254, file: !830, line: 126, type: !1269)
!9259 = !DILocation(line: 0, scope: !9254)
!9260 = !DILocation(line: 127, column: 49, scope: !9254)
!9261 = !DILocation(line: 129, column: 14, scope: !9254)
!9262 = !DILocation(line: 129, column: 9, scope: !9254)
!9263 = !DILocation(line: 129, column: 2, scope: !9254)
!9264 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1311, file: !1311, line: 311, type: !7826, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9265)
!9265 = !{!9266, !9267, !9268}
!9266 = !DILocalVariable(name: "port", arg: 1, scope: !9264, file: !1311, line: 311, type: !103)
!9267 = !DILocalVariable(name: "pin", arg: 2, scope: !9264, file: !1311, line: 311, type: !103)
!9268 = !DILocalVariable(name: "line", scope: !9264, file: !1311, line: 313, type: !121)
!9269 = !DILocation(line: 0, scope: !9264)
!9270 = !DILocation(line: 313, column: 18, scope: !9264)
!9271 = !DILocation(line: 337, column: 2, scope: !9264)
!9272 = !DILocation(line: 340, column: 1, scope: !9264)
!9273 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1311, file: !1311, line: 295, type: !9274, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9276)
!9274 = !DISubroutineType(types: !9275)
!9275 = !{!121, !103}
!9276 = !{!9277}
!9277 = !DILocalVariable(name: "pin", arg: 1, scope: !9273, file: !1311, line: 295, type: !103)
!9278 = !DILocation(line: 0, scope: !9273)
!9279 = !DILocation(line: 307, column: 46, scope: !9273)
!9280 = !DILocation(line: 307, column: 27, scope: !9273)
!9281 = !DILocation(line: 307, column: 32, scope: !9273)
!9282 = !DILocation(line: 307, column: 14, scope: !9273)
!9283 = !DILocation(line: 307, column: 39, scope: !9273)
!9284 = !DILocation(line: 307, column: 2, scope: !9273)
!9285 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5839, file: !5839, line: 671, type: !9286, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9288)
!9286 = !DISubroutineType(types: !9287)
!9287 = !{null, !121, !121}
!9288 = !{!9289, !9290}
!9289 = !DILocalVariable(name: "Port", arg: 1, scope: !9285, file: !5839, line: 671, type: !121)
!9290 = !DILocalVariable(name: "Line", arg: 2, scope: !9285, file: !5839, line: 671, type: !121)
!9291 = !DILocation(line: 0, scope: !9285)
!9292 = !DILocation(line: 673, column: 3, scope: !9285)
!9293 = !DILocalVariable(name: "value", arg: 1, scope: !9294, file: !6033, line: 373, type: !121)
!9294 = distinct !DISubprogram(name: "__RBIT", scope: !6033, file: !6033, line: 373, type: !7040, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9295)
!9295 = !{!9293, !9296}
!9296 = !DILocalVariable(name: "result", scope: !9294, file: !6033, line: 375, type: !121)
!9297 = !DILocation(line: 0, scope: !9294, inlinedAt: !9298)
!9298 = distinct !DILocation(line: 673, column: 3, scope: !9285)
!9299 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9298)
!9300 = !{i64 3730555}
!9301 = !DILocalVariable(name: "value", arg: 1, scope: !9302, file: !6033, line: 403, type: !121)
!9302 = distinct !DISubprogram(name: "__CLZ", scope: !6033, file: !6033, line: 403, type: !9303, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!154, !121}
!9305 = !{!9301}
!9306 = !DILocation(line: 0, scope: !9302, inlinedAt: !9307)
!9307 = distinct !DILocation(line: 673, column: 3, scope: !9285)
!9308 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9307)
!9309 = !DILocation(line: 674, column: 1, scope: !9285)
!9310 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9067, file: !9067, line: 69, type: !9311, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9313)
!9311 = !DISubroutineType(types: !9312)
!9312 = !{null, !9070, !1169, !121}
!9313 = !{!9314, !9315, !9316, !9317, !9318}
!9314 = !DILocalVariable(name: "list", arg: 1, scope: !9310, file: !9067, line: 69, type: !9070)
!9315 = !DILocalVariable(name: "port", arg: 2, scope: !9310, file: !9067, line: 70, type: !1169)
!9316 = !DILocalVariable(name: "pins", arg: 3, scope: !9310, file: !9067, line: 71, type: !121)
!9317 = !DILocalVariable(name: "cb", scope: !9310, file: !9067, line: 73, type: !1211)
!9318 = !DILocalVariable(name: "tmp", scope: !9310, file: !9067, line: 73, type: !1211)
!9319 = !DILocation(line: 0, scope: !9310)
!9320 = !DILocation(line: 75, column: 2, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9310, file: !9067, line: 75, column: 2)
!9322 = !DILocation(line: 0, scope: !9321)
!9323 = !DILocation(line: 76, column: 11, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !9067, line: 76, column: 7)
!9325 = distinct !DILexicalBlock(scope: !9326, file: !9067, line: 75, column: 57)
!9326 = distinct !DILexicalBlock(scope: !9321, file: !9067, line: 75, column: 2)
!9327 = !DILocation(line: 76, column: 20, scope: !9324)
!9328 = !DILocation(line: 76, column: 7, scope: !9325)
!9329 = !DILocation(line: 78, column: 8, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9324, file: !9067, line: 76, column: 28)
!9331 = !DILocation(line: 78, column: 4, scope: !9330)
!9332 = !DILocation(line: 79, column: 3, scope: !9330)
!9333 = !DILocation(line: 75, column: 2, scope: !9326)
!9334 = !DILocation(line: 81, column: 1, scope: !9310)
!9335 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5839, file: !5839, line: 710, type: !7040, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9336)
!9336 = !{!9337}
!9337 = !DILocalVariable(name: "Line", arg: 1, scope: !9335, file: !5839, line: 710, type: !121)
!9338 = !DILocation(line: 0, scope: !9335)
!9339 = !DILocation(line: 712, column: 21, scope: !9335)
!9340 = !DILocation(line: 0, scope: !9294, inlinedAt: !9341)
!9341 = distinct !DILocation(line: 712, column: 76, scope: !9335)
!9342 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9341)
!9343 = !DILocation(line: 0, scope: !9302, inlinedAt: !9344)
!9344 = distinct !DILocation(line: 712, column: 76, scope: !9335)
!9345 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9344)
!9346 = !DILocation(line: 712, column: 73, scope: !9335)
!9347 = !DILocation(line: 712, column: 3, scope: !9335)
!9348 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9349, file: !9349, line: 910, type: !9350, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9352)
!9349 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9350 = !DISubroutineType(types: !9351)
!9351 = !{null, !1242, !121}
!9352 = !{!9353, !9354}
!9353 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9348, file: !9349, line: 910, type: !1242)
!9354 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9348, file: !9349, line: 910, type: !121)
!9355 = !DILocation(line: 0, scope: !9348)
!9356 = !DILocation(line: 912, column: 3, scope: !9348)
!9357 = !DILocation(line: 913, column: 1, scope: !9348)
!9358 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9349, file: !9349, line: 823, type: !9359, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9361)
!9359 = !DISubroutineType(types: !9360)
!9360 = !{!121, !1242}
!9361 = !{!9362}
!9362 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9358, file: !9349, line: 823, type: !1242)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 825, column: 21, scope: !9358)
!9365 = !DILocation(line: 825, column: 3, scope: !9358)
!9366 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9349, file: !9349, line: 812, type: !9350, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9367)
!9367 = !{!9368, !9369}
!9368 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9366, file: !9349, line: 812, type: !1242)
!9369 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9366, file: !9349, line: 812, type: !121)
!9370 = !DILocation(line: 0, scope: !9366)
!9371 = !DILocation(line: 814, column: 3, scope: !9366)
!9372 = !DILocation(line: 815, column: 1, scope: !9366)
!9373 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9349, file: !9349, line: 771, type: !9359, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9374)
!9374 = !{!9375}
!9375 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9373, file: !9349, line: 771, type: !1242)
!9376 = !DILocation(line: 0, scope: !9373)
!9377 = !DILocation(line: 773, column: 21, scope: !9373)
!9378 = !DILocation(line: 773, column: 3, scope: !9373)
!9379 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1311, file: !1311, line: 47, type: !9380, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9382)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{!103, !1185, !2681}
!9382 = !{!9383, !9384}
!9383 = !DILocalVariable(name: "flags", arg: 1, scope: !9379, file: !1311, line: 47, type: !1185)
!9384 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9379, file: !1311, line: 47, type: !2681)
!9385 = !DILocation(line: 0, scope: !9379)
!9386 = !DILocation(line: 50, column: 13, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9379, file: !1311, line: 50, column: 6)
!9388 = !DILocation(line: 50, column: 28, scope: !9387)
!9389 = !DILocation(line: 50, column: 6, scope: !9379)
!9390 = !DILocation(line: 53, column: 11, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9387, file: !1311, line: 50, column: 34)
!9392 = !DILocation(line: 55, column: 14, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9391, file: !1311, line: 55, column: 7)
!9394 = !DILocation(line: 55, column: 35, scope: !9393)
!9395 = !DILocation(line: 55, column: 7, scope: !9391)
!9396 = !DILocation(line: 56, column: 14, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9398, file: !1311, line: 56, column: 8)
!9398 = distinct !DILexicalBlock(scope: !9393, file: !1311, line: 55, column: 41)
!9399 = !DILocation(line: 56, column: 8, scope: !9398)
!9400 = !DILocation(line: 0, scope: !9393)
!9401 = !DILocation(line: 66, column: 14, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9391, file: !1311, line: 66, column: 7)
!9403 = !DILocation(line: 66, column: 30, scope: !9402)
!9404 = !DILocation(line: 66, column: 7, scope: !9391)
!9405 = !DILocation(line: 67, column: 12, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9402, file: !1311, line: 66, column: 36)
!9407 = !DILocation(line: 68, column: 3, scope: !9406)
!9408 = !DILocation(line: 68, column: 21, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9402, file: !1311, line: 68, column: 14)
!9410 = !DILocation(line: 68, column: 39, scope: !9409)
!9411 = !DILocation(line: 68, column: 14, scope: !9402)
!9412 = !DILocation(line: 69, column: 12, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9409, file: !1311, line: 68, column: 45)
!9414 = !DILocation(line: 70, column: 3, scope: !9413)
!9415 = !DILocation(line: 72, column: 21, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9387, file: !1311, line: 72, column: 14)
!9417 = !DILocation(line: 72, column: 35, scope: !9416)
!9418 = !DILocation(line: 72, column: 14, scope: !9387)
!9419 = !DILocation(line: 77, column: 14, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9421, file: !1311, line: 77, column: 7)
!9421 = distinct !DILexicalBlock(scope: !9416, file: !1311, line: 72, column: 41)
!9422 = !DILocation(line: 77, column: 30, scope: !9420)
!9423 = !DILocation(line: 77, column: 7, scope: !9421)
!9424 = !DILocation(line: 0, scope: !9387)
!9425 = !DILocation(line: 90, column: 1, scope: !9379)
!9426 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1311, file: !1311, line: 157, type: !9427, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9429)
!9427 = !DISubroutineType(types: !9428)
!9428 = !{null, !1169, !103, !103, !103}
!9429 = !{!9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438, !9439, !9440}
!9430 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !1311, line: 157, type: !1169)
!9431 = !DILocalVariable(name: "pin", arg: 2, scope: !9426, file: !1311, line: 157, type: !103)
!9432 = !DILocalVariable(name: "conf", arg: 3, scope: !9426, file: !1311, line: 158, type: !103)
!9433 = !DILocalVariable(name: "func", arg: 4, scope: !9426, file: !1311, line: 158, type: !103)
!9434 = !DILocalVariable(name: "cfg", scope: !9426, file: !1311, line: 160, type: !8951)
!9435 = !DILocalVariable(name: "gpio", scope: !9426, file: !1311, line: 161, type: !1242)
!9436 = !DILocalVariable(name: "pin_ll", scope: !9426, file: !1311, line: 163, type: !103)
!9437 = !DILocalVariable(name: "mode", scope: !9426, file: !1311, line: 227, type: !32)
!9438 = !DILocalVariable(name: "otype", scope: !9426, file: !1311, line: 227, type: !32)
!9439 = !DILocalVariable(name: "ospeed", scope: !9426, file: !1311, line: 227, type: !32)
!9440 = !DILocalVariable(name: "pupd", scope: !9426, file: !1311, line: 227, type: !32)
!9441 = !DILocation(line: 0, scope: !9426)
!9442 = !DILocation(line: 160, column: 45, scope: !9426)
!9443 = !DILocation(line: 161, column: 44, scope: !9426)
!9444 = !DILocation(line: 163, column: 15, scope: !9426)
!9445 = !DILocation(line: 229, column: 14, scope: !9426)
!9446 = !DILocation(line: 246, column: 47, scope: !9426)
!9447 = !DILocation(line: 246, column: 2, scope: !9426)
!9448 = !DILocation(line: 248, column: 43, scope: !9426)
!9449 = !DILocation(line: 248, column: 2, scope: !9426)
!9450 = !DILocation(line: 250, column: 40, scope: !9426)
!9451 = !DILocation(line: 250, column: 2, scope: !9426)
!9452 = !DILocation(line: 252, column: 11, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9426, file: !1311, line: 252, column: 6)
!9454 = !DILocation(line: 252, column: 6, scope: !9426)
!9455 = !DILocation(line: 253, column: 11, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !1311, line: 253, column: 7)
!9457 = distinct !DILexicalBlock(scope: !9453, file: !1311, line: 252, column: 36)
!9458 = !DILocation(line: 253, column: 7, scope: !9457)
!9459 = !DILocation(line: 254, column: 4, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9456, file: !1311, line: 253, column: 16)
!9461 = !DILocation(line: 255, column: 3, scope: !9460)
!9462 = !DILocation(line: 256, column: 4, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9456, file: !1311, line: 255, column: 10)
!9464 = !DILocation(line: 260, column: 40, scope: !9426)
!9465 = !DILocation(line: 260, column: 2, scope: !9426)
!9466 = !DILocation(line: 265, column: 1, scope: !9426)
!9467 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1311, file: !1311, line: 137, type: !9274, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9468)
!9468 = !{!9469, !9470}
!9469 = !DILocalVariable(name: "pin", arg: 1, scope: !9467, file: !1311, line: 137, type: !103)
!9470 = !DILocalVariable(name: "pinval", scope: !9467, file: !1311, line: 139, type: !121)
!9471 = !DILocation(line: 0, scope: !9467)
!9472 = !DILocation(line: 149, column: 13, scope: !9467)
!9473 = !DILocation(line: 151, column: 2, scope: !9467)
!9474 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9349, file: !9349, line: 342, type: !9475, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9477)
!9475 = !DISubroutineType(types: !9476)
!9476 = !{null, !1242, !121, !121}
!9477 = !{!9478, !9479, !9480}
!9478 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9474, file: !9349, line: 342, type: !1242)
!9479 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9474, file: !9349, line: 342, type: !121)
!9480 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9474, file: !9349, line: 342, type: !121)
!9481 = !DILocation(line: 0, scope: !9474)
!9482 = !DILocation(line: 344, column: 3, scope: !9474)
!9483 = !DILocation(line: 345, column: 1, scope: !9474)
!9484 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9349, file: !9349, line: 413, type: !9475, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9485)
!9485 = !{!9486, !9487, !9488}
!9486 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9484, file: !9349, line: 413, type: !1242)
!9487 = !DILocalVariable(name: "Pin", arg: 2, scope: !9484, file: !9349, line: 413, type: !121)
!9488 = !DILocalVariable(name: "Speed", arg: 3, scope: !9484, file: !9349, line: 413, type: !121)
!9489 = !DILocation(line: 0, scope: !9484)
!9490 = !DILocation(line: 415, column: 3, scope: !9484)
!9491 = !DILocation(line: 0, scope: !9294, inlinedAt: !9492)
!9492 = distinct !DILocation(line: 415, column: 3, scope: !9484)
!9493 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9492)
!9494 = !DILocation(line: 0, scope: !9302, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 415, column: 3, scope: !9484)
!9496 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9495)
!9497 = !DILocation(line: 0, scope: !9294, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 415, column: 3, scope: !9484)
!9499 = !DILocation(line: 0, scope: !9302, inlinedAt: !9500)
!9500 = distinct !DILocation(line: 415, column: 3, scope: !9484)
!9501 = !DILocation(line: 417, column: 1, scope: !9484)
!9502 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9349, file: !9349, line: 484, type: !9475, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9503)
!9503 = !{!9504, !9505, !9506}
!9504 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9502, file: !9349, line: 484, type: !1242)
!9505 = !DILocalVariable(name: "Pin", arg: 2, scope: !9502, file: !9349, line: 484, type: !121)
!9506 = !DILocalVariable(name: "Pull", arg: 3, scope: !9502, file: !9349, line: 484, type: !121)
!9507 = !DILocation(line: 0, scope: !9502)
!9508 = !DILocation(line: 486, column: 3, scope: !9502)
!9509 = !DILocation(line: 0, scope: !9294, inlinedAt: !9510)
!9510 = distinct !DILocation(line: 486, column: 3, scope: !9502)
!9511 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9510)
!9512 = !DILocation(line: 0, scope: !9302, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 486, column: 3, scope: !9502)
!9514 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9513)
!9515 = !DILocation(line: 0, scope: !9294, inlinedAt: !9516)
!9516 = distinct !DILocation(line: 486, column: 3, scope: !9502)
!9517 = !DILocation(line: 0, scope: !9302, inlinedAt: !9518)
!9518 = distinct !DILocation(line: 486, column: 3, scope: !9502)
!9519 = !DILocation(line: 487, column: 1, scope: !9502)
!9520 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9349, file: !9349, line: 556, type: !9475, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9521)
!9521 = !{!9522, !9523, !9524}
!9522 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9520, file: !9349, line: 556, type: !1242)
!9523 = !DILocalVariable(name: "Pin", arg: 2, scope: !9520, file: !9349, line: 556, type: !121)
!9524 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9520, file: !9349, line: 556, type: !121)
!9525 = !DILocation(line: 0, scope: !9520)
!9526 = !DILocation(line: 558, column: 3, scope: !9520)
!9527 = !DILocation(line: 0, scope: !9294, inlinedAt: !9528)
!9528 = distinct !DILocation(line: 558, column: 3, scope: !9520)
!9529 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9528)
!9530 = !DILocation(line: 0, scope: !9302, inlinedAt: !9531)
!9531 = distinct !DILocation(line: 558, column: 3, scope: !9520)
!9532 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9531)
!9533 = !DILocation(line: 0, scope: !9294, inlinedAt: !9534)
!9534 = distinct !DILocation(line: 558, column: 3, scope: !9520)
!9535 = !DILocation(line: 0, scope: !9302, inlinedAt: !9536)
!9536 = distinct !DILocation(line: 558, column: 3, scope: !9520)
!9537 = !DILocation(line: 560, column: 1, scope: !9520)
!9538 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9349, file: !9349, line: 633, type: !9475, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9539)
!9539 = !{!9540, !9541, !9542}
!9540 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9538, file: !9349, line: 633, type: !1242)
!9541 = !DILocalVariable(name: "Pin", arg: 2, scope: !9538, file: !9349, line: 633, type: !121)
!9542 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9538, file: !9349, line: 633, type: !121)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 635, column: 3, scope: !9538)
!9545 = !DILocation(line: 0, scope: !9294, inlinedAt: !9546)
!9546 = distinct !DILocation(line: 635, column: 3, scope: !9538)
!9547 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9546)
!9548 = !DILocation(line: 0, scope: !9302, inlinedAt: !9549)
!9549 = distinct !DILocation(line: 635, column: 3, scope: !9538)
!9550 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9549)
!9551 = !DILocation(line: 0, scope: !9294, inlinedAt: !9552)
!9552 = distinct !DILocation(line: 635, column: 3, scope: !9538)
!9553 = !DILocation(line: 0, scope: !9302, inlinedAt: !9554)
!9554 = distinct !DILocation(line: 635, column: 3, scope: !9538)
!9555 = !DILocation(line: 637, column: 1, scope: !9538)
!9556 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9349, file: !9349, line: 273, type: !9475, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9557)
!9557 = !{!9558, !9559, !9560}
!9558 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9556, file: !9349, line: 273, type: !1242)
!9559 = !DILocalVariable(name: "Pin", arg: 2, scope: !9556, file: !9349, line: 273, type: !121)
!9560 = !DILocalVariable(name: "Mode", arg: 3, scope: !9556, file: !9349, line: 273, type: !121)
!9561 = !DILocation(line: 0, scope: !9556)
!9562 = !DILocation(line: 275, column: 3, scope: !9556)
!9563 = !DILocation(line: 0, scope: !9294, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 275, column: 3, scope: !9556)
!9565 = !DILocation(line: 380, column: 4, scope: !9294, inlinedAt: !9564)
!9566 = !DILocation(line: 0, scope: !9302, inlinedAt: !9567)
!9567 = distinct !DILocation(line: 275, column: 3, scope: !9556)
!9568 = !DILocation(line: 414, column: 7, scope: !9302, inlinedAt: !9567)
!9569 = !DILocation(line: 0, scope: !9294, inlinedAt: !9570)
!9570 = distinct !DILocation(line: 275, column: 3, scope: !9556)
!9571 = !DILocation(line: 0, scope: !9302, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 275, column: 3, scope: !9556)
!9573 = !DILocation(line: 276, column: 1, scope: !9556)
!9574 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1311, file: !1311, line: 698, type: !1324, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9575)
!9575 = !{!9576, !9577, !9578}
!9576 = !DILocalVariable(name: "dev", arg: 1, scope: !9574, file: !1311, line: 698, type: !1169)
!9577 = !DILocalVariable(name: "data", scope: !9574, file: !1311, line: 700, type: !9018)
!9578 = !DILocalVariable(name: "ret", scope: !9574, file: !1311, line: 701, type: !103)
!9579 = !DILocation(line: 0, scope: !9574)
!9580 = !DILocation(line: 700, column: 38, scope: !9574)
!9581 = !DILocation(line: 703, column: 8, scope: !9574)
!9582 = !DILocation(line: 703, column: 12, scope: !9574)
!9583 = !DILocation(line: 705, column: 7, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9574, file: !1311, line: 705, column: 6)
!9585 = !DILocation(line: 705, column: 6, scope: !9574)
!9586 = !DILocation(line: 722, column: 8, scope: !9574)
!9587 = !DILocation(line: 723, column: 10, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9574, file: !1311, line: 723, column: 6)
!9589 = !DILocation(line: 723, column: 6, scope: !9574)
!9590 = !DILocation(line: 731, column: 1, scope: !9574)
!9591 = distinct !DISubprogram(name: "device_is_ready", scope: !8242, file: !8242, line: 47, type: !9592, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9594)
!9592 = !DISubroutineType(types: !9593)
!9593 = !{!157, !1169}
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "dev", arg: 1, scope: !9591, file: !8242, line: 47, type: !1169)
!9596 = !DILocation(line: 0, scope: !9591)
!9597 = !DILocation(line: 55, column: 2, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9591, file: !8242, line: 55, column: 2)
!9599 = !{i64 2155277680}
!9600 = !DILocation(line: 56, column: 9, scope: !9591)
!9601 = !DILocation(line: 56, column: 2, scope: !9591)
!9602 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1311, file: !1311, line: 270, type: !9603, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9605)
!9603 = !DISubroutineType(types: !9604)
!9604 = !{!103, !1169, !157}
!9605 = !{!9606, !9607, !9608, !9609, !9610}
!9606 = !DILocalVariable(name: "dev", arg: 1, scope: !9602, file: !1311, line: 270, type: !1169)
!9607 = !DILocalVariable(name: "on", arg: 2, scope: !9602, file: !1311, line: 270, type: !157)
!9608 = !DILocalVariable(name: "cfg", scope: !9602, file: !1311, line: 272, type: !8951)
!9609 = !DILocalVariable(name: "ret", scope: !9602, file: !1311, line: 273, type: !103)
!9610 = !DILocalVariable(name: "clk", scope: !9602, file: !1311, line: 278, type: !9241)
!9611 = !DILocation(line: 0, scope: !9602)
!9612 = !DILocation(line: 272, column: 45, scope: !9602)
!9613 = !DILocation(line: 282, column: 38, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !1311, line: 280, column: 10)
!9615 = distinct !DILexicalBlock(scope: !9602, file: !1311, line: 280, column: 6)
!9616 = !DILocation(line: 282, column: 6, scope: !9614)
!9617 = !DILocation(line: 281, column: 9, scope: !9614)
!9618 = !DILocation(line: 293, column: 1, scope: !9602)
!9619 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9592, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9620)
!9620 = !{!9621}
!9621 = !DILocalVariable(name: "dev", arg: 1, scope: !9619, file: !141, line: 730, type: !1169)
!9622 = !DILocation(line: 0, scope: !9619)
!9623 = !DILocation(line: 732, column: 9, scope: !9619)
!9624 = !DILocation(line: 732, column: 2, scope: !9619)
!9625 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1311, file: !1311, line: 496, type: !9626, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9628)
!9626 = !DISubroutineType(types: !9627)
!9627 = !{!103, !1169, !103, !103, !103}
!9628 = !{!9629, !9630, !9631, !9632, !9633, !9634}
!9629 = !DILocalVariable(name: "dev", arg: 1, scope: !9625, file: !1311, line: 496, type: !1169)
!9630 = !DILocalVariable(name: "pin", arg: 2, scope: !9625, file: !1311, line: 496, type: !103)
!9631 = !DILocalVariable(name: "conf", arg: 3, scope: !9625, file: !1311, line: 496, type: !103)
!9632 = !DILocalVariable(name: "func", arg: 4, scope: !9625, file: !1311, line: 496, type: !103)
!9633 = !DILocalVariable(name: "ret", scope: !9625, file: !1311, line: 498, type: !103)
!9634 = !DILocalVariable(name: "gpio_out", scope: !9635, file: !1311, line: 508, type: !121)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !1311, line: 507, column: 27)
!9636 = distinct !DILexicalBlock(scope: !9625, file: !1311, line: 507, column: 6)
!9637 = !DILocation(line: 0, scope: !9625)
!9638 = !DILocation(line: 505, column: 2, scope: !9625)
!9639 = !DILocation(line: 507, column: 11, scope: !9636)
!9640 = !DILocation(line: 507, column: 6, scope: !9625)
!9641 = !DILocation(line: 508, column: 28, scope: !9635)
!9642 = !DILocation(line: 0, scope: !9635)
!9643 = !DILocation(line: 510, column: 16, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9635, file: !1311, line: 510, column: 7)
!9645 = !DILocation(line: 0, scope: !9644)
!9646 = !DILocation(line: 510, column: 7, scope: !9635)
!9647 = !DILocation(line: 511, column: 4, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !1311, line: 510, column: 32)
!9649 = !DILocation(line: 512, column: 3, scope: !9648)
!9650 = !DILocation(line: 513, column: 4, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !1311, line: 512, column: 39)
!9652 = distinct !DILexicalBlock(scope: !9644, file: !1311, line: 512, column: 14)
!9653 = !DILocation(line: 514, column: 3, scope: !9651)
!9654 = !DILocation(line: 518, column: 1, scope: !9625)
!9655 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1616, file: !1616, line: 526, type: !1487, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9656)
!9656 = !{!9657, !9658, !9659}
!9657 = !DILocalVariable(name: "dev", arg: 1, scope: !9655, file: !1616, line: 526, type: !1489)
!9658 = !DILocalVariable(name: "c", arg: 2, scope: !9655, file: !1616, line: 526, type: !230)
!9659 = !DILocalVariable(name: "config", scope: !9655, file: !1616, line: 528, type: !9660)
!9660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!9661 = !DILocation(line: 0, scope: !9655)
!9662 = !DILocation(line: 528, column: 48, scope: !9655)
!9663 = !DILocation(line: 531, column: 40, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9655, file: !1616, line: 531, column: 6)
!9665 = !DILocation(line: 531, column: 6, scope: !9664)
!9666 = !DILocation(line: 531, column: 6, scope: !9655)
!9667 = !DILocation(line: 532, column: 34, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !1616, line: 531, column: 48)
!9669 = !DILocation(line: 532, column: 3, scope: !9668)
!9670 = !DILocation(line: 533, column: 2, scope: !9668)
!9671 = !DILocation(line: 539, column: 42, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9655, file: !1616, line: 539, column: 6)
!9673 = !DILocation(line: 539, column: 7, scope: !9672)
!9674 = !DILocation(line: 539, column: 6, scope: !9655)
!9675 = !DILocation(line: 543, column: 52, scope: !9655)
!9676 = !DILocation(line: 543, column: 22, scope: !9655)
!9677 = !DILocation(line: 543, column: 5, scope: !9655)
!9678 = !DILocation(line: 545, column: 2, scope: !9655)
!9679 = !DILocation(line: 546, column: 1, scope: !9655)
!9680 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1616, file: !1616, line: 548, type: !1506, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9681)
!9681 = !{!9682, !9683, !9684, !9685}
!9682 = !DILocalVariable(name: "dev", arg: 1, scope: !9680, file: !1616, line: 548, type: !1489)
!9683 = !DILocalVariable(name: "c", arg: 2, scope: !9680, file: !1616, line: 549, type: !155)
!9684 = !DILocalVariable(name: "config", scope: !9680, file: !1616, line: 551, type: !9660)
!9685 = !DILocalVariable(name: "key", scope: !9680, file: !1616, line: 555, type: !32)
!9686 = !DILocation(line: 0, scope: !9680)
!9687 = !DILocation(line: 551, column: 48, scope: !9680)
!9688 = !DILocation(line: 562, column: 2, scope: !9680)
!9689 = !DILocation(line: 563, column: 41, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !1616, line: 563, column: 7)
!9691 = distinct !DILexicalBlock(scope: !9680, file: !1616, line: 562, column: 12)
!9692 = !DILocation(line: 563, column: 7, scope: !9690)
!9693 = !DILocation(line: 563, column: 7, scope: !9691)
!9694 = !DILocation(line: 55, column: 2, scope: !9695, inlinedAt: !9699)
!9695 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9696)
!9696 = !{!9697, !9698}
!9697 = !DILocalVariable(name: "key", scope: !9695, file: !5818, line: 44, type: !32)
!9698 = !DILocalVariable(name: "tmp", scope: !9695, file: !5818, line: 53, type: !32)
!9699 = distinct !DILocation(line: 564, column: 10, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9690, file: !1616, line: 563, column: 49)
!9701 = !{i64 2327405}
!9702 = !DILocation(line: 0, scope: !9695, inlinedAt: !9699)
!9703 = !DILocation(line: 565, column: 42, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9700, file: !1616, line: 565, column: 8)
!9705 = !DILocation(line: 565, column: 8, scope: !9704)
!9706 = !DILocation(line: 565, column: 8, scope: !9700)
!9707 = !DILocalVariable(name: "key", arg: 1, scope: !9708, file: !5818, line: 84, type: !32)
!9708 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9709)
!9709 = !{!9707}
!9710 = !DILocation(line: 0, scope: !9708, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 568, column: 4, scope: !9700)
!9712 = !DILocation(line: 95, column: 2, scope: !9708, inlinedAt: !9711)
!9713 = !{i64 2328222}
!9714 = !DILocation(line: 569, column: 3, scope: !9700)
!9715 = distinct !{!9715, !9688, !9716}
!9716 = !DILocation(line: 570, column: 2, scope: !9680)
!9717 = !DILocation(line: 592, column: 33, scope: !9680)
!9718 = !DILocation(line: 592, column: 2, scope: !9680)
!9719 = !DILocation(line: 0, scope: !9708, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 593, column: 2, scope: !9680)
!9721 = !DILocation(line: 95, column: 2, scope: !9708, inlinedAt: !9720)
!9722 = !DILocation(line: 594, column: 1, scope: !9680)
!9723 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1616, file: !1616, line: 596, type: !1510, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9724)
!9724 = !{!9725, !9726, !9727}
!9725 = !DILocalVariable(name: "dev", arg: 1, scope: !9723, file: !1616, line: 596, type: !1489)
!9726 = !DILocalVariable(name: "config", scope: !9723, file: !1616, line: 598, type: !9660)
!9727 = !DILocalVariable(name: "err", scope: !9723, file: !1616, line: 599, type: !121)
!9728 = !DILocation(line: 0, scope: !9723)
!9729 = !DILocation(line: 598, column: 48, scope: !9723)
!9730 = !DILocation(line: 606, column: 40, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 606, column: 6)
!9732 = !DILocation(line: 606, column: 6, scope: !9731)
!9733 = !DILocation(line: 606, column: 6, scope: !9723)
!9734 = !DILocation(line: 610, column: 39, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 610, column: 6)
!9736 = !DILocation(line: 610, column: 6, scope: !9735)
!9737 = !DILocation(line: 610, column: 6, scope: !9723)
!9738 = !DILocation(line: 614, column: 39, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 614, column: 6)
!9740 = !DILocation(line: 614, column: 6, scope: !9739)
!9741 = !DILocation(line: 614, column: 6, scope: !9723)
!9742 = !DILocation(line: 619, column: 40, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 619, column: 6)
!9744 = !DILocation(line: 619, column: 6, scope: !9743)
!9745 = !DILocation(line: 619, column: 6, scope: !9723)
!9746 = !DILocation(line: 623, column: 10, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 623, column: 6)
!9748 = !DILocation(line: 623, column: 6, scope: !9723)
!9749 = !DILocation(line: 624, column: 34, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9747, file: !1616, line: 623, column: 24)
!9751 = !DILocation(line: 624, column: 3, scope: !9750)
!9752 = !DILocation(line: 625, column: 2, scope: !9750)
!9753 = !DILocation(line: 632, column: 10, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 632, column: 6)
!9755 = !DILocation(line: 632, column: 6, scope: !9723)
!9756 = !DILocation(line: 633, column: 34, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9754, file: !1616, line: 632, column: 32)
!9758 = !DILocation(line: 633, column: 3, scope: !9757)
!9759 = !DILocation(line: 634, column: 2, scope: !9757)
!9760 = !DILocation(line: 636, column: 10, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 636, column: 6)
!9762 = !DILocation(line: 636, column: 6, scope: !9723)
!9763 = !DILocation(line: 637, column: 33, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9761, file: !1616, line: 636, column: 31)
!9765 = !DILocation(line: 637, column: 3, scope: !9764)
!9766 = !DILocation(line: 638, column: 2, scope: !9764)
!9767 = !DILocation(line: 640, column: 10, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9723, file: !1616, line: 640, column: 6)
!9769 = !DILocation(line: 640, column: 6, scope: !9723)
!9770 = !DILocation(line: 641, column: 33, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9768, file: !1616, line: 640, column: 32)
!9772 = !DILocation(line: 641, column: 3, scope: !9771)
!9773 = !DILocation(line: 642, column: 2, scope: !9771)
!9774 = !DILocation(line: 646, column: 32, scope: !9723)
!9775 = !DILocation(line: 646, column: 2, scope: !9723)
!9776 = !DILocation(line: 648, column: 2, scope: !9723)
!9777 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1616, file: !1616, line: 419, type: !1514, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9778)
!9778 = !{!9779, !9780, !9781, !9782, !9784, !9785, !9786, !9787}
!9779 = !DILocalVariable(name: "dev", arg: 1, scope: !9777, file: !1616, line: 419, type: !1489)
!9780 = !DILocalVariable(name: "cfg", arg: 2, scope: !9777, file: !1616, line: 420, type: !1516)
!9781 = !DILocalVariable(name: "config", scope: !9777, file: !1616, line: 422, type: !9660)
!9782 = !DILocalVariable(name: "data", scope: !9777, file: !1616, line: 423, type: !9783)
!9783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!9784 = !DILocalVariable(name: "parity", scope: !9777, file: !1616, line: 424, type: !6301)
!9785 = !DILocalVariable(name: "stopbits", scope: !9777, file: !1616, line: 425, type: !6301)
!9786 = !DILocalVariable(name: "databits", scope: !9777, file: !1616, line: 426, type: !6301)
!9787 = !DILocalVariable(name: "flowctrl", scope: !9777, file: !1616, line: 428, type: !6301)
!9788 = !DILocation(line: 0, scope: !9777)
!9789 = !DILocation(line: 422, column: 48, scope: !9777)
!9790 = !DILocation(line: 423, column: 38, scope: !9777)
!9791 = !DILocation(line: 424, column: 56, scope: !9777)
!9792 = !DILocation(line: 424, column: 51, scope: !9777)
!9793 = !DILocation(line: 424, column: 26, scope: !9777)
!9794 = !DILocation(line: 425, column: 60, scope: !9777)
!9795 = !DILocation(line: 425, column: 55, scope: !9777)
!9796 = !DILocation(line: 425, column: 28, scope: !9777)
!9797 = !DILocation(line: 426, column: 60, scope: !9777)
!9798 = !DILocation(line: 426, column: 55, scope: !9777)
!9799 = !DILocation(line: 426, column: 28, scope: !9777)
!9800 = !DILocation(line: 428, column: 58, scope: !9777)
!9801 = !DILocation(line: 428, column: 53, scope: !9777)
!9802 = !DILocation(line: 428, column: 28, scope: !9777)
!9803 = !DILocation(line: 431, column: 44, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 431, column: 6)
!9805 = !DILocation(line: 438, column: 22, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 437, column: 6)
!9807 = !DILocation(line: 437, column: 6, scope: !9777)
!9808 = !DILocation(line: 448, column: 6, scope: !9777)
!9809 = !DILocation(line: 465, column: 47, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 465, column: 6)
!9811 = !DILocation(line: 475, column: 21, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 475, column: 6)
!9813 = !DILocation(line: 475, column: 6, scope: !9777)
!9814 = !DILocation(line: 476, column: 8, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !1616, line: 476, column: 7)
!9816 = distinct !DILexicalBlock(scope: !9812, file: !1616, line: 475, column: 49)
!9817 = !DILocation(line: 477, column: 34, scope: !9815)
!9818 = !DILocation(line: 476, column: 7, scope: !9816)
!9819 = !DILocation(line: 482, column: 27, scope: !9777)
!9820 = !DILocation(line: 482, column: 2, scope: !9777)
!9821 = !DILocation(line: 484, column: 16, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 484, column: 6)
!9823 = !DILocation(line: 484, column: 13, scope: !9822)
!9824 = !DILocation(line: 484, column: 6, scope: !9777)
!9825 = !DILocation(line: 485, column: 3, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9822, file: !1616, line: 484, column: 44)
!9827 = !DILocation(line: 486, column: 2, scope: !9826)
!9828 = !DILocation(line: 488, column: 18, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 488, column: 6)
!9830 = !DILocation(line: 488, column: 15, scope: !9829)
!9831 = !DILocation(line: 488, column: 6, scope: !9777)
!9832 = !DILocation(line: 489, column: 3, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9829, file: !1616, line: 488, column: 48)
!9834 = !DILocation(line: 490, column: 2, scope: !9833)
!9835 = !DILocation(line: 492, column: 18, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 492, column: 6)
!9837 = !DILocation(line: 492, column: 15, scope: !9836)
!9838 = !DILocation(line: 492, column: 6, scope: !9777)
!9839 = !DILocation(line: 493, column: 3, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9836, file: !1616, line: 492, column: 48)
!9841 = !DILocation(line: 494, column: 2, scope: !9840)
!9842 = !DILocation(line: 496, column: 18, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 496, column: 6)
!9844 = !DILocation(line: 496, column: 15, scope: !9843)
!9845 = !DILocation(line: 496, column: 6, scope: !9777)
!9846 = !DILocation(line: 497, column: 3, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !1616, line: 496, column: 46)
!9848 = !DILocation(line: 498, column: 2, scope: !9847)
!9849 = !DILocation(line: 500, column: 11, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9777, file: !1616, line: 500, column: 6)
!9851 = !DILocation(line: 500, column: 29, scope: !9850)
!9852 = !DILocation(line: 500, column: 20, scope: !9850)
!9853 = !DILocation(line: 500, column: 6, scope: !9777)
!9854 = !DILocation(line: 501, column: 3, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9850, file: !1616, line: 500, column: 40)
!9856 = !DILocation(line: 502, column: 26, scope: !9855)
!9857 = !DILocation(line: 502, column: 19, scope: !9855)
!9858 = !DILocation(line: 503, column: 2, scope: !9855)
!9859 = !DILocation(line: 505, column: 26, scope: !9777)
!9860 = !DILocation(line: 505, column: 2, scope: !9777)
!9861 = !DILocation(line: 506, column: 2, scope: !9777)
!9862 = !DILocation(line: 507, column: 1, scope: !9777)
!9863 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1616, file: !1616, line: 509, type: !1527, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9864)
!9864 = !{!9865, !9866, !9867}
!9865 = !DILocalVariable(name: "dev", arg: 1, scope: !9863, file: !1616, line: 509, type: !1489)
!9866 = !DILocalVariable(name: "cfg", arg: 2, scope: !9863, file: !1616, line: 510, type: !1529)
!9867 = !DILocalVariable(name: "data", scope: !9863, file: !1616, line: 512, type: !9783)
!9868 = !DILocation(line: 0, scope: !9863)
!9869 = !DILocation(line: 512, column: 38, scope: !9863)
!9870 = !DILocation(line: 514, column: 24, scope: !9863)
!9871 = !DILocation(line: 514, column: 7, scope: !9863)
!9872 = !DILocation(line: 514, column: 16, scope: !9863)
!9873 = !DILocation(line: 515, column: 41, scope: !9863)
!9874 = !{i32 0, i32 1537}
!9875 = !DILocation(line: 515, column: 16, scope: !9863)
!9876 = !DILocation(line: 515, column: 7, scope: !9863)
!9877 = !DILocation(line: 515, column: 14, scope: !9863)
!9878 = !DILocation(line: 517, column: 3, scope: !9863)
!9879 = !{i32 0, i32 12289}
!9880 = !DILocation(line: 516, column: 19, scope: !9863)
!9881 = !DILocation(line: 516, column: 7, scope: !9863)
!9882 = !DILocation(line: 516, column: 17, scope: !9863)
!9883 = !DILocation(line: 519, column: 3, scope: !9863)
!9884 = !DILocation(line: 519, column: 33, scope: !9863)
!9885 = !DILocation(line: 518, column: 19, scope: !9863)
!9886 = !DILocation(line: 518, column: 7, scope: !9863)
!9887 = !DILocation(line: 518, column: 17, scope: !9863)
!9888 = !DILocation(line: 521, column: 3, scope: !9863)
!9889 = !{i32 0, i32 769}
!9890 = !DILocation(line: 520, column: 19, scope: !9863)
!9891 = !DILocation(line: 520, column: 7, scope: !9863)
!9892 = !DILocation(line: 520, column: 17, scope: !9863)
!9893 = !DILocation(line: 522, column: 2, scope: !9863)
!9894 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1616, file: !1616, line: 661, type: !1532, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9895)
!9895 = !{!9896, !9897, !9898, !9899, !9900, !9901}
!9896 = !DILocalVariable(name: "dev", arg: 1, scope: !9894, file: !1616, line: 661, type: !1489)
!9897 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9894, file: !1616, line: 662, type: !261)
!9898 = !DILocalVariable(name: "size", arg: 3, scope: !9894, file: !1616, line: 663, type: !103)
!9899 = !DILocalVariable(name: "config", scope: !9894, file: !1616, line: 665, type: !9660)
!9900 = !DILocalVariable(name: "num_tx", scope: !9894, file: !1616, line: 666, type: !154)
!9901 = !DILocalVariable(name: "key", scope: !9894, file: !1616, line: 667, type: !32)
!9902 = !DILocation(line: 0, scope: !9894)
!9903 = !DILocation(line: 665, column: 48, scope: !9894)
!9904 = !DILocation(line: 669, column: 41, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9894, file: !1616, line: 669, column: 6)
!9906 = !DILocation(line: 669, column: 7, scope: !9905)
!9907 = !DILocation(line: 669, column: 6, scope: !9894)
!9908 = !DILocation(line: 55, column: 2, scope: !9695, inlinedAt: !9909)
!9909 = distinct !DILocation(line: 674, column: 8, scope: !9894)
!9910 = !DILocation(line: 0, scope: !9695, inlinedAt: !9909)
!9911 = !DILocation(line: 676, column: 24, scope: !9894)
!9912 = !DILocation(line: 676, column: 29, scope: !9894)
!9913 = !DILocation(line: 677, column: 43, scope: !9894)
!9914 = !DILocation(line: 677, column: 9, scope: !9894)
!9915 = !DILocation(line: 676, column: 2, scope: !9894)
!9916 = !DILocation(line: 681, column: 34, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9894, file: !1616, line: 677, column: 51)
!9918 = !DILocation(line: 681, column: 55, scope: !9917)
!9919 = !DILocation(line: 681, column: 41, scope: !9917)
!9920 = !DILocation(line: 681, column: 3, scope: !9917)
!9921 = !DILocation(line: 676, column: 17, scope: !9894)
!9922 = distinct !{!9922, !9915, !9923}
!9923 = !DILocation(line: 682, column: 2, scope: !9894)
!9924 = !DILocation(line: 0, scope: !9708, inlinedAt: !9925)
!9925 = distinct !DILocation(line: 684, column: 2, scope: !9894)
!9926 = !DILocation(line: 95, column: 2, scope: !9708, inlinedAt: !9925)
!9927 = !DILocation(line: 686, column: 2, scope: !9894)
!9928 = !DILocation(line: 687, column: 1, scope: !9894)
!9929 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1616, file: !1616, line: 689, type: !1536, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9930)
!9930 = !{!9931, !9932, !9933, !9934, !9935}
!9931 = !DILocalVariable(name: "dev", arg: 1, scope: !9929, file: !1616, line: 689, type: !1489)
!9932 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9929, file: !1616, line: 689, type: !267)
!9933 = !DILocalVariable(name: "size", arg: 3, scope: !9929, file: !1616, line: 690, type: !268)
!9934 = !DILocalVariable(name: "config", scope: !9929, file: !1616, line: 692, type: !9660)
!9935 = !DILocalVariable(name: "num_rx", scope: !9929, file: !1616, line: 693, type: !154)
!9936 = !DILocation(line: 0, scope: !9929)
!9937 = !DILocation(line: 692, column: 48, scope: !9929)
!9938 = !DILocation(line: 696, column: 44, scope: !9929)
!9939 = !DILocation(line: 695, column: 24, scope: !9929)
!9940 = !DILocation(line: 695, column: 29, scope: !9929)
!9941 = !DILocation(line: 696, column: 9, scope: !9929)
!9942 = !DILocation(line: 695, column: 2, scope: !9929)
!9943 = !DILocation(line: 700, column: 53, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9929, file: !1616, line: 696, column: 52)
!9945 = !DILocation(line: 700, column: 23, scope: !9944)
!9946 = !DILocation(line: 700, column: 17, scope: !9944)
!9947 = !DILocation(line: 700, column: 3, scope: !9944)
!9948 = !DILocation(line: 700, column: 21, scope: !9944)
!9949 = !DILocation(line: 703, column: 41, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9944, file: !1616, line: 703, column: 7)
!9951 = !DILocation(line: 703, column: 7, scope: !9950)
!9952 = !DILocation(line: 703, column: 7, scope: !9944)
!9953 = !DILocation(line: 704, column: 35, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !1616, line: 703, column: 49)
!9955 = !DILocation(line: 704, column: 4, scope: !9954)
!9956 = !DILocation(line: 709, column: 3, scope: !9954)
!9957 = !DILocation(line: 695, column: 17, scope: !9929)
!9958 = distinct !{!9958, !9942, !9959}
!9959 = !DILocation(line: 710, column: 2, scope: !9929)
!9960 = !DILocation(line: 712, column: 2, scope: !9929)
!9961 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1616, file: !1616, line: 715, type: !1540, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9962)
!9962 = !{!9963, !9964}
!9963 = !DILocalVariable(name: "dev", arg: 1, scope: !9961, file: !1616, line: 715, type: !1489)
!9964 = !DILocalVariable(name: "config", scope: !9961, file: !1616, line: 717, type: !9660)
!9965 = !DILocation(line: 0, scope: !9961)
!9966 = !DILocation(line: 717, column: 48, scope: !9961)
!9967 = !DILocation(line: 729, column: 31, scope: !9961)
!9968 = !DILocation(line: 729, column: 2, scope: !9961)
!9969 = !DILocation(line: 734, column: 1, scope: !9961)
!9970 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1616, file: !1616, line: 736, type: !1540, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9971)
!9971 = !{!9972, !9973}
!9972 = !DILocalVariable(name: "dev", arg: 1, scope: !9970, file: !1616, line: 736, type: !1489)
!9973 = !DILocalVariable(name: "config", scope: !9970, file: !1616, line: 738, type: !9660)
!9974 = !DILocation(line: 0, scope: !9970)
!9975 = !DILocation(line: 738, column: 48, scope: !9970)
!9976 = !DILocation(line: 746, column: 32, scope: !9970)
!9977 = !DILocation(line: 746, column: 2, scope: !9970)
!9978 = !DILocation(line: 756, column: 1, scope: !9970)
!9979 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1616, file: !1616, line: 758, type: !1510, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9980)
!9980 = !{!9981, !9982}
!9981 = !DILocalVariable(name: "dev", arg: 1, scope: !9979, file: !1616, line: 758, type: !1489)
!9982 = !DILocalVariable(name: "config", scope: !9979, file: !1616, line: 760, type: !9660)
!9983 = !DILocation(line: 0, scope: !9979)
!9984 = !DILocation(line: 760, column: 48, scope: !9979)
!9985 = !DILocation(line: 762, column: 43, scope: !9979)
!9986 = !DILocation(line: 762, column: 9, scope: !9979)
!9987 = !DILocation(line: 762, column: 50, scope: !9979)
!9988 = !DILocation(line: 763, column: 35, scope: !9979)
!9989 = !DILocation(line: 763, column: 3, scope: !9979)
!9990 = !DILocation(line: 762, column: 2, scope: !9979)
!9991 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1616, file: !1616, line: 773, type: !1540, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !9992)
!9992 = !{!9993, !9994}
!9993 = !DILocalVariable(name: "dev", arg: 1, scope: !9991, file: !1616, line: 773, type: !1489)
!9994 = !DILocalVariable(name: "config", scope: !9991, file: !1616, line: 775, type: !9660)
!9995 = !DILocation(line: 0, scope: !9991)
!9996 = !DILocation(line: 775, column: 48, scope: !9991)
!9997 = !DILocation(line: 777, column: 33, scope: !9991)
!9998 = !DILocation(line: 777, column: 2, scope: !9991)
!9999 = !DILocation(line: 778, column: 1, scope: !9991)
!10000 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1616, file: !1616, line: 780, type: !1540, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10001)
!10001 = !{!10002, !10003}
!10002 = !DILocalVariable(name: "dev", arg: 1, scope: !10000, file: !1616, line: 780, type: !1489)
!10003 = !DILocalVariable(name: "config", scope: !10000, file: !1616, line: 782, type: !9660)
!10004 = !DILocation(line: 0, scope: !10000)
!10005 = !DILocation(line: 782, column: 48, scope: !10000)
!10006 = !DILocation(line: 784, column: 34, scope: !10000)
!10007 = !DILocation(line: 784, column: 2, scope: !10000)
!10008 = !DILocation(line: 785, column: 1, scope: !10000)
!10009 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1616, file: !1616, line: 766, type: !1510, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10010)
!10010 = !{!10011, !10012}
!10011 = !DILocalVariable(name: "dev", arg: 1, scope: !10009, file: !1616, line: 766, type: !1489)
!10012 = !DILocalVariable(name: "config", scope: !10009, file: !1616, line: 768, type: !9660)
!10013 = !DILocation(line: 0, scope: !10009)
!10014 = !DILocation(line: 768, column: 48, scope: !10009)
!10015 = !DILocation(line: 770, column: 42, scope: !10009)
!10016 = !DILocation(line: 770, column: 9, scope: !10009)
!10017 = !DILocation(line: 770, column: 2, scope: !10009)
!10018 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1616, file: !1616, line: 787, type: !1510, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10019)
!10019 = !{!10020, !10021}
!10020 = !DILocalVariable(name: "dev", arg: 1, scope: !10018, file: !1616, line: 787, type: !1489)
!10021 = !DILocalVariable(name: "config", scope: !10018, file: !1616, line: 789, type: !9660)
!10022 = !DILocation(line: 0, scope: !10018)
!10023 = !DILocation(line: 789, column: 48, scope: !10018)
!10024 = !DILocation(line: 794, column: 44, scope: !10018)
!10025 = !DILocation(line: 794, column: 9, scope: !10018)
!10026 = !DILocation(line: 794, column: 2, scope: !10018)
!10027 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1616, file: !1616, line: 797, type: !1540, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10028)
!10028 = !{!10029, !10030}
!10029 = !DILocalVariable(name: "dev", arg: 1, scope: !10027, file: !1616, line: 797, type: !1489)
!10030 = !DILocalVariable(name: "config", scope: !10027, file: !1616, line: 799, type: !9660)
!10031 = !DILocation(line: 0, scope: !10027)
!10032 = !DILocation(line: 799, column: 48, scope: !10027)
!10033 = !DILocation(line: 802, column: 34, scope: !10027)
!10034 = !DILocation(line: 802, column: 2, scope: !10027)
!10035 = !DILocation(line: 805, column: 6, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10027, file: !1616, line: 805, column: 6)
!10037 = !DILocation(line: 806, column: 3, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !1616, line: 805, column: 43)
!10039 = !DILocation(line: 810, column: 31, scope: !10027)
!10040 = !DILocation(line: 807, column: 2, scope: !10038)
!10041 = !DILocation(line: 810, column: 2, scope: !10027)
!10042 = !DILocation(line: 811, column: 1, scope: !10027)
!10043 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1616, file: !1616, line: 813, type: !1540, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10044)
!10044 = !{!10045, !10046}
!10045 = !DILocalVariable(name: "dev", arg: 1, scope: !10043, file: !1616, line: 813, type: !1489)
!10046 = !DILocalVariable(name: "config", scope: !10043, file: !1616, line: 815, type: !9660)
!10047 = !DILocation(line: 0, scope: !10043)
!10048 = !DILocation(line: 815, column: 48, scope: !10043)
!10049 = !DILocation(line: 818, column: 35, scope: !10043)
!10050 = !DILocation(line: 818, column: 2, scope: !10043)
!10051 = !DILocation(line: 821, column: 6, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10043, file: !1616, line: 821, column: 6)
!10053 = !DILocation(line: 822, column: 3, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10052, file: !1616, line: 821, column: 43)
!10055 = !DILocation(line: 826, column: 32, scope: !10043)
!10056 = !DILocation(line: 823, column: 2, scope: !10054)
!10057 = !DILocation(line: 826, column: 2, scope: !10043)
!10058 = !DILocation(line: 827, column: 1, scope: !10043)
!10059 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1616, file: !1616, line: 829, type: !1510, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10060)
!10060 = !{!10061, !10062}
!10061 = !DILocalVariable(name: "dev", arg: 1, scope: !10059, file: !1616, line: 829, type: !1489)
!10062 = !DILocalVariable(name: "config", scope: !10059, file: !1616, line: 831, type: !9660)
!10063 = !DILocation(line: 0, scope: !10059)
!10064 = !DILocation(line: 831, column: 48, scope: !10059)
!10065 = !DILocation(line: 833, column: 46, scope: !10059)
!10066 = !DILocation(line: 833, column: 11, scope: !10059)
!10067 = !DILocation(line: 833, column: 53, scope: !10059)
!10068 = !DILocation(line: 834, column: 38, scope: !10059)
!10069 = !DILocation(line: 834, column: 4, scope: !10059)
!10070 = !DILocation(line: 834, column: 46, scope: !10059)
!10071 = !DILocation(line: 835, column: 37, scope: !10059)
!10072 = !DILocation(line: 835, column: 4, scope: !10059)
!10073 = !DILocation(line: 835, column: 44, scope: !10059)
!10074 = !DILocation(line: 836, column: 36, scope: !10059)
!10075 = !DILocation(line: 836, column: 4, scope: !10059)
!10076 = !DILocation(line: 833, column: 2, scope: !10059)
!10077 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1616, file: !1616, line: 839, type: !1510, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10078)
!10078 = !{!10079}
!10079 = !DILocalVariable(name: "dev", arg: 1, scope: !10077, file: !1616, line: 839, type: !1489)
!10080 = !DILocation(line: 0, scope: !10077)
!10081 = !DILocation(line: 841, column: 2, scope: !10077)
!10082 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1616, file: !1616, line: 844, type: !1554, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10083)
!10083 = !{!10084, !10085, !10086, !10087}
!10084 = !DILocalVariable(name: "dev", arg: 1, scope: !10082, file: !1616, line: 844, type: !1489)
!10085 = !DILocalVariable(name: "cb", arg: 2, scope: !10082, file: !1616, line: 845, type: !1556)
!10086 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10082, file: !1616, line: 846, type: !102)
!10087 = !DILocalVariable(name: "data", scope: !10082, file: !1616, line: 848, type: !9783)
!10088 = !DILocation(line: 0, scope: !10082)
!10089 = !DILocation(line: 848, column: 38, scope: !10082)
!10090 = !DILocation(line: 850, column: 8, scope: !10082)
!10091 = !DILocation(line: 850, column: 16, scope: !10082)
!10092 = !DILocation(line: 851, column: 8, scope: !10082)
!10093 = !DILocation(line: 851, column: 18, scope: !10082)
!10094 = !DILocation(line: 852, column: 1, scope: !10082)
!10095 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10096, file: !10096, line: 1792, type: !10097, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10099)
!10096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!121, !1560}
!10099 = !{!10100}
!10100 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10095, file: !10096, line: 1792, type: !1560)
!10101 = !DILocation(line: 0, scope: !10095)
!10102 = !DILocation(line: 1794, column: 11, scope: !10095)
!10103 = !DILocation(line: 1794, column: 47, scope: !10095)
!10104 = !DILocation(line: 1794, column: 3, scope: !10095)
!10105 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10096, file: !10096, line: 2227, type: !10097, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10106)
!10106 = !{!10107}
!10107 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10105, file: !10096, line: 2227, type: !1560)
!10108 = !DILocation(line: 0, scope: !10105)
!10109 = !DILocation(line: 2229, column: 11, scope: !10105)
!10110 = !DILocation(line: 2229, column: 51, scope: !10105)
!10111 = !DILocation(line: 2229, column: 3, scope: !10105)
!10112 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10096, file: !10096, line: 1803, type: !10097, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10113)
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10112, file: !10096, line: 1803, type: !1560)
!10115 = !DILocation(line: 0, scope: !10112)
!10116 = !DILocation(line: 1805, column: 11, scope: !10112)
!10117 = !DILocation(line: 1805, column: 45, scope: !10112)
!10118 = !DILocation(line: 1805, column: 3, scope: !10112)
!10119 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10096, file: !10096, line: 2238, type: !10097, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10120)
!10120 = !{!10121}
!10121 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10119, file: !10096, line: 2238, type: !1560)
!10122 = !DILocation(line: 0, scope: !10119)
!10123 = !DILocation(line: 2240, column: 11, scope: !10119)
!10124 = !DILocation(line: 2240, column: 49, scope: !10119)
!10125 = !DILocation(line: 2240, column: 3, scope: !10119)
!10126 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10096, file: !10096, line: 2192, type: !10127, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{null, !1560}
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10126, file: !10096, line: 2192, type: !1560)
!10131 = !DILocalVariable(name: "val", scope: !10132, file: !10096, line: 2194, type: !121)
!10132 = distinct !DILexicalBlock(scope: !10126, file: !10096, line: 2194, column: 3)
!10133 = !DILocation(line: 0, scope: !10126)
!10134 = !DILocation(line: 2194, column: 3, scope: !10132)
!10135 = !DILocalVariable(name: "addr", arg: 1, scope: !10136, file: !6033, line: 476, type: !1612)
!10136 = distinct !DISubprogram(name: "__LDREXW", scope: !6033, file: !6033, line: 476, type: !10137, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!121, !1612}
!10139 = !{!10135, !10140}
!10140 = !DILocalVariable(name: "result", scope: !10136, file: !6033, line: 478, type: !121)
!10141 = !DILocation(line: 0, scope: !10136, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 2194, column: 3, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10132, file: !10096, line: 2194, column: 3)
!10144 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10142)
!10145 = !{i64 3758162}
!10146 = !DILocation(line: 2194, column: 3, scope: !10143)
!10147 = !DILocation(line: 0, scope: !10132)
!10148 = !DILocalVariable(name: "value", arg: 1, scope: !10149, file: !6033, line: 527, type: !121)
!10149 = distinct !DISubprogram(name: "__STREXW", scope: !6033, file: !6033, line: 527, type: !10150, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!121, !121, !1612}
!10152 = !{!10148, !10153, !10154}
!10153 = !DILocalVariable(name: "addr", arg: 2, scope: !10149, file: !6033, line: 527, type: !1612)
!10154 = !DILocalVariable(name: "result", scope: !10149, file: !6033, line: 529, type: !121)
!10155 = !DILocation(line: 0, scope: !10149, inlinedAt: !10156)
!10156 = distinct !DILocation(line: 2194, column: 3, scope: !10132)
!10157 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10156)
!10158 = !{i64 3759598}
!10159 = distinct !{!10159, !10134, !10134}
!10160 = !DILocation(line: 2195, column: 1, scope: !10126)
!10161 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10096, file: !10096, line: 2177, type: !10127, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10162)
!10162 = !{!10163}
!10163 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10161, file: !10096, line: 2177, type: !1560)
!10164 = !DILocation(line: 0, scope: !10161)
!10165 = !DILocation(line: 2179, column: 3, scope: !10161)
!10166 = !DILocation(line: 2180, column: 1, scope: !10161)
!10167 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10096, file: !10096, line: 2164, type: !10127, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10168)
!10168 = !{!10169, !10170}
!10169 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10167, file: !10096, line: 2164, type: !1560)
!10170 = !DILocalVariable(name: "val", scope: !10171, file: !10096, line: 2166, type: !121)
!10171 = distinct !DILexicalBlock(scope: !10167, file: !10096, line: 2166, column: 3)
!10172 = !DILocation(line: 0, scope: !10167)
!10173 = !DILocation(line: 2166, column: 3, scope: !10171)
!10174 = !DILocation(line: 0, scope: !10136, inlinedAt: !10175)
!10175 = distinct !DILocation(line: 2166, column: 3, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10171, file: !10096, line: 2166, column: 3)
!10177 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10175)
!10178 = !DILocation(line: 2166, column: 3, scope: !10176)
!10179 = !DILocation(line: 0, scope: !10171)
!10180 = !DILocation(line: 0, scope: !10149, inlinedAt: !10181)
!10181 = distinct !DILocation(line: 2166, column: 3, scope: !10171)
!10182 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10181)
!10183 = distinct !{!10183, !10173, !10173}
!10184 = !DILocation(line: 2167, column: 1, scope: !10167)
!10185 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10096, file: !10096, line: 2096, type: !10127, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10186)
!10186 = !{!10187, !10188}
!10187 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10185, file: !10096, line: 2096, type: !1560)
!10188 = !DILocalVariable(name: "val", scope: !10189, file: !10096, line: 2098, type: !121)
!10189 = distinct !DILexicalBlock(scope: !10185, file: !10096, line: 2098, column: 3)
!10190 = !DILocation(line: 0, scope: !10185)
!10191 = !DILocation(line: 2098, column: 3, scope: !10189)
!10192 = !DILocation(line: 0, scope: !10136, inlinedAt: !10193)
!10193 = distinct !DILocation(line: 2098, column: 3, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10189, file: !10096, line: 2098, column: 3)
!10195 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10193)
!10196 = !DILocation(line: 2098, column: 3, scope: !10194)
!10197 = !DILocation(line: 0, scope: !10189)
!10198 = !DILocation(line: 0, scope: !10149, inlinedAt: !10199)
!10199 = distinct !DILocation(line: 2098, column: 3, scope: !10189)
!10200 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10199)
!10201 = distinct !{!10201, !10191, !10191}
!10202 = !DILocation(line: 2099, column: 1, scope: !10185)
!10203 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10096, file: !10096, line: 2081, type: !10127, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10204)
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10203, file: !10096, line: 2081, type: !1560)
!10206 = !DILocation(line: 0, scope: !10203)
!10207 = !DILocation(line: 2083, column: 3, scope: !10203)
!10208 = !DILocation(line: 2084, column: 1, scope: !10203)
!10209 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10096, file: !10096, line: 2068, type: !10127, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10210)
!10210 = !{!10211, !10212}
!10211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10209, file: !10096, line: 2068, type: !1560)
!10212 = !DILocalVariable(name: "val", scope: !10213, file: !10096, line: 2070, type: !121)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !10096, line: 2070, column: 3)
!10214 = !DILocation(line: 0, scope: !10209)
!10215 = !DILocation(line: 2070, column: 3, scope: !10213)
!10216 = !DILocation(line: 0, scope: !10136, inlinedAt: !10217)
!10217 = distinct !DILocation(line: 2070, column: 3, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10213, file: !10096, line: 2070, column: 3)
!10219 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10217)
!10220 = !DILocation(line: 2070, column: 3, scope: !10218)
!10221 = !DILocation(line: 0, scope: !10213)
!10222 = !DILocation(line: 0, scope: !10149, inlinedAt: !10223)
!10223 = distinct !DILocation(line: 2070, column: 3, scope: !10213)
!10224 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10223)
!10225 = distinct !{!10225, !10215, !10215}
!10226 = !DILocation(line: 2071, column: 1, scope: !10209)
!10227 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10096, file: !10096, line: 2131, type: !10127, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10228)
!10228 = !{!10229, !10230}
!10229 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10227, file: !10096, line: 2131, type: !1560)
!10230 = !DILocalVariable(name: "val", scope: !10231, file: !10096, line: 2133, type: !121)
!10231 = distinct !DILexicalBlock(scope: !10227, file: !10096, line: 2133, column: 3)
!10232 = !DILocation(line: 0, scope: !10227)
!10233 = !DILocation(line: 2133, column: 3, scope: !10231)
!10234 = !DILocation(line: 0, scope: !10136, inlinedAt: !10235)
!10235 = distinct !DILocation(line: 2133, column: 3, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10231, file: !10096, line: 2133, column: 3)
!10237 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10235)
!10238 = !DILocation(line: 2133, column: 3, scope: !10236)
!10239 = !DILocation(line: 0, scope: !10231)
!10240 = !DILocation(line: 0, scope: !10149, inlinedAt: !10241)
!10241 = distinct !DILocation(line: 2133, column: 3, scope: !10231)
!10242 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10241)
!10243 = distinct !{!10243, !10233, !10233}
!10244 = !DILocation(line: 2134, column: 1, scope: !10227)
!10245 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10096, file: !10096, line: 2035, type: !10127, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10246)
!10246 = !{!10247, !10248}
!10247 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10245, file: !10096, line: 2035, type: !1560)
!10248 = !DILocalVariable(name: "val", scope: !10249, file: !10096, line: 2037, type: !121)
!10249 = distinct !DILexicalBlock(scope: !10245, file: !10096, line: 2037, column: 3)
!10250 = !DILocation(line: 0, scope: !10245)
!10251 = !DILocation(line: 2037, column: 3, scope: !10249)
!10252 = !DILocation(line: 0, scope: !10136, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 2037, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10249, file: !10096, line: 2037, column: 3)
!10255 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10253)
!10256 = !DILocation(line: 2037, column: 3, scope: !10254)
!10257 = !DILocation(line: 0, scope: !10249)
!10258 = !DILocation(line: 0, scope: !10149, inlinedAt: !10259)
!10259 = distinct !DILocation(line: 2037, column: 3, scope: !10249)
!10260 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10259)
!10261 = distinct !{!10261, !10251, !10251}
!10262 = !DILocation(line: 2038, column: 1, scope: !10245)
!10263 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10096, file: !10096, line: 1814, type: !10097, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10264)
!10264 = !{!10265}
!10265 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10263, file: !10096, line: 1814, type: !1560)
!10266 = !DILocation(line: 0, scope: !10263)
!10267 = !DILocation(line: 1816, column: 11, scope: !10263)
!10268 = !DILocation(line: 1816, column: 46, scope: !10263)
!10269 = !DILocation(line: 1816, column: 3, scope: !10263)
!10270 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10096, file: !10096, line: 2142, type: !10127, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10271)
!10271 = !{!10272, !10273}
!10272 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10270, file: !10096, line: 2142, type: !1560)
!10273 = !DILocalVariable(name: "val", scope: !10274, file: !10096, line: 2144, type: !121)
!10274 = distinct !DILexicalBlock(scope: !10270, file: !10096, line: 2144, column: 3)
!10275 = !DILocation(line: 0, scope: !10270)
!10276 = !DILocation(line: 2144, column: 3, scope: !10274)
!10277 = !DILocation(line: 0, scope: !10136, inlinedAt: !10278)
!10278 = distinct !DILocation(line: 2144, column: 3, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10274, file: !10096, line: 2144, column: 3)
!10280 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10278)
!10281 = !DILocation(line: 2144, column: 3, scope: !10279)
!10282 = !DILocation(line: 0, scope: !10274)
!10283 = !DILocation(line: 0, scope: !10149, inlinedAt: !10284)
!10284 = distinct !DILocation(line: 2144, column: 3, scope: !10274)
!10285 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10284)
!10286 = distinct !{!10286, !10276, !10276}
!10287 = !DILocation(line: 2145, column: 1, scope: !10270)
!10288 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10096, file: !10096, line: 2046, type: !10127, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10289)
!10289 = !{!10290, !10291}
!10290 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10288, file: !10096, line: 2046, type: !1560)
!10291 = !DILocalVariable(name: "val", scope: !10292, file: !10096, line: 2048, type: !121)
!10292 = distinct !DILexicalBlock(scope: !10288, file: !10096, line: 2048, column: 3)
!10293 = !DILocation(line: 0, scope: !10288)
!10294 = !DILocation(line: 2048, column: 3, scope: !10292)
!10295 = !DILocation(line: 0, scope: !10136, inlinedAt: !10296)
!10296 = distinct !DILocation(line: 2048, column: 3, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10292, file: !10096, line: 2048, column: 3)
!10298 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10296)
!10299 = !DILocation(line: 2048, column: 3, scope: !10297)
!10300 = !DILocation(line: 0, scope: !10292)
!10301 = !DILocation(line: 0, scope: !10149, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 2048, column: 3, scope: !10292)
!10303 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10302)
!10304 = distinct !{!10304, !10294, !10294}
!10305 = !DILocation(line: 2049, column: 1, scope: !10288)
!10306 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10096, file: !10096, line: 2403, type: !10307, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10309)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{!154, !1560}
!10309 = !{!10310}
!10310 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10306, file: !10096, line: 2403, type: !1560)
!10311 = !DILocation(line: 0, scope: !10306)
!10312 = !DILocation(line: 2405, column: 20, scope: !10306)
!10313 = !DILocation(line: 2405, column: 10, scope: !10306)
!10314 = !DILocation(line: 2405, column: 3, scope: !10306)
!10315 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10096, file: !10096, line: 1770, type: !10097, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10316)
!10316 = !{!10317}
!10317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10315, file: !10096, line: 1770, type: !1560)
!10318 = !DILocation(line: 0, scope: !10315)
!10319 = !DILocation(line: 1772, column: 11, scope: !10315)
!10320 = !DILocation(line: 1772, column: 46, scope: !10315)
!10321 = !DILocation(line: 1772, column: 3, scope: !10315)
!10322 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10096, file: !10096, line: 1934, type: !10127, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10323)
!10323 = !{!10324, !10325}
!10324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10322, file: !10096, line: 1934, type: !1560)
!10325 = !DILocalVariable(name: "tmpreg", scope: !10322, file: !10096, line: 1936, type: !120)
!10326 = !DILocation(line: 0, scope: !10322)
!10327 = !DILocation(line: 1936, column: 3, scope: !10322)
!10328 = !DILocation(line: 1936, column: 17, scope: !10322)
!10329 = !DILocation(line: 1937, column: 20, scope: !10322)
!10330 = !DILocation(line: 1937, column: 10, scope: !10322)
!10331 = !DILocation(line: 1938, column: 10, scope: !10322)
!10332 = !DILocation(line: 1939, column: 20, scope: !10322)
!10333 = !DILocation(line: 1939, column: 10, scope: !10322)
!10334 = !DILocation(line: 1940, column: 10, scope: !10322)
!10335 = !DILocation(line: 1941, column: 1, scope: !10322)
!10336 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10096, file: !10096, line: 2426, type: !10337, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10339)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{null, !1560, !154}
!10339 = !{!10340, !10341}
!10340 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10336, file: !10096, line: 2426, type: !1560)
!10341 = !DILocalVariable(name: "Value", arg: 2, scope: !10336, file: !10096, line: 2426, type: !154)
!10342 = !DILocation(line: 0, scope: !10336)
!10343 = !DILocation(line: 2428, column: 16, scope: !10336)
!10344 = !DILocation(line: 2428, column: 11, scope: !10336)
!10345 = !DILocation(line: 2428, column: 14, scope: !10336)
!10346 = !DILocation(line: 2429, column: 1, scope: !10336)
!10347 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1616, file: !1616, line: 205, type: !10348, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10350)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!121, !1489}
!10350 = !{!10351, !10352}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10347, file: !1616, line: 205, type: !1489)
!10352 = !DILocalVariable(name: "config", scope: !10347, file: !1616, line: 207, type: !9660)
!10353 = !DILocation(line: 0, scope: !10347)
!10354 = !DILocation(line: 207, column: 48, scope: !10347)
!10355 = !DILocation(line: 209, column: 36, scope: !10347)
!10356 = !DILocation(line: 209, column: 9, scope: !10347)
!10357 = !DILocation(line: 209, column: 2, scope: !10347)
!10358 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1616, file: !1616, line: 270, type: !10359, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10361)
!10359 = !DISubroutineType(types: !10360)
!10360 = !{!1455, !121}
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "parity", arg: 1, scope: !10358, file: !1616, line: 270, type: !121)
!10363 = !DILocation(line: 0, scope: !10358)
!10364 = !DILocation(line: 272, column: 2, scope: !10358)
!10365 = !DILocation(line: 281, column: 1, scope: !10358)
!10366 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1616, file: !1616, line: 220, type: !10348, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10367)
!10367 = !{!10368, !10369}
!10368 = !DILocalVariable(name: "dev", arg: 1, scope: !10366, file: !1616, line: 220, type: !1489)
!10369 = !DILocalVariable(name: "config", scope: !10366, file: !1616, line: 222, type: !9660)
!10370 = !DILocation(line: 0, scope: !10366)
!10371 = !DILocation(line: 222, column: 48, scope: !10366)
!10372 = !DILocation(line: 224, column: 44, scope: !10366)
!10373 = !DILocation(line: 224, column: 9, scope: !10366)
!10374 = !DILocation(line: 224, column: 2, scope: !10366)
!10375 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1616, file: !1616, line: 304, type: !10376, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10378)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{!1469, !121}
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "sb", arg: 1, scope: !10375, file: !1616, line: 304, type: !121)
!10380 = !DILocation(line: 0, scope: !10375)
!10381 = !DILocation(line: 306, column: 2, scope: !10375)
!10382 = !DILocation(line: 0, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10375, file: !1616, line: 306, column: 14)
!10384 = !DILocation(line: 323, column: 1, scope: !10375)
!10385 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1616, file: !1616, line: 235, type: !10348, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10386)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "dev", arg: 1, scope: !10385, file: !1616, line: 235, type: !1489)
!10388 = !DILocalVariable(name: "config", scope: !10385, file: !1616, line: 237, type: !9660)
!10389 = !DILocation(line: 0, scope: !10385)
!10390 = !DILocation(line: 237, column: 48, scope: !10385)
!10391 = !DILocation(line: 239, column: 39, scope: !10385)
!10392 = !DILocation(line: 239, column: 9, scope: !10385)
!10393 = !DILocation(line: 239, column: 2, scope: !10385)
!10394 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1616, file: !1616, line: 355, type: !10395, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!1462, !121, !121}
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "db", arg: 1, scope: !10394, file: !1616, line: 355, type: !121)
!10399 = !DILocalVariable(name: "p", arg: 2, scope: !10394, file: !1616, line: 356, type: !121)
!10400 = !DILocation(line: 0, scope: !10394)
!10401 = !DILocation(line: 358, column: 2, scope: !10394)
!10402 = !DILocation(line: 384, column: 1, scope: !10394)
!10403 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1616, file: !1616, line: 250, type: !10348, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10404)
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "dev", arg: 1, scope: !10403, file: !1616, line: 250, type: !1489)
!10406 = !DILocalVariable(name: "config", scope: !10403, file: !1616, line: 252, type: !9660)
!10407 = !DILocation(line: 0, scope: !10403)
!10408 = !DILocation(line: 252, column: 48, scope: !10403)
!10409 = !DILocation(line: 254, column: 40, scope: !10403)
!10410 = !DILocation(line: 254, column: 9, scope: !10403)
!10411 = !DILocation(line: 254, column: 2, scope: !10403)
!10412 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1616, file: !1616, line: 409, type: !10413, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10415)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!1475, !121}
!10415 = !{!10416}
!10416 = !DILocalVariable(name: "fc", arg: 1, scope: !10412, file: !1616, line: 409, type: !121)
!10417 = !DILocation(line: 0, scope: !10412)
!10418 = !DILocation(line: 411, column: 9, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10412, file: !1616, line: 411, column: 6)
!10420 = !DILocation(line: 416, column: 1, scope: !10412)
!10421 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10096, file: !10096, line: 967, type: !10097, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10422)
!10422 = !{!10423}
!10423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10421, file: !10096, line: 967, type: !1560)
!10424 = !DILocation(line: 0, scope: !10421)
!10425 = !DILocation(line: 969, column: 21, scope: !10421)
!10426 = !DILocation(line: 969, column: 3, scope: !10421)
!10427 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10096, file: !10096, line: 601, type: !10097, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10428)
!10428 = !{!10429}
!10429 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10427, file: !10096, line: 601, type: !1560)
!10430 = !DILocation(line: 0, scope: !10427)
!10431 = !DILocation(line: 603, column: 21, scope: !10427)
!10432 = !DILocation(line: 603, column: 3, scope: !10427)
!10433 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10096, file: !10096, line: 820, type: !10097, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10434)
!10434 = !{!10435}
!10435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10433, file: !10096, line: 820, type: !1560)
!10436 = !DILocation(line: 0, scope: !10433)
!10437 = !DILocation(line: 822, column: 21, scope: !10433)
!10438 = !DILocation(line: 822, column: 3, scope: !10433)
!10439 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10096, file: !10096, line: 547, type: !10097, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10440)
!10440 = !{!10441}
!10441 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10439, file: !10096, line: 547, type: !1560)
!10442 = !DILocation(line: 0, scope: !10439)
!10443 = !DILocation(line: 549, column: 21, scope: !10439)
!10444 = !DILocation(line: 549, column: 3, scope: !10439)
!10445 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1616, file: !1616, line: 257, type: !10446, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{!121, !1455}
!10448 = !{!10449}
!10449 = !DILocalVariable(name: "parity", arg: 1, scope: !10445, file: !1616, line: 257, type: !1455)
!10450 = !DILocation(line: 0, scope: !10445)
!10451 = !DILocation(line: 259, column: 2, scope: !10445)
!10452 = !DILocation(line: 268, column: 1, scope: !10445)
!10453 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1616, file: !1616, line: 283, type: !10454, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10456)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{!121, !1469}
!10456 = !{!10457}
!10457 = !DILocalVariable(name: "sb", arg: 1, scope: !10453, file: !1616, line: 283, type: !1469)
!10458 = !DILocation(line: 0, scope: !10453)
!10459 = !DILocation(line: 285, column: 2, scope: !10453)
!10460 = !DILocation(line: 0, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10453, file: !1616, line: 285, column: 14)
!10462 = !DILocation(line: 302, column: 1, scope: !10453)
!10463 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1616, file: !1616, line: 325, type: !10464, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!121, !1462, !1455}
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "db", arg: 1, scope: !10463, file: !1616, line: 325, type: !1462)
!10468 = !DILocalVariable(name: "p", arg: 2, scope: !10463, file: !1616, line: 326, type: !1455)
!10469 = !DILocation(line: 0, scope: !10463)
!10470 = !DILocation(line: 328, column: 2, scope: !10463)
!10471 = !DILocation(line: 353, column: 1, scope: !10463)
!10472 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1616, file: !1616, line: 393, type: !10473, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10475)
!10473 = !DISubroutineType(types: !10474)
!10474 = !{!121, !1475}
!10475 = !{!10476}
!10476 = !DILocalVariable(name: "fc", arg: 1, scope: !10472, file: !1616, line: 393, type: !1475)
!10477 = !DILocation(line: 0, scope: !10472)
!10478 = !DILocation(line: 395, column: 9, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10472, file: !1616, line: 395, column: 6)
!10480 = !DILocation(line: 400, column: 1, scope: !10472)
!10481 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10096, file: !10096, line: 424, type: !10127, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10482)
!10482 = !{!10483}
!10483 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10481, file: !10096, line: 424, type: !1560)
!10484 = !DILocation(line: 0, scope: !10481)
!10485 = !DILocation(line: 426, column: 3, scope: !10481)
!10486 = !DILocation(line: 427, column: 1, scope: !10481)
!10487 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1616, file: !1616, line: 197, type: !10488, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10490)
!10488 = !DISubroutineType(types: !10489)
!10489 = !{null, !1489, !121}
!10490 = !{!10491, !10492, !10493}
!10491 = !DILocalVariable(name: "dev", arg: 1, scope: !10487, file: !1616, line: 197, type: !1489)
!10492 = !DILocalVariable(name: "parity", arg: 2, scope: !10487, file: !1616, line: 198, type: !121)
!10493 = !DILocalVariable(name: "config", scope: !10487, file: !1616, line: 200, type: !9660)
!10494 = !DILocation(line: 0, scope: !10487)
!10495 = !DILocation(line: 200, column: 48, scope: !10487)
!10496 = !DILocation(line: 202, column: 29, scope: !10487)
!10497 = !DILocation(line: 202, column: 2, scope: !10487)
!10498 = !DILocation(line: 203, column: 1, scope: !10487)
!10499 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1616, file: !1616, line: 212, type: !10488, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10500)
!10500 = !{!10501, !10502, !10503}
!10501 = !DILocalVariable(name: "dev", arg: 1, scope: !10499, file: !1616, line: 212, type: !1489)
!10502 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10499, file: !1616, line: 213, type: !121)
!10503 = !DILocalVariable(name: "config", scope: !10499, file: !1616, line: 215, type: !9660)
!10504 = !DILocation(line: 0, scope: !10499)
!10505 = !DILocation(line: 215, column: 48, scope: !10499)
!10506 = !DILocation(line: 217, column: 37, scope: !10499)
!10507 = !DILocation(line: 217, column: 2, scope: !10499)
!10508 = !DILocation(line: 218, column: 1, scope: !10499)
!10509 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1616, file: !1616, line: 227, type: !10488, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10510)
!10510 = !{!10511, !10512, !10513}
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10509, file: !1616, line: 227, type: !1489)
!10512 = !DILocalVariable(name: "databits", arg: 2, scope: !10509, file: !1616, line: 228, type: !121)
!10513 = !DILocalVariable(name: "config", scope: !10509, file: !1616, line: 230, type: !9660)
!10514 = !DILocation(line: 0, scope: !10509)
!10515 = !DILocation(line: 230, column: 48, scope: !10509)
!10516 = !DILocation(line: 232, column: 32, scope: !10509)
!10517 = !DILocation(line: 232, column: 2, scope: !10509)
!10518 = !DILocation(line: 233, column: 1, scope: !10509)
!10519 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1616, file: !1616, line: 242, type: !10488, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10520)
!10520 = !{!10521, !10522, !10523}
!10521 = !DILocalVariable(name: "dev", arg: 1, scope: !10519, file: !1616, line: 242, type: !1489)
!10522 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10519, file: !1616, line: 243, type: !121)
!10523 = !DILocalVariable(name: "config", scope: !10519, file: !1616, line: 245, type: !9660)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 245, column: 48, scope: !10519)
!10526 = !DILocation(line: 247, column: 33, scope: !10519)
!10527 = !DILocation(line: 247, column: 2, scope: !10519)
!10528 = !DILocation(line: 248, column: 1, scope: !10519)
!10529 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1616, file: !1616, line: 107, type: !10488, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10530)
!10530 = !{!10531, !10532, !10533, !10534, !10535}
!10531 = !DILocalVariable(name: "dev", arg: 1, scope: !10529, file: !1616, line: 107, type: !1489)
!10532 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10529, file: !1616, line: 107, type: !121)
!10533 = !DILocalVariable(name: "config", scope: !10529, file: !1616, line: 109, type: !9660)
!10534 = !DILocalVariable(name: "data", scope: !10529, file: !1616, line: 110, type: !9783)
!10535 = !DILocalVariable(name: "clock_rate", scope: !10529, file: !1616, line: 112, type: !121)
!10536 = !DILocation(line: 0, scope: !10529)
!10537 = !DILocation(line: 109, column: 48, scope: !10529)
!10538 = !DILocation(line: 110, column: 38, scope: !10529)
!10539 = !DILocation(line: 112, column: 2, scope: !10529)
!10540 = !DILocation(line: 123, column: 36, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !1616, line: 123, column: 7)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !1616, line: 122, column: 9)
!10543 = distinct !DILexicalBlock(scope: !10529, file: !1616, line: 115, column: 6)
!10544 = !DILocation(line: 124, column: 42, scope: !10541)
!10545 = !DILocation(line: 123, column: 7, scope: !10541)
!10546 = !DILocation(line: 125, column: 22, scope: !10541)
!10547 = !DILocation(line: 123, column: 7, scope: !10542)
!10548 = !DILocation(line: 176, column: 36, scope: !10529)
!10549 = !DILocation(line: 176, column: 3, scope: !10529)
!10550 = !DILocation(line: 179, column: 32, scope: !10529)
!10551 = !DILocation(line: 180, column: 10, scope: !10529)
!10552 = !DILocation(line: 179, column: 3, scope: !10529)
!10553 = !DILocation(line: 195, column: 1, scope: !10529)
!10554 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10096, file: !10096, line: 410, type: !10127, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10555)
!10555 = !{!10556}
!10556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10554, file: !10096, line: 410, type: !1560)
!10557 = !DILocation(line: 0, scope: !10554)
!10558 = !DILocation(line: 412, column: 3, scope: !10554)
!10559 = !DILocation(line: 413, column: 1, scope: !10554)
!10560 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !830, file: !830, line: 216, type: !1593, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10561)
!10561 = !{!10562, !10563, !10564, !10565}
!10562 = !DILocalVariable(name: "dev", arg: 1, scope: !10560, file: !830, line: 216, type: !1489)
!10563 = !DILocalVariable(name: "sys", arg: 2, scope: !10560, file: !830, line: 217, type: !926)
!10564 = !DILocalVariable(name: "rate", arg: 3, scope: !10560, file: !830, line: 218, type: !882)
!10565 = !DILocalVariable(name: "api", scope: !10560, file: !830, line: 220, type: !1571)
!10566 = !DILocation(line: 0, scope: !10560)
!10567 = !DILocation(line: 221, column: 49, scope: !10560)
!10568 = !DILocation(line: 223, column: 11, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10560, file: !830, line: 223, column: 6)
!10570 = !DILocation(line: 223, column: 20, scope: !10569)
!10571 = !DILocation(line: 223, column: 6, scope: !10560)
!10572 = !DILocation(line: 227, column: 9, scope: !10560)
!10573 = !DILocation(line: 227, column: 2, scope: !10560)
!10574 = !DILocation(line: 228, column: 1, scope: !10560)
!10575 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10096, file: !10096, line: 615, type: !10576, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10578)
!10576 = !DISubroutineType(types: !10577)
!10577 = !{null, !1560, !121}
!10578 = !{!10579, !10580}
!10579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10575, file: !10096, line: 615, type: !1560)
!10580 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10575, file: !10096, line: 615, type: !121)
!10581 = !DILocation(line: 0, scope: !10575)
!10582 = !DILocation(line: 617, column: 3, scope: !10575)
!10583 = !DILocation(line: 618, column: 1, scope: !10575)
!10584 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10096, file: !10096, line: 1020, type: !10585, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10587)
!10585 = !DISubroutineType(types: !10586)
!10586 = !{null, !1560, !121, !121, !121}
!10587 = !{!10588, !10589, !10590, !10591}
!10588 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10584, file: !10096, line: 1020, type: !1560)
!10589 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10584, file: !10096, line: 1020, type: !121)
!10590 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10584, file: !10096, line: 1020, type: !121)
!10591 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10584, file: !10096, line: 1021, type: !121)
!10592 = !DILocation(line: 0, scope: !10584)
!10593 = !DILocation(line: 1029, column: 30, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !10096, line: 1028, column: 3)
!10595 = distinct !DILexicalBlock(scope: !10584, file: !10096, line: 1023, column: 7)
!10596 = !DILocation(line: 1029, column: 19, scope: !10594)
!10597 = !DILocation(line: 1029, column: 13, scope: !10594)
!10598 = !DILocation(line: 1029, column: 17, scope: !10594)
!10599 = !DILocation(line: 1031, column: 1, scope: !10584)
!10600 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10096, file: !10096, line: 949, type: !10576, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10601)
!10601 = !{!10602, !10603}
!10602 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10600, file: !10096, line: 949, type: !1560)
!10603 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10600, file: !10096, line: 949, type: !121)
!10604 = !DILocation(line: 0, scope: !10600)
!10605 = !DILocation(line: 951, column: 3, scope: !10600)
!10606 = !DILocation(line: 952, column: 1, scope: !10600)
!10607 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10096, file: !10096, line: 588, type: !10576, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10608)
!10608 = !{!10609, !10610}
!10609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10607, file: !10096, line: 588, type: !1560)
!10610 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10607, file: !10096, line: 588, type: !121)
!10611 = !DILocation(line: 0, scope: !10607)
!10612 = !DILocation(line: 590, column: 3, scope: !10607)
!10613 = !DILocation(line: 591, column: 1, scope: !10607)
!10614 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10096, file: !10096, line: 805, type: !10576, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10615)
!10615 = !{!10616, !10617}
!10616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10614, file: !10096, line: 805, type: !1560)
!10617 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10614, file: !10096, line: 805, type: !121)
!10618 = !DILocation(line: 0, scope: !10614)
!10619 = !DILocation(line: 807, column: 3, scope: !10614)
!10620 = !DILocation(line: 808, column: 1, scope: !10614)
!10621 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10096, file: !10096, line: 532, type: !10576, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10622)
!10622 = !{!10623, !10624}
!10623 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10621, file: !10096, line: 532, type: !1560)
!10624 = !DILocalVariable(name: "Parity", arg: 2, scope: !10621, file: !10096, line: 532, type: !121)
!10625 = !DILocation(line: 0, scope: !10621)
!10626 = !DILocation(line: 534, column: 3, scope: !10621)
!10627 = !DILocation(line: 535, column: 1, scope: !10621)
!10628 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10096, file: !10096, line: 1737, type: !10097, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10629)
!10629 = !{!10630}
!10630 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10628, file: !10096, line: 1737, type: !1560)
!10631 = !DILocation(line: 0, scope: !10628)
!10632 = !DILocation(line: 1739, column: 11, scope: !10628)
!10633 = !DILocation(line: 1739, column: 3, scope: !10628)
!10634 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10096, file: !10096, line: 1748, type: !10097, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10635)
!10635 = !{!10636}
!10636 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10634, file: !10096, line: 1748, type: !1560)
!10637 = !DILocation(line: 0, scope: !10634)
!10638 = !DILocation(line: 1750, column: 11, scope: !10634)
!10639 = !DILocation(line: 1750, column: 45, scope: !10634)
!10640 = !DILocation(line: 1750, column: 3, scope: !10634)
!10641 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10096, file: !10096, line: 1827, type: !10097, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10642)
!10642 = !{!10643}
!10643 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10641, file: !10096, line: 1827, type: !1560)
!10644 = !DILocation(line: 0, scope: !10641)
!10645 = !DILocation(line: 1829, column: 11, scope: !10641)
!10646 = !DILocation(line: 1829, column: 46, scope: !10641)
!10647 = !DILocation(line: 1829, column: 3, scope: !10641)
!10648 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10096, file: !10096, line: 1992, type: !10127, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10649)
!10649 = !{!10650}
!10650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10648, file: !10096, line: 1992, type: !1560)
!10651 = !DILocation(line: 0, scope: !10648)
!10652 = !DILocation(line: 1994, column: 3, scope: !10648)
!10653 = !DILocation(line: 1995, column: 1, scope: !10648)
!10654 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10096, file: !10096, line: 1877, type: !10127, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10655)
!10655 = !{!10656, !10657}
!10656 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10654, file: !10096, line: 1877, type: !1560)
!10657 = !DILocalVariable(name: "tmpreg", scope: !10654, file: !10096, line: 1879, type: !120)
!10658 = !DILocation(line: 0, scope: !10654)
!10659 = !DILocation(line: 1879, column: 3, scope: !10654)
!10660 = !DILocation(line: 1879, column: 17, scope: !10654)
!10661 = !DILocation(line: 1880, column: 20, scope: !10654)
!10662 = !DILocation(line: 1880, column: 10, scope: !10654)
!10663 = !DILocation(line: 1881, column: 10, scope: !10654)
!10664 = !DILocation(line: 1882, column: 20, scope: !10654)
!10665 = !DILocation(line: 1882, column: 10, scope: !10654)
!10666 = !DILocation(line: 1883, column: 10, scope: !10654)
!10667 = !DILocation(line: 1884, column: 1, scope: !10654)
!10668 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10096, file: !10096, line: 1896, type: !10127, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10669)
!10669 = !{!10670, !10671}
!10670 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10668, file: !10096, line: 1896, type: !1560)
!10671 = !DILocalVariable(name: "tmpreg", scope: !10668, file: !10096, line: 1898, type: !120)
!10672 = !DILocation(line: 0, scope: !10668)
!10673 = !DILocation(line: 1898, column: 3, scope: !10668)
!10674 = !DILocation(line: 1898, column: 17, scope: !10668)
!10675 = !DILocation(line: 1899, column: 20, scope: !10668)
!10676 = !DILocation(line: 1899, column: 10, scope: !10668)
!10677 = !DILocation(line: 1900, column: 10, scope: !10668)
!10678 = !DILocation(line: 1901, column: 20, scope: !10668)
!10679 = !DILocation(line: 1901, column: 10, scope: !10668)
!10680 = !DILocation(line: 1902, column: 10, scope: !10668)
!10681 = !DILocation(line: 1903, column: 1, scope: !10668)
!10682 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10096, file: !10096, line: 1915, type: !10127, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10683)
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10682, file: !10096, line: 1915, type: !1560)
!10685 = !DILocalVariable(name: "tmpreg", scope: !10682, file: !10096, line: 1917, type: !120)
!10686 = !DILocation(line: 0, scope: !10682)
!10687 = !DILocation(line: 1917, column: 3, scope: !10682)
!10688 = !DILocation(line: 1917, column: 17, scope: !10682)
!10689 = !DILocation(line: 1918, column: 20, scope: !10682)
!10690 = !DILocation(line: 1918, column: 10, scope: !10682)
!10691 = !DILocation(line: 1919, column: 10, scope: !10682)
!10692 = !DILocation(line: 1920, column: 20, scope: !10682)
!10693 = !DILocation(line: 1920, column: 10, scope: !10682)
!10694 = !DILocation(line: 1921, column: 10, scope: !10682)
!10695 = !DILocation(line: 1922, column: 1, scope: !10682)
!10696 = !DILocation(line: 0, scope: !1694)
!10697 = !DILocation(line: 1914, column: 1, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !1694, file: !1616, line: 1914, column: 1)
!10699 = !DILocation(line: 1914, column: 1, scope: !1694)
!10700 = !DILocation(line: 0, scope: !1743)
!10701 = !DILocation(line: 1914, column: 1, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !1743, file: !1616, line: 1914, column: 1)
!10703 = !DILocation(line: 1914, column: 1, scope: !1743)
!10704 = !DILocation(line: 0, scope: !1760)
!10705 = !DILocation(line: 1914, column: 1, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !1760, file: !1616, line: 1914, column: 1)
!10707 = !DILocation(line: 1914, column: 1, scope: !1760)
!10708 = !DILocation(line: 0, scope: !1777)
!10709 = !DILocation(line: 1914, column: 1, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !1777, file: !1616, line: 1914, column: 1)
!10711 = !DILocation(line: 1914, column: 1, scope: !1777)
!10712 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1616, file: !1616, line: 987, type: !1540, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10713)
!10713 = !{!10714, !10715}
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10712, file: !1616, line: 987, type: !1489)
!10715 = !DILocalVariable(name: "data", scope: !10712, file: !1616, line: 989, type: !9783)
!10716 = !DILocation(line: 0, scope: !10712)
!10717 = !DILocation(line: 989, column: 38, scope: !10712)
!10718 = !DILocation(line: 1014, column: 12, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10712, file: !1616, line: 1014, column: 6)
!10720 = !DILocation(line: 1014, column: 6, scope: !10719)
!10721 = !DILocation(line: 1014, column: 6, scope: !10712)
!10722 = !DILocation(line: 1015, column: 28, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10719, file: !1616, line: 1014, column: 21)
!10724 = !DILocation(line: 1015, column: 3, scope: !10723)
!10725 = !DILocation(line: 1016, column: 2, scope: !10723)
!10726 = !DILocation(line: 1059, column: 1, scope: !10712)
!10727 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1616, file: !1616, line: 1583, type: !1510, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10728)
!10728 = !{!10729, !10730, !10731, !10732, !10733, !10734}
!10729 = !DILocalVariable(name: "dev", arg: 1, scope: !10727, file: !1616, line: 1583, type: !1489)
!10730 = !DILocalVariable(name: "config", scope: !10727, file: !1616, line: 1585, type: !9660)
!10731 = !DILocalVariable(name: "data", scope: !10727, file: !1616, line: 1586, type: !9783)
!10732 = !DILocalVariable(name: "ll_parity", scope: !10727, file: !1616, line: 1587, type: !121)
!10733 = !DILocalVariable(name: "ll_datawidth", scope: !10727, file: !1616, line: 1588, type: !121)
!10734 = !DILocalVariable(name: "err", scope: !10727, file: !1616, line: 1589, type: !103)
!10735 = !DILocation(line: 0, scope: !10727)
!10736 = !DILocation(line: 1585, column: 48, scope: !10727)
!10737 = !DILocation(line: 1586, column: 38, scope: !10727)
!10738 = !DILocation(line: 1591, column: 2, scope: !10727)
!10739 = !DILocation(line: 1593, column: 29, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1593, column: 6)
!10741 = !DILocation(line: 1593, column: 7, scope: !10740)
!10742 = !DILocation(line: 1593, column: 6, scope: !10727)
!10743 = !DILocation(line: 1599, column: 31, scope: !10727)
!10744 = !DILocation(line: 1599, column: 71, scope: !10727)
!10745 = !DILocation(line: 1599, column: 8, scope: !10727)
!10746 = !DILocation(line: 1600, column: 10, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1600, column: 6)
!10748 = !DILocation(line: 1600, column: 6, scope: !10727)
!10749 = !DILocation(line: 1616, column: 36, scope: !10727)
!10750 = !DILocation(line: 1616, column: 8, scope: !10727)
!10751 = !DILocation(line: 1617, column: 10, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1617, column: 6)
!10753 = !DILocation(line: 1617, column: 6, scope: !10727)
!10754 = !DILocation(line: 1621, column: 27, scope: !10727)
!10755 = !DILocation(line: 1621, column: 2, scope: !10727)
!10756 = !DILocation(line: 1624, column: 40, scope: !10727)
!10757 = !DILocation(line: 1624, column: 2, scope: !10727)
!10758 = !DILocation(line: 1630, column: 14, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1630, column: 6)
!10760 = !DILocation(line: 1630, column: 6, scope: !10727)
!10761 = !DILocation(line: 1638, column: 2, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !1616, line: 1634, column: 34)
!10763 = distinct !DILexicalBlock(scope: !10759, file: !1616, line: 1634, column: 13)
!10764 = !DILocation(line: 0, scope: !10759)
!10765 = !DILocation(line: 1649, column: 35, scope: !10727)
!10766 = !DILocation(line: 1649, column: 2, scope: !10727)
!10767 = !DILocation(line: 1654, column: 14, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1654, column: 6)
!10769 = !DILocation(line: 1654, column: 6, scope: !10727)
!10770 = !DILocation(line: 1655, column: 3, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10768, file: !1616, line: 1654, column: 31)
!10772 = !DILocation(line: 1656, column: 2, scope: !10771)
!10773 = !DILocation(line: 1659, column: 37, scope: !10727)
!10774 = !DILocation(line: 1659, column: 2, scope: !10727)
!10775 = !DILocation(line: 1662, column: 14, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10727, file: !1616, line: 1662, column: 6)
!10777 = !DILocation(line: 1662, column: 6, scope: !10727)
!10778 = !DILocation(line: 1663, column: 37, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10776, file: !1616, line: 1662, column: 27)
!10780 = !DILocation(line: 1663, column: 3, scope: !10779)
!10781 = !DILocation(line: 1664, column: 2, scope: !10779)
!10782 = !DILocation(line: 1684, column: 26, scope: !10727)
!10783 = !DILocation(line: 1684, column: 2, scope: !10727)
!10784 = !DILocation(line: 1701, column: 10, scope: !10727)
!10785 = !DILocation(line: 1701, column: 2, scope: !10727)
!10786 = !DILocation(line: 1722, column: 2, scope: !10727)
!10787 = !DILocation(line: 1724, column: 1, scope: !10727)
!10788 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1616, file: !1616, line: 651, type: !1540, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10789)
!10789 = !{!10790, !10791, !10792}
!10790 = !DILocalVariable(name: "dev", arg: 1, scope: !10788, file: !1616, line: 651, type: !1489)
!10791 = !DILocalVariable(name: "data", scope: !10788, file: !1616, line: 653, type: !9783)
!10792 = !DILocalVariable(name: "clk", scope: !10788, file: !1616, line: 654, type: !10793)
!10793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!10794 = !DILocation(line: 0, scope: !10788)
!10795 = !DILocation(line: 653, column: 38, scope: !10788)
!10796 = !DILocation(line: 656, column: 8, scope: !10788)
!10797 = !DILocation(line: 656, column: 14, scope: !10788)
!10798 = !DILocation(line: 657, column: 1, scope: !10788)
!10799 = distinct !DISubprogram(name: "device_is_ready", scope: !8242, file: !8242, line: 47, type: !10800, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10802)
!10800 = !DISubroutineType(types: !10801)
!10801 = !{!157, !1489}
!10802 = !{!10803}
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10799, file: !8242, line: 47, type: !1489)
!10804 = !DILocation(line: 0, scope: !10799)
!10805 = !DILocation(line: 55, column: 2, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10799, file: !8242, line: 55, column: 2)
!10807 = !{i64 2155368843}
!10808 = !DILocation(line: 56, column: 9, scope: !10799)
!10809 = !DILocation(line: 56, column: 2, scope: !10799)
!10810 = distinct !DISubprogram(name: "clock_control_on", scope: !830, file: !830, line: 123, type: !1578, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10811)
!10811 = !{!10812, !10813, !10814}
!10812 = !DILocalVariable(name: "dev", arg: 1, scope: !10810, file: !830, line: 123, type: !1489)
!10813 = !DILocalVariable(name: "sys", arg: 2, scope: !10810, file: !830, line: 124, type: !926)
!10814 = !DILocalVariable(name: "api", scope: !10810, file: !830, line: 126, type: !1571)
!10815 = !DILocation(line: 0, scope: !10810)
!10816 = !DILocation(line: 127, column: 49, scope: !10810)
!10817 = !DILocation(line: 129, column: 14, scope: !10810)
!10818 = !DILocation(line: 129, column: 9, scope: !10810)
!10819 = !DILocation(line: 129, column: 2, scope: !10810)
!10820 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1667, file: !1667, line: 342, type: !10821, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10823)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{!103, !1730, !154}
!10823 = !{!10824, !10825, !10826, !10827}
!10824 = !DILocalVariable(name: "config", arg: 1, scope: !10820, file: !1667, line: 342, type: !1730)
!10825 = !DILocalVariable(name: "id", arg: 2, scope: !10820, file: !1667, line: 343, type: !154)
!10826 = !DILocalVariable(name: "ret", scope: !10820, file: !1667, line: 345, type: !103)
!10827 = !DILocalVariable(name: "state", scope: !10820, file: !1667, line: 346, type: !1670)
!10828 = !DILocation(line: 0, scope: !10820)
!10829 = !DILocation(line: 346, column: 2, scope: !10820)
!10830 = !DILocation(line: 348, column: 8, scope: !10820)
!10831 = !DILocation(line: 349, column: 10, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10820, file: !1667, line: 349, column: 6)
!10833 = !DILocation(line: 349, column: 6, scope: !10820)
!10834 = !DILocation(line: 353, column: 44, scope: !10820)
!10835 = !DILocation(line: 353, column: 9, scope: !10820)
!10836 = !DILocation(line: 353, column: 2, scope: !10820)
!10837 = !DILocation(line: 354, column: 1, scope: !10820)
!10838 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10096, file: !10096, line: 497, type: !10576, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10839)
!10839 = !{!10840, !10841, !10842}
!10840 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10838, file: !10096, line: 497, type: !1560)
!10841 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10838, file: !10096, line: 497, type: !121)
!10842 = !DILocalVariable(name: "val", scope: !10843, file: !10096, line: 499, type: !121)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !10096, line: 499, column: 3)
!10844 = !DILocation(line: 0, scope: !10838)
!10845 = !DILocation(line: 499, column: 3, scope: !10843)
!10846 = !DILocation(line: 0, scope: !10136, inlinedAt: !10847)
!10847 = distinct !DILocation(line: 499, column: 3, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10843, file: !10096, line: 499, column: 3)
!10849 = !DILocation(line: 480, column: 4, scope: !10136, inlinedAt: !10847)
!10850 = !DILocation(line: 499, column: 3, scope: !10848)
!10851 = !DILocation(line: 0, scope: !10843)
!10852 = !DILocation(line: 0, scope: !10149, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 499, column: 3, scope: !10843)
!10854 = !DILocation(line: 531, column: 4, scope: !10149, inlinedAt: !10853)
!10855 = distinct !{!10855, !10845, !10845}
!10856 = !DILocation(line: 500, column: 1, scope: !10838)
!10857 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10096, file: !10096, line: 850, type: !10585, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10858)
!10858 = !{!10859, !10860, !10861, !10862}
!10859 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10857, file: !10096, line: 850, type: !1560)
!10860 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10857, file: !10096, line: 850, type: !121)
!10861 = !DILocalVariable(name: "Parity", arg: 3, scope: !10857, file: !10096, line: 850, type: !121)
!10862 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10857, file: !10096, line: 851, type: !121)
!10863 = !DILocation(line: 0, scope: !10857)
!10864 = !DILocation(line: 853, column: 3, scope: !10857)
!10865 = !DILocation(line: 854, column: 3, scope: !10857)
!10866 = !DILocation(line: 855, column: 1, scope: !10857)
!10867 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10096, file: !10096, line: 1337, type: !10127, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10868)
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10867, file: !10096, line: 1337, type: !1560)
!10870 = !DILocation(line: 0, scope: !10867)
!10871 = !DILocation(line: 1339, column: 3, scope: !10867)
!10872 = !DILocation(line: 1340, column: 1, scope: !10867)
!10873 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1667, file: !1667, line: 316, type: !10874, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{!103, !1730, !1670}
!10876 = !{!10877, !10878, !10879}
!10877 = !DILocalVariable(name: "config", arg: 1, scope: !10873, file: !1667, line: 317, type: !1730)
!10878 = !DILocalVariable(name: "state", arg: 2, scope: !10873, file: !1667, line: 318, type: !1670)
!10879 = !DILocalVariable(name: "reg", scope: !10873, file: !1667, line: 320, type: !22)
!10880 = !DILocation(line: 0, scope: !10873)
!10881 = !DILocation(line: 329, column: 39, scope: !10873)
!10882 = !DILocation(line: 329, column: 52, scope: !10873)
!10883 = !DILocation(line: 329, column: 9, scope: !10873)
!10884 = !DILocation(line: 329, column: 2, scope: !10873)
!10885 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10800, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10886)
!10886 = !{!10887}
!10887 = !DILocalVariable(name: "dev", arg: 1, scope: !10885, file: !141, line: 730, type: !1489)
!10888 = !DILocation(line: 0, scope: !10885)
!10889 = !DILocation(line: 732, column: 9, scope: !10885)
!10890 = !DILocation(line: 732, column: 2, scope: !10885)
!10891 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1862, file: !1862, line: 270, type: !1868, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10892)
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "dev", arg: 1, scope: !10891, file: !1862, line: 270, type: !1870)
!10894 = !DILocation(line: 0, scope: !10891)
!10895 = !DILocation(line: 274, column: 2, scope: !10891)
!10896 = !DILocation(line: 275, column: 12, scope: !10891)
!10897 = !DILocation(line: 276, column: 15, scope: !10891)
!10898 = !DILocation(line: 277, column: 16, scope: !10891)
!10899 = !DILocation(line: 278, column: 15, scope: !10891)
!10900 = !DILocation(line: 279, column: 16, scope: !10891)
!10901 = !DILocation(line: 282, column: 2, scope: !10891)
!10902 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6067, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10903)
!10903 = !{!10904, !10905}
!10904 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10902, file: !515, line: 1814, type: !780)
!10905 = !DILocalVariable(name: "priority", arg: 2, scope: !10902, file: !515, line: 1814, type: !121)
!10906 = !DILocation(line: 0, scope: !10902)
!10907 = !DILocation(line: 1822, column: 46, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !515, line: 1821, column: 3)
!10909 = distinct !DILexicalBlock(scope: !10902, file: !515, line: 1816, column: 7)
!10910 = !DILocation(line: 1824, column: 1, scope: !10902)
!10911 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1862, file: !1862, line: 118, type: !5970, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10912)
!10912 = !{!10913, !10914}
!10913 = !DILocalVariable(name: "arg", arg: 1, scope: !10911, file: !1862, line: 118, type: !102)
!10914 = !DILocalVariable(name: "dticks", scope: !10911, file: !1862, line: 121, type: !121)
!10915 = !DILocation(line: 0, scope: !10911)
!10916 = !DILocation(line: 124, column: 2, scope: !10911)
!10917 = !DILocation(line: 129, column: 17, scope: !10911)
!10918 = !DILocation(line: 129, column: 14, scope: !10911)
!10919 = !DILocation(line: 130, column: 15, scope: !10911)
!10920 = !DILocation(line: 145, column: 27, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !1862, line: 132, column: 16)
!10922 = distinct !DILexicalBlock(scope: !10911, file: !1862, line: 132, column: 6)
!10923 = !DILocation(line: 145, column: 25, scope: !10921)
!10924 = !DILocation(line: 145, column: 45, scope: !10921)
!10925 = !DILocation(line: 146, column: 30, scope: !10921)
!10926 = !DILocation(line: 146, column: 20, scope: !10921)
!10927 = !DILocation(line: 147, column: 3, scope: !10921)
!10928 = !DILocation(line: 151, column: 2, scope: !10911)
!10929 = !DILocation(line: 152, column: 1, scope: !10911)
!10930 = distinct !DISubprogram(name: "elapsed", scope: !1862, file: !1862, line: 85, type: !6114, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10931)
!10931 = !{!10932, !10933, !10934}
!10932 = !DILocalVariable(name: "val1", scope: !10930, file: !1862, line: 87, type: !121)
!10933 = !DILocalVariable(name: "ctrl", scope: !10930, file: !1862, line: 88, type: !121)
!10934 = !DILocalVariable(name: "val2", scope: !10930, file: !1862, line: 89, type: !121)
!10935 = !DILocation(line: 87, column: 27, scope: !10930)
!10936 = !DILocation(line: 0, scope: !10930)
!10937 = !DILocation(line: 88, column: 27, scope: !10930)
!10938 = !DILocation(line: 89, column: 27, scope: !10930)
!10939 = !DILocation(line: 105, column: 12, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10930, file: !1862, line: 105, column: 6)
!10941 = !DILocation(line: 106, column: 6, scope: !10940)
!10942 = !DILocation(line: 107, column: 16, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10940, file: !1862, line: 106, column: 24)
!10944 = !DILocation(line: 111, column: 18, scope: !10943)
!10945 = !DILocation(line: 112, column: 2, scope: !10943)
!10946 = !DILocation(line: 114, column: 20, scope: !10930)
!10947 = !DILocation(line: 114, column: 30, scope: !10930)
!10948 = !DILocation(line: 114, column: 28, scope: !10930)
!10949 = !DILocation(line: 114, column: 2, scope: !10930)
!10950 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1862, file: !1862, line: 154, type: !10951, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10953)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{null, !754, !157}
!10953 = !{!10954, !10955, !10956, !10957, !10958, !10959, !10960, !10965, !10966}
!10954 = !DILocalVariable(name: "ticks", arg: 1, scope: !10950, file: !1862, line: 154, type: !754)
!10955 = !DILocalVariable(name: "idle", arg: 2, scope: !10950, file: !1862, line: 154, type: !157)
!10956 = !DILocalVariable(name: "delay", scope: !10950, file: !1862, line: 169, type: !121)
!10957 = !DILocalVariable(name: "val1", scope: !10950, file: !1862, line: 170, type: !121)
!10958 = !DILocalVariable(name: "val2", scope: !10950, file: !1862, line: 170, type: !121)
!10959 = !DILocalVariable(name: "last_load_", scope: !10950, file: !1862, line: 171, type: !121)
!10960 = !DILocalVariable(name: "key", scope: !10950, file: !1862, line: 176, type: !10961)
!10961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !10962)
!10962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !10963)
!10963 = !{!10964}
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10962, file: !316, line: 33, baseType: !103, size: 32)
!10965 = !DILocalVariable(name: "pending", scope: !10950, file: !1862, line: 178, type: !121)
!10966 = !DILocalVariable(name: "unannounced", scope: !10950, file: !1862, line: 185, type: !121)
!10967 = !DILocation(line: 0, scope: !10950)
!10968 = !DILocation(line: 162, column: 49, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10950, file: !1862, line: 162, column: 6)
!10970 = !DILocation(line: 163, column: 17, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10969, file: !1862, line: 162, column: 78)
!10972 = !DILocation(line: 164, column: 13, scope: !10971)
!10973 = !DILocation(line: 165, column: 3, scope: !10971)
!10974 = !DILocation(line: 171, column: 24, scope: !10950)
!10975 = !DILocation(line: 173, column: 10, scope: !10950)
!10976 = !DILocation(line: 174, column: 10, scope: !10950)
!10977 = !DILocalVariable(name: "l", arg: 1, scope: !10978, file: !316, line: 136, type: !10981)
!10978 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !10979, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10982)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!10961, !10981}
!10981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!10982 = !{!10977, !10983}
!10983 = !DILocalVariable(name: "k", scope: !10978, file: !316, line: 139, type: !10961)
!10984 = !DILocation(line: 0, scope: !10978, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 176, column: 25, scope: !10950)
!10986 = !DILocation(line: 55, column: 2, scope: !10987, inlinedAt: !10991)
!10987 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10988)
!10988 = !{!10989, !10990}
!10989 = !DILocalVariable(name: "key", scope: !10987, file: !5818, line: 44, type: !32)
!10990 = !DILocalVariable(name: "tmp", scope: !10987, file: !5818, line: 53, type: !32)
!10991 = distinct !DILocation(line: 145, column: 10, scope: !10978, inlinedAt: !10985)
!10992 = !{i64 2279014}
!10993 = !DILocation(line: 0, scope: !10987, inlinedAt: !10991)
!10994 = !DILocation(line: 178, column: 21, scope: !10950)
!10995 = !DILocation(line: 180, column: 18, scope: !10950)
!10996 = !DILocation(line: 182, column: 14, scope: !10950)
!10997 = !DILocation(line: 183, column: 15, scope: !10950)
!10998 = !DILocation(line: 185, column: 39, scope: !10950)
!10999 = !DILocation(line: 185, column: 37, scope: !10950)
!11000 = !DILocation(line: 187, column: 27, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10950, file: !1862, line: 187, column: 6)
!11002 = !DILocation(line: 187, column: 6, scope: !10950)
!11003 = !DILocation(line: 202, column: 27, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11001, file: !1862, line: 195, column: 9)
!11005 = !DILocation(line: 202, column: 48, scope: !11004)
!11006 = !DILocation(line: 203, column: 9, scope: !11004)
!11007 = !DILocation(line: 204, column: 11, scope: !11004)
!11008 = !DILocation(line: 205, column: 13, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11004, file: !1862, line: 205, column: 7)
!11010 = !DILocation(line: 205, column: 7, scope: !11004)
!11011 = !DILocation(line: 0, scope: !11001)
!11012 = !DILocation(line: 212, column: 18, scope: !10950)
!11013 = !DILocation(line: 214, column: 28, scope: !10950)
!11014 = !DILocation(line: 214, column: 16, scope: !10950)
!11015 = !DILocation(line: 215, column: 15, scope: !10950)
!11016 = !DILocation(line: 227, column: 11, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10950, file: !1862, line: 227, column: 6)
!11018 = !DILocation(line: 227, column: 6, scope: !10950)
!11019 = !DILocation(line: 228, column: 15, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11017, file: !1862, line: 227, column: 19)
!11021 = !DILocation(line: 228, column: 38, scope: !11020)
!11022 = !DILocation(line: 228, column: 24, scope: !11020)
!11023 = !DILocation(line: 229, column: 2, scope: !11020)
!11024 = !DILocation(line: 230, column: 24, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11017, file: !1862, line: 229, column: 9)
!11026 = !DILocation(line: 230, column: 15, scope: !11025)
!11027 = !DILocation(line: 0, scope: !11017)
!11028 = !DILocalVariable(name: "key", arg: 2, scope: !11029, file: !316, line: 190, type: !10961)
!11029 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !11030, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !11032)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{null, !10981, !10961}
!11032 = !{!11033, !11028}
!11033 = !DILocalVariable(name: "l", arg: 1, scope: !11029, file: !316, line: 189, type: !10981)
!11034 = !DILocation(line: 0, scope: !11029, inlinedAt: !11035)
!11035 = distinct !DILocation(line: 232, column: 2, scope: !10950)
!11036 = !DILocalVariable(name: "key", arg: 1, scope: !11037, file: !5818, line: 84, type: !32)
!11037 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !11038)
!11038 = !{!11036}
!11039 = !DILocation(line: 0, scope: !11037, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 215, column: 2, scope: !11029, inlinedAt: !11035)
!11041 = !DILocation(line: 95, column: 2, scope: !11037, inlinedAt: !11040)
!11042 = !{i64 2279831}
!11043 = !DILocation(line: 234, column: 1, scope: !10950)
!11044 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1862, file: !1862, line: 236, type: !6114, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !11045)
!11045 = !{!11046, !11047}
!11046 = !DILocalVariable(name: "key", scope: !11044, file: !1862, line: 242, type: !10961)
!11047 = !DILocalVariable(name: "cyc", scope: !11044, file: !1862, line: 243, type: !121)
!11048 = !DILocation(line: 0, scope: !10978, inlinedAt: !11049)
!11049 = distinct !DILocation(line: 242, column: 25, scope: !11044)
!11050 = !DILocation(line: 55, column: 2, scope: !10987, inlinedAt: !11051)
!11051 = distinct !DILocation(line: 145, column: 10, scope: !10978, inlinedAt: !11049)
!11052 = !DILocation(line: 0, scope: !10987, inlinedAt: !11051)
!11053 = !DILocation(line: 0, scope: !11044)
!11054 = !DILocation(line: 243, column: 17, scope: !11044)
!11055 = !DILocation(line: 243, column: 29, scope: !11044)
!11056 = !DILocation(line: 243, column: 27, scope: !11044)
!11057 = !DILocation(line: 243, column: 43, scope: !11044)
!11058 = !DILocation(line: 243, column: 41, scope: !11044)
!11059 = !DILocation(line: 0, scope: !11029, inlinedAt: !11060)
!11060 = distinct !DILocation(line: 245, column: 2, scope: !11044)
!11061 = !DILocation(line: 0, scope: !11037, inlinedAt: !11062)
!11062 = distinct !DILocation(line: 215, column: 2, scope: !11029, inlinedAt: !11060)
!11063 = !DILocation(line: 95, column: 2, scope: !11037, inlinedAt: !11062)
!11064 = !DILocation(line: 246, column: 13, scope: !11044)
!11065 = !DILocation(line: 246, column: 2, scope: !11044)
!11066 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1862, file: !1862, line: 249, type: !6114, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !11067)
!11067 = !{!11068, !11069}
!11068 = !DILocalVariable(name: "key", scope: !11066, file: !1862, line: 251, type: !10961)
!11069 = !DILocalVariable(name: "ret", scope: !11066, file: !1862, line: 252, type: !121)
!11070 = !DILocation(line: 0, scope: !10978, inlinedAt: !11071)
!11071 = distinct !DILocation(line: 251, column: 25, scope: !11066)
!11072 = !DILocation(line: 55, column: 2, scope: !10987, inlinedAt: !11073)
!11073 = distinct !DILocation(line: 145, column: 10, scope: !10978, inlinedAt: !11071)
!11074 = !DILocation(line: 0, scope: !10987, inlinedAt: !11073)
!11075 = !DILocation(line: 0, scope: !11066)
!11076 = !DILocation(line: 252, column: 17, scope: !11066)
!11077 = !DILocation(line: 252, column: 29, scope: !11066)
!11078 = !DILocation(line: 252, column: 27, scope: !11066)
!11079 = !DILocation(line: 0, scope: !11029, inlinedAt: !11080)
!11080 = distinct !DILocation(line: 254, column: 2, scope: !11066)
!11081 = !DILocation(line: 0, scope: !11037, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 215, column: 2, scope: !11029, inlinedAt: !11080)
!11083 = !DILocation(line: 95, column: 2, scope: !11037, inlinedAt: !11082)
!11084 = !DILocation(line: 255, column: 2, scope: !11066)
!11085 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1862, file: !1862, line: 258, type: !3255, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !317)
!11086 = !DILocation(line: 260, column: 6, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11085, file: !1862, line: 260, column: 6)
!11088 = !DILocation(line: 260, column: 16, scope: !11087)
!11089 = !DILocation(line: 260, column: 6, scope: !11085)
!11090 = !DILocation(line: 261, column: 17, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11087, file: !1862, line: 260, column: 34)
!11092 = !DILocation(line: 262, column: 2, scope: !11091)
!11093 = !DILocation(line: 263, column: 1, scope: !11085)
!11094 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1862, file: !1862, line: 265, type: !3255, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !317)
!11095 = !DILocation(line: 267, column: 16, scope: !11094)
!11096 = !DILocation(line: 268, column: 1, scope: !11094)
!11097 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11098, file: !11098, line: 9, type: !11099, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !11122)
!11098 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!103, !11101, !154, !11121}
!11101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11102, size: 32)
!11102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11103)
!11103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1667, line: 60, size: 64, elements: !11104)
!11104 = !{!11105, !11120}
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11103, file: !1667, line: 69, baseType: !11106, size: 32)
!11106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11107, size: 32)
!11107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11108)
!11108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1667, line: 50, size: 64, elements: !11109)
!11109 = !{!11110, !11118, !11119}
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11108, file: !1667, line: 52, baseType: !11111, size: 32)
!11111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11112, size: 32)
!11112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11113)
!11113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1678, line: 37, baseType: !11114)
!11114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1678, line: 32, size: 64, elements: !11115)
!11115 = !{!11116, !11117}
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11114, file: !1678, line: 34, baseType: !121, size: 32)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11114, file: !1678, line: 36, baseType: !121, size: 32, offset: 32)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11108, file: !1667, line: 54, baseType: !154, size: 8, offset: 32)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11108, file: !1667, line: 56, baseType: !154, size: 8, offset: 40)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11103, file: !1667, line: 71, baseType: !154, size: 8, offset: 32)
!11121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11106, size: 32)
!11122 = !{!11123, !11124, !11125}
!11123 = !DILocalVariable(name: "config", arg: 1, scope: !11097, file: !11098, line: 9, type: !11101)
!11124 = !DILocalVariable(name: "id", arg: 2, scope: !11097, file: !11098, line: 9, type: !154)
!11125 = !DILocalVariable(name: "state", arg: 3, scope: !11097, file: !11098, line: 10, type: !11121)
!11126 = !DILocation(line: 0, scope: !11097)
!11127 = !DILocation(line: 12, column: 20, scope: !11097)
!11128 = !DILocation(line: 13, column: 27, scope: !11097)
!11129 = !DILocation(line: 13, column: 42, scope: !11097)
!11130 = !DILocation(line: 13, column: 19, scope: !11097)
!11131 = !DILocation(line: 13, column: 16, scope: !11097)
!11132 = !DILocation(line: 13, column: 2, scope: !11097)
!11133 = distinct !{!11133, !11132, !11134}
!11134 = !DILocation(line: 19, column: 2, scope: !11097)
!11135 = !DILocation(line: 14, column: 23, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !11098, line: 14, column: 7)
!11137 = distinct !DILexicalBlock(scope: !11097, file: !11098, line: 13, column: 54)
!11138 = !DILocation(line: 14, column: 10, scope: !11136)
!11139 = !DILocation(line: 18, column: 11, scope: !11137)
!11140 = !DILocation(line: 14, column: 7, scope: !11137)
!11141 = !DILocation(line: 22, column: 1, scope: !11097)
!11142 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1979, file: !1979, line: 193, type: !11143, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11152)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!103, !11145, !154, !22}
!11145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11146, size: 32)
!11146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11147)
!11147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1678, line: 37, baseType: !11148)
!11148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1678, line: 32, size: 64, elements: !11149)
!11149 = !{!11150, !11151}
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11148, file: !1678, line: 34, baseType: !121, size: 32)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11148, file: !1678, line: 36, baseType: !121, size: 32, offset: 32)
!11152 = !{!11153, !11154, !11155, !11156, !11157, !11158, !11159, !11160, !11162}
!11153 = !DILocalVariable(name: "pins", arg: 1, scope: !11142, file: !1979, line: 193, type: !11145)
!11154 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11142, file: !1979, line: 193, type: !154)
!11155 = !DILocalVariable(name: "reg", arg: 3, scope: !11142, file: !1979, line: 194, type: !22)
!11156 = !DILocalVariable(name: "pin", scope: !11142, file: !1979, line: 196, type: !121)
!11157 = !DILocalVariable(name: "mux", scope: !11142, file: !1979, line: 196, type: !121)
!11158 = !DILocalVariable(name: "pin_cgf", scope: !11142, file: !1979, line: 197, type: !121)
!11159 = !DILocalVariable(name: "ret", scope: !11142, file: !1979, line: 198, type: !103)
!11160 = !DILocalVariable(name: "i", scope: !11161, file: !1979, line: 209, type: !154)
!11161 = distinct !DILexicalBlock(scope: !11142, file: !1979, line: 209, column: 2)
!11162 = !DILocalVariable(name: "gpio_out", scope: !11163, file: !1979, line: 239, type: !121)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1979, line: 238, column: 55)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !1979, line: 238, column: 14)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !1979, line: 236, column: 14)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1979, line: 234, column: 7)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !1979, line: 209, column: 41)
!11168 = distinct !DILexicalBlock(scope: !11161, file: !1979, line: 209, column: 2)
!11169 = !DILocation(line: 0, scope: !11142)
!11170 = !DILocation(line: 0, scope: !11161)
!11171 = !DILocation(line: 209, column: 25, scope: !11168)
!11172 = !DILocation(line: 209, column: 2, scope: !11161)
!11173 = distinct !{!11173, !11172, !11174}
!11174 = !DILocation(line: 259, column: 2, scope: !11161)
!11175 = !DILocation(line: 210, column: 17, scope: !11167)
!11176 = !DILocation(line: 234, column: 7, scope: !11166)
!11177 = !DILocation(line: 234, column: 33, scope: !11166)
!11178 = !DILocation(line: 234, column: 7, scope: !11167)
!11179 = !DILocation(line: 235, column: 22, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11166, file: !1979, line: 234, column: 49)
!11181 = !DILocation(line: 235, column: 29, scope: !11180)
!11182 = !DILocation(line: 236, column: 3, scope: !11180)
!11183 = !DILocation(line: 236, column: 14, scope: !11166)
!11184 = !DILocation(line: 239, column: 32, scope: !11163)
!11185 = !DILocation(line: 0, scope: !11163)
!11186 = !DILocation(line: 241, column: 8, scope: !11163)
!11187 = !DILocation(line: 246, column: 3, scope: !11163)
!11188 = !DILocation(line: 252, column: 9, scope: !11167)
!11189 = !DILocation(line: 255, column: 9, scope: !11167)
!11190 = !DILocation(line: 256, column: 11, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11167, file: !1979, line: 256, column: 7)
!11192 = !DILocation(line: 209, column: 37, scope: !11168)
!11193 = !DILocation(line: 256, column: 7, scope: !11167)
!11194 = !DILocation(line: 262, column: 1, scope: !11142)
!11195 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1979, file: !1979, line: 176, type: !11196, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11198)
!11196 = !DISubroutineType(types: !11197)
!11197 = !{!103, !121, !121, !121}
!11198 = !{!11199, !11200, !11201, !11202}
!11199 = !DILocalVariable(name: "pin", arg: 1, scope: !11195, file: !1979, line: 176, type: !121)
!11200 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11195, file: !1979, line: 176, type: !121)
!11201 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11195, file: !1979, line: 176, type: !121)
!11202 = !DILocalVariable(name: "port_device", scope: !11195, file: !1979, line: 178, type: !1909)
!11203 = !DILocation(line: 0, scope: !11195)
!11204 = !DILocation(line: 180, column: 22, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11195, file: !1979, line: 180, column: 6)
!11206 = !DILocation(line: 180, column: 6, scope: !11195)
!11207 = !DILocation(line: 180, column: 6, scope: !11205)
!11208 = !DILocation(line: 184, column: 16, scope: !11195)
!11209 = !DILocation(line: 186, column: 19, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11195, file: !1979, line: 186, column: 6)
!11211 = !DILocation(line: 186, column: 28, scope: !11210)
!11212 = !DILocation(line: 186, column: 33, scope: !11210)
!11213 = !DILocation(line: 186, column: 6, scope: !11195)
!11214 = !DILocation(line: 190, column: 43, scope: !11195)
!11215 = !DILocation(line: 190, column: 9, scope: !11195)
!11216 = !DILocation(line: 190, column: 2, scope: !11195)
!11217 = !DILocation(line: 191, column: 1, scope: !11195)
!11218 = distinct !DISubprogram(name: "device_is_ready", scope: !8242, file: !8242, line: 47, type: !11219, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11221)
!11219 = !DISubroutineType(types: !11220)
!11220 = !{!157, !1909}
!11221 = !{!11222}
!11222 = !DILocalVariable(name: "dev", arg: 1, scope: !11218, file: !8242, line: 47, type: !1909)
!11223 = !DILocation(line: 0, scope: !11218)
!11224 = !DILocation(line: 55, column: 2, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11218, file: !8242, line: 55, column: 2)
!11226 = !{i64 2149513023}
!11227 = !DILocation(line: 56, column: 9, scope: !11218)
!11228 = !DILocation(line: 56, column: 2, scope: !11218)
!11229 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11219, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11230)
!11230 = !{!11231}
!11231 = !DILocalVariable(name: "dev", arg: 1, scope: !11229, file: !141, line: 730, type: !1909)
!11232 = !DILocation(line: 0, scope: !11229)
!11233 = !DILocation(line: 732, column: 9, scope: !11229)
!11234 = !DILocation(line: 732, column: 2, scope: !11229)
!11235 = distinct !DISubprogram(name: "SystemInit", scope: !2031, file: !2031, line: 167, type: !3255, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !317)
!11236 = !DILocation(line: 182, column: 1, scope: !11235)
!11237 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2031, file: !2031, line: 220, type: !3255, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1987, retainedNodes: !11238)
!11238 = !{!11239, !11240, !11241, !11242, !11243}
!11239 = !DILocalVariable(name: "tmp", scope: !11237, file: !2031, line: 222, type: !121)
!11240 = !DILocalVariable(name: "pllvco", scope: !11237, file: !2031, line: 222, type: !121)
!11241 = !DILocalVariable(name: "pllp", scope: !11237, file: !2031, line: 222, type: !121)
!11242 = !DILocalVariable(name: "pllsource", scope: !11237, file: !2031, line: 222, type: !121)
!11243 = !DILocalVariable(name: "pllm", scope: !11237, file: !2031, line: 222, type: !121)
!11244 = !DILocation(line: 0, scope: !11237)
!11245 = !DILocation(line: 225, column: 14, scope: !11237)
!11246 = !DILocation(line: 225, column: 19, scope: !11237)
!11247 = !DILocation(line: 227, column: 3, scope: !11237)
!11248 = !DILocation(line: 240, column: 25, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11237, file: !2031, line: 228, column: 3)
!11250 = !DILocation(line: 241, column: 19, scope: !11249)
!11251 = !DILocation(line: 241, column: 27, scope: !11249)
!11252 = !DILocation(line: 0, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11249, file: !2031, line: 243, column: 11)
!11254 = !DILocation(line: 254, column: 22, scope: !11249)
!11255 = !DILocation(line: 254, column: 62, scope: !11249)
!11256 = !DILocation(line: 255, column: 31, scope: !11249)
!11257 = !DILocation(line: 256, column: 7, scope: !11249)
!11258 = !DILocation(line: 0, scope: !11249)
!11259 = !DILocation(line: 263, column: 30, scope: !11237)
!11260 = !DILocation(line: 263, column: 52, scope: !11237)
!11261 = !DILocation(line: 263, column: 9, scope: !11237)
!11262 = !DILocation(line: 265, column: 19, scope: !11237)
!11263 = !DILocation(line: 266, column: 1, scope: !11237)
!11264 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11265, file: !11265, line: 87, type: !11266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11305)
!11265 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!11268, !11269}
!11268 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3046, line: 44, baseType: !3045)
!11269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11270, size: 32)
!11270 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11271, line: 172, baseType: !11272)
!11271 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11271, line: 121, size: 736, elements: !11273)
!11273 = !{!11274, !11275, !11284, !11292, !11293, !11294, !11295, !11296, !11297, !11298, !11299, !11300, !11301, !11302, !11303, !11304}
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11272, file: !11271, line: 123, baseType: !121, size: 32)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11272, file: !11271, line: 126, baseType: !11276, size: 160, offset: 32)
!11276 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11271, line: 97, baseType: !11277)
!11277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11271, line: 79, size: 160, elements: !11278)
!11278 = !{!11279, !11280, !11281, !11282, !11283}
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11277, file: !11271, line: 81, baseType: !121, size: 32)
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11277, file: !11271, line: 84, baseType: !121, size: 32, offset: 32)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11277, file: !11271, line: 87, baseType: !121, size: 32, offset: 64)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11277, file: !11271, line: 90, baseType: !121, size: 32, offset: 96)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11277, file: !11271, line: 94, baseType: !121, size: 32, offset: 128)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11272, file: !11271, line: 129, baseType: !11285, size: 128, offset: 192)
!11285 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11271, line: 116, baseType: !11286)
!11286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11271, line: 102, size: 128, elements: !11287)
!11287 = !{!11288, !11289, !11290, !11291}
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11286, file: !11271, line: 104, baseType: !121, size: 32)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11286, file: !11271, line: 107, baseType: !121, size: 32, offset: 32)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11286, file: !11271, line: 110, baseType: !121, size: 32, offset: 64)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11286, file: !11271, line: 113, baseType: !121, size: 32, offset: 96)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11272, file: !11271, line: 132, baseType: !121, size: 32, offset: 320)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11272, file: !11271, line: 136, baseType: !121, size: 32, offset: 352)
!11294 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11272, file: !11271, line: 140, baseType: !121, size: 32, offset: 384)
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11272, file: !11271, line: 143, baseType: !121, size: 32, offset: 416)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11272, file: !11271, line: 146, baseType: !121, size: 32, offset: 448)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11272, file: !11271, line: 149, baseType: !121, size: 32, offset: 480)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11272, file: !11271, line: 152, baseType: !121, size: 32, offset: 512)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11272, file: !11271, line: 155, baseType: !121, size: 32, offset: 544)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11272, file: !11271, line: 158, baseType: !121, size: 32, offset: 576)
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11272, file: !11271, line: 161, baseType: !121, size: 32, offset: 608)
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11272, file: !11271, line: 164, baseType: !121, size: 32, offset: 640)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11272, file: !11271, line: 167, baseType: !121, size: 32, offset: 672)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11272, file: !11271, line: 170, baseType: !154, size: 8, offset: 704)
!11305 = !{!11306, !11307, !11308, !11309, !11310, !11311, !11312, !11313, !11314, !11315, !11316}
!11306 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11264, file: !11265, line: 87, type: !11269)
!11307 = !DILocalVariable(name: "tickstart", scope: !11264, file: !11265, line: 89, type: !121)
!11308 = !DILocalVariable(name: "tmpreg1", scope: !11264, file: !11265, line: 90, type: !121)
!11309 = !DILocalVariable(name: "plli2sp", scope: !11264, file: !11265, line: 91, type: !121)
!11310 = !DILocalVariable(name: "plli2sq", scope: !11264, file: !11265, line: 92, type: !121)
!11311 = !DILocalVariable(name: "plli2sr", scope: !11264, file: !11265, line: 93, type: !121)
!11312 = !DILocalVariable(name: "pllsaip", scope: !11264, file: !11265, line: 94, type: !121)
!11313 = !DILocalVariable(name: "pllsaiq", scope: !11264, file: !11265, line: 95, type: !121)
!11314 = !DILocalVariable(name: "plli2sused", scope: !11264, file: !11265, line: 96, type: !121)
!11315 = !DILocalVariable(name: "pllsaiused", scope: !11264, file: !11265, line: 97, type: !121)
!11316 = !DILocalVariable(name: "tmpreg", scope: !11317, file: !11265, line: 184, type: !120)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !11265, line: 184, column: 5)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !11265, line: 179, column: 3)
!11319 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 178, column: 6)
!11320 = !DILocation(line: 0, scope: !11264)
!11321 = !DILocation(line: 103, column: 23, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 103, column: 6)
!11323 = !DILocation(line: 103, column: 45, scope: !11322)
!11324 = !DILocation(line: 103, column: 71, scope: !11322)
!11325 = !DILocation(line: 103, column: 6, scope: !11264)
!11326 = !DILocation(line: 109, column: 5, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11322, file: !11265, line: 104, column: 3)
!11328 = !DILocation(line: 111, column: 23, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11327, file: !11265, line: 111, column: 8)
!11330 = !DILocation(line: 111, column: 45, scope: !11329)
!11331 = !DILocation(line: 111, column: 8, scope: !11327)
!11332 = !DILocation(line: 119, column: 23, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 119, column: 6)
!11334 = !DILocation(line: 119, column: 45, scope: !11333)
!11335 = !DILocation(line: 119, column: 71, scope: !11333)
!11336 = !DILocation(line: 119, column: 6, scope: !11264)
!11337 = !DILocation(line: 125, column: 5, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !11265, line: 120, column: 3)
!11339 = !DILocation(line: 127, column: 23, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11338, file: !11265, line: 127, column: 8)
!11341 = !DILocation(line: 127, column: 45, scope: !11340)
!11342 = !DILocation(line: 127, column: 8, scope: !11338)
!11343 = !DILocation(line: 135, column: 23, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 135, column: 6)
!11345 = !DILocation(line: 135, column: 45, scope: !11344)
!11346 = !DILocation(line: 135, column: 67, scope: !11344)
!11347 = !DILocation(line: 135, column: 6, scope: !11264)
!11348 = !DILocation(line: 141, column: 5, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11344, file: !11265, line: 136, column: 3)
!11350 = !DILocation(line: 143, column: 23, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11349, file: !11265, line: 143, column: 8)
!11352 = !DILocation(line: 143, column: 42, scope: !11351)
!11353 = !DILocation(line: 143, column: 8, scope: !11349)
!11354 = !DILocation(line: 148, column: 42, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11349, file: !11265, line: 148, column: 8)
!11356 = !DILocation(line: 148, column: 8, scope: !11349)
!11357 = !DILocation(line: 156, column: 23, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 156, column: 6)
!11359 = !DILocation(line: 156, column: 45, scope: !11358)
!11360 = !DILocation(line: 156, column: 67, scope: !11358)
!11361 = !DILocation(line: 156, column: 6, scope: !11264)
!11362 = !DILocation(line: 162, column: 5, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11358, file: !11265, line: 157, column: 3)
!11364 = !DILocation(line: 165, column: 23, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11363, file: !11265, line: 165, column: 8)
!11366 = !DILocation(line: 165, column: 42, scope: !11365)
!11367 = !DILocation(line: 165, column: 8, scope: !11363)
!11368 = !DILocation(line: 170, column: 42, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !11265, line: 170, column: 8)
!11370 = !DILocation(line: 170, column: 8, scope: !11363)
!11371 = !DILocation(line: 178, column: 23, scope: !11319)
!11372 = !DILocation(line: 178, column: 45, scope: !11319)
!11373 = !DILocation(line: 178, column: 66, scope: !11319)
!11374 = !DILocation(line: 178, column: 6, scope: !11264)
!11375 = !DILocation(line: 184, column: 5, scope: !11317)
!11376 = !DILocation(line: 184, column: 5, scope: !11318)
!11377 = !DILocation(line: 187, column: 13, scope: !11318)
!11378 = !DILocation(line: 190, column: 17, scope: !11318)
!11379 = !DILocation(line: 192, column: 5, scope: !11318)
!11380 = !DILocation(line: 192, column: 17, scope: !11318)
!11381 = !DILocation(line: 192, column: 20, scope: !11318)
!11382 = !DILocation(line: 192, column: 34, scope: !11318)
!11383 = !DILocation(line: 194, column: 11, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !11265, line: 194, column: 10)
!11385 = distinct !DILexicalBlock(scope: !11318, file: !11265, line: 193, column: 5)
!11386 = !DILocation(line: 194, column: 25, scope: !11384)
!11387 = !DILocation(line: 194, column: 39, scope: !11384)
!11388 = !DILocation(line: 194, column: 10, scope: !11385)
!11389 = distinct !{!11389, !11379, !11390}
!11390 = !DILocation(line: 198, column: 5, scope: !11318)
!11391 = !DILocation(line: 200, column: 21, scope: !11318)
!11392 = !DILocation(line: 200, column: 26, scope: !11318)
!11393 = !DILocation(line: 201, column: 17, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11318, file: !11265, line: 201, column: 8)
!11395 = !DILocation(line: 201, column: 33, scope: !11394)
!11396 = !DILocation(line: 201, column: 66, scope: !11394)
!11397 = !DILocation(line: 201, column: 84, scope: !11394)
!11398 = !DILocation(line: 201, column: 47, scope: !11394)
!11399 = !DILocation(line: 201, column: 8, scope: !11318)
!11400 = !DILocation(line: 204, column: 23, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11394, file: !11265, line: 202, column: 5)
!11402 = !DILocation(line: 204, column: 28, scope: !11401)
!11403 = !DILocation(line: 206, column: 7, scope: !11401)
!11404 = !DILocation(line: 207, column: 7, scope: !11401)
!11405 = !DILocation(line: 209, column: 17, scope: !11401)
!11406 = !DILocation(line: 212, column: 10, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11401, file: !11265, line: 212, column: 10)
!11408 = !DILocation(line: 212, column: 10, scope: !11401)
!11409 = !DILocation(line: 215, column: 21, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11407, file: !11265, line: 213, column: 7)
!11411 = !DILocation(line: 218, column: 9, scope: !11410)
!11412 = !DILocation(line: 218, column: 15, scope: !11410)
!11413 = !DILocation(line: 218, column: 51, scope: !11410)
!11414 = !DILocation(line: 220, column: 15, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !11265, line: 220, column: 14)
!11416 = distinct !DILexicalBlock(scope: !11410, file: !11265, line: 219, column: 9)
!11417 = !DILocation(line: 220, column: 29, scope: !11415)
!11418 = !DILocation(line: 220, column: 43, scope: !11415)
!11419 = !DILocation(line: 220, column: 14, scope: !11416)
!11420 = distinct !{!11420, !11411, !11421}
!11421 = !DILocation(line: 224, column: 9, scope: !11410)
!11422 = !DILocation(line: 227, column: 5, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11318, file: !11265, line: 227, column: 5)
!11424 = !DILocation(line: 232, column: 23, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 232, column: 6)
!11426 = !DILocation(line: 228, column: 3, scope: !11318)
!11427 = !DILocation(line: 232, column: 45, scope: !11425)
!11428 = !DILocation(line: 232, column: 66, scope: !11425)
!11429 = !DILocation(line: 232, column: 6, scope: !11264)
!11430 = !DILocation(line: 235, column: 5, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11425, file: !11265, line: 233, column: 3)
!11432 = !DILocation(line: 240, column: 23, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 240, column: 6)
!11434 = !DILocation(line: 236, column: 3, scope: !11431)
!11435 = !DILocation(line: 240, column: 45, scope: !11433)
!11436 = !DILocation(line: 240, column: 70, scope: !11433)
!11437 = !DILocation(line: 240, column: 6, scope: !11264)
!11438 = !DILocation(line: 246, column: 5, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !11265, line: 241, column: 3)
!11440 = !DILocation(line: 251, column: 23, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 251, column: 6)
!11442 = !DILocation(line: 247, column: 3, scope: !11439)
!11443 = !DILocation(line: 251, column: 45, scope: !11441)
!11444 = !DILocation(line: 251, column: 66, scope: !11441)
!11445 = !DILocation(line: 251, column: 6, scope: !11264)
!11446 = !DILocation(line: 257, column: 5, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11441, file: !11265, line: 252, column: 3)
!11448 = !DILocation(line: 262, column: 23, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 262, column: 6)
!11450 = !DILocation(line: 258, column: 3, scope: !11447)
!11451 = !DILocation(line: 262, column: 45, scope: !11449)
!11452 = !DILocation(line: 262, column: 68, scope: !11449)
!11453 = !DILocation(line: 262, column: 6, scope: !11264)
!11454 = !DILocation(line: 268, column: 5, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11449, file: !11265, line: 263, column: 3)
!11456 = !DILocation(line: 271, column: 23, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11455, file: !11265, line: 271, column: 8)
!11458 = !DILocation(line: 271, column: 43, scope: !11457)
!11459 = !DILocation(line: 271, column: 8, scope: !11455)
!11460 = !DILocation(line: 279, column: 23, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 279, column: 6)
!11462 = !DILocation(line: 279, column: 45, scope: !11461)
!11463 = !DILocation(line: 279, column: 67, scope: !11461)
!11464 = !DILocation(line: 279, column: 6, scope: !11264)
!11465 = !DILocation(line: 285, column: 5, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11461, file: !11265, line: 280, column: 3)
!11467 = !DILocation(line: 290, column: 23, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 290, column: 6)
!11469 = !DILocation(line: 286, column: 3, scope: !11466)
!11470 = !DILocation(line: 290, column: 45, scope: !11468)
!11471 = !DILocation(line: 290, column: 70, scope: !11468)
!11472 = !DILocation(line: 290, column: 6, scope: !11264)
!11473 = !DILocation(line: 296, column: 5, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11468, file: !11265, line: 291, column: 3)
!11475 = !DILocation(line: 298, column: 23, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11474, file: !11265, line: 298, column: 8)
!11477 = !DILocation(line: 298, column: 43, scope: !11476)
!11478 = !DILocation(line: 298, column: 8, scope: !11474)
!11479 = !DILocation(line: 308, column: 44, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 308, column: 6)
!11481 = !DILocation(line: 308, column: 18, scope: !11480)
!11482 = !DILocation(line: 308, column: 25, scope: !11480)
!11483 = !DILocation(line: 308, column: 65, scope: !11480)
!11484 = !DILocation(line: 308, column: 6, scope: !11264)
!11485 = !DILocation(line: 311, column: 5, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11480, file: !11265, line: 309, column: 3)
!11487 = !DILocation(line: 313, column: 17, scope: !11486)
!11488 = !DILocation(line: 315, column: 5, scope: !11486)
!11489 = !DILocation(line: 315, column: 11, scope: !11486)
!11490 = !DILocation(line: 317, column: 11, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11492, file: !11265, line: 317, column: 10)
!11492 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 316, column: 5)
!11493 = !DILocation(line: 317, column: 25, scope: !11491)
!11494 = !DILocation(line: 317, column: 39, scope: !11491)
!11495 = !DILocation(line: 317, column: 10, scope: !11492)
!11496 = distinct !{!11496, !11488, !11497}
!11497 = !DILocation(line: 322, column: 5, scope: !11486)
!11498 = !DILocation(line: 329, column: 27, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 329, column: 8)
!11500 = !DILocation(line: 329, column: 49, scope: !11499)
!11501 = !DILocation(line: 329, column: 75, scope: !11499)
!11502 = !DILocation(line: 329, column: 102, scope: !11499)
!11503 = !DILocation(line: 329, column: 121, scope: !11499)
!11504 = !DILocation(line: 329, column: 143, scope: !11499)
!11505 = !DILocation(line: 329, column: 176, scope: !11499)
!11506 = !DILocation(line: 330, column: 49, scope: !11499)
!11507 = !DILocation(line: 330, column: 75, scope: !11499)
!11508 = !DILocation(line: 330, column: 102, scope: !11499)
!11509 = !DILocation(line: 330, column: 121, scope: !11499)
!11510 = !DILocation(line: 330, column: 143, scope: !11499)
!11511 = !DILocation(line: 329, column: 8, scope: !11486)
!11512 = !DILocation(line: 336, column: 26, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11499, file: !11265, line: 331, column: 5)
!11514 = !DILocation(line: 336, column: 100, scope: !11513)
!11515 = !DILocation(line: 337, column: 24, scope: !11513)
!11516 = !DILocation(line: 337, column: 61, scope: !11513)
!11517 = !DILocation(line: 341, column: 7, scope: !11513)
!11518 = !DILocation(line: 345, column: 27, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 345, column: 8)
!11520 = !DILocation(line: 342, column: 5, scope: !11513)
!11521 = !DILocation(line: 345, column: 49, scope: !11519)
!11522 = !DILocation(line: 345, column: 71, scope: !11519)
!11523 = !DILocation(line: 345, column: 94, scope: !11519)
!11524 = !DILocation(line: 345, column: 113, scope: !11519)
!11525 = !DILocation(line: 345, column: 132, scope: !11519)
!11526 = !DILocation(line: 345, column: 162, scope: !11519)
!11527 = !DILocation(line: 346, column: 49, scope: !11519)
!11528 = !DILocation(line: 346, column: 71, scope: !11519)
!11529 = !DILocation(line: 346, column: 94, scope: !11519)
!11530 = !DILocation(line: 346, column: 113, scope: !11519)
!11531 = !DILocation(line: 346, column: 132, scope: !11519)
!11532 = !DILocation(line: 345, column: 8, scope: !11486)
!11533 = !DILocation(line: 354, column: 26, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11519, file: !11265, line: 347, column: 5)
!11535 = !DILocation(line: 354, column: 100, scope: !11534)
!11536 = !DILocation(line: 355, column: 24, scope: !11534)
!11537 = !DILocation(line: 355, column: 61, scope: !11534)
!11538 = !DILocation(line: 360, column: 7, scope: !11534)
!11539 = !DILocation(line: 363, column: 7, scope: !11534)
!11540 = !DILocation(line: 367, column: 26, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 367, column: 8)
!11542 = !DILocation(line: 364, column: 5, scope: !11534)
!11543 = !DILocation(line: 367, column: 48, scope: !11541)
!11544 = !DILocation(line: 367, column: 73, scope: !11541)
!11545 = !DILocation(line: 367, column: 99, scope: !11541)
!11546 = !DILocation(line: 367, column: 118, scope: !11541)
!11547 = !DILocation(line: 367, column: 138, scope: !11541)
!11548 = !DILocation(line: 367, column: 8, scope: !11486)
!11549 = !DILocation(line: 372, column: 26, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11541, file: !11265, line: 368, column: 5)
!11551 = !DILocation(line: 373, column: 24, scope: !11550)
!11552 = !DILocation(line: 373, column: 61, scope: !11550)
!11553 = !DILocation(line: 377, column: 7, scope: !11550)
!11554 = !DILocation(line: 381, column: 24, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 381, column: 8)
!11556 = !DILocation(line: 378, column: 5, scope: !11550)
!11557 = !DILocation(line: 381, column: 45, scope: !11555)
!11558 = !DILocation(line: 381, column: 69, scope: !11555)
!11559 = !DILocation(line: 381, column: 8, scope: !11486)
!11560 = !DILocation(line: 390, column: 7, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11555, file: !11265, line: 382, column: 5)
!11562 = !DILocation(line: 391, column: 5, scope: !11561)
!11563 = !DILocation(line: 394, column: 5, scope: !11486)
!11564 = !DILocation(line: 396, column: 17, scope: !11486)
!11565 = !DILocation(line: 398, column: 5, scope: !11486)
!11566 = !DILocation(line: 398, column: 11, scope: !11486)
!11567 = !DILocation(line: 398, column: 51, scope: !11486)
!11568 = !DILocation(line: 400, column: 11, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !11265, line: 400, column: 10)
!11570 = distinct !DILexicalBlock(scope: !11486, file: !11265, line: 399, column: 5)
!11571 = !DILocation(line: 400, column: 25, scope: !11569)
!11572 = !DILocation(line: 400, column: 39, scope: !11569)
!11573 = !DILocation(line: 400, column: 10, scope: !11570)
!11574 = distinct !{!11574, !11565, !11575}
!11575 = !DILocation(line: 405, column: 5, scope: !11486)
!11576 = !DILocation(line: 411, column: 17, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11264, file: !11265, line: 411, column: 6)
!11578 = !DILocation(line: 411, column: 6, scope: !11264)
!11579 = !DILocation(line: 414, column: 5, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11577, file: !11265, line: 412, column: 3)
!11581 = !DILocation(line: 416, column: 17, scope: !11580)
!11582 = !DILocation(line: 418, column: 5, scope: !11580)
!11583 = !DILocation(line: 418, column: 11, scope: !11580)
!11584 = !DILocation(line: 420, column: 11, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !11265, line: 420, column: 10)
!11586 = distinct !DILexicalBlock(scope: !11580, file: !11265, line: 419, column: 5)
!11587 = !DILocation(line: 420, column: 25, scope: !11585)
!11588 = !DILocation(line: 420, column: 39, scope: !11585)
!11589 = !DILocation(line: 420, column: 10, scope: !11586)
!11590 = distinct !{!11590, !11582, !11591}
!11591 = !DILocation(line: 425, column: 5, scope: !11580)
!11592 = !DILocation(line: 432, column: 27, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11580, file: !11265, line: 432, column: 8)
!11594 = !DILocation(line: 432, column: 49, scope: !11593)
!11595 = !DILocation(line: 432, column: 71, scope: !11593)
!11596 = !DILocation(line: 432, column: 94, scope: !11593)
!11597 = !DILocation(line: 432, column: 113, scope: !11593)
!11598 = !DILocation(line: 432, column: 132, scope: !11593)
!11599 = !DILocation(line: 432, column: 162, scope: !11593)
!11600 = !DILocation(line: 433, column: 49, scope: !11593)
!11601 = !DILocation(line: 433, column: 71, scope: !11593)
!11602 = !DILocation(line: 433, column: 94, scope: !11593)
!11603 = !DILocation(line: 433, column: 113, scope: !11593)
!11604 = !DILocation(line: 433, column: 132, scope: !11593)
!11605 = !DILocation(line: 432, column: 8, scope: !11580)
!11606 = !DILocation(line: 441, column: 26, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11593, file: !11265, line: 434, column: 5)
!11608 = !DILocation(line: 441, column: 100, scope: !11607)
!11609 = !DILocation(line: 445, column: 7, scope: !11607)
!11610 = !DILocation(line: 448, column: 7, scope: !11607)
!11611 = !DILocation(line: 453, column: 26, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11580, file: !11265, line: 453, column: 8)
!11613 = !DILocation(line: 449, column: 5, scope: !11607)
!11614 = !DILocation(line: 453, column: 48, scope: !11612)
!11615 = !DILocation(line: 453, column: 71, scope: !11612)
!11616 = !DILocation(line: 453, column: 95, scope: !11612)
!11617 = !DILocation(line: 453, column: 114, scope: !11612)
!11618 = !DILocation(line: 453, column: 134, scope: !11612)
!11619 = !DILocation(line: 453, column: 8, scope: !11580)
!11620 = !DILocation(line: 458, column: 24, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11612, file: !11265, line: 454, column: 5)
!11622 = !DILocation(line: 458, column: 61, scope: !11621)
!11623 = !DILocation(line: 462, column: 7, scope: !11621)
!11624 = !DILocation(line: 463, column: 5, scope: !11621)
!11625 = !DILocation(line: 466, column: 5, scope: !11580)
!11626 = !DILocation(line: 468, column: 17, scope: !11580)
!11627 = !DILocation(line: 470, column: 5, scope: !11580)
!11628 = !DILocation(line: 470, column: 11, scope: !11580)
!11629 = !DILocation(line: 470, column: 39, scope: !11580)
!11630 = !DILocation(line: 472, column: 11, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !11265, line: 472, column: 10)
!11632 = distinct !DILexicalBlock(scope: !11580, file: !11265, line: 471, column: 5)
!11633 = !DILocation(line: 472, column: 25, scope: !11631)
!11634 = !DILocation(line: 472, column: 39, scope: !11631)
!11635 = !DILocation(line: 472, column: 10, scope: !11632)
!11636 = distinct !{!11636, !11627, !11637}
!11637 = !DILocation(line: 477, column: 5, scope: !11580)
!11638 = !DILocation(line: 480, column: 1, scope: !11264)
!11639 = !DISubprogram(name: "HAL_GetTick", scope: !11640, file: !11640, line: 234, type: !6114, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11640 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11641 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11265, file: !11265, line: 489, type: !11642, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11644)
!11642 = !DISubroutineType(types: !11643)
!11643 = !{null, !11269}
!11644 = !{!11645, !11646}
!11645 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11641, file: !11265, line: 489, type: !11269)
!11646 = !DILocalVariable(name: "tempreg", scope: !11641, file: !11265, line: 491, type: !121)
!11647 = !DILocation(line: 0, scope: !11641)
!11648 = !DILocation(line: 494, column: 18, scope: !11641)
!11649 = !DILocation(line: 494, column: 39, scope: !11641)
!11650 = !DILocation(line: 502, column: 52, scope: !11641)
!11651 = !DILocation(line: 502, column: 63, scope: !11641)
!11652 = !DILocation(line: 502, column: 25, scope: !11641)
!11653 = !DILocation(line: 502, column: 33, scope: !11641)
!11654 = !DILocation(line: 503, column: 52, scope: !11641)
!11655 = !DILocation(line: 503, column: 89, scope: !11641)
!11656 = !DILocation(line: 503, column: 25, scope: !11641)
!11657 = !DILocation(line: 503, column: 33, scope: !11641)
!11658 = !DILocation(line: 504, column: 54, scope: !11641)
!11659 = !DILocation(line: 504, column: 128, scope: !11641)
!11660 = !DILocation(line: 504, column: 25, scope: !11641)
!11661 = !DILocation(line: 504, column: 33, scope: !11641)
!11662 = !DILocation(line: 505, column: 52, scope: !11641)
!11663 = !DILocation(line: 505, column: 89, scope: !11641)
!11664 = !DILocation(line: 505, column: 25, scope: !11641)
!11665 = !DILocation(line: 505, column: 33, scope: !11641)
!11666 = !DILocation(line: 506, column: 52, scope: !11641)
!11667 = !DILocation(line: 506, column: 89, scope: !11641)
!11668 = !DILocation(line: 506, column: 25, scope: !11641)
!11669 = !DILocation(line: 506, column: 33, scope: !11641)
!11670 = !DILocation(line: 508, column: 52, scope: !11641)
!11671 = !DILocation(line: 508, column: 63, scope: !11641)
!11672 = !DILocation(line: 508, column: 25, scope: !11641)
!11673 = !DILocation(line: 508, column: 33, scope: !11641)
!11674 = !DILocation(line: 509, column: 52, scope: !11641)
!11675 = !DILocation(line: 509, column: 89, scope: !11641)
!11676 = !DILocation(line: 509, column: 25, scope: !11641)
!11677 = !DILocation(line: 509, column: 33, scope: !11641)
!11678 = !DILocation(line: 510, column: 54, scope: !11641)
!11679 = !DILocation(line: 510, column: 128, scope: !11641)
!11680 = !DILocation(line: 510, column: 25, scope: !11641)
!11681 = !DILocation(line: 510, column: 33, scope: !11641)
!11682 = !DILocation(line: 511, column: 52, scope: !11641)
!11683 = !DILocation(line: 511, column: 89, scope: !11641)
!11684 = !DILocation(line: 511, column: 25, scope: !11641)
!11685 = !DILocation(line: 511, column: 33, scope: !11641)
!11686 = !DILocation(line: 513, column: 48, scope: !11641)
!11687 = !DILocation(line: 513, column: 56, scope: !11641)
!11688 = !DILocation(line: 513, column: 18, scope: !11641)
!11689 = !DILocation(line: 513, column: 29, scope: !11641)
!11690 = !DILocation(line: 514, column: 48, scope: !11641)
!11691 = !DILocation(line: 514, column: 82, scope: !11641)
!11692 = !DILocation(line: 514, column: 18, scope: !11641)
!11693 = !DILocation(line: 514, column: 29, scope: !11641)
!11694 = !DILocation(line: 517, column: 39, scope: !11641)
!11695 = !DILocation(line: 517, column: 18, scope: !11641)
!11696 = !DILocation(line: 517, column: 37, scope: !11641)
!11697 = !DILocation(line: 520, column: 39, scope: !11641)
!11698 = !DILocation(line: 520, column: 18, scope: !11641)
!11699 = !DILocation(line: 520, column: 37, scope: !11641)
!11700 = !DILocation(line: 523, column: 42, scope: !11641)
!11701 = !DILocation(line: 523, column: 18, scope: !11641)
!11702 = !DILocation(line: 523, column: 40, scope: !11641)
!11703 = !DILocation(line: 526, column: 42, scope: !11641)
!11704 = !DILocation(line: 526, column: 18, scope: !11641)
!11705 = !DILocation(line: 526, column: 40, scope: !11641)
!11706 = !DILocation(line: 529, column: 19, scope: !11641)
!11707 = !DILocation(line: 529, column: 24, scope: !11641)
!11708 = !DILocation(line: 530, column: 67, scope: !11641)
!11709 = !DILocation(line: 530, column: 72, scope: !11641)
!11710 = !DILocation(line: 530, column: 59, scope: !11641)
!11711 = !DILocation(line: 530, column: 18, scope: !11641)
!11712 = !DILocation(line: 530, column: 36, scope: !11641)
!11713 = !DILocation(line: 533, column: 38, scope: !11641)
!11714 = !DILocation(line: 533, column: 18, scope: !11641)
!11715 = !DILocation(line: 533, column: 36, scope: !11641)
!11716 = !DILocation(line: 536, column: 42, scope: !11641)
!11717 = !DILocation(line: 536, column: 18, scope: !11641)
!11718 = !DILocation(line: 536, column: 40, scope: !11641)
!11719 = !DILocation(line: 539, column: 40, scope: !11641)
!11720 = !DILocation(line: 539, column: 18, scope: !11641)
!11721 = !DILocation(line: 539, column: 38, scope: !11641)
!11722 = !DILocation(line: 542, column: 39, scope: !11641)
!11723 = !DILocation(line: 542, column: 18, scope: !11641)
!11724 = !DILocation(line: 542, column: 37, scope: !11641)
!11725 = !DILocation(line: 545, column: 40, scope: !11641)
!11726 = !DILocation(line: 545, column: 18, scope: !11641)
!11727 = !DILocation(line: 545, column: 38, scope: !11641)
!11728 = !DILocation(line: 548, column: 13, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11641, file: !11265, line: 548, column: 7)
!11730 = !DILocation(line: 548, column: 7, scope: !11641)
!11731 = !DILocation(line: 550, column: 20, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11729, file: !11265, line: 549, column: 3)
!11733 = !DILocation(line: 550, column: 37, scope: !11732)
!11734 = !DILocation(line: 556, column: 1, scope: !11641)
!11735 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11265, file: !11265, line: 569, type: !7040, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11736)
!11736 = !{!11737, !11738, !11739, !11740, !11741, !11742, !11743}
!11737 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11735, file: !11265, line: 569, type: !121)
!11738 = !DILocalVariable(name: "tmpreg1", scope: !11735, file: !11265, line: 571, type: !121)
!11739 = !DILocalVariable(name: "frequency", scope: !11735, file: !11265, line: 573, type: !121)
!11740 = !DILocalVariable(name: "vcoinput", scope: !11735, file: !11265, line: 575, type: !121)
!11741 = !DILocalVariable(name: "saiclocksource", scope: !11735, file: !11265, line: 577, type: !121)
!11742 = !DILocalVariable(name: "srcclk", scope: !11735, file: !11265, line: 578, type: !121)
!11743 = !DILocalVariable(name: "vcooutput", scope: !11735, file: !11265, line: 580, type: !121)
!11744 = !DILocation(line: 0, scope: !11735)
!11745 = !DILocation(line: 581, column: 3, scope: !11735)
!11746 = !DILocation(line: 586, column: 29, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !11265, line: 585, column: 5)
!11748 = distinct !DILexicalBlock(scope: !11735, file: !11265, line: 582, column: 3)
!11749 = !DILocation(line: 588, column: 7, scope: !11747)
!11750 = !DILocation(line: 594, column: 20, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !11265, line: 594, column: 14)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !11265, line: 591, column: 9)
!11753 = distinct !DILexicalBlock(scope: !11747, file: !11265, line: 589, column: 7)
!11754 = !DILocation(line: 0, scope: !11751)
!11755 = !DILocation(line: 606, column: 27, scope: !11752)
!11756 = !DILocation(line: 606, column: 64, scope: !11752)
!11757 = !DILocation(line: 607, column: 42, scope: !11752)
!11758 = !DILocation(line: 607, column: 79, scope: !11752)
!11759 = !DILocation(line: 607, column: 33, scope: !11752)
!11760 = !DILocation(line: 607, column: 86, scope: !11752)
!11761 = !DILocation(line: 610, column: 29, scope: !11752)
!11762 = !DILocation(line: 610, column: 63, scope: !11752)
!11763 = !DILocation(line: 610, column: 70, scope: !11752)
!11764 = !DILocation(line: 611, column: 32, scope: !11752)
!11765 = !DILocation(line: 612, column: 11, scope: !11752)
!11766 = !DILocation(line: 619, column: 20, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !11265, line: 619, column: 14)
!11768 = distinct !DILexicalBlock(scope: !11753, file: !11265, line: 616, column: 9)
!11769 = !DILocation(line: 0, scope: !11767)
!11770 = !DILocation(line: 632, column: 27, scope: !11768)
!11771 = !DILocation(line: 632, column: 64, scope: !11768)
!11772 = !DILocation(line: 633, column: 42, scope: !11768)
!11773 = !DILocation(line: 633, column: 79, scope: !11768)
!11774 = !DILocation(line: 633, column: 33, scope: !11768)
!11775 = !DILocation(line: 633, column: 86, scope: !11768)
!11776 = !DILocation(line: 636, column: 28, scope: !11768)
!11777 = !DILocation(line: 636, column: 36, scope: !11768)
!11778 = !DILocation(line: 636, column: 62, scope: !11768)
!11779 = !DILocation(line: 637, column: 32, scope: !11768)
!11780 = !DILocation(line: 638, column: 11, scope: !11768)
!11781 = !DILocation(line: 645, column: 20, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !11265, line: 645, column: 14)
!11783 = distinct !DILexicalBlock(scope: !11753, file: !11265, line: 642, column: 9)
!11784 = !DILocation(line: 0, scope: !11782)
!11785 = !DILocation(line: 658, column: 27, scope: !11783)
!11786 = !DILocation(line: 658, column: 55, scope: !11783)
!11787 = !DILocation(line: 659, column: 42, scope: !11783)
!11788 = !DILocation(line: 659, column: 70, scope: !11783)
!11789 = !DILocation(line: 659, column: 33, scope: !11783)
!11790 = !DILocation(line: 659, column: 77, scope: !11783)
!11791 = !DILocation(line: 660, column: 11, scope: !11783)
!11792 = !DILocation(line: 665, column: 11, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11753, file: !11265, line: 663, column: 9)
!11794 = !DILocation(line: 669, column: 20, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !11265, line: 669, column: 14)
!11796 = distinct !DILexicalBlock(scope: !11753, file: !11265, line: 668, column: 9)
!11797 = !DILocation(line: 691, column: 16, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11748, file: !11265, line: 689, column: 5)
!11799 = !DILocation(line: 692, column: 7, scope: !11798)
!11800 = !DILocation(line: 706, column: 20, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !11265, line: 706, column: 14)
!11802 = distinct !DILexicalBlock(scope: !11803, file: !11265, line: 703, column: 9)
!11803 = distinct !DILexicalBlock(scope: !11798, file: !11265, line: 693, column: 7)
!11804 = !DILocation(line: 0, scope: !11801)
!11805 = !DILocation(line: 718, column: 53, scope: !11802)
!11806 = !DILocation(line: 718, column: 90, scope: !11802)
!11807 = !DILocation(line: 718, column: 43, scope: !11802)
!11808 = !DILocation(line: 720, column: 53, scope: !11802)
!11809 = !DILocation(line: 720, column: 90, scope: !11802)
!11810 = !DILocation(line: 720, column: 44, scope: !11802)
!11811 = !DILocation(line: 721, column: 11, scope: !11802)
!11812 = !DILocation(line: 728, column: 20, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !11265, line: 728, column: 14)
!11814 = distinct !DILexicalBlock(scope: !11803, file: !11265, line: 725, column: 9)
!11815 = !DILocation(line: 0, scope: !11813)
!11816 = !DILocation(line: 740, column: 53, scope: !11814)
!11817 = !DILocation(line: 740, column: 81, scope: !11814)
!11818 = !DILocation(line: 740, column: 43, scope: !11814)
!11819 = !DILocation(line: 742, column: 53, scope: !11814)
!11820 = !DILocation(line: 742, column: 81, scope: !11814)
!11821 = !DILocation(line: 742, column: 44, scope: !11814)
!11822 = !DILocation(line: 743, column: 11, scope: !11814)
!11823 = !DILocation(line: 748, column: 20, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !11265, line: 748, column: 14)
!11825 = distinct !DILexicalBlock(scope: !11803, file: !11265, line: 747, column: 9)
!11826 = !DILocation(line: 770, column: 16, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11748, file: !11265, line: 768, column: 5)
!11828 = !DILocation(line: 771, column: 7, scope: !11827)
!11829 = !DILocation(line: 785, column: 20, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !11265, line: 785, column: 14)
!11831 = distinct !DILexicalBlock(scope: !11832, file: !11265, line: 782, column: 9)
!11832 = distinct !DILexicalBlock(scope: !11827, file: !11265, line: 772, column: 7)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 797, column: 53, scope: !11831)
!11835 = !DILocation(line: 797, column: 90, scope: !11831)
!11836 = !DILocation(line: 797, column: 43, scope: !11831)
!11837 = !DILocation(line: 799, column: 53, scope: !11831)
!11838 = !DILocation(line: 799, column: 90, scope: !11831)
!11839 = !DILocation(line: 799, column: 44, scope: !11831)
!11840 = !DILocation(line: 800, column: 11, scope: !11831)
!11841 = !DILocation(line: 807, column: 20, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !11265, line: 807, column: 14)
!11843 = distinct !DILexicalBlock(scope: !11832, file: !11265, line: 804, column: 9)
!11844 = !DILocation(line: 0, scope: !11842)
!11845 = !DILocation(line: 819, column: 53, scope: !11843)
!11846 = !DILocation(line: 819, column: 81, scope: !11843)
!11847 = !DILocation(line: 819, column: 43, scope: !11843)
!11848 = !DILocation(line: 821, column: 53, scope: !11843)
!11849 = !DILocation(line: 821, column: 81, scope: !11843)
!11850 = !DILocation(line: 821, column: 44, scope: !11843)
!11851 = !DILocation(line: 822, column: 11, scope: !11843)
!11852 = !DILocation(line: 827, column: 20, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !11265, line: 827, column: 14)
!11854 = distinct !DILexicalBlock(scope: !11832, file: !11265, line: 826, column: 9)
!11855 = !DILocation(line: 847, column: 3, scope: !11735)
!11856 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11265, file: !11265, line: 2766, type: !11857, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11859)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{null, !154}
!11859 = !{!11860}
!11860 = !DILocalVariable(name: "Mode", arg: 1, scope: !11856, file: !11265, line: 2766, type: !154)
!11861 = !DILocation(line: 0, scope: !11856)
!11862 = !DILocation(line: 2770, column: 11, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11856, file: !11265, line: 2770, column: 6)
!11864 = !DILocation(line: 0, scope: !11863)
!11865 = !DILocation(line: 2770, column: 6, scope: !11856)
!11866 = !DILocation(line: 2778, column: 1, scope: !11856)
!11867 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11265, file: !11265, line: 2803, type: !11868, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11871)
!11868 = !DISubroutineType(types: !11869)
!11869 = !{!11268, !11870}
!11870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11276, size: 32)
!11871 = !{!11872, !11873}
!11872 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11867, file: !11265, line: 2803, type: !11870)
!11873 = !DILocalVariable(name: "tickstart", scope: !11867, file: !11265, line: 2805, type: !121)
!11874 = !DILocation(line: 0, scope: !11867)
!11875 = !DILocation(line: 2821, column: 3, scope: !11867)
!11876 = !DILocation(line: 2824, column: 15, scope: !11867)
!11877 = !DILocation(line: 2825, column: 3, scope: !11867)
!11878 = !DILocation(line: 2825, column: 9, scope: !11867)
!11879 = !DILocation(line: 2827, column: 9, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !11265, line: 2827, column: 8)
!11881 = distinct !DILexicalBlock(scope: !11867, file: !11265, line: 2826, column: 3)
!11882 = !DILocation(line: 2827, column: 23, scope: !11880)
!11883 = !DILocation(line: 2827, column: 37, scope: !11880)
!11884 = !DILocation(line: 2827, column: 8, scope: !11881)
!11885 = distinct !{!11885, !11877, !11886}
!11886 = !DILocation(line: 2832, column: 3, scope: !11867)
!11887 = !DILocation(line: 2840, column: 3, scope: !11867)
!11888 = !DILocation(line: 2866, column: 3, scope: !11867)
!11889 = !DILocation(line: 2869, column: 15, scope: !11867)
!11890 = !DILocation(line: 2870, column: 3, scope: !11867)
!11891 = !DILocation(line: 2870, column: 9, scope: !11867)
!11892 = !DILocation(line: 2870, column: 48, scope: !11867)
!11893 = !DILocation(line: 2872, column: 9, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11895, file: !11265, line: 2872, column: 8)
!11895 = distinct !DILexicalBlock(scope: !11867, file: !11265, line: 2871, column: 3)
!11896 = !DILocation(line: 2872, column: 23, scope: !11894)
!11897 = !DILocation(line: 2872, column: 37, scope: !11894)
!11898 = !DILocation(line: 2872, column: 8, scope: !11895)
!11899 = distinct !{!11899, !11890, !11900}
!11900 = !DILocation(line: 2877, column: 3, scope: !11867)
!11901 = !DILocation(line: 2880, column: 1, scope: !11867)
!11902 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11265, file: !11265, line: 2886, type: !11903, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11905)
!11903 = !DISubroutineType(types: !11904)
!11904 = !{!11268}
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "tickstart", scope: !11902, file: !11265, line: 2888, type: !121)
!11907 = !DILocation(line: 2891, column: 3, scope: !11902)
!11908 = !DILocation(line: 2894, column: 15, scope: !11902)
!11909 = !DILocation(line: 0, scope: !11902)
!11910 = !DILocation(line: 2895, column: 3, scope: !11902)
!11911 = !DILocation(line: 2895, column: 9, scope: !11902)
!11912 = !DILocation(line: 2895, column: 45, scope: !11902)
!11913 = !DILocation(line: 2897, column: 9, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !11265, line: 2897, column: 8)
!11915 = distinct !DILexicalBlock(scope: !11902, file: !11265, line: 2896, column: 3)
!11916 = !DILocation(line: 2897, column: 23, scope: !11914)
!11917 = !DILocation(line: 2897, column: 36, scope: !11914)
!11918 = !DILocation(line: 2897, column: 8, scope: !11915)
!11919 = distinct !{!11919, !11910, !11920}
!11920 = !DILocation(line: 2902, column: 3, scope: !11902)
!11921 = !DILocation(line: 2905, column: 1, scope: !11902)
!11922 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11265, file: !11265, line: 2916, type: !11923, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11926)
!11923 = !DISubroutineType(types: !11924)
!11924 = !{!11268, !11925}
!11925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11285, size: 32)
!11926 = !{!11927, !11928}
!11927 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11922, file: !11265, line: 2916, type: !11925)
!11928 = !DILocalVariable(name: "tickstart", scope: !11922, file: !11265, line: 2918, type: !121)
!11929 = !DILocation(line: 0, scope: !11922)
!11930 = !DILocation(line: 2934, column: 3, scope: !11922)
!11931 = !DILocation(line: 2937, column: 15, scope: !11922)
!11932 = !DILocation(line: 2938, column: 3, scope: !11922)
!11933 = !DILocation(line: 2938, column: 9, scope: !11922)
!11934 = !DILocation(line: 2940, column: 9, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !11265, line: 2940, column: 8)
!11936 = distinct !DILexicalBlock(scope: !11922, file: !11265, line: 2939, column: 3)
!11937 = !DILocation(line: 2940, column: 23, scope: !11935)
!11938 = !DILocation(line: 2940, column: 37, scope: !11935)
!11939 = !DILocation(line: 2940, column: 8, scope: !11936)
!11940 = distinct !{!11940, !11932, !11941}
!11941 = !DILocation(line: 2945, column: 3, scope: !11922)
!11942 = !DILocation(line: 2953, column: 3, scope: !11922)
!11943 = !DILocation(line: 2970, column: 3, scope: !11922)
!11944 = !DILocation(line: 2973, column: 15, scope: !11922)
!11945 = !DILocation(line: 2974, column: 3, scope: !11922)
!11946 = !DILocation(line: 2974, column: 9, scope: !11922)
!11947 = !DILocation(line: 2974, column: 37, scope: !11922)
!11948 = !DILocation(line: 2976, column: 9, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !11265, line: 2976, column: 8)
!11950 = distinct !DILexicalBlock(scope: !11922, file: !11265, line: 2975, column: 3)
!11951 = !DILocation(line: 2976, column: 23, scope: !11949)
!11952 = !DILocation(line: 2976, column: 37, scope: !11949)
!11953 = !DILocation(line: 2976, column: 8, scope: !11950)
!11954 = distinct !{!11954, !11945, !11955}
!11955 = !DILocation(line: 2981, column: 3, scope: !11922)
!11956 = !DILocation(line: 2984, column: 1, scope: !11922)
!11957 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11265, file: !11265, line: 2990, type: !11903, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11958)
!11958 = !{!11959}
!11959 = !DILocalVariable(name: "tickstart", scope: !11957, file: !11265, line: 2992, type: !121)
!11960 = !DILocation(line: 2995, column: 3, scope: !11957)
!11961 = !DILocation(line: 2998, column: 15, scope: !11957)
!11962 = !DILocation(line: 0, scope: !11957)
!11963 = !DILocation(line: 2999, column: 3, scope: !11957)
!11964 = !DILocation(line: 2999, column: 9, scope: !11957)
!11965 = !DILocation(line: 3001, column: 9, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !11265, line: 3001, column: 8)
!11967 = distinct !DILexicalBlock(scope: !11957, file: !11265, line: 3000, column: 3)
!11968 = !DILocation(line: 3001, column: 23, scope: !11966)
!11969 = !DILocation(line: 3001, column: 36, scope: !11966)
!11970 = !DILocation(line: 3001, column: 8, scope: !11967)
!11971 = distinct !{!11971, !11963, !11972}
!11972 = !DILocation(line: 3006, column: 3, scope: !11957)
!11973 = !DILocation(line: 3009, column: 1, scope: !11957)
!11974 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11265, file: !11265, line: 3051, type: !6114, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !11975)
!11975 = !{!11976, !11977, !11978, !11979, !11980}
!11976 = !DILocalVariable(name: "pllm", scope: !11974, file: !11265, line: 3053, type: !121)
!11977 = !DILocalVariable(name: "pllvco", scope: !11974, file: !11265, line: 3054, type: !121)
!11978 = !DILocalVariable(name: "pllp", scope: !11974, file: !11265, line: 3055, type: !121)
!11979 = !DILocalVariable(name: "pllr", scope: !11974, file: !11265, line: 3056, type: !121)
!11980 = !DILocalVariable(name: "sysclockfreq", scope: !11974, file: !11265, line: 3057, type: !121)
!11981 = !DILocation(line: 0, scope: !11974)
!11982 = !DILocation(line: 3060, column: 16, scope: !11974)
!11983 = !DILocation(line: 3060, column: 3, scope: !11974)
!11984 = !DILocation(line: 3076, column: 19, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11986, file: !11265, line: 3073, column: 5)
!11986 = distinct !DILexicalBlock(scope: !11974, file: !11265, line: 3061, column: 3)
!11987 = !DILocation(line: 3076, column: 27, scope: !11985)
!11988 = !DILocation(line: 3077, column: 10, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11985, file: !11265, line: 3077, column: 10)
!11990 = !DILocation(line: 0, scope: !11989)
!11991 = !DILocation(line: 3087, column: 23, scope: !11985)
!11992 = !DILocation(line: 3087, column: 82, scope: !11985)
!11993 = !DILocation(line: 3089, column: 28, scope: !11985)
!11994 = !DILocation(line: 3090, column: 7, scope: !11985)
!11995 = !DILocation(line: 3096, column: 19, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11986, file: !11265, line: 3093, column: 5)
!11997 = !DILocation(line: 3096, column: 27, scope: !11996)
!11998 = !DILocation(line: 3097, column: 10, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !11265, line: 3097, column: 10)
!12000 = !DILocation(line: 0, scope: !11999)
!12001 = !DILocation(line: 3107, column: 21, scope: !11996)
!12002 = !DILocation(line: 3107, column: 49, scope: !11996)
!12003 = !DILocation(line: 3109, column: 28, scope: !11996)
!12004 = !DILocation(line: 3110, column: 7, scope: !11996)
!12005 = !DILocation(line: 0, scope: !11986)
!12006 = !DILocation(line: 3118, column: 3, scope: !11974)
!12007 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11265, file: !11265, line: 3143, type: !11903, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12008)
!12008 = !{!12009}
!12009 = !DILocalVariable(name: "tickstart", scope: !12007, file: !11265, line: 3145, type: !121)
!12010 = !DILocation(line: 3148, column: 15, scope: !12007)
!12011 = !DILocation(line: 0, scope: !12007)
!12012 = !DILocation(line: 3151, column: 3, scope: !12007)
!12013 = !DILocation(line: 3154, column: 3, scope: !12007)
!12014 = !DILocation(line: 3154, column: 10, scope: !12007)
!12015 = !DILocation(line: 3154, column: 43, scope: !12007)
!12016 = !DILocation(line: 3156, column: 10, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !11265, line: 3156, column: 9)
!12018 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3155, column: 3)
!12019 = !DILocation(line: 3156, column: 24, scope: !12017)
!12020 = !DILocation(line: 3156, column: 37, scope: !12017)
!12021 = !DILocation(line: 3156, column: 9, scope: !12018)
!12022 = distinct !{!12022, !12013, !12023}
!12023 = !DILocation(line: 3160, column: 3, scope: !12007)
!12024 = !DILocation(line: 3163, column: 3, scope: !12007)
!12025 = !DILocation(line: 3166, column: 15, scope: !12007)
!12026 = !DILocation(line: 3169, column: 3, scope: !12007)
!12027 = !DILocation(line: 3172, column: 3, scope: !12007)
!12028 = !DILocation(line: 3172, column: 10, scope: !12007)
!12029 = !DILocation(line: 3172, column: 44, scope: !12007)
!12030 = !DILocation(line: 3174, column: 24, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !11265, line: 3174, column: 9)
!12032 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3173, column: 3)
!12033 = !DILocation(line: 3174, column: 37, scope: !12031)
!12034 = !DILocation(line: 3174, column: 9, scope: !12032)
!12035 = distinct !{!12035, !12027, !12036}
!12036 = !DILocation(line: 3178, column: 3, scope: !12007)
!12037 = !DILocation(line: 3184, column: 3, scope: !12007)
!12038 = !DILocation(line: 3187, column: 3, scope: !12007)
!12039 = !DILocation(line: 3187, column: 10, scope: !12007)
!12040 = !DILocation(line: 3187, column: 43, scope: !12007)
!12041 = !DILocation(line: 3189, column: 24, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11265, line: 3189, column: 9)
!12043 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3188, column: 3)
!12044 = !DILocation(line: 3189, column: 37, scope: !12042)
!12045 = !DILocation(line: 3189, column: 9, scope: !12043)
!12046 = distinct !{!12046, !12038, !12047}
!12047 = !DILocation(line: 3193, column: 3, scope: !12007)
!12048 = !DILocation(line: 3199, column: 3, scope: !12007)
!12049 = !DILocation(line: 3202, column: 3, scope: !12007)
!12050 = !DILocation(line: 3202, column: 10, scope: !12007)
!12051 = !DILocation(line: 3202, column: 43, scope: !12007)
!12052 = !DILocation(line: 3204, column: 24, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !11265, line: 3204, column: 9)
!12054 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3203, column: 3)
!12055 = !DILocation(line: 3204, column: 37, scope: !12053)
!12056 = !DILocation(line: 3204, column: 9, scope: !12054)
!12057 = distinct !{!12057, !12049, !12058}
!12058 = !DILocation(line: 3208, column: 3, scope: !12007)
!12059 = !DILocation(line: 3215, column: 3, scope: !12007)
!12060 = !DILocation(line: 3218, column: 3, scope: !12007)
!12061 = !DILocation(line: 3218, column: 10, scope: !12007)
!12062 = !DILocation(line: 3218, column: 46, scope: !12007)
!12063 = !DILocation(line: 3220, column: 24, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !11265, line: 3220, column: 9)
!12065 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3219, column: 3)
!12066 = !DILocation(line: 3220, column: 37, scope: !12064)
!12067 = !DILocation(line: 3220, column: 9, scope: !12065)
!12068 = distinct !{!12068, !12060, !12069}
!12069 = !DILocation(line: 3224, column: 3, scope: !12007)
!12070 = !DILocation(line: 3232, column: 3, scope: !12007)
!12071 = !DILocation(line: 3235, column: 3, scope: !12007)
!12072 = !DILocation(line: 3235, column: 10, scope: !12007)
!12073 = !DILocation(line: 3235, column: 46, scope: !12007)
!12074 = !DILocation(line: 3237, column: 10, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !11265, line: 3237, column: 9)
!12076 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3236, column: 3)
!12077 = !DILocation(line: 3237, column: 24, scope: !12075)
!12078 = !DILocation(line: 3237, column: 37, scope: !12075)
!12079 = !DILocation(line: 3237, column: 9, scope: !12076)
!12080 = distinct !{!12080, !12071, !12081}
!12081 = !DILocation(line: 3241, column: 3, scope: !12007)
!12082 = !DILocation(line: 3247, column: 16, scope: !12007)
!12083 = !DILocation(line: 3257, column: 19, scope: !12007)
!12084 = !DILocation(line: 3270, column: 19, scope: !12007)
!12085 = !DILocation(line: 3274, column: 3, scope: !12007)
!12086 = !DILocation(line: 3277, column: 3, scope: !12007)
!12087 = !DILocation(line: 3281, column: 3, scope: !12007)
!12088 = !DILocation(line: 3285, column: 3, scope: !12007)
!12089 = !DILocation(line: 3288, column: 3, scope: !12007)
!12090 = !DILocation(line: 3292, column: 3, scope: !12007)
!12091 = !DILocation(line: 3296, column: 3, scope: !12007)
!12092 = !DILocation(line: 3299, column: 3, scope: !12007)
!12093 = !DILocation(line: 3302, column: 19, scope: !12007)
!12094 = !DILocation(line: 3305, column: 19, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12007, file: !11265, line: 3305, column: 6)
!12096 = !DILocation(line: 3305, column: 6, scope: !12095)
!12097 = !DILocation(line: 3305, column: 31, scope: !12095)
!12098 = !DILocation(line: 0, scope: !12095)
!12099 = !DILocation(line: 3313, column: 1, scope: !12007)
!12100 = !DISubprogram(name: "HAL_InitTick", scope: !11640, file: !11640, line: 223, type: !12101, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{!11268, !121}
!12103 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11265, file: !11265, line: 3333, type: !12104, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12128)
!12104 = !DISubroutineType(types: !12105)
!12105 = !{!11268, !12106}
!12106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12107, size: 32)
!12107 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12108, line: 70, baseType: !12109)
!12108 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12108, line: 49, size: 416, elements: !12110)
!12110 = !{!12111, !12112, !12113, !12114, !12115, !12116, !12117}
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12109, file: !12108, line: 51, baseType: !121, size: 32)
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12109, file: !12108, line: 54, baseType: !121, size: 32, offset: 32)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12109, file: !12108, line: 57, baseType: !121, size: 32, offset: 64)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12109, file: !12108, line: 60, baseType: !121, size: 32, offset: 96)
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12109, file: !12108, line: 63, baseType: !121, size: 32, offset: 128)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12109, file: !12108, line: 66, baseType: !121, size: 32, offset: 160)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12109, file: !12108, line: 69, baseType: !12118, size: 224, offset: 192)
!12118 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11271, line: 73, baseType: !12119)
!12119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11271, line: 45, size: 224, elements: !12120)
!12120 = !{!12121, !12122, !12123, !12124, !12125, !12126, !12127}
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12119, file: !11271, line: 47, baseType: !121, size: 32)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12119, file: !11271, line: 50, baseType: !121, size: 32, offset: 32)
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12119, file: !11271, line: 53, baseType: !121, size: 32, offset: 64)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12119, file: !11271, line: 56, baseType: !121, size: 32, offset: 96)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12119, file: !11271, line: 60, baseType: !121, size: 32, offset: 128)
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12119, file: !11271, line: 63, baseType: !121, size: 32, offset: 160)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12119, file: !11271, line: 68, baseType: !121, size: 32, offset: 192)
!12128 = !{!12129, !12130, !12131, !12132, !12136}
!12129 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12103, file: !11265, line: 3333, type: !12106)
!12130 = !DILocalVariable(name: "tickstart", scope: !12103, file: !11265, line: 3335, type: !121)
!12131 = !DILocalVariable(name: "pll_config", scope: !12103, file: !11265, line: 3335, type: !121)
!12132 = !DILocalVariable(name: "pwrclkchanged", scope: !12133, file: !11265, line: 3517, type: !12135)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !11265, line: 3516, column: 3)
!12134 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3515, column: 6)
!12135 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !825, line: 188, baseType: !3052)
!12136 = !DILocalVariable(name: "tmpreg", scope: !12137, file: !11265, line: 3526, type: !120)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !11265, line: 3526, column: 7)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !11265, line: 3525, column: 5)
!12139 = distinct !DILexicalBlock(scope: !12133, file: !11265, line: 3524, column: 8)
!12140 = !DILocation(line: 0, scope: !12103)
!12141 = !DILocation(line: 3338, column: 24, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3338, column: 6)
!12143 = !DILocation(line: 3338, column: 6, scope: !12103)
!12144 = !DILocation(line: 3346, column: 27, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3346, column: 6)
!12146 = !DILocation(line: 3346, column: 43, scope: !12145)
!12147 = !DILocation(line: 3346, column: 69, scope: !12145)
!12148 = !DILocation(line: 3346, column: 6, scope: !12103)
!12149 = !DILocation(line: 3352, column: 9, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !11265, line: 3352, column: 8)
!12151 = distinct !DILexicalBlock(scope: !12145, file: !11265, line: 3347, column: 3)
!12152 = !DILocation(line: 3352, column: 39, scope: !12150)
!12153 = !DILocation(line: 3352, column: 128, scope: !12150)
!12154 = !DILocation(line: 3353, column: 9, scope: !12150)
!12155 = !DILocation(line: 3353, column: 39, scope: !12150)
!12156 = !DILocation(line: 3353, column: 60, scope: !12150)
!12157 = !DILocation(line: 3353, column: 70, scope: !12150)
!12158 = !DILocation(line: 3353, column: 78, scope: !12150)
!12159 = !DILocation(line: 3353, column: 100, scope: !12150)
!12160 = !DILocation(line: 3353, column: 128, scope: !12150)
!12161 = !DILocation(line: 3354, column: 9, scope: !12150)
!12162 = !DILocation(line: 3354, column: 39, scope: !12150)
!12163 = !DILocation(line: 3354, column: 61, scope: !12150)
!12164 = !DILocation(line: 3354, column: 71, scope: !12150)
!12165 = !DILocation(line: 3354, column: 79, scope: !12150)
!12166 = !DILocation(line: 3354, column: 101, scope: !12150)
!12167 = !DILocation(line: 3352, column: 8, scope: !12151)
!12168 = !DILocation(line: 3360, column: 11, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !11265, line: 3360, column: 10)
!12170 = distinct !DILexicalBlock(scope: !12150, file: !11265, line: 3359, column: 5)
!12171 = !DILocation(line: 3360, column: 57, scope: !12169)
!12172 = !DILocation(line: 3360, column: 80, scope: !12169)
!12173 = !DILocation(line: 3360, column: 89, scope: !12169)
!12174 = !DILocation(line: 3360, column: 10, scope: !12170)
!12175 = !DILocation(line: 3368, column: 7, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !11265, line: 3368, column: 7)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !11265, line: 3368, column: 7)
!12178 = distinct !DILexicalBlock(scope: !12150, file: !11265, line: 3366, column: 5)
!12179 = !DILocation(line: 3368, column: 7, scope: !12177)
!12180 = !DILocation(line: 3368, column: 7, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12176, file: !11265, line: 3368, column: 7)
!12182 = !DILocation(line: 3368, column: 7, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !11265, line: 3368, column: 7)
!12184 = distinct !DILexicalBlock(scope: !12176, file: !11265, line: 3368, column: 7)
!12185 = !DILocation(line: 3368, column: 7, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12184, file: !11265, line: 3368, column: 7)
!12187 = !DILocation(line: 0, scope: !12176)
!12188 = !DILocation(line: 3371, column: 30, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12178, file: !11265, line: 3371, column: 10)
!12190 = !DILocation(line: 3371, column: 40, scope: !12189)
!12191 = !DILocation(line: 0, scope: !12189)
!12192 = !DILocation(line: 3371, column: 10, scope: !12178)
!12193 = !DILocation(line: 3377, column: 15, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12189, file: !11265, line: 3372, column: 7)
!12195 = !DILocation(line: 3377, column: 51, scope: !12194)
!12196 = !DILocation(line: 3377, column: 9, scope: !12194)
!12197 = !DILocation(line: 3379, column: 15, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !11265, line: 3379, column: 14)
!12199 = distinct !DILexicalBlock(scope: !12194, file: !11265, line: 3378, column: 9)
!12200 = !DILocation(line: 3379, column: 29, scope: !12198)
!12201 = !DILocation(line: 3379, column: 43, scope: !12198)
!12202 = !DILocation(line: 3379, column: 14, scope: !12199)
!12203 = distinct !{!12203, !12196, !12204}
!12204 = !DILocation(line: 3383, column: 9, scope: !12194)
!12205 = !DILocation(line: 3391, column: 15, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12189, file: !11265, line: 3386, column: 7)
!12207 = !DILocation(line: 3391, column: 9, scope: !12206)
!12208 = !DILocation(line: 3393, column: 15, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12210, file: !11265, line: 3393, column: 14)
!12210 = distinct !DILexicalBlock(scope: !12206, file: !11265, line: 3392, column: 9)
!12211 = !DILocation(line: 3393, column: 29, scope: !12209)
!12212 = !DILocation(line: 3393, column: 43, scope: !12209)
!12213 = !DILocation(line: 3393, column: 14, scope: !12210)
!12214 = distinct !{!12214, !12207, !12215}
!12215 = !DILocation(line: 3397, column: 9, scope: !12206)
!12216 = !DILocation(line: 3402, column: 27, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3402, column: 6)
!12218 = !DILocation(line: 3402, column: 43, scope: !12217)
!12219 = !DILocation(line: 3402, column: 69, scope: !12217)
!12220 = !DILocation(line: 3402, column: 6, scope: !12103)
!12221 = !DILocation(line: 3410, column: 9, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12223, file: !11265, line: 3410, column: 8)
!12223 = distinct !DILexicalBlock(scope: !12217, file: !11265, line: 3403, column: 3)
!12224 = !DILocation(line: 3410, column: 39, scope: !12222)
!12225 = !DILocation(line: 3410, column: 128, scope: !12222)
!12226 = !DILocation(line: 3411, column: 9, scope: !12222)
!12227 = !DILocation(line: 3411, column: 39, scope: !12222)
!12228 = !DILocation(line: 3411, column: 60, scope: !12222)
!12229 = !DILocation(line: 3411, column: 70, scope: !12222)
!12230 = !DILocation(line: 3411, column: 78, scope: !12222)
!12231 = !DILocation(line: 3411, column: 100, scope: !12222)
!12232 = !DILocation(line: 3411, column: 128, scope: !12222)
!12233 = !DILocation(line: 3412, column: 9, scope: !12222)
!12234 = !DILocation(line: 3412, column: 39, scope: !12222)
!12235 = !DILocation(line: 3412, column: 61, scope: !12222)
!12236 = !DILocation(line: 3412, column: 71, scope: !12222)
!12237 = !DILocation(line: 3412, column: 79, scope: !12222)
!12238 = !DILocation(line: 3412, column: 101, scope: !12222)
!12239 = !DILocation(line: 3410, column: 8, scope: !12223)
!12240 = !DILocation(line: 3419, column: 11, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !11265, line: 3419, column: 10)
!12242 = distinct !DILexicalBlock(scope: !12222, file: !11265, line: 3417, column: 5)
!12243 = !DILocation(line: 3419, column: 57, scope: !12241)
!12244 = !DILocation(line: 3419, column: 80, scope: !12241)
!12245 = !DILocation(line: 3419, column: 89, scope: !12241)
!12246 = !DILocation(line: 3419, column: 10, scope: !12242)
!12247 = !DILocation(line: 3433, column: 30, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !11265, line: 3433, column: 10)
!12249 = distinct !DILexicalBlock(scope: !12222, file: !11265, line: 3431, column: 5)
!12250 = !DILocation(line: 3433, column: 39, scope: !12248)
!12251 = !DILocation(line: 3433, column: 10, scope: !12249)
!12252 = !DILocation(line: 3436, column: 9, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12248, file: !11265, line: 3434, column: 7)
!12254 = !DILocation(line: 3439, column: 21, scope: !12253)
!12255 = !DILocation(line: 3442, column: 9, scope: !12253)
!12256 = !DILocation(line: 3442, column: 15, scope: !12253)
!12257 = !DILocation(line: 3442, column: 51, scope: !12253)
!12258 = !DILocation(line: 3444, column: 15, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12260, file: !11265, line: 3444, column: 14)
!12260 = distinct !DILexicalBlock(scope: !12253, file: !11265, line: 3443, column: 9)
!12261 = !DILocation(line: 3444, column: 29, scope: !12259)
!12262 = !DILocation(line: 3444, column: 43, scope: !12259)
!12263 = !DILocation(line: 3444, column: 14, scope: !12260)
!12264 = distinct !{!12264, !12255, !12265}
!12265 = !DILocation(line: 3448, column: 9, scope: !12253)
!12266 = !DILocation(line: 3456, column: 9, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12248, file: !11265, line: 3454, column: 7)
!12268 = !DILocation(line: 3459, column: 21, scope: !12267)
!12269 = !DILocation(line: 3462, column: 9, scope: !12267)
!12270 = !DILocation(line: 3462, column: 15, scope: !12267)
!12271 = !DILocation(line: 3464, column: 15, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !11265, line: 3464, column: 14)
!12273 = distinct !DILexicalBlock(scope: !12267, file: !11265, line: 3463, column: 9)
!12274 = !DILocation(line: 3464, column: 29, scope: !12272)
!12275 = !DILocation(line: 3464, column: 43, scope: !12272)
!12276 = !DILocation(line: 3464, column: 14, scope: !12273)
!12277 = distinct !{!12277, !12269, !12278}
!12278 = !DILocation(line: 3468, column: 9, scope: !12267)
!12279 = !DILocation(line: 0, scope: !12222)
!12280 = !DILocation(line: 3473, column: 27, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3473, column: 6)
!12282 = !DILocation(line: 3473, column: 43, scope: !12281)
!12283 = !DILocation(line: 3473, column: 69, scope: !12281)
!12284 = !DILocation(line: 3473, column: 6, scope: !12103)
!12285 = !DILocation(line: 3479, column: 28, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12287, file: !11265, line: 3479, column: 8)
!12287 = distinct !DILexicalBlock(scope: !12281, file: !11265, line: 3474, column: 3)
!12288 = !DILocation(line: 3479, column: 37, scope: !12286)
!12289 = !DILocation(line: 3479, column: 8, scope: !12287)
!12290 = !DILocation(line: 3482, column: 7, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12286, file: !11265, line: 3480, column: 5)
!12292 = !DILocation(line: 3485, column: 19, scope: !12291)
!12293 = !DILocation(line: 3488, column: 7, scope: !12291)
!12294 = !DILocation(line: 3488, column: 13, scope: !12291)
!12295 = !DILocation(line: 3488, column: 49, scope: !12291)
!12296 = !DILocation(line: 3490, column: 13, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !11265, line: 3490, column: 12)
!12298 = distinct !DILexicalBlock(scope: !12291, file: !11265, line: 3489, column: 7)
!12299 = !DILocation(line: 3490, column: 27, scope: !12297)
!12300 = !DILocation(line: 3490, column: 41, scope: !12297)
!12301 = !DILocation(line: 3490, column: 12, scope: !12298)
!12302 = distinct !{!12302, !12293, !12303}
!12303 = !DILocation(line: 3494, column: 7, scope: !12291)
!12304 = !DILocation(line: 3499, column: 7, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12286, file: !11265, line: 3497, column: 5)
!12306 = !DILocation(line: 3502, column: 19, scope: !12305)
!12307 = !DILocation(line: 3505, column: 7, scope: !12305)
!12308 = !DILocation(line: 3505, column: 13, scope: !12305)
!12309 = !DILocation(line: 3507, column: 13, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !11265, line: 3507, column: 12)
!12311 = distinct !DILexicalBlock(scope: !12305, file: !11265, line: 3506, column: 7)
!12312 = !DILocation(line: 3507, column: 27, scope: !12310)
!12313 = !DILocation(line: 3507, column: 41, scope: !12310)
!12314 = !DILocation(line: 3507, column: 12, scope: !12311)
!12315 = distinct !{!12315, !12307, !12316}
!12316 = !DILocation(line: 3511, column: 7, scope: !12305)
!12317 = !DILocation(line: 3515, column: 27, scope: !12134)
!12318 = !DILocation(line: 3515, column: 43, scope: !12134)
!12319 = !DILocation(line: 3515, column: 69, scope: !12134)
!12320 = !DILocation(line: 3515, column: 6, scope: !12103)
!12321 = !DILocation(line: 0, scope: !12133)
!12322 = !DILocation(line: 3524, column: 8, scope: !12139)
!12323 = !DILocation(line: 3524, column: 8, scope: !12133)
!12324 = !DILocation(line: 3526, column: 7, scope: !12137)
!12325 = !DILocation(line: 3526, column: 7, scope: !12138)
!12326 = !DILocation(line: 3528, column: 5, scope: !12138)
!12327 = !DILocation(line: 3530, column: 8, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12133, file: !11265, line: 3530, column: 8)
!12329 = !DILocation(line: 3530, column: 8, scope: !12133)
!12330 = !DILocation(line: 3533, column: 7, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12328, file: !11265, line: 3531, column: 5)
!12332 = !DILocation(line: 3536, column: 19, scope: !12331)
!12333 = !DILocation(line: 3538, column: 7, scope: !12331)
!12334 = !DILocation(line: 3538, column: 13, scope: !12331)
!12335 = !DILocation(line: 3540, column: 13, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !11265, line: 3540, column: 12)
!12337 = distinct !DILexicalBlock(scope: !12331, file: !11265, line: 3539, column: 7)
!12338 = !DILocation(line: 3540, column: 27, scope: !12336)
!12339 = !DILocation(line: 3540, column: 40, scope: !12336)
!12340 = !DILocation(line: 3540, column: 12, scope: !12337)
!12341 = distinct !{!12341, !12333, !12342}
!12342 = !DILocation(line: 3544, column: 7, scope: !12331)
!12343 = !DILocation(line: 3548, column: 5, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !11265, line: 3548, column: 5)
!12345 = distinct !DILexicalBlock(scope: !12133, file: !11265, line: 3548, column: 5)
!12346 = !DILocation(line: 3548, column: 5, scope: !12345)
!12347 = !DILocation(line: 3548, column: 5, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12344, file: !11265, line: 3548, column: 5)
!12349 = !DILocation(line: 3548, column: 5, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !11265, line: 3548, column: 5)
!12351 = distinct !DILexicalBlock(scope: !12344, file: !11265, line: 3548, column: 5)
!12352 = !DILocation(line: 3548, column: 5, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12351, file: !11265, line: 3548, column: 5)
!12354 = !DILocation(line: 0, scope: !12344)
!12355 = !DILocation(line: 3550, column: 28, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12133, file: !11265, line: 3550, column: 8)
!12357 = !DILocation(line: 3550, column: 38, scope: !12356)
!12358 = !DILocation(line: 0, scope: !12356)
!12359 = !DILocation(line: 3550, column: 8, scope: !12133)
!12360 = !DILocation(line: 3556, column: 13, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12356, file: !11265, line: 3551, column: 5)
!12362 = !DILocation(line: 3556, column: 49, scope: !12361)
!12363 = !DILocation(line: 3556, column: 7, scope: !12361)
!12364 = !DILocation(line: 3558, column: 13, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !11265, line: 3558, column: 12)
!12366 = distinct !DILexicalBlock(scope: !12361, file: !11265, line: 3557, column: 7)
!12367 = !DILocation(line: 3558, column: 27, scope: !12365)
!12368 = !DILocation(line: 3558, column: 41, scope: !12365)
!12369 = !DILocation(line: 3558, column: 12, scope: !12366)
!12370 = distinct !{!12370, !12363, !12371}
!12371 = !DILocation(line: 3562, column: 7, scope: !12361)
!12372 = !DILocation(line: 3570, column: 13, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12356, file: !11265, line: 3565, column: 5)
!12374 = !DILocation(line: 3570, column: 7, scope: !12373)
!12375 = !DILocation(line: 3572, column: 13, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !11265, line: 3572, column: 12)
!12377 = distinct !DILexicalBlock(scope: !12373, file: !11265, line: 3571, column: 7)
!12378 = !DILocation(line: 3572, column: 27, scope: !12376)
!12379 = !DILocation(line: 3572, column: 41, scope: !12376)
!12380 = !DILocation(line: 3572, column: 12, scope: !12377)
!12381 = distinct !{!12381, !12374, !12382}
!12382 = !DILocation(line: 3576, column: 7, scope: !12373)
!12383 = !DILocation(line: 3580, column: 8, scope: !12133)
!12384 = !DILocation(line: 3582, column: 7, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !11265, line: 3581, column: 5)
!12386 = distinct !DILexicalBlock(scope: !12133, file: !11265, line: 3580, column: 8)
!12387 = !DILocation(line: 3583, column: 5, scope: !12385)
!12388 = !DILocation(line: 3588, column: 31, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12103, file: !11265, line: 3588, column: 7)
!12390 = !DILocation(line: 3588, column: 41, scope: !12389)
!12391 = !DILocation(line: 3588, column: 7, scope: !12103)
!12392 = !DILocation(line: 3591, column: 8, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !11265, line: 3591, column: 8)
!12394 = distinct !DILexicalBlock(scope: !12389, file: !11265, line: 3589, column: 3)
!12395 = !DILocation(line: 3591, column: 38, scope: !12393)
!12396 = !DILocation(line: 3591, column: 8, scope: !12394)
!12397 = !DILocation(line: 3593, column: 44, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !11265, line: 3593, column: 10)
!12399 = distinct !DILexicalBlock(scope: !12393, file: !11265, line: 3592, column: 5)
!12400 = !DILocation(line: 0, scope: !12398)
!12401 = !DILocation(line: 3593, column: 10, scope: !12399)
!12402 = !DILocation(line: 3610, column: 15, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12398, file: !11265, line: 3594, column: 7)
!12404 = !DILocation(line: 3610, column: 9, scope: !12403)
!12405 = !DILocation(line: 3612, column: 15, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12407, file: !11265, line: 3612, column: 14)
!12407 = distinct !DILexicalBlock(scope: !12403, file: !11265, line: 3611, column: 9)
!12408 = !DILocation(line: 3612, column: 29, scope: !12406)
!12409 = !DILocation(line: 3612, column: 43, scope: !12406)
!12410 = !DILocation(line: 3612, column: 14, scope: !12407)
!12411 = distinct !{!12411, !12404, !12412}
!12412 = !DILocation(line: 3616, column: 9, scope: !12403)
!12413 = !DILocation(line: 3619, column: 9, scope: !12403)
!12414 = !DILocation(line: 3626, column: 9, scope: !12403)
!12415 = !DILocation(line: 3629, column: 21, scope: !12403)
!12416 = !DILocation(line: 3632, column: 9, scope: !12403)
!12417 = !DILocation(line: 3632, column: 15, scope: !12403)
!12418 = !DILocation(line: 3632, column: 51, scope: !12403)
!12419 = !DILocation(line: 3634, column: 15, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !11265, line: 3634, column: 14)
!12421 = distinct !DILexicalBlock(scope: !12403, file: !11265, line: 3633, column: 9)
!12422 = !DILocation(line: 3634, column: 29, scope: !12420)
!12423 = !DILocation(line: 3634, column: 43, scope: !12420)
!12424 = !DILocation(line: 3634, column: 14, scope: !12421)
!12425 = distinct !{!12425, !12416, !12426}
!12426 = !DILocation(line: 3638, column: 9, scope: !12403)
!12427 = !DILocation(line: 3649, column: 15, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12398, file: !11265, line: 3641, column: 7)
!12429 = !DILocation(line: 3649, column: 9, scope: !12428)
!12430 = !DILocation(line: 3651, column: 15, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12432, file: !11265, line: 3651, column: 14)
!12432 = distinct !DILexicalBlock(scope: !12428, file: !11265, line: 3650, column: 9)
!12433 = !DILocation(line: 3651, column: 29, scope: !12431)
!12434 = !DILocation(line: 3651, column: 43, scope: !12431)
!12435 = !DILocation(line: 3651, column: 14, scope: !12432)
!12436 = distinct !{!12436, !12429, !12437}
!12437 = !DILocation(line: 3655, column: 9, scope: !12428)
!12438 = !DILocation(line: 3661, column: 44, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !11265, line: 3661, column: 10)
!12440 = distinct !DILexicalBlock(scope: !12393, file: !11265, line: 3659, column: 5)
!12441 = !DILocation(line: 3661, column: 10, scope: !12440)
!12442 = !DILocation(line: 3668, column: 27, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12439, file: !11265, line: 3666, column: 7)
!12444 = !DILocation(line: 3671, column: 14, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12443, file: !11265, line: 3670, column: 13)
!12446 = !DILocation(line: 3671, column: 81, scope: !12445)
!12447 = !DILocation(line: 3671, column: 55, scope: !12445)
!12448 = !DILocation(line: 3671, column: 92, scope: !12445)
!12449 = !DILocation(line: 3672, column: 14, scope: !12445)
!12450 = !DILocation(line: 3672, column: 80, scope: !12445)
!12451 = !DILocation(line: 3672, column: 53, scope: !12445)
!12452 = !DILocation(line: 3672, column: 111, scope: !12445)
!12453 = !DILocation(line: 3673, column: 14, scope: !12445)
!12454 = !DILocation(line: 3673, column: 80, scope: !12445)
!12455 = !DILocation(line: 3673, column: 86, scope: !12445)
!12456 = !DILocation(line: 3673, column: 53, scope: !12445)
!12457 = !DILocation(line: 3673, column: 111, scope: !12445)
!12458 = !DILocation(line: 3674, column: 14, scope: !12445)
!12459 = !DILocation(line: 3674, column: 82, scope: !12445)
!12460 = !DILocation(line: 3674, column: 101, scope: !12445)
!12461 = !DILocation(line: 3674, column: 53, scope: !12445)
!12462 = !DILocation(line: 3674, column: 126, scope: !12445)
!12463 = !DILocation(line: 3675, column: 14, scope: !12445)
!12464 = !DILocation(line: 3675, column: 80, scope: !12445)
!12465 = !DILocation(line: 3675, column: 85, scope: !12445)
!12466 = !DILocation(line: 3675, column: 53, scope: !12445)
!12467 = !DILocation(line: 3675, column: 111, scope: !12445)
!12468 = !DILocation(line: 3676, column: 14, scope: !12445)
!12469 = !DILocation(line: 3676, column: 80, scope: !12445)
!12470 = !DILocation(line: 3676, column: 85, scope: !12445)
!12471 = !DILocation(line: 3676, column: 53, scope: !12445)
!12472 = !DILocation(line: 3670, column: 13, scope: !12443)
!12473 = !DILocation(line: 3691, column: 3, scope: !12103)
!12474 = !DILocation(line: 3692, column: 1, scope: !12103)
!12475 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11265, file: !11265, line: 3703, type: !12476, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !12478)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{null, !12106}
!12478 = !{!12479}
!12479 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12475, file: !11265, line: 3703, type: !12106)
!12480 = !DILocation(line: 0, scope: !12475)
!12481 = !DILocation(line: 3706, column: 22, scope: !12475)
!12482 = !DILocation(line: 3706, column: 37, scope: !12475)
!12483 = !DILocation(line: 3709, column: 12, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12475, file: !11265, line: 3709, column: 6)
!12485 = !DILocation(line: 3709, column: 15, scope: !12484)
!12486 = !DILocation(line: 3709, column: 31, scope: !12484)
!12487 = !DILocation(line: 3709, column: 6, scope: !12475)
!12488 = !DILocation(line: 3711, column: 24, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12484, file: !11265, line: 3710, column: 3)
!12490 = !DILocation(line: 3711, column: 33, scope: !12489)
!12491 = !DILocation(line: 3712, column: 3, scope: !12489)
!12492 = !DILocation(line: 3713, column: 17, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12484, file: !11265, line: 3713, column: 11)
!12494 = !DILocation(line: 3713, column: 20, scope: !12493)
!12495 = !DILocation(line: 3713, column: 35, scope: !12493)
!12496 = !DILocation(line: 0, scope: !12493)
!12497 = !DILocation(line: 3713, column: 11, scope: !12484)
!12498 = !DILocation(line: 3715, column: 33, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12493, file: !11265, line: 3714, column: 3)
!12500 = !DILocation(line: 3716, column: 3, scope: !12499)
!12501 = !DILocation(line: 3719, column: 33, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12493, file: !11265, line: 3718, column: 3)
!12503 = !DILocation(line: 3723, column: 12, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12475, file: !11265, line: 3723, column: 6)
!12505 = !DILocation(line: 3723, column: 15, scope: !12504)
!12506 = !DILocation(line: 3729, column: 24, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12504, file: !11265, line: 3728, column: 3)
!12508 = !DILocation(line: 3729, column: 33, scope: !12507)
!12509 = !DILocation(line: 3732, column: 61, scope: !12475)
!12510 = !DILocation(line: 3732, column: 81, scope: !12475)
!12511 = !DILocation(line: 3732, column: 22, scope: !12475)
!12512 = !DILocation(line: 3732, column: 42, scope: !12475)
!12513 = !DILocation(line: 3735, column: 12, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12475, file: !11265, line: 3735, column: 6)
!12515 = !DILocation(line: 3735, column: 17, scope: !12514)
!12516 = !DILocation(line: 3735, column: 35, scope: !12514)
!12517 = !DILocation(line: 3735, column: 6, scope: !12475)
!12518 = !DILocation(line: 3737, column: 24, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !11265, line: 3736, column: 3)
!12520 = !DILocation(line: 3737, column: 33, scope: !12519)
!12521 = !DILocation(line: 3738, column: 3, scope: !12519)
!12522 = !DILocation(line: 3739, column: 17, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12514, file: !11265, line: 3739, column: 11)
!12524 = !DILocation(line: 3739, column: 22, scope: !12523)
!12525 = !DILocation(line: 3739, column: 39, scope: !12523)
!12526 = !DILocation(line: 0, scope: !12523)
!12527 = !DILocation(line: 3739, column: 11, scope: !12514)
!12528 = !DILocation(line: 3741, column: 33, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12523, file: !11265, line: 3740, column: 3)
!12530 = !DILocation(line: 3742, column: 3, scope: !12529)
!12531 = !DILocation(line: 3745, column: 33, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12523, file: !11265, line: 3744, column: 3)
!12533 = !DILocation(line: 3749, column: 12, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12475, file: !11265, line: 3749, column: 6)
!12535 = !DILocation(line: 3749, column: 16, scope: !12534)
!12536 = !DILocation(line: 3755, column: 24, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12534, file: !11265, line: 3754, column: 3)
!12538 = !DILocation(line: 3755, column: 33, scope: !12537)
!12539 = !DILocation(line: 3759, column: 12, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12475, file: !11265, line: 3759, column: 6)
!12541 = !DILocation(line: 3759, column: 15, scope: !12540)
!12542 = !DILocation(line: 3759, column: 30, scope: !12540)
!12543 = !DILocation(line: 3759, column: 6, scope: !12475)
!12544 = !DILocation(line: 3765, column: 28, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12540, file: !11265, line: 3764, column: 3)
!12546 = !DILocation(line: 3765, column: 37, scope: !12545)
!12547 = !DILocation(line: 3767, column: 54, scope: !12475)
!12548 = !DILocation(line: 3767, column: 62, scope: !12475)
!12549 = !DILocation(line: 3767, column: 26, scope: !12475)
!12550 = !DILocation(line: 3767, column: 36, scope: !12475)
!12551 = !DILocation(line: 3768, column: 49, scope: !12475)
!12552 = !DILocation(line: 3768, column: 57, scope: !12475)
!12553 = !DILocation(line: 3768, column: 26, scope: !12475)
!12554 = !DILocation(line: 3768, column: 31, scope: !12475)
!12555 = !DILocation(line: 3769, column: 50, scope: !12475)
!12556 = !DILocation(line: 3769, column: 78, scope: !12475)
!12557 = !DILocation(line: 3769, column: 26, scope: !12475)
!12558 = !DILocation(line: 3769, column: 31, scope: !12475)
!12559 = !DILocation(line: 3770, column: 52, scope: !12475)
!12560 = !DILocation(line: 3770, column: 102, scope: !12475)
!12561 = !DILocation(line: 3770, column: 109, scope: !12475)
!12562 = !DILocation(line: 3770, column: 26, scope: !12475)
!12563 = !DILocation(line: 3770, column: 31, scope: !12475)
!12564 = !DILocation(line: 3771, column: 50, scope: !12475)
!12565 = !DILocation(line: 3771, column: 78, scope: !12475)
!12566 = !DILocation(line: 3771, column: 26, scope: !12475)
!12567 = !DILocation(line: 3771, column: 31, scope: !12475)
!12568 = !DILocation(line: 3772, column: 50, scope: !12475)
!12569 = !DILocation(line: 3772, column: 78, scope: !12475)
!12570 = !DILocation(line: 3772, column: 26, scope: !12475)
!12571 = !DILocation(line: 3772, column: 31, scope: !12475)
!12572 = !DILocation(line: 3773, column: 1, scope: !12475)
!12573 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12574, file: !12574, line: 257, type: !6124, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12575)
!12574 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12575 = !{!12576}
!12576 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12573, file: !12574, line: 257, type: !121)
!12577 = !DILocation(line: 0, scope: !12573)
!12578 = !DILocation(line: 260, column: 3, scope: !12573)
!12579 = !DILocation(line: 261, column: 1, scope: !12573)
!12580 = distinct !DISubprogram(name: "LL_InitTick", scope: !12581, file: !12581, line: 260, type: !9286, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12582)
!12581 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12582 = !{!12583, !12584}
!12583 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12580, file: !12581, line: 260, type: !121)
!12584 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12580, file: !12581, line: 260, type: !121)
!12585 = !DILocation(line: 0, scope: !12580)
!12586 = !DILocation(line: 263, column: 46, scope: !12580)
!12587 = !DILocation(line: 263, column: 55, scope: !12580)
!12588 = !DILocation(line: 263, column: 18, scope: !12580)
!12589 = !DILocation(line: 264, column: 18, scope: !12580)
!12590 = !DILocation(line: 265, column: 18, scope: !12580)
!12591 = !DILocation(line: 267, column: 1, scope: !12580)
!12592 = distinct !DISubprogram(name: "LL_mDelay", scope: !12574, file: !12574, line: 273, type: !6124, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12593)
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "Delay", arg: 1, scope: !12592, file: !12574, line: 273, type: !121)
!12595 = !DILocalVariable(name: "tmp", scope: !12592, file: !12574, line: 275, type: !120)
!12596 = !DILocation(line: 0, scope: !12592)
!12597 = !DILocation(line: 275, column: 3, scope: !12592)
!12598 = !DILocation(line: 275, column: 18, scope: !12592)
!12599 = !DILocation(line: 275, column: 33, scope: !12592)
!12600 = !DILocation(line: 277, column: 10, scope: !12592)
!12601 = !DILocation(line: 280, column: 12, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12592, file: !12574, line: 280, column: 6)
!12603 = !DILocation(line: 285, column: 3, scope: !12592)
!12604 = !DILocation(line: 287, column: 18, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !12574, line: 287, column: 8)
!12606 = distinct !DILexicalBlock(scope: !12592, file: !12574, line: 286, column: 3)
!12607 = !DILocation(line: 292, column: 1, scope: !12592)
!12608 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12574, file: !12574, line: 323, type: !6124, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12609)
!12609 = !{!12610}
!12610 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12608, file: !12574, line: 323, type: !121)
!12611 = !DILocation(line: 0, scope: !12608)
!12612 = !DILocation(line: 326, column: 19, scope: !12608)
!12613 = !DILocation(line: 327, column: 1, scope: !12608)
!12614 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12574, file: !12574, line: 338, type: !12615, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12618)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{!12617, !121}
!12617 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !825, line: 201, baseType: !824)
!12618 = !{!12619, !12620, !12621, !12622, !12623}
!12619 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12614, file: !12574, line: 338, type: !121)
!12620 = !DILocalVariable(name: "timeout", scope: !12614, file: !12574, line: 340, type: !121)
!12621 = !DILocalVariable(name: "getlatency", scope: !12614, file: !12574, line: 341, type: !121)
!12622 = !DILocalVariable(name: "latency", scope: !12614, file: !12574, line: 342, type: !121)
!12623 = !DILocalVariable(name: "status", scope: !12614, file: !12574, line: 343, type: !12617)
!12624 = !DILocation(line: 0, scope: !12614)
!12625 = !DILocation(line: 347, column: 21, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12614, file: !12574, line: 347, column: 6)
!12627 = !DILocation(line: 347, column: 6, scope: !12614)
!12628 = !DILocation(line: 353, column: 8, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !12574, line: 353, column: 8)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !12574, line: 352, column: 3)
!12631 = !DILocation(line: 353, column: 40, scope: !12629)
!12632 = !DILocation(line: 353, column: 8, scope: !12630)
!12633 = !DILocation(line: 356, column: 26, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !12574, line: 356, column: 10)
!12635 = distinct !DILexicalBlock(scope: !12629, file: !12574, line: 354, column: 5)
!12636 = !DILocation(line: 356, column: 55, scope: !12634)
!12637 = !DILocation(line: 362, column: 55, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12635, file: !12574, line: 362, column: 10)
!12639 = !DILocation(line: 368, column: 55, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12635, file: !12574, line: 368, column: 10)
!12641 = !DILocation(line: 374, column: 26, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12635, file: !12574, line: 374, column: 10)
!12643 = !DILocation(line: 374, column: 55, scope: !12642)
!12644 = !DILocation(line: 380, column: 28, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12574, line: 380, column: 12)
!12646 = distinct !DILexicalBlock(scope: !12642, file: !12574, line: 379, column: 7)
!12647 = !DILocation(line: 380, column: 57, scope: !12645)
!12648 = !DILocation(line: 387, column: 8, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12630, file: !12574, line: 387, column: 8)
!12650 = !DILocation(line: 387, column: 40, scope: !12649)
!12651 = !DILocation(line: 387, column: 8, scope: !12630)
!12652 = !DILocation(line: 390, column: 26, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12574, line: 390, column: 10)
!12654 = distinct !DILexicalBlock(scope: !12649, file: !12574, line: 388, column: 5)
!12655 = !DILocation(line: 390, column: 55, scope: !12653)
!12656 = !DILocation(line: 396, column: 26, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12654, file: !12574, line: 396, column: 10)
!12658 = !DILocation(line: 396, column: 55, scope: !12657)
!12659 = !DILocation(line: 402, column: 26, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12654, file: !12574, line: 402, column: 10)
!12661 = !DILocation(line: 402, column: 55, scope: !12660)
!12662 = !DILocation(line: 407, column: 26, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12654, file: !12574, line: 407, column: 10)
!12664 = !DILocation(line: 407, column: 55, scope: !12663)
!12665 = !DILocation(line: 413, column: 28, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !12574, line: 413, column: 12)
!12667 = distinct !DILexicalBlock(scope: !12663, file: !12574, line: 412, column: 7)
!12668 = !DILocation(line: 413, column: 57, scope: !12666)
!12669 = !DILocation(line: 0, scope: !12630)
!12670 = !DILocation(line: 420, column: 8, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12630, file: !12574, line: 420, column: 8)
!12672 = !DILocation(line: 420, column: 40, scope: !12671)
!12673 = !DILocation(line: 420, column: 8, scope: !12630)
!12674 = !DILocation(line: 423, column: 26, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12574, line: 423, column: 10)
!12676 = distinct !DILexicalBlock(scope: !12671, file: !12574, line: 421, column: 5)
!12677 = !DILocation(line: 423, column: 55, scope: !12675)
!12678 = !DILocation(line: 429, column: 26, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12676, file: !12574, line: 429, column: 10)
!12680 = !DILocation(line: 429, column: 55, scope: !12679)
!12681 = !DILocation(line: 435, column: 28, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12574, line: 435, column: 12)
!12683 = distinct !DILexicalBlock(scope: !12679, file: !12574, line: 434, column: 7)
!12684 = !DILocation(line: 435, column: 57, scope: !12682)
!12685 = !DILocation(line: 444, column: 5, scope: !12630)
!12686 = !DILocation(line: 448, column: 5, scope: !12630)
!12687 = !DILocation(line: 451, column: 18, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12630, file: !12574, line: 449, column: 5)
!12689 = !DILocation(line: 452, column: 12, scope: !12688)
!12690 = !DILocation(line: 453, column: 26, scope: !12630)
!12691 = !DILocation(line: 453, column: 38, scope: !12630)
!12692 = !DILocation(line: 453, column: 5, scope: !12688)
!12693 = distinct !{!12693, !12686, !12694}
!12694 = !DILocation(line: 453, column: 54, scope: !12630)
!12695 = !DILocation(line: 0, scope: !12626)
!12696 = !DILocation(line: 464, column: 3, scope: !12614)
!12697 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12698, file: !12698, line: 519, type: !6114, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12698 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12699 = !DILocation(line: 521, column: 21, scope: !12697)
!12700 = !DILocation(line: 521, column: 3, scope: !12697)
!12701 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5839, file: !5839, line: 1543, type: !6124, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12702)
!12702 = !{!12703}
!12703 = !DILocalVariable(name: "Latency", arg: 1, scope: !12701, file: !5839, line: 1543, type: !121)
!12704 = !DILocation(line: 0, scope: !12701)
!12705 = !DILocation(line: 1545, column: 3, scope: !12701)
!12706 = !DILocation(line: 1546, column: 1, scope: !12701)
!12707 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5839, file: !5839, line: 1569, type: !6114, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12708 = !DILocation(line: 1571, column: 21, scope: !12707)
!12709 = !DILocation(line: 1571, column: 3, scope: !12707)
!12710 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12574, file: !12574, line: 483, type: !12711, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12727)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{!12617, !12713, !12720}
!12713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12714, size: 32)
!12714 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12581, line: 114, baseType: !12715)
!12715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12581, line: 94, size: 96, elements: !12716)
!12716 = !{!12717, !12718, !12719}
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12715, file: !12581, line: 96, baseType: !121, size: 32)
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12715, file: !12581, line: 102, baseType: !121, size: 32, offset: 32)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12715, file: !12581, line: 109, baseType: !121, size: 32, offset: 64)
!12720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12721, size: 32)
!12721 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12581, line: 139, baseType: !12722)
!12722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12581, line: 119, size: 96, elements: !12723)
!12723 = !{!12724, !12725, !12726}
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12722, file: !12581, line: 121, baseType: !121, size: 32)
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12722, file: !12581, line: 127, baseType: !121, size: 32, offset: 32)
!12726 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12722, file: !12581, line: 133, baseType: !121, size: 32, offset: 64)
!12727 = !{!12728, !12729, !12730, !12731}
!12728 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12710, file: !12574, line: 483, type: !12713)
!12729 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12710, file: !12574, line: 484, type: !12720)
!12730 = !DILocalVariable(name: "status", scope: !12710, file: !12574, line: 486, type: !12617)
!12731 = !DILocalVariable(name: "pllfreq", scope: !12710, file: !12574, line: 487, type: !121)
!12732 = !DILocation(line: 0, scope: !12710)
!12733 = !DILocation(line: 490, column: 6, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12710, file: !12574, line: 490, column: 6)
!12735 = !DILocation(line: 490, column: 25, scope: !12734)
!12736 = !DILocation(line: 490, column: 6, scope: !12710)
!12737 = !DILocation(line: 493, column: 15, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12734, file: !12574, line: 491, column: 3)
!12739 = !DILocation(line: 496, column: 8, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12738, file: !12574, line: 496, column: 8)
!12741 = !DILocation(line: 496, column: 29, scope: !12740)
!12742 = !DILocation(line: 496, column: 8, scope: !12738)
!12743 = !DILocation(line: 498, column: 7, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12740, file: !12574, line: 497, column: 5)
!12745 = !DILocation(line: 499, column: 7, scope: !12744)
!12746 = !DILocation(line: 499, column: 14, scope: !12744)
!12747 = !DILocation(line: 499, column: 35, scope: !12744)
!12748 = distinct !{!12748, !12745, !12749}
!12749 = !DILocation(line: 502, column: 7, scope: !12744)
!12750 = !DILocation(line: 506, column: 76, scope: !12738)
!12751 = !DILocation(line: 506, column: 103, scope: !12738)
!12752 = !DILocation(line: 507, column: 54, scope: !12738)
!12753 = !DILocation(line: 506, column: 5, scope: !12738)
!12754 = !DILocation(line: 510, column: 14, scope: !12738)
!12755 = !DILocation(line: 511, column: 3, scope: !12738)
!12756 = !DILocation(line: 0, scope: !12734)
!12757 = !DILocation(line: 518, column: 3, scope: !12710)
!12758 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12574, file: !12574, line: 642, type: !12759, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!12617}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "status", scope: !12758, file: !12574, line: 644, type: !12617)
!12763 = !DILocation(line: 0, scope: !12758)
!12764 = !DILocation(line: 647, column: 6, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12758, file: !12574, line: 647, column: 6)
!12766 = !DILocation(line: 647, column: 27, scope: !12765)
!12767 = !DILocation(line: 655, column: 6, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12758, file: !12574, line: 655, column: 6)
!12769 = !DILocation(line: 655, column: 30, scope: !12768)
!12770 = !DILocation(line: 663, column: 6, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12758, file: !12574, line: 663, column: 6)
!12772 = !DILocation(line: 663, column: 30, scope: !12771)
!12773 = !DILocation(line: 663, column: 6, scope: !12758)
!12774 = !DILocation(line: 669, column: 3, scope: !12758)
!12775 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12574, file: !12574, line: 611, type: !12776, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12778)
!12776 = !DISubroutineType(types: !12777)
!12777 = !{!121, !121, !12713}
!12778 = !{!12779, !12780, !12781}
!12779 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12775, file: !12574, line: 611, type: !121)
!12780 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12775, file: !12574, line: 611, type: !12713)
!12781 = !DILocalVariable(name: "pllfreq", scope: !12775, file: !12574, line: 613, type: !121)
!12782 = !DILocation(line: 0, scope: !12775)
!12783 = !DILocation(line: 622, column: 56, scope: !12775)
!12784 = !DILocation(line: 622, column: 61, scope: !12775)
!12785 = !DILocation(line: 622, column: 32, scope: !12775)
!12786 = !DILocation(line: 626, column: 45, scope: !12775)
!12787 = !DILocation(line: 626, column: 50, scope: !12775)
!12788 = !DILocation(line: 626, column: 21, scope: !12775)
!12789 = !DILocation(line: 630, column: 47, scope: !12775)
!12790 = !DILocation(line: 630, column: 82, scope: !12775)
!12791 = !DILocation(line: 630, column: 21, scope: !12775)
!12792 = !DILocation(line: 633, column: 3, scope: !12775)
!12793 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8069, file: !8069, line: 3007, type: !6114, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12794 = !DILocation(line: 3009, column: 11, scope: !12793)
!12795 = !DILocation(line: 3009, column: 44, scope: !12793)
!12796 = !DILocation(line: 3009, column: 3, scope: !12793)
!12797 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8069, file: !8069, line: 2987, type: !3255, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12798 = !DILocation(line: 2989, column: 3, scope: !12797)
!12799 = !DILocation(line: 2990, column: 1, scope: !12797)
!12800 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8069, file: !8069, line: 4304, type: !8203, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12801)
!12801 = !{!12802, !12803, !12804, !12805}
!12802 = !DILocalVariable(name: "Source", arg: 1, scope: !12800, file: !8069, line: 4304, type: !121)
!12803 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12800, file: !8069, line: 4304, type: !121)
!12804 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12800, file: !8069, line: 4304, type: !121)
!12805 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12800, file: !8069, line: 4304, type: !121)
!12806 = !DILocation(line: 0, scope: !12800)
!12807 = !DILocation(line: 4306, column: 3, scope: !12800)
!12808 = !DILocation(line: 4308, column: 3, scope: !12800)
!12809 = !DILocation(line: 4310, column: 3, scope: !12800)
!12810 = !DILocation(line: 4312, column: 1, scope: !12800)
!12811 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12574, file: !12574, line: 681, type: !12812, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12814)
!12812 = !DISubroutineType(types: !12813)
!12813 = !{!12617, !121, !12720}
!12814 = !{!12815, !12816, !12817, !12818}
!12815 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12811, file: !12574, line: 681, type: !121)
!12816 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12811, file: !12574, line: 681, type: !12720)
!12817 = !DILocalVariable(name: "status", scope: !12811, file: !12574, line: 683, type: !12617)
!12818 = !DILocalVariable(name: "hclk_frequency", scope: !12811, file: !12574, line: 684, type: !121)
!12819 = !DILocation(line: 0, scope: !12811)
!12820 = !DILocation(line: 691, column: 20, scope: !12811)
!12821 = !DILocation(line: 694, column: 6, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12811, file: !12574, line: 694, column: 6)
!12823 = !DILocation(line: 694, column: 22, scope: !12822)
!12824 = !DILocation(line: 694, column: 6, scope: !12811)
!12825 = !DILocation(line: 697, column: 14, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12822, file: !12574, line: 695, column: 3)
!12827 = !DILocation(line: 701, column: 13, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12811, file: !12574, line: 701, column: 6)
!12829 = !DILocation(line: 701, column: 6, scope: !12811)
!12830 = !DILocation(line: 704, column: 5, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !12574, line: 702, column: 3)
!12832 = !DILocation(line: 705, column: 5, scope: !12831)
!12833 = !DILocation(line: 705, column: 12, scope: !12831)
!12834 = !DILocation(line: 705, column: 33, scope: !12831)
!12835 = distinct !{!12835, !12832, !12836}
!12836 = !DILocation(line: 708, column: 5, scope: !12831)
!12837 = !DILocation(line: 711, column: 49, scope: !12831)
!12838 = !DILocation(line: 711, column: 5, scope: !12831)
!12839 = !DILocation(line: 712, column: 5, scope: !12831)
!12840 = !DILocation(line: 713, column: 5, scope: !12831)
!12841 = !DILocation(line: 713, column: 12, scope: !12831)
!12842 = !DILocation(line: 713, column: 37, scope: !12831)
!12843 = distinct !{!12843, !12840, !12844}
!12844 = !DILocation(line: 716, column: 5, scope: !12831)
!12845 = !DILocation(line: 719, column: 50, scope: !12831)
!12846 = !DILocation(line: 719, column: 5, scope: !12831)
!12847 = !DILocation(line: 720, column: 50, scope: !12831)
!12848 = !DILocation(line: 720, column: 5, scope: !12831)
!12849 = !DILocation(line: 721, column: 3, scope: !12831)
!12850 = !DILocation(line: 724, column: 6, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12811, file: !12574, line: 724, column: 6)
!12852 = !DILocation(line: 724, column: 22, scope: !12851)
!12853 = !DILocation(line: 724, column: 6, scope: !12811)
!12854 = !DILocation(line: 727, column: 14, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12851, file: !12574, line: 725, column: 3)
!12856 = !DILocation(line: 728, column: 3, scope: !12855)
!12857 = !DILocation(line: 731, column: 13, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12811, file: !12574, line: 731, column: 6)
!12859 = !DILocation(line: 731, column: 6, scope: !12811)
!12860 = !DILocation(line: 733, column: 5, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12858, file: !12574, line: 732, column: 3)
!12862 = !DILocation(line: 734, column: 3, scope: !12861)
!12863 = !DILocation(line: 736, column: 3, scope: !12811)
!12864 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8069, file: !8069, line: 4184, type: !3255, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12865 = !DILocation(line: 4186, column: 3, scope: !12864)
!12866 = !DILocation(line: 4187, column: 1, scope: !12864)
!12867 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8069, file: !8069, line: 4205, type: !6114, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12868 = !DILocation(line: 4207, column: 11, scope: !12867)
!12869 = !DILocation(line: 4207, column: 44, scope: !12867)
!12870 = !DILocation(line: 4207, column: 3, scope: !12867)
!12871 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8069, file: !8069, line: 3224, type: !6124, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12872)
!12872 = !{!12873}
!12873 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12871, file: !8069, line: 3224, type: !121)
!12874 = !DILocation(line: 0, scope: !12871)
!12875 = !DILocation(line: 3226, column: 3, scope: !12871)
!12876 = !DILocation(line: 3227, column: 1, scope: !12871)
!12877 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8069, file: !8069, line: 3188, type: !6124, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12878)
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "Source", arg: 1, scope: !12877, file: !8069, line: 3188, type: !121)
!12880 = !DILocation(line: 0, scope: !12877)
!12881 = !DILocation(line: 3190, column: 3, scope: !12877)
!12882 = !DILocation(line: 3191, column: 1, scope: !12877)
!12883 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8069, file: !8069, line: 3204, type: !6114, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12884 = !DILocation(line: 3206, column: 21, scope: !12883)
!12885 = !DILocation(line: 3206, column: 3, scope: !12883)
!12886 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8069, file: !8069, line: 3240, type: !6124, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12887)
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12886, file: !8069, line: 3240, type: !121)
!12889 = !DILocation(line: 0, scope: !12886)
!12890 = !DILocation(line: 3242, column: 3, scope: !12886)
!12891 = !DILocation(line: 3243, column: 1, scope: !12886)
!12892 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8069, file: !8069, line: 3256, type: !6124, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12893)
!12893 = !{!12894}
!12894 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12892, file: !8069, line: 3256, type: !121)
!12895 = !DILocation(line: 0, scope: !12892)
!12896 = !DILocation(line: 3258, column: 3, scope: !12892)
!12897 = !DILocation(line: 3259, column: 1, scope: !12892)
!12898 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8069, file: !8069, line: 5969, type: !6114, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12899 = !DILocation(line: 5971, column: 11, scope: !12898)
!12900 = !DILocation(line: 5971, column: 47, scope: !12898)
!12901 = !DILocation(line: 5971, column: 3, scope: !12898)
!12902 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8069, file: !8069, line: 5153, type: !6114, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12903 = !DILocation(line: 5155, column: 11, scope: !12902)
!12904 = !DILocation(line: 5155, column: 47, scope: !12902)
!12905 = !DILocation(line: 5155, column: 3, scope: !12902)
!12906 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12574, file: !12574, line: 540, type: !12907, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !12909)
!12907 = !DISubroutineType(types: !12908)
!12908 = !{!12617, !121, !121, !12713, !12720}
!12909 = !{!12910, !12911, !12912, !12913, !12914, !12915}
!12910 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12906, file: !12574, line: 540, type: !121)
!12911 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12906, file: !12574, line: 540, type: !121)
!12912 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12906, file: !12574, line: 541, type: !12713)
!12913 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12906, file: !12574, line: 541, type: !12720)
!12914 = !DILocalVariable(name: "status", scope: !12906, file: !12574, line: 543, type: !12617)
!12915 = !DILocalVariable(name: "pllfreq", scope: !12906, file: !12574, line: 544, type: !121)
!12916 = !DILocation(line: 0, scope: !12906)
!12917 = !DILocation(line: 551, column: 6, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12906, file: !12574, line: 551, column: 6)
!12919 = !DILocation(line: 551, column: 25, scope: !12918)
!12920 = !DILocation(line: 551, column: 6, scope: !12906)
!12921 = !DILocation(line: 554, column: 15, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12918, file: !12574, line: 552, column: 3)
!12923 = !DILocation(line: 557, column: 8, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12922, file: !12574, line: 557, column: 8)
!12925 = !DILocation(line: 557, column: 29, scope: !12924)
!12926 = !DILocation(line: 557, column: 8, scope: !12922)
!12927 = !DILocation(line: 560, column: 20, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !12574, line: 560, column: 10)
!12929 = distinct !DILexicalBlock(scope: !12924, file: !12574, line: 558, column: 5)
!12930 = !DILocation(line: 560, column: 10, scope: !12929)
!12931 = !DILocation(line: 562, column: 9, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12928, file: !12574, line: 561, column: 7)
!12933 = !DILocation(line: 563, column: 7, scope: !12932)
!12934 = !DILocation(line: 566, column: 9, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12928, file: !12574, line: 565, column: 7)
!12936 = !DILocation(line: 570, column: 7, scope: !12929)
!12937 = !DILocation(line: 571, column: 7, scope: !12929)
!12938 = !DILocation(line: 571, column: 14, scope: !12929)
!12939 = !DILocation(line: 571, column: 35, scope: !12929)
!12940 = distinct !{!12940, !12937, !12941}
!12941 = !DILocation(line: 574, column: 7, scope: !12929)
!12942 = !DILocation(line: 578, column: 76, scope: !12922)
!12943 = !DILocation(line: 578, column: 103, scope: !12922)
!12944 = !DILocation(line: 579, column: 54, scope: !12922)
!12945 = !DILocation(line: 578, column: 5, scope: !12922)
!12946 = !DILocation(line: 582, column: 14, scope: !12922)
!12947 = !DILocation(line: 583, column: 3, scope: !12922)
!12948 = !DILocation(line: 0, scope: !12918)
!12949 = !DILocation(line: 590, column: 3, scope: !12906)
!12950 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8069, file: !8069, line: 2969, type: !6114, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12951 = !DILocation(line: 2971, column: 11, scope: !12950)
!12952 = !DILocation(line: 2971, column: 44, scope: !12950)
!12953 = !DILocation(line: 2971, column: 3, scope: !12950)
!12954 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8069, file: !8069, line: 2929, type: !3255, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12955 = !DILocation(line: 2931, column: 3, scope: !12954)
!12956 = !DILocation(line: 2932, column: 1, scope: !12954)
!12957 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8069, file: !8069, line: 2939, type: !3255, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12958 = !DILocation(line: 2941, column: 3, scope: !12957)
!12959 = !DILocation(line: 2942, column: 1, scope: !12957)
!12960 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8069, file: !8069, line: 2949, type: !3255, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !317)
!12961 = !DILocation(line: 2951, column: 3, scope: !12960)
!12962 = !DILocation(line: 2952, column: 1, scope: !12960)
!12963 = distinct !DISubprogram(name: "z_device_state_init", scope: !12964, file: !12964, line: 23, type: !3255, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !12965)
!12964 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12965 = !{!12966}
!12966 = !DILocalVariable(name: "dev", scope: !12963, file: !12964, line: 25, type: !12967)
!12967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12968, size: 32)
!12968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12969)
!12969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12970)
!12970 = !{!12971, !12972, !12973, !12974, !12980, !12981}
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12969, file: !141, line: 380, baseType: !144, size: 32)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12969, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12969, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12974 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12969, file: !141, line: 386, baseType: !12975, size: 32, offset: 96)
!12975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12976, size: 32)
!12976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12977)
!12977 = !{!12978, !12979}
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12976, file: !141, line: 359, baseType: !154, size: 8)
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12976, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12969, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12969, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12982 = !DILocation(line: 0, scope: !12963)
!12983 = !DILocation(line: 31, column: 1, scope: !12963)
!12984 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12964, file: !12964, line: 33, type: !12985, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !12987)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{!12967, !144}
!12987 = !{!12988, !12989}
!12988 = !DILocalVariable(name: "name", arg: 1, scope: !12984, file: !12964, line: 33, type: !144)
!12989 = !DILocalVariable(name: "dev", scope: !12984, file: !12964, line: 35, type: !12967)
!12990 = !DILocation(line: 0, scope: !12984)
!12991 = !DILocation(line: 40, column: 12, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12984, file: !12964, line: 40, column: 6)
!12993 = !DILocation(line: 40, column: 21, scope: !12992)
!12994 = !DILocation(line: 40, column: 25, scope: !12992)
!12995 = !DILocation(line: 40, column: 33, scope: !12992)
!12996 = !DILocation(line: 40, column: 6, scope: !12984)
!12997 = !DILocation(line: 55, column: 2, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12984, file: !12964, line: 55, column: 2)
!12999 = !DILocation(line: 50, column: 7, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !13001, file: !12964, line: 50, column: 7)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !12964, line: 49, column: 57)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !12964, line: 49, column: 2)
!13003 = distinct !DILexicalBlock(scope: !12984, file: !12964, line: 49, column: 2)
!13004 = !DILocation(line: 50, column: 30, scope: !13000)
!13005 = !DILocation(line: 50, column: 39, scope: !13000)
!13006 = !DILocation(line: 50, column: 44, scope: !13000)
!13007 = !DILocation(line: 50, column: 7, scope: !13001)
!13008 = !DILocation(line: 49, column: 53, scope: !13002)
!13009 = !DILocation(line: 49, column: 33, scope: !13002)
!13010 = !DILocation(line: 49, column: 2, scope: !13003)
!13011 = distinct !{!13011, !13010, !13012}
!13012 = !DILocation(line: 53, column: 2, scope: !13003)
!13013 = !DILocation(line: 56, column: 7, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !12964, line: 56, column: 7)
!13015 = distinct !DILexicalBlock(scope: !13016, file: !12964, line: 55, column: 57)
!13016 = distinct !DILexicalBlock(scope: !12998, file: !12964, line: 55, column: 2)
!13017 = !DILocation(line: 56, column: 30, scope: !13014)
!13018 = !DILocation(line: 56, column: 52, scope: !13014)
!13019 = !DILocation(line: 56, column: 34, scope: !13014)
!13020 = !DILocation(line: 56, column: 58, scope: !13014)
!13021 = !DILocation(line: 56, column: 7, scope: !13015)
!13022 = !DILocation(line: 55, column: 53, scope: !13016)
!13023 = !DILocation(line: 55, column: 33, scope: !13016)
!13024 = distinct !{!13024, !12997, !13025}
!13025 = !DILocation(line: 59, column: 2, scope: !12998)
!13026 = !DILocation(line: 62, column: 1, scope: !12984)
!13027 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12964, file: !12964, line: 93, type: !13028, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13030)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{!157, !12967}
!13030 = !{!13031}
!13031 = !DILocalVariable(name: "dev", arg: 1, scope: !13027, file: !12964, line: 93, type: !12967)
!13032 = !DILocation(line: 0, scope: !13027)
!13033 = !DILocation(line: 99, column: 10, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13027, file: !12964, line: 99, column: 6)
!13035 = !DILocation(line: 99, column: 6, scope: !13027)
!13036 = !DILocation(line: 103, column: 14, scope: !13027)
!13037 = !DILocation(line: 103, column: 21, scope: !13027)
!13038 = !DILocation(line: 103, column: 33, scope: !13027)
!13039 = !DILocation(line: 103, column: 49, scope: !13027)
!13040 = !DILocation(line: 103, column: 58, scope: !13027)
!13041 = !DILocation(line: 104, column: 1, scope: !13027)
!13042 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12964, file: !12964, line: 87, type: !13043, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13046)
!13043 = !DISubroutineType(types: !13044)
!13044 = !{!204, !13045}
!13045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12967, size: 32)
!13046 = !{!13047}
!13047 = !DILocalVariable(name: "devices", arg: 1, scope: !13042, file: !12964, line: 87, type: !13045)
!13048 = !DILocation(line: 0, scope: !13042)
!13049 = !DILocation(line: 89, column: 11, scope: !13042)
!13050 = !DILocation(line: 90, column: 2, scope: !13042)
!13051 = distinct !DISubprogram(name: "device_required_foreach", scope: !12964, file: !12964, line: 125, type: !13052, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13058)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!103, !12967, !13054, !102}
!13054 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !13055)
!13055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13056, size: 32)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{!103, !12967, !102}
!13058 = !{!13059, !13060, !13061, !13062, !13063}
!13059 = !DILocalVariable(name: "dev", arg: 1, scope: !13051, file: !12964, line: 125, type: !12967)
!13060 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13051, file: !12964, line: 126, type: !13054)
!13061 = !DILocalVariable(name: "context", arg: 3, scope: !13051, file: !12964, line: 127, type: !102)
!13062 = !DILocalVariable(name: "handle_count", scope: !13051, file: !12964, line: 129, type: !204)
!13063 = !DILocalVariable(name: "handles", scope: !13051, file: !12964, line: 130, type: !160)
!13064 = !DILocation(line: 0, scope: !13051)
!13065 = !DILocation(line: 129, column: 2, scope: !13051)
!13066 = !DILocation(line: 129, column: 9, scope: !13051)
!13067 = !DILocation(line: 130, column: 35, scope: !13051)
!13068 = !DILocation(line: 132, column: 33, scope: !13051)
!13069 = !DILocation(line: 132, column: 9, scope: !13051)
!13070 = !DILocation(line: 133, column: 1, scope: !13051)
!13071 = !DILocation(line: 132, column: 2, scope: !13051)
!13072 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !13073, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!160, !12967, !2687}
!13075 = !{!13076, !13077, !13078, !13079}
!13076 = !DILocalVariable(name: "dev", arg: 1, scope: !13072, file: !141, line: 493, type: !12967)
!13077 = !DILocalVariable(name: "count", arg: 2, scope: !13072, file: !141, line: 493, type: !2687)
!13078 = !DILocalVariable(name: "rv", scope: !13072, file: !141, line: 495, type: !160)
!13079 = !DILocalVariable(name: "i", scope: !13080, file: !141, line: 498, type: !204)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !141, line: 497, column: 18)
!13081 = distinct !DILexicalBlock(scope: !13072, file: !141, line: 497, column: 6)
!13082 = !DILocation(line: 0, scope: !13072)
!13083 = !DILocation(line: 495, column: 35, scope: !13072)
!13084 = !DILocation(line: 497, column: 9, scope: !13081)
!13085 = !DILocation(line: 497, column: 6, scope: !13072)
!13086 = !DILocation(line: 0, scope: !13080)
!13087 = !DILocation(line: 500, column: 11, scope: !13080)
!13088 = !DILocation(line: 500, column: 40, scope: !13080)
!13089 = !DILocation(line: 502, column: 4, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13080, file: !141, line: 501, column: 40)
!13091 = distinct !{!13091, !13092, !13093}
!13092 = !DILocation(line: 500, column: 3, scope: !13080)
!13093 = !DILocation(line: 503, column: 3, scope: !13080)
!13094 = !DILocation(line: 504, column: 10, scope: !13080)
!13095 = !DILocation(line: 505, column: 2, scope: !13080)
!13096 = !DILocation(line: 507, column: 2, scope: !13072)
!13097 = distinct !DISubprogram(name: "device_visitor", scope: !12964, file: !12964, line: 106, type: !13098, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13100)
!13098 = !DISubroutineType(types: !13099)
!13099 = !{!103, !160, !204, !13054, !102}
!13100 = !{!13101, !13102, !13103, !13104, !13105, !13107, !13110, !13111}
!13101 = !DILocalVariable(name: "handles", arg: 1, scope: !13097, file: !12964, line: 106, type: !160)
!13102 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13097, file: !12964, line: 107, type: !204)
!13103 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13097, file: !12964, line: 108, type: !13054)
!13104 = !DILocalVariable(name: "context", arg: 4, scope: !13097, file: !12964, line: 109, type: !102)
!13105 = !DILocalVariable(name: "i", scope: !13106, file: !12964, line: 112, type: !204)
!13106 = distinct !DILexicalBlock(scope: !13097, file: !12964, line: 112, column: 2)
!13107 = !DILocalVariable(name: "dh", scope: !13108, file: !12964, line: 113, type: !162)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !12964, line: 112, column: 44)
!13109 = distinct !DILexicalBlock(scope: !13106, file: !12964, line: 112, column: 2)
!13110 = !DILocalVariable(name: "rdev", scope: !13108, file: !12964, line: 114, type: !12967)
!13111 = !DILocalVariable(name: "rc", scope: !13108, file: !12964, line: 115, type: !103)
!13112 = !DILocation(line: 0, scope: !13097)
!13113 = !DILocation(line: 0, scope: !13106)
!13114 = !DILocation(line: 112, column: 23, scope: !13109)
!13115 = !DILocation(line: 112, column: 2, scope: !13106)
!13116 = distinct !{!13116, !13115, !13117}
!13117 = !DILocation(line: 120, column: 2, scope: !13106)
!13118 = !DILocation(line: 113, column: 24, scope: !13108)
!13119 = !DILocation(line: 0, scope: !13108)
!13120 = !DILocation(line: 114, column: 31, scope: !13108)
!13121 = !DILocation(line: 115, column: 12, scope: !13108)
!13122 = !DILocation(line: 117, column: 10, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13108, file: !12964, line: 117, column: 7)
!13124 = !DILocation(line: 112, column: 39, scope: !13109)
!13125 = !DILocation(line: 123, column: 1, scope: !13097)
!13126 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !13127, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13129)
!13127 = !DISubroutineType(types: !13128)
!13128 = !{!12967, !162}
!13129 = !{!13130, !13131, !13132}
!13130 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13126, file: !141, line: 439, type: !162)
!13131 = !DILocalVariable(name: "dev", scope: !13126, file: !141, line: 443, type: !12967)
!13132 = !DILocalVariable(name: "numdev", scope: !13126, file: !141, line: 444, type: !204)
!13133 = !DILocation(line: 0, scope: !13126)
!13134 = !DILocation(line: 446, column: 7, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13126, file: !141, line: 446, column: 6)
!13136 = !DILocation(line: 446, column: 18, scope: !13135)
!13137 = !DILocation(line: 446, column: 23, scope: !13135)
!13138 = !DILocation(line: 450, column: 2, scope: !13126)
!13139 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12964, file: !12964, line: 135, type: !13052, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13140)
!13140 = !{!13141, !13142, !13143, !13144, !13145}
!13141 = !DILocalVariable(name: "dev", arg: 1, scope: !13139, file: !12964, line: 135, type: !12967)
!13142 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13139, file: !12964, line: 136, type: !13054)
!13143 = !DILocalVariable(name: "context", arg: 3, scope: !13139, file: !12964, line: 137, type: !102)
!13144 = !DILocalVariable(name: "handle_count", scope: !13139, file: !12964, line: 139, type: !204)
!13145 = !DILocalVariable(name: "handles", scope: !13139, file: !12964, line: 140, type: !160)
!13146 = !DILocation(line: 0, scope: !13139)
!13147 = !DILocation(line: 139, column: 2, scope: !13139)
!13148 = !DILocation(line: 139, column: 9, scope: !13139)
!13149 = !DILocation(line: 140, column: 35, scope: !13139)
!13150 = !DILocation(line: 142, column: 33, scope: !13139)
!13151 = !DILocation(line: 142, column: 9, scope: !13139)
!13152 = !DILocation(line: 143, column: 1, scope: !13139)
!13153 = !DILocation(line: 142, column: 2, scope: !13139)
!13154 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !13073, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3172, retainedNodes: !13155)
!13155 = !{!13156, !13157, !13158, !13159, !13160}
!13156 = !DILocalVariable(name: "dev", arg: 1, scope: !13154, file: !141, line: 573, type: !12967)
!13157 = !DILocalVariable(name: "count", arg: 2, scope: !13154, file: !141, line: 573, type: !2687)
!13158 = !DILocalVariable(name: "rv", scope: !13154, file: !141, line: 575, type: !160)
!13159 = !DILocalVariable(name: "region", scope: !13154, file: !141, line: 576, type: !204)
!13160 = !DILocalVariable(name: "i", scope: !13154, file: !141, line: 577, type: !204)
!13161 = !DILocation(line: 0, scope: !13154)
!13162 = !DILocation(line: 575, column: 35, scope: !13154)
!13163 = !DILocation(line: 579, column: 9, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13154, file: !141, line: 579, column: 6)
!13165 = !DILocation(line: 579, column: 6, scope: !13154)
!13166 = !DILocation(line: 582, column: 8, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !141, line: 582, column: 8)
!13168 = distinct !DILexicalBlock(scope: !13169, file: !141, line: 581, column: 23)
!13169 = distinct !DILexicalBlock(scope: !13164, file: !141, line: 579, column: 18)
!13170 = !DILocation(line: 582, column: 12, scope: !13167)
!13171 = !DILocation(line: 585, column: 6, scope: !13168)
!13172 = !DILocation(line: 0, scope: !13169)
!13173 = !DILocation(line: 581, column: 17, scope: !13169)
!13174 = !DILocation(line: 581, column: 3, scope: !13169)
!13175 = !DILocation(line: 588, column: 10, scope: !13169)
!13176 = !DILocation(line: 588, column: 16, scope: !13169)
!13177 = !DILocation(line: 589, column: 4, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13169, file: !141, line: 588, column: 39)
!13179 = !DILocation(line: 588, column: 3, scope: !13169)
!13180 = distinct !{!13180, !13179, !13181}
!13181 = !DILocation(line: 590, column: 3, scope: !13169)
!13182 = !DILocation(line: 591, column: 10, scope: !13169)
!13183 = !DILocation(line: 592, column: 2, scope: !13169)
!13184 = !DILocation(line: 575, column: 25, scope: !13154)
!13185 = !DILocation(line: 594, column: 2, scope: !13154)
!13186 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2043, file: !2043, line: 49, type: !13187, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2040, retainedNodes: !317)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{!2681}
!13189 = !DILocation(line: 51, column: 10, scope: !13186)
!13190 = !DILocation(line: 51, column: 20, scope: !13186)
!13191 = !DILocation(line: 51, column: 2, scope: !13186)
!13192 = distinct !DISubprogram(name: "coredump", scope: !3179, file: !3179, line: 209, type: !13193, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13339)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{null, !32, !13195, !13239}
!13195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13196, size: 32)
!13196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13197)
!13197 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2812, line: 141, baseType: !13198)
!13198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2812, line: 97, size: 256, elements: !13199)
!13199 = !{!13200}
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13198, file: !2812, line: 107, baseType: !13201, size: 256)
!13201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2812, line: 98, size: 256, elements: !13202)
!13202 = !{!13203, !13208, !13213, !13218, !13223, !13228, !13233, !13238}
!13203 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 99, baseType: !13204, size: 32)
!13204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 99, size: 32, elements: !13205)
!13205 = !{!13206, !13207}
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13204, file: !2812, line: 99, baseType: !121, size: 32)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13204, file: !2812, line: 99, baseType: !121, size: 32)
!13208 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 100, baseType: !13209, size: 32, offset: 32)
!13209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 100, size: 32, elements: !13210)
!13210 = !{!13211, !13212}
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13209, file: !2812, line: 100, baseType: !121, size: 32)
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13209, file: !2812, line: 100, baseType: !121, size: 32)
!13213 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 101, baseType: !13214, size: 32, offset: 64)
!13214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 101, size: 32, elements: !13215)
!13215 = !{!13216, !13217}
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13214, file: !2812, line: 101, baseType: !121, size: 32)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13214, file: !2812, line: 101, baseType: !121, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 102, baseType: !13219, size: 32, offset: 96)
!13219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 102, size: 32, elements: !13220)
!13220 = !{!13221, !13222}
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13219, file: !2812, line: 102, baseType: !121, size: 32)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13219, file: !2812, line: 102, baseType: !121, size: 32)
!13223 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 103, baseType: !13224, size: 32, offset: 128)
!13224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 103, size: 32, elements: !13225)
!13225 = !{!13226, !13227}
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13224, file: !2812, line: 103, baseType: !121, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13224, file: !2812, line: 103, baseType: !121, size: 32)
!13228 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 104, baseType: !13229, size: 32, offset: 160)
!13229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 104, size: 32, elements: !13230)
!13230 = !{!13231, !13232}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13229, file: !2812, line: 104, baseType: !121, size: 32)
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13229, file: !2812, line: 104, baseType: !121, size: 32)
!13233 = !DIDerivedType(tag: DW_TAG_member, scope: !13201, file: !2812, line: 105, baseType: !13234, size: 32, offset: 192)
!13234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13201, file: !2812, line: 105, size: 32, elements: !13235)
!13235 = !{!13236, !13237}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13234, file: !2812, line: 105, baseType: !121, size: 32)
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13234, file: !2812, line: 105, baseType: !121, size: 32)
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13201, file: !2812, line: 106, baseType: !121, size: 32, offset: 224)
!13239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13240, size: 32)
!13240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13241)
!13241 = !{!13242, !13300, !13312, !13313, !13314, !13315, !13321, !13334}
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13240, file: !379, line: 247, baseType: !13243, size: 384)
!13243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13244)
!13244 = !{!13245, !13269, !13276, !13277, !13278, !13287, !13288, !13289}
!13245 = !DIDerivedType(tag: DW_TAG_member, scope: !13243, file: !379, line: 60, baseType: !13246, size: 64)
!13246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13243, file: !379, line: 60, size: 64, elements: !13247)
!13247 = !{!13248, !13263}
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13246, file: !379, line: 61, baseType: !13249, size: 64)
!13249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !13250)
!13250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !13251)
!13251 = !{!13252, !13258}
!13252 = !DIDerivedType(tag: DW_TAG_member, scope: !13250, file: !325, line: 38, baseType: !13253, size: 32)
!13253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13250, file: !325, line: 38, size: 32, elements: !13254)
!13254 = !{!13255, !13257}
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13253, file: !325, line: 39, baseType: !13256, size: 32)
!13256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13250, size: 32)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13253, file: !325, line: 40, baseType: !13256, size: 32)
!13258 = !DIDerivedType(tag: DW_TAG_member, scope: !13250, file: !325, line: 42, baseType: !13259, size: 32, offset: 32)
!13259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13250, file: !325, line: 42, size: 32, elements: !13260)
!13260 = !{!13261, !13262}
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13259, file: !325, line: 43, baseType: !13256, size: 32)
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13259, file: !325, line: 44, baseType: !13256, size: 32)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13246, file: !379, line: 62, baseType: !13264, size: 64)
!13264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13265)
!13265 = !{!13266}
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13264, file: !404, line: 50, baseType: !13267, size: 64)
!13267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13268, size: 64, elements: !363)
!13268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13264, size: 32)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13243, file: !379, line: 68, baseType: !13270, size: 32, offset: 64)
!13270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13271, size: 32)
!13271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13272)
!13272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13273)
!13273 = !{!13274}
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13272, file: !320, line: 232, baseType: !13275, size: 64)
!13275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !13250)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13243, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13243, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13278 = !DIDerivedType(tag: DW_TAG_member, scope: !13243, file: !379, line: 90, baseType: !13279, size: 16, offset: 112)
!13279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13243, file: !379, line: 90, size: 16, elements: !13280)
!13280 = !{!13281, !13286}
!13281 = !DIDerivedType(tag: DW_TAG_member, scope: !13279, file: !379, line: 91, baseType: !13282, size: 16)
!13282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13279, file: !379, line: 91, size: 16, elements: !13283)
!13283 = !{!13284, !13285}
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13282, file: !379, line: 96, baseType: !425, size: 8)
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13282, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13279, file: !379, line: 100, baseType: !429, size: 16)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13243, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13243, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13243, file: !379, line: 131, baseType: !13290, size: 192, offset: 192)
!13290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13291)
!13291 = !{!13292, !13293, !13299}
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13290, file: !320, line: 245, baseType: !13249, size: 64)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13290, file: !320, line: 246, baseType: !13294, size: 32, offset: 64)
!13294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13295)
!13295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13296, size: 32)
!13296 = !DISubroutineType(types: !13297)
!13297 = !{null, !13298}
!13298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13290, size: 32)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13290, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13240, file: !379, line: 250, baseType: !13301, size: 288, offset: 384)
!13301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13302)
!13302 = !{!13303, !13304, !13305, !13306, !13307, !13308, !13309, !13310, !13311}
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13301, file: !446, line: 26, baseType: !121, size: 32)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13301, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13301, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13301, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13301, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13301, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13301, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13301, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13301, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13240, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13240, file: !379, line: 256, baseType: !13271, size: 64, offset: 704)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13240, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13240, file: !379, line: 300, baseType: !13316, size: 96, offset: 800)
!13316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13317)
!13317 = !{!13318, !13319, !13320}
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13316, file: !379, line: 153, baseType: !22, size: 32)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13316, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13316, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13240, file: !379, line: 325, baseType: !13322, size: 32, offset: 896)
!13322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13323, size: 32)
!13323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13324)
!13324 = !{!13325, !13331, !13332}
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13323, file: !296, line: 5074, baseType: !13326, size: 96)
!13326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13327)
!13327 = !{!13328, !13329, !13330}
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13326, file: !472, line: 57, baseType: !475, size: 32)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13326, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13326, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13323, file: !296, line: 5075, baseType: !13271, size: 64, offset: 96)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13323, file: !296, line: 5076, baseType: !13333, offset: 160)
!13333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13240, file: !379, line: 343, baseType: !13335, size: 64, offset: 928)
!13335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13336)
!13336 = !{!13337, !13338}
!13337 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13335, file: !446, line: 63, baseType: !121, size: 32)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13335, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13339 = !{!13340, !13341, !13342}
!13340 = !DILocalVariable(name: "reason", arg: 1, scope: !13192, file: !3179, line: 209, type: !32)
!13341 = !DILocalVariable(name: "esf", arg: 2, scope: !13192, file: !3179, line: 209, type: !13195)
!13342 = !DILocalVariable(name: "thread", arg: 3, scope: !13192, file: !3179, line: 210, type: !13239)
!13343 = !DILocation(line: 0, scope: !13192)
!13344 = !DILocation(line: 212, column: 1, scope: !13192)
!13345 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3179, file: !3179, line: 214, type: !13346, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13348)
!13346 = !DISubroutineType(types: !13347)
!13347 = !{null, !22, !22}
!13348 = !{!13349, !13350}
!13349 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13345, file: !3179, line: 214, type: !22)
!13350 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13345, file: !3179, line: 214, type: !22)
!13351 = !DILocation(line: 0, scope: !13345)
!13352 = !DILocation(line: 216, column: 1, scope: !13345)
!13353 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3179, file: !3179, line: 218, type: !13354, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13356)
!13354 = !DISubroutineType(types: !13355)
!13355 = !{null, !267, !204}
!13356 = !{!13357, !13358}
!13357 = !DILocalVariable(name: "buf", arg: 1, scope: !13353, file: !3179, line: 218, type: !267)
!13358 = !DILocalVariable(name: "buflen", arg: 2, scope: !13353, file: !3179, line: 218, type: !204)
!13359 = !DILocation(line: 0, scope: !13353)
!13360 = !DILocation(line: 220, column: 1, scope: !13353)
!13361 = distinct !DISubprogram(name: "coredump_query", scope: !3179, file: !3179, line: 222, type: !13362, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13364)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{!103, !3178, !102}
!13364 = !{!13365, !13366}
!13365 = !DILocalVariable(name: "query_id", arg: 1, scope: !13361, file: !3179, line: 222, type: !3178)
!13366 = !DILocalVariable(name: "arg", arg: 2, scope: !13361, file: !3179, line: 222, type: !102)
!13367 = !DILocation(line: 0, scope: !13361)
!13368 = !DILocation(line: 224, column: 2, scope: !13361)
!13369 = distinct !DISubprogram(name: "coredump_cmd", scope: !3179, file: !3179, line: 227, type: !13370, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{!103, !3185, !102}
!13372 = !{!13373, !13374}
!13373 = !DILocalVariable(name: "query_id", arg: 1, scope: !13369, file: !3179, line: 227, type: !3185)
!13374 = !DILocalVariable(name: "arg", arg: 2, scope: !13369, file: !3179, line: 227, type: !102)
!13375 = !DILocation(line: 0, scope: !13369)
!13376 = !DILocation(line: 229, column: 2, scope: !13369)
!13377 = distinct !DISubprogram(name: "arch_system_halt", scope: !13378, file: !13378, line: 23, type: !5829, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13379)
!13378 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13379 = !{!13380}
!13380 = !DILocalVariable(name: "reason", arg: 1, scope: !13377, file: !13378, line: 23, type: !32)
!13381 = !DILocation(line: 0, scope: !13377)
!13382 = !DILocation(line: 55, column: 2, scope: !13383, inlinedAt: !13387)
!13383 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13384)
!13384 = !{!13385, !13386}
!13385 = !DILocalVariable(name: "key", scope: !13383, file: !5818, line: 44, type: !32)
!13386 = !DILocalVariable(name: "tmp", scope: !13383, file: !5818, line: 53, type: !32)
!13387 = distinct !DILocation(line: 31, column: 8, scope: !13377)
!13388 = !{i64 2279965}
!13389 = !DILocation(line: 0, scope: !13383, inlinedAt: !13387)
!13390 = !DILocation(line: 32, column: 2, scope: !13377)
!13391 = !DILocation(line: 32, column: 2, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !13378, line: 32, column: 2)
!13393 = distinct !DILexicalBlock(scope: !13377, file: !13378, line: 32, column: 2)
!13394 = distinct !{!13394, !13395, !13396}
!13395 = !DILocation(line: 32, column: 2, scope: !13393)
!13396 = !DILocation(line: 34, column: 2, scope: !13393)
!13397 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13378, file: !13378, line: 39, type: !13398, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{null, !32, !13195}
!13400 = !{!13401, !13402}
!13401 = !DILocalVariable(name: "reason", arg: 1, scope: !13397, file: !13378, line: 39, type: !32)
!13402 = !DILocalVariable(name: "esf", arg: 2, scope: !13397, file: !13378, line: 40, type: !13195)
!13403 = !DILocation(line: 0, scope: !13397)
!13404 = !DILocation(line: 46, column: 2, scope: !13397)
!13405 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13378, file: !13378, line: 81, type: !5829, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13406)
!13406 = !{!13407}
!13407 = !DILocalVariable(name: "reason", arg: 1, scope: !13405, file: !13378, line: 81, type: !32)
!13408 = !DILocation(line: 0, scope: !13405)
!13409 = !DILocation(line: 83, column: 2, scope: !13405)
!13410 = distinct !DISubprogram(name: "z_fatal_error", scope: !13378, file: !13378, line: 96, type: !13398, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13411)
!13411 = !{!13412, !13413, !13414, !13415}
!13412 = !DILocalVariable(name: "reason", arg: 1, scope: !13410, file: !13378, line: 96, type: !32)
!13413 = !DILocalVariable(name: "esf", arg: 2, scope: !13410, file: !13378, line: 96, type: !13195)
!13414 = !DILocalVariable(name: "key", scope: !13410, file: !13378, line: 102, type: !32)
!13415 = !DILocalVariable(name: "thread", scope: !13410, file: !13378, line: 103, type: !13239)
!13416 = !DILocation(line: 0, scope: !13410)
!13417 = !DILocation(line: 55, column: 2, scope: !13383, inlinedAt: !13418)
!13418 = distinct !DILocation(line: 102, column: 21, scope: !13410)
!13419 = !DILocation(line: 0, scope: !13383, inlinedAt: !13418)
!13420 = !DILocation(line: 119, column: 11, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13410, file: !13378, line: 119, column: 6)
!13422 = !DILocation(line: 119, column: 20, scope: !13421)
!13423 = !DILocation(line: 131, column: 2, scope: !13410)
!13424 = !DILocation(line: 151, column: 7, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !13378, line: 146, column: 32)
!13426 = distinct !DILexicalBlock(scope: !13410, file: !13378, line: 146, column: 6)
!13427 = !DILocation(line: 151, column: 21, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13425, file: !13378, line: 151, column: 7)
!13429 = !DILocation(line: 104, column: 4, scope: !13410)
!13430 = !DILocalVariable(name: "key", arg: 1, scope: !13431, file: !5818, line: 84, type: !32)
!13431 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13432)
!13432 = !{!13430}
!13433 = !DILocation(line: 0, scope: !13431, inlinedAt: !13434)
!13434 = distinct !DILocation(line: 186, column: 2, scope: !13410)
!13435 = !DILocation(line: 95, column: 2, scope: !13431, inlinedAt: !13434)
!13436 = !{i64 2280782}
!13437 = !DILocation(line: 189, column: 3, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13378, line: 188, column: 41)
!13439 = distinct !DILexicalBlock(scope: !13410, file: !13378, line: 188, column: 6)
!13440 = !DILocation(line: 191, column: 1, scope: !13410)
!13441 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !13442, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !317)
!13442 = !DISubroutineType(types: !13443)
!13443 = !{!13444}
!13444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !13239)
!13445 = !DILocation(line: 535, column: 9, scope: !13441)
!13446 = !DILocation(line: 535, column: 2, scope: !13441)
!13447 = distinct !DISubprogram(name: "k_thread_abort", scope: !3691, file: !3691, line: 188, type: !13448, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !13450)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{null, !13444}
!13450 = !{!13451}
!13451 = !DILocalVariable(name: "thread", arg: 1, scope: !13447, file: !3691, line: 188, type: !13444)
!13452 = !DILocation(line: 0, scope: !13447)
!13453 = !DILocation(line: 197, column: 2, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13447, file: !3691, line: 197, column: 2)
!13455 = !{i64 2155061536}
!13456 = !DILocation(line: 198, column: 2, scope: !13447)
!13457 = !DILocation(line: 199, column: 1, scope: !13447)
!13458 = distinct !DISubprogram(name: "z_current_get", scope: !3691, file: !3691, line: 173, type: !13442, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !317)
!13459 = !DILocation(line: 180, column: 2, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13458, file: !3691, line: 180, column: 2)
!13461 = !{i64 2155061468}
!13462 = !DILocation(line: 181, column: 9, scope: !13458)
!13463 = !DILocation(line: 181, column: 2, scope: !13458)
!13464 = distinct !DISubprogram(name: "z_early_memset", scope: !2050, file: !2050, line: 108, type: !13465, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13467)
!13465 = !DISubroutineType(types: !13466)
!13466 = !{null, !102, !103, !204}
!13467 = !{!13468, !13469, !13470}
!13468 = !DILocalVariable(name: "dst", arg: 1, scope: !13464, file: !2050, line: 108, type: !102)
!13469 = !DILocalVariable(name: "c", arg: 2, scope: !13464, file: !2050, line: 108, type: !103)
!13470 = !DILocalVariable(name: "n", arg: 3, scope: !13464, file: !2050, line: 108, type: !204)
!13471 = !DILocation(line: 0, scope: !13464)
!13472 = !DILocation(line: 110, column: 9, scope: !13464)
!13473 = !DILocation(line: 111, column: 1, scope: !13464)
!13474 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2050, file: !2050, line: 121, type: !13475, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13477)
!13475 = !DISubroutineType(types: !13476)
!13476 = !{null, !102, !13, !204}
!13477 = !{!13478, !13479, !13480}
!13478 = !DILocalVariable(name: "dst", arg: 1, scope: !13474, file: !2050, line: 121, type: !102)
!13479 = !DILocalVariable(name: "src", arg: 2, scope: !13474, file: !2050, line: 121, type: !13)
!13480 = !DILocalVariable(name: "n", arg: 3, scope: !13474, file: !2050, line: 121, type: !204)
!13481 = !DILocation(line: 0, scope: !13474)
!13482 = !DILocation(line: 123, column: 9, scope: !13474)
!13483 = !DILocation(line: 124, column: 1, scope: !13474)
!13484 = distinct !DISubprogram(name: "z_bss_zero", scope: !2050, file: !2050, line: 132, type: !3255, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !317)
!13485 = !DILocation(line: 143, column: 2, scope: !13484)
!13486 = !DILocation(line: 168, column: 1, scope: !13484)
!13487 = distinct !DISubprogram(name: "z_init_cpu", scope: !2050, file: !2050, line: 372, type: !7677, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13488)
!13488 = !{!13489}
!13489 = !DILocalVariable(name: "id", arg: 1, scope: !13487, file: !2050, line: 372, type: !103)
!13490 = !DILocation(line: 0, scope: !13487)
!13491 = !DILocation(line: 374, column: 2, scope: !13487)
!13492 = !DILocation(line: 375, column: 34, scope: !13487)
!13493 = !DILocation(line: 375, column: 19, scope: !13487)
!13494 = !DILocation(line: 375, column: 31, scope: !13487)
!13495 = !DILocation(line: 376, column: 24, scope: !13487)
!13496 = !DILocation(line: 376, column: 19, scope: !13487)
!13497 = !DILocation(line: 376, column: 22, scope: !13487)
!13498 = !DILocation(line: 378, column: 26, scope: !13487)
!13499 = !DILocation(line: 378, column: 4, scope: !13487)
!13500 = !DILocation(line: 378, column: 50, scope: !13487)
!13501 = !DILocation(line: 377, column: 19, scope: !13487)
!13502 = !DILocation(line: 377, column: 29, scope: !13487)
!13503 = !DILocation(line: 384, column: 1, scope: !13487)
!13504 = distinct !DISubprogram(name: "init_idle_thread", scope: !2050, file: !2050, line: 343, type: !7677, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13505)
!13505 = !{!13506, !13507, !13508, !13511}
!13506 = !DILocalVariable(name: "i", arg: 1, scope: !13504, file: !2050, line: 343, type: !103)
!13507 = !DILocalVariable(name: "thread", scope: !13504, file: !2050, line: 345, type: !2142)
!13508 = !DILocalVariable(name: "stack", scope: !13504, file: !2050, line: 346, type: !13509)
!13509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13510, size: 32)
!13510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3570, line: 44, baseType: !2256)
!13511 = !DILocalVariable(name: "tname", scope: !13504, file: !2050, line: 358, type: !344)
!13512 = !DILocation(line: 0, scope: !13504)
!13513 = !DILocation(line: 345, column: 29, scope: !13504)
!13514 = !DILocation(line: 346, column: 28, scope: !13504)
!13515 = !DILocation(line: 362, column: 37, scope: !13504)
!13516 = !DILocation(line: 362, column: 36, scope: !13504)
!13517 = !DILocation(line: 361, column: 2, scope: !13504)
!13518 = !DILocation(line: 365, column: 2, scope: !13504)
!13519 = !DILocation(line: 370, column: 1, scope: !13504)
!13520 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2257, file: !2257, line: 331, type: !13521, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13523)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!344, !13509}
!13523 = !{!13524}
!13524 = !DILocalVariable(name: "sym", arg: 1, scope: !13520, file: !2257, line: 331, type: !13509)
!13525 = !DILocation(line: 0, scope: !13520)
!13526 = !DILocation(line: 333, column: 21, scope: !13520)
!13527 = !DILocation(line: 333, column: 2, scope: !13520)
!13528 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13529, file: !13529, line: 155, type: !13530, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13532)
!13529 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !2142}
!13532 = !{!13533}
!13533 = !DILocalVariable(name: "thread", arg: 1, scope: !13528, file: !13529, line: 155, type: !2142)
!13534 = !DILocation(line: 0, scope: !13528)
!13535 = !DILocation(line: 157, column: 15, scope: !13528)
!13536 = !DILocation(line: 157, column: 28, scope: !13528)
!13537 = !DILocation(line: 158, column: 1, scope: !13528)
!13538 = distinct !DISubprogram(name: "z_cstart", scope: !2050, file: !2050, line: 501, type: !3255, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13539)
!13539 = !{!13540}
!13540 = !DILocalVariable(name: "dummy_thread", scope: !13538, file: !2050, line: 518, type: !2143)
!13541 = !DILocation(line: 507, column: 2, scope: !13538)
!13542 = !DILocation(line: 43, column: 14, scope: !13543, inlinedAt: !13547)
!13543 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13544, file: !13544, line: 40, type: !3255, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13545)
!13544 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13545 = !{!13546}
!13546 = !DILocalVariable(name: "msp", scope: !13543, file: !13544, line: 42, type: !121)
!13547 = distinct !DILocation(line: 44, column: 2, scope: !13548, inlinedAt: !13550)
!13548 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13549, file: !13549, line: 42, type: !3255, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !317)
!13549 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13550 = distinct !DILocation(line: 510, column: 2, scope: !13538)
!13551 = !DILocation(line: 43, column: 3, scope: !13543, inlinedAt: !13547)
!13552 = !DILocation(line: 43, column: 60, scope: !13543, inlinedAt: !13547)
!13553 = !DILocation(line: 0, scope: !13543, inlinedAt: !13547)
!13554 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13555, file: !6033, line: 1153, type: !121)
!13555 = distinct !DISubprogram(name: "__set_MSP", scope: !6033, file: !6033, line: 1153, type: !6124, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13556)
!13556 = !{!13554}
!13557 = !DILocation(line: 0, scope: !13555, inlinedAt: !13558)
!13558 = distinct !DILocation(line: 46, column: 2, scope: !13543, inlinedAt: !13547)
!13559 = !DILocation(line: 1155, column: 3, scope: !13555, inlinedAt: !13558)
!13560 = !{i64 3745904}
!13561 = !DILocation(line: 62, column: 11, scope: !13543, inlinedAt: !13547)
!13562 = !DILocation(line: 102, column: 2, scope: !13563, inlinedAt: !13564)
!13563 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6827, file: !6827, line: 97, type: !3255, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !317)
!13564 = distinct !DILocation(line: 45, column: 2, scope: !13548, inlinedAt: !13550)
!13565 = !DILocation(line: 108, column: 2, scope: !13563, inlinedAt: !13564)
!13566 = !DILocation(line: 112, column: 2, scope: !13563, inlinedAt: !13564)
!13567 = !DILocation(line: 113, column: 2, scope: !13563, inlinedAt: !13564)
!13568 = !DILocation(line: 114, column: 2, scope: !13563, inlinedAt: !13564)
!13569 = !DILocation(line: 116, column: 2, scope: !13563, inlinedAt: !13564)
!13570 = !DILocation(line: 123, column: 13, scope: !13563, inlinedAt: !13564)
!13571 = !DILocation(line: 46, column: 2, scope: !13548, inlinedAt: !13550)
!13572 = !DILocation(line: 47, column: 2, scope: !13548, inlinedAt: !13550)
!13573 = !DILocation(line: 174, column: 12, scope: !13574, inlinedAt: !13575)
!13574 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6827, file: !6827, line: 169, type: !3255, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !317)
!13575 = distinct !DILocation(line: 48, column: 2, scope: !13548, inlinedAt: !13550)
!13576 = !DILocation(line: 179, column: 12, scope: !13574, inlinedAt: !13575)
!13577 = !DILocation(line: 50, column: 2, scope: !13548, inlinedAt: !13550)
!13578 = !DILocation(line: 57, column: 2, scope: !13548, inlinedAt: !13550)
!13579 = !DILocation(line: 518, column: 2, scope: !13538)
!13580 = !DILocation(line: 518, column: 18, scope: !13538)
!13581 = !DILocation(line: 520, column: 2, scope: !13538)
!13582 = !DILocation(line: 523, column: 2, scope: !13538)
!13583 = !DILocation(line: 526, column: 2, scope: !13538)
!13584 = !DILocation(line: 527, column: 2, scope: !13538)
!13585 = !DILocation(line: 543, column: 24, scope: !13538)
!13586 = !DILocation(line: 543, column: 2, scope: !13538)
!13587 = !DILocation(line: 0, scope: !2276)
!13588 = !DILocation(line: 246, column: 15, scope: !2294)
!13589 = !DILocation(line: 246, column: 36, scope: !2293)
!13590 = !DILocation(line: 246, column: 2, scope: !2294)
!13591 = !DILocation(line: 247, column: 37, scope: !2292)
!13592 = !DILocation(line: 0, scope: !2292)
!13593 = !DILocation(line: 248, column: 19, scope: !2292)
!13594 = !DILocation(line: 248, column: 12, scope: !2292)
!13595 = !DILocation(line: 250, column: 11, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !2292, file: !2050, line: 250, column: 7)
!13597 = !DILocation(line: 250, column: 7, scope: !2292)
!13598 = !DILocation(line: 254, column: 11, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !2050, line: 254, column: 8)
!13600 = distinct !DILexicalBlock(scope: !13596, file: !2050, line: 250, column: 20)
!13601 = !DILocation(line: 254, column: 8, scope: !13600)
!13602 = !DILocation(line: 255, column: 9, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13599, file: !2050, line: 254, column: 17)
!13604 = !DILocation(line: 258, column: 9, scope: !13603)
!13605 = !DILocation(line: 261, column: 28, scope: !13603)
!13606 = !DILocation(line: 261, column: 10, scope: !13603)
!13607 = !DILocation(line: 261, column: 17, scope: !13603)
!13608 = !DILocation(line: 261, column: 26, scope: !13603)
!13609 = !DILocation(line: 262, column: 4, scope: !13603)
!13610 = !DILocation(line: 263, column: 9, scope: !13600)
!13611 = !DILocation(line: 263, column: 16, scope: !13600)
!13612 = !DILocation(line: 263, column: 28, scope: !13600)
!13613 = !DILocation(line: 264, column: 3, scope: !13600)
!13614 = !DILocation(line: 246, column: 60, scope: !2293)
!13615 = distinct !{!13615, !13590, !13616}
!13616 = !DILocation(line: 265, column: 2, scope: !2294)
!13617 = !DILocation(line: 266, column: 1, scope: !2276)
!13618 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !6067, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13619)
!13619 = !{!13620, !13621}
!13620 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13618, file: !515, line: 1814, type: !780)
!13621 = !DILocalVariable(name: "priority", arg: 2, scope: !13618, file: !515, line: 1814, type: !121)
!13622 = !DILocation(line: 0, scope: !13618)
!13623 = !DILocation(line: 1822, column: 48, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !515, line: 1821, column: 3)
!13625 = distinct !DILexicalBlock(scope: !13618, file: !515, line: 1816, column: 7)
!13626 = !DILocation(line: 1822, column: 32, scope: !13624)
!13627 = !DILocation(line: 1822, column: 40, scope: !13624)
!13628 = !DILocation(line: 1822, column: 5, scope: !13624)
!13629 = !DILocation(line: 1822, column: 46, scope: !13624)
!13630 = !DILocation(line: 1824, column: 1, scope: !13618)
!13631 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13549, file: !13549, line: 32, type: !3255, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13632 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13633, file: !13633, line: 215, type: !13530, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13634)
!13633 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13634 = !{!13635}
!13635 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13632, file: !13633, line: 215, type: !2142)
!13636 = !DILocation(line: 0, scope: !13632)
!13637 = !DILocation(line: 217, column: 21, scope: !13632)
!13638 = !DILocation(line: 217, column: 34, scope: !13632)
!13639 = !DILocation(line: 221, column: 21, scope: !13632)
!13640 = !DILocation(line: 221, column: 34, scope: !13632)
!13641 = !DILocation(line: 223, column: 27, scope: !13632)
!13642 = !DILocation(line: 223, column: 33, scope: !13632)
!13643 = !DILocation(line: 224, column: 27, scope: !13632)
!13644 = !DILocation(line: 224, column: 32, scope: !13632)
!13645 = !DILocation(line: 232, column: 16, scope: !13632)
!13646 = !DILocation(line: 232, column: 30, scope: !13632)
!13647 = !DILocation(line: 239, column: 24, scope: !13632)
!13648 = !DILocation(line: 240, column: 1, scope: !13632)
!13649 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2050, file: !2050, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13650)
!13650 = !{!13651}
!13651 = !DILocalVariable(name: "stack_ptr", scope: !13649, file: !2050, line: 401, type: !344)
!13652 = !DILocation(line: 404, column: 2, scope: !13649)
!13653 = !DILocation(line: 416, column: 24, scope: !13649)
!13654 = !DILocation(line: 418, column: 14, scope: !13649)
!13655 = !DILocation(line: 0, scope: !13649)
!13656 = !DILocation(line: 423, column: 2, scope: !13649)
!13657 = !DILocation(line: 424, column: 2, scope: !13649)
!13658 = !DILocation(line: 426, column: 2, scope: !13649)
!13659 = !DILocation(line: 428, column: 2, scope: !13649)
!13660 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2050, file: !2050, line: 432, type: !13661, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13663)
!13661 = !DISubroutineType(types: !13662)
!13662 = !{null, !344}
!13663 = !{!13664}
!13664 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13660, file: !2050, line: 432, type: !344)
!13665 = !DILocation(line: 0, scope: !13660)
!13666 = !DILocation(line: 435, column: 2, scope: !13660)
!13667 = !DILocation(line: 445, column: 2, scope: !13660)
!13668 = distinct !DISubprogram(name: "bg_thread_main", scope: !2050, file: !2050, line: 277, type: !3572, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !13669)
!13669 = !{!13670, !13671, !13672}
!13670 = !DILocalVariable(name: "unused1", arg: 1, scope: !13668, file: !2050, line: 277, type: !102)
!13671 = !DILocalVariable(name: "unused2", arg: 2, scope: !13668, file: !2050, line: 277, type: !102)
!13672 = !DILocalVariable(name: "unused3", arg: 3, scope: !13668, file: !2050, line: 277, type: !102)
!13673 = !DILocation(line: 0, scope: !13668)
!13674 = !DILocation(line: 291, column: 20, scope: !13668)
!13675 = !DILocation(line: 293, column: 2, scope: !13668)
!13676 = !DILocation(line: 297, column: 2, scope: !13668)
!13677 = !DILocation(line: 305, column: 2, scope: !13668)
!13678 = !DILocation(line: 307, column: 2, scope: !13668)
!13679 = !DILocation(line: 330, column: 8, scope: !13668)
!13680 = !DILocation(line: 333, column: 34, scope: !13668)
!13681 = !DILocation(line: 339, column: 1, scope: !13668)
!13682 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2305, file: !2305, line: 45, type: !13683, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13691)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{null, !13685, !102}
!13685 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !13686)
!13686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13687, size: 32)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{null, !13689, !102}
!13689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13690, size: 32)
!13690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2310)
!13691 = !{!13692, !13693}
!13692 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13682, file: !2305, line: 45, type: !13685)
!13693 = !DILocalVariable(name: "user_data", arg: 2, scope: !13682, file: !2305, line: 45, type: !102)
!13694 = !DILocation(line: 0, scope: !13682)
!13695 = !DILocation(line: 71, column: 1, scope: !13682)
!13696 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2305, file: !2305, line: 73, type: !13683, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13697)
!13697 = !{!13698, !13699}
!13698 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13696, file: !2305, line: 73, type: !13685)
!13699 = !DILocalVariable(name: "user_data", arg: 2, scope: !13696, file: !2305, line: 73, type: !102)
!13700 = !DILocation(line: 0, scope: !13696)
!13701 = !DILocation(line: 95, column: 1, scope: !13696)
!13702 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2305, file: !2305, line: 97, type: !6828, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !317)
!13703 = !DILocation(line: 1031, column: 3, scope: !13704, inlinedAt: !13707)
!13704 = distinct !DISubprogram(name: "__get_IPSR", scope: !6033, file: !6033, line: 1027, type: !6114, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13705)
!13705 = !{!13706}
!13706 = !DILocalVariable(name: "result", scope: !13704, file: !6033, line: 1029, type: !121)
!13707 = distinct !DILocation(line: 48, column: 10, scope: !13708, inlinedAt: !13709)
!13708 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6827, file: !6827, line: 46, type: !6828, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !317)
!13709 = distinct !DILocation(line: 99, column: 9, scope: !13702)
!13710 = !{i64 3751555}
!13711 = !DILocation(line: 0, scope: !13704, inlinedAt: !13707)
!13712 = !DILocation(line: 48, column: 9, scope: !13708, inlinedAt: !13709)
!13713 = !DILocation(line: 99, column: 2, scope: !13702)
!13714 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2305, file: !2305, line: 106, type: !3255, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !317)
!13715 = !DILocation(line: 108, column: 2, scope: !13714)
!13716 = !DILocation(line: 108, column: 17, scope: !13714)
!13717 = !DILocation(line: 108, column: 30, scope: !13714)
!13718 = !DILocation(line: 109, column: 1, scope: !13714)
!13719 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2305, file: !2305, line: 116, type: !3255, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !317)
!13720 = !DILocation(line: 118, column: 2, scope: !13719)
!13721 = !DILocation(line: 118, column: 17, scope: !13719)
!13722 = !DILocation(line: 118, column: 30, scope: !13719)
!13723 = !DILocation(line: 119, column: 1, scope: !13719)
!13724 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2305, file: !2305, line: 126, type: !6828, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !317)
!13725 = !DILocation(line: 128, column: 10, scope: !13724)
!13726 = !DILocation(line: 128, column: 25, scope: !13724)
!13727 = !DILocation(line: 128, column: 38, scope: !13724)
!13728 = !DILocation(line: 128, column: 53, scope: !13724)
!13729 = !DILocation(line: 128, column: 2, scope: !13724)
!13730 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2305, file: !2305, line: 187, type: !13731, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13733)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{!103, !2309, !144}
!13733 = !{!13734, !13735}
!13734 = !DILocalVariable(name: "thread", arg: 1, scope: !13730, file: !2305, line: 187, type: !2309)
!13735 = !DILocalVariable(name: "value", arg: 2, scope: !13730, file: !2305, line: 187, type: !144)
!13736 = !DILocation(line: 0, scope: !13730)
!13737 = !DILocation(line: 206, column: 2, scope: !13730)
!13738 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2305, file: !2305, line: 238, type: !13739, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13741)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{!144, !2309}
!13741 = !{!13742}
!13742 = !DILocalVariable(name: "thread", arg: 1, scope: !13738, file: !2305, line: 238, type: !2309)
!13743 = !DILocation(line: 0, scope: !13738)
!13744 = !DILocation(line: 244, column: 2, scope: !13738)
!13745 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2305, file: !2305, line: 248, type: !13746, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13748)
!13746 = !DISubroutineType(types: !13747)
!13747 = !{!103, !2308, !344, !204}
!13748 = !{!13749, !13750, !13751}
!13749 = !DILocalVariable(name: "thread", arg: 1, scope: !13745, file: !2305, line: 248, type: !2308)
!13750 = !DILocalVariable(name: "buf", arg: 2, scope: !13745, file: !2305, line: 248, type: !344)
!13751 = !DILocalVariable(name: "size", arg: 3, scope: !13745, file: !2305, line: 248, type: !204)
!13752 = !DILocation(line: 0, scope: !13745)
!13753 = !DILocation(line: 257, column: 2, scope: !13745)
!13754 = !DILocation(line: 0, scope: !2304)
!13755 = !DILocation(line: 281, column: 11, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !2304, file: !2305, line: 281, column: 6)
!13757 = !DILocation(line: 281, column: 20, scope: !13756)
!13758 = !DILocation(line: 275, column: 45, scope: !2304)
!13759 = !DILocation(line: 285, column: 10, scope: !2304)
!13760 = !DILocation(line: 0, scope: !2425)
!13761 = !DILocation(line: 293, column: 39, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !2425, file: !2305, line: 293, column: 2)
!13763 = !DILocation(line: 293, column: 2, scope: !2425)
!13764 = !DILocation(line: 273, column: 14, scope: !2304)
!13765 = !DILocation(line: 309, column: 2, scope: !2304)
!13766 = !DILocation(line: 309, column: 11, scope: !2304)
!13767 = !DILocation(line: 311, column: 2, scope: !2304)
!13768 = !DILocation(line: 293, column: 26, scope: !13762)
!13769 = !DILocation(line: 294, column: 9, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13762, file: !2305, line: 293, column: 54)
!13771 = !DILocation(line: 295, column: 21, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13770, file: !2305, line: 295, column: 7)
!13773 = !DILocation(line: 295, column: 28, scope: !13772)
!13774 = !DILocation(line: 295, column: 7, scope: !13770)
!13775 = !DILocation(line: 299, column: 25, scope: !13770)
!13776 = !DILocation(line: 299, column: 41, scope: !13770)
!13777 = !DILocation(line: 300, column: 7, scope: !13770)
!13778 = !DILocation(line: 300, column: 26, scope: !13770)
!13779 = !DILocation(line: 299, column: 10, scope: !13770)
!13780 = !DILocation(line: 299, column: 7, scope: !13770)
!13781 = !DILocation(line: 302, column: 16, scope: !13770)
!13782 = !DILocation(line: 304, column: 20, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13770, file: !2305, line: 304, column: 7)
!13784 = !DILocation(line: 304, column: 7, scope: !13770)
!13785 = !DILocation(line: 305, column: 26, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13783, file: !2305, line: 304, column: 26)
!13787 = !DILocation(line: 305, column: 42, scope: !13786)
!13788 = !DILocation(line: 305, column: 11, scope: !13786)
!13789 = !DILocation(line: 305, column: 8, scope: !13786)
!13790 = !DILocation(line: 306, column: 3, scope: !13786)
!13791 = !DILocation(line: 293, column: 50, scope: !13762)
!13792 = !DILocation(line: 312, column: 1, scope: !2304)
!13793 = distinct !DISubprogram(name: "copy_bytes", scope: !2305, file: !2305, line: 261, type: !13794, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13796)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{!204, !344, !204, !144, !204}
!13796 = !{!13797, !13798, !13799, !13800, !13801}
!13797 = !DILocalVariable(name: "dest", arg: 1, scope: !13793, file: !2305, line: 261, type: !344)
!13798 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13793, file: !2305, line: 261, type: !204)
!13799 = !DILocalVariable(name: "src", arg: 3, scope: !13793, file: !2305, line: 261, type: !144)
!13800 = !DILocalVariable(name: "src_size", arg: 4, scope: !13793, file: !2305, line: 261, type: !204)
!13801 = !DILocalVariable(name: "bytes_to_copy", scope: !13793, file: !2305, line: 263, type: !204)
!13802 = !DILocation(line: 0, scope: !13793)
!13803 = !DILocation(line: 265, column: 18, scope: !13793)
!13804 = !DILocation(line: 266, column: 2, scope: !13793)
!13805 = !DILocation(line: 268, column: 2, scope: !13793)
!13806 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2305, file: !2305, line: 383, type: !13807, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13809)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{null, !2309}
!13809 = !{!13810}
!13810 = !DILocalVariable(name: "thread", arg: 1, scope: !13806, file: !2305, line: 383, type: !2309)
!13811 = !DILocation(line: 0, scope: !13806)
!13812 = !DILocation(line: 387, column: 2, scope: !13806)
!13813 = !DILocation(line: 388, column: 1, scope: !13806)
!13814 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2305, file: !2305, line: 528, type: !13815, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13822)
!13815 = !DISubroutineType(types: !13816)
!13816 = !{!344, !2309, !13817, !204, !3569, !102, !102, !102, !103, !121, !144}
!13817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13818, size: 32)
!13818 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3570, line: 44, baseType: !13819)
!13819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2257, line: 47, size: 8, elements: !13820)
!13820 = !{!13821}
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13819, file: !2257, line: 48, baseType: !146, size: 8)
!13822 = !{!13823, !13824, !13825, !13826, !13827, !13828, !13829, !13830, !13831, !13832, !13833}
!13823 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13814, file: !2305, line: 528, type: !2309)
!13824 = !DILocalVariable(name: "stack", arg: 2, scope: !13814, file: !2305, line: 529, type: !13817)
!13825 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13814, file: !2305, line: 529, type: !204)
!13826 = !DILocalVariable(name: "entry", arg: 4, scope: !13814, file: !2305, line: 530, type: !3569)
!13827 = !DILocalVariable(name: "p1", arg: 5, scope: !13814, file: !2305, line: 531, type: !102)
!13828 = !DILocalVariable(name: "p2", arg: 6, scope: !13814, file: !2305, line: 531, type: !102)
!13829 = !DILocalVariable(name: "p3", arg: 7, scope: !13814, file: !2305, line: 531, type: !102)
!13830 = !DILocalVariable(name: "prio", arg: 8, scope: !13814, file: !2305, line: 532, type: !103)
!13831 = !DILocalVariable(name: "options", arg: 9, scope: !13814, file: !2305, line: 532, type: !121)
!13832 = !DILocalVariable(name: "name", arg: 10, scope: !13814, file: !2305, line: 532, type: !144)
!13833 = !DILocalVariable(name: "stack_ptr", scope: !13814, file: !2305, line: 534, type: !344)
!13834 = !DILocation(line: 0, scope: !13814)
!13835 = !DILocation(line: 550, column: 28, scope: !13814)
!13836 = !DILocation(line: 550, column: 2, scope: !13814)
!13837 = !DILocation(line: 553, column: 34, scope: !13814)
!13838 = !DILocation(line: 553, column: 2, scope: !13814)
!13839 = !DILocation(line: 554, column: 14, scope: !13814)
!13840 = !DILocation(line: 564, column: 2, scope: !13814)
!13841 = !DILocation(line: 567, column: 14, scope: !13814)
!13842 = !DILocation(line: 567, column: 24, scope: !13814)
!13843 = !DILocation(line: 612, column: 7, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13814, file: !2305, line: 612, column: 6)
!13845 = !DILocation(line: 612, column: 6, scope: !13814)
!13846 = !DILocation(line: 627, column: 40, scope: !13814)
!13847 = !DILocation(line: 637, column: 2, scope: !13814)
!13848 = !DILocation(line: 613, column: 15, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13844, file: !2305, line: 612, column: 17)
!13850 = !DILocation(line: 613, column: 29, scope: !13849)
!13851 = !DILocation(line: 638, column: 1, scope: !13814)
!13852 = distinct !DISubprogram(name: "z_waitq_init", scope: !13853, file: !13853, line: 47, type: !13854, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13856)
!13853 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13854 = !DISubroutineType(types: !13855)
!13855 = !{null, !2340}
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "w", arg: 1, scope: !13852, file: !13853, line: 47, type: !2340)
!13858 = !DILocation(line: 0, scope: !13852)
!13859 = !DILocation(line: 49, column: 21, scope: !13852)
!13860 = !DILocation(line: 49, column: 2, scope: !13852)
!13861 = !DILocation(line: 50, column: 1, scope: !13852)
!13862 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2305, file: !2305, line: 791, type: !13863, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13866)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{null, !13865, !103, !121, !32}
!13865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!13866 = !{!13867, !13868, !13869, !13870}
!13867 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13862, file: !2305, line: 791, type: !13865)
!13868 = !DILocalVariable(name: "priority", arg: 2, scope: !13862, file: !2305, line: 791, type: !103)
!13869 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13862, file: !2305, line: 792, type: !121)
!13870 = !DILocalVariable(name: "options", arg: 4, scope: !13862, file: !2305, line: 792, type: !32)
!13871 = !DILocation(line: 0, scope: !13862)
!13872 = !DILocation(line: 795, column: 15, scope: !13862)
!13873 = !DILocation(line: 795, column: 25, scope: !13862)
!13874 = !DILocation(line: 796, column: 30, scope: !13862)
!13875 = !DILocation(line: 796, column: 15, scope: !13862)
!13876 = !DILocation(line: 796, column: 28, scope: !13862)
!13877 = !DILocation(line: 797, column: 30, scope: !13862)
!13878 = !DILocation(line: 797, column: 15, scope: !13862)
!13879 = !DILocation(line: 797, column: 28, scope: !13862)
!13880 = !DILocation(line: 799, column: 22, scope: !13862)
!13881 = !DILocation(line: 799, column: 15, scope: !13862)
!13882 = !DILocation(line: 799, column: 20, scope: !13862)
!13883 = !DILocation(line: 801, column: 15, scope: !13862)
!13884 = !DILocation(line: 801, column: 28, scope: !13862)
!13885 = !DILocation(line: 814, column: 2, scope: !13862)
!13886 = !DILocation(line: 815, column: 1, scope: !13862)
!13887 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2305, file: !2305, line: 449, type: !13888, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13890)
!13888 = !DISubroutineType(types: !13889)
!13889 = !{!344, !2309, !13817, !204}
!13890 = !{!13891, !13892, !13893, !13894, !13895, !13896, !13897, !13898}
!13891 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13887, file: !2305, line: 449, type: !2309)
!13892 = !DILocalVariable(name: "stack", arg: 2, scope: !13887, file: !2305, line: 450, type: !13817)
!13893 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13887, file: !2305, line: 450, type: !204)
!13894 = !DILocalVariable(name: "stack_obj_size", scope: !13887, file: !2305, line: 452, type: !204)
!13895 = !DILocalVariable(name: "stack_buf_size", scope: !13887, file: !2305, line: 452, type: !204)
!13896 = !DILocalVariable(name: "stack_ptr", scope: !13887, file: !2305, line: 453, type: !344)
!13897 = !DILocalVariable(name: "stack_buf_start", scope: !13887, file: !2305, line: 453, type: !344)
!13898 = !DILocalVariable(name: "delta", scope: !13887, file: !2305, line: 454, type: !204)
!13899 = !DILocation(line: 0, scope: !13887)
!13900 = !DILocation(line: 465, column: 20, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13887, file: !2305, line: 463, column: 2)
!13902 = !DILocation(line: 466, column: 21, scope: !13901)
!13903 = !DILocation(line: 473, column: 28, scope: !13887)
!13904 = !DILocation(line: 514, column: 33, scope: !13887)
!13905 = !DILocation(line: 514, column: 25, scope: !13887)
!13906 = !DILocation(line: 514, column: 31, scope: !13887)
!13907 = !DILocation(line: 515, column: 25, scope: !13887)
!13908 = !DILocation(line: 515, column: 30, scope: !13887)
!13909 = !DILocation(line: 516, column: 25, scope: !13887)
!13910 = !DILocation(line: 516, column: 31, scope: !13887)
!13911 = !DILocation(line: 520, column: 2, scope: !13887)
!13912 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2257, file: !2257, line: 331, type: !13913, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13915)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{!344, !13817}
!13915 = !{!13916}
!13916 = !DILocalVariable(name: "sym", arg: 1, scope: !13912, file: !2257, line: 331, type: !13817)
!13917 = !DILocation(line: 0, scope: !13912)
!13918 = !DILocation(line: 333, column: 21, scope: !13912)
!13919 = !DILocation(line: 333, column: 2, scope: !13912)
!13920 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13921, file: !13921, line: 40, type: !13922, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13924)
!13921 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13922 = !DISubroutineType(types: !13923)
!13923 = !{null, !13865}
!13924 = !{!13925}
!13925 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13920, file: !13921, line: 40, type: !13865)
!13926 = !DILocation(line: 0, scope: !13920)
!13927 = !DILocation(line: 42, column: 31, scope: !13920)
!13928 = !DILocation(line: 42, column: 2, scope: !13920)
!13929 = !DILocation(line: 43, column: 1, scope: !13920)
!13930 = distinct !DISubprogram(name: "z_init_timeout", scope: !13921, file: !13921, line: 25, type: !2366, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13931)
!13931 = !{!13932}
!13932 = !DILocalVariable(name: "to", arg: 1, scope: !13930, file: !13921, line: 25, type: !2368)
!13933 = !DILocation(line: 0, scope: !13930)
!13934 = !DILocation(line: 27, column: 22, scope: !13930)
!13935 = !DILocation(line: 27, column: 2, scope: !13930)
!13936 = !DILocation(line: 28, column: 1, scope: !13930)
!13937 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13938, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{null, !2412}
!13940 = !{!13941}
!13941 = !DILocalVariable(name: "node", arg: 1, scope: !13937, file: !325, line: 211, type: !2412)
!13942 = !DILocation(line: 0, scope: !13937)
!13943 = !DILocation(line: 213, column: 8, scope: !13937)
!13944 = !DILocation(line: 213, column: 13, scope: !13937)
!13945 = !DILocation(line: 214, column: 8, scope: !13937)
!13946 = !DILocation(line: 214, column: 13, scope: !13937)
!13947 = !DILocation(line: 215, column: 1, scope: !13937)
!13948 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13949, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13952)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{null, !13951}
!13951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!13952 = !{!13953}
!13953 = !DILocalVariable(name: "list", arg: 1, scope: !13948, file: !325, line: 197, type: !13951)
!13954 = !DILocation(line: 0, scope: !13948)
!13955 = !DILocation(line: 199, column: 8, scope: !13948)
!13956 = !DILocation(line: 199, column: 13, scope: !13948)
!13957 = !DILocation(line: 200, column: 8, scope: !13948)
!13958 = !DILocation(line: 200, column: 13, scope: !13948)
!13959 = !DILocation(line: 201, column: 1, scope: !13948)
!13960 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2305, file: !2305, line: 641, type: !13961, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13967)
!13961 = !DISubroutineType(types: !13962)
!13962 = !{!2308, !2309, !13817, !204, !3569, !102, !102, !102, !103, !121, !13963}
!13963 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13964)
!13964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13965)
!13965 = !{!13966}
!13966 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13964, file: !201, line: 66, baseType: !200, size: 64)
!13967 = !{!13968, !13969, !13970, !13971, !13972, !13973, !13974, !13975, !13976, !13977}
!13968 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13960, file: !2305, line: 641, type: !2309)
!13969 = !DILocalVariable(name: "stack", arg: 2, scope: !13960, file: !2305, line: 642, type: !13817)
!13970 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13960, file: !2305, line: 643, type: !204)
!13971 = !DILocalVariable(name: "entry", arg: 4, scope: !13960, file: !2305, line: 643, type: !3569)
!13972 = !DILocalVariable(name: "p1", arg: 5, scope: !13960, file: !2305, line: 644, type: !102)
!13973 = !DILocalVariable(name: "p2", arg: 6, scope: !13960, file: !2305, line: 644, type: !102)
!13974 = !DILocalVariable(name: "p3", arg: 7, scope: !13960, file: !2305, line: 644, type: !102)
!13975 = !DILocalVariable(name: "prio", arg: 8, scope: !13960, file: !2305, line: 645, type: !103)
!13976 = !DILocalVariable(name: "options", arg: 9, scope: !13960, file: !2305, line: 645, type: !121)
!13977 = !DILocalVariable(name: "delay", arg: 10, scope: !13960, file: !2305, line: 645, type: !13963)
!13978 = !DILocation(line: 0, scope: !13960)
!13979 = !DILocation(line: 649, column: 2, scope: !13960)
!13980 = !DILocation(line: 652, column: 7, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13960, file: !2305, line: 652, column: 6)
!13982 = !DILocation(line: 652, column: 6, scope: !13960)
!13983 = !DILocation(line: 653, column: 3, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !2305, line: 652, column: 39)
!13985 = !DILocation(line: 654, column: 2, scope: !13984)
!13986 = !DILocation(line: 656, column: 2, scope: !13960)
!13987 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2305, file: !2305, line: 401, type: !13988, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !13990)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{null, !2309, !13963}
!13990 = !{!13991, !13992}
!13991 = !DILocalVariable(name: "thread", arg: 1, scope: !13987, file: !2305, line: 401, type: !2309)
!13992 = !DILocalVariable(name: "delay", arg: 2, scope: !13987, file: !2305, line: 401, type: !13963)
!13993 = !DILocation(line: 0, scope: !13987)
!13994 = !DILocation(line: 404, column: 6, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13987, file: !2305, line: 404, column: 6)
!13996 = !DILocation(line: 404, column: 6, scope: !13987)
!13997 = !DILocation(line: 405, column: 3, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13995, file: !2305, line: 404, column: 38)
!13999 = !DILocation(line: 406, column: 2, scope: !13998)
!14000 = !DILocation(line: 407, column: 3, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13995, file: !2305, line: 406, column: 9)
!14002 = !DILocation(line: 413, column: 1, scope: !13987)
!14003 = distinct !DISubprogram(name: "k_thread_start", scope: !3691, file: !3691, line: 205, type: !14004, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14006)
!14004 = !DISubroutineType(types: !14005)
!14005 = !{null, !2308}
!14006 = !{!14007}
!14007 = !DILocalVariable(name: "thread", arg: 1, scope: !14003, file: !3691, line: 205, type: !2308)
!14008 = !DILocation(line: 0, scope: !14003)
!14009 = !DILocation(line: 214, column: 2, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14003, file: !3691, line: 214, column: 2)
!14011 = !{i64 2155086760}
!14012 = !DILocation(line: 215, column: 2, scope: !14003)
!14013 = !DILocation(line: 216, column: 1, scope: !14003)
!14014 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13921, file: !13921, line: 47, type: !13988, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14015)
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "thread", arg: 1, scope: !14014, file: !13921, line: 47, type: !2309)
!14017 = !DILocalVariable(name: "ticks", arg: 2, scope: !14014, file: !13921, line: 47, type: !13963)
!14018 = !DILocation(line: 0, scope: !14014)
!14019 = !DILocation(line: 49, column: 30, scope: !14014)
!14020 = !DILocation(line: 49, column: 2, scope: !14014)
!14021 = !DILocation(line: 50, column: 1, scope: !14014)
!14022 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2305, file: !2305, line: 748, type: !3255, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14023)
!14023 = !{!14024, !14042}
!14024 = !DILocalVariable(name: "thread_data", scope: !14025, file: !2305, line: 750, type: !14026)
!14025 = distinct !DILexicalBlock(scope: !14022, file: !2305, line: 750, column: 2)
!14026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14027, size: 32)
!14027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !14028)
!14028 = !{!14029, !14030, !14031, !14032, !14033, !14034, !14035, !14036, !14037, !14038, !14039, !14041}
!14029 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14027, file: !296, line: 621, baseType: !2309, size: 32)
!14030 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14027, file: !296, line: 622, baseType: !13817, size: 32, offset: 32)
!14031 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14027, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!14032 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14027, file: !296, line: 624, baseType: !3569, size: 32, offset: 96)
!14033 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14027, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14027, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14027, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14027, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14027, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14027, file: !296, line: 630, baseType: !754, size: 32, offset: 288)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14027, file: !296, line: 631, baseType: !14040, size: 32, offset: 320)
!14040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 32)
!14041 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14027, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!14042 = !DILocalVariable(name: "thread_data", scope: !14043, file: !2305, line: 781, type: !14026)
!14043 = distinct !DILexicalBlock(scope: !14022, file: !2305, line: 781, column: 2)
!14044 = !DILocation(line: 0, scope: !14025)
!14045 = !DILocation(line: 750, column: 2, scope: !14025)
!14046 = !DILocation(line: 780, column: 2, scope: !14022)
!14047 = !DILocation(line: 0, scope: !14043)
!14048 = !DILocation(line: 781, column: 2, scope: !14043)
!14049 = !DILocation(line: 752, column: 17, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14051, file: !2305, line: 750, column: 38)
!14051 = distinct !DILexicalBlock(scope: !14025, file: !2305, line: 750, column: 2)
!14052 = !DILocation(line: 753, column: 17, scope: !14050)
!14053 = !DILocation(line: 754, column: 17, scope: !14050)
!14054 = !DILocation(line: 755, column: 17, scope: !14050)
!14055 = !DILocation(line: 756, column: 17, scope: !14050)
!14056 = !DILocation(line: 757, column: 17, scope: !14050)
!14057 = !DILocation(line: 758, column: 17, scope: !14050)
!14058 = !DILocation(line: 759, column: 17, scope: !14050)
!14059 = !DILocation(line: 760, column: 17, scope: !14050)
!14060 = !DILocation(line: 751, column: 3, scope: !14050)
!14061 = !DILocation(line: 763, column: 16, scope: !14050)
!14062 = !DILocation(line: 763, column: 29, scope: !14050)
!14063 = !DILocation(line: 763, column: 39, scope: !14050)
!14064 = !DILocation(line: 750, column: 2, scope: !14051)
!14065 = !DILocation(line: 750, column: 2, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14051, file: !2305, line: 750, column: 2)
!14067 = distinct !{!14067, !14045, !14068}
!14068 = !DILocation(line: 764, column: 2, scope: !14025)
!14069 = !DILocation(line: 787, column: 2, scope: !14022)
!14070 = !DILocation(line: 788, column: 1, scope: !14022)
!14071 = !DILocation(line: 782, column: 20, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14073, file: !2305, line: 782, column: 7)
!14073 = distinct !DILexicalBlock(scope: !14074, file: !2305, line: 781, column: 38)
!14074 = distinct !DILexicalBlock(scope: !14043, file: !2305, line: 781, column: 2)
!14075 = !DILocation(line: 782, column: 31, scope: !14072)
!14076 = !DILocation(line: 782, column: 7, scope: !14073)
!14077 = !DILocation(line: 783, column: 37, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14072, file: !2305, line: 782, column: 51)
!14079 = !DILocation(line: 784, column: 10, scope: !14078)
!14080 = !DILocation(line: 783, column: 4, scope: !14078)
!14081 = !DILocation(line: 785, column: 3, scope: !14078)
!14082 = !DILocation(line: 781, column: 2, scope: !14074)
!14083 = !DILocation(line: 781, column: 2, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14074, file: !2305, line: 781, column: 2)
!14085 = distinct !{!14085, !14048, !14086}
!14086 = !DILocation(line: 786, column: 2, scope: !14043)
!14087 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14088, file: !14088, line: 403, type: !14089, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14091)
!14088 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14089 = !DISubroutineType(types: !14090)
!14090 = !{!1610, !1610}
!14091 = !{!14092}
!14092 = !DILocalVariable(name: "t", arg: 1, scope: !14087, file: !14088, line: 403, type: !1610)
!14093 = !DILocation(line: 0, scope: !14087)
!14094 = !DILocalVariable(name: "t", arg: 1, scope: !14095, file: !14088, line: 102, type: !1610)
!14095 = distinct !DISubprogram(name: "z_tmcvt", scope: !14088, file: !14088, line: 102, type: !14096, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14098)
!14096 = !DISubroutineType(types: !14097)
!14097 = !{!1610, !1610, !121, !121, !157, !157, !157, !157}
!14098 = !{!14094, !14099, !14100, !14101, !14102, !14103, !14104, !14105, !14106, !14107, !14108}
!14099 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14095, file: !14088, line: 102, type: !121)
!14100 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14095, file: !14088, line: 103, type: !121)
!14101 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14095, file: !14088, line: 103, type: !157)
!14102 = !DILocalVariable(name: "result32", arg: 5, scope: !14095, file: !14088, line: 104, type: !157)
!14103 = !DILocalVariable(name: "round_up", arg: 6, scope: !14095, file: !14088, line: 104, type: !157)
!14104 = !DILocalVariable(name: "round_off", arg: 7, scope: !14095, file: !14088, line: 105, type: !157)
!14105 = !DILocalVariable(name: "mul_ratio", scope: !14095, file: !14088, line: 107, type: !157)
!14106 = !DILocalVariable(name: "div_ratio", scope: !14095, file: !14088, line: 109, type: !157)
!14107 = !DILocalVariable(name: "off", scope: !14095, file: !14088, line: 116, type: !1610)
!14108 = !DILocalVariable(name: "rdivisor", scope: !14109, file: !14088, line: 119, type: !121)
!14109 = distinct !DILexicalBlock(scope: !14110, file: !14088, line: 118, column: 18)
!14110 = distinct !DILexicalBlock(scope: !14095, file: !14088, line: 118, column: 6)
!14111 = !DILocation(line: 0, scope: !14095, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 406, column: 9, scope: !14087)
!14113 = !DILocation(line: 145, column: 13, scope: !14114, inlinedAt: !14112)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !14088, line: 144, column: 10)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !14088, line: 142, column: 7)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !14088, line: 141, column: 24)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !14088, line: 141, column: 13)
!14118 = distinct !DILexicalBlock(scope: !14095, file: !14088, line: 134, column: 6)
!14119 = !DILocation(line: 406, column: 2, scope: !14087)
!14120 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2305, file: !2305, line: 817, type: !3567, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14121)
!14121 = !{!14122, !14123, !14124, !14125}
!14122 = !DILocalVariable(name: "entry", arg: 1, scope: !14120, file: !2305, line: 817, type: !3569)
!14123 = !DILocalVariable(name: "p1", arg: 2, scope: !14120, file: !2305, line: 818, type: !102)
!14124 = !DILocalVariable(name: "p2", arg: 3, scope: !14120, file: !2305, line: 818, type: !102)
!14125 = !DILocalVariable(name: "p3", arg: 4, scope: !14120, file: !2305, line: 818, type: !102)
!14126 = !DILocation(line: 0, scope: !14120)
!14127 = !DILocation(line: 822, column: 2, scope: !14120)
!14128 = !DILocation(line: 822, column: 17, scope: !14120)
!14129 = !DILocation(line: 822, column: 30, scope: !14120)
!14130 = !DILocation(line: 823, column: 2, scope: !14120)
!14131 = !DILocation(line: 845, column: 2, scope: !14120)
!14132 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2305, file: !2305, line: 888, type: !14133, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14135)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{!103, !2309}
!14135 = !{!14136}
!14136 = !DILocalVariable(name: "thread", arg: 1, scope: !14132, file: !2305, line: 888, type: !2309)
!14137 = !DILocation(line: 0, scope: !14132)
!14138 = !DILocation(line: 893, column: 2, scope: !14132)
!14139 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2305, file: !2305, line: 897, type: !14140, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!103, !2309, !32}
!14142 = !{!14143, !14144}
!14143 = !DILocalVariable(name: "thread", arg: 1, scope: !14139, file: !2305, line: 897, type: !2309)
!14144 = !DILocalVariable(name: "options", arg: 2, scope: !14139, file: !2305, line: 897, type: !32)
!14145 = !DILocation(line: 0, scope: !14139)
!14146 = !DILocation(line: 902, column: 2, scope: !14139)
!14147 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2305, file: !2305, line: 1072, type: !14148, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14153)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{!103, !2308, !14150}
!14150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14151, size: 32)
!14151 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !14152)
!14152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!14153 = !{!14154, !14155}
!14154 = !DILocalVariable(name: "thread", arg: 1, scope: !14147, file: !2305, line: 1072, type: !2308)
!14155 = !DILocalVariable(name: "stats", arg: 2, scope: !14147, file: !2305, line: 1073, type: !14150)
!14156 = !DILocation(line: 0, scope: !14147)
!14157 = !DILocation(line: 1075, column: 14, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14147, file: !2305, line: 1075, column: 6)
!14159 = !DILocation(line: 1075, column: 23, scope: !14158)
!14160 = !DILocation(line: 1086, column: 1, scope: !14147)
!14161 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2305, file: !2305, line: 1088, type: !14162, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !14164)
!14162 = !DISubroutineType(types: !14163)
!14163 = !{!103, !14150}
!14164 = !{!14165}
!14165 = !DILocalVariable(name: "stats", arg: 1, scope: !14161, file: !2305, line: 1088, type: !14150)
!14166 = !DILocation(line: 0, scope: !14161)
!14167 = !DILocation(line: 1094, column: 12, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14161, file: !2305, line: 1094, column: 6)
!14169 = !DILocation(line: 1120, column: 1, scope: !14161)
!14170 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14171, file: !14171, line: 20, type: !3255, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !317)
!14171 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14172 = !DILocation(line: 30, column: 2, scope: !14170)
!14173 = !DILocation(line: 31, column: 1, scope: !14170)
!14174 = distinct !DISubprogram(name: "idle", scope: !14171, file: !14171, line: 33, type: !3572, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14175)
!14175 = !{!14176, !14177, !14178}
!14176 = !DILocalVariable(name: "unused1", arg: 1, scope: !14174, file: !14171, line: 33, type: !102)
!14177 = !DILocalVariable(name: "unused2", arg: 2, scope: !14174, file: !14171, line: 33, type: !102)
!14178 = !DILocalVariable(name: "unused3", arg: 3, scope: !14174, file: !14171, line: 33, type: !102)
!14179 = !DILocation(line: 0, scope: !14174)
!14180 = !DILocation(line: 41, column: 2, scope: !14174)
!14181 = !DILocation(line: 55, column: 2, scope: !14182, inlinedAt: !14186)
!14182 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14183)
!14183 = !{!14184, !14185}
!14184 = !DILocalVariable(name: "key", scope: !14182, file: !5818, line: 44, type: !32)
!14185 = !DILocalVariable(name: "tmp", scope: !14182, file: !5818, line: 53, type: !32)
!14186 = distinct !DILocation(line: 62, column: 10, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14174, file: !14171, line: 41, column: 15)
!14188 = !{i64 2278307}
!14189 = !DILocation(line: 0, scope: !14182, inlinedAt: !14186)
!14190 = !DILocation(line: 86, column: 3, scope: !14187)
!14191 = distinct !{!14191, !14180, !14192}
!14192 = !DILocation(line: 105, column: 2, scope: !14174)
!14193 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3255, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !317)
!14194 = !DILocation(line: 5629, column: 2, scope: !14193)
!14195 = !DILocation(line: 5630, column: 1, scope: !14193)
!14196 = !DISubprogram(name: "arch_cpu_idle", scope: !3570, file: !3570, line: 167, type: !3255, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!14197 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3211, file: !3211, line: 30, type: !14198, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!102, !3220, !157}
!14200 = !{!14201, !14202, !14203, !14204}
!14201 = !DILocalVariable(name: "node", arg: 1, scope: !14197, file: !3211, line: 30, type: !3220)
!14202 = !DILocalVariable(name: "needs_free", arg: 2, scope: !14197, file: !3211, line: 30, type: !157)
!14203 = !DILocalVariable(name: "ret", scope: !14197, file: !3211, line: 32, type: !102)
!14204 = !DILocalVariable(name: "anode", scope: !14205, file: !3211, line: 40, type: !3209)
!14205 = distinct !DILexicalBlock(scope: !14206, file: !3211, line: 34, column: 68)
!14206 = distinct !DILexicalBlock(scope: !14197, file: !3211, line: 34, column: 6)
!14207 = !DILocation(line: 0, scope: !14197)
!14208 = !DILocation(line: 34, column: 12, scope: !14206)
!14209 = !DILocation(line: 34, column: 21, scope: !14206)
!14210 = !DILocation(line: 34, column: 25, scope: !14206)
!14211 = !DILocation(line: 34, column: 52, scope: !14206)
!14212 = !DILocation(line: 34, column: 6, scope: !14197)
!14213 = !DILocation(line: 0, scope: !14205)
!14214 = !DILocation(line: 43, column: 16, scope: !14205)
!14215 = !DILocation(line: 44, column: 7, scope: !14205)
!14216 = !DILocation(line: 42, column: 11, scope: !14205)
!14217 = !DILocation(line: 45, column: 4, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !3211, line: 44, column: 19)
!14219 = distinct !DILexicalBlock(scope: !14205, file: !3211, line: 44, column: 7)
!14220 = !DILocation(line: 46, column: 3, scope: !14218)
!14221 = !DILocation(line: 52, column: 9, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14206, file: !3211, line: 47, column: 9)
!14223 = !DILocation(line: 0, scope: !14206)
!14224 = !DILocation(line: 55, column: 2, scope: !14197)
!14225 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !14226, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14228)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{!154, !3220}
!14228 = !{!14229}
!14229 = !DILocalVariable(name: "node", arg: 1, scope: !14225, file: !303, line: 270, type: !3220)
!14230 = !DILocation(line: 0, scope: !14225)
!14231 = !DILocation(line: 272, column: 15, scope: !14225)
!14232 = !DILocation(line: 272, column: 9, scope: !14225)
!14233 = !DILocation(line: 272, column: 2, scope: !14225)
!14234 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3211, file: !3211, line: 58, type: !14235, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14254)
!14235 = !DISubroutineType(types: !14236)
!14236 = !{null, !14237}
!14237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14238, size: 32)
!14238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !14239)
!14239 = !{!14240, !14246, !14248}
!14240 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !14238, file: !296, line: 1710, baseType: !14241, size: 64)
!14241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !14242)
!14242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !14243)
!14243 = !{!14244, !14245}
!14244 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14242, file: !303, line: 42, baseType: !3220, size: 32)
!14245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14242, file: !303, line: 43, baseType: !3220, size: 32, offset: 32)
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14238, file: !296, line: 1711, baseType: !14247, offset: 64)
!14247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14238, file: !296, line: 1712, baseType: !14249, size: 64, offset: 64)
!14249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !14250)
!14250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !14251)
!14251 = !{!14252}
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14250, file: !320, line: 232, baseType: !14253, size: 64)
!14253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3223)
!14254 = !{!14255}
!14255 = !DILocalVariable(name: "queue", arg: 1, scope: !14234, file: !3211, line: 58, type: !14237)
!14256 = !DILocation(line: 0, scope: !14234)
!14257 = !DILocation(line: 60, column: 26, scope: !14234)
!14258 = !DILocation(line: 60, column: 2, scope: !14234)
!14259 = !DILocation(line: 62, column: 23, scope: !14234)
!14260 = !DILocation(line: 62, column: 2, scope: !14234)
!14261 = !DILocation(line: 70, column: 1, scope: !14234)
!14262 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !14263, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14266)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{null, !14265}
!14265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14241, size: 32)
!14266 = !{!14267}
!14267 = !DILocalVariable(name: "list", arg: 1, scope: !14262, file: !303, line: 202, type: !14265)
!14268 = !DILocation(line: 0, scope: !14262)
!14269 = !DILocation(line: 204, column: 8, scope: !14262)
!14270 = !DILocation(line: 204, column: 13, scope: !14262)
!14271 = !DILocation(line: 205, column: 8, scope: !14262)
!14272 = !DILocation(line: 205, column: 13, scope: !14262)
!14273 = !DILocation(line: 206, column: 1, scope: !14262)
!14274 = distinct !DISubprogram(name: "z_waitq_init", scope: !13853, file: !13853, line: 47, type: !14275, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14278)
!14275 = !DISubroutineType(types: !14276)
!14276 = !{null, !14277}
!14277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14249, size: 32)
!14278 = !{!14279}
!14279 = !DILocalVariable(name: "w", arg: 1, scope: !14274, file: !13853, line: 47, type: !14277)
!14280 = !DILocation(line: 0, scope: !14274)
!14281 = !DILocation(line: 49, column: 21, scope: !14274)
!14282 = !DILocation(line: 49, column: 2, scope: !14274)
!14283 = !DILocation(line: 50, column: 1, scope: !14274)
!14284 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !14285, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14288)
!14285 = !DISubroutineType(types: !14286)
!14286 = !{null, !14287}
!14287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14253, size: 32)
!14288 = !{!14289}
!14289 = !DILocalVariable(name: "list", arg: 1, scope: !14284, file: !325, line: 197, type: !14287)
!14290 = !DILocation(line: 0, scope: !14284)
!14291 = !DILocation(line: 199, column: 8, scope: !14284)
!14292 = !DILocation(line: 199, column: 13, scope: !14284)
!14293 = !DILocation(line: 200, column: 8, scope: !14284)
!14294 = !DILocation(line: 200, column: 13, scope: !14284)
!14295 = !DILocation(line: 201, column: 1, scope: !14284)
!14296 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3211, file: !3211, line: 94, type: !14235, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14297)
!14297 = !{!14298, !14299, !14304}
!14298 = !DILocalVariable(name: "queue", arg: 1, scope: !14296, file: !3211, line: 94, type: !14237)
!14299 = !DILocalVariable(name: "key", scope: !14296, file: !3211, line: 98, type: !14300)
!14300 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14301)
!14301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14302)
!14302 = !{!14303}
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14301, file: !316, line: 33, baseType: !103, size: 32)
!14304 = !DILocalVariable(name: "first_pending_thread", scope: !14296, file: !3211, line: 99, type: !14305)
!14305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14306, size: 32)
!14306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !14307)
!14307 = !{!14308, !14346, !14358, !14359, !14360, !14361, !14367, !14379}
!14308 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14306, file: !379, line: 247, baseType: !14309, size: 384)
!14309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !14310)
!14310 = !{!14311, !14321, !14322, !14323, !14324, !14333, !14334, !14335}
!14311 = !DIDerivedType(tag: DW_TAG_member, scope: !14309, file: !379, line: 60, baseType: !14312, size: 64)
!14312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14309, file: !379, line: 60, size: 64, elements: !14313)
!14313 = !{!14314, !14315}
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14312, file: !379, line: 61, baseType: !3222, size: 64)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14312, file: !379, line: 62, baseType: !14316, size: 64)
!14316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !14317)
!14317 = !{!14318}
!14318 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14316, file: !404, line: 50, baseType: !14319, size: 64)
!14319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14320, size: 64, elements: !363)
!14320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14316, size: 32)
!14321 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14309, file: !379, line: 68, baseType: !14277, size: 32, offset: 64)
!14322 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14309, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14309, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!14324 = !DIDerivedType(tag: DW_TAG_member, scope: !14309, file: !379, line: 90, baseType: !14325, size: 16, offset: 112)
!14325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14309, file: !379, line: 90, size: 16, elements: !14326)
!14326 = !{!14327, !14332}
!14327 = !DIDerivedType(tag: DW_TAG_member, scope: !14325, file: !379, line: 91, baseType: !14328, size: 16)
!14328 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14325, file: !379, line: 91, size: 16, elements: !14329)
!14329 = !{!14330, !14331}
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14328, file: !379, line: 96, baseType: !425, size: 8)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14328, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14325, file: !379, line: 100, baseType: !429, size: 16)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14309, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14309, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14309, file: !379, line: 131, baseType: !14336, size: 192, offset: 192)
!14336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !14337)
!14337 = !{!14338, !14339, !14345}
!14338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14336, file: !320, line: 245, baseType: !3222, size: 64)
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14336, file: !320, line: 246, baseType: !14340, size: 32, offset: 64)
!14340 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !14341)
!14341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14342, size: 32)
!14342 = !DISubroutineType(types: !14343)
!14343 = !{null, !14344}
!14344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14336, size: 32)
!14345 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14336, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!14346 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14306, file: !379, line: 250, baseType: !14347, size: 288, offset: 384)
!14347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !14348)
!14348 = !{!14349, !14350, !14351, !14352, !14353, !14354, !14355, !14356, !14357}
!14349 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14347, file: !446, line: 26, baseType: !121, size: 32)
!14350 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14347, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!14351 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14347, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!14352 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14347, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!14353 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14347, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!14354 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14347, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!14355 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14347, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14347, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!14357 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14347, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!14358 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14306, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14306, file: !379, line: 256, baseType: !14249, size: 64, offset: 704)
!14360 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14306, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!14361 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14306, file: !379, line: 300, baseType: !14362, size: 96, offset: 800)
!14362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !14363)
!14363 = !{!14364, !14365, !14366}
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14362, file: !379, line: 153, baseType: !22, size: 32)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14362, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!14366 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14362, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!14367 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14306, file: !379, line: 325, baseType: !14368, size: 32, offset: 896)
!14368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14369, size: 32)
!14369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !14370)
!14370 = !{!14371, !14377, !14378}
!14371 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14369, file: !296, line: 5074, baseType: !14372, size: 96)
!14372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !14373)
!14373 = !{!14374, !14375, !14376}
!14374 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14372, file: !472, line: 57, baseType: !475, size: 32)
!14375 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14372, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!14376 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14372, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!14377 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14369, file: !296, line: 5075, baseType: !14249, size: 64, offset: 96)
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14369, file: !296, line: 5076, baseType: !14247, offset: 160)
!14379 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14306, file: !379, line: 343, baseType: !14380, size: 64, offset: 928)
!14380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !14381)
!14381 = !{!14382, !14383}
!14382 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14380, file: !446, line: 63, baseType: !121, size: 32)
!14383 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14380, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!14384 = !DILocation(line: 0, scope: !14296)
!14385 = !DILocalVariable(name: "l", arg: 1, scope: !14386, file: !316, line: 136, type: !14389)
!14386 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14387, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14390)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{!14300, !14389}
!14389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14247, size: 32)
!14390 = !{!14385, !14391}
!14391 = !DILocalVariable(name: "k", scope: !14386, file: !316, line: 139, type: !14300)
!14392 = !DILocation(line: 0, scope: !14386, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 98, column: 25, scope: !14296)
!14394 = !DILocation(line: 55, column: 2, scope: !14395, inlinedAt: !14399)
!14395 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14396)
!14396 = !{!14397, !14398}
!14397 = !DILocalVariable(name: "key", scope: !14395, file: !5818, line: 44, type: !32)
!14398 = !DILocalVariable(name: "tmp", scope: !14395, file: !5818, line: 53, type: !32)
!14399 = distinct !DILocation(line: 145, column: 10, scope: !14386, inlinedAt: !14393)
!14400 = !{i64 2286048}
!14401 = !DILocation(line: 0, scope: !14395, inlinedAt: !14399)
!14402 = !DILocation(line: 101, column: 55, scope: !14296)
!14403 = !DILocation(line: 101, column: 25, scope: !14296)
!14404 = !DILocation(line: 103, column: 27, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14296, file: !3211, line: 103, column: 6)
!14406 = !DILocation(line: 103, column: 6, scope: !14296)
!14407 = !DILocation(line: 104, column: 3, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14405, file: !3211, line: 103, column: 36)
!14409 = !DILocation(line: 105, column: 2, scope: !14408)
!14410 = !DILocation(line: 98, column: 45, scope: !14296)
!14411 = !DILocation(line: 108, column: 2, scope: !14296)
!14412 = !DILocation(line: 109, column: 1, scope: !14296)
!14413 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3211, file: !3211, line: 81, type: !14414, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14416)
!14414 = !DISubroutineType(types: !14415)
!14415 = !{null, !14305, !102}
!14416 = !{!14417, !14418}
!14417 = !DILocalVariable(name: "thread", arg: 1, scope: !14413, file: !3211, line: 81, type: !14305)
!14418 = !DILocalVariable(name: "data", arg: 2, scope: !14413, file: !3211, line: 81, type: !102)
!14419 = !DILocation(line: 0, scope: !14413)
!14420 = !DILocalVariable(name: "thread", arg: 1, scope: !14421, file: !14422, line: 134, type: !14305)
!14421 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14422, file: !14422, line: 134, type: !14423, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14425)
!14422 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14423 = !DISubroutineType(types: !14424)
!14424 = !{null, !14305, !32, !102}
!14425 = !{!14420, !14426, !14427}
!14426 = !DILocalVariable(name: "value", arg: 2, scope: !14421, file: !14422, line: 135, type: !32)
!14427 = !DILocalVariable(name: "data", arg: 3, scope: !14421, file: !14422, line: 136, type: !102)
!14428 = !DILocation(line: 0, scope: !14421, inlinedAt: !14429)
!14429 = distinct !DILocation(line: 83, column: 2, scope: !14413)
!14430 = !DILocalVariable(name: "thread", arg: 1, scope: !14431, file: !13549, line: 65, type: !14305)
!14431 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13549, file: !13549, line: 65, type: !14432, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14434)
!14432 = !DISubroutineType(types: !14433)
!14433 = !{null, !14305, !32}
!14434 = !{!14430, !14435}
!14435 = !DILocalVariable(name: "value", arg: 2, scope: !14431, file: !13549, line: 65, type: !32)
!14436 = !DILocation(line: 0, scope: !14431, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 138, column: 2, scope: !14421, inlinedAt: !14429)
!14438 = !DILocation(line: 67, column: 15, scope: !14431, inlinedAt: !14437)
!14439 = !DILocation(line: 67, column: 33, scope: !14431, inlinedAt: !14437)
!14440 = !DILocation(line: 139, column: 15, scope: !14421, inlinedAt: !14429)
!14441 = !DILocation(line: 139, column: 25, scope: !14421, inlinedAt: !14429)
!14442 = !DILocation(line: 84, column: 2, scope: !14413)
!14443 = !DILocation(line: 85, column: 1, scope: !14413)
!14444 = distinct !DISubprogram(name: "k_queue_insert", scope: !3211, file: !3211, line: 175, type: !14445, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !14237, !102, !102}
!14447 = !{!14448, !14449, !14450}
!14448 = !DILocalVariable(name: "queue", arg: 1, scope: !14444, file: !3211, line: 175, type: !14237)
!14449 = !DILocalVariable(name: "prev", arg: 2, scope: !14444, file: !3211, line: 175, type: !102)
!14450 = !DILocalVariable(name: "data", arg: 3, scope: !14444, file: !3211, line: 175, type: !102)
!14451 = !DILocation(line: 0, scope: !14444)
!14452 = !DILocation(line: 179, column: 8, scope: !14444)
!14453 = !DILocation(line: 182, column: 1, scope: !14444)
!14454 = distinct !DISubprogram(name: "queue_insert", scope: !3211, file: !3211, line: 120, type: !14455, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14457)
!14455 = !DISubroutineType(types: !14456)
!14456 = !{!754, !14237, !102, !102, !157, !157}
!14457 = !{!14458, !14459, !14460, !14461, !14462, !14463, !14464, !14465}
!14458 = !DILocalVariable(name: "queue", arg: 1, scope: !14454, file: !3211, line: 120, type: !14237)
!14459 = !DILocalVariable(name: "prev", arg: 2, scope: !14454, file: !3211, line: 120, type: !102)
!14460 = !DILocalVariable(name: "data", arg: 3, scope: !14454, file: !3211, line: 120, type: !102)
!14461 = !DILocalVariable(name: "alloc", arg: 4, scope: !14454, file: !3211, line: 121, type: !157)
!14462 = !DILocalVariable(name: "is_append", arg: 5, scope: !14454, file: !3211, line: 121, type: !157)
!14463 = !DILocalVariable(name: "first_pending_thread", scope: !14454, file: !3211, line: 123, type: !14305)
!14464 = !DILocalVariable(name: "key", scope: !14454, file: !3211, line: 124, type: !14300)
!14465 = !DILocalVariable(name: "anode", scope: !14466, file: !3211, line: 146, type: !3209)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !3211, line: 145, column: 13)
!14467 = distinct !DILexicalBlock(scope: !14454, file: !3211, line: 145, column: 6)
!14468 = !DILocation(line: 0, scope: !14454)
!14469 = !DILocation(line: 124, column: 45, scope: !14454)
!14470 = !DILocation(line: 0, scope: !14386, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 124, column: 25, scope: !14454)
!14472 = !DILocation(line: 55, column: 2, scope: !14395, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 145, column: 10, scope: !14386, inlinedAt: !14471)
!14474 = !DILocation(line: 0, scope: !14395, inlinedAt: !14473)
!14475 = !DILocation(line: 128, column: 6, scope: !14454)
!14476 = !DILocation(line: 129, column: 39, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !3211, line: 128, column: 17)
!14478 = distinct !DILexicalBlock(scope: !14454, file: !3211, line: 128, column: 6)
!14479 = !DILocation(line: 129, column: 10, scope: !14477)
!14480 = !DILocation(line: 130, column: 2, scope: !14477)
!14481 = !DILocation(line: 131, column: 55, scope: !14454)
!14482 = !DILocation(line: 131, column: 25, scope: !14454)
!14483 = !DILocation(line: 133, column: 27, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14454, file: !3211, line: 133, column: 6)
!14485 = !DILocation(line: 133, column: 6, scope: !14454)
!14486 = !DILocation(line: 136, column: 3, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14484, file: !3211, line: 133, column: 36)
!14488 = !DILocation(line: 137, column: 3, scope: !14487)
!14489 = !DILocation(line: 141, column: 3, scope: !14487)
!14490 = !DILocation(line: 145, column: 6, scope: !14454)
!14491 = !DILocation(line: 148, column: 11, scope: !14466)
!14492 = !DILocation(line: 0, scope: !14466)
!14493 = !DILocation(line: 149, column: 13, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14466, file: !3211, line: 149, column: 7)
!14495 = !DILocation(line: 149, column: 7, scope: !14466)
!14496 = !DILocalVariable(name: "key", arg: 2, scope: !14497, file: !316, line: 190, type: !14300)
!14497 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14498, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14500)
!14498 = !DISubroutineType(types: !14499)
!14499 = !{null, !14389, !14300}
!14500 = !{!14501, !14496}
!14501 = !DILocalVariable(name: "l", arg: 1, scope: !14497, file: !316, line: 189, type: !14389)
!14502 = !DILocation(line: 0, scope: !14497, inlinedAt: !14503)
!14503 = distinct !DILocation(line: 150, column: 4, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14494, file: !3211, line: 149, column: 22)
!14505 = !DILocalVariable(name: "key", arg: 1, scope: !14506, file: !5818, line: 84, type: !32)
!14506 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14507)
!14507 = !{!14505}
!14508 = !DILocation(line: 0, scope: !14506, inlinedAt: !14509)
!14509 = distinct !DILocation(line: 215, column: 2, scope: !14497, inlinedAt: !14503)
!14510 = !DILocation(line: 95, column: 2, scope: !14506, inlinedAt: !14509)
!14511 = !{i64 2286865}
!14512 = !DILocation(line: 157, column: 10, scope: !14466)
!14513 = !DILocation(line: 157, column: 15, scope: !14466)
!14514 = !DILocation(line: 158, column: 27, scope: !14466)
!14515 = !DILocation(line: 158, column: 3, scope: !14466)
!14516 = !DILocation(line: 161, column: 19, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14467, file: !3211, line: 160, column: 9)
!14518 = !DILocation(line: 161, column: 3, scope: !14517)
!14519 = !DILocation(line: 166, column: 42, scope: !14454)
!14520 = !DILocation(line: 166, column: 28, scope: !14454)
!14521 = !DILocation(line: 166, column: 36, scope: !14454)
!14522 = !DILocation(line: 166, column: 2, scope: !14454)
!14523 = !DILocation(line: 168, column: 2, scope: !14454)
!14524 = !DILocation(line: 172, column: 2, scope: !14454)
!14525 = !DILocation(line: 173, column: 1, scope: !14454)
!14526 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !14527, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14529)
!14527 = !DISubroutineType(types: !14528)
!14528 = !{!3220, !14265}
!14529 = !{!14530}
!14530 = !DILocalVariable(name: "list", arg: 1, scope: !14526, file: !303, line: 255, type: !14265)
!14531 = !DILocation(line: 0, scope: !14526)
!14532 = !DILocation(line: 257, column: 15, scope: !14526)
!14533 = !DILocation(line: 257, column: 2, scope: !14526)
!14534 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14422, file: !14422, line: 102, type: !14535, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14536)
!14535 = !DISubroutineType(types: !3174)
!14536 = !{!14537}
!14537 = !DILocalVariable(name: "size", arg: 1, scope: !14534, file: !14422, line: 102, type: !204)
!14538 = !DILocation(line: 0, scope: !14534)
!14539 = !DILocation(line: 104, column: 9, scope: !14534)
!14540 = !DILocation(line: 104, column: 2, scope: !14534)
!14541 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !14542, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14544)
!14542 = !DISubroutineType(types: !14543)
!14543 = !{null, !3220, !154}
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "node", arg: 1, scope: !14541, file: !303, line: 288, type: !3220)
!14546 = !DILocalVariable(name: "flags", arg: 2, scope: !14541, file: !303, line: 288, type: !154)
!14547 = !DILocation(line: 0, scope: !14541)
!14548 = !DILocation(line: 291, column: 25, scope: !14541)
!14549 = !DILocation(line: 291, column: 8, scope: !14541)
!14550 = !DILocation(line: 291, column: 23, scope: !14541)
!14551 = !DILocation(line: 292, column: 1, scope: !14541)
!14552 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !14553, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14555)
!14553 = !DISubroutineType(types: !14554)
!14554 = !{null, !14265, !3220, !3220}
!14555 = !{!14556, !14557, !14558}
!14556 = !DILocalVariable(name: "list", arg: 1, scope: !14552, file: !303, line: 420, type: !14265)
!14557 = !DILocalVariable(name: "prev", arg: 2, scope: !14552, file: !303, line: 420, type: !3220)
!14558 = !DILocalVariable(name: "node", arg: 3, scope: !14552, file: !303, line: 420, type: !3220)
!14559 = !DILocation(line: 0, scope: !14552)
!14560 = !DILocation(line: 420, column: 1, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14552, file: !303, line: 420, column: 1)
!14562 = !DILocation(line: 420, column: 1, scope: !14552)
!14563 = !DILocation(line: 420, column: 1, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14561, file: !303, line: 420, column: 1)
!14565 = !DILocation(line: 420, column: 1, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14561, file: !303, line: 420, column: 1)
!14567 = !DILocation(line: 420, column: 1, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14566, file: !303, line: 420, column: 1)
!14569 = !DILocation(line: 420, column: 1, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14566, file: !303, line: 420, column: 1)
!14571 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !14572, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14574)
!14572 = !DISubroutineType(types: !14573)
!14573 = !{null, !14265, !3220}
!14574 = !{!14575, !14576}
!14575 = !DILocalVariable(name: "list", arg: 1, scope: !14571, file: !303, line: 360, type: !14265)
!14576 = !DILocalVariable(name: "node", arg: 2, scope: !14571, file: !303, line: 360, type: !3220)
!14577 = !DILocation(line: 0, scope: !14571)
!14578 = !DILocation(line: 360, column: 1, scope: !14571)
!14579 = !DILocation(line: 360, column: 1, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14571, file: !303, line: 360, column: 1)
!14581 = !DILocation(line: 360, column: 1, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14580, file: !303, line: 360, column: 1)
!14583 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !14584, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14586)
!14584 = !DISubroutineType(types: !14585)
!14585 = !{!3220, !3220}
!14586 = !{!14587}
!14587 = !DILocalVariable(name: "node", arg: 1, scope: !14583, file: !303, line: 211, type: !3220)
!14588 = !DILocation(line: 0, scope: !14583)
!14589 = !DILocation(line: 213, column: 32, scope: !14583)
!14590 = !DILocation(line: 213, column: 47, scope: !14583)
!14591 = !DILocation(line: 213, column: 9, scope: !14583)
!14592 = !DILocation(line: 213, column: 2, scope: !14583)
!14593 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !14572, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14594)
!14594 = !{!14595, !14596}
!14595 = !DILocalVariable(name: "list", arg: 1, scope: !14593, file: !303, line: 373, type: !14265)
!14596 = !DILocalVariable(name: "node", arg: 2, scope: !14593, file: !303, line: 373, type: !3220)
!14597 = !DILocation(line: 0, scope: !14593)
!14598 = !DILocation(line: 373, column: 1, scope: !14593)
!14599 = !DILocation(line: 373, column: 1, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14593, file: !303, line: 373, column: 1)
!14601 = !DILocation(line: 373, column: 1, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14600, file: !303, line: 373, column: 1)
!14603 = !DILocation(line: 373, column: 1, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14600, file: !303, line: 373, column: 1)
!14605 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !14606, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14608)
!14606 = !DISubroutineType(types: !14607)
!14607 = !{null, !3220, !3220}
!14608 = !{!14609, !14610, !14611}
!14609 = !DILocalVariable(name: "parent", arg: 1, scope: !14605, file: !303, line: 218, type: !3220)
!14610 = !DILocalVariable(name: "child", arg: 2, scope: !14605, file: !303, line: 219, type: !3220)
!14611 = !DILocalVariable(name: "cur_flags", scope: !14605, file: !303, line: 221, type: !154)
!14612 = !DILocation(line: 0, scope: !14605)
!14613 = !DILocation(line: 221, column: 22, scope: !14605)
!14614 = !DILocation(line: 223, column: 27, scope: !14605)
!14615 = !DILocation(line: 223, column: 39, scope: !14605)
!14616 = !DILocation(line: 223, column: 37, scope: !14605)
!14617 = !DILocation(line: 223, column: 10, scope: !14605)
!14618 = !DILocation(line: 223, column: 25, scope: !14605)
!14619 = !DILocation(line: 224, column: 1, scope: !14605)
!14620 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !14572, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14621)
!14621 = !{!14622, !14623}
!14622 = !DILocalVariable(name: "list", arg: 1, scope: !14620, file: !303, line: 231, type: !14265)
!14623 = !DILocalVariable(name: "node", arg: 2, scope: !14620, file: !303, line: 231, type: !3220)
!14624 = !DILocation(line: 0, scope: !14620)
!14625 = !DILocation(line: 233, column: 8, scope: !14620)
!14626 = !DILocation(line: 233, column: 13, scope: !14620)
!14627 = !DILocation(line: 234, column: 1, scope: !14620)
!14628 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !14572, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14629)
!14629 = !{!14630, !14631}
!14630 = !DILocalVariable(name: "list", arg: 1, scope: !14628, file: !303, line: 226, type: !14265)
!14631 = !DILocalVariable(name: "node", arg: 2, scope: !14628, file: !303, line: 226, type: !3220)
!14632 = !DILocation(line: 0, scope: !14628)
!14633 = !DILocation(line: 228, column: 8, scope: !14628)
!14634 = !DILocation(line: 228, column: 13, scope: !14628)
!14635 = !DILocation(line: 229, column: 1, scope: !14628)
!14636 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !14527, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14637)
!14637 = !{!14638}
!14638 = !DILocalVariable(name: "list", arg: 1, scope: !14636, file: !303, line: 243, type: !14265)
!14639 = !DILocation(line: 0, scope: !14636)
!14640 = !DILocation(line: 245, column: 15, scope: !14636)
!14641 = !DILocation(line: 245, column: 2, scope: !14636)
!14642 = distinct !DISubprogram(name: "k_queue_append", scope: !3211, file: !3211, line: 184, type: !14643, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14645)
!14643 = !DISubroutineType(types: !14644)
!14644 = !{null, !14237, !102}
!14645 = !{!14646, !14647}
!14646 = !DILocalVariable(name: "queue", arg: 1, scope: !14642, file: !3211, line: 184, type: !14237)
!14647 = !DILocalVariable(name: "data", arg: 2, scope: !14642, file: !3211, line: 184, type: !102)
!14648 = !DILocation(line: 0, scope: !14642)
!14649 = !DILocation(line: 188, column: 8, scope: !14642)
!14650 = !DILocation(line: 191, column: 1, scope: !14642)
!14651 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3211, file: !3211, line: 193, type: !14643, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14652)
!14652 = !{!14653, !14654}
!14653 = !DILocalVariable(name: "queue", arg: 1, scope: !14651, file: !3211, line: 193, type: !14237)
!14654 = !DILocalVariable(name: "data", arg: 2, scope: !14651, file: !3211, line: 193, type: !102)
!14655 = !DILocation(line: 0, scope: !14651)
!14656 = !DILocation(line: 197, column: 8, scope: !14651)
!14657 = !DILocation(line: 200, column: 1, scope: !14651)
!14658 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3211, file: !3211, line: 202, type: !14659, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!754, !14237, !102}
!14661 = !{!14662, !14663, !14664}
!14662 = !DILocalVariable(name: "queue", arg: 1, scope: !14658, file: !3211, line: 202, type: !14237)
!14663 = !DILocalVariable(name: "data", arg: 2, scope: !14658, file: !3211, line: 202, type: !102)
!14664 = !DILocalVariable(name: "ret", scope: !14658, file: !3211, line: 206, type: !754)
!14665 = !DILocation(line: 0, scope: !14658)
!14666 = !DILocation(line: 206, column: 16, scope: !14658)
!14667 = !DILocation(line: 210, column: 2, scope: !14658)
!14668 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3211, file: !3211, line: 223, type: !14659, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14669)
!14669 = !{!14670, !14671, !14672}
!14670 = !DILocalVariable(name: "queue", arg: 1, scope: !14668, file: !3211, line: 223, type: !14237)
!14671 = !DILocalVariable(name: "data", arg: 2, scope: !14668, file: !3211, line: 223, type: !102)
!14672 = !DILocalVariable(name: "ret", scope: !14668, file: !3211, line: 227, type: !754)
!14673 = !DILocation(line: 0, scope: !14668)
!14674 = !DILocation(line: 227, column: 16, scope: !14668)
!14675 = !DILocation(line: 231, column: 2, scope: !14668)
!14676 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3211, file: !3211, line: 244, type: !14677, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{!103, !14237, !102, !102}
!14679 = !{!14680, !14681, !14682, !14683, !14684}
!14680 = !DILocalVariable(name: "queue", arg: 1, scope: !14676, file: !3211, line: 244, type: !14237)
!14681 = !DILocalVariable(name: "head", arg: 2, scope: !14676, file: !3211, line: 244, type: !102)
!14682 = !DILocalVariable(name: "tail", arg: 3, scope: !14676, file: !3211, line: 244, type: !102)
!14683 = !DILocalVariable(name: "key", scope: !14676, file: !3211, line: 255, type: !14300)
!14684 = !DILocalVariable(name: "thread", scope: !14676, file: !3211, line: 256, type: !14305)
!14685 = !DILocation(line: 0, scope: !14676)
!14686 = !DILocation(line: 249, column: 2, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14676, file: !3211, line: 249, column: 2)
!14688 = !DILocation(line: 255, column: 45, scope: !14676)
!14689 = !DILocation(line: 0, scope: !14386, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 255, column: 25, scope: !14676)
!14691 = !DILocation(line: 55, column: 2, scope: !14395, inlinedAt: !14692)
!14692 = distinct !DILocation(line: 145, column: 10, scope: !14386, inlinedAt: !14690)
!14693 = !DILocation(line: 0, scope: !14395, inlinedAt: !14692)
!14694 = !DILocation(line: 259, column: 42, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !3211, line: 258, column: 20)
!14696 = distinct !DILexicalBlock(scope: !14676, file: !3211, line: 258, column: 6)
!14697 = !DILocation(line: 259, column: 12, scope: !14695)
!14698 = !DILocation(line: 262, column: 24, scope: !14676)
!14699 = !DILocation(line: 262, column: 2, scope: !14676)
!14700 = !DILocation(line: 263, column: 3, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14676, file: !3211, line: 262, column: 45)
!14702 = !DILocation(line: 264, column: 11, scope: !14701)
!14703 = !DILocation(line: 264, column: 10, scope: !14701)
!14704 = !DILocation(line: 265, column: 12, scope: !14701)
!14705 = !DILocation(line: 262, column: 15, scope: !14676)
!14706 = distinct !{!14706, !14699, !14707}
!14707 = !DILocation(line: 266, column: 2, scope: !14676)
!14708 = !DILocation(line: 268, column: 6, scope: !14676)
!14709 = !DILocation(line: 269, column: 34, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !3211, line: 268, column: 20)
!14711 = distinct !DILexicalBlock(scope: !14676, file: !3211, line: 268, column: 6)
!14712 = !DILocation(line: 269, column: 3, scope: !14710)
!14713 = !DILocation(line: 270, column: 2, scope: !14710)
!14714 = !DILocation(line: 275, column: 2, scope: !14676)
!14715 = !DILocation(line: 277, column: 1, scope: !14676)
!14716 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !14717, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{null, !14265, !102, !102}
!14719 = !{!14720, !14721, !14722}
!14720 = !DILocalVariable(name: "list", arg: 1, scope: !14716, file: !303, line: 391, type: !14265)
!14721 = !DILocalVariable(name: "head", arg: 2, scope: !14716, file: !303, line: 391, type: !102)
!14722 = !DILocalVariable(name: "tail", arg: 3, scope: !14716, file: !303, line: 391, type: !102)
!14723 = !DILocation(line: 0, scope: !14716)
!14724 = !DILocation(line: 391, column: 1, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14716, file: !303, line: 391, column: 1)
!14726 = !DILocation(line: 391, column: 1, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14728, file: !303, line: 391, column: 1)
!14728 = distinct !DILexicalBlock(scope: !14725, file: !303, line: 391, column: 1)
!14729 = !DILocation(line: 0, scope: !14727)
!14730 = !DILocation(line: 391, column: 1, scope: !14728)
!14731 = !DILocation(line: 391, column: 1, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14727, file: !303, line: 391, column: 1)
!14733 = !DILocation(line: 391, column: 1, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14727, file: !303, line: 391, column: 1)
!14735 = !DILocation(line: 391, column: 1, scope: !14716)
!14736 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3211, file: !3211, line: 279, type: !14737, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14751)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!103, !14237, !14739}
!14739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14740, size: 32)
!14740 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1216, line: 40, baseType: !14741)
!14741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1216, line: 35, size: 64, elements: !14742)
!14742 = !{!14743, !14750}
!14743 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14741, file: !1216, line: 36, baseType: !14744, size: 32)
!14744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14745, size: 32)
!14745 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !14746)
!14746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !14747)
!14747 = !{!14748}
!14748 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14746, file: !1216, line: 30, baseType: !14749, size: 32)
!14749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14746, size: 32)
!14750 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14741, file: !1216, line: 37, baseType: !14744, size: 32, offset: 32)
!14751 = !{!14752, !14753, !14754}
!14752 = !DILocalVariable(name: "queue", arg: 1, scope: !14736, file: !3211, line: 279, type: !14237)
!14753 = !DILocalVariable(name: "list", arg: 2, scope: !14736, file: !3211, line: 279, type: !14739)
!14754 = !DILocalVariable(name: "ret", scope: !14736, file: !3211, line: 281, type: !103)
!14755 = !DILocation(line: 0, scope: !14736)
!14756 = !DILocation(line: 286, column: 2, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14736, file: !3211, line: 286, column: 2)
!14758 = !DILocation(line: 286, column: 2, scope: !14736)
!14759 = !DILocation(line: 301, column: 41, scope: !14736)
!14760 = !DILocation(line: 301, column: 53, scope: !14736)
!14761 = !DILocation(line: 301, column: 8, scope: !14736)
!14762 = !DILocation(line: 302, column: 2, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14736, file: !3211, line: 302, column: 2)
!14764 = !DILocation(line: 302, column: 2, scope: !14736)
!14765 = !DILocation(line: 307, column: 2, scope: !14736)
!14766 = !DILocation(line: 311, column: 2, scope: !14736)
!14767 = !DILocation(line: 312, column: 1, scope: !14736)
!14768 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1216, file: !1216, line: 261, type: !14769, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14771)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!157, !14739}
!14771 = !{!14772}
!14772 = !DILocalVariable(name: "list", arg: 1, scope: !14768, file: !1216, line: 261, type: !14739)
!14773 = !DILocation(line: 0, scope: !14768)
!14774 = !DILocation(line: 261, column: 1, scope: !14768)
!14775 = distinct !DISubprogram(name: "sys_slist_init", scope: !1216, file: !1216, line: 196, type: !14776, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14778)
!14776 = !DISubroutineType(types: !14777)
!14777 = !{null, !14739}
!14778 = !{!14779}
!14779 = !DILocalVariable(name: "list", arg: 1, scope: !14775, file: !1216, line: 196, type: !14739)
!14780 = !DILocation(line: 0, scope: !14775)
!14781 = !DILocation(line: 198, column: 8, scope: !14775)
!14782 = !DILocation(line: 198, column: 13, scope: !14775)
!14783 = !DILocation(line: 199, column: 8, scope: !14775)
!14784 = !DILocation(line: 199, column: 13, scope: !14775)
!14785 = !DILocation(line: 200, column: 1, scope: !14775)
!14786 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1216, file: !1216, line: 231, type: !14787, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14789)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{!14744, !14739}
!14789 = !{!14790}
!14790 = !DILocalVariable(name: "list", arg: 1, scope: !14786, file: !1216, line: 231, type: !14739)
!14791 = !DILocation(line: 0, scope: !14786)
!14792 = !DILocation(line: 233, column: 15, scope: !14786)
!14793 = !DILocation(line: 233, column: 2, scope: !14786)
!14794 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3211, file: !3211, line: 314, type: !14795, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14801)
!14795 = !DISubroutineType(types: !14796)
!14796 = !{!102, !14237, !14797}
!14797 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14798)
!14798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14799)
!14799 = !{!14800}
!14800 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14798, file: !201, line: 66, baseType: !200, size: 64)
!14801 = !{!14802, !14803, !14804, !14805, !14806, !14809}
!14802 = !DILocalVariable(name: "queue", arg: 1, scope: !14794, file: !3211, line: 314, type: !14237)
!14803 = !DILocalVariable(name: "timeout", arg: 2, scope: !14794, file: !3211, line: 314, type: !14797)
!14804 = !DILocalVariable(name: "key", scope: !14794, file: !3211, line: 316, type: !14300)
!14805 = !DILocalVariable(name: "data", scope: !14794, file: !3211, line: 317, type: !102)
!14806 = !DILocalVariable(name: "node", scope: !14807, file: !3211, line: 322, type: !3220)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !3211, line: 321, column: 52)
!14808 = distinct !DILexicalBlock(scope: !14794, file: !3211, line: 321, column: 6)
!14809 = !DILocalVariable(name: "ret", scope: !14794, file: !3211, line: 343, type: !103)
!14810 = !DILocation(line: 0, scope: !14794)
!14811 = !DILocation(line: 316, column: 45, scope: !14794)
!14812 = !DILocation(line: 0, scope: !14386, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 316, column: 25, scope: !14794)
!14814 = !DILocation(line: 55, column: 2, scope: !14395, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 145, column: 10, scope: !14386, inlinedAt: !14813)
!14816 = !DILocation(line: 0, scope: !14395, inlinedAt: !14815)
!14817 = !DILocation(line: 321, column: 6, scope: !14808)
!14818 = !DILocation(line: 321, column: 6, scope: !14794)
!14819 = !{!"branch_weights", i32 1, i32 2000}
!14820 = !DILocation(line: 324, column: 10, scope: !14807)
!14821 = !DILocation(line: 0, scope: !14807)
!14822 = !DILocation(line: 325, column: 10, scope: !14807)
!14823 = !DILocation(line: 0, scope: !14497, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 326, column: 3, scope: !14807)
!14825 = !DILocation(line: 0, scope: !14506, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 215, column: 2, scope: !14497, inlinedAt: !14824)
!14827 = !DILocation(line: 95, column: 2, scope: !14506, inlinedAt: !14826)
!14828 = !DILocation(line: 335, column: 6, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14794, file: !3211, line: 335, column: 6)
!14830 = !DILocation(line: 335, column: 6, scope: !14794)
!14831 = !DILocation(line: 0, scope: !14497, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 336, column: 3, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14829, file: !3211, line: 335, column: 40)
!14834 = !DILocation(line: 0, scope: !14506, inlinedAt: !14835)
!14835 = distinct !DILocation(line: 215, column: 2, scope: !14497, inlinedAt: !14832)
!14836 = !DILocation(line: 95, column: 2, scope: !14506, inlinedAt: !14835)
!14837 = !DILocation(line: 340, column: 3, scope: !14833)
!14838 = !DILocation(line: 343, column: 51, scope: !14794)
!14839 = !DILocation(line: 343, column: 12, scope: !14794)
!14840 = !DILocation(line: 348, column: 14, scope: !14794)
!14841 = !DILocation(line: 348, column: 9, scope: !14794)
!14842 = !DILocation(line: 348, column: 29, scope: !14794)
!14843 = !DILocation(line: 348, column: 44, scope: !14794)
!14844 = !DILocation(line: 349, column: 1, scope: !14794)
!14845 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14846, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14848)
!14846 = !DISubroutineType(types: !14847)
!14847 = !{!157, !14265}
!14848 = !{!14849}
!14849 = !DILocalVariable(name: "list", arg: 1, scope: !14845, file: !303, line: 323, type: !14265)
!14850 = !DILocation(line: 0, scope: !14845)
!14851 = !DILocation(line: 323, column: 1, scope: !14845)
!14852 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !14527, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14853)
!14853 = !{!14854, !14855}
!14854 = !DILocalVariable(name: "list", arg: 1, scope: !14852, file: !303, line: 434, type: !14265)
!14855 = !DILocalVariable(name: "node", scope: !14852, file: !303, line: 434, type: !3220)
!14856 = !DILocation(line: 0, scope: !14852)
!14857 = !DILocation(line: 434, column: 1, scope: !14852)
!14858 = !DILocation(line: 434, column: 1, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14852, file: !303, line: 434, column: 1)
!14860 = !DILocation(line: 434, column: 1, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14859, file: !303, line: 434, column: 1)
!14862 = distinct !DISubprogram(name: "k_queue_remove", scope: !3211, file: !3211, line: 351, type: !14863, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14865)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!157, !14237, !102}
!14865 = !{!14866, !14867, !14868}
!14866 = !DILocalVariable(name: "queue", arg: 1, scope: !14862, file: !3211, line: 351, type: !14237)
!14867 = !DILocalVariable(name: "data", arg: 2, scope: !14862, file: !3211, line: 351, type: !102)
!14868 = !DILocalVariable(name: "ret", scope: !14862, file: !3211, line: 355, type: !157)
!14869 = !DILocation(line: 0, scope: !14862)
!14870 = !DILocation(line: 355, column: 48, scope: !14862)
!14871 = !DILocation(line: 355, column: 56, scope: !14862)
!14872 = !DILocation(line: 355, column: 13, scope: !14862)
!14873 = !DILocation(line: 359, column: 2, scope: !14862)
!14874 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14875, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14877)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!157, !14265, !3220}
!14877 = !{!14878, !14879, !14880, !14881}
!14878 = !DILocalVariable(name: "list", arg: 1, scope: !14874, file: !303, line: 478, type: !14265)
!14879 = !DILocalVariable(name: "node", arg: 2, scope: !14874, file: !303, line: 478, type: !3220)
!14880 = !DILocalVariable(name: "prev", scope: !14874, file: !303, line: 478, type: !3220)
!14881 = !DILocalVariable(name: "test", scope: !14874, file: !303, line: 478, type: !3220)
!14882 = !DILocation(line: 0, scope: !14874)
!14883 = !DILocation(line: 478, column: 1, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14874, file: !303, line: 478, column: 1)
!14885 = !DILocation(line: 478, column: 1, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14884, file: !303, line: 478, column: 1)
!14887 = !DILocation(line: 478, column: 1, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14889, file: !303, line: 478, column: 1)
!14889 = distinct !DILexicalBlock(scope: !14886, file: !303, line: 478, column: 1)
!14890 = !DILocation(line: 478, column: 1, scope: !14889)
!14891 = distinct !{!14891, !14883, !14883}
!14892 = !DILocation(line: 478, column: 1, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14888, file: !303, line: 478, column: 1)
!14894 = !DILocation(line: 478, column: 1, scope: !14874)
!14895 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !14553, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14896)
!14896 = !{!14897, !14898, !14899}
!14897 = !DILocalVariable(name: "list", arg: 1, scope: !14895, file: !303, line: 463, type: !14265)
!14898 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14895, file: !303, line: 463, type: !3220)
!14899 = !DILocalVariable(name: "node", arg: 3, scope: !14895, file: !303, line: 463, type: !3220)
!14900 = !DILocation(line: 0, scope: !14895)
!14901 = !DILocation(line: 463, column: 1, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14895, file: !303, line: 463, column: 1)
!14903 = !DILocation(line: 0, scope: !14902)
!14904 = !DILocation(line: 463, column: 1, scope: !14895)
!14905 = !DILocation(line: 463, column: 1, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14902, file: !303, line: 463, column: 1)
!14907 = !DILocation(line: 463, column: 1, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14906, file: !303, line: 463, column: 1)
!14909 = !DILocation(line: 463, column: 1, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14908, file: !303, line: 463, column: 1)
!14911 = !DILocation(line: 463, column: 1, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14902, file: !303, line: 463, column: 1)
!14913 = !DILocation(line: 463, column: 1, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14912, file: !303, line: 463, column: 1)
!14915 = !DILocation(line: 463, column: 1, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14914, file: !303, line: 463, column: 1)
!14917 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !14584, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14918)
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "node", arg: 1, scope: !14917, file: !303, line: 347, type: !3220)
!14920 = !DILocation(line: 0, scope: !14917)
!14921 = !DILocation(line: 347, column: 1, scope: !14917)
!14922 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !14584, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14923)
!14923 = !{!14924}
!14924 = !DILocalVariable(name: "node", arg: 1, scope: !14922, file: !303, line: 336, type: !3220)
!14925 = !DILocation(line: 0, scope: !14922)
!14926 = !DILocation(line: 336, column: 1, scope: !14922)
!14927 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3211, file: !3211, line: 362, type: !14863, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14928)
!14928 = !{!14929, !14930, !14931}
!14929 = !DILocalVariable(name: "queue", arg: 1, scope: !14927, file: !3211, line: 362, type: !14237)
!14930 = !DILocalVariable(name: "data", arg: 2, scope: !14927, file: !3211, line: 362, type: !102)
!14931 = !DILocalVariable(name: "test", scope: !14927, file: !3211, line: 366, type: !3220)
!14932 = !DILocation(line: 0, scope: !14927)
!14933 = !DILocation(line: 368, column: 2, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14927, file: !3211, line: 368, column: 2)
!14935 = !DILocation(line: 368, column: 2, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14934, file: !3211, line: 368, column: 2)
!14937 = !DILocation(line: 369, column: 12, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14939, file: !3211, line: 369, column: 7)
!14939 = distinct !DILexicalBlock(scope: !14936, file: !3211, line: 368, column: 49)
!14940 = !DILocation(line: 369, column: 7, scope: !14939)
!14941 = distinct !{!14941, !14933, !14942}
!14942 = !DILocation(line: 374, column: 2, scope: !14934)
!14943 = !DILocation(line: 376, column: 2, scope: !14927)
!14944 = !DILocation(line: 380, column: 2, scope: !14927)
!14945 = !DILocation(line: 381, column: 1, scope: !14927)
!14946 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3211, file: !3211, line: 383, type: !14947, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14949)
!14947 = !DISubroutineType(types: !14948)
!14948 = !{!102, !14237}
!14949 = !{!14950, !14951}
!14950 = !DILocalVariable(name: "queue", arg: 1, scope: !14946, file: !3211, line: 383, type: !14237)
!14951 = !DILocalVariable(name: "ret", scope: !14946, file: !3211, line: 385, type: !102)
!14952 = !DILocation(line: 0, scope: !14946)
!14953 = !DILocation(line: 385, column: 61, scope: !14946)
!14954 = !DILocation(line: 385, column: 32, scope: !14946)
!14955 = !DILocation(line: 385, column: 14, scope: !14946)
!14956 = !DILocation(line: 389, column: 2, scope: !14946)
!14957 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3211, file: !3211, line: 392, type: !14947, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3195, retainedNodes: !14958)
!14958 = !{!14959, !14960}
!14959 = !DILocalVariable(name: "queue", arg: 1, scope: !14957, file: !3211, line: 392, type: !14237)
!14960 = !DILocalVariable(name: "ret", scope: !14957, file: !3211, line: 394, type: !102)
!14961 = !DILocation(line: 0, scope: !14957)
!14962 = !DILocation(line: 394, column: 61, scope: !14957)
!14963 = !DILocation(line: 394, column: 32, scope: !14957)
!14964 = !DILocation(line: 394, column: 14, scope: !14957)
!14965 = !DILocation(line: 398, column: 2, scope: !14957)
!14966 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2537, file: !2537, line: 93, type: !14967, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !14969)
!14967 = !DISubroutineType(types: !14968)
!14968 = !{!754, !2432, !2432}
!14969 = !{!14970, !14971, !14972, !14973}
!14970 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14966, file: !2537, line: 93, type: !2432)
!14971 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14966, file: !2537, line: 94, type: !2432)
!14972 = !DILocalVariable(name: "b1", scope: !14966, file: !2537, line: 97, type: !754)
!14973 = !DILocalVariable(name: "b2", scope: !14966, file: !2537, line: 98, type: !754)
!14974 = !DILocation(line: 0, scope: !14966)
!14975 = !DILocation(line: 97, column: 30, scope: !14966)
!14976 = !DILocation(line: 98, column: 30, scope: !14966)
!14977 = !DILocation(line: 100, column: 9, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14966, file: !2537, line: 100, column: 6)
!14979 = !DILocation(line: 100, column: 6, scope: !14966)
!14980 = !DILocation(line: 125, column: 1, scope: !14966)
!14981 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2537, file: !2537, line: 428, type: !14982, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !14984)
!14982 = !DISubroutineType(types: !14983)
!14983 = !{null, !2432}
!14984 = !{!14985}
!14985 = !DILocalVariable(name: "curr", arg: 1, scope: !14981, file: !2537, line: 428, type: !2432)
!14986 = !DILocation(line: 0, scope: !14981)
!14987 = !DILocation(line: 434, column: 6, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14981, file: !2537, line: 434, column: 6)
!14989 = !DILocation(line: 434, column: 23, scope: !14988)
!14990 = !DILocation(line: 434, column: 6, scope: !14981)
!14991 = !DILocation(line: 435, column: 50, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14988, file: !2537, line: 434, column: 29)
!14993 = !DILocation(line: 435, column: 48, scope: !14992)
!14994 = !DILocation(line: 435, column: 29, scope: !14992)
!14995 = !DILocation(line: 436, column: 24, scope: !14992)
!14996 = !DILocation(line: 436, column: 3, scope: !14992)
!14997 = !DILocation(line: 437, column: 2, scope: !14992)
!14998 = !DILocation(line: 438, column: 1, scope: !14981)
!14999 = distinct !DISubprogram(name: "slice_time", scope: !2537, file: !2537, line: 407, type: !15000, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15002)
!15000 = !DISubroutineType(types: !15001)
!15001 = !{!103, !2432}
!15002 = !{!15003, !15004}
!15003 = !DILocalVariable(name: "curr", arg: 1, scope: !14999, file: !2537, line: 407, type: !2432)
!15004 = !DILocalVariable(name: "ret", scope: !14999, file: !2537, line: 409, type: !103)
!15005 = !DILocation(line: 0, scope: !14999)
!15006 = !DILocation(line: 409, column: 12, scope: !14999)
!15007 = !DILocation(line: 416, column: 2, scope: !14999)
!15008 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2537, file: !2537, line: 440, type: !15009, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15011)
!15009 = !DISubroutineType(types: !15010)
!15010 = !{null, !754, !103}
!15011 = !{!15012, !15013, !15014, !15020}
!15012 = !DILocalVariable(name: "slice", arg: 1, scope: !15008, file: !2537, line: 440, type: !754)
!15013 = !DILocalVariable(name: "prio", arg: 2, scope: !15008, file: !2537, line: 440, type: !103)
!15014 = !DILocalVariable(name: "__i", scope: !15015, file: !2537, line: 442, type: !15016)
!15015 = distinct !DILexicalBlock(scope: !15008, file: !2537, line: 442, column: 2)
!15016 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !15017)
!15017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !15018)
!15018 = !{!15019}
!15019 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15017, file: !316, line: 33, baseType: !103, size: 32)
!15020 = !DILocalVariable(name: "__key", scope: !15015, file: !2537, line: 442, type: !15016)
!15021 = !DILocation(line: 0, scope: !15008)
!15022 = !DILocation(line: 0, scope: !15015)
!15023 = !DILocalVariable(name: "l", arg: 1, scope: !15024, file: !316, line: 136, type: !15027)
!15024 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !15025, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15028)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{!15016, !15027}
!15027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!15028 = !{!15023, !15029}
!15029 = !DILocalVariable(name: "k", scope: !15024, file: !316, line: 139, type: !15016)
!15030 = !DILocation(line: 0, scope: !15024, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 442, column: 2, scope: !15015)
!15032 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15037)
!15033 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15034)
!15034 = !{!15035, !15036}
!15035 = !DILocalVariable(name: "key", scope: !15033, file: !5818, line: 44, type: !32)
!15036 = !DILocalVariable(name: "tmp", scope: !15033, file: !5818, line: 53, type: !32)
!15037 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15031)
!15038 = !{i64 2322278}
!15039 = !DILocation(line: 0, scope: !15033, inlinedAt: !15037)
!15040 = !DILocation(line: 443, column: 29, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !2537, line: 442, column: 26)
!15042 = distinct !DILexicalBlock(scope: !15015, file: !2537, line: 442, column: 2)
!15043 = !DILocation(line: 444, column: 17, scope: !15041)
!15044 = !DILocation(line: 445, column: 51, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15041, file: !2537, line: 445, column: 7)
!15046 = !DILocation(line: 445, column: 7, scope: !15041)
!15047 = !DILocation(line: 0, scope: !15041)
!15048 = !DILocation(line: 451, column: 18, scope: !15041)
!15049 = !DILocation(line: 452, column: 3, scope: !15041)
!15050 = !DILocalVariable(name: "key", arg: 2, scope: !15051, file: !316, line: 190, type: !15016)
!15051 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !15052, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15054)
!15052 = !DISubroutineType(types: !15053)
!15053 = !{null, !15027, !15016}
!15054 = !{!15055, !15050}
!15055 = !DILocalVariable(name: "l", arg: 1, scope: !15051, file: !316, line: 189, type: !15027)
!15056 = !DILocation(line: 0, scope: !15051, inlinedAt: !15057)
!15057 = distinct !DILocation(line: 442, column: 2, scope: !15042)
!15058 = !DILocalVariable(name: "key", arg: 1, scope: !15059, file: !5818, line: 84, type: !32)
!15059 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15060)
!15060 = !{!15058}
!15061 = !DILocation(line: 0, scope: !15059, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15057)
!15063 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15062)
!15064 = !{i64 2323095}
!15065 = !DILocation(line: 454, column: 1, scope: !15008)
!15066 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14088, file: !14088, line: 389, type: !7040, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15067)
!15067 = !{!15068}
!15068 = !DILocalVariable(name: "t", arg: 1, scope: !15066, file: !14088, line: 389, type: !121)
!15069 = !DILocation(line: 0, scope: !15066)
!15070 = !DILocalVariable(name: "t", arg: 1, scope: !15071, file: !14088, line: 102, type: !1610)
!15071 = distinct !DISubprogram(name: "z_tmcvt", scope: !14088, file: !14088, line: 102, type: !14096, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15072)
!15072 = !{!15070, !15073, !15074, !15075, !15076, !15077, !15078, !15079, !15080, !15081, !15082}
!15073 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15071, file: !14088, line: 102, type: !121)
!15074 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15071, file: !14088, line: 103, type: !121)
!15075 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15071, file: !14088, line: 103, type: !157)
!15076 = !DILocalVariable(name: "result32", arg: 5, scope: !15071, file: !14088, line: 104, type: !157)
!15077 = !DILocalVariable(name: "round_up", arg: 6, scope: !15071, file: !14088, line: 104, type: !157)
!15078 = !DILocalVariable(name: "round_off", arg: 7, scope: !15071, file: !14088, line: 105, type: !157)
!15079 = !DILocalVariable(name: "mul_ratio", scope: !15071, file: !14088, line: 107, type: !157)
!15080 = !DILocalVariable(name: "div_ratio", scope: !15071, file: !14088, line: 109, type: !157)
!15081 = !DILocalVariable(name: "off", scope: !15071, file: !14088, line: 116, type: !1610)
!15082 = !DILocalVariable(name: "rdivisor", scope: !15083, file: !14088, line: 119, type: !121)
!15083 = distinct !DILexicalBlock(scope: !15084, file: !14088, line: 118, column: 18)
!15084 = distinct !DILexicalBlock(scope: !15071, file: !14088, line: 118, column: 6)
!15085 = !DILocation(line: 0, scope: !15071, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 392, column: 9, scope: !15066)
!15087 = !DILocation(line: 143, column: 25, scope: !15088, inlinedAt: !15086)
!15088 = distinct !DILexicalBlock(scope: !15089, file: !14088, line: 142, column: 17)
!15089 = distinct !DILexicalBlock(scope: !15090, file: !14088, line: 142, column: 7)
!15090 = distinct !DILexicalBlock(scope: !15091, file: !14088, line: 141, column: 24)
!15091 = distinct !DILexicalBlock(scope: !15092, file: !14088, line: 141, column: 13)
!15092 = distinct !DILexicalBlock(scope: !15071, file: !14088, line: 134, column: 6)
!15093 = !DILocation(line: 392, column: 2, scope: !15066)
!15094 = distinct !DISubprogram(name: "z_time_slice", scope: !2537, file: !2537, line: 502, type: !7677, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15095)
!15095 = !{!15096, !15097}
!15096 = !DILocalVariable(name: "ticks", arg: 1, scope: !15094, file: !2537, line: 502, type: !103)
!15097 = !DILocalVariable(name: "key", scope: !15094, file: !2537, line: 511, type: !15016)
!15098 = !DILocation(line: 0, scope: !15094)
!15099 = !DILocation(line: 0, scope: !15024, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 511, column: 25, scope: !15094)
!15101 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15100)
!15103 = !DILocation(line: 0, scope: !15033, inlinedAt: !15102)
!15104 = !DILocation(line: 514, column: 6, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15094, file: !2537, line: 514, column: 6)
!15106 = !DILocation(line: 514, column: 25, scope: !15105)
!15107 = !DILocation(line: 514, column: 22, scope: !15105)
!15108 = !DILocation(line: 514, column: 6, scope: !15094)
!15109 = !DILocation(line: 515, column: 3, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15105, file: !2537, line: 514, column: 35)
!15111 = !DILocation(line: 0, scope: !15051, inlinedAt: !15112)
!15112 = distinct !DILocation(line: 516, column: 3, scope: !15110)
!15113 = !DILocation(line: 0, scope: !15059, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15112)
!15115 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15114)
!15116 = !DILocation(line: 517, column: 3, scope: !15110)
!15117 = !DILocation(line: 519, column: 18, scope: !15094)
!15118 = !DILocation(line: 522, column: 6, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15094, file: !2537, line: 522, column: 6)
!15120 = !DILocation(line: 522, column: 27, scope: !15119)
!15121 = !DILocation(line: 522, column: 30, scope: !15119)
!15122 = !DILocation(line: 522, column: 6, scope: !15094)
!15123 = !DILocation(line: 523, column: 30, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !2537, line: 523, column: 7)
!15125 = distinct !DILexicalBlock(scope: !15119, file: !2537, line: 522, column: 51)
!15126 = !DILocation(line: 523, column: 13, scope: !15124)
!15127 = !DILocation(line: 523, column: 7, scope: !15125)
!15128 = !DILocation(line: 530, column: 10, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15124, file: !2537, line: 523, column: 43)
!15130 = !DILocation(line: 531, column: 3, scope: !15129)
!15131 = !DILocation(line: 532, column: 30, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15124, file: !2537, line: 531, column: 10)
!15133 = !DILocation(line: 535, column: 29, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15119, file: !2537, line: 534, column: 9)
!15135 = !DILocation(line: 0, scope: !15051, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 537, column: 2, scope: !15094)
!15137 = !DILocation(line: 0, scope: !15059, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15136)
!15139 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15138)
!15140 = !DILocation(line: 538, column: 1, scope: !15094)
!15141 = distinct !DISubprogram(name: "sliceable", scope: !2537, file: !2537, line: 468, type: !15142, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15144)
!15142 = !DISubroutineType(types: !15143)
!15143 = !{!157, !2432}
!15144 = !{!15145, !15146}
!15145 = !DILocalVariable(name: "thread", arg: 1, scope: !15141, file: !2537, line: 468, type: !2432)
!15146 = !DILocalVariable(name: "ret", scope: !15141, file: !2537, line: 470, type: !157)
!15147 = !DILocation(line: 0, scope: !15141)
!15148 = !DILocation(line: 470, column: 13, scope: !15141)
!15149 = !DILocation(line: 471, column: 3, scope: !15141)
!15150 = !DILocation(line: 471, column: 7, scope: !15141)
!15151 = !DILocation(line: 472, column: 3, scope: !15141)
!15152 = !DILocation(line: 472, column: 37, scope: !15141)
!15153 = !DILocation(line: 472, column: 24, scope: !15141)
!15154 = !DILocation(line: 472, column: 43, scope: !15141)
!15155 = !DILocation(line: 472, column: 7, scope: !15141)
!15156 = !DILocation(line: 473, column: 3, scope: !15141)
!15157 = !DILocation(line: 473, column: 7, scope: !15141)
!15158 = !DILocation(line: 473, column: 6, scope: !15141)
!15159 = !DILocation(line: 479, column: 2, scope: !15141)
!15160 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2537, file: !2537, line: 482, type: !15161, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15163)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{!15016, !15016}
!15163 = !{!15164, !15165}
!15164 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15160, file: !2537, line: 482, type: !15016)
!15165 = !DILocalVariable(name: "curr", scope: !15160, file: !2537, line: 484, type: !2432)
!15166 = !DILocation(line: 0, scope: !15160)
!15167 = !DILocation(line: 484, column: 26, scope: !15160)
!15168 = !DILocation(line: 493, column: 7, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15160, file: !2537, line: 493, column: 6)
!15170 = !DILocation(line: 493, column: 6, scope: !15160)
!15171 = !DILocation(line: 494, column: 3, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15169, file: !2537, line: 493, column: 49)
!15173 = !DILocation(line: 495, column: 2, scope: !15172)
!15174 = !DILocation(line: 496, column: 2, scope: !15160)
!15175 = !DILocation(line: 499, column: 1, scope: !15160)
!15176 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13529, file: !13529, line: 106, type: !15142, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15177)
!15177 = !{!15178, !15179}
!15178 = !DILocalVariable(name: "thread", arg: 1, scope: !15176, file: !13529, line: 106, type: !2432)
!15179 = !DILocalVariable(name: "state", scope: !15176, file: !13529, line: 108, type: !154)
!15180 = !DILocation(line: 0, scope: !15176)
!15181 = !DILocation(line: 108, column: 31, scope: !15176)
!15182 = !DILocation(line: 110, column: 16, scope: !15176)
!15183 = !DILocation(line: 111, column: 41, scope: !15176)
!15184 = !DILocation(line: 110, column: 2, scope: !15176)
!15185 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2537, file: !2537, line: 393, type: !14982, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15186)
!15186 = !{!15187}
!15187 = !DILocalVariable(name: "thread", arg: 1, scope: !15185, file: !2537, line: 393, type: !2432)
!15188 = !DILocation(line: 0, scope: !15185)
!15189 = !DILocation(line: 395, column: 6, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15185, file: !2537, line: 395, column: 6)
!15191 = !DILocation(line: 395, column: 6, scope: !15185)
!15192 = !DILocalVariable(name: "thread", arg: 1, scope: !15193, file: !2537, line: 264, type: !2432)
!15193 = distinct !DISubprogram(name: "dequeue_thread", scope: !2537, file: !2537, line: 264, type: !14982, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15194)
!15194 = !{!15192}
!15195 = !DILocation(line: 0, scope: !15193, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 396, column: 3, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15190, file: !2537, line: 395, column: 34)
!15198 = !DILocation(line: 266, column: 15, scope: !15193, inlinedAt: !15196)
!15199 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !15196)
!15200 = !DILocalVariable(name: "thread", arg: 1, scope: !15201, file: !2537, line: 232, type: !2432)
!15201 = distinct !DISubprogram(name: "runq_remove", scope: !2537, file: !2537, line: 232, type: !14982, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15202)
!15202 = !{!15200}
!15203 = !DILocation(line: 0, scope: !15201, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !15196)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2537, line: 267, column: 35)
!15206 = distinct !DILexicalBlock(scope: !15193, file: !2537, line: 267, column: 6)
!15207 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !15204)
!15208 = !DILocation(line: 397, column: 2, scope: !15197)
!15209 = !DILocalVariable(name: "thread", arg: 1, scope: !15210, file: !2537, line: 250, type: !2432)
!15210 = distinct !DISubprogram(name: "queue_thread", scope: !2537, file: !2537, line: 250, type: !14982, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15211)
!15211 = !{!15209}
!15212 = !DILocation(line: 0, scope: !15210, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 398, column: 2, scope: !15185)
!15214 = !DILocation(line: 252, column: 15, scope: !15210, inlinedAt: !15213)
!15215 = !DILocation(line: 252, column: 28, scope: !15210, inlinedAt: !15213)
!15216 = !DILocalVariable(name: "thread", arg: 1, scope: !15217, file: !2537, line: 227, type: !2432)
!15217 = distinct !DISubprogram(name: "runq_add", scope: !2537, file: !2537, line: 227, type: !14982, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15218)
!15218 = !{!15216}
!15219 = !DILocation(line: 0, scope: !15217, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 254, column: 3, scope: !15221, inlinedAt: !15213)
!15221 = distinct !DILexicalBlock(scope: !15222, file: !2537, line: 253, column: 35)
!15222 = distinct !DILexicalBlock(scope: !15210, file: !2537, line: 253, column: 6)
!15223 = !DILocalVariable(name: "pq", arg: 1, scope: !15224, file: !2537, line: 181, type: !15227)
!15224 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2537, file: !2537, line: 181, type: !15225, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15228)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{null, !15227, !2432}
!15227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!15228 = !{!15223, !15229, !15230}
!15229 = !DILocalVariable(name: "thread", arg: 2, scope: !15224, file: !2537, line: 182, type: !2432)
!15230 = !DILocalVariable(name: "t", scope: !15224, file: !2537, line: 184, type: !2432)
!15231 = !DILocation(line: 0, scope: !15224, inlinedAt: !15232)
!15232 = distinct !DILocation(line: 229, column: 2, scope: !15217, inlinedAt: !15220)
!15233 = !DILocation(line: 188, column: 2, scope: !15234, inlinedAt: !15232)
!15234 = distinct !DILexicalBlock(scope: !15224, file: !2537, line: 188, column: 2)
!15235 = !DILocation(line: 188, column: 2, scope: !15236, inlinedAt: !15232)
!15236 = distinct !DILexicalBlock(scope: !15234, file: !2537, line: 188, column: 2)
!15237 = !DILocation(line: 0, scope: !15234, inlinedAt: !15232)
!15238 = !DILocation(line: 189, column: 7, scope: !15239, inlinedAt: !15232)
!15239 = distinct !DILexicalBlock(scope: !15240, file: !2537, line: 189, column: 7)
!15240 = distinct !DILexicalBlock(scope: !15236, file: !2537, line: 188, column: 56)
!15241 = !DILocation(line: 189, column: 35, scope: !15239, inlinedAt: !15232)
!15242 = !DILocation(line: 189, column: 7, scope: !15240, inlinedAt: !15232)
!15243 = !DILocation(line: 191, column: 21, scope: !15244, inlinedAt: !15232)
!15244 = distinct !DILexicalBlock(scope: !15239, file: !2537, line: 189, column: 40)
!15245 = !DILocation(line: 190, column: 4, scope: !15244, inlinedAt: !15232)
!15246 = !DILocation(line: 192, column: 4, scope: !15244, inlinedAt: !15232)
!15247 = distinct !{!15247, !15233, !15248}
!15248 = !DILocation(line: 194, column: 2, scope: !15234, inlinedAt: !15232)
!15249 = !DILocation(line: 196, column: 37, scope: !15224, inlinedAt: !15232)
!15250 = !DILocation(line: 196, column: 2, scope: !15224, inlinedAt: !15232)
!15251 = !DILocation(line: 197, column: 1, scope: !15224, inlinedAt: !15232)
!15252 = !DILocation(line: 399, column: 25, scope: !15185)
!15253 = !DILocation(line: 399, column: 22, scope: !15185)
!15254 = !DILocation(line: 399, column: 2, scope: !15185)
!15255 = !DILocation(line: 400, column: 1, scope: !15185)
!15256 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13529, file: !13529, line: 136, type: !15142, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15257)
!15257 = !{!15258}
!15258 = !DILocalVariable(name: "thread", arg: 1, scope: !15256, file: !13529, line: 136, type: !2432)
!15259 = !DILocation(line: 0, scope: !15256)
!15260 = !DILocation(line: 138, column: 9, scope: !15256)
!15261 = !DILocation(line: 138, column: 2, scope: !15256)
!15262 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2537, file: !2537, line: 1137, type: !15225, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15263)
!15263 = !{!15264, !15265}
!15264 = !DILocalVariable(name: "pq", arg: 1, scope: !15262, file: !2537, line: 1137, type: !15227)
!15265 = !DILocalVariable(name: "thread", arg: 2, scope: !15262, file: !2537, line: 1137, type: !2432)
!15266 = !DILocation(line: 0, scope: !15262)
!15267 = !DILocation(line: 1141, column: 33, scope: !15262)
!15268 = !DILocation(line: 1141, column: 2, scope: !15262)
!15269 = !DILocation(line: 1142, column: 1, scope: !15262)
!15270 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !15271, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15273)
!15271 = !DISubroutineType(types: !15272)
!15272 = !{!2533, !15227}
!15273 = !{!15274}
!15274 = !DILocalVariable(name: "list", arg: 1, scope: !15270, file: !325, line: 294, type: !15227)
!15275 = !DILocation(line: 0, scope: !15270)
!15276 = !DILocation(line: 296, column: 9, scope: !15270)
!15277 = !DILocation(line: 296, column: 49, scope: !15270)
!15278 = !DILocation(line: 296, column: 2, scope: !15270)
!15279 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !15280, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15282)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{null, !2533, !2533}
!15282 = !{!15283, !15284, !15285}
!15283 = !DILocalVariable(name: "successor", arg: 1, scope: !15279, file: !325, line: 443, type: !2533)
!15284 = !DILocalVariable(name: "node", arg: 2, scope: !15279, file: !325, line: 443, type: !2533)
!15285 = !DILocalVariable(name: "prev", scope: !15279, file: !325, line: 445, type: !15286)
!15286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2533)
!15287 = !DILocation(line: 0, scope: !15279)
!15288 = !DILocation(line: 445, column: 39, scope: !15279)
!15289 = !DILocation(line: 447, column: 8, scope: !15279)
!15290 = !DILocation(line: 447, column: 13, scope: !15279)
!15291 = !DILocation(line: 448, column: 8, scope: !15279)
!15292 = !DILocation(line: 448, column: 13, scope: !15279)
!15293 = !DILocation(line: 449, column: 8, scope: !15279)
!15294 = !DILocation(line: 449, column: 13, scope: !15279)
!15295 = !DILocation(line: 450, column: 18, scope: !15279)
!15296 = !DILocation(line: 451, column: 1, scope: !15279)
!15297 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !15298, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15300)
!15298 = !DISubroutineType(types: !15299)
!15299 = !{!2533, !15227, !2533}
!15300 = !{!15301, !15302}
!15301 = !DILocalVariable(name: "list", arg: 1, scope: !15297, file: !325, line: 341, type: !15227)
!15302 = !DILocalVariable(name: "node", arg: 2, scope: !15297, file: !325, line: 342, type: !2533)
!15303 = !DILocation(line: 0, scope: !15297)
!15304 = !DILocation(line: 344, column: 15, scope: !15297)
!15305 = !DILocation(line: 344, column: 9, scope: !15297)
!15306 = !DILocation(line: 344, column: 26, scope: !15297)
!15307 = !DILocation(line: 344, column: 2, scope: !15297)
!15308 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !15309, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15311)
!15309 = !DISubroutineType(types: !15310)
!15310 = !{null, !15227, !2533}
!15311 = !{!15312, !15313, !15314}
!15312 = !DILocalVariable(name: "list", arg: 1, scope: !15308, file: !325, line: 404, type: !15227)
!15313 = !DILocalVariable(name: "node", arg: 2, scope: !15308, file: !325, line: 404, type: !2533)
!15314 = !DILocalVariable(name: "tail", scope: !15308, file: !325, line: 406, type: !15286)
!15315 = !DILocation(line: 0, scope: !15308)
!15316 = !DILocation(line: 406, column: 34, scope: !15308)
!15317 = !DILocation(line: 408, column: 8, scope: !15308)
!15318 = !DILocation(line: 408, column: 13, scope: !15308)
!15319 = !DILocation(line: 409, column: 8, scope: !15308)
!15320 = !DILocation(line: 409, column: 13, scope: !15308)
!15321 = !DILocation(line: 411, column: 8, scope: !15308)
!15322 = !DILocation(line: 411, column: 13, scope: !15308)
!15323 = !DILocation(line: 412, column: 13, scope: !15308)
!15324 = !DILocation(line: 413, column: 1, scope: !15308)
!15325 = distinct !DISubprogram(name: "update_cache", scope: !2537, file: !2537, line: 559, type: !7677, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15326)
!15326 = !{!15327, !15328}
!15327 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15325, file: !2537, line: 559, type: !103)
!15328 = !DILocalVariable(name: "thread", scope: !15325, file: !2537, line: 562, type: !2432)
!15329 = !DILocation(line: 0, scope: !15325)
!15330 = !DILocation(line: 239, column: 9, scope: !15331, inlinedAt: !15334)
!15331 = distinct !DISubprogram(name: "runq_best", scope: !2537, file: !2537, line: 237, type: !15332, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{!2432}
!15334 = distinct !DILocation(line: 314, column: 28, scope: !15335, inlinedAt: !15338)
!15335 = distinct !DISubprogram(name: "next_up", scope: !2537, file: !2537, line: 312, type: !15332, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15336)
!15336 = !{!15337}
!15337 = !DILocalVariable(name: "thread", scope: !15335, file: !2537, line: 314, type: !2432)
!15338 = distinct !DILocation(line: 562, column: 28, scope: !15325)
!15339 = !DILocation(line: 0, scope: !15335, inlinedAt: !15338)
!15340 = !DILocation(line: 340, column: 17, scope: !15335, inlinedAt: !15338)
!15341 = !DILocation(line: 340, column: 9, scope: !15335, inlinedAt: !15338)
!15342 = !DILocalVariable(name: "thread", arg: 1, scope: !15343, file: !2537, line: 127, type: !2432)
!15343 = distinct !DISubprogram(name: "should_preempt", scope: !2537, file: !2537, line: 127, type: !15344, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15346)
!15344 = !DISubroutineType(types: !15345)
!15345 = !{!157, !2432, !103}
!15346 = !{!15342, !15347}
!15347 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15343, file: !2537, line: 128, type: !103)
!15348 = !DILocation(line: 0, scope: !15343, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 564, column: 6, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15325, file: !2537, line: 564, column: 6)
!15351 = !DILocation(line: 133, column: 17, scope: !15352, inlinedAt: !15349)
!15352 = distinct !DILexicalBlock(scope: !15343, file: !2537, line: 133, column: 6)
!15353 = !DILocation(line: 0, scope: !15350)
!15354 = !DILocation(line: 133, column: 6, scope: !15343, inlinedAt: !15349)
!15355 = !DILocation(line: 140, column: 6, scope: !15356, inlinedAt: !15349)
!15356 = distinct !DILexicalBlock(scope: !15343, file: !2537, line: 140, column: 6)
!15357 = !DILocation(line: 140, column: 6, scope: !15343, inlinedAt: !15349)
!15358 = !DILocation(line: 150, column: 9, scope: !15359, inlinedAt: !15349)
!15359 = distinct !DILexicalBlock(scope: !15343, file: !2537, line: 149, column: 6)
!15360 = !DILocation(line: 149, column: 6, scope: !15343, inlinedAt: !15349)
!15361 = !DILocation(line: 157, column: 6, scope: !15362, inlinedAt: !15349)
!15362 = distinct !DILexicalBlock(scope: !15343, file: !2537, line: 157, column: 6)
!15363 = !DILocation(line: 564, column: 6, scope: !15325)
!15364 = !DILocation(line: 566, column: 14, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !2537, line: 566, column: 7)
!15366 = distinct !DILexicalBlock(scope: !15350, file: !2537, line: 564, column: 42)
!15367 = !DILocation(line: 566, column: 7, scope: !15366)
!15368 = !DILocation(line: 567, column: 4, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15365, file: !2537, line: 566, column: 27)
!15370 = !DILocation(line: 568, column: 3, scope: !15369)
!15371 = !DILocation(line: 585, column: 1, scope: !15325)
!15372 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2537, file: !2537, line: 1144, type: !15373, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15375)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{!2432, !15227}
!15375 = !{!15376, !15377, !15378}
!15376 = !DILocalVariable(name: "pq", arg: 1, scope: !15372, file: !2537, line: 1144, type: !15227)
!15377 = !DILocalVariable(name: "thread", scope: !15372, file: !2537, line: 1146, type: !2432)
!15378 = !DILocalVariable(name: "n", scope: !15372, file: !2537, line: 1147, type: !2533)
!15379 = !DILocation(line: 0, scope: !15372)
!15380 = !DILocation(line: 1147, column: 19, scope: !15372)
!15381 = !DILocation(line: 1152, column: 2, scope: !15372)
!15382 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13529, file: !13529, line: 115, type: !15142, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15383)
!15383 = !{!15384}
!15384 = !DILocalVariable(name: "thread", arg: 1, scope: !15382, file: !13529, line: 115, type: !2432)
!15385 = !DILocation(line: 0, scope: !15382)
!15386 = !DILocation(line: 117, column: 46, scope: !15382)
!15387 = !DILocation(line: 117, column: 10, scope: !15382)
!15388 = !DILocation(line: 117, column: 9, scope: !15382)
!15389 = !DILocation(line: 117, column: 2, scope: !15382)
!15390 = distinct !DISubprogram(name: "is_preempt", scope: !2537, file: !2537, line: 62, type: !15000, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15391)
!15391 = !{!15392}
!15392 = !DILocalVariable(name: "thread", arg: 1, scope: !15390, file: !2537, line: 62, type: !2432)
!15393 = !DILocation(line: 0, scope: !15390)
!15394 = !DILocation(line: 65, column: 22, scope: !15390)
!15395 = !DILocation(line: 65, column: 30, scope: !15390)
!15396 = !DILocation(line: 65, column: 2, scope: !15390)
!15397 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13921, file: !13921, line: 35, type: !15398, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15402)
!15398 = !DISubroutineType(types: !15399)
!15399 = !{!157, !15400}
!15400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15401, size: 32)
!15401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2483)
!15402 = !{!15403}
!15403 = !DILocalVariable(name: "to", arg: 1, scope: !15397, file: !13921, line: 35, type: !15400)
!15404 = !DILocation(line: 0, scope: !15397)
!15405 = !DILocation(line: 37, column: 35, scope: !15397)
!15406 = !DILocation(line: 37, column: 10, scope: !15397)
!15407 = !DILocation(line: 37, column: 9, scope: !15397)
!15408 = !DILocation(line: 37, column: 2, scope: !15397)
!15409 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !15410, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15414)
!15410 = !DISubroutineType(types: !15411)
!15411 = !{!157, !15412}
!15412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15413, size: 32)
!15413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2442)
!15414 = !{!15415}
!15415 = !DILocalVariable(name: "node", arg: 1, scope: !15409, file: !325, line: 225, type: !15412)
!15416 = !DILocation(line: 0, scope: !15409)
!15417 = !DILocation(line: 227, column: 15, scope: !15409)
!15418 = !DILocation(line: 227, column: 20, scope: !15409)
!15419 = !DILocation(line: 227, column: 2, scope: !15409)
!15420 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !15298, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15421)
!15421 = !{!15422, !15423}
!15422 = !DILocalVariable(name: "list", arg: 1, scope: !15420, file: !325, line: 325, type: !15227)
!15423 = !DILocalVariable(name: "node", arg: 2, scope: !15420, file: !325, line: 326, type: !2533)
!15424 = !DILocation(line: 0, scope: !15420)
!15425 = !DILocation(line: 328, column: 24, scope: !15420)
!15426 = !DILocation(line: 328, column: 15, scope: !15420)
!15427 = !DILocation(line: 328, column: 9, scope: !15420)
!15428 = !DILocation(line: 328, column: 45, scope: !15420)
!15429 = !DILocation(line: 328, column: 2, scope: !15420)
!15430 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !15431, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15433)
!15431 = !DISubroutineType(types: !15432)
!15432 = !{!157, !15227}
!15433 = !{!15434}
!15434 = !DILocalVariable(name: "list", arg: 1, scope: !15430, file: !325, line: 266, type: !15227)
!15435 = !DILocation(line: 0, scope: !15430)
!15436 = !DILocation(line: 268, column: 15, scope: !15430)
!15437 = !DILocation(line: 268, column: 20, scope: !15430)
!15438 = !DILocation(line: 268, column: 2, scope: !15430)
!15439 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !15440, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15442)
!15440 = !DISubroutineType(types: !15441)
!15441 = !{null, !2533}
!15442 = !{!15443, !15444, !15445}
!15443 = !DILocalVariable(name: "node", arg: 1, scope: !15439, file: !325, line: 496, type: !2533)
!15444 = !DILocalVariable(name: "prev", scope: !15439, file: !325, line: 498, type: !15286)
!15445 = !DILocalVariable(name: "next", scope: !15439, file: !325, line: 499, type: !15286)
!15446 = !DILocation(line: 0, scope: !15439)
!15447 = !DILocation(line: 498, column: 34, scope: !15439)
!15448 = !DILocation(line: 499, column: 34, scope: !15439)
!15449 = !DILocation(line: 501, column: 8, scope: !15439)
!15450 = !DILocation(line: 501, column: 13, scope: !15439)
!15451 = !DILocation(line: 502, column: 8, scope: !15439)
!15452 = !DILocation(line: 502, column: 13, scope: !15439)
!15453 = !DILocation(line: 503, column: 2, scope: !15439)
!15454 = !DILocation(line: 504, column: 1, scope: !15439)
!15455 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !15440, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15456)
!15456 = !{!15457}
!15457 = !DILocalVariable(name: "node", arg: 1, scope: !15455, file: !325, line: 211, type: !2533)
!15458 = !DILocation(line: 0, scope: !15455)
!15459 = !DILocation(line: 213, column: 8, scope: !15455)
!15460 = !DILocation(line: 213, column: 13, scope: !15455)
!15461 = !DILocation(line: 214, column: 8, scope: !15455)
!15462 = !DILocation(line: 214, column: 13, scope: !15455)
!15463 = !DILocation(line: 215, column: 1, scope: !15455)
!15464 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13529, file: !13529, line: 131, type: !15465, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15467)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{!157, !2432, !121}
!15467 = !{!15468, !15469}
!15468 = !DILocalVariable(name: "thread", arg: 1, scope: !15464, file: !13529, line: 131, type: !2432)
!15469 = !DILocalVariable(name: "state", arg: 2, scope: !15464, file: !13529, line: 131, type: !121)
!15470 = !DILocation(line: 0, scope: !15464)
!15471 = !DILocation(line: 133, column: 23, scope: !15464)
!15472 = !DILocation(line: 133, column: 45, scope: !15464)
!15473 = !DILocation(line: 133, column: 2, scope: !15464)
!15474 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13529, file: !13529, line: 211, type: !15475, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15477)
!15475 = !DISubroutineType(types: !15476)
!15476 = !{!157, !103, !103}
!15477 = !{!15478, !15479}
!15478 = !DILocalVariable(name: "prio", arg: 1, scope: !15474, file: !13529, line: 211, type: !103)
!15479 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15474, file: !13529, line: 211, type: !103)
!15480 = !DILocation(line: 0, scope: !15474)
!15481 = !DILocation(line: 213, column: 9, scope: !15474)
!15482 = !DILocation(line: 213, column: 2, scope: !15474)
!15483 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13529, file: !13529, line: 83, type: !15142, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15484)
!15484 = !{!15485}
!15485 = !DILocalVariable(name: "thread", arg: 1, scope: !15483, file: !13529, line: 83, type: !2432)
!15486 = !DILocation(line: 0, scope: !15483)
!15487 = !DILocation(line: 89, column: 16, scope: !15483)
!15488 = !DILocation(line: 89, column: 2, scope: !15483)
!15489 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13529, file: !13529, line: 206, type: !15475, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15490)
!15490 = !{!15491, !15492}
!15491 = !DILocalVariable(name: "prio1", arg: 1, scope: !15489, file: !13529, line: 206, type: !103)
!15492 = !DILocalVariable(name: "prio2", arg: 2, scope: !15489, file: !13529, line: 206, type: !103)
!15493 = !DILocation(line: 0, scope: !15489)
!15494 = !DILocation(line: 208, column: 15, scope: !15489)
!15495 = !DILocation(line: 208, column: 2, scope: !15489)
!15496 = distinct !DISubprogram(name: "z_ready_thread", scope: !2537, file: !2537, line: 635, type: !14982, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15497)
!15497 = !{!15498, !15499, !15501}
!15498 = !DILocalVariable(name: "thread", arg: 1, scope: !15496, file: !2537, line: 635, type: !2432)
!15499 = !DILocalVariable(name: "__i", scope: !15500, file: !2537, line: 637, type: !15016)
!15500 = distinct !DILexicalBlock(scope: !15496, file: !2537, line: 637, column: 2)
!15501 = !DILocalVariable(name: "__key", scope: !15500, file: !2537, line: 637, type: !15016)
!15502 = !DILocation(line: 0, scope: !15496)
!15503 = !DILocation(line: 0, scope: !15500)
!15504 = !DILocation(line: 0, scope: !15024, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 637, column: 2, scope: !15500)
!15506 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15505)
!15508 = !DILocation(line: 0, scope: !15033, inlinedAt: !15507)
!15509 = !DILocation(line: 639, column: 4, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !2537, line: 638, column: 41)
!15511 = distinct !DILexicalBlock(scope: !15512, file: !2537, line: 638, column: 7)
!15512 = distinct !DILexicalBlock(scope: !15513, file: !2537, line: 637, column: 26)
!15513 = distinct !DILexicalBlock(scope: !15500, file: !2537, line: 637, column: 2)
!15514 = !DILocation(line: 0, scope: !15051, inlinedAt: !15515)
!15515 = distinct !DILocation(line: 637, column: 2, scope: !15513)
!15516 = !DILocation(line: 0, scope: !15059, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15515)
!15518 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15517)
!15519 = !DILocation(line: 642, column: 1, scope: !15496)
!15520 = distinct !DISubprogram(name: "ready_thread", scope: !2537, file: !2537, line: 617, type: !14982, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15521)
!15521 = !{!15522}
!15522 = !DILocalVariable(name: "thread", arg: 1, scope: !15520, file: !2537, line: 617, type: !2432)
!15523 = !DILocation(line: 0, scope: !15520)
!15524 = !DILocation(line: 626, column: 7, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15520, file: !2537, line: 626, column: 6)
!15526 = !DILocation(line: 626, column: 34, scope: !15525)
!15527 = !DILocation(line: 626, column: 37, scope: !15525)
!15528 = !DILocation(line: 626, column: 6, scope: !15520)
!15529 = !DILocation(line: 0, scope: !15210, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 629, column: 3, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15525, file: !2537, line: 626, column: 64)
!15532 = !DILocation(line: 252, column: 15, scope: !15210, inlinedAt: !15530)
!15533 = !DILocation(line: 252, column: 28, scope: !15210, inlinedAt: !15530)
!15534 = !DILocation(line: 0, scope: !15217, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 254, column: 3, scope: !15221, inlinedAt: !15530)
!15536 = !DILocation(line: 0, scope: !15224, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 229, column: 2, scope: !15217, inlinedAt: !15535)
!15538 = !DILocation(line: 188, column: 2, scope: !15234, inlinedAt: !15537)
!15539 = !DILocation(line: 188, column: 2, scope: !15236, inlinedAt: !15537)
!15540 = !DILocation(line: 0, scope: !15234, inlinedAt: !15537)
!15541 = !DILocation(line: 189, column: 7, scope: !15239, inlinedAt: !15537)
!15542 = !DILocation(line: 189, column: 35, scope: !15239, inlinedAt: !15537)
!15543 = !DILocation(line: 189, column: 7, scope: !15240, inlinedAt: !15537)
!15544 = !DILocation(line: 191, column: 21, scope: !15244, inlinedAt: !15537)
!15545 = !DILocation(line: 190, column: 4, scope: !15244, inlinedAt: !15537)
!15546 = !DILocation(line: 192, column: 4, scope: !15244, inlinedAt: !15537)
!15547 = distinct !{!15547, !15538, !15548}
!15548 = !DILocation(line: 194, column: 2, scope: !15234, inlinedAt: !15537)
!15549 = !DILocation(line: 196, column: 37, scope: !15224, inlinedAt: !15537)
!15550 = !DILocation(line: 196, column: 2, scope: !15224, inlinedAt: !15537)
!15551 = !DILocation(line: 197, column: 1, scope: !15224, inlinedAt: !15537)
!15552 = !DILocation(line: 630, column: 3, scope: !15531)
!15553 = !DILocation(line: 632, column: 2, scope: !15531)
!15554 = !DILocation(line: 633, column: 1, scope: !15520)
!15555 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13529, file: !13529, line: 120, type: !15142, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15556)
!15556 = !{!15557}
!15557 = !DILocalVariable(name: "thread", arg: 1, scope: !15555, file: !13529, line: 120, type: !2432)
!15558 = !DILocation(line: 0, scope: !15555)
!15559 = !DILocation(line: 122, column: 12, scope: !15555)
!15560 = !DILocation(line: 122, column: 62, scope: !15555)
!15561 = !DILocation(line: 123, column: 4, scope: !15555)
!15562 = !DILocation(line: 122, column: 2, scope: !15555)
!15563 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2537, file: !2537, line: 644, type: !14982, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15564)
!15564 = !{!15565, !15566, !15568}
!15565 = !DILocalVariable(name: "thread", arg: 1, scope: !15563, file: !2537, line: 644, type: !2432)
!15566 = !DILocalVariable(name: "__i", scope: !15567, file: !2537, line: 646, type: !15016)
!15567 = distinct !DILexicalBlock(scope: !15563, file: !2537, line: 646, column: 2)
!15568 = !DILocalVariable(name: "__key", scope: !15567, file: !2537, line: 646, type: !15016)
!15569 = !DILocation(line: 0, scope: !15563)
!15570 = !DILocation(line: 0, scope: !15567)
!15571 = !DILocation(line: 0, scope: !15024, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 646, column: 2, scope: !15567)
!15573 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15574)
!15574 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15572)
!15575 = !DILocation(line: 0, scope: !15033, inlinedAt: !15574)
!15576 = !DILocation(line: 647, column: 3, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15578, file: !2537, line: 646, column: 26)
!15578 = distinct !DILexicalBlock(scope: !15567, file: !2537, line: 646, column: 2)
!15579 = !DILocation(line: 0, scope: !15051, inlinedAt: !15580)
!15580 = distinct !DILocation(line: 646, column: 2, scope: !15578)
!15581 = !DILocation(line: 0, scope: !15059, inlinedAt: !15582)
!15582 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15580)
!15583 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15582)
!15584 = !DILocation(line: 649, column: 1, scope: !15563)
!15585 = distinct !DISubprogram(name: "z_sched_start", scope: !2537, file: !2537, line: 651, type: !14982, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15586)
!15586 = !{!15587, !15588}
!15587 = !DILocalVariable(name: "thread", arg: 1, scope: !15585, file: !2537, line: 651, type: !2432)
!15588 = !DILocalVariable(name: "key", scope: !15585, file: !2537, line: 653, type: !15016)
!15589 = !DILocation(line: 0, scope: !15585)
!15590 = !DILocation(line: 0, scope: !15024, inlinedAt: !15591)
!15591 = distinct !DILocation(line: 653, column: 25, scope: !15585)
!15592 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15593)
!15593 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15591)
!15594 = !DILocation(line: 0, scope: !15033, inlinedAt: !15593)
!15595 = !DILocation(line: 655, column: 6, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15585, file: !2537, line: 655, column: 6)
!15597 = !DILocation(line: 655, column: 6, scope: !15585)
!15598 = !DILocation(line: 0, scope: !15051, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 656, column: 3, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15596, file: !2537, line: 655, column: 36)
!15601 = !DILocation(line: 0, scope: !15059, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15599)
!15603 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15602)
!15604 = !DILocation(line: 657, column: 3, scope: !15600)
!15605 = !DILocation(line: 660, column: 2, scope: !15585)
!15606 = !DILocation(line: 661, column: 2, scope: !15585)
!15607 = !DILocation(line: 662, column: 2, scope: !15585)
!15608 = !DILocation(line: 663, column: 1, scope: !15585)
!15609 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13529, file: !13529, line: 126, type: !15142, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15610)
!15610 = !{!15611}
!15611 = !DILocalVariable(name: "thread", arg: 1, scope: !15609, file: !13529, line: 126, type: !2432)
!15612 = !DILocation(line: 0, scope: !15609)
!15613 = !DILocation(line: 128, column: 23, scope: !15609)
!15614 = !DILocation(line: 128, column: 36, scope: !15609)
!15615 = !DILocation(line: 128, column: 56, scope: !15609)
!15616 = !DILocation(line: 128, column: 2, scope: !15609)
!15617 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13529, file: !13529, line: 155, type: !14982, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15618)
!15618 = !{!15619}
!15619 = !DILocalVariable(name: "thread", arg: 1, scope: !15617, file: !13529, line: 155, type: !2432)
!15620 = !DILocation(line: 0, scope: !15617)
!15621 = !DILocation(line: 157, column: 15, scope: !15617)
!15622 = !DILocation(line: 157, column: 28, scope: !15617)
!15623 = !DILocation(line: 158, column: 1, scope: !15617)
!15624 = distinct !DISubprogram(name: "z_reschedule", scope: !2537, file: !2537, line: 967, type: !15052, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15625)
!15625 = !{!15626, !15627}
!15626 = !DILocalVariable(name: "lock", arg: 1, scope: !15624, file: !2537, line: 967, type: !15027)
!15627 = !DILocalVariable(name: "key", arg: 2, scope: !15624, file: !2537, line: 967, type: !15016)
!15628 = !DILocation(line: 0, scope: !15624)
!15629 = !DILocation(line: 969, column: 6, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15624, file: !2537, line: 969, column: 6)
!15631 = !DILocation(line: 969, column: 23, scope: !15630)
!15632 = !DILocation(line: 969, column: 26, scope: !15630)
!15633 = !DILocation(line: 969, column: 6, scope: !15624)
!15634 = !DILocalVariable(name: "key", arg: 2, scope: !15635, file: !13633, line: 193, type: !15016)
!15635 = distinct !DISubprogram(name: "z_swap", scope: !13633, file: !13633, line: 193, type: !15636, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15638)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{!103, !15027, !15016}
!15638 = !{!15639, !15634}
!15639 = !DILocalVariable(name: "lock", arg: 1, scope: !15635, file: !13633, line: 193, type: !15027)
!15640 = !DILocation(line: 0, scope: !15635, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 970, column: 3, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15630, file: !2537, line: 969, column: 39)
!15643 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !15641)
!15644 = !DILocation(line: 971, column: 2, scope: !15642)
!15645 = !DILocation(line: 0, scope: !15051, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 972, column: 3, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15630, file: !2537, line: 971, column: 9)
!15648 = !DILocation(line: 0, scope: !15059, inlinedAt: !15649)
!15649 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15646)
!15650 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15649)
!15651 = !DILocation(line: 975, column: 1, scope: !15624)
!15652 = distinct !DISubprogram(name: "resched", scope: !2537, file: !2537, line: 940, type: !15653, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15655)
!15653 = !DISubroutineType(types: !15654)
!15654 = !{!157, !121}
!15655 = !{!15656}
!15656 = !DILocalVariable(name: "key", arg: 1, scope: !15652, file: !2537, line: 940, type: !121)
!15657 = !DILocation(line: 0, scope: !15652)
!15658 = !DILocalVariable(name: "key", arg: 1, scope: !15659, file: !5818, line: 112, type: !32)
!15659 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5818, file: !5818, line: 112, type: !15660, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15662)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!157, !32}
!15662 = !{!15658}
!15663 = !DILocation(line: 0, scope: !15659, inlinedAt: !15664)
!15664 = distinct !DILocation(line: 946, column: 9, scope: !15652)
!15665 = !DILocation(line: 115, column: 13, scope: !15659, inlinedAt: !15664)
!15666 = !DILocation(line: 946, column: 32, scope: !15652)
!15667 = !DILocation(line: 1031, column: 3, scope: !15668, inlinedAt: !15671)
!15668 = distinct !DISubprogram(name: "__get_IPSR", scope: !6033, file: !6033, line: 1027, type: !6114, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15669)
!15669 = !{!15670}
!15670 = !DILocalVariable(name: "result", scope: !15668, file: !6033, line: 1029, type: !121)
!15671 = distinct !DILocation(line: 48, column: 10, scope: !15672, inlinedAt: !15673)
!15672 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6827, file: !6827, line: 46, type: !6828, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!15673 = distinct !DILocation(line: 946, column: 36, scope: !15652)
!15674 = !{i64 3768712}
!15675 = !DILocation(line: 0, scope: !15668, inlinedAt: !15671)
!15676 = !DILocation(line: 48, column: 9, scope: !15672, inlinedAt: !15673)
!15677 = !DILocation(line: 946, column: 2, scope: !15652)
!15678 = distinct !DISubprogram(name: "need_swap", scope: !2537, file: !2537, line: 953, type: !6828, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15679)
!15679 = !{!15680}
!15680 = !DILocalVariable(name: "new_thread", scope: !15678, file: !2537, line: 959, type: !2432)
!15681 = !DILocation(line: 962, column: 31, scope: !15678)
!15682 = !DILocation(line: 0, scope: !15678)
!15683 = !DILocation(line: 963, column: 23, scope: !15678)
!15684 = !DILocation(line: 963, column: 20, scope: !15678)
!15685 = !DILocation(line: 963, column: 2, scope: !15678)
!15686 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13633, file: !13633, line: 181, type: !6043, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15687)
!15687 = !{!15688, !15689}
!15688 = !DILocalVariable(name: "key", arg: 1, scope: !15686, file: !13633, line: 181, type: !32)
!15689 = !DILocalVariable(name: "ret", scope: !15686, file: !13633, line: 183, type: !103)
!15690 = !DILocation(line: 0, scope: !15686)
!15691 = !DILocation(line: 185, column: 8, scope: !15686)
!15692 = !DILocation(line: 186, column: 2, scope: !15686)
!15693 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2537, file: !2537, line: 665, type: !14982, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15694)
!15694 = !{!15695, !15696, !15698}
!15695 = !DILocalVariable(name: "thread", arg: 1, scope: !15693, file: !2537, line: 665, type: !2432)
!15696 = !DILocalVariable(name: "__i", scope: !15697, file: !2537, line: 671, type: !15016)
!15697 = distinct !DILexicalBlock(scope: !15693, file: !2537, line: 671, column: 2)
!15698 = !DILocalVariable(name: "__key", scope: !15697, file: !2537, line: 671, type: !15016)
!15699 = !DILocation(line: 0, scope: !15693)
!15700 = !DILocation(line: 669, column: 8, scope: !15693)
!15701 = !DILocation(line: 0, scope: !15697)
!15702 = !DILocation(line: 0, scope: !15024, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 671, column: 2, scope: !15697)
!15704 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15703)
!15706 = !DILocation(line: 0, scope: !15033, inlinedAt: !15705)
!15707 = !DILocation(line: 672, column: 7, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15709, file: !2537, line: 672, column: 7)
!15709 = distinct !DILexicalBlock(scope: !15710, file: !2537, line: 671, column: 26)
!15710 = distinct !DILexicalBlock(scope: !15697, file: !2537, line: 671, column: 2)
!15711 = !DILocation(line: 672, column: 7, scope: !15709)
!15712 = !DILocation(line: 0, scope: !15193, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 673, column: 4, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15708, file: !2537, line: 672, column: 35)
!15715 = !DILocation(line: 266, column: 15, scope: !15193, inlinedAt: !15713)
!15716 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !15713)
!15717 = !DILocation(line: 0, scope: !15201, inlinedAt: !15718)
!15718 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !15713)
!15719 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !15718)
!15720 = !DILocation(line: 674, column: 3, scope: !15714)
!15721 = !DILocation(line: 675, column: 3, scope: !15709)
!15722 = !DILocation(line: 676, column: 26, scope: !15709)
!15723 = !DILocation(line: 676, column: 23, scope: !15709)
!15724 = !DILocation(line: 676, column: 3, scope: !15709)
!15725 = !DILocation(line: 0, scope: !15051, inlinedAt: !15726)
!15726 = distinct !DILocation(line: 671, column: 2, scope: !15710)
!15727 = !DILocation(line: 0, scope: !15059, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15726)
!15729 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15728)
!15730 = !DILocation(line: 679, column: 16, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15693, file: !2537, line: 679, column: 6)
!15732 = !DILocation(line: 679, column: 13, scope: !15731)
!15733 = !DILocation(line: 679, column: 6, scope: !15693)
!15734 = !DILocation(line: 680, column: 3, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15731, file: !2537, line: 679, column: 26)
!15736 = !DILocation(line: 681, column: 2, scope: !15735)
!15737 = !DILocation(line: 684, column: 1, scope: !15693)
!15738 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13921, file: !13921, line: 52, type: !15000, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15739)
!15739 = !{!15740}
!15740 = !DILocalVariable(name: "thread", arg: 1, scope: !15738, file: !13921, line: 52, type: !2432)
!15741 = !DILocation(line: 0, scope: !15738)
!15742 = !DILocation(line: 54, column: 39, scope: !15738)
!15743 = !DILocation(line: 54, column: 9, scope: !15738)
!15744 = !DILocation(line: 54, column: 2, scope: !15738)
!15745 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13529, file: !13529, line: 141, type: !14982, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15746)
!15746 = !{!15747}
!15747 = !DILocalVariable(name: "thread", arg: 1, scope: !15745, file: !13529, line: 141, type: !2432)
!15748 = !DILocation(line: 0, scope: !15745)
!15749 = !DILocation(line: 143, column: 15, scope: !15745)
!15750 = !DILocation(line: 143, column: 28, scope: !15745)
!15751 = !DILocation(line: 146, column: 1, scope: !15745)
!15752 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13529, file: !13529, line: 73, type: !3255, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!15753 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 75, column: 30, scope: !15752)
!15755 = !DILocation(line: 0, scope: !15033, inlinedAt: !15754)
!15756 = !DILocation(line: 75, column: 9, scope: !15752)
!15757 = !DILocation(line: 76, column: 1, scope: !15752)
!15758 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2537, file: !2537, line: 977, type: !6124, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15759)
!15759 = !{!15760}
!15760 = !DILocalVariable(name: "key", arg: 1, scope: !15758, file: !2537, line: 977, type: !121)
!15761 = !DILocation(line: 0, scope: !15758)
!15762 = !DILocation(line: 979, column: 6, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15758, file: !2537, line: 979, column: 6)
!15764 = !DILocation(line: 979, column: 6, scope: !15758)
!15765 = !DILocation(line: 980, column: 3, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15763, file: !2537, line: 979, column: 20)
!15767 = !DILocation(line: 981, column: 2, scope: !15766)
!15768 = !DILocation(line: 0, scope: !15059, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 982, column: 3, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15763, file: !2537, line: 981, column: 9)
!15771 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15769)
!15772 = !DILocation(line: 985, column: 1, scope: !15758)
!15773 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2537, file: !2537, line: 695, type: !14982, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15774)
!15774 = !{!15775, !15776}
!15775 = !DILocalVariable(name: "thread", arg: 1, scope: !15773, file: !2537, line: 695, type: !2432)
!15776 = !DILocalVariable(name: "key", scope: !15773, file: !2537, line: 699, type: !15016)
!15777 = !DILocation(line: 0, scope: !15773)
!15778 = !DILocation(line: 0, scope: !15024, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 699, column: 25, scope: !15773)
!15780 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15779)
!15782 = !DILocation(line: 0, scope: !15033, inlinedAt: !15781)
!15783 = !DILocation(line: 702, column: 7, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15773, file: !2537, line: 702, column: 6)
!15785 = !DILocation(line: 702, column: 6, scope: !15773)
!15786 = !DILocation(line: 0, scope: !15051, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 703, column: 3, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15784, file: !2537, line: 702, column: 38)
!15789 = !DILocation(line: 0, scope: !15059, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15787)
!15791 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15790)
!15792 = !DILocation(line: 704, column: 3, scope: !15788)
!15793 = !DILocation(line: 707, column: 2, scope: !15773)
!15794 = !DILocation(line: 708, column: 2, scope: !15773)
!15795 = !DILocation(line: 710, column: 2, scope: !15773)
!15796 = !DILocation(line: 713, column: 1, scope: !15773)
!15797 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13529, file: !13529, line: 96, type: !15142, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15798)
!15798 = !{!15799}
!15799 = !DILocalVariable(name: "thread", arg: 1, scope: !15797, file: !13529, line: 96, type: !2432)
!15800 = !DILocation(line: 0, scope: !15797)
!15801 = !DILocation(line: 98, column: 23, scope: !15797)
!15802 = !DILocation(line: 98, column: 36, scope: !15797)
!15803 = !DILocation(line: 98, column: 57, scope: !15797)
!15804 = !DILocation(line: 98, column: 2, scope: !15797)
!15805 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13529, file: !13529, line: 148, type: !14982, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15806)
!15806 = !{!15807}
!15807 = !DILocalVariable(name: "thread", arg: 1, scope: !15805, file: !13529, line: 148, type: !2432)
!15808 = !DILocation(line: 0, scope: !15805)
!15809 = !DILocation(line: 150, column: 15, scope: !15805)
!15810 = !DILocation(line: 150, column: 28, scope: !15805)
!15811 = !DILocation(line: 153, column: 1, scope: !15805)
!15812 = distinct !DISubprogram(name: "z_pend_thread", scope: !2537, file: !2537, line: 770, type: !15813, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15819)
!15813 = !DISubroutineType(types: !15814)
!15814 = !{null, !2432, !2463, !15815}
!15815 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15816)
!15816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15817)
!15817 = !{!15818}
!15818 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15816, file: !201, line: 66, baseType: !200, size: 64)
!15819 = !{!15820, !15821, !15822, !15823, !15825}
!15820 = !DILocalVariable(name: "thread", arg: 1, scope: !15812, file: !2537, line: 770, type: !2432)
!15821 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15812, file: !2537, line: 770, type: !2463)
!15822 = !DILocalVariable(name: "timeout", arg: 3, scope: !15812, file: !2537, line: 771, type: !15815)
!15823 = !DILocalVariable(name: "__i", scope: !15824, file: !2537, line: 774, type: !15016)
!15824 = distinct !DILexicalBlock(scope: !15812, file: !2537, line: 774, column: 2)
!15825 = !DILocalVariable(name: "__key", scope: !15824, file: !2537, line: 774, type: !15016)
!15826 = !DILocation(line: 0, scope: !15812)
!15827 = !DILocation(line: 0, scope: !15824)
!15828 = !DILocation(line: 0, scope: !15024, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 774, column: 2, scope: !15824)
!15830 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15829)
!15832 = !DILocation(line: 0, scope: !15033, inlinedAt: !15831)
!15833 = !DILocation(line: 775, column: 3, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2537, line: 774, column: 26)
!15835 = distinct !DILexicalBlock(scope: !15824, file: !2537, line: 774, column: 2)
!15836 = !DILocation(line: 0, scope: !15051, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 774, column: 2, scope: !15835)
!15838 = !DILocation(line: 0, scope: !15059, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15837)
!15840 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15839)
!15841 = !DILocation(line: 777, column: 1, scope: !15812)
!15842 = distinct !DISubprogram(name: "pend_locked", scope: !2537, file: !2537, line: 760, type: !15813, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15843)
!15843 = !{!15844, !15845, !15846}
!15844 = !DILocalVariable(name: "thread", arg: 1, scope: !15842, file: !2537, line: 760, type: !2432)
!15845 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15842, file: !2537, line: 760, type: !2463)
!15846 = !DILocalVariable(name: "timeout", arg: 3, scope: !15842, file: !2537, line: 761, type: !15815)
!15847 = !DILocation(line: 0, scope: !15842)
!15848 = !DILocation(line: 766, column: 2, scope: !15842)
!15849 = !DILocation(line: 767, column: 2, scope: !15842)
!15850 = !DILocation(line: 768, column: 1, scope: !15842)
!15851 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2537, file: !2537, line: 740, type: !15852, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15854)
!15852 = !DISubroutineType(types: !15853)
!15853 = !{null, !2432, !2463}
!15854 = !{!15855, !15856}
!15855 = !DILocalVariable(name: "thread", arg: 1, scope: !15851, file: !2537, line: 740, type: !2432)
!15856 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15851, file: !2537, line: 740, type: !2463)
!15857 = !DILocation(line: 0, scope: !15851)
!15858 = !DILocation(line: 742, column: 2, scope: !15851)
!15859 = !DILocation(line: 743, column: 2, scope: !15851)
!15860 = !DILocation(line: 747, column: 13, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15851, file: !2537, line: 747, column: 6)
!15862 = !DILocation(line: 747, column: 6, scope: !15851)
!15863 = !DILocation(line: 748, column: 16, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15861, file: !2537, line: 747, column: 22)
!15865 = !DILocation(line: 748, column: 26, scope: !15864)
!15866 = !DILocation(line: 749, column: 28, scope: !15864)
!15867 = !DILocation(line: 0, scope: !15224, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 749, column: 3, scope: !15864)
!15869 = !DILocation(line: 188, column: 2, scope: !15234, inlinedAt: !15868)
!15870 = !DILocation(line: 188, column: 2, scope: !15236, inlinedAt: !15868)
!15871 = !DILocation(line: 0, scope: !15234, inlinedAt: !15868)
!15872 = !DILocation(line: 189, column: 7, scope: !15239, inlinedAt: !15868)
!15873 = !DILocation(line: 189, column: 35, scope: !15239, inlinedAt: !15868)
!15874 = !DILocation(line: 189, column: 7, scope: !15240, inlinedAt: !15868)
!15875 = !DILocation(line: 191, column: 21, scope: !15244, inlinedAt: !15868)
!15876 = !DILocation(line: 190, column: 4, scope: !15244, inlinedAt: !15868)
!15877 = !DILocation(line: 192, column: 4, scope: !15244, inlinedAt: !15868)
!15878 = distinct !{!15878, !15869, !15879}
!15879 = !DILocation(line: 194, column: 2, scope: !15234, inlinedAt: !15868)
!15880 = !DILocation(line: 196, column: 37, scope: !15224, inlinedAt: !15868)
!15881 = !DILocation(line: 196, column: 2, scope: !15224, inlinedAt: !15868)
!15882 = !DILocation(line: 197, column: 1, scope: !15224, inlinedAt: !15868)
!15883 = !DILocation(line: 751, column: 1, scope: !15851)
!15884 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2537, file: !2537, line: 753, type: !15885, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15887)
!15885 = !DISubroutineType(types: !15886)
!15886 = !{null, !2432, !15815}
!15887 = !{!15888, !15889}
!15888 = !DILocalVariable(name: "thread", arg: 1, scope: !15884, file: !2537, line: 753, type: !2432)
!15889 = !DILocalVariable(name: "timeout", arg: 2, scope: !15884, file: !2537, line: 753, type: !15815)
!15890 = !DILocation(line: 0, scope: !15884)
!15891 = !DILocation(line: 755, column: 7, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15884, file: !2537, line: 755, column: 6)
!15893 = !DILocation(line: 755, column: 6, scope: !15884)
!15894 = !DILocation(line: 756, column: 3, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15892, file: !2537, line: 755, column: 41)
!15896 = !DILocation(line: 757, column: 2, scope: !15895)
!15897 = !DILocation(line: 758, column: 1, scope: !15884)
!15898 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13921, file: !13921, line: 47, type: !15885, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15899)
!15899 = !{!15900, !15901}
!15900 = !DILocalVariable(name: "thread", arg: 1, scope: !15898, file: !13921, line: 47, type: !2432)
!15901 = !DILocalVariable(name: "ticks", arg: 2, scope: !15898, file: !13921, line: 47, type: !15815)
!15902 = !DILocation(line: 0, scope: !15898)
!15903 = !DILocation(line: 49, column: 30, scope: !15898)
!15904 = !DILocation(line: 49, column: 2, scope: !15898)
!15905 = !DILocation(line: 50, column: 1, scope: !15898)
!15906 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2537, file: !2537, line: 795, type: !2489, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15907)
!15907 = !{!15908, !15909, !15910, !15912, !15913}
!15908 = !DILocalVariable(name: "timeout", arg: 1, scope: !15906, file: !2537, line: 795, type: !2491)
!15909 = !DILocalVariable(name: "thread", scope: !15906, file: !2537, line: 797, type: !2432)
!15910 = !DILocalVariable(name: "__i", scope: !15911, file: !2537, line: 800, type: !15016)
!15911 = distinct !DILexicalBlock(scope: !15906, file: !2537, line: 800, column: 2)
!15912 = !DILocalVariable(name: "__key", scope: !15911, file: !2537, line: 800, type: !15016)
!15913 = !DILocalVariable(name: "killed", scope: !15914, file: !2537, line: 801, type: !157)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !2537, line: 800, column: 26)
!15915 = distinct !DILexicalBlock(scope: !15911, file: !2537, line: 800, column: 2)
!15916 = !DILocation(line: 0, scope: !15906)
!15917 = !DILocation(line: 797, column: 28, scope: !15906)
!15918 = !DILocation(line: 0, scope: !15911)
!15919 = !DILocation(line: 0, scope: !15024, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 800, column: 2, scope: !15911)
!15921 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !15920)
!15923 = !DILocation(line: 0, scope: !15033, inlinedAt: !15922)
!15924 = !DILocation(line: 801, column: 27, scope: !15914)
!15925 = !DILocation(line: 801, column: 32, scope: !15914)
!15926 = !DILocation(line: 801, column: 61, scope: !15914)
!15927 = !DILocation(line: 0, scope: !15914)
!15928 = !DILocation(line: 804, column: 7, scope: !15914)
!15929 = !DILocation(line: 805, column: 21, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15931, file: !2537, line: 805, column: 8)
!15931 = distinct !DILexicalBlock(scope: !15932, file: !2537, line: 804, column: 16)
!15932 = distinct !DILexicalBlock(scope: !15914, file: !2537, line: 804, column: 7)
!15933 = !DILocation(line: 805, column: 31, scope: !15930)
!15934 = !DILocation(line: 805, column: 8, scope: !15931)
!15935 = !DILocation(line: 806, column: 5, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15930, file: !2537, line: 805, column: 40)
!15937 = !DILocation(line: 807, column: 4, scope: !15936)
!15938 = !DILocation(line: 808, column: 4, scope: !15931)
!15939 = !DILocation(line: 809, column: 4, scope: !15931)
!15940 = !DILocation(line: 810, column: 4, scope: !15931)
!15941 = !DILocation(line: 811, column: 3, scope: !15931)
!15942 = !DILocation(line: 0, scope: !15051, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 800, column: 2, scope: !15915)
!15944 = !DILocation(line: 0, scope: !15059, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !15943)
!15946 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !15945)
!15947 = !DILocation(line: 813, column: 1, scope: !15906)
!15948 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2537, file: !2537, line: 779, type: !14982, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15949)
!15949 = !{!15950}
!15950 = !DILocalVariable(name: "thread", arg: 1, scope: !15948, file: !2537, line: 779, type: !2432)
!15951 = !DILocation(line: 0, scope: !15948)
!15952 = !DILocation(line: 781, column: 2, scope: !15948)
!15953 = !DILocation(line: 782, column: 2, scope: !15948)
!15954 = !DILocation(line: 783, column: 15, scope: !15948)
!15955 = !DILocation(line: 783, column: 25, scope: !15948)
!15956 = !DILocation(line: 784, column: 1, scope: !15948)
!15957 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13529, file: !13529, line: 165, type: !14982, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15958)
!15958 = !{!15959}
!15959 = !DILocalVariable(name: "thread", arg: 1, scope: !15957, file: !13529, line: 165, type: !2432)
!15960 = !DILocation(line: 0, scope: !15957)
!15961 = !DILocation(line: 167, column: 15, scope: !15957)
!15962 = !DILocation(line: 167, column: 28, scope: !15957)
!15963 = !DILocation(line: 168, column: 1, scope: !15957)
!15964 = distinct !DISubprogram(name: "unready_thread", scope: !2537, file: !2537, line: 731, type: !14982, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15965)
!15965 = !{!15966}
!15966 = !DILocalVariable(name: "thread", arg: 1, scope: !15964, file: !2537, line: 731, type: !2432)
!15967 = !DILocation(line: 0, scope: !15964)
!15968 = !DILocation(line: 733, column: 6, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !2537, line: 733, column: 6)
!15970 = !DILocation(line: 733, column: 6, scope: !15964)
!15971 = !DILocation(line: 0, scope: !15193, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 734, column: 3, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15969, file: !2537, line: 733, column: 34)
!15974 = !DILocation(line: 266, column: 15, scope: !15193, inlinedAt: !15972)
!15975 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !15972)
!15976 = !DILocation(line: 0, scope: !15201, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !15972)
!15978 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !15977)
!15979 = !DILocation(line: 735, column: 2, scope: !15973)
!15980 = !DILocation(line: 736, column: 25, scope: !15964)
!15981 = !DILocation(line: 736, column: 22, scope: !15964)
!15982 = !DILocation(line: 736, column: 2, scope: !15964)
!15983 = !DILocation(line: 737, column: 1, scope: !15964)
!15984 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13529, file: !13529, line: 160, type: !14982, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15985)
!15985 = !{!15986}
!15986 = !DILocalVariable(name: "thread", arg: 1, scope: !15984, file: !13529, line: 160, type: !2432)
!15987 = !DILocation(line: 0, scope: !15984)
!15988 = !DILocation(line: 162, column: 15, scope: !15984)
!15989 = !DILocation(line: 162, column: 28, scope: !15984)
!15990 = !DILocation(line: 163, column: 1, scope: !15984)
!15991 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2537, file: !2537, line: 786, type: !14982, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !15992)
!15992 = !{!15993, !15994, !15996}
!15993 = !DILocalVariable(name: "thread", arg: 1, scope: !15991, file: !2537, line: 786, type: !2432)
!15994 = !DILocalVariable(name: "__i", scope: !15995, file: !2537, line: 788, type: !15016)
!15995 = distinct !DILexicalBlock(scope: !15991, file: !2537, line: 788, column: 2)
!15996 = !DILocalVariable(name: "__key", scope: !15995, file: !2537, line: 788, type: !15016)
!15997 = !DILocation(line: 0, scope: !15991)
!15998 = !DILocation(line: 0, scope: !15995)
!15999 = !DILocation(line: 0, scope: !15024, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 788, column: 2, scope: !15995)
!16001 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16000)
!16003 = !DILocation(line: 0, scope: !15033, inlinedAt: !16002)
!16004 = !DILocation(line: 789, column: 3, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !2537, line: 788, column: 26)
!16006 = distinct !DILexicalBlock(scope: !15995, file: !2537, line: 788, column: 2)
!16007 = !DILocation(line: 0, scope: !15051, inlinedAt: !16008)
!16008 = distinct !DILocation(line: 788, column: 2, scope: !16006)
!16009 = !DILocation(line: 0, scope: !15059, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16008)
!16011 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16010)
!16012 = !DILocation(line: 791, column: 1, scope: !15991)
!16013 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2537, file: !2537, line: 816, type: !16014, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16016)
!16014 = !DISubroutineType(types: !16015)
!16015 = !{!103, !121, !2463, !15815}
!16016 = !{!16017, !16018, !16019, !16020, !16021, !16023}
!16017 = !DILocalVariable(name: "key", arg: 1, scope: !16013, file: !2537, line: 816, type: !121)
!16018 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16013, file: !2537, line: 816, type: !2463)
!16019 = !DILocalVariable(name: "timeout", arg: 3, scope: !16013, file: !2537, line: 816, type: !15815)
!16020 = !DILocalVariable(name: "ret", scope: !16013, file: !2537, line: 828, type: !103)
!16021 = !DILocalVariable(name: "__i", scope: !16022, file: !2537, line: 829, type: !15016)
!16022 = distinct !DILexicalBlock(scope: !16013, file: !2537, line: 829, column: 2)
!16023 = !DILocalVariable(name: "__key", scope: !16022, file: !2537, line: 829, type: !15016)
!16024 = !DILocation(line: 0, scope: !16013)
!16025 = !DILocation(line: 823, column: 14, scope: !16013)
!16026 = !DILocation(line: 823, column: 2, scope: !16013)
!16027 = !DILocation(line: 826, column: 20, scope: !16013)
!16028 = !DILocation(line: 826, column: 18, scope: !16013)
!16029 = !DILocation(line: 828, column: 12, scope: !16013)
!16030 = !DILocation(line: 0, scope: !16022)
!16031 = !DILocation(line: 0, scope: !15024, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 829, column: 2, scope: !16022)
!16033 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16032)
!16035 = !DILocation(line: 0, scope: !15033, inlinedAt: !16034)
!16036 = !DILocation(line: 830, column: 7, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !2537, line: 830, column: 7)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2537, line: 829, column: 26)
!16039 = distinct !DILexicalBlock(scope: !16022, file: !2537, line: 829, column: 2)
!16040 = !DILocation(line: 830, column: 26, scope: !16037)
!16041 = !DILocation(line: 830, column: 23, scope: !16037)
!16042 = !DILocation(line: 830, column: 7, scope: !16038)
!16043 = !DILocation(line: 831, column: 20, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16037, file: !2537, line: 830, column: 36)
!16045 = !DILocation(line: 832, column: 3, scope: !16044)
!16046 = !DILocation(line: 0, scope: !15051, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 829, column: 2, scope: !16039)
!16048 = !DILocation(line: 0, scope: !15059, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16047)
!16050 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16049)
!16051 = !DILocation(line: 834, column: 2, scope: !16013)
!16052 = distinct !DISubprogram(name: "z_pend_curr", scope: !2537, file: !2537, line: 840, type: !16053, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16055)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!103, !15027, !15016, !2463, !15815}
!16055 = !{!16056, !16057, !16058, !16059}
!16056 = !DILocalVariable(name: "lock", arg: 1, scope: !16052, file: !2537, line: 840, type: !15027)
!16057 = !DILocalVariable(name: "key", arg: 2, scope: !16052, file: !2537, line: 840, type: !15016)
!16058 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16052, file: !2537, line: 841, type: !2463)
!16059 = !DILocalVariable(name: "timeout", arg: 4, scope: !16052, file: !2537, line: 841, type: !15815)
!16060 = !DILocation(line: 0, scope: !16052)
!16061 = !DILocation(line: 844, column: 20, scope: !16052)
!16062 = !DILocation(line: 844, column: 18, scope: !16052)
!16063 = !DILocation(line: 0, scope: !15024, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 856, column: 9, scope: !16052)
!16065 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16064)
!16067 = !DILocation(line: 0, scope: !15033, inlinedAt: !16066)
!16068 = !DILocation(line: 857, column: 14, scope: !16052)
!16069 = !DILocation(line: 857, column: 2, scope: !16052)
!16070 = !DILocation(line: 0, scope: !15635, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 859, column: 9, scope: !16052)
!16072 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !16071)
!16073 = !DILocation(line: 859, column: 2, scope: !16052)
!16074 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2537, file: !2537, line: 862, type: !16075, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16077)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{!2432, !2463}
!16077 = !{!16078, !16079, !16080, !16082}
!16078 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16074, file: !2537, line: 862, type: !2463)
!16079 = !DILocalVariable(name: "thread", scope: !16074, file: !2537, line: 864, type: !2432)
!16080 = !DILocalVariable(name: "__i", scope: !16081, file: !2537, line: 866, type: !15016)
!16081 = distinct !DILexicalBlock(scope: !16074, file: !2537, line: 866, column: 2)
!16082 = !DILocalVariable(name: "__key", scope: !16081, file: !2537, line: 866, type: !15016)
!16083 = !DILocation(line: 0, scope: !16074)
!16084 = !DILocation(line: 0, scope: !16081)
!16085 = !DILocation(line: 0, scope: !15024, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 866, column: 2, scope: !16081)
!16087 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16086)
!16089 = !DILocation(line: 0, scope: !15033, inlinedAt: !16088)
!16090 = !DILocation(line: 867, column: 12, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2537, line: 866, column: 26)
!16092 = distinct !DILexicalBlock(scope: !16081, file: !2537, line: 866, column: 2)
!16093 = !DILocation(line: 869, column: 14, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16091, file: !2537, line: 869, column: 7)
!16095 = !DILocation(line: 869, column: 7, scope: !16091)
!16096 = !DILocation(line: 870, column: 4, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16094, file: !2537, line: 869, column: 23)
!16098 = !DILocation(line: 871, column: 3, scope: !16097)
!16099 = !DILocation(line: 0, scope: !15051, inlinedAt: !16100)
!16100 = distinct !DILocation(line: 866, column: 2, scope: !16092)
!16101 = !DILocation(line: 0, scope: !15059, inlinedAt: !16102)
!16102 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16100)
!16103 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16102)
!16104 = !DILocation(line: 874, column: 2, scope: !16074)
!16105 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2537, file: !2537, line: 877, type: !16075, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16106)
!16106 = !{!16107, !16108, !16109, !16111}
!16107 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16105, file: !2537, line: 877, type: !2463)
!16108 = !DILocalVariable(name: "thread", scope: !16105, file: !2537, line: 879, type: !2432)
!16109 = !DILocalVariable(name: "__i", scope: !16110, file: !2537, line: 881, type: !15016)
!16110 = distinct !DILexicalBlock(scope: !16105, file: !2537, line: 881, column: 2)
!16111 = !DILocalVariable(name: "__key", scope: !16110, file: !2537, line: 881, type: !15016)
!16112 = !DILocation(line: 0, scope: !16105)
!16113 = !DILocation(line: 0, scope: !16110)
!16114 = !DILocation(line: 0, scope: !15024, inlinedAt: !16115)
!16115 = distinct !DILocation(line: 881, column: 2, scope: !16110)
!16116 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16117)
!16117 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16115)
!16118 = !DILocation(line: 0, scope: !15033, inlinedAt: !16117)
!16119 = !DILocation(line: 882, column: 12, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16121, file: !2537, line: 881, column: 26)
!16121 = distinct !DILexicalBlock(scope: !16110, file: !2537, line: 881, column: 2)
!16122 = !DILocation(line: 884, column: 14, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16120, file: !2537, line: 884, column: 7)
!16124 = !DILocation(line: 884, column: 7, scope: !16120)
!16125 = !DILocation(line: 885, column: 4, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16123, file: !2537, line: 884, column: 23)
!16127 = !DILocation(line: 886, column: 10, scope: !16126)
!16128 = !DILocation(line: 887, column: 3, scope: !16126)
!16129 = !DILocation(line: 0, scope: !15051, inlinedAt: !16130)
!16130 = distinct !DILocation(line: 881, column: 2, scope: !16121)
!16131 = !DILocation(line: 0, scope: !15059, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16130)
!16133 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16132)
!16134 = !DILocation(line: 890, column: 2, scope: !16105)
!16135 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2537, file: !2537, line: 893, type: !14982, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16136)
!16136 = !{!16137}
!16137 = !DILocalVariable(name: "thread", arg: 1, scope: !16135, file: !2537, line: 893, type: !2432)
!16138 = !DILocation(line: 0, scope: !16135)
!16139 = !DILocation(line: 0, scope: !15991, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 895, column: 2, scope: !16135)
!16141 = !DILocation(line: 0, scope: !15995, inlinedAt: !16140)
!16142 = !DILocation(line: 0, scope: !15024, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 788, column: 2, scope: !15995, inlinedAt: !16140)
!16144 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16143)
!16146 = !DILocation(line: 0, scope: !15033, inlinedAt: !16145)
!16147 = !DILocation(line: 789, column: 3, scope: !16005, inlinedAt: !16140)
!16148 = !DILocation(line: 0, scope: !15051, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 788, column: 2, scope: !16006, inlinedAt: !16140)
!16150 = !DILocation(line: 0, scope: !15059, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16149)
!16152 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16151)
!16153 = !DILocation(line: 896, column: 8, scope: !16135)
!16154 = !DILocation(line: 897, column: 1, scope: !16135)
!16155 = distinct !DISubprogram(name: "z_set_prio", scope: !2537, file: !2537, line: 902, type: !15344, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16156)
!16156 = !{!16157, !16158, !16159, !16160, !16162}
!16157 = !DILocalVariable(name: "thread", arg: 1, scope: !16155, file: !2537, line: 902, type: !2432)
!16158 = !DILocalVariable(name: "prio", arg: 2, scope: !16155, file: !2537, line: 902, type: !103)
!16159 = !DILocalVariable(name: "need_sched", scope: !16155, file: !2537, line: 904, type: !157)
!16160 = !DILocalVariable(name: "__i", scope: !16161, file: !2537, line: 906, type: !15016)
!16161 = distinct !DILexicalBlock(scope: !16155, file: !2537, line: 906, column: 2)
!16162 = !DILocalVariable(name: "__key", scope: !16161, file: !2537, line: 906, type: !15016)
!16163 = !DILocation(line: 0, scope: !16155)
!16164 = !DILocation(line: 0, scope: !16161)
!16165 = !DILocation(line: 0, scope: !15024, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 906, column: 2, scope: !16161)
!16167 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16166)
!16169 = !DILocation(line: 0, scope: !15033, inlinedAt: !16168)
!16170 = !DILocation(line: 907, column: 16, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16172, file: !2537, line: 906, column: 26)
!16172 = distinct !DILexicalBlock(scope: !16161, file: !2537, line: 906, column: 2)
!16173 = !DILocation(line: 909, column: 7, scope: !16171)
!16174 = !DILocation(line: 0, scope: !15193, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 912, column: 5, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16177, file: !2537, line: 911, column: 63)
!16177 = distinct !DILexicalBlock(scope: !16178, file: !2537, line: 911, column: 8)
!16178 = distinct !DILexicalBlock(scope: !16179, file: !2537, line: 909, column: 19)
!16179 = distinct !DILexicalBlock(scope: !16171, file: !2537, line: 909, column: 7)
!16180 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !16175)
!16181 = !DILocation(line: 0, scope: !15201, inlinedAt: !16182)
!16182 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !16175)
!16183 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !16182)
!16184 = !DILocation(line: 913, column: 23, scope: !16176)
!16185 = !DILocation(line: 0, scope: !15210, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 914, column: 5, scope: !16176)
!16187 = !DILocation(line: 252, column: 28, scope: !15210, inlinedAt: !16186)
!16188 = !DILocation(line: 0, scope: !15217, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 254, column: 3, scope: !15221, inlinedAt: !16186)
!16190 = !DILocation(line: 0, scope: !15224, inlinedAt: !16191)
!16191 = distinct !DILocation(line: 229, column: 2, scope: !15217, inlinedAt: !16189)
!16192 = !DILocation(line: 188, column: 2, scope: !15234, inlinedAt: !16191)
!16193 = !DILocation(line: 188, column: 2, scope: !15236, inlinedAt: !16191)
!16194 = !DILocation(line: 0, scope: !15234, inlinedAt: !16191)
!16195 = !DILocation(line: 189, column: 7, scope: !15239, inlinedAt: !16191)
!16196 = !DILocation(line: 189, column: 35, scope: !15239, inlinedAt: !16191)
!16197 = !DILocation(line: 189, column: 7, scope: !15240, inlinedAt: !16191)
!16198 = !DILocation(line: 190, column: 4, scope: !15244, inlinedAt: !16191)
!16199 = !DILocation(line: 192, column: 4, scope: !15244, inlinedAt: !16191)
!16200 = distinct !{!16200, !16192, !16201}
!16201 = !DILocation(line: 194, column: 2, scope: !15234, inlinedAt: !16191)
!16202 = !DILocation(line: 196, column: 2, scope: !15224, inlinedAt: !16191)
!16203 = !DILocation(line: 197, column: 1, scope: !15224, inlinedAt: !16191)
!16204 = !DILocation(line: 918, column: 4, scope: !16178)
!16205 = !DILocation(line: 919, column: 3, scope: !16178)
!16206 = !DILocation(line: 920, column: 22, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16179, file: !2537, line: 919, column: 10)
!16208 = !DILocation(line: 0, scope: !15051, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 906, column: 2, scope: !16172)
!16210 = !DILocation(line: 0, scope: !15059, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16209)
!16212 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16211)
!16213 = !DILocation(line: 926, column: 2, scope: !16155)
!16214 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2537, file: !2537, line: 929, type: !16215, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16217)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{null, !2432, !103}
!16217 = !{!16218, !16219, !16220}
!16218 = !DILocalVariable(name: "thread", arg: 1, scope: !16214, file: !2537, line: 929, type: !2432)
!16219 = !DILocalVariable(name: "prio", arg: 2, scope: !16214, file: !2537, line: 929, type: !103)
!16220 = !DILocalVariable(name: "need_sched", scope: !16214, file: !2537, line: 931, type: !157)
!16221 = !DILocation(line: 0, scope: !16214)
!16222 = !DILocation(line: 931, column: 20, scope: !16214)
!16223 = !DILocation(line: 935, column: 17, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16214, file: !2537, line: 935, column: 6)
!16225 = !DILocation(line: 935, column: 20, scope: !16224)
!16226 = !DILocation(line: 935, column: 35, scope: !16224)
!16227 = !DILocation(line: 935, column: 48, scope: !16224)
!16228 = !DILocation(line: 935, column: 6, scope: !16214)
!16229 = !DILocation(line: 936, column: 3, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16224, file: !2537, line: 935, column: 55)
!16231 = !DILocation(line: 937, column: 2, scope: !16230)
!16232 = !DILocation(line: 938, column: 1, scope: !16214)
!16233 = distinct !DISubprogram(name: "k_sched_lock", scope: !2537, file: !2537, line: 987, type: !3255, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16234)
!16234 = !{!16235, !16237}
!16235 = !DILocalVariable(name: "__i", scope: !16236, file: !2537, line: 989, type: !15016)
!16236 = distinct !DILexicalBlock(scope: !16233, file: !2537, line: 989, column: 2)
!16237 = !DILocalVariable(name: "__key", scope: !16236, file: !2537, line: 989, type: !15016)
!16238 = !DILocation(line: 0, scope: !16236)
!16239 = !DILocation(line: 0, scope: !15024, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 989, column: 2, scope: !16236)
!16241 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16240)
!16243 = !DILocation(line: 0, scope: !15033, inlinedAt: !16242)
!16244 = !DILocation(line: 992, column: 3, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16246, file: !2537, line: 989, column: 26)
!16246 = distinct !DILexicalBlock(scope: !16236, file: !2537, line: 989, column: 2)
!16247 = !DILocation(line: 0, scope: !15051, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 989, column: 2, scope: !16246)
!16249 = !DILocation(line: 0, scope: !15059, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16248)
!16251 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16250)
!16252 = !DILocation(line: 994, column: 1, scope: !16233)
!16253 = distinct !DISubprogram(name: "z_sched_lock", scope: !13529, file: !13529, line: 251, type: !3255, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16254 = !DILocation(line: 256, column: 4, scope: !16253)
!16255 = !DILocation(line: 256, column: 19, scope: !16253)
!16256 = !DILocation(line: 256, column: 2, scope: !16253)
!16257 = !DILocation(line: 258, column: 2, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16253, file: !13529, line: 258, column: 2)
!16259 = !{i64 2155185936}
!16260 = !DILocation(line: 259, column: 1, scope: !16253)
!16261 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2537, file: !2537, line: 996, type: !3255, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16262)
!16262 = !{!16263, !16265}
!16263 = !DILocalVariable(name: "__i", scope: !16264, file: !2537, line: 998, type: !15016)
!16264 = distinct !DILexicalBlock(scope: !16261, file: !2537, line: 998, column: 2)
!16265 = !DILocalVariable(name: "__key", scope: !16264, file: !2537, line: 998, type: !15016)
!16266 = !DILocation(line: 0, scope: !16264)
!16267 = !DILocation(line: 0, scope: !15024, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 998, column: 2, scope: !16264)
!16269 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16270)
!16270 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16268)
!16271 = !DILocation(line: 0, scope: !15033, inlinedAt: !16270)
!16272 = !DILocation(line: 1002, column: 5, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16274, file: !2537, line: 998, column: 26)
!16274 = distinct !DILexicalBlock(scope: !16264, file: !2537, line: 998, column: 2)
!16275 = !DILocation(line: 1002, column: 20, scope: !16273)
!16276 = !DILocation(line: 1002, column: 3, scope: !16273)
!16277 = !DILocation(line: 1003, column: 3, scope: !16273)
!16278 = !DILocation(line: 0, scope: !15051, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 998, column: 2, scope: !16274)
!16280 = !DILocation(line: 0, scope: !15059, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16279)
!16282 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16281)
!16283 = !DILocation(line: 1011, column: 2, scope: !16261)
!16284 = !DILocation(line: 1012, column: 1, scope: !16261)
!16285 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2537, file: !2537, line: 1014, type: !15332, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16286 = !DILocation(line: 1028, column: 25, scope: !16285)
!16287 = !DILocation(line: 1028, column: 2, scope: !16285)
!16288 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2537, file: !2537, line: 1155, type: !16289, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16291)
!16289 = !DISubroutineType(types: !16290)
!16290 = !{!157, !2461, !2461}
!16291 = !{!16292, !16293, !16294, !16295, !16296}
!16292 = !DILocalVariable(name: "a", arg: 1, scope: !16288, file: !2537, line: 1155, type: !2461)
!16293 = !DILocalVariable(name: "b", arg: 2, scope: !16288, file: !2537, line: 1155, type: !2461)
!16294 = !DILocalVariable(name: "thread_a", scope: !16288, file: !2537, line: 1157, type: !2432)
!16295 = !DILocalVariable(name: "thread_b", scope: !16288, file: !2537, line: 1157, type: !2432)
!16296 = !DILocalVariable(name: "cmp", scope: !16288, file: !2537, line: 1158, type: !754)
!16297 = !DILocation(line: 0, scope: !16288)
!16298 = !DILocation(line: 1160, column: 13, scope: !16288)
!16299 = !DILocation(line: 1161, column: 13, scope: !16288)
!16300 = !DILocation(line: 1163, column: 8, scope: !16288)
!16301 = !DILocation(line: 1165, column: 10, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16288, file: !2537, line: 1165, column: 6)
!16303 = !DILocation(line: 1165, column: 6, scope: !16288)
!16304 = !DILocation(line: 1167, column: 17, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16302, file: !2537, line: 1167, column: 13)
!16306 = !DILocation(line: 1167, column: 13, scope: !16302)
!16307 = !DILocation(line: 1170, column: 25, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16305, file: !2537, line: 1169, column: 9)
!16309 = !DILocation(line: 1170, column: 52, scope: !16308)
!16310 = !DILocation(line: 1170, column: 35, scope: !16308)
!16311 = !DILocation(line: 1170, column: 3, scope: !16308)
!16312 = !DILocation(line: 0, scope: !16302)
!16313 = !DILocation(line: 1173, column: 1, scope: !16288)
!16314 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2537, file: !2537, line: 1175, type: !16315, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16330)
!16315 = !DISubroutineType(types: !16316)
!16316 = !{null, !16317, !2432}
!16317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16318, size: 32)
!16318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16319, line: 37, size: 128, elements: !16320)
!16319 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16320 = !{!16321, !16329}
!16321 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16318, file: !16319, line: 38, baseType: !16322, size: 96)
!16322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !16323)
!16323 = !{!16324, !16325, !16328}
!16324 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16322, file: !404, line: 84, baseType: !2461, size: 32)
!16325 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16322, file: !404, line: 85, baseType: !16326, size: 32, offset: 32)
!16326 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !16327)
!16327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16289, size: 32)
!16328 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16322, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!16329 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16318, file: !16319, line: 39, baseType: !103, size: 32, offset: 96)
!16330 = !{!16331, !16332, !16333, !16334, !16343}
!16331 = !DILocalVariable(name: "pq", arg: 1, scope: !16314, file: !2537, line: 1175, type: !16317)
!16332 = !DILocalVariable(name: "thread", arg: 2, scope: !16314, file: !2537, line: 1175, type: !2432)
!16333 = !DILocalVariable(name: "t", scope: !16314, file: !2537, line: 1177, type: !2432)
!16334 = !DILocalVariable(name: "__f", scope: !16335, file: !2537, line: 1190, type: !16338)
!16335 = distinct !DILexicalBlock(scope: !16336, file: !2537, line: 1190, column: 3)
!16336 = distinct !DILexicalBlock(scope: !16337, file: !2537, line: 1189, column: 27)
!16337 = distinct !DILexicalBlock(scope: !16314, file: !2537, line: 1189, column: 6)
!16338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !16339)
!16339 = !{!16340, !16341, !16342}
!16340 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16338, file: !404, line: 156, baseType: !2532, size: 32)
!16341 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16338, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!16342 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16338, file: !404, line: 158, baseType: !754, size: 32, offset: 64)
!16343 = !DILocalVariable(name: "n", scope: !16344, file: !2537, line: 1190, type: !2461)
!16344 = distinct !DILexicalBlock(scope: !16345, file: !2537, line: 1190, column: 3)
!16345 = distinct !DILexicalBlock(scope: !16335, file: !2537, line: 1190, column: 3)
!16346 = !DILocation(line: 0, scope: !16314)
!16347 = !DILocation(line: 1181, column: 31, scope: !16314)
!16348 = !DILocation(line: 1181, column: 45, scope: !16314)
!16349 = !DILocation(line: 1181, column: 15, scope: !16314)
!16350 = !DILocation(line: 1181, column: 25, scope: !16314)
!16351 = !DILocation(line: 1189, column: 11, scope: !16337)
!16352 = !DILocation(line: 1189, column: 7, scope: !16337)
!16353 = !DILocation(line: 1189, column: 6, scope: !16314)
!16354 = !DILocation(line: 1190, column: 3, scope: !16335)
!16355 = !DILocation(line: 1190, column: 3, scope: !16344)
!16356 = !DILocation(line: 0, scope: !16344)
!16357 = !DILocation(line: 1190, column: 3, scope: !16345)
!16358 = !DILocation(line: 1193, column: 2, scope: !16336)
!16359 = !DILocation(line: 1191, column: 42, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16345, file: !2537, line: 1190, column: 54)
!16361 = !DILocation(line: 1191, column: 12, scope: !16360)
!16362 = !DILocation(line: 1191, column: 22, scope: !16360)
!16363 = distinct !{!16363, !16354, !16364}
!16364 = !DILocation(line: 1192, column: 3, scope: !16335)
!16365 = !DILocation(line: 1195, column: 17, scope: !16314)
!16366 = !DILocation(line: 1195, column: 37, scope: !16314)
!16367 = !DILocation(line: 1195, column: 2, scope: !16314)
!16368 = !DILocation(line: 1196, column: 1, scope: !16314)
!16369 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !16370, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!2461, !16372, !16373}
!16372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16322, size: 32)
!16373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16338, size: 32)
!16374 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !16375, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!16375 = !DISubroutineType(types: !16376)
!16376 = !{null, !16372, !2461}
!16377 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2537, file: !2537, line: 1198, type: !16315, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16378)
!16378 = !{!16379, !16380}
!16379 = !DILocalVariable(name: "pq", arg: 1, scope: !16377, file: !2537, line: 1198, type: !16317)
!16380 = !DILocalVariable(name: "thread", arg: 2, scope: !16377, file: !2537, line: 1198, type: !2432)
!16381 = !DILocation(line: 0, scope: !16377)
!16382 = !DILocation(line: 1202, column: 17, scope: !16377)
!16383 = !DILocation(line: 1202, column: 37, scope: !16377)
!16384 = !DILocation(line: 1202, column: 2, scope: !16377)
!16385 = !DILocation(line: 1204, column: 16, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16377, file: !2537, line: 1204, column: 6)
!16387 = !DILocation(line: 1204, column: 7, scope: !16386)
!16388 = !DILocation(line: 1204, column: 6, scope: !16377)
!16389 = !DILocation(line: 1205, column: 7, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16386, file: !2537, line: 1204, column: 22)
!16391 = !DILocation(line: 1205, column: 22, scope: !16390)
!16392 = !DILocation(line: 1206, column: 2, scope: !16390)
!16393 = !DILocation(line: 1207, column: 1, scope: !16377)
!16394 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !16375, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!16395 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2537, file: !2537, line: 1209, type: !16396, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16398)
!16396 = !DISubroutineType(types: !16397)
!16397 = !{!2432, !16317}
!16398 = !{!16399, !16400, !16401}
!16399 = !DILocalVariable(name: "pq", arg: 1, scope: !16395, file: !2537, line: 1209, type: !16317)
!16400 = !DILocalVariable(name: "thread", scope: !16395, file: !2537, line: 1211, type: !2432)
!16401 = !DILocalVariable(name: "n", scope: !16395, file: !2537, line: 1212, type: !2461)
!16402 = !DILocation(line: 0, scope: !16395)
!16403 = !DILocation(line: 1212, column: 37, scope: !16395)
!16404 = !DILocation(line: 1212, column: 21, scope: !16395)
!16405 = !DILocation(line: 1217, column: 2, scope: !16395)
!16406 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !16407, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16409)
!16407 = !DISubroutineType(types: !16408)
!16408 = !{!2461, !16372}
!16409 = !{!16410}
!16410 = !DILocalVariable(name: "tree", arg: 1, scope: !16406, file: !404, line: 115, type: !16372)
!16411 = !DILocation(line: 0, scope: !16406)
!16412 = !DILocation(line: 117, column: 9, scope: !16406)
!16413 = !DILocation(line: 117, column: 2, scope: !16406)
!16414 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !16415, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!16415 = !DISubroutineType(types: !16416)
!16416 = !{!2461, !16372, !154}
!16417 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2537, file: !2537, line: 1246, type: !16418, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16428)
!16418 = !DISubroutineType(types: !16419)
!16419 = !{!2432, !16420}
!16420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16421, size: 32)
!16421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16319, line: 53, size: 2080, elements: !16422)
!16422 = !{!16423, !16427}
!16423 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16421, file: !16319, line: 54, baseType: !16424, size: 2048)
!16424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2468, size: 2048, elements: !16425)
!16425 = !{!16426}
!16426 = !DISubrange(count: 32)
!16427 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16421, file: !16319, line: 55, baseType: !32, size: 32, offset: 2048)
!16428 = !{!16429, !16430, !16431, !16432}
!16429 = !DILocalVariable(name: "pq", arg: 1, scope: !16417, file: !2537, line: 1246, type: !16420)
!16430 = !DILocalVariable(name: "thread", scope: !16417, file: !2537, line: 1252, type: !2432)
!16431 = !DILocalVariable(name: "l", scope: !16417, file: !2537, line: 1253, type: !15227)
!16432 = !DILocalVariable(name: "n", scope: !16417, file: !2537, line: 1254, type: !2533)
!16433 = !DILocation(line: 0, scope: !16417)
!16434 = !DILocation(line: 1248, column: 11, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16417, file: !2537, line: 1248, column: 6)
!16436 = !DILocation(line: 1248, column: 7, scope: !16435)
!16437 = !DILocation(line: 1248, column: 6, scope: !16417)
!16438 = !DILocation(line: 1253, column: 31, scope: !16417)
!16439 = !DILocation(line: 1253, column: 20, scope: !16417)
!16440 = !DILocation(line: 1254, column: 19, scope: !16417)
!16441 = !DILocation(line: 1260, column: 1, scope: !16417)
!16442 = distinct !DISubprogram(name: "z_unpend_all", scope: !2537, file: !2537, line: 1262, type: !16443, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16445)
!16443 = !DISubroutineType(types: !16444)
!16444 = !{!103, !2463}
!16445 = !{!16446, !16447, !16448}
!16446 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16442, file: !2537, line: 1262, type: !2463)
!16447 = !DILocalVariable(name: "need_sched", scope: !16442, file: !2537, line: 1264, type: !103)
!16448 = !DILocalVariable(name: "thread", scope: !16442, file: !2537, line: 1265, type: !2432)
!16449 = !DILocation(line: 0, scope: !16442)
!16450 = !DILocation(line: 1267, column: 19, scope: !16442)
!16451 = !DILocation(line: 1267, column: 41, scope: !16442)
!16452 = !DILocation(line: 1267, column: 2, scope: !16442)
!16453 = !DILocation(line: 1268, column: 3, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16442, file: !2537, line: 1267, column: 50)
!16455 = !DILocation(line: 1269, column: 3, scope: !16454)
!16456 = distinct !{!16456, !16452, !16457}
!16457 = !DILocation(line: 1271, column: 2, scope: !16442)
!16458 = !DILocation(line: 1273, column: 2, scope: !16442)
!16459 = distinct !DISubprogram(name: "z_waitq_head", scope: !13853, file: !13853, line: 52, type: !16075, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16460)
!16460 = !{!16461}
!16461 = !DILocalVariable(name: "w", arg: 1, scope: !16459, file: !13853, line: 52, type: !2463)
!16462 = !DILocation(line: 0, scope: !16459)
!16463 = !DILocation(line: 54, column: 52, scope: !16459)
!16464 = !DILocation(line: 54, column: 28, scope: !16459)
!16465 = !DILocation(line: 54, column: 9, scope: !16459)
!16466 = !DILocation(line: 54, column: 2, scope: !16459)
!16467 = distinct !DISubprogram(name: "init_ready_q", scope: !2537, file: !2537, line: 1276, type: !16468, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16475)
!16468 = !DISubroutineType(types: !16469)
!16469 = !{null, !16470}
!16470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16471, size: 32)
!16471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !16472)
!16472 = !{!16473, !16474}
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16471, file: !320, line: 86, baseType: !2432, size: 32)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16471, file: !320, line: 90, baseType: !2468, size: 64, offset: 32)
!16475 = !{!16476}
!16476 = !DILocalVariable(name: "rq", arg: 1, scope: !16467, file: !2537, line: 1276, type: !16470)
!16477 = !DILocation(line: 0, scope: !16467)
!16478 = !DILocation(line: 1289, column: 22, scope: !16467)
!16479 = !DILocation(line: 1289, column: 2, scope: !16467)
!16480 = !DILocation(line: 1291, column: 1, scope: !16467)
!16481 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !16482, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16484)
!16482 = !DISubroutineType(types: !16483)
!16483 = !{null, !15227}
!16484 = !{!16485}
!16485 = !DILocalVariable(name: "list", arg: 1, scope: !16481, file: !325, line: 197, type: !15227)
!16486 = !DILocation(line: 0, scope: !16481)
!16487 = !DILocation(line: 199, column: 8, scope: !16481)
!16488 = !DILocation(line: 199, column: 13, scope: !16481)
!16489 = !DILocation(line: 200, column: 8, scope: !16481)
!16490 = !DILocation(line: 200, column: 13, scope: !16481)
!16491 = !DILocation(line: 201, column: 1, scope: !16481)
!16492 = distinct !DISubprogram(name: "z_sched_init", scope: !2537, file: !2537, line: 1293, type: !3255, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16493 = !DILocation(line: 1302, column: 2, scope: !16492)
!16494 = !DILocation(line: 1306, column: 2, scope: !16492)
!16495 = !DILocation(line: 1309, column: 1, scope: !16492)
!16496 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2537, file: !2537, line: 1311, type: !16497, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16500)
!16497 = !DISubroutineType(types: !16498)
!16498 = !{!103, !16499}
!16499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2432)
!16500 = !{!16501}
!16501 = !DILocalVariable(name: "thread", arg: 1, scope: !16496, file: !2537, line: 1311, type: !16499)
!16502 = !DILocation(line: 0, scope: !16496)
!16503 = !DILocation(line: 1313, column: 22, scope: !16496)
!16504 = !DILocation(line: 1313, column: 9, scope: !16496)
!16505 = !DILocation(line: 1313, column: 2, scope: !16496)
!16506 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2537, file: !2537, line: 1325, type: !16507, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16509)
!16507 = !DISubroutineType(types: !16508)
!16508 = !{null, !16499, !103}
!16509 = !{!16510, !16511, !16512}
!16510 = !DILocalVariable(name: "thread", arg: 1, scope: !16506, file: !2537, line: 1325, type: !16499)
!16511 = !DILocalVariable(name: "prio", arg: 2, scope: !16506, file: !2537, line: 1325, type: !103)
!16512 = !DILocalVariable(name: "th", scope: !16506, file: !2537, line: 1334, type: !2432)
!16513 = !DILocation(line: 0, scope: !16506)
!16514 = !DILocation(line: 1336, column: 2, scope: !16506)
!16515 = !DILocation(line: 1337, column: 1, scope: !16506)
!16516 = distinct !DISubprogram(name: "k_can_yield", scope: !2537, file: !2537, line: 1384, type: !6828, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16517 = !DILocation(line: 1386, column: 11, scope: !16516)
!16518 = !DILocation(line: 1386, column: 29, scope: !16516)
!16519 = !DILocation(line: 1386, column: 32, scope: !16516)
!16520 = !DILocation(line: 1386, column: 46, scope: !16516)
!16521 = !DILocation(line: 1387, column: 28, scope: !16516)
!16522 = !DILocation(line: 1387, column: 4, scope: !16516)
!16523 = !DILocation(line: 1386, column: 2, scope: !16516)
!16524 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6828, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16525 = !DILocation(line: 993, column: 10, scope: !16524)
!16526 = !DILocation(line: 993, column: 2, scope: !16524)
!16527 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2537, file: !2537, line: 1390, type: !3255, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16528)
!16528 = !{!16529}
!16529 = !DILocalVariable(name: "key", scope: !16527, file: !2537, line: 1396, type: !15016)
!16530 = !DILocation(line: 0, scope: !15024, inlinedAt: !16531)
!16531 = distinct !DILocation(line: 1396, column: 25, scope: !16527)
!16532 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16531)
!16534 = !DILocation(line: 0, scope: !15033, inlinedAt: !16533)
!16535 = !DILocation(line: 0, scope: !16527)
!16536 = !DILocation(line: 1400, column: 18, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16538, file: !2537, line: 1399, column: 36)
!16538 = distinct !DILexicalBlock(scope: !16527, file: !2537, line: 1398, column: 6)
!16539 = !DILocation(line: 0, scope: !15193, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 1400, column: 3, scope: !16537)
!16541 = !DILocation(line: 266, column: 15, scope: !15193, inlinedAt: !16540)
!16542 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !16540)
!16543 = !DILocation(line: 0, scope: !15201, inlinedAt: !16544)
!16544 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !16540)
!16545 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !16544)
!16546 = !DILocation(line: 1402, column: 15, scope: !16527)
!16547 = !DILocation(line: 0, scope: !15210, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 1402, column: 2, scope: !16527)
!16549 = !DILocation(line: 252, column: 15, scope: !15210, inlinedAt: !16548)
!16550 = !DILocation(line: 252, column: 28, scope: !15210, inlinedAt: !16548)
!16551 = !DILocation(line: 0, scope: !15217, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 254, column: 3, scope: !15221, inlinedAt: !16548)
!16553 = !DILocation(line: 0, scope: !15224, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 229, column: 2, scope: !15217, inlinedAt: !16552)
!16555 = !DILocation(line: 188, column: 2, scope: !15234, inlinedAt: !16554)
!16556 = !DILocation(line: 188, column: 2, scope: !15236, inlinedAt: !16554)
!16557 = !DILocation(line: 0, scope: !15234, inlinedAt: !16554)
!16558 = !DILocation(line: 189, column: 7, scope: !15239, inlinedAt: !16554)
!16559 = !DILocation(line: 189, column: 35, scope: !15239, inlinedAt: !16554)
!16560 = !DILocation(line: 189, column: 7, scope: !15240, inlinedAt: !16554)
!16561 = !DILocation(line: 191, column: 21, scope: !15244, inlinedAt: !16554)
!16562 = !DILocation(line: 190, column: 4, scope: !15244, inlinedAt: !16554)
!16563 = !DILocation(line: 192, column: 4, scope: !15244, inlinedAt: !16554)
!16564 = distinct !{!16564, !16555, !16565}
!16565 = !DILocation(line: 194, column: 2, scope: !15234, inlinedAt: !16554)
!16566 = !DILocation(line: 196, column: 37, scope: !15224, inlinedAt: !16554)
!16567 = !DILocation(line: 196, column: 2, scope: !15224, inlinedAt: !16554)
!16568 = !DILocation(line: 197, column: 1, scope: !15224, inlinedAt: !16554)
!16569 = !DILocation(line: 1403, column: 2, scope: !16527)
!16570 = !DILocation(line: 0, scope: !15635, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 1404, column: 2, scope: !16527)
!16572 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !16571)
!16573 = !DILocation(line: 1405, column: 1, scope: !16527)
!16574 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2537, file: !2537, line: 1459, type: !16575, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16577)
!16575 = !DISubroutineType(types: !16576)
!16576 = !{!754, !15815}
!16577 = !{!16578, !16579, !16580}
!16578 = !DILocalVariable(name: "timeout", arg: 1, scope: !16574, file: !2537, line: 1459, type: !15815)
!16579 = !DILocalVariable(name: "ticks", scope: !16574, file: !2537, line: 1461, type: !200)
!16580 = !DILocalVariable(name: "ret", scope: !16574, file: !2537, line: 1480, type: !754)
!16581 = !DILocation(line: 0, scope: !16574)
!16582 = !DILocation(line: 1468, column: 6, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16574, file: !2537, line: 1468, column: 6)
!16584 = !DILocation(line: 1468, column: 6, scope: !16574)
!16585 = !DILocation(line: 1469, column: 20, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16583, file: !2537, line: 1468, column: 40)
!16587 = !DILocation(line: 1469, column: 3, scope: !16586)
!16588 = !DILocation(line: 1473, column: 3, scope: !16586)
!16589 = !DILocation(line: 1478, column: 10, scope: !16574)
!16590 = !DILocation(line: 1480, column: 16, scope: !16574)
!16591 = !DILocation(line: 1485, column: 1, scope: !16574)
!16592 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3691, file: !3691, line: 310, type: !16593, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16595)
!16593 = !DISubroutineType(types: !16594)
!16594 = !{null, !16499}
!16595 = !{!16596}
!16596 = !DILocalVariable(name: "thread", arg: 1, scope: !16592, file: !3691, line: 310, type: !16499)
!16597 = !DILocation(line: 0, scope: !16592)
!16598 = !DILocation(line: 319, column: 2, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16592, file: !3691, line: 319, column: 2)
!16600 = !{i64 2155104325}
!16601 = !DILocation(line: 320, column: 2, scope: !16592)
!16602 = !DILocation(line: 321, column: 1, scope: !16592)
!16603 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2537, file: !2537, line: 1415, type: !16604, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16606)
!16604 = !DISubroutineType(types: !16605)
!16605 = !{!754, !200}
!16606 = !{!16607, !16608, !16609, !16610}
!16607 = !DILocalVariable(name: "ticks", arg: 1, scope: !16603, file: !2537, line: 1415, type: !200)
!16608 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16603, file: !2537, line: 1418, type: !121)
!16609 = !DILocalVariable(name: "timeout", scope: !16603, file: !2537, line: 1430, type: !15815)
!16610 = !DILocalVariable(name: "key", scope: !16603, file: !2537, line: 1437, type: !15016)
!16611 = !DILocation(line: 0, scope: !16603)
!16612 = !DILocation(line: 1425, column: 12, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16603, file: !2537, line: 1425, column: 6)
!16614 = !DILocation(line: 1425, column: 6, scope: !16603)
!16615 = !DILocation(line: 1426, column: 3, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16613, file: !2537, line: 1425, column: 18)
!16617 = !DILocation(line: 1427, column: 3, scope: !16616)
!16618 = !DILocation(line: 1431, column: 24, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16603, file: !2537, line: 1431, column: 6)
!16620 = !DILocation(line: 1431, column: 6, scope: !16603)
!16621 = !DILocation(line: 1432, column: 35, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16619, file: !2537, line: 1431, column: 30)
!16623 = !DILocation(line: 1432, column: 27, scope: !16622)
!16624 = !DILocation(line: 1433, column: 2, scope: !16622)
!16625 = !DILocation(line: 1434, column: 27, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16619, file: !2537, line: 1433, column: 9)
!16627 = !DILocation(line: 0, scope: !16619)
!16628 = !DILocation(line: 0, scope: !15024, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 1437, column: 25, scope: !16603)
!16630 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16629)
!16632 = !DILocation(line: 0, scope: !15033, inlinedAt: !16631)
!16633 = !DILocation(line: 1440, column: 20, scope: !16603)
!16634 = !DILocation(line: 1440, column: 18, scope: !16603)
!16635 = !DILocation(line: 1442, column: 2, scope: !16603)
!16636 = !DILocation(line: 1443, column: 23, scope: !16603)
!16637 = !DILocation(line: 1443, column: 2, scope: !16603)
!16638 = !DILocation(line: 1444, column: 29, scope: !16603)
!16639 = !DILocation(line: 1444, column: 2, scope: !16603)
!16640 = !DILocation(line: 0, scope: !15635, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 1446, column: 8, scope: !16603)
!16642 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !16641)
!16643 = !DILocation(line: 1450, column: 10, scope: !16603)
!16644 = !DILocation(line: 1450, column: 45, scope: !16603)
!16645 = !DILocation(line: 1450, column: 43, scope: !16603)
!16646 = !DILocation(line: 1451, column: 6, scope: !16603)
!16647 = !DILocation(line: 1457, column: 1, scope: !16603)
!16648 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14088, file: !14088, line: 1103, type: !14089, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16649)
!16649 = !{!16650}
!16650 = !DILocalVariable(name: "t", arg: 1, scope: !16648, file: !14088, line: 1103, type: !1610)
!16651 = !DILocation(line: 0, scope: !16648)
!16652 = !DILocation(line: 0, scope: !15071, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 1106, column: 9, scope: !16648)
!16654 = !DILocation(line: 139, column: 13, scope: !16655, inlinedAt: !16653)
!16655 = distinct !DILexicalBlock(scope: !16656, file: !14088, line: 138, column: 10)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !14088, line: 136, column: 7)
!16657 = distinct !DILexicalBlock(scope: !15092, file: !14088, line: 134, column: 17)
!16658 = !DILocation(line: 1106, column: 2, scope: !16648)
!16659 = distinct !DISubprogram(name: "k_yield", scope: !3691, file: !3691, line: 140, type: !3255, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16660 = !DILocation(line: 148, column: 2, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16659, file: !3691, line: 148, column: 2)
!16662 = !{i64 2155103645}
!16663 = !DILocation(line: 149, column: 2, scope: !16659)
!16664 = !DILocation(line: 150, column: 1, scope: !16659)
!16665 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2537, file: !2537, line: 1495, type: !16666, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16668)
!16666 = !DISubroutineType(types: !16667)
!16667 = !{!754, !103}
!16668 = !{!16669, !16670}
!16669 = !DILocalVariable(name: "us", arg: 1, scope: !16665, file: !2537, line: 1495, type: !103)
!16670 = !DILocalVariable(name: "ticks", scope: !16665, file: !2537, line: 1497, type: !754)
!16671 = !DILocation(line: 0, scope: !16665)
!16672 = !DILocation(line: 1501, column: 31, scope: !16665)
!16673 = !DILocation(line: 1501, column: 10, scope: !16665)
!16674 = !DILocation(line: 1502, column: 23, scope: !16665)
!16675 = !DILocation(line: 1502, column: 10, scope: !16665)
!16676 = !DILocation(line: 1506, column: 31, scope: !16665)
!16677 = !DILocation(line: 1506, column: 9, scope: !16665)
!16678 = !DILocation(line: 1506, column: 2, scope: !16665)
!16679 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14088, file: !14088, line: 571, type: !14089, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16680)
!16680 = !{!16681}
!16681 = !DILocalVariable(name: "t", arg: 1, scope: !16679, file: !14088, line: 571, type: !1610)
!16682 = !DILocation(line: 0, scope: !16679)
!16683 = !DILocation(line: 0, scope: !15071, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 574, column: 9, scope: !16679)
!16685 = !DILocation(line: 135, column: 5, scope: !16657, inlinedAt: !16684)
!16686 = !DILocation(line: 139, column: 13, scope: !16655, inlinedAt: !16684)
!16687 = !DILocation(line: 574, column: 2, scope: !16679)
!16688 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14088, file: !14088, line: 1187, type: !14089, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16689)
!16689 = !{!16690}
!16690 = !DILocalVariable(name: "t", arg: 1, scope: !16688, file: !14088, line: 1187, type: !1610)
!16691 = !DILocation(line: 0, scope: !16688)
!16692 = !DILocation(line: 0, scope: !15071, inlinedAt: !16693)
!16693 = distinct !DILocation(line: 1190, column: 9, scope: !16688)
!16694 = !DILocation(line: 145, column: 13, scope: !16695, inlinedAt: !16693)
!16695 = distinct !DILexicalBlock(scope: !15089, file: !14088, line: 144, column: 10)
!16696 = !DILocation(line: 1190, column: 2, scope: !16688)
!16697 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2537, file: !2537, line: 1517, type: !16593, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16698)
!16698 = !{!16699}
!16699 = !DILocalVariable(name: "thread", arg: 1, scope: !16697, file: !2537, line: 1517, type: !16499)
!16700 = !DILocation(line: 0, scope: !16697)
!16701 = !DILocation(line: 1521, column: 6, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16697, file: !2537, line: 1521, column: 6)
!16703 = !DILocation(line: 1521, column: 6, scope: !16697)
!16704 = !DILocation(line: 1525, column: 6, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16697, file: !2537, line: 1525, column: 6)
!16706 = !DILocation(line: 1525, column: 37, scope: !16705)
!16707 = !DILocation(line: 1525, column: 6, scope: !16697)
!16708 = !DILocation(line: 1527, column: 20, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16710, file: !2537, line: 1527, column: 7)
!16710 = distinct !DILexicalBlock(scope: !16705, file: !2537, line: 1525, column: 42)
!16711 = !DILocation(line: 1527, column: 33, scope: !16709)
!16712 = !DILocation(line: 1527, column: 7, scope: !16710)
!16713 = !DILocation(line: 1532, column: 2, scope: !16697)
!16714 = !DILocation(line: 1533, column: 2, scope: !16697)
!16715 = !DILocation(line: 1031, column: 3, scope: !15668, inlinedAt: !16716)
!16716 = distinct !DILocation(line: 48, column: 10, scope: !15672, inlinedAt: !16717)
!16717 = distinct !DILocation(line: 1537, column: 7, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16697, file: !2537, line: 1537, column: 6)
!16719 = !DILocation(line: 0, scope: !15668, inlinedAt: !16716)
!16720 = !DILocation(line: 48, column: 9, scope: !15672, inlinedAt: !16717)
!16721 = !DILocation(line: 1537, column: 6, scope: !16697)
!16722 = !DILocation(line: 1538, column: 3, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16718, file: !2537, line: 1537, column: 25)
!16724 = !DILocation(line: 1539, column: 2, scope: !16723)
!16725 = !DILocation(line: 1540, column: 1, scope: !16697)
!16726 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13529, file: !13529, line: 101, type: !15142, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16727)
!16727 = !{!16728}
!16728 = !DILocalVariable(name: "thread", arg: 1, scope: !16726, file: !13529, line: 101, type: !2432)
!16729 = !DILocation(line: 0, scope: !16726)
!16730 = !DILocation(line: 103, column: 23, scope: !16726)
!16731 = !DILocation(line: 103, column: 36, scope: !16726)
!16732 = !DILocation(line: 103, column: 55, scope: !16726)
!16733 = !DILocation(line: 103, column: 2, scope: !16726)
!16734 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2537, file: !2537, line: 1567, type: !16735, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16737)
!16735 = !DISubroutineType(types: !16736)
!16736 = !{!16499}
!16737 = !{!16738}
!16738 = !DILocalVariable(name: "ret", scope: !16734, file: !2537, line: 1577, type: !16499)
!16739 = !DILocation(line: 1577, column: 30, scope: !16734)
!16740 = !DILocation(line: 0, scope: !16734)
!16741 = !DILocation(line: 1582, column: 2, scope: !16734)
!16742 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2537, file: !2537, line: 1593, type: !7102, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !317)
!16743 = !DILocation(line: 1031, column: 3, scope: !15668, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 48, column: 10, scope: !15672, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 1595, column: 10, scope: !16742)
!16746 = !DILocation(line: 0, scope: !15668, inlinedAt: !16744)
!16747 = !DILocation(line: 48, column: 9, scope: !15672, inlinedAt: !16745)
!16748 = !DILocation(line: 1595, column: 27, scope: !16742)
!16749 = !DILocation(line: 1595, column: 41, scope: !16742)
!16750 = !DILocation(line: 1595, column: 30, scope: !16742)
!16751 = !DILocation(line: 1595, column: 2, scope: !16742)
!16752 = distinct !DISubprogram(name: "z_thread_abort", scope: !2537, file: !2537, line: 1725, type: !14982, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16753)
!16753 = !{!16754, !16755}
!16754 = !DILocalVariable(name: "thread", arg: 1, scope: !16752, file: !2537, line: 1725, type: !2432)
!16755 = !DILocalVariable(name: "key", scope: !16752, file: !2537, line: 1727, type: !15016)
!16756 = !DILocation(line: 0, scope: !16752)
!16757 = !DILocation(line: 0, scope: !15024, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 1727, column: 25, scope: !16752)
!16759 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16758)
!16761 = !DILocation(line: 0, scope: !15033, inlinedAt: !16760)
!16762 = !DILocation(line: 1729, column: 20, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16752, file: !2537, line: 1729, column: 6)
!16764 = !DILocation(line: 1729, column: 33, scope: !16763)
!16765 = !DILocation(line: 1729, column: 48, scope: !16763)
!16766 = !DILocation(line: 1729, column: 6, scope: !16752)
!16767 = !DILocation(line: 0, scope: !15051, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 1730, column: 3, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16763, file: !2537, line: 1729, column: 54)
!16770 = !DILocation(line: 0, scope: !15059, inlinedAt: !16771)
!16771 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16768)
!16772 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16771)
!16773 = !DILocation(line: 1732, column: 3, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16769, file: !2537, line: 1732, column: 3)
!16775 = !{i64 2155841055, i64 2155841071, i64 2155841097, i64 2155841125, i64 2155841145}
!16776 = !DILocation(line: 1733, column: 3, scope: !16769)
!16777 = !DILocation(line: 1736, column: 20, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16752, file: !2537, line: 1736, column: 6)
!16779 = !DILocation(line: 1736, column: 33, scope: !16778)
!16780 = !DILocation(line: 1736, column: 49, scope: !16778)
!16781 = !DILocation(line: 1736, column: 6, scope: !16752)
!16782 = !DILocation(line: 0, scope: !15051, inlinedAt: !16783)
!16783 = distinct !DILocation(line: 1737, column: 3, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16778, file: !2537, line: 1736, column: 56)
!16785 = !DILocation(line: 0, scope: !15059, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16783)
!16787 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16786)
!16788 = !DILocation(line: 1738, column: 3, scope: !16784)
!16789 = !DILocation(line: 1775, column: 2, scope: !16752)
!16790 = !DILocation(line: 1776, column: 16, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16752, file: !2537, line: 1776, column: 6)
!16792 = !DILocation(line: 1776, column: 13, scope: !16791)
!16793 = !DILocation(line: 1776, column: 25, scope: !16791)
!16794 = !DILocation(line: 1031, column: 3, scope: !15668, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 48, column: 10, scope: !15672, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 1776, column: 29, scope: !16791)
!16797 = !DILocation(line: 0, scope: !15668, inlinedAt: !16795)
!16798 = !DILocation(line: 48, column: 9, scope: !15672, inlinedAt: !16796)
!16799 = !DILocation(line: 1776, column: 6, scope: !16752)
!16800 = !DILocation(line: 0, scope: !15635, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 1777, column: 3, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16791, file: !2537, line: 1776, column: 47)
!16803 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !16801)
!16804 = !DILocation(line: 1779, column: 2, scope: !16802)
!16805 = !DILocation(line: 0, scope: !15051, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 1780, column: 2, scope: !16752)
!16807 = !DILocation(line: 0, scope: !15059, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16806)
!16809 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16808)
!16810 = !DILocation(line: 1781, column: 1, scope: !16752)
!16811 = distinct !DISubprogram(name: "end_thread", scope: !2537, file: !2537, line: 1690, type: !14982, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16812)
!16812 = !{!16813}
!16813 = !DILocalVariable(name: "thread", arg: 1, scope: !16811, file: !2537, line: 1690, type: !2432)
!16814 = !DILocation(line: 0, scope: !16811)
!16815 = !DILocation(line: 1695, column: 20, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16811, file: !2537, line: 1695, column: 6)
!16817 = !DILocation(line: 1695, column: 33, scope: !16816)
!16818 = !DILocation(line: 1695, column: 49, scope: !16816)
!16819 = !DILocation(line: 1695, column: 6, scope: !16811)
!16820 = !DILocation(line: 1697, column: 29, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16816, file: !2537, line: 1695, column: 56)
!16822 = !DILocation(line: 1698, column: 7, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16821, file: !2537, line: 1698, column: 7)
!16824 = !DILocation(line: 1698, column: 7, scope: !16821)
!16825 = !DILocation(line: 0, scope: !15193, inlinedAt: !16826)
!16826 = distinct !DILocation(line: 1699, column: 4, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16823, file: !2537, line: 1698, column: 35)
!16828 = !DILocation(line: 266, column: 28, scope: !15193, inlinedAt: !16826)
!16829 = !DILocation(line: 0, scope: !15201, inlinedAt: !16830)
!16830 = distinct !DILocation(line: 268, column: 3, scope: !15205, inlinedAt: !16826)
!16831 = !DILocation(line: 234, column: 2, scope: !15201, inlinedAt: !16830)
!16832 = !DILocation(line: 1700, column: 3, scope: !16827)
!16833 = !DILocation(line: 1701, column: 20, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16821, file: !2537, line: 1701, column: 7)
!16835 = !DILocation(line: 1701, column: 30, scope: !16834)
!16836 = !DILocation(line: 1701, column: 7, scope: !16821)
!16837 = !DILocation(line: 1702, column: 4, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16834, file: !2537, line: 1701, column: 39)
!16839 = !DILocation(line: 1703, column: 3, scope: !16838)
!16840 = !DILocation(line: 1704, column: 9, scope: !16821)
!16841 = !DILocation(line: 1705, column: 23, scope: !16821)
!16842 = !DILocation(line: 1705, column: 3, scope: !16821)
!16843 = !DILocation(line: 1706, column: 3, scope: !16821)
!16844 = !DILocation(line: 1722, column: 2, scope: !16821)
!16845 = !DILocation(line: 1723, column: 1, scope: !16811)
!16846 = distinct !DISubprogram(name: "unpend_all", scope: !2537, file: !2537, line: 1674, type: !16847, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16849)
!16847 = !DISubroutineType(types: !16848)
!16848 = !{null, !2463}
!16849 = !{!16850, !16851}
!16850 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16846, file: !2537, line: 1674, type: !2463)
!16851 = !DILocalVariable(name: "thread", scope: !16846, file: !2537, line: 1676, type: !2432)
!16852 = !DILocation(line: 0, scope: !16846)
!16853 = !DILocation(line: 1678, column: 19, scope: !16846)
!16854 = !DILocation(line: 1678, column: 41, scope: !16846)
!16855 = !DILocation(line: 1678, column: 2, scope: !16846)
!16856 = !DILocation(line: 1679, column: 3, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16846, file: !2537, line: 1678, column: 50)
!16858 = !DILocation(line: 1680, column: 9, scope: !16857)
!16859 = !DILocalVariable(name: "thread", arg: 1, scope: !16860, file: !13549, line: 65, type: !2432)
!16860 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13549, file: !13549, line: 65, type: !16861, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16863)
!16861 = !DISubroutineType(types: !16862)
!16862 = !{null, !2432, !32}
!16863 = !{!16859, !16864}
!16864 = !DILocalVariable(name: "value", arg: 2, scope: !16860, file: !13549, line: 65, type: !32)
!16865 = !DILocation(line: 0, scope: !16860, inlinedAt: !16866)
!16866 = distinct !DILocation(line: 1681, column: 3, scope: !16857)
!16867 = !DILocation(line: 67, column: 15, scope: !16860, inlinedAt: !16866)
!16868 = !DILocation(line: 67, column: 33, scope: !16860, inlinedAt: !16866)
!16869 = !DILocation(line: 1682, column: 3, scope: !16857)
!16870 = distinct !{!16870, !16855, !16871}
!16871 = !DILocation(line: 1683, column: 2, scope: !16846)
!16872 = !DILocation(line: 1684, column: 1, scope: !16846)
!16873 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2537, file: !2537, line: 1794, type: !16874, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16876)
!16874 = !DISubroutineType(types: !16875)
!16875 = !{!103, !2432, !15815}
!16876 = !{!16877, !16878, !16879, !16880}
!16877 = !DILocalVariable(name: "thread", arg: 1, scope: !16873, file: !2537, line: 1794, type: !2432)
!16878 = !DILocalVariable(name: "timeout", arg: 2, scope: !16873, file: !2537, line: 1794, type: !15815)
!16879 = !DILocalVariable(name: "key", scope: !16873, file: !2537, line: 1796, type: !15016)
!16880 = !DILocalVariable(name: "ret", scope: !16873, file: !2537, line: 1797, type: !103)
!16881 = !DILocation(line: 0, scope: !16873)
!16882 = !DILocation(line: 0, scope: !15024, inlinedAt: !16883)
!16883 = distinct !DILocation(line: 1796, column: 25, scope: !16873)
!16884 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16885)
!16885 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16883)
!16886 = !DILocation(line: 0, scope: !15033, inlinedAt: !16885)
!16887 = !DILocation(line: 1801, column: 20, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16873, file: !2537, line: 1801, column: 6)
!16889 = !DILocation(line: 1801, column: 33, scope: !16888)
!16890 = !DILocation(line: 1801, column: 49, scope: !16888)
!16891 = !DILocation(line: 1801, column: 6, scope: !16873)
!16892 = !DILocation(line: 1803, column: 13, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16888, file: !2537, line: 1803, column: 13)
!16894 = !DILocation(line: 1803, column: 13, scope: !16888)
!16895 = !DILocation(line: 1805, column: 24, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16893, file: !2537, line: 1805, column: 13)
!16897 = !DILocation(line: 1805, column: 21, scope: !16896)
!16898 = !DILocation(line: 1805, column: 34, scope: !16896)
!16899 = !DILocation(line: 1806, column: 20, scope: !16896)
!16900 = !DILocation(line: 1806, column: 44, scope: !16896)
!16901 = !DILocation(line: 1806, column: 30, scope: !16896)
!16902 = !DILocation(line: 1805, column: 13, scope: !16893)
!16903 = !DILocation(line: 1810, column: 42, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16896, file: !2537, line: 1808, column: 9)
!16905 = !DILocation(line: 1810, column: 3, scope: !16904)
!16906 = !DILocation(line: 1811, column: 22, scope: !16904)
!16907 = !DILocation(line: 1811, column: 3, scope: !16904)
!16908 = !DILocation(line: 0, scope: !15635, inlinedAt: !16909)
!16909 = distinct !DILocation(line: 1814, column: 9, scope: !16904)
!16910 = !DILocation(line: 196, column: 9, scope: !15635, inlinedAt: !16909)
!16911 = !DILocation(line: 1817, column: 3, scope: !16904)
!16912 = !DILocation(line: 0, scope: !16888)
!16913 = !DILocation(line: 0, scope: !15051, inlinedAt: !16914)
!16914 = distinct !DILocation(line: 1822, column: 2, scope: !16873)
!16915 = !DILocation(line: 0, scope: !15059, inlinedAt: !16916)
!16916 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16914)
!16917 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16916)
!16918 = !DILocation(line: 1823, column: 2, scope: !16873)
!16919 = !DILocation(line: 1824, column: 1, scope: !16873)
!16920 = distinct !DISubprogram(name: "z_sched_wake", scope: !2537, file: !2537, line: 1882, type: !16921, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!157, !2463, !103, !102}
!16923 = !{!16924, !16925, !16926, !16927, !16928, !16929, !16931}
!16924 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16920, file: !2537, line: 1882, type: !2463)
!16925 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16920, file: !2537, line: 1882, type: !103)
!16926 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16920, file: !2537, line: 1882, type: !102)
!16927 = !DILocalVariable(name: "thread", scope: !16920, file: !2537, line: 1884, type: !2432)
!16928 = !DILocalVariable(name: "ret", scope: !16920, file: !2537, line: 1885, type: !157)
!16929 = !DILocalVariable(name: "__i", scope: !16930, file: !2537, line: 1887, type: !15016)
!16930 = distinct !DILexicalBlock(scope: !16920, file: !2537, line: 1887, column: 2)
!16931 = !DILocalVariable(name: "__key", scope: !16930, file: !2537, line: 1887, type: !15016)
!16932 = !DILocation(line: 0, scope: !16920)
!16933 = !DILocation(line: 0, scope: !16930)
!16934 = !DILocation(line: 0, scope: !15024, inlinedAt: !16935)
!16935 = distinct !DILocation(line: 1887, column: 2, scope: !16930)
!16936 = !DILocation(line: 55, column: 2, scope: !15033, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 145, column: 10, scope: !15024, inlinedAt: !16935)
!16938 = !DILocation(line: 0, scope: !15033, inlinedAt: !16937)
!16939 = !DILocation(line: 1888, column: 12, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16941, file: !2537, line: 1887, column: 26)
!16941 = distinct !DILexicalBlock(scope: !16930, file: !2537, line: 1887, column: 2)
!16942 = !DILocation(line: 1890, column: 14, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16940, file: !2537, line: 1890, column: 7)
!16944 = !DILocation(line: 1890, column: 7, scope: !16940)
!16945 = !DILocalVariable(name: "thread", arg: 1, scope: !16946, file: !14422, line: 134, type: !2432)
!16946 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14422, file: !14422, line: 134, type: !16947, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16949)
!16947 = !DISubroutineType(types: !16948)
!16948 = !{null, !2432, !32, !102}
!16949 = !{!16945, !16950, !16951}
!16950 = !DILocalVariable(name: "value", arg: 2, scope: !16946, file: !14422, line: 135, type: !32)
!16951 = !DILocalVariable(name: "data", arg: 3, scope: !16946, file: !14422, line: 136, type: !102)
!16952 = !DILocation(line: 0, scope: !16946, inlinedAt: !16953)
!16953 = distinct !DILocation(line: 1891, column: 4, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16943, file: !2537, line: 1890, column: 23)
!16955 = !DILocation(line: 0, scope: !16860, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 138, column: 2, scope: !16946, inlinedAt: !16953)
!16957 = !DILocation(line: 67, column: 15, scope: !16860, inlinedAt: !16956)
!16958 = !DILocation(line: 67, column: 33, scope: !16860, inlinedAt: !16956)
!16959 = !DILocation(line: 139, column: 15, scope: !16946, inlinedAt: !16953)
!16960 = !DILocation(line: 139, column: 25, scope: !16946, inlinedAt: !16953)
!16961 = !DILocation(line: 1894, column: 4, scope: !16954)
!16962 = !DILocation(line: 1895, column: 10, scope: !16954)
!16963 = !DILocation(line: 1896, column: 4, scope: !16954)
!16964 = !DILocation(line: 1898, column: 3, scope: !16954)
!16965 = !DILocation(line: 0, scope: !15051, inlinedAt: !16966)
!16966 = distinct !DILocation(line: 1887, column: 2, scope: !16941)
!16967 = !DILocation(line: 0, scope: !15059, inlinedAt: !16968)
!16968 = distinct !DILocation(line: 215, column: 2, scope: !15051, inlinedAt: !16966)
!16969 = !DILocation(line: 95, column: 2, scope: !15059, inlinedAt: !16968)
!16970 = !DILocation(line: 1901, column: 2, scope: !16920)
!16971 = distinct !DISubprogram(name: "z_sched_wait", scope: !2537, file: !2537, line: 1904, type: !16972, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !16974)
!16972 = !DISubroutineType(types: !16973)
!16973 = !{!103, !15027, !15016, !2463, !15815, !3219}
!16974 = !{!16975, !16976, !16977, !16978, !16979, !16980}
!16975 = !DILocalVariable(name: "lock", arg: 1, scope: !16971, file: !2537, line: 1904, type: !15027)
!16976 = !DILocalVariable(name: "key", arg: 2, scope: !16971, file: !2537, line: 1904, type: !15016)
!16977 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16971, file: !2537, line: 1905, type: !2463)
!16978 = !DILocalVariable(name: "timeout", arg: 4, scope: !16971, file: !2537, line: 1905, type: !15815)
!16979 = !DILocalVariable(name: "data", arg: 5, scope: !16971, file: !2537, line: 1905, type: !3219)
!16980 = !DILocalVariable(name: "ret", scope: !16971, file: !2537, line: 1907, type: !103)
!16981 = !DILocation(line: 0, scope: !16971)
!16982 = !DILocation(line: 1907, column: 12, scope: !16971)
!16983 = !DILocation(line: 1909, column: 11, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16971, file: !2537, line: 1909, column: 6)
!16985 = !DILocation(line: 1909, column: 6, scope: !16971)
!16986 = !DILocation(line: 1910, column: 11, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16984, file: !2537, line: 1909, column: 20)
!16988 = !DILocation(line: 1910, column: 26, scope: !16987)
!16989 = !DILocation(line: 1910, column: 9, scope: !16987)
!16990 = !DILocation(line: 1911, column: 2, scope: !16987)
!16991 = !DILocation(line: 1912, column: 2, scope: !16971)
!16992 = distinct !DISubprogram(name: "z_data_copy", scope: !16993, file: !16993, line: 22, type: !3255, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3236, retainedNodes: !317)
!16993 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16994 = !DILocation(line: 24, column: 2, scope: !16992)
!16995 = !DILocation(line: 27, column: 2, scope: !16992)
!16996 = !DILocation(line: 71, column: 1, scope: !16992)
!16997 = distinct !DISubprogram(name: "z_add_timeout", scope: !2574, file: !2574, line: 88, type: !16998, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17004)
!16998 = !DISubroutineType(types: !16999)
!16999 = !{null, !2547, !2566, !17000}
!17000 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17001)
!17001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17002)
!17002 = !{!17003}
!17003 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17001, file: !201, line: 66, baseType: !200, size: 64)
!17004 = !{!17005, !17006, !17007, !17008, !17014, !17015, !17018, !17021}
!17005 = !DILocalVariable(name: "to", arg: 1, scope: !16997, file: !2574, line: 88, type: !2547)
!17006 = !DILocalVariable(name: "fn", arg: 2, scope: !16997, file: !2574, line: 88, type: !2566)
!17007 = !DILocalVariable(name: "timeout", arg: 3, scope: !16997, file: !2574, line: 89, type: !17000)
!17008 = !DILocalVariable(name: "__i", scope: !17009, file: !2574, line: 102, type: !17010)
!17009 = distinct !DILexicalBlock(scope: !16997, file: !2574, line: 102, column: 2)
!17010 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17011)
!17011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17012)
!17012 = !{!17013}
!17013 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17011, file: !316, line: 33, baseType: !103, size: 32)
!17014 = !DILocalVariable(name: "__key", scope: !17009, file: !2574, line: 102, type: !17010)
!17015 = !DILocalVariable(name: "t", scope: !17016, file: !2574, line: 103, type: !2547)
!17016 = distinct !DILexicalBlock(scope: !17017, file: !2574, line: 102, column: 24)
!17017 = distinct !DILexicalBlock(scope: !17009, file: !2574, line: 102, column: 2)
!17018 = !DILocalVariable(name: "ticks", scope: !17019, file: !2574, line: 107, type: !200)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !2574, line: 106, column: 39)
!17020 = distinct !DILexicalBlock(scope: !17016, file: !2574, line: 105, column: 7)
!17021 = !DILocalVariable(name: "next_time", scope: !17022, file: !2574, line: 137, type: !754)
!17022 = distinct !DILexicalBlock(scope: !17023, file: !2574, line: 127, column: 22)
!17023 = distinct !DILexicalBlock(scope: !17016, file: !2574, line: 127, column: 7)
!17024 = !DILocation(line: 0, scope: !16997)
!17025 = !DILocation(line: 91, column: 6, scope: !17026)
!17026 = distinct !DILexicalBlock(scope: !16997, file: !2574, line: 91, column: 6)
!17027 = !DILocation(line: 91, column: 6, scope: !16997)
!17028 = !DILocation(line: 100, column: 6, scope: !16997)
!17029 = !DILocation(line: 100, column: 9, scope: !16997)
!17030 = !DILocation(line: 0, scope: !17009)
!17031 = !DILocalVariable(name: "l", arg: 1, scope: !17032, file: !316, line: 136, type: !17035)
!17032 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17033, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17036)
!17033 = !DISubroutineType(types: !17034)
!17034 = !{!17010, !17035}
!17035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!17036 = !{!17031, !17037}
!17037 = !DILocalVariable(name: "k", scope: !17032, file: !316, line: 139, type: !17010)
!17038 = !DILocation(line: 0, scope: !17032, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 102, column: 2, scope: !17009)
!17040 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17045)
!17041 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17042)
!17042 = !{!17043, !17044}
!17043 = !DILocalVariable(name: "key", scope: !17041, file: !5818, line: 44, type: !32)
!17044 = !DILocalVariable(name: "tmp", scope: !17041, file: !5818, line: 53, type: !32)
!17045 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17039)
!17046 = !{i64 2283820}
!17047 = !DILocation(line: 0, scope: !17041, inlinedAt: !17045)
!17048 = !DILocation(line: 106, column: 33, scope: !17020)
!17049 = !DILocation(line: 105, column: 7, scope: !17016)
!17050 = !DILocation(line: 107, column: 50, scope: !17019)
!17051 = !DILocation(line: 107, column: 48, scope: !17019)
!17052 = !DILocation(line: 0, scope: !17019)
!17053 = !DILocation(line: 109, column: 17, scope: !17019)
!17054 = !DILocation(line: 110, column: 3, scope: !17019)
!17055 = !DILocation(line: 111, column: 31, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17020, file: !2574, line: 110, column: 10)
!17057 = !DILocation(line: 111, column: 37, scope: !17056)
!17058 = !DILocation(line: 111, column: 35, scope: !17056)
!17059 = !DILocation(line: 0, scope: !17020)
!17060 = !DILocation(line: 109, column: 8, scope: !17019)
!17061 = !DILocation(line: 109, column: 15, scope: !17019)
!17062 = !DILocation(line: 114, column: 12, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17016, file: !2574, line: 114, column: 3)
!17064 = !DILocation(line: 0, scope: !17016)
!17065 = !DILocation(line: 114, column: 3, scope: !17063)
!17066 = !DILocation(line: 115, column: 24, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17068, file: !2574, line: 115, column: 8)
!17068 = distinct !DILexicalBlock(scope: !17069, file: !2574, line: 114, column: 45)
!17069 = distinct !DILexicalBlock(scope: !17063, file: !2574, line: 114, column: 3)
!17070 = !DILocation(line: 115, column: 11, scope: !17067)
!17071 = !DILocation(line: 115, column: 18, scope: !17067)
!17072 = !DILocation(line: 115, column: 8, scope: !17068)
!17073 = !DILocation(line: 116, column: 15, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17067, file: !2574, line: 115, column: 32)
!17075 = !DILocation(line: 117, column: 26, scope: !17074)
!17076 = !DILocation(line: 117, column: 37, scope: !17074)
!17077 = !DILocation(line: 117, column: 5, scope: !17074)
!17078 = !DILocation(line: 123, column: 7, scope: !17016)
!17079 = !DILocation(line: 120, column: 15, scope: !17068)
!17080 = !DILocation(line: 114, column: 36, scope: !17069)
!17081 = distinct !{!17081, !17065, !17082}
!17082 = !DILocation(line: 121, column: 3, scope: !17063)
!17083 = !DILocation(line: 124, column: 41, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17085, file: !2574, line: 123, column: 18)
!17085 = distinct !DILexicalBlock(scope: !17016, file: !2574, line: 123, column: 7)
!17086 = !DILocation(line: 124, column: 4, scope: !17084)
!17087 = !DILocation(line: 125, column: 3, scope: !17084)
!17088 = !DILocation(line: 127, column: 13, scope: !17023)
!17089 = !DILocation(line: 127, column: 10, scope: !17023)
!17090 = !DILocation(line: 127, column: 7, scope: !17016)
!17091 = !DILocation(line: 137, column: 24, scope: !17022)
!17092 = !DILocation(line: 0, scope: !17022)
!17093 = !DILocation(line: 139, column: 18, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17022, file: !2574, line: 139, column: 8)
!17095 = !DILocation(line: 139, column: 23, scope: !17094)
!17096 = !DILocation(line: 141, column: 5, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17094, file: !2574, line: 140, column: 48)
!17098 = !DILocation(line: 142, column: 4, scope: !17097)
!17099 = !DILocalVariable(name: "key", arg: 2, scope: !17100, file: !316, line: 190, type: !17010)
!17100 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17101, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17103)
!17101 = !DISubroutineType(types: !17102)
!17102 = !{null, !17035, !17010}
!17103 = !{!17104, !17099}
!17104 = !DILocalVariable(name: "l", arg: 1, scope: !17100, file: !316, line: 189, type: !17035)
!17105 = !DILocation(line: 0, scope: !17100, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 102, column: 2, scope: !17017)
!17107 = !DILocalVariable(name: "key", arg: 1, scope: !17108, file: !5818, line: 84, type: !32)
!17108 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17109)
!17109 = !{!17107}
!17110 = !DILocation(line: 0, scope: !17108, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17106)
!17112 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17111)
!17113 = !{i64 2284637}
!17114 = !DILocation(line: 148, column: 1, scope: !16997)
!17115 = distinct !DISubprogram(name: "elapsed", scope: !2574, file: !2574, line: 62, type: !17116, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !317)
!17116 = !DISubroutineType(types: !17117)
!17117 = !{!754}
!17118 = !DILocation(line: 64, column: 9, scope: !17115)
!17119 = !DILocation(line: 64, column: 28, scope: !17115)
!17120 = !DILocation(line: 64, column: 35, scope: !17115)
!17121 = !DILocation(line: 64, column: 2, scope: !17115)
!17122 = distinct !DISubprogram(name: "first", scope: !2574, file: !2574, line: 39, type: !17123, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17125)
!17123 = !DISubroutineType(types: !17124)
!17124 = !{!2547}
!17125 = !{!17126}
!17126 = !DILocalVariable(name: "t", scope: !17122, file: !2574, line: 41, type: !17127)
!17127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!17128 = !DILocation(line: 41, column: 19, scope: !17122)
!17129 = !DILocation(line: 0, scope: !17122)
!17130 = !DILocation(line: 43, column: 9, scope: !17122)
!17131 = !DILocation(line: 43, column: 2, scope: !17122)
!17132 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !17133, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17135)
!17133 = !DISubroutineType(types: !17134)
!17134 = !{null, !17127, !17127}
!17135 = !{!17136, !17137, !17138}
!17136 = !DILocalVariable(name: "successor", arg: 1, scope: !17132, file: !325, line: 443, type: !17127)
!17137 = !DILocalVariable(name: "node", arg: 2, scope: !17132, file: !325, line: 443, type: !17127)
!17138 = !DILocalVariable(name: "prev", scope: !17132, file: !325, line: 445, type: !17139)
!17139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17127)
!17140 = !DILocation(line: 0, scope: !17132)
!17141 = !DILocation(line: 445, column: 39, scope: !17132)
!17142 = !DILocation(line: 447, column: 8, scope: !17132)
!17143 = !DILocation(line: 447, column: 13, scope: !17132)
!17144 = !DILocation(line: 448, column: 8, scope: !17132)
!17145 = !DILocation(line: 448, column: 13, scope: !17132)
!17146 = !DILocation(line: 449, column: 8, scope: !17132)
!17147 = !DILocation(line: 449, column: 13, scope: !17132)
!17148 = !DILocation(line: 450, column: 18, scope: !17132)
!17149 = !DILocation(line: 451, column: 1, scope: !17132)
!17150 = distinct !DISubprogram(name: "next", scope: !2574, file: !2574, line: 46, type: !17151, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17153)
!17151 = !DISubroutineType(types: !17152)
!17152 = !{!2547, !2547}
!17153 = !{!17154, !17155}
!17154 = !DILocalVariable(name: "t", arg: 1, scope: !17150, file: !2574, line: 46, type: !2547)
!17155 = !DILocalVariable(name: "n", scope: !17150, file: !2574, line: 48, type: !17127)
!17156 = !DILocation(line: 0, scope: !17150)
!17157 = !DILocation(line: 48, column: 58, scope: !17150)
!17158 = !DILocation(line: 48, column: 19, scope: !17150)
!17159 = !DILocation(line: 50, column: 9, scope: !17150)
!17160 = !DILocation(line: 50, column: 2, scope: !17150)
!17161 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !17162, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17165)
!17162 = !DISubroutineType(types: !17163)
!17163 = !{null, !17164, !17127}
!17164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!17165 = !{!17166, !17167, !17168}
!17166 = !DILocalVariable(name: "list", arg: 1, scope: !17161, file: !325, line: 404, type: !17164)
!17167 = !DILocalVariable(name: "node", arg: 2, scope: !17161, file: !325, line: 404, type: !17127)
!17168 = !DILocalVariable(name: "tail", scope: !17161, file: !325, line: 406, type: !17139)
!17169 = !DILocation(line: 0, scope: !17161)
!17170 = !DILocation(line: 406, column: 34, scope: !17161)
!17171 = !DILocation(line: 408, column: 8, scope: !17161)
!17172 = !DILocation(line: 408, column: 13, scope: !17161)
!17173 = !DILocation(line: 409, column: 8, scope: !17161)
!17174 = !DILocation(line: 409, column: 13, scope: !17161)
!17175 = !DILocation(line: 411, column: 8, scope: !17161)
!17176 = !DILocation(line: 411, column: 13, scope: !17161)
!17177 = !DILocation(line: 412, column: 13, scope: !17161)
!17178 = !DILocation(line: 413, column: 1, scope: !17161)
!17179 = distinct !DISubprogram(name: "next_timeout", scope: !2574, file: !2574, line: 67, type: !17116, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17180)
!17180 = !{!17181, !17182, !17183}
!17181 = !DILocalVariable(name: "to", scope: !17179, file: !2574, line: 69, type: !2547)
!17182 = !DILocalVariable(name: "ticks_elapsed", scope: !17179, file: !2574, line: 70, type: !754)
!17183 = !DILocalVariable(name: "ret", scope: !17179, file: !2574, line: 71, type: !754)
!17184 = !DILocation(line: 69, column: 24, scope: !17179)
!17185 = !DILocation(line: 0, scope: !17179)
!17186 = !DILocation(line: 70, column: 26, scope: !17179)
!17187 = !DILocation(line: 73, column: 10, scope: !17188)
!17188 = distinct !DILexicalBlock(scope: !17179, file: !2574, line: 73, column: 6)
!17189 = !DILocation(line: 73, column: 19, scope: !17188)
!17190 = !DILocation(line: 74, column: 21, scope: !17188)
!17191 = !DILocation(line: 74, column: 30, scope: !17188)
!17192 = !DILocation(line: 74, column: 28, scope: !17188)
!17193 = !DILocation(line: 74, column: 45, scope: !17188)
!17194 = !DILocation(line: 73, column: 6, scope: !17179)
!17195 = !DILocation(line: 77, column: 9, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17188, file: !2574, line: 76, column: 9)
!17197 = !DILocation(line: 0, scope: !17188)
!17198 = !DILocation(line: 81, column: 20, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17179, file: !2574, line: 81, column: 6)
!17200 = !DILocation(line: 81, column: 6, scope: !17199)
!17201 = !DILocation(line: 81, column: 32, scope: !17199)
!17202 = !DILocation(line: 85, column: 2, scope: !17179)
!17203 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !17204, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17206)
!17204 = !DISubroutineType(types: !17205)
!17205 = !{!17127, !17164, !17127}
!17206 = !{!17207, !17208}
!17207 = !DILocalVariable(name: "list", arg: 1, scope: !17203, file: !325, line: 341, type: !17164)
!17208 = !DILocalVariable(name: "node", arg: 2, scope: !17203, file: !325, line: 342, type: !17127)
!17209 = !DILocation(line: 0, scope: !17203)
!17210 = !DILocation(line: 344, column: 15, scope: !17203)
!17211 = !DILocation(line: 344, column: 9, scope: !17203)
!17212 = !DILocation(line: 344, column: 26, scope: !17203)
!17213 = !DILocation(line: 344, column: 2, scope: !17203)
!17214 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !17204, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17215)
!17215 = !{!17216, !17217}
!17216 = !DILocalVariable(name: "list", arg: 1, scope: !17214, file: !325, line: 325, type: !17164)
!17217 = !DILocalVariable(name: "node", arg: 2, scope: !17214, file: !325, line: 326, type: !17127)
!17218 = !DILocation(line: 0, scope: !17214)
!17219 = !DILocation(line: 328, column: 24, scope: !17214)
!17220 = !DILocation(line: 328, column: 15, scope: !17214)
!17221 = !DILocation(line: 328, column: 9, scope: !17214)
!17222 = !DILocation(line: 328, column: 45, scope: !17214)
!17223 = !DILocation(line: 328, column: 2, scope: !17214)
!17224 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !17225, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17227)
!17225 = !DISubroutineType(types: !17226)
!17226 = !{!17127, !17164}
!17227 = !{!17228}
!17228 = !DILocalVariable(name: "list", arg: 1, scope: !17224, file: !325, line: 294, type: !17164)
!17229 = !DILocation(line: 0, scope: !17224)
!17230 = !DILocation(line: 296, column: 9, scope: !17224)
!17231 = !DILocation(line: 296, column: 2, scope: !17224)
!17232 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !17233, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17235)
!17233 = !DISubroutineType(types: !17234)
!17234 = !{!157, !17164}
!17235 = !{!17236}
!17236 = !DILocalVariable(name: "list", arg: 1, scope: !17232, file: !325, line: 266, type: !17164)
!17237 = !DILocation(line: 0, scope: !17232)
!17238 = !DILocation(line: 268, column: 15, scope: !17232)
!17239 = !DILocation(line: 268, column: 20, scope: !17232)
!17240 = !DILocation(line: 268, column: 2, scope: !17232)
!17241 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2574, file: !2574, line: 150, type: !17242, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17244)
!17242 = !DISubroutineType(types: !17243)
!17243 = !{!103, !2547}
!17244 = !{!17245, !17246, !17247, !17249}
!17245 = !DILocalVariable(name: "to", arg: 1, scope: !17241, file: !2574, line: 150, type: !2547)
!17246 = !DILocalVariable(name: "ret", scope: !17241, file: !2574, line: 152, type: !103)
!17247 = !DILocalVariable(name: "__i", scope: !17248, file: !2574, line: 154, type: !17010)
!17248 = distinct !DILexicalBlock(scope: !17241, file: !2574, line: 154, column: 2)
!17249 = !DILocalVariable(name: "__key", scope: !17248, file: !2574, line: 154, type: !17010)
!17250 = !DILocation(line: 0, scope: !17241)
!17251 = !DILocation(line: 0, scope: !17248)
!17252 = !DILocation(line: 0, scope: !17032, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 154, column: 2, scope: !17248)
!17254 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17253)
!17256 = !DILocation(line: 0, scope: !17041, inlinedAt: !17255)
!17257 = !DILocation(line: 155, column: 7, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !2574, line: 155, column: 7)
!17259 = distinct !DILexicalBlock(scope: !17260, file: !2574, line: 154, column: 24)
!17260 = distinct !DILexicalBlock(scope: !17248, file: !2574, line: 154, column: 2)
!17261 = !DILocation(line: 155, column: 7, scope: !17259)
!17262 = !DILocation(line: 156, column: 4, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17258, file: !2574, line: 155, column: 39)
!17264 = !DILocation(line: 158, column: 3, scope: !17263)
!17265 = !DILocation(line: 0, scope: !17100, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 154, column: 2, scope: !17260)
!17267 = !DILocation(line: 0, scope: !17108, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17266)
!17269 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17268)
!17270 = !DILocation(line: 161, column: 2, scope: !17241)
!17271 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !17272, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17276)
!17272 = !DISubroutineType(types: !17273)
!17273 = !{!157, !17274}
!17274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17275, size: 32)
!17275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2551)
!17276 = !{!17277}
!17277 = !DILocalVariable(name: "node", arg: 1, scope: !17271, file: !325, line: 225, type: !17274)
!17278 = !DILocation(line: 0, scope: !17271)
!17279 = !DILocation(line: 227, column: 15, scope: !17271)
!17280 = !DILocation(line: 227, column: 20, scope: !17271)
!17281 = !DILocation(line: 227, column: 2, scope: !17271)
!17282 = distinct !DISubprogram(name: "remove_timeout", scope: !2574, file: !2574, line: 53, type: !2568, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17283)
!17283 = !{!17284}
!17284 = !DILocalVariable(name: "t", arg: 1, scope: !17282, file: !2574, line: 53, type: !2547)
!17285 = !DILocation(line: 0, scope: !17282)
!17286 = !DILocation(line: 55, column: 6, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17282, file: !2574, line: 55, column: 6)
!17288 = !DILocation(line: 55, column: 14, scope: !17287)
!17289 = !DILocation(line: 55, column: 6, scope: !17282)
!17290 = !DILocation(line: 56, column: 25, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17287, file: !2574, line: 55, column: 23)
!17292 = !DILocation(line: 56, column: 12, scope: !17291)
!17293 = !DILocation(line: 56, column: 19, scope: !17291)
!17294 = !DILocation(line: 57, column: 2, scope: !17291)
!17295 = !DILocation(line: 59, column: 23, scope: !17282)
!17296 = !DILocation(line: 59, column: 2, scope: !17282)
!17297 = !DILocation(line: 60, column: 1, scope: !17282)
!17298 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !17299, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17301)
!17299 = !DISubroutineType(types: !17300)
!17300 = !{null, !17127}
!17301 = !{!17302, !17303, !17304}
!17302 = !DILocalVariable(name: "node", arg: 1, scope: !17298, file: !325, line: 496, type: !17127)
!17303 = !DILocalVariable(name: "prev", scope: !17298, file: !325, line: 498, type: !17139)
!17304 = !DILocalVariable(name: "next", scope: !17298, file: !325, line: 499, type: !17139)
!17305 = !DILocation(line: 0, scope: !17298)
!17306 = !DILocation(line: 498, column: 34, scope: !17298)
!17307 = !DILocation(line: 499, column: 34, scope: !17298)
!17308 = !DILocation(line: 501, column: 8, scope: !17298)
!17309 = !DILocation(line: 501, column: 13, scope: !17298)
!17310 = !DILocation(line: 502, column: 8, scope: !17298)
!17311 = !DILocation(line: 502, column: 13, scope: !17298)
!17312 = !DILocation(line: 503, column: 2, scope: !17298)
!17313 = !DILocation(line: 504, column: 1, scope: !17298)
!17314 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !17299, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17315)
!17315 = !{!17316}
!17316 = !DILocalVariable(name: "node", arg: 1, scope: !17314, file: !325, line: 211, type: !17127)
!17317 = !DILocation(line: 0, scope: !17314)
!17318 = !DILocation(line: 213, column: 8, scope: !17314)
!17319 = !DILocation(line: 213, column: 13, scope: !17314)
!17320 = !DILocation(line: 214, column: 8, scope: !17314)
!17321 = !DILocation(line: 214, column: 13, scope: !17314)
!17322 = !DILocation(line: 215, column: 1, scope: !17314)
!17323 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2574, file: !2574, line: 183, type: !17324, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17328)
!17324 = !DISubroutineType(types: !17325)
!17325 = !{!200, !17326}
!17326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17327, size: 32)
!17327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2548)
!17328 = !{!17329, !17330, !17331, !17333}
!17329 = !DILocalVariable(name: "timeout", arg: 1, scope: !17323, file: !2574, line: 183, type: !17326)
!17330 = !DILocalVariable(name: "ticks", scope: !17323, file: !2574, line: 185, type: !200)
!17331 = !DILocalVariable(name: "__i", scope: !17332, file: !2574, line: 187, type: !17010)
!17332 = distinct !DILexicalBlock(scope: !17323, file: !2574, line: 187, column: 2)
!17333 = !DILocalVariable(name: "__key", scope: !17332, file: !2574, line: 187, type: !17010)
!17334 = !DILocation(line: 0, scope: !17323)
!17335 = !DILocation(line: 0, scope: !17332)
!17336 = !DILocation(line: 0, scope: !17032, inlinedAt: !17337)
!17337 = distinct !DILocation(line: 187, column: 2, scope: !17332)
!17338 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17337)
!17340 = !DILocation(line: 0, scope: !17041, inlinedAt: !17339)
!17341 = !DILocation(line: 188, column: 11, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !2574, line: 187, column: 24)
!17343 = distinct !DILexicalBlock(scope: !17332, file: !2574, line: 187, column: 2)
!17344 = !DILocation(line: 0, scope: !17100, inlinedAt: !17345)
!17345 = distinct !DILocation(line: 187, column: 2, scope: !17343)
!17346 = !DILocation(line: 0, scope: !17108, inlinedAt: !17347)
!17347 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17345)
!17348 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17347)
!17349 = !DILocation(line: 191, column: 2, scope: !17323)
!17350 = distinct !DISubprogram(name: "timeout_rem", scope: !2574, file: !2574, line: 165, type: !17324, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17351)
!17351 = !{!17352, !17353, !17354}
!17352 = !DILocalVariable(name: "timeout", arg: 1, scope: !17350, file: !2574, line: 165, type: !17326)
!17353 = !DILocalVariable(name: "ticks", scope: !17350, file: !2574, line: 167, type: !200)
!17354 = !DILocalVariable(name: "t", scope: !17355, file: !2574, line: 173, type: !2547)
!17355 = distinct !DILexicalBlock(scope: !17350, file: !2574, line: 173, column: 2)
!17356 = !DILocation(line: 0, scope: !17350)
!17357 = !DILocation(line: 169, column: 6, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17350, file: !2574, line: 169, column: 6)
!17359 = !DILocation(line: 169, column: 6, scope: !17350)
!17360 = !DILocation(line: 173, column: 28, scope: !17355)
!17361 = !DILocation(line: 0, scope: !17355)
!17362 = !DILocation(line: 173, column: 39, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !17355, file: !2574, line: 173, column: 2)
!17364 = !DILocation(line: 173, column: 2, scope: !17355)
!17365 = !DILocation(line: 174, column: 15, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17363, file: !2574, line: 173, column: 61)
!17367 = !DILocation(line: 174, column: 9, scope: !17366)
!17368 = !DILocation(line: 175, column: 15, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17366, file: !2574, line: 175, column: 7)
!17370 = !DILocation(line: 175, column: 7, scope: !17366)
!17371 = !DILocation(line: 173, column: 52, scope: !17363)
!17372 = distinct !{!17372, !17364, !17373}
!17373 = !DILocation(line: 178, column: 2, scope: !17355)
!17374 = !DILocation(line: 180, column: 17, scope: !17350)
!17375 = !DILocation(line: 180, column: 15, scope: !17350)
!17376 = !DILocation(line: 180, column: 2, scope: !17350)
!17377 = !DILocation(line: 181, column: 1, scope: !17350)
!17378 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13921, file: !13921, line: 35, type: !17379, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17381)
!17379 = !DISubroutineType(types: !17380)
!17380 = !{!157, !17326}
!17381 = !{!17382}
!17382 = !DILocalVariable(name: "to", arg: 1, scope: !17378, file: !13921, line: 35, type: !17326)
!17383 = !DILocation(line: 0, scope: !17378)
!17384 = !DILocation(line: 37, column: 35, scope: !17378)
!17385 = !DILocation(line: 37, column: 10, scope: !17378)
!17386 = !DILocation(line: 37, column: 9, scope: !17378)
!17387 = !DILocation(line: 37, column: 2, scope: !17378)
!17388 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2574, file: !2574, line: 194, type: !17324, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17389)
!17389 = !{!17390, !17391, !17392, !17394}
!17390 = !DILocalVariable(name: "timeout", arg: 1, scope: !17388, file: !2574, line: 194, type: !17326)
!17391 = !DILocalVariable(name: "ticks", scope: !17388, file: !2574, line: 196, type: !200)
!17392 = !DILocalVariable(name: "__i", scope: !17393, file: !2574, line: 198, type: !17010)
!17393 = distinct !DILexicalBlock(scope: !17388, file: !2574, line: 198, column: 2)
!17394 = !DILocalVariable(name: "__key", scope: !17393, file: !2574, line: 198, type: !17010)
!17395 = !DILocation(line: 0, scope: !17388)
!17396 = !DILocation(line: 0, scope: !17393)
!17397 = !DILocation(line: 0, scope: !17032, inlinedAt: !17398)
!17398 = distinct !DILocation(line: 198, column: 2, scope: !17393)
!17399 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17400)
!17400 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17398)
!17401 = !DILocation(line: 0, scope: !17041, inlinedAt: !17400)
!17402 = !DILocation(line: 199, column: 11, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17404, file: !2574, line: 198, column: 24)
!17404 = distinct !DILexicalBlock(scope: !17393, file: !2574, line: 198, column: 2)
!17405 = !DILocation(line: 199, column: 23, scope: !17403)
!17406 = !DILocation(line: 0, scope: !17100, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 198, column: 2, scope: !17404)
!17408 = !DILocation(line: 0, scope: !17108, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17407)
!17410 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17409)
!17411 = !DILocation(line: 199, column: 21, scope: !17403)
!17412 = !DILocation(line: 202, column: 2, scope: !17388)
!17413 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2574, file: !2574, line: 205, type: !17116, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17414)
!17414 = !{!17415, !17416, !17418}
!17415 = !DILocalVariable(name: "ret", scope: !17413, file: !2574, line: 207, type: !754)
!17416 = !DILocalVariable(name: "__i", scope: !17417, file: !2574, line: 209, type: !17010)
!17417 = distinct !DILexicalBlock(scope: !17413, file: !2574, line: 209, column: 2)
!17418 = !DILocalVariable(name: "__key", scope: !17417, file: !2574, line: 209, type: !17010)
!17419 = !DILocation(line: 0, scope: !17413)
!17420 = !DILocation(line: 0, scope: !17417)
!17421 = !DILocation(line: 0, scope: !17032, inlinedAt: !17422)
!17422 = distinct !DILocation(line: 209, column: 2, scope: !17417)
!17423 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17424)
!17424 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17422)
!17425 = !DILocation(line: 0, scope: !17041, inlinedAt: !17424)
!17426 = !DILocation(line: 210, column: 9, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17428, file: !2574, line: 209, column: 24)
!17428 = distinct !DILexicalBlock(scope: !17417, file: !2574, line: 209, column: 2)
!17429 = !DILocation(line: 0, scope: !17100, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 209, column: 2, scope: !17428)
!17431 = !DILocation(line: 0, scope: !17108, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17430)
!17433 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17432)
!17434 = !DILocation(line: 212, column: 2, scope: !17413)
!17435 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2574, file: !2574, line: 215, type: !10951, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17436)
!17436 = !{!17437, !17438, !17439, !17441, !17442, !17445, !17446}
!17437 = !DILocalVariable(name: "ticks", arg: 1, scope: !17435, file: !2574, line: 215, type: !754)
!17438 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17435, file: !2574, line: 215, type: !157)
!17439 = !DILocalVariable(name: "__i", scope: !17440, file: !2574, line: 217, type: !17010)
!17440 = distinct !DILexicalBlock(scope: !17435, file: !2574, line: 217, column: 2)
!17441 = !DILocalVariable(name: "__key", scope: !17440, file: !2574, line: 217, type: !17010)
!17442 = !DILocalVariable(name: "next_to", scope: !17443, file: !2574, line: 218, type: !103)
!17443 = distinct !DILexicalBlock(scope: !17444, file: !2574, line: 217, column: 24)
!17444 = distinct !DILexicalBlock(scope: !17440, file: !2574, line: 217, column: 2)
!17445 = !DILocalVariable(name: "sooner", scope: !17443, file: !2574, line: 219, type: !157)
!17446 = !DILocalVariable(name: "imminent", scope: !17443, file: !2574, line: 221, type: !157)
!17447 = !DILocation(line: 0, scope: !17435)
!17448 = !DILocation(line: 0, scope: !17440)
!17449 = !DILocation(line: 0, scope: !17032, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 217, column: 2, scope: !17440)
!17451 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17452)
!17452 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17450)
!17453 = !DILocation(line: 0, scope: !17041, inlinedAt: !17452)
!17454 = !DILocation(line: 218, column: 17, scope: !17443)
!17455 = !DILocation(line: 0, scope: !17443)
!17456 = !DILocation(line: 221, column: 27, scope: !17443)
!17457 = !DILocation(line: 233, column: 17, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17443, file: !2574, line: 233, column: 7)
!17459 = !DILocation(line: 234, column: 26, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17458, file: !2574, line: 233, column: 56)
!17461 = !DILocation(line: 234, column: 4, scope: !17460)
!17462 = !DILocation(line: 235, column: 3, scope: !17460)
!17463 = !DILocation(line: 0, scope: !17100, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 217, column: 2, scope: !17444)
!17465 = !DILocation(line: 0, scope: !17108, inlinedAt: !17466)
!17466 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17464)
!17467 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17466)
!17468 = !DILocation(line: 237, column: 1, scope: !17435)
!17469 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2574, file: !2574, line: 239, type: !17470, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17472)
!17470 = !DISubroutineType(types: !17471)
!17471 = !{null, !754}
!17472 = !{!17473, !17474, !17475, !17477}
!17473 = !DILocalVariable(name: "ticks", arg: 1, scope: !17469, file: !2574, line: 239, type: !754)
!17474 = !DILocalVariable(name: "key", scope: !17469, file: !2574, line: 245, type: !17010)
!17475 = !DILocalVariable(name: "t", scope: !17476, file: !2574, line: 262, type: !2547)
!17476 = distinct !DILexicalBlock(scope: !17469, file: !2574, line: 261, column: 67)
!17477 = !DILocalVariable(name: "dt", scope: !17476, file: !2574, line: 263, type: !103)
!17478 = !DILocation(line: 0, scope: !17469)
!17479 = !DILocation(line: 242, column: 2, scope: !17469)
!17480 = !DILocation(line: 0, scope: !17032, inlinedAt: !17481)
!17481 = distinct !DILocation(line: 245, column: 25, scope: !17469)
!17482 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17481)
!17484 = !DILocation(line: 0, scope: !17041, inlinedAt: !17483)
!17485 = !DILocation(line: 261, column: 9, scope: !17469)
!17486 = !DILocation(line: 261, column: 17, scope: !17469)
!17487 = !DILocation(line: 261, column: 25, scope: !17469)
!17488 = !DILocation(line: 261, column: 37, scope: !17469)
!17489 = !DILocation(line: 261, column: 47, scope: !17469)
!17490 = !DILocation(line: 261, column: 44, scope: !17469)
!17491 = !DILocation(line: 261, column: 2, scope: !17469)
!17492 = !DILocation(line: 0, scope: !17476)
!17493 = !DILocation(line: 263, column: 12, scope: !17476)
!17494 = !DILocation(line: 265, column: 16, scope: !17476)
!17495 = !DILocation(line: 265, column: 13, scope: !17476)
!17496 = !DILocation(line: 266, column: 13, scope: !17476)
!17497 = !DILocation(line: 267, column: 3, scope: !17476)
!17498 = !DILocation(line: 0, scope: !17100, inlinedAt: !17499)
!17499 = distinct !DILocation(line: 269, column: 3, scope: !17476)
!17500 = !DILocation(line: 0, scope: !17108, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17499)
!17502 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17501)
!17503 = !DILocation(line: 270, column: 6, scope: !17476)
!17504 = !DILocation(line: 270, column: 3, scope: !17476)
!17505 = !DILocation(line: 0, scope: !17032, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 271, column: 9, scope: !17476)
!17507 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17506)
!17509 = !DILocation(line: 0, scope: !17041, inlinedAt: !17508)
!17510 = !DILocation(line: 272, column: 22, scope: !17476)
!17511 = distinct !{!17511, !17491, !17512}
!17512 = !DILocation(line: 273, column: 2, scope: !17469)
!17513 = !DILocation(line: 276, column: 19, scope: !17514)
!17514 = distinct !DILexicalBlock(scope: !17515, file: !2574, line: 275, column: 23)
!17515 = distinct !DILexicalBlock(scope: !17469, file: !2574, line: 275, column: 6)
!17516 = !DILocation(line: 277, column: 2, scope: !17514)
!17517 = !DILocation(line: 279, column: 15, scope: !17469)
!17518 = !DILocation(line: 279, column: 12, scope: !17469)
!17519 = !DILocation(line: 280, column: 21, scope: !17469)
!17520 = !DILocation(line: 282, column: 24, scope: !17469)
!17521 = !DILocation(line: 282, column: 2, scope: !17469)
!17522 = !DILocation(line: 0, scope: !17100, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 284, column: 2, scope: !17469)
!17524 = !DILocation(line: 0, scope: !17108, inlinedAt: !17525)
!17525 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17523)
!17526 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17525)
!17527 = !DILocation(line: 285, column: 1, scope: !17469)
!17528 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2574, file: !2574, line: 287, type: !17529, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17531)
!17529 = !DISubroutineType(types: !17530)
!17530 = !{!202}
!17531 = !{!17532, !17533, !17535}
!17532 = !DILocalVariable(name: "t", scope: !17528, file: !2574, line: 289, type: !1610)
!17533 = !DILocalVariable(name: "__i", scope: !17534, file: !2574, line: 291, type: !17010)
!17534 = distinct !DILexicalBlock(scope: !17528, file: !2574, line: 291, column: 2)
!17535 = !DILocalVariable(name: "__key", scope: !17534, file: !2574, line: 291, type: !17010)
!17536 = !DILocation(line: 0, scope: !17528)
!17537 = !DILocation(line: 0, scope: !17534)
!17538 = !DILocation(line: 0, scope: !17032, inlinedAt: !17539)
!17539 = distinct !DILocation(line: 291, column: 2, scope: !17534)
!17540 = !DILocation(line: 55, column: 2, scope: !17041, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 145, column: 10, scope: !17032, inlinedAt: !17539)
!17542 = !DILocation(line: 0, scope: !17041, inlinedAt: !17541)
!17543 = !DILocation(line: 292, column: 7, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17545, file: !2574, line: 291, column: 24)
!17545 = distinct !DILexicalBlock(scope: !17534, file: !2574, line: 291, column: 2)
!17546 = !DILocation(line: 292, column: 19, scope: !17544)
!17547 = !DILocation(line: 0, scope: !17100, inlinedAt: !17548)
!17548 = distinct !DILocation(line: 291, column: 2, scope: !17545)
!17549 = !DILocation(line: 0, scope: !17108, inlinedAt: !17550)
!17550 = distinct !DILocation(line: 215, column: 2, scope: !17100, inlinedAt: !17548)
!17551 = !DILocation(line: 95, column: 2, scope: !17108, inlinedAt: !17550)
!17552 = !DILocation(line: 292, column: 17, scope: !17544)
!17553 = !DILocation(line: 294, column: 2, scope: !17528)
!17554 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2574, file: !2574, line: 297, type: !6114, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !317)
!17555 = !DILocation(line: 300, column: 19, scope: !17554)
!17556 = !DILocation(line: 300, column: 9, scope: !17554)
!17557 = !DILocation(line: 300, column: 2, scope: !17554)
!17558 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2574, file: !2574, line: 306, type: !17529, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !317)
!17559 = !DILocation(line: 308, column: 9, scope: !17558)
!17560 = !DILocation(line: 308, column: 2, scope: !17558)
!17561 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2574, file: !2574, line: 319, type: !6124, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17562)
!17562 = !{!17563, !17564, !17565, !17566}
!17563 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17561, file: !2574, line: 319, type: !121)
!17564 = !DILocalVariable(name: "start_cycles", scope: !17561, file: !2574, line: 328, type: !121)
!17565 = !DILocalVariable(name: "cycles_to_wait", scope: !17561, file: !2574, line: 331, type: !121)
!17566 = !DILocalVariable(name: "current_cycles", scope: !17567, file: !2574, line: 338, type: !121)
!17567 = distinct !DILexicalBlock(scope: !17568, file: !2574, line: 337, column: 11)
!17568 = distinct !DILexicalBlock(scope: !17569, file: !2574, line: 337, column: 2)
!17569 = distinct !DILexicalBlock(scope: !17561, file: !2574, line: 337, column: 2)
!17570 = !DILocation(line: 0, scope: !17561)
!17571 = !DILocation(line: 322, column: 19, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17561, file: !2574, line: 322, column: 6)
!17573 = !DILocation(line: 322, column: 6, scope: !17561)
!17574 = !DILocation(line: 328, column: 26, scope: !17561)
!17575 = !DILocation(line: 333, column: 43, scope: !17561)
!17576 = !DILocation(line: 337, column: 2, scope: !17561)
!17577 = !DILocation(line: 338, column: 29, scope: !17567)
!17578 = !DILocation(line: 0, scope: !17567)
!17579 = !DILocation(line: 341, column: 23, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17567, file: !2574, line: 341, column: 7)
!17581 = !DILocation(line: 341, column: 39, scope: !17580)
!17582 = !DILocation(line: 349, column: 1, scope: !17561)
!17583 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6114, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !317)
!17584 = !DILocation(line: 1677, column: 9, scope: !17583)
!17585 = !DILocation(line: 1677, column: 2, scope: !17583)
!17586 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17587, file: !17587, line: 24, type: !6114, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !317)
!17587 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17588 = !DILocation(line: 26, column: 9, scope: !17586)
!17589 = !DILocation(line: 26, column: 2, scope: !17586)
!17590 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2574, file: !2574, line: 364, type: !17591, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !17593)
!17591 = !DISubroutineType(types: !17592)
!17592 = !{!1610, !17000}
!17593 = !{!17594, !17595}
!17594 = !DILocalVariable(name: "timeout", arg: 1, scope: !17590, file: !2574, line: 364, type: !17000)
!17595 = !DILocalVariable(name: "dt", scope: !17590, file: !2574, line: 366, type: !200)
!17596 = !DILocation(line: 0, scope: !17590)
!17597 = !DILocation(line: 368, column: 6, scope: !17590)
!17598 = !DILocation(line: 371, column: 10, scope: !17599)
!17599 = distinct !DILexicalBlock(scope: !17600, file: !2574, line: 370, column: 47)
!17600 = distinct !DILexicalBlock(scope: !17601, file: !2574, line: 370, column: 13)
!17601 = distinct !DILexicalBlock(scope: !17590, file: !2574, line: 368, column: 6)
!17602 = !DILocation(line: 371, column: 3, scope: !17599)
!17603 = !DILocation(line: 376, column: 58, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17605, file: !2574, line: 376, column: 7)
!17605 = distinct !DILexicalBlock(scope: !17600, file: !2574, line: 372, column: 9)
!17606 = !DILocation(line: 376, column: 7, scope: !17605)
!17607 = !DILocation(line: 376, column: 43, scope: !17604)
!17608 = !DILocation(line: 377, column: 4, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17604, file: !2574, line: 376, column: 64)
!17610 = !DILocation(line: 379, column: 10, scope: !17605)
!17611 = !DILocation(line: 379, column: 33, scope: !17605)
!17612 = !DILocation(line: 379, column: 31, scope: !17605)
!17613 = !DILocation(line: 379, column: 3, scope: !17605)
!17614 = !DILocation(line: 0, scope: !17601)
!17615 = !DILocation(line: 381, column: 1, scope: !17590)
!17616 = distinct !DISubprogram(name: "k_free", scope: !17617, file: !17617, line: 43, type: !5970, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !17618)
!17617 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17618 = !{!17619, !17620}
!17619 = !DILocalVariable(name: "ptr", arg: 1, scope: !17616, file: !17617, line: 43, type: !102)
!17620 = !DILocalVariable(name: "heap_ref", scope: !17616, file: !17617, line: 45, type: !17621)
!17621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17622, size: 32)
!17622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17623, size: 32)
!17623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17624)
!17624 = !{!17625, !17631, !17650}
!17625 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17623, file: !296, line: 5074, baseType: !17626, size: 96)
!17626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17627)
!17627 = !{!17628, !17629, !17630}
!17628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17626, file: !472, line: 57, baseType: !475, size: 32)
!17629 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17626, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17630 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17626, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17631 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17623, file: !296, line: 5075, baseType: !17632, size: 64, offset: 96)
!17632 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17633)
!17633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17634)
!17634 = !{!17635}
!17635 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17633, file: !320, line: 232, baseType: !17636, size: 64)
!17636 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !17637)
!17637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !17638)
!17638 = !{!17639, !17645}
!17639 = !DIDerivedType(tag: DW_TAG_member, scope: !17637, file: !325, line: 38, baseType: !17640, size: 32)
!17640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17637, file: !325, line: 38, size: 32, elements: !17641)
!17641 = !{!17642, !17644}
!17642 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !17640, file: !325, line: 39, baseType: !17643, size: 32)
!17643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17637, size: 32)
!17644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17640, file: !325, line: 40, baseType: !17643, size: 32)
!17645 = !DIDerivedType(tag: DW_TAG_member, scope: !17637, file: !325, line: 42, baseType: !17646, size: 32, offset: 32)
!17646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17637, file: !325, line: 42, size: 32, elements: !17647)
!17647 = !{!17648, !17649}
!17648 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !17646, file: !325, line: 43, baseType: !17643, size: 32)
!17649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !17646, file: !325, line: 44, baseType: !17643, size: 32)
!17650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17623, file: !296, line: 5076, baseType: !17651, offset: 160)
!17651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17652 = !DILocation(line: 0, scope: !17616)
!17653 = !DILocation(line: 47, column: 10, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17616, file: !17617, line: 47, column: 6)
!17655 = !DILocation(line: 47, column: 6, scope: !17616)
!17656 = !DILocation(line: 49, column: 9, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17654, file: !17617, line: 47, column: 19)
!17658 = !DILocation(line: 53, column: 15, scope: !17657)
!17659 = !DILocation(line: 53, column: 3, scope: !17657)
!17660 = !DILocation(line: 56, column: 2, scope: !17657)
!17661 = !DILocation(line: 57, column: 1, scope: !17616)
!17662 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !17617, file: !17617, line: 124, type: !17663, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !17665)
!17663 = !DISubroutineType(types: !17664)
!17664 = !{!102, !204, !204}
!17665 = !{!17666, !17667, !17668, !17669}
!17666 = !DILocalVariable(name: "align", arg: 1, scope: !17662, file: !17617, line: 124, type: !204)
!17667 = !DILocalVariable(name: "size", arg: 2, scope: !17662, file: !17617, line: 124, type: !204)
!17668 = !DILocalVariable(name: "ret", scope: !17662, file: !17617, line: 126, type: !102)
!17669 = !DILocalVariable(name: "heap", scope: !17662, file: !17617, line: 127, type: !17622)
!17670 = !DILocation(line: 0, scope: !17662)
!17671 = !DILocation(line: 129, column: 6, scope: !17672)
!17672 = distinct !DILexicalBlock(scope: !17662, file: !17617, line: 129, column: 6)
!17673 = !DILocation(line: 129, column: 6, scope: !17662)
!17674 = !DILocation(line: 132, column: 10, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17672, file: !17617, line: 131, column: 9)
!17676 = !DILocation(line: 132, column: 20, scope: !17675)
!17677 = !DILocation(line: 135, column: 11, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17662, file: !17617, line: 135, column: 6)
!17679 = !DILocation(line: 135, column: 6, scope: !17662)
!17680 = !DILocation(line: 136, column: 9, scope: !17681)
!17681 = distinct !DILexicalBlock(scope: !17678, file: !17617, line: 135, column: 20)
!17682 = !DILocation(line: 137, column: 2, scope: !17681)
!17683 = !DILocation(line: 0, scope: !17678)
!17684 = !DILocation(line: 141, column: 2, scope: !17662)
!17685 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !17617, file: !17617, line: 12, type: !17686, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !17688)
!17686 = !DISubroutineType(types: !17687)
!17687 = !{!102, !17622, !204, !204}
!17688 = !{!17689, !17690, !17691, !17692, !17693, !17694}
!17689 = !DILocalVariable(name: "heap", arg: 1, scope: !17685, file: !17617, line: 12, type: !17622)
!17690 = !DILocalVariable(name: "align", arg: 2, scope: !17685, file: !17617, line: 12, type: !204)
!17691 = !DILocalVariable(name: "size", arg: 3, scope: !17685, file: !17617, line: 12, type: !204)
!17692 = !DILocalVariable(name: "mem", scope: !17685, file: !17617, line: 14, type: !102)
!17693 = !DILocalVariable(name: "heap_ref", scope: !17685, file: !17617, line: 15, type: !17621)
!17694 = !DILocalVariable(name: "__align", scope: !17685, file: !17617, line: 16, type: !204)
!17695 = !DILocation(line: 0, scope: !17685)
!17696 = !DILocation(line: 24, column: 6, scope: !17697)
!17697 = distinct !DILexicalBlock(scope: !17685, file: !17617, line: 24, column: 6)
!17698 = !DILocation(line: 24, column: 6, scope: !17685)
!17699 = !DILocation(line: 27, column: 18, scope: !17685)
!17700 = !DILocation(line: 29, column: 44, scope: !17685)
!17701 = !DILocation(line: 29, column: 8, scope: !17685)
!17702 = !DILocation(line: 30, column: 10, scope: !17703)
!17703 = distinct !DILexicalBlock(scope: !17685, file: !17617, line: 30, column: 6)
!17704 = !DILocation(line: 30, column: 6, scope: !17685)
!17705 = !DILocation(line: 34, column: 13, scope: !17685)
!17706 = !DILocation(line: 35, column: 12, scope: !17685)
!17707 = !DILocation(line: 36, column: 8, scope: !17685)
!17708 = !DILocation(line: 40, column: 2, scope: !17685)
!17709 = !DILocation(line: 41, column: 1, scope: !17685)
!17710 = distinct !DISubprogram(name: "size_add_overflow", scope: !17711, file: !17711, line: 47, type: !17712, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !17714)
!17711 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17712 = !DISubroutineType(types: !17713)
!17713 = !{!157, !204, !204, !2687}
!17714 = !{!17715, !17716, !17717}
!17715 = !DILocalVariable(name: "a", arg: 1, scope: !17710, file: !17711, line: 47, type: !204)
!17716 = !DILocalVariable(name: "b", arg: 2, scope: !17710, file: !17711, line: 47, type: !204)
!17717 = !DILocalVariable(name: "result", arg: 3, scope: !17710, file: !17711, line: 47, type: !2687)
!17718 = !DILocation(line: 0, scope: !17710)
!17719 = !DILocation(line: 49, column: 9, scope: !17710)
!17720 = !DILocation(line: 49, column: 2, scope: !17710)
!17721 = distinct !DISubprogram(name: "boot_banner", scope: !17722, file: !17722, line: 26, type: !3255, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3241, retainedNodes: !317)
!17722 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17723 = !DILocation(line: 34, column: 2, scope: !17721)
!17724 = !DILocation(line: 36, column: 1, scope: !17721)
!17725 = distinct !DISubprogram(name: "statics_init", scope: !2602, file: !2602, line: 21, type: !2608, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17726)
!17726 = !{!17727, !17728}
!17727 = !DILocalVariable(name: "unused", arg: 1, scope: !17725, file: !2602, line: 21, type: !2610)
!17728 = !DILocalVariable(name: "h", scope: !17729, file: !2602, line: 24, type: !17730)
!17729 = distinct !DILexicalBlock(scope: !17725, file: !2602, line: 24, column: 2)
!17730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17731, size: 32)
!17731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17732)
!17732 = !{!17733, !17739, !17745}
!17733 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17731, file: !296, line: 5074, baseType: !17734, size: 96)
!17734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17735)
!17735 = !{!17736, !17737, !17738}
!17736 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17734, file: !472, line: 57, baseType: !475, size: 32)
!17737 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17734, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17738 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17734, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17739 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17731, file: !296, line: 5075, baseType: !17740, size: 64, offset: 96)
!17740 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17741)
!17741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17742)
!17742 = !{!17743}
!17743 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17741, file: !320, line: 232, baseType: !17744, size: 64)
!17744 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2588)
!17745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17731, file: !296, line: 5076, baseType: !17746, offset: 160)
!17746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17747 = !DILocation(line: 0, scope: !17725)
!17748 = !DILocation(line: 0, scope: !17729)
!17749 = !DILocation(line: 24, column: 2, scope: !17729)
!17750 = !DILocation(line: 52, column: 2, scope: !17725)
!17751 = !DILocation(line: 49, column: 27, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !2602, line: 48, column: 3)
!17753 = distinct !DILexicalBlock(scope: !17754, file: !2602, line: 24, column: 36)
!17754 = distinct !DILexicalBlock(scope: !17729, file: !2602, line: 24, column: 2)
!17755 = !DILocation(line: 49, column: 45, scope: !17752)
!17756 = !DILocation(line: 49, column: 4, scope: !17752)
!17757 = !DILocation(line: 24, column: 2, scope: !17754)
!17758 = !DILocation(line: 24, column: 2, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17754, file: !2602, line: 24, column: 2)
!17760 = distinct !{!17760, !17749, !17761}
!17761 = !DILocation(line: 51, column: 2, scope: !17729)
!17762 = distinct !DISubprogram(name: "k_heap_init", scope: !2602, file: !2602, line: 13, type: !17763, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17765)
!17763 = !DISubroutineType(types: !17764)
!17764 = !{null, !17730, !102, !204}
!17765 = !{!17766, !17767, !17768}
!17766 = !DILocalVariable(name: "h", arg: 1, scope: !17762, file: !2602, line: 13, type: !17730)
!17767 = !DILocalVariable(name: "mem", arg: 2, scope: !17762, file: !2602, line: 13, type: !102)
!17768 = !DILocalVariable(name: "bytes", arg: 3, scope: !17762, file: !2602, line: 13, type: !204)
!17769 = !DILocation(line: 0, scope: !17762)
!17770 = !DILocation(line: 15, column: 19, scope: !17762)
!17771 = !DILocation(line: 15, column: 2, scope: !17762)
!17772 = !DILocation(line: 16, column: 20, scope: !17762)
!17773 = !DILocation(line: 16, column: 2, scope: !17762)
!17774 = !DILocation(line: 19, column: 1, scope: !17762)
!17775 = distinct !DISubprogram(name: "z_waitq_init", scope: !13853, file: !13853, line: 47, type: !17776, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17779)
!17776 = !DISubroutineType(types: !17777)
!17777 = !{null, !17778}
!17778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17740, size: 32)
!17779 = !{!17780}
!17780 = !DILocalVariable(name: "w", arg: 1, scope: !17775, file: !13853, line: 47, type: !17778)
!17781 = !DILocation(line: 0, scope: !17775)
!17782 = !DILocation(line: 49, column: 21, scope: !17775)
!17783 = !DILocation(line: 49, column: 2, scope: !17775)
!17784 = !DILocation(line: 50, column: 1, scope: !17775)
!17785 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17786, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17789)
!17786 = !DISubroutineType(types: !17787)
!17787 = !{null, !17788}
!17788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17744, size: 32)
!17789 = !{!17790}
!17790 = !DILocalVariable(name: "list", arg: 1, scope: !17785, file: !325, line: 197, type: !17788)
!17791 = !DILocation(line: 0, scope: !17785)
!17792 = !DILocation(line: 199, column: 8, scope: !17785)
!17793 = !DILocation(line: 199, column: 13, scope: !17785)
!17794 = !DILocation(line: 200, column: 8, scope: !17785)
!17795 = !DILocation(line: 200, column: 13, scope: !17785)
!17796 = !DILocation(line: 201, column: 1, scope: !17785)
!17797 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2602, file: !2602, line: 64, type: !17798, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17804)
!17798 = !DISubroutineType(types: !17799)
!17799 = !{!102, !17730, !204, !204, !17800}
!17800 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17801)
!17801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17802)
!17802 = !{!17803}
!17803 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17801, file: !201, line: 66, baseType: !200, size: 64)
!17804 = !{!17805, !17806, !17807, !17808, !17809, !17810, !17811, !17812, !17817}
!17805 = !DILocalVariable(name: "h", arg: 1, scope: !17797, file: !2602, line: 64, type: !17730)
!17806 = !DILocalVariable(name: "align", arg: 2, scope: !17797, file: !2602, line: 64, type: !204)
!17807 = !DILocalVariable(name: "bytes", arg: 3, scope: !17797, file: !2602, line: 64, type: !204)
!17808 = !DILocalVariable(name: "timeout", arg: 4, scope: !17797, file: !2602, line: 65, type: !17800)
!17809 = !DILocalVariable(name: "now", scope: !17797, file: !2602, line: 67, type: !202)
!17810 = !DILocalVariable(name: "end", scope: !17797, file: !2602, line: 67, type: !202)
!17811 = !DILocalVariable(name: "ret", scope: !17797, file: !2602, line: 68, type: !102)
!17812 = !DILocalVariable(name: "key", scope: !17797, file: !2602, line: 72, type: !17813)
!17813 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17814)
!17814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17815)
!17815 = !{!17816}
!17816 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17814, file: !316, line: 33, baseType: !103, size: 32)
!17817 = !DILocalVariable(name: "blocked_alloc", scope: !17797, file: !2602, line: 78, type: !157)
!17818 = !DILocation(line: 0, scope: !17797)
!17819 = !DILocation(line: 67, column: 21, scope: !17797)
!17820 = !DILocation(line: 70, column: 8, scope: !17797)
!17821 = !DILocation(line: 72, column: 41, scope: !17797)
!17822 = !DILocalVariable(name: "l", arg: 1, scope: !17823, file: !316, line: 136, type: !17826)
!17823 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17824, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17827)
!17824 = !DISubroutineType(types: !17825)
!17825 = !{!17813, !17826}
!17826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17746, size: 32)
!17827 = !{!17822, !17828}
!17828 = !DILocalVariable(name: "k", scope: !17823, file: !316, line: 139, type: !17813)
!17829 = !DILocation(line: 0, scope: !17823, inlinedAt: !17830)
!17830 = distinct !DILocation(line: 72, column: 25, scope: !17797)
!17831 = !DILocation(line: 55, column: 2, scope: !17832, inlinedAt: !17836)
!17832 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5818, file: !5818, line: 42, type: !5819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17833)
!17833 = !{!17834, !17835}
!17834 = !DILocalVariable(name: "key", scope: !17832, file: !5818, line: 44, type: !32)
!17835 = !DILocalVariable(name: "tmp", scope: !17832, file: !5818, line: 53, type: !32)
!17836 = distinct !DILocation(line: 145, column: 10, scope: !17823, inlinedAt: !17830)
!17837 = !{i64 2278874}
!17838 = !DILocation(line: 0, scope: !17832, inlinedAt: !17836)
!17839 = !DILocation(line: 81, column: 9, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17797, file: !2602, line: 80, column: 22)
!17841 = !DILocation(line: 83, column: 9, scope: !17840)
!17842 = !DILocation(line: 85, column: 12, scope: !17843)
!17843 = distinct !DILexicalBlock(scope: !17840, file: !2602, line: 84, column: 7)
!17844 = !DILocation(line: 85, column: 21, scope: !17843)
!17845 = !DILocation(line: 85, column: 30, scope: !17843)
!17846 = !DILocation(line: 85, column: 37, scope: !17843)
!17847 = !DILocation(line: 84, column: 7, scope: !17840)
!17848 = !DILocation(line: 99, column: 10, scope: !17840)
!17849 = !DILocation(line: 0, scope: !17823, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 101, column: 9, scope: !17840)
!17851 = !DILocation(line: 55, column: 2, scope: !17832, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 145, column: 10, scope: !17823, inlinedAt: !17850)
!17853 = !DILocation(line: 0, scope: !17832, inlinedAt: !17852)
!17854 = distinct !{!17854, !17855, !17856}
!17855 = !DILocation(line: 80, column: 2, scope: !17797)
!17856 = !DILocation(line: 102, column: 2, scope: !17797)
!17857 = !DILocalVariable(name: "key", arg: 2, scope: !17858, file: !316, line: 190, type: !17813)
!17858 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17859, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17861)
!17859 = !DISubroutineType(types: !17860)
!17860 = !{null, !17826, !17813}
!17861 = !{!17862, !17857}
!17862 = !DILocalVariable(name: "l", arg: 1, scope: !17858, file: !316, line: 189, type: !17826)
!17863 = !DILocation(line: 0, scope: !17858, inlinedAt: !17864)
!17864 = distinct !DILocation(line: 106, column: 2, scope: !17797)
!17865 = !DILocalVariable(name: "key", arg: 1, scope: !17866, file: !5818, line: 84, type: !32)
!17866 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5818, file: !5818, line: 84, type: !5829, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17867)
!17867 = !{!17865}
!17868 = !DILocation(line: 0, scope: !17866, inlinedAt: !17869)
!17869 = distinct !DILocation(line: 215, column: 2, scope: !17858, inlinedAt: !17864)
!17870 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !17869)
!17871 = !{i64 2279691}
!17872 = !DILocation(line: 107, column: 2, scope: !17797)
!17873 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2602, file: !2602, line: 110, type: !17874, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17876)
!17874 = !DISubroutineType(types: !17875)
!17875 = !{!102, !17730, !204, !17800}
!17876 = !{!17877, !17878, !17879, !17880}
!17877 = !DILocalVariable(name: "h", arg: 1, scope: !17873, file: !2602, line: 110, type: !17730)
!17878 = !DILocalVariable(name: "bytes", arg: 2, scope: !17873, file: !2602, line: 110, type: !204)
!17879 = !DILocalVariable(name: "timeout", arg: 3, scope: !17873, file: !2602, line: 110, type: !17800)
!17880 = !DILocalVariable(name: "ret", scope: !17873, file: !2602, line: 114, type: !102)
!17881 = !DILocation(line: 0, scope: !17873)
!17882 = !DILocation(line: 114, column: 14, scope: !17873)
!17883 = !DILocation(line: 118, column: 2, scope: !17873)
!17884 = distinct !DISubprogram(name: "k_heap_free", scope: !2602, file: !2602, line: 121, type: !17885, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !17887)
!17885 = !DISubroutineType(types: !17886)
!17886 = !{null, !17730, !102}
!17887 = !{!17888, !17889, !17890}
!17888 = !DILocalVariable(name: "h", arg: 1, scope: !17884, file: !2602, line: 121, type: !17730)
!17889 = !DILocalVariable(name: "mem", arg: 2, scope: !17884, file: !2602, line: 121, type: !102)
!17890 = !DILocalVariable(name: "key", scope: !17884, file: !2602, line: 123, type: !17813)
!17891 = !DILocation(line: 0, scope: !17884)
!17892 = !DILocation(line: 0, scope: !17823, inlinedAt: !17893)
!17893 = distinct !DILocation(line: 123, column: 25, scope: !17884)
!17894 = !DILocation(line: 55, column: 2, scope: !17832, inlinedAt: !17895)
!17895 = distinct !DILocation(line: 145, column: 10, scope: !17823, inlinedAt: !17893)
!17896 = !DILocation(line: 0, scope: !17832, inlinedAt: !17895)
!17897 = !DILocation(line: 125, column: 20, scope: !17884)
!17898 = !DILocation(line: 125, column: 2, scope: !17884)
!17899 = !DILocation(line: 128, column: 60, scope: !17900)
!17900 = distinct !DILexicalBlock(scope: !17884, file: !2602, line: 128, column: 6)
!17901 = !DILocation(line: 128, column: 43, scope: !17900)
!17902 = !DILocation(line: 128, column: 68, scope: !17900)
!17903 = !DILocation(line: 128, column: 6, scope: !17884)
!17904 = !DILocation(line: 123, column: 41, scope: !17884)
!17905 = !DILocation(line: 129, column: 3, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17900, file: !2602, line: 128, column: 74)
!17907 = !DILocation(line: 130, column: 2, scope: !17906)
!17908 = !DILocation(line: 0, scope: !17858, inlinedAt: !17909)
!17909 = distinct !DILocation(line: 131, column: 3, scope: !17910)
!17910 = distinct !DILexicalBlock(scope: !17900, file: !2602, line: 130, column: 9)
!17911 = !DILocation(line: 0, scope: !17866, inlinedAt: !17912)
!17912 = distinct !DILocation(line: 215, column: 2, scope: !17858, inlinedAt: !17909)
!17913 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !17912)
!17914 = !DILocation(line: 133, column: 1, scope: !17884)
